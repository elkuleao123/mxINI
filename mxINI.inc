#include <a_samp>

#include <regex>
#include <streamer>

new letters_generation[32][] = {"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y","Z","2", "3", "4", "5", "6", "7"};

new TDACTION_ITEMSNUMS[MAX_PLAYERS][10],
	Float:TDprrot[PlayerText:MAX_PLAYER_TEXT_DRAWS][4];

new Shot_AntiGM_Total[MAX_PLAYERS], 
	Float: OldArmour[MAX_PLAYERS], 
	Float: OldHealth[MAX_PLAYERS];

enum pData_e
{
	pID, pMinePr, casino_amount, newbiz_Pay, unikauto_Have, bool:pRec, pPS, pReferID, p_time1[2], Float:p_hp,
	bool:pHelper, cancellation_bill_reason[50], pColorPhone, p_time2[2], autoHave, kiosk_have, food_have, prok_have, pStatusGoogle, pHungry,
	fam_moder, pStyle, pRefer[MAX_PLAYER_NAME], pQuestPR, strengh_today, pVotedVibor, pAdmMember, pAdmJob, ConfirmEmail, pMineNumber,
	pLowSkill, pWorkSkill[2], pHighSkill, pSecCode, GoogleCod[17], pCode, pApass, familyID, pPunish, pPayKey[32],
	pName[MAX_PLAYER_NAME], pKey[65], pLevel, pAdmin, pIP[16], pIpReg[16], pDataReg[32], pAptech, pMasks, t_wheel[3],
	t_hydraulics[3], t_stereo[3], t_paintjob[3], t_neon_num[3], t_color_1[3], t_color_2[3], pRubDonate, pCar[3], pFlat, p_rent_flat,
	createPromoName[17], bool:in_capture, pMetal, pSex, pExp, pCash, pLogOff, pPayCheck, pJailTime, pDrugs,
	pLeader, pMember, pRank, pChar, pJob, pModel, pPnumber, pLicenses[4], pHouse, pBusiness,
	bool:pPayAcc, pFilling, pInGameTime, bool:cancellation_bill, p_car_cash[3], pZakonp, pSkill[11], pWarns, punWarnstime, pMarried,
	pMuteTime, pBank, pWanted, pRobTime, bool:pPassport, pRubDonateTotal, bool:pLogin, pSpawn, SalonInfo, pFamilyName[24],
	pPatr, pContract, for_ul_pGun[13], for_ul_pAmmo[13], pUnUlGun[2], FuelCar[3], p_bill_id, pRub, pMuteTime_R, p_setting[9],
	p_desc[128], Text3D:p_desc_textid, pCashNumber, pMedCard, p_style[3], Un_CarType[3], p_strengh, p_premium, p_premium_days, pPrisonTime,
	pLoadName[24], pSiga, pSpal, pSgf, pEmail[40], ArmyRank[32], bool:ArmyPlay, pSuperKey[64], pKeylog, pTime,
	adm_good_rate, adm_bad_rate, pHotel, have_garage, pWeapons[13], pAmmos[13], allhours, bool:pPromoUsed
};
new pData[MAX_PLAYERS][pData_e];

new Text:gps_TD[7],
	Text:animinfo_TD[5],
	Text:preloadTD[6],
	Text:badgeTD[9];

new timesec;

new auth_camstate[MAX_PLAYERS];

static const stock phone_color[] = {-15, -56798, -26351, -8934827, -14540033, -3387137};

new format_string[144];
#include <defines>
#include <fixobject> // Tengo que irme despu√©s defines

#include <md5>
#include <mxdate>
#include <mxINI>
#include <sscanf2>
#include <geolocation>
#include <a_mysql>
#include <progress2>
#include <FIX_PutPlayerInVeh>
#include <fix_SetPlayerSkin>
#include <tdw_vxneon>

#include <crashdetect>
// #include <profiler>

#define FOREACH_I_Character 0
#define FOREACH_I_Vehicle 0
#define FOREACH_I_Actor 0
#include <foreach>
#include <TOTP>
#include <nex-ac+pickfix>
#include <Pawn.CMD>
#include <a_actor>

new auth_objs[2];

new timer_strobocop[MAX_VEHICLES],
	bool:status_strobocop[MAX_VEHICLES],
	count_strobrscop[MAX_VEHICLES];

new install_market_obj[MAX_PLAYERS][5];
new PlayerText: BUTTON_BUY_MARKET[MAX_PLAYERS][5];

new cexEnter,cexExit;

enum mysql_vars
{
	_host,
	_username,
	_password,
	_database
}
new mysql_settings[mysql_vars][30];

new prods_factory;

new PlayerText:affectTD[MAX_PLAYERS];

new boneitem[9][5],
	Float:osetX[9][5],
	Float:osetY[9][5],
	Float:osetZ[9][5],
	Float:itemfRotX[9][5],
	Float:itemfRotY[9][5],
	Float:itemfRotZ[9][5],
	Float:fitemScaleX[9][5],
	Float:fitemScaleY[9][5],
	Float:fitemScaleZ[9][5];

new workzavod[MAX_PLAYERS];

new uprav_stateprez;

new patrtimer[MAX_PLAYERS];

new factoryobject[MAX_PLAYERS];

new slotbet[MAX_PLAYERS];

new PlayerText:tmp_ptID_acs[MAX_PLAYERS];

new bool:in_buymenu_market[MAX_PLAYERS];
new PlayerText:market_player_TD[MAX_PLAYERS][41],
	PlayerText:INFO_market_player_TD[MAX_PLAYERS][10];

new jailfree;

new gpsicon[MAX_PLAYERS];

new changecolor_pic;

new electionname[25];

new bpost[2];

new gpssphere[MAX_PLAYERS];

new TOTAL_FAMILYS;

new new_playerammo[MAX_PLAYERS],
	playerammo[MAX_PLAYERS];

enum eDetailInfo
{
	eObjectID,
	eObject,
	eCategory,
	Float:ePos[3],
	Float:eRot[3]
};

new bool:blinded[MAX_PLAYERS],
	Text:blind_TD;

new table1[MAX_PLAYERS], //Punto de control por defecto
	table2[MAX_PLAYERS], //Punto de control por defecto
	table3[MAX_PLAYERS], //Punto de control por defecto
	table4[MAX_PLAYERS], //Punto de control por defecto
	table5[MAX_PLAYERS], //Punto de control por defecto
	table6[MAX_PLAYERS], //Punto de control por defecto
	table7[MAX_PLAYERS], //Punto de control por defecto
	table8[MAX_PLAYERS], //Punto de control por defecto
	table9[MAX_PLAYERS], //Punto de control por defecto
	table10[MAX_PLAYERS], //Punto de control por defecto
	factorystorage; //el desarrollo del proceso

new zavodwork;

new af_player_cptype[MAX_PLAYERS];
new train[3], Text3D:traintext[MAX_VEHICLES] = {Text3D:INVALID_3DTEXT_ID, ...};

new Text3D: rinok_3d[9], rinok_pick[9];
new PlayerText:inv_previewUSED[MAX_PLAYERS][6];

new kiosk_buy_pic;
new af_player_detailcount[MAX_PLAYERS];
new af_player_obj[MAX_PLAYERS];

new af_cpnum[MAX_PLAYERS];
new Text: inv_clickingTD[26];
new autoworkOwner,unikautoOwner;

new table_bet_amount[8],
	table_players_amount[8],
	table_playerid[8][4],
	table_ticks[8]={30,...};
new PlayerText:table_TD[MAX_PLAYERS][19];

new skillgun[MAX_PLAYERS][11];
new skillup_count[11] = {27,17,14,8,22,34,25,36,37,39,47};

new SaluteColorTypes[] = {19122,19123,19124,19125,19126,19127};
enum Salutes
{
Float:height,
Float:SaluteLeanDir,
	SaluteStatus,
	SaluteExplType,
	SaluteObject,
Float:SaluteExplSize,
Float:SaluteClimeSpeed,
Float:SaluteWindOffset,
bool:SaluteInUse
}
new Salut[MAX_OBJECTS][Salutes];
enum Saluts
{
	Salute,
	SaluteTimer,
	SaluteBox,
bool:SaluteUse,
Float:SalutePos[3]
};

new SALUTEINFOS[MAX_SALUTE][Saluts];

new zavodm;

new zavodinfo;

new g_iVehicleDetails[MAX_VEHICLES][MAX_DETAILS_ON_VEHICLE][eDetailInfo];

new markauto[3][5][15],
	markcarid[3][5],
	Text3D:mark3d[3][5];

new Text: usedinvClicking[6];

new Float:lego_editobjX[MAX_PLAYERS],
	Float:lego_editobjY[MAX_PLAYERS],
	Float:lego_editobjZ[MAX_PLAYERS],
	Float:lego_editRX[MAX_PLAYERS],
	Float:lego_editRY[MAX_PLAYERS],
	Float:lego_editRZ[MAX_PLAYERS];

new voenk_enter,
	voenk_exit;

new is_work_casino[MAX_PLAYERS];

new AffectTime,bool:AffectInfo;

new tirzone;

new maf_zone[29]={0,...};

new pack_name[6][32],pack_amount[6];

new barrackexit;
new unikbankCount;
new typeitem[9][5],
	modelitem[9][5],
	priceitem[9][5],
	countitem[9][5],

	indexmark[9][5],
	Float:acsRotX[9][5],
	Float:acsRotY[9][5],
	Float:acsRotZ[9][5],
	Float:acsZoom[9][5],
	bool:item_is_Accessory[9][5],
	bool:item_is_Skin[9][5];

new marketname[9][5][32];

new bus_text1[14],
	bus_text2[14];

new bool:in_slot[MAX_PLAYERS];

new wantedpic;

new gatebar_timer_1,
	gatebar_timer_2;

new PlayerBar: health_bar[MAX_PLAYERS], 
	PlayerBar: armour_bar[MAX_PLAYERS];

new dop_quest[MAX_PLAYERS];

new voenk_work;

new g_szVehicleCategories[][17] = {"Usuario", "Barrios", "Parachoques delanteros", "Parachoques traseros", "Vapor", "Otro"};

new bool:apdoor_status[8],
	apdoor_obj[8];

new ashint_door,
	bool:ashint_door_status;

new casinopic;

new cheatpanelText[2][12][7],
	Text:cheatpanelTD[2];

new tmpobj_bomb[MAX_PLAYERS];
new g_iVehicleComponents[][MAX_DETAILS_IN_CATEGORY] = 
{
	{1002, 1003, 1014, 1015, 1016, 1163, 1139, 1146, 1023, 1001, 1000, 0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0 ,0 ,0 ,0 ,0 ,0},
	{1047, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ,0 ,0 ,0 ,0 , 0, 0, 0, 0},
	{1189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ,0 ,0 ,0 ,0 , 0, 0, 0, 0},
	{1148, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ,0 ,0 ,0 ,0 , 0, 0, 0, 0},
	{1114, 1113, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ,0 ,0 ,0 ,0 , 0, 0, 0, 0},
	{954, 1954, 1958, 2045, 18749, 18963, 18977, 18978, 19078, 19317, 
	19318, 19319, 19151, 19152, 19153, 19154, 19155, 19156, 1609, 19059, 
	19060, 19061 ,957 ,1518 ,1839 ,1840 , 1851, 2061, 2913, 2922, 
	1316, 19306, 19307, 2993}
};

new bigint_exit,
	bigint_enter;

new centrbank_enter,
	centrbank_exit;

new inventory_open[MAX_PLAYERS];

new Text3D: af_tmp_text[MAX_PLAYERS];

new Text: new_global_speedTD[14];
new PlayerText: new_player_speedTD[MAX_PLAYERS][7];

new g_iVehicleIDObject[MAX_PLAYERS];
new g_iVehicleCarID[MAX_PLAYERS];

new statrate_meria, rate_meria;

new bool:having_case_red[MAX_PLAYERS];

new Unik_Obj[MAX_VEHICLES][22];

new slots_value[MAX_PLAYERS][3];
new slot_casino_info;

new selleritemid[9];

new report_date[MAX_PLAYERS][20];

new bool:af_player_lootstatus[MAX_PLAYERS];
new nojump[2];
new bool: af_load[MAX_PLAYERS];
new lesop_start;
enum e_garage {
	bool: gbuyed,
	ownerID,
	ownerNAME[24],
	gdays,
	Float: grposition[3],
	Float: gcarpos[4]
}
new garage[13][e_garage];
new army_guns;

new Text3D:factoryprods[2];

enum faminfo {
	_fam_name[30],
	_fam_date[15],
	_fam_owner[MAX_PLAYER_NAME],
	_fam_colorid,
	_fam_members
}

new family_info[MAX_FAMILYS][faminfo];
stock get_family_color(family)
{
	new color;
	switch(family_info[family][_fam_colorid])
	{
		case 0: color=0xFFCF40FF;
		case 1: color=0xFF7A5CFF;
		case 2: color=0xDC9D00FF;
		case 3: color=0x08E8DEFF;
		case 4: color=0x7FC7FFFF;
		case 5: color=0x66FF99FF;
		case 6: color=0x911E42FF;
		case 7: color=0xADFF2FFF;
		case 8: color=0xFF496CFF;
		case 9: color=0x669900FF;
	}
	return color;
}

new PlayerText:casino_slotTD[MAX_PLAYERS][27];

main() {}

new PlayerText: inv_previewTD[MAX_PLAYERS][20],
	PlayerText: td_inv_counts[MAX_PLAYERS][20];

new bool: af_player_status[MAX_PLAYERS];
new Text: TD_live_tv[5];
new autoBankCount;
new bool:bomb[MAX_PLAYERS];

new bool:status_trains;

new af_orig_truck[2];

new charity_pic;

new ashdoor;

enum GP_DATA
{
	g_modelid,
	g_boneid,

	Float:g_fOffsetX,
	Float:g_fOffsetY,
	Float:g_fOffsetZ,

	Float:g_fRotX,
	Float:g_fRotY,
	Float:g_fRotZ,

	Float:g_fScaleX,
	Float:g_fScaleY,
	Float:g_fScaleZ,

	acs_color_type,
	g_COLOR1,
	g_COLOR2
}

new af_hprem[MAX_PLAYERS];

new int_krisha_pic;

new bolkkrishals,
	bolkkrishasf,
	bolkkrishalv;

static stock PLAYER_AO[MAX_PLAYERS][MAX_PLAYER_ATTACHED_OBJECTS][GP_DATA];

new mayak;
new slots_amount[MAX_PLAYERS];

new af_carID[MAX_PLAYERS];

new zalenter,
	zalexit;

new af_fuel_types[16][7];
new af_fuel_types_num[16];

new color_current_weapon[MAX_PLAYERS];

new color_gun_deagle[MAX_PLAYERS],
	color_gun_shotgun[MAX_PLAYERS],
	color_gun_ak47[MAX_PLAYERS],
	color_gun_m4[MAX_PLAYERS];

new af_carList[MAX_PLAYERS];

enum i_info {
	i_count[26], // kol-vo
	i_type[26], // escribe
	bool: is_click[26], // asignado o espacio
	i_clickID, // id ranura separada

	in_aindex[26],
	in_amodel[26],
	Float:in_apx[26],
	Float:in_apy[26],
	Float:in_apz[26],
	Float:in_azoom[26],

	in_bone[26],
	Float:in_offsX[26],
	Float:in_offsY[26],
	Float:in_offsZ[26],
	Float:in_afrotX[26],
	Float:in_afrotY[26],
	Float:in_afrotZ[26],
	Float:in_afscaleX[26],
	Float:in_afscaleY[26],
	Float:in_afscaleZ[26]
};
new unikPicAuto;
new Text3D:unik3dtext;
new inv_info[MAX_PLAYERS][i_info];

enum itemsinfo {
	itemmodel,
	itemname[32],
	itemmass,
	Float: itemrotX,
	Float: itemrotY,
	Float: itemrotZ,
	Float: itemzoom,
	itemdescription[128]
}
static const stock item_data[9][itemsinfo] = {
	{19998,"Hajigalk",1,-15.000000,0.000000,45.000000,1.800000,"\nSirve para configurar el detector\n"},
	{19897,"El comienzo comenzar√°",1,65.000000,45.000000,0.000000,0.900000,""},
	{11746,"Recogida autom√°tica",1,0.000000,-65.000000,180.000000,1.000000,"\nUtilizado para bloqueos de tr√°fico confiable\n"},
	{19513,"Elephone",1,90.000000,180.000000,0.000000,1.450000,"\nSe utiliza para realizar llamadas y enviar mensajes SMS.\n"},
	{11736,"Delineador de ojos",1,90.000000,0.000000,0.000000,1.450000,"\nUtilizado para un tratamiento f√°cil\n"},
	{19801,"Cera",1,180.000000,180.000000,90.000000,1.500000,"\nSe utiliza para enmascarar y limpiar la ubicaci√≥n.\n"},
	{2226,"Magnet√≥fono",2,0.000000,0.000000,180.000000,1.450000,"\nSe utiliza para la reproducci√≥n de pistas o radio.\n"},
	{1650,"Dep√≥sito de combustible",5,0.000000,0.000000,180.000000,1.450000,"\nSe utiliza para repostar el tanque de combustible del autom√≥vil.\n"},
	{1934,"Ishki",1,0.000000, 0.000000, 0.000000, 1.000000,"\nUtilizado para ig en kazino\n"}
};

enum markInfo {
	Float: markX,
	Float: markY,
	Float: markZ
}

static const stock posMarket[9][markInfo] = {
	{1325.1499,-1436.4910,13.5170}, 
	{1313.1348,-1433.3606,13.5170},
	{1303.6299,-1433.3606,13.5170},
	{1293.2640,-1433.3606,13.5170},
	{1287.3495,-1429.4486,13.5170},
	{1293.0170,-1423.4147,13.5170},
	{1300.5380,-1423.4147,13.5170},
	{1310.8375,-1423.4147,13.5170},
	{1317.8936,-1423.4147,13.5170}
};

stock GetFirstInvSlot(playerid) {
	for(new i = 0; i < MAX_INV_SLOTS; ++ i) {
	    if(inv_info[playerid][i_type][i] == -1) {
	        return i;
	    }
	}
	return -1;
}
stock GetFirstSlotInvUsed(playerid) {
	for(new i = 20; i < 26; ++ i) {
	    if(inv_info[playerid][i_type][i] == -1) {
	        return i;
	    }
	}
	return -1;
}

new bool: af_player_loadready[MAX_PLAYERS];
new PlayerText:td_acs_items[MAX_PLAYERS][35];

new Text3D:autoworkbiz3D;

new WeaponColors[5] = {
	0xFFFFF91A, //amarillo
	0xFFDF1112, //rojo
	0xFF230D87, //azul
	0xFF3DC511, //verde
	0xFF9B09B3, //Violeta
};

new MegaphoneSounds[][] = {
    {"9605,Give up. You are surrounded"},
    {"9612,We know you are in there"},
    {"10200,Hey you! Police. Stop"},
    {"15800,This is the Los Santos Police Department; Stay where you are"},
    {"15801,Freeze! Or we will open fire"},
    {"15802,Go! Go! Go"},
    {"34402,Police! Do not move"},
    {"34403,Get outta the car with your hands in the air"},
    {"15825,LSPD. Stop right... are you insane? You will kill us all"}
};

new pick_kiosk_1, pick_kiosk_2, pick_kiosk_3, pick_kiosk_4;
new pick_prok_1, pick_prok_2, pick_prok_3, pick_prok_4, pick_prok_5, pick_prok_6, pick_prok_7;
new npc_prokat_1, npc_prokat_2, npc_prokat_3, npc_prokat_4, npc_prokat_5, npc_prokat_6, npc_prokat_7;

new time_server;
new mass_enter, mass_exit;
new bool: is_yarder[MAX_PLAYERS];
new first_obj_flat[MAX_PLAYERS], last_obj_flat[MAX_PLAYERS];
new bool: amg_mode[MAX_VEHICLES];

new af_objcar[MAX_VEHICLES][5];

new Text: alcotd[18];

CB: ACAC_GivePlayerWeapon(playerid, weaponid, ammo) {
	new bool: no_color_gun, weapid, ammos;

	for(new i = 0; i <= 12; i ++) {
		GetPlayerWeaponData(playerid, i, weapid, ammos);
		if(weapid != 24) continue;
		no_color_gun = true;
	}
	if(!no_color_gun) {
		color_gun_deagle[playerid] = -1;
		UpdatePlayerData(playerid, "color_gun_deagle", -1);
	}
	no_color_gun = false;

	for(new i = 0; i <= 12; i ++) {
		GetPlayerWeaponData(playerid, i, weapid, ammos);
		if(weapid != 25) continue;
		no_color_gun = true;
	}
	if(!no_color_gun) {
		color_gun_shotgun[playerid] = -1;
		UpdatePlayerData(playerid, "color_gun_shotgun", -1);
	}
	no_color_gun = false;

	for(new i = 0; i <= 12; i ++) {
		GetPlayerWeaponData(playerid, i, weapid, ammos);
		if(weapid != 30) continue;
		no_color_gun = true;	
	}
	if(!no_color_gun) {
		color_gun_ak47[playerid] = -1;
		UpdatePlayerData(playerid, "color_gun_ak47", -1);
	}
	no_color_gun = false;

	for(new i = 0; i <= 12; i ++) {
		GetPlayerWeaponData(playerid, i, weapid, ammos);
		if(weapid != 31) continue;
		no_color_gun = true;
	}
	if(!no_color_gun) {
		color_gun_m4[playerid] = -1;
		UpdatePlayerData(playerid, "color_gun_m4", -1);
	}

	return 1;
}

new 
	pos_Jkey, 
	pos_Jcard;

new menu_cent_bank;
new oplata_bank_cent;
new help_cent_bank;
new help_mebel;
new boost_lspdcar, 
    boost_sfpdcar, 
    boost_lvpdcar
;
new bool: car_places[20];
new bool: FLAT_car_places[10];
new hotel_lift_pick, hotel_lift_pick_2;
new elegy_car,infernus_car,bullet_car,turismo_car,perennial_car,bulletsecond_car,infsecond_car,zr_car,sandcar1,sandcar2;
new allmeds, automed;
new bulletboostls, 
    bulletboostsf, 
    bulletboostlv
;
new prokat_num[MAX_PLAYERS];

new af_player_details[MAX_PLAYERS];
new af_player_carmodel[MAX_PLAYERS], 
	af_player_fueltype[MAX_PLAYERS];

new AF_startpic;
enum mE_Info {
	mObjModel,
	mObjName[40],
	mHouseID,
	mObjectID,
	Float: mPX,
	Float: mPY,
	Float: mPZ,
	Float: mRX,
	Float: mRY,
	Float: mRZ
}
new mebel_info[MAX_MEBEL][mE_Info];
new total_count_mebel;
new tmp_o_install[MAX_PLAYERS];

new colored_guns_maf;

new fbi_door_status_1,
	fbi_door_status_2,
	fbi_door_status_3,
	fbi_door_status_4,
	fbi_door_status_5,
	fbi_door_status_6,
	fbi_door_1, 
	fbi_door_2, 
	fbi_door_3,
	fbi_door_4,
	fbi_door_5,
	fbi_door_6,

	SMI_door_1,
	SMI_door_2,
	SMI_door_status_1,
	SMI_door_status_2, 

	maf_obj_door_1,
	maf_obj_door_2,
	maf_obj_door_3,
	maf_door_status_1,
	maf_door_status_2,
	maf_door_status_3,

	PD_obj_door_1ls,
	PD_obj_door_2ls,
	PD_obj_door_3ls,
	PD_door_status_1ls,
	PD_door_status_2ls,
	PD_door_status_3ls,

	PD_obj_door_1sf,
	PD_obj_door_2sf,
	PD_obj_door_3sf,
	PD_door_status_1sf,
	PD_door_status_2sf,
	PD_door_status_3sf,

	PD_obj_door_1lv,
	PD_obj_door_2lv,
	PD_obj_door_3lv,
	PD_door_status_1lv,
	PD_door_status_2lv,
	PD_door_status_3lv;

new prokurornpc[MAX_PLAYERS], sudyanpc[MAX_PLAYERS], sekrnpc[MAX_PLAYERS], sitnpc_sud1[MAX_PLAYERS], sitnpc_sud2[MAX_PLAYERS];

new PlayerText: alcatraztext[MAX_PLAYERS];
new fillobj_id[MAX_FUEL][13];
new place_coeff[MAX_PLAYERS];
new FLAT_place_coeff[MAX_PLAYERS];

new Text3D: mafia_vi_LCN, Text3D: mafia_vi_YAK, Text3D: mafia_vi_RUS,
	lcn_salary, yak_salary, rus_salary;

new Text: alttd;
new hotel_enter[MAX_PLAYERS];
new Text: arrest[9], Text: alcatraz[7];
new pic_prokat_1, pic_prokat_2, pic_prokat_3, pic_prokat_4, pic_prokat_5, pic_prokat_6, pic_prokat_7;
new hotel_reg_pick;
new meriiorug_pick_exit, meriiorug_pick_enter;
new rentID[MAX_VEHICLES] = {-1,...}, 
bool: td_prokat_used[MAX_PLAYERS], prokat_choose[MAX_PLAYERS], prokat_price[MAX_PLAYERS];
new total_hotels;
new hotel_pick;
new weather_server = 1;
new PlayerText: text_selectskin[MAX_PLAYERS];
new good_sotr;
new bool: in_alcMenu[MAX_PLAYERS];
new bool:BIZin_alcMenu[MAX_PLAYERS];

new auth_actor[MAX_PLAYERS];

new faggio_bomj[2];
new food1OwnerID, food2OwnerID, food1Bank, food2Bank;
new kiosk1_owner, kiosk2_owner, kiosk3_owner, kiosk4_owner;
new kiosk1_bank, kiosk2_bank, kiosk3_bank, kiosk4_bank;
new prok1_owner, prok2_owner, prok3_owner, prok4_owner, prok5_owner, prok6_owner, prok7_owner;
new prok1_bank, prok2_bank, prok3_bank, prok4_bank, prok5_bank, prok6_bank, prok7_bank;

new workcasino;

new Text3D: food_bomj3d, Text3D: food_bomj3d_2;
new bank_exits;
new bool: set_boost_by_adm[MAX_VEHICLES], bool: set_brake_by_adm[MAX_VEHICLES];
new p_car_charact_1[MAX_PLAYERS][20], p_car_charact_2[MAX_PLAYERS][20], p_car_charact_3[MAX_PLAYERS][20];
new bool: prop_see[MAX_PLAYERS], prop_int[MAX_PLAYERS], prop_vw[MAX_PLAYERS];
new Float: prop_posX[MAX_PLAYERS], Float: prop_posY[MAX_PLAYERS], Float: prop_posZ[MAX_PLAYERS];
new Text: rec_td[29];
new Text3D: prok_info_1, 
	Text3D: prok_info_2, 
	Text3D: prok_info_3, 
	Text3D: prok_info_4, 
	Text3D: prok_info_5, 
	Text3D: prok_info_6, 
	Text3D: prok_info_7
;
new Text3D: kiosk_info_1, 
	Text3D: kiosk_info_2, 
	Text3D: kiosk_info_3, 
	Text3D: kiosk_info_4
;
new PlayerText: prokattd_p[MAX_PLAYERS][5];
new Text: prokattd[8];
new proppick_house, proppick_business, Text3D: prop_info, prop_info_cp, prop_info_pic;

new model_its_acs[MAX_PLAYERS][35];
new price_its_acs[MAX_PLAYERS];
new type_its_acs[MAX_PLAYERS];

new Text: chskin_box, PlayerText: chskin_td[MAX_PLAYERS][16];
new Iterator: Reports<50>;
new bool: fuelcan_buyed[MAX_PLAYERS];
new new_rank_name[29][10][31];
new numplate_buy;
new menuAsh;
new bool: selfie_sended[MAX_PLAYERS];
new veh_charact[MAX_VEHICLES][7];
new alco_pick;
new bool: stopped_capture, stopping_mes[128];
new boost_veh_lvl[MAX_VEHICLES], braking_veh_lvl[MAX_VEHICLES];
new bool: attempt_google_n[MAX_PLAYERS];
new flat_icon;
new air_lsenter, air_lsexit, air_L_lsenter, air_L_lsexit, 
air_sfenter, air_sfexit, air_L_sfenter, air_L_sfexit,
air_lventer, air_lvexit, air_L_lventer, air_L_lvexit;
new mafia_object[MAX_PLAYERS], Text3D: mafia_object_text[MAX_PLAYERS];
new prtex_info;
new blow_num[MAX_PLAYERS];
new Text: tune_td[55];
new bool: lego_en[MAX_PLAYERS], lego_countobj[MAX_PLAYERS], lego_objid[MAX_PLAYERS][50];
new turn_timer[MAX_PLAYERS];

new g_Blocker[15];

new pay_n_spray[9];
new Float: array_pay_n_spray[9][3] = {
    {1024.9003, -1023.3871, 32.1016},
    {487.3483, -1740.7823, 11.1315},
    {2064.3767, -1831.3647, 13.5469},
    {-1904.3807, 285.6824, 41.0469},
    {-2425.9033, 1020.3412, 50.3977},
    {1976.1006, 2162.3953, 11.0703},
    {720.1819, -455.3538, 16.3359},
    {-1420.6368, 2583.3416, 55.8433},
    {-99.9304, 1120.1376, 19.7417}
};

new info_pirot;
new alco_pick_maf, med_maf;
new tune_pick;
new bool: in_menutune[MAX_PLAYERS];
new bool: anims_loaded[MAX_PLAYERS];
new blow_object[MAX_PLAYERS][3];

new TOTAL_ELEMENT_MEBEL;
new elmebel_name[300][50],
	elmebel_price[300], 
	elmebel_idobj[300], 
	Float: elmebel_posX[300], 
	Float: elmebel_posY[300], 
	Float: elmebel_posZ[300];

new bool: is_salonsee[MAX_PLAYERS], salonsee_dialogid[MAX_PLAYERS], veh_salonsee[MAX_PLAYERS];
new Text: td_panel_auto[20], PlayerText: tdplayer_panel_auto[8][MAX_PLAYERS], 
	bool: panelauto_en[MAX_PLAYERS], bool: podpanel_in[MAX_PLAYERS];
new Text3D: carom[MAX_VEHICLES], bool: robcar[MAX_VEHICLES];
new alarm_vehicle[MAX_VEHICLES] = {60605,...};
new bool: start_bloodyring;
new sphere_props;
new ustr_work;
new bool: player_p_turned[MAX_PLAYERS],
	Float: player_p_turned_angel[MAX_PLAYERS];
new anti_flood_eng[MAX_PLAYERS];
new ballas_enter, ballas_exit, aztec_enter, aztec_exit, rifa_enter, rifa_exit;
new TUNE_neon_component[MAX_PLAYERS], TUNE_wheel_component[MAX_PLAYERS], bool: TUNE_hydraulics[MAX_PLAYERS], bool: TUNE_stereo[MAX_PLAYERS], TUNE_paintjob[MAX_PLAYERS], TUNE_carcolor_1[MAX_PLAYERS], TUNE_carcolor_2[MAX_PLAYERS];
new ash_enter, ash_exit;
new Text: new_logo[25];
new bool: bilet_tune[MAX_PLAYERS];
new motobuy_p, autolsbuy_p, autosfbuy_p, autolvbuy_p;
new meriyals_enter, meriyals_exit, meriyasf_enter, meriyasf_exit, meriyalv_enter, meriyalv_exit;
new time_fixhealme[MAX_PLAYERS];
new oneprod_mine, oneprod_gruz, oneprod_lesop;
new yard_obj[MAX_PLAYERS];
new Text3D: met3d_sv, Text3D: met3d_vvc, Text3D: met3d_vmf, Text3D: metarmy_3d[3];

new PlayerText: lift_td[MAX_PLAYERS][34], 
	kv_sphere[14], 
	lift_sphere[14], 
	fl_floor[MAX_PLAYERS], 
	lift_main_obj[14], 
	lift_door[14][2];

new PlayerText: td_mask_time[MAX_PLAYERS];
new metsv_count, metvvc_count, metvmf_count;
new inv_sport;
new prodwork_bizid[MAX_PLAYERS], Text3D: prodwork_3d[MAX_VEHICLES], prodwork_prods[MAX_PLAYERS];
new bool: prodworker_status[MAX_PLAYERS], prodworker_vehicle[MAX_PLAYERS], salon_pick;
new stolovka_vmfenter, stolovka_vmfexit, metarmy_count[3], stolovka_svexit, army_foodsv, army_foodvvc, army_foodvmf, stolovka_sventer;
new sv_kazarma, stolovka_vvcenter, shtab_sv_enter, shtab_sv_exit, stolovka_vvcexit, gagtie_time[MAX_PLAYERS];
new shtab_vmf_enter, shtab_vmf_exit, vmf_kazarma, sklad_vmf_exit, sklad_vmf, drugs_factorygang, drugs_time[MAX_PLAYERS];
new PlayerText: captureTD[MAX_PLAYERS], Text3D: text_drugsgang, ammo_av[10], ammobox_ic[MAX_VEHICLES];
new Text3D: text_sv_storpt, Text3D: text_vvc_storpt, Text3D: text_vmf_storpt, met_player, bool: box_object[MAX_PLAYERS], success_ans_vod[MAX_PLAYERS];
new deaglesv_status, mp5sv_status, m4sv_status, snipersv_status, 
	deaglevvc_status, mp5vvc_status, m4vvc_status, snipervvc_status, 
	deaglevmf_status, mp5vmf_status, m4vmf_status, snipervmf_status, posob_ash;
new fix_light_bank;
new bool: drivedoor_open[MAX_VEHICLES], bool: passdoor_open[MAX_VEHICLES], bool: backleftdoor_open[MAX_VEHICLES], bool: backrightdoor_open[MAX_VEHICLES], 
	bool: drivewind_open[MAX_VEHICLES], bool: passwind_open[MAX_VEHICLES], bool: backleftwind_open[MAX_VEHICLES], bool: backrightwind_open[MAX_VEHICLES];
new bool: bonnet_open[MAX_VEHICLES], bool: boot_open[MAX_VEHICLES];
new bankls_enter;
new Text: color_guns_td[7];
new prodworker[2];
new help_adcenter;
new Text: RST_td[2];
new svstore_patr, vvcstore_patr, vmfstore_patr, restart_time_1, restart_time_2;
new Text3D: pdobject3DText[MAX_PLAYERS], pdobject[MAX_PLAYERS], Text3D: text_ammoload[MAX_VEHICLES], time_gnews[MAX_PLAYERS], Text3D: metauto_info;
new Text3D: stndobject3DText[MAX_PLAYERS], stndobject[MAX_PLAYERS], stndobject_2[MAX_PLAYERS];
new bool: dead_pljob[MAX_PLAYERS], fbicar[2];
new Text:foodbomj_[7], Float: createhome_carpos[MAX_PLAYERS][4];
new Float: createhome_posenter[MAX_PLAYERS][3], Float: createhome_posexit[MAX_PLAYERS][3], createhome_interiorid[MAX_PLAYERS], createhome_classid[MAX_PLAYERS], createhome_price[MAX_PLAYERS];
new billboard_obj[31], Cell_Timer[MAX_PLAYERS];
new Text:main_acs_TD[21];
new Text:wait_bloodyst, bloodyr_pckup, reppictime, servername[64], bool:enable_toggle[MAX_PLAYERS], repair_bloody, repair_bloody_1, bool:bloody_en[MAX_PLAYERS], timer_plbloody[MAX_PLAYERS] = -1;
new PlayerText:td_playerbloody[MAX_PLAYERS], breakblood_time, timebreakc_bloody, PlayerText:price_clothes[MAX_PLAYERS];
new Text:usebox_playerbloody, bloody_car[61], bloody_players;
new podnos_lspd, podnos_fbi, timer_bloody, podnos_sfpd, podnos_lvpd, marker_bomj, time_admdelay[MAX_PLAYERS];
new marker_bomj_2;
new fbi_ammos, mvd_ammos, multiply_exp = 1,anti_flood_yn[MAX_PLAYERS],gover_ammos,timer_bus[MAX_PLAYERS], lspd_ammos, sfpd_ammos, lvpd_ammos;
new bool:old_lampstat[MAX_PLAYERS], multiply_don = 1, bunnyhop_delay[MAX_PLAYERS], bool:badge_enable[MAX_PLAYERS], bool:permission_fcmd[MAX_PLAYERS], bool:old_lockstat[MAX_PLAYERS], bool:old_enginestat[MAX_PLAYERS];
new bus_payday[MAX_PLAYERS], bank_payproperty, slap_delay[MAX_PLAYERS], antiflood_move[MAX_PLAYERS], antiflood_chat[MAX_PLAYERS], bool:arenda_taxi[MAX_PLAYERS], bool:arenda_bus[MAX_PLAYERS], arenda_taxi_id[MAX_PLAYERS], bool:player_is_drivebus[MAX_PLAYERS], bank_pickmenu;

new bool:logining[MAX_PLAYERS];

new last_vehiclejob[MAX_PLAYERS], bus_passengers[MAX_VEHICLES] = 0, bus_driverid[MAX_VEHICLES] = INVALID_PLAYER_ID, player_allowed_model[MAX_PLAYERS], bool:player_allowed[MAX_PLAYERS];
new bool:passenger_taxien[MAX_PLAYERS], antiflood_cmd[MAX_PLAYERS], ttir_exit, ttir_enter, ammo_tir, obj_testbillb[MAX_PLAYERS];
new Text: speed_global[7], PlayerText: speed_playertd[MAX_PLAYERS][6], tir_enter, tir_exit, bool: player_in_tir[MAX_PLAYERS];
new gnews_number_str[MAX_PLAYERS], ad_pickenter, ad_pickexit, bomjfood_use[MAX_PLAYERS];
new bool:player_is_taxi[MAX_PLAYERS], taxi_payday[MAX_PLAYERS], taxi_passengers[MAX_PLAYERS], taxi_type[MAX_PLAYERS], taxi_tarif[MAX_PLAYERS];
new Text3D:badge_3d[MAX_PLAYERS], checkpoint_bus_fores[MAX_PLAYERS], checkpoint_bus_mine[MAX_PLAYERS], checkpoint_bus[MAX_PLAYERS];
new veh_taxi[2], arenda_bus_id[MAX_PLAYERS], veh_bus[2];
new additbolk_enter, additbolk_exit;
new bool: player_isselectskin[MAX_PLAYERS];
new sport_menu, help_sport;
new Text3D:taxi3d[MAX_VEHICLES];

stock AC_SetPlayerHealth(playerid, Float: health, bool: type = false) {
    Shot_AntiGM_Total[playerid] = 0;
    if(!type) pData[playerid][p_hp] = health;
	if(health < 0.0) health = 0.0;
	else if(health > 150.0) health = 150.0;
	SetPVarFloat(playerid, "AntiCheat_Health", health);
	return SetPlayerHealth(playerid, health);
}
#define SetPlayerHealth AC_SetPlayerHealth

new 
	enter_jail_pick, exit_jail_pick, 
	enter_yard_pick, exit_yard_pick, 
	kitchen_jail_1, kitchen_jail_2, 
	addit_jail_1, addit_jail_2, 
	strong_pick_jail_1, strong_pick_jail_2
;

enum ht_info {
	hotel_owner[MAX_PLAYER_NAME], 
	bool: hotel_is_using, 
	hotel_days, 
	hotel_floor, 
	hotel_lock
};
new hotel_info[37][ht_info];

new timer_taxipas[MAX_PLAYERS];
enum o_info { 
	o_money,
	bool: o_status
}; 
new org_bank[30][o_info];
new kill_zone;

enum fl_info {
	fl_days, 
	fl_rooms, 
	bool: fl_lock, 
	bool: fl_owned, 
	fl_owner[MAX_PLAYER_NAME], 
	bool: fl_rentstatus, 
	fl_rentprice, 
	fl_renter[MAX_PLAYER_NAME], 
	fl_price, 

	Float: fl_enterposX, 
	Float: fl_enterposY, 
	Float: fl_enterposZ, 
	Float: fl_exitposX, 
	Float: fl_exitposY, 
	Float: fl_exitposZ, 

	fl_pickupID
};
new flat_info[49][fl_info];

enum billb_info { 
	bs_id,
	bs_name[64],
	bs_renter[24],
	bs_rental_days,
	bs_text[110],
	Float: bs_cord[4]
}; 
new billboard_info[31][billb_info];
new sfpd_enter;
new bool: lable_matr[MAX_PLAYERS];
new bool:JobL[MAX_PLAYERS];
new bool:JobLCheck[MAX_PLAYERS];
new JobLC[MAX_PLAYERS];
new JobLCash[MAX_PLAYERS];
new PickInfoL;
new JobLM;
new Float:Drova[4][3] = {
{-1920.5283,-2466.1074,30.9440},
{-1905.7477,-2457.5769,31.2934},
{-1908.2856,-2475.8081,31.8134},
{-1969.3573,-2499.4819,34.3742}
};
new used_NRP_phone[MAX_PLAYERS];
new good_works_mass;

enum ex_info {
	exit_ip[MAX_PLAYER_NAME],
	exit_time,
};
enum gex_info {
	gexit_ip[MAX_PLAYER_NAME],
	gexit_time,
};
new exit_info[MAX_PLAYERS][ex_info];
new google_exitinfo[MAX_PLAYERS][gex_info];

new vvc_kazarma;
new Text:PHONETD[28];
new bolkalv_veh[2],
	bolkasf_veh[2];
new bolkalv_enter,
	bolkalv_exit,
	bolkasf_enter,
	bolkasf_exit;
new bank_lv_enter,
	bank_sf_enter;
new gateobj[12];
new sklad_vvc_exit, sklad_vvc;

new bronik_cv,
	bronik_vvc,
	bronik_vmf;

new vvcveh[2];

new TOTALBANK; 
enum BANK_INFO 
{ 
    ID, 
    NUMBER, 
    OWNER[MAX_PLAYER_NAME], 
    BALANCE, 
    bool: HIDED, 
    PASSWORD, 
    gOWNER[MAX_PLAYER_NAME], 
    gBALANCE 
}; 

new _INFO[MAX_PLAYERS][BANK_INFO][10]; 
new _PLAYERBANK[MAX_PLAYERS]; 
new _INFONAME[MAX_PLAYERS][10][20];  

new meriyalscar[2],
	meriyasfcar[2],
	meriyalvcar[2];
new koyka_used_ls[25],
	koyka_used_sf[25],
	koyka_used_lv[25];
new jailcars[2];
new bolkals[2];
new bool: kpp2sv_open;
new inadmcar[MAX_PLAYERS], player_gameveh[MAX_PLAYERS];
new loader_job; // paquete de dispositivo (cargas)
new pickup_meria_gunses;

new yarder_pick;
new number_skin[MAX_PLAYERS],
	Text: td_select_skin[17];
new bool:tp_set;
new pick_vibor;
new salonenter,
	salonexit;
new Text3D:koykoid_ls[25],
	Text3D:koykoid_sf[25],
	Text3D:koykoid_lv[25];
new Pmine[4];
new Menu:sp_menu;
new WantNickChange[MAX_PLAYERS][MAX_PLAYER_NAME];
new changename[MAX_PLAYERS][MAX_PLAYER_NAME];
new intback[MAX_PLAYERS], vwback[MAX_PLAYERS];
new minefirstlift[4], //Elevaci√≥n poco profunda en el eje
	minesecondlift[4]; //Elevaci√≥n profunda en el eje
	
enum YP_info {
	Float: ypos_x, 
	Float: ypos_y, 
	Float: ypos_z, 
	bool: ystatus
}
new yard_place_info[100][YP_info];

new helpmine,
	salonhelp,
	helpbank;

new spmineone, 
	spminetwo, bet_bloody[MAX_PLAYERS];

new mineenter, //entrada al pozo
	mineexit; //salir del pozo
new LoginTimer[MAX_PLAYERS];
new Float:TeleportFloat[3];
new TeleportInfo[2];
new Iterator:boxPlayer<MAX_PLAYERS>;

new bool:   PhoneOnline                                                         [MAX_PLAYERS char];
new bool:   PlayerTied                                                          [MAX_PLAYERS char];
new bool:   CellTime                                                            [MAX_PLAYERS char];
new bool:   wanted_f                                                            = false;
new bool:   lNews                                                               [MAX_PLAYERS];

enum e_Teleport_Points {
	Float:e_tpX,
	Float:e_tpY,
	Float:e_tpZ,
	e_tpInterior,
}

new PlayerText:MineMoneyPTD[MAX_PLAYERS]; // player_textdraws_mine
new PlayerText:MineAmountPTD[MAX_PLAYERS]; // player_textdraws_mine

new Text:MineGlText[5];  // global_textdraws_mine

new CaptureTime=0;
new bool:CaptureInfo;

new PlayerText: al_indichome[MAX_PLAYERS];

new bool: vvc_open, bool: vmf_open, bool: sv1_open, bool: sv2_open, 
bool: avik_open, bool: lvpd_open, bool: fbr_open, bool: lspd_open, 
bool: sfpd1_open, bool: sfpd2_open;
static const classhome_names[][] =
{
    "",
    "Privado",
    "Por la ventana",
    "Diario",
    "Alto",
    "Fuerte"
};
static const wd_name_eng[][] =
{
	"SATURDAY",
    "SUNDAY",
    "MONDAY",
    "TUESDAY",
    "WEDNESDAY",
    "THURSDAY",
    "SATURDAY"
};
static const wd_name[][] =
{
	"Trabaja",
    "Domingo",
    "Cliente",
    "Martes",
    "Meda", //NO SE √ë√∞√•S√≠
    "√ó Respuesta",
    "Stnice" //NO SE √è√ø√≤√≠√®√∂√†
};
static const stock PlayerAdmin [5] [12] = {
	"primero",
	"segundo",
	"tercera",
	"Segundo", //Puede estar mal √∑√•√≤√¢¬∏√∞√≤√Æ√£√Æ
	"derecho"
};
new Text3D:storage_mine_info[4];
new hold[MAX_PLAYERS]={-1,...};
new rServerInfo;
new StringName[MAX_PLAYERS][15];
new news_checkpoint, news_checkpoint_LV, news_checkpoint_SF, armysv_patr_check, armyvvc_patr_check, armyvmf_patr_check;
new Float:gPlayerPosition[MAX_PLAYERS][4], gplayer_info[MAX_PLAYERS][2];
new acs_pic;

enum TRAY_DATA
{
	trayAreaID,
	trayPickupID,
	trayTimerID
}
new TrayData[300][TRAY_DATA];

static gTeleportPoints[][e_Teleport_Points] = {
	{-25.884498, -185.868988, 1003.546875, 17},
	{6.091179, -29.271898, 1003.549438, 10},
	{-30.946699, -89.609596, 1003.546875, 18},
	{-25.132598, -139.066986, 1003.546875, 16},
	{-27.312299, -29.277599, 1003.557250, 4},
	{-26.691598, -55.714897, 1003.546875, 6},
	{-1827.147338,7.207417,1061.143554, 14},
	{-1861.936889, 54.908092, 1061.143554, 14},
	{1.808619, 32.384357, 1199.593750, 1},
	{315.745086, 984.969299, 1958.919067, 9},
	{286.148986, -40.644397, 1001.515625, 1},
	{286.800994, -82.547599, 1001.515625, 4},
	{296.919982, -108.071998, 1001.515625, 6},
	{314.820983, -141.431991, 999.601562, 7},
	{316.524993, -167.706985, 999.593750, 6},
	{302.292877, -143.139099, 1004.062500, 7},
	{298.507934, -141.647048, 1004.054748, 7},
	{1038.531372, 0.111030, 1001.284484, 3},
	{444.646911, 508.239044, 1001.419494, 12},
	{2215.454833, -1147.475585, 1025.796875, 15},
	{833.269775, 10.588416, 1004.179687, 3},
	{-103.559165, -24.225606, 1000.718750, 3},
	{963.418762, 2108.292480, 1011.030273, 1},
	{-2240.468505, 137.060440, 1035.414062, 6},
	{663.836242, -575.605407, 16.343263, 0},
	{2169.461181, 1618.798339, 999.976562, 1},
	{1889.953369, 1017.438293, 31.882812, 10},
	{-2159.122802, 641.517517, 1052.381713, 1},
	{207.737991, -109.019996, 1005.132812, 15},
	{204.332992, -166.694992, 1000.523437, 14},
	{207.054992, -138.804992, 1003.507812, 3},
	{203.777999, -48.492397, 1001.804687, 1},
	{226.293991, -7.431529, 1002.210937, 5},
	{161.391006, -93.159156, 1001.804687, 18},
	{493.390991, -22.722799, 1000.679687, 17},
	{501.980987, -69.150199, 998.757812, 11},
	{-227.027999, 1401.229980, 27.765625, 18},
	{457.304748, -88.428497, 999.554687, 4},
	{454.973937, -110.104995, 1000.077209, 5},
	{435.271331, -80.958938, 999.554687, 6},
	{452.489990, -18.179698, 1001.132812, 1},
	{681.557861, -455.680053, -25.609874, 1},
	{375.962463, -65.816848, 1001.507812, 10},
	{369.579528, -4.487294, 1001.858886, 9},
	{373.825653, -117.270904, 1001.499511, 5},
	{381.169189, -188.803024, 1000.632812, 17},
	{244.411987, 305.032989, 999.148437, 1},
	{271.884979, 306.631988, 999.148437, 2},
	{291.282989, 310.031982, 999.148437, 3},
	{302.180999, 300.722991, 999.148437, 4},
	{322.197998, 302.497985, 999.148437, 5},
	{346.870025, 309.259033, 999.155700, 6},
	{-959.564392, 1848.576782, 9.000000, 17},
	{384.808624, 173.804992, 1008.382812, 3},
	{223.431976, 1872.400268, 13.734375, 0},
	{772.111999, -3.898649, 1000.728820, 5},
	{774.213989, -48.924297, 1000.585937, 6},
	{773.579956, -77.096694, 1000.655029, 7},
	{1527.229980, -11.574499, 1002.097106, 3},
	{1523.509887, -47.821197, 1002.130981, 2},
	{2496.049804, -1695.238159, 1014.742187, 3},
	{1267.663208, -781.323242, 1091.906250, 5},
	{513.882507, -11.269994, 1001.565307, 3},
	{2454.717041, -1700.871582, 1013.515197, 2},
	{2527.654052, -1679.388305, 1015.498596, 1},
	{2543.462646, -1308.379882, 1026.728393, 2},
	{1212.019897, -28.663099, 1000.953125, 3},
	{761.412963, 1440.191650, 1102.703125, 6},
	{1204.809936, -11.586799, 1000.921875, 2},
	{1204.809936, 13.897239, 1000.921875, 2},
	{942.171997, -16.542755, 1000.929687, 3},
	{964.106994, -53.205497, 1001.124572, 3},
	{-2640.762939, 1406.682006, 906.460937, 3},
	{-729.276000, 503.086944, 1371.971801, 1},
	{-794.806396, 497.738037, 1376.195312, 1},
	{2350.339843, -1181.649902, 1027.976562, 5},
	{2807.619873, -1171.899902, 1025.570312, 8},
	{318.564971, 1118.209960, 1083.882812, 5},
	{1412.639892, -1.787510, 1000.924377, 1},
	{1302.519897, -1.787510, 1001.028259, 18},
	{2522.000000, -1673.383911, 14.866223, 0},
	{-221.059051, 1408.984008, 27.773437, 18},
	{2324.419921, -1145.568359, 1050.710083, 12},
	{-975.975708, 1060.983032, 1345.671875, 10},
	{411.625976, -21.433298, 1001.804687, 2},
	{418.652984, -82.639793, 1001.804687, 3},
	{412.021972, -52.649898, 1001.898437, 12},
	{-204.439987, -26.453998, 1002.273437, 16},
	{-204.439987, -8.469599, 1002.273437, 17},
	{-204.439987, -43.652496, 1002.273437, 3},
	{246.783996, 63.900199, 1003.640625, 6},
	{246.375991, 109.245994, 1003.218750, 10},
	{288.745971, 169.350997, 1007.171875, 3},
	{-2029.798339, -106.675910, 1035.171875, 3},
	{-1398.065307, -217.028900, 1051.115844, 7},
	{-1398.103515, 937.631164, 1036.479125, 15},
	{-1444.645507, -664.526000, 1053.572998, 4},
	{-1465.268676, 1557.868286, 1052.531250, 14},
	{-1401.829956, 107.051300, 1032.273437, 1},
	{-1790.378295, 1436.949829, 7.187500, 0},
	{1643.839843, -1514.819580, 13.566620, 0},
	{-1685.636474, 1035.476196, 45.210937, 0},
	{76.632553, -301.156829, 1.578125, 0},
	{1059.895996, 2081.685791, 10.820312, 0},
	{1059.180175, 2148.938720, 10.820312, 0},
	{2131.507812, 1600.818481, 1008.359375, 1},
	{2315.952880, -1.618174, 26.742187, 0},
	{2319.714843, -14.838361, 26.749565, 0},
	{1710.433715, -1669.379272, 20.225049, 18},
	{1494.325195, 1304.942871, 1093.289062, 3},
	{235.508994, 1189.169897, 1080.339966, 3},
	{223.043991, 1289.259888, 1082.199951, 1},
	{225.630997, 1022.479980, 1084.069946, 7},
	{295.138977, 1474.469971, 1080.519897, 15},
	{328.493988, 1480.589966, 1084.449951, 15},
	{385.803986, 1471.769897, 1080.209961, 15},
	{375.971985, 1417.269897, 1081.409912, 15},
	{490.810974, 1401.489990, 1080.339966, 2},
	{447.734985, 1400.439941, 1084.339966, 2},
	{227.722992, 1114.389893, 1081.189941, 5},
	{260.983978, 1286.549927, 1080.299927, 4},
	{221.666992, 1143.389893, 1082.679932, 4},
	{27.132700, 1341.149902, 1084.449951, 10},
	{-262.601990, 1456.619995, 1084.449951, 4},
	{22.778299, 1404.959961, 1084.449951, 5},
	{140.278000, 1368.979980, 1083.969971, 5},
	{234.045990, 1064.879883, 1084.309937, 6},
	{-68.294098, 1353.469971, 1080.279907, 6},
	{-285.548981, 1470.979980, 1084.449951, 15},
	{-42.581997, 1408.109985, 1084.449951, 8},
	{83.345093, 1324.439941, 1083.889893, 9},
	{260.941986, 1238.509888, 1084.259888, 9},
	{1133.069946, -9.573059, 1000.750000, 12},
	{2464.109863, -1698.659912, 1013.509949, 2},
	{416.8144, 2537.6863, 10.0000, 10},
	{2283.0396, -1137.5461, 1050.8984, 11},
	{2208.5957, -1074.3628, 1050.4844, 1},
	{2237.7783, -1077.3889, 1049.0234, 2},
	{2233.4780, -1110.7450, 1050.8828, 5},
	{2346.7014, -1184.1390, 1027.9766, 5},
	{2232.1101, -1117.1912, 1050.8828, 5},
	{2192.6206, -1202.7321, 1049.0234, 6},
	{2313.0601, -1209.7261, 1049.0234, 6},
	{2319.4553, -1023.3117, 1050.2109, 9},
	{2251.8733, -1138.8230, 1050.6328, 9},
	{2262.3333, -1138.4283, 1050.6328, 10},
	{-2044.7096, 178.5866, 28.8359, 1},
	{607.5771, -10.9472, 1000.9153, 1},
	{612.9734, -75.8104, 997.9922, 2},
	{-1473.0231, 755.9099, 40.8029, 0},
	{384.2859, -2048.2764, 3001.0859, 9},
	{549.7054, -1278.1392, 3001.0859, 4},
	{2912.2243, -1562.2905, 3001.0849, 5},
	{-121.8383, -504.9539, 2999.3940, 5},
	{1654.5051, -1481.8175, 2001.0859, 6},
	{2498.4451, -1667.5632, 3001.0859, 8},
	{2476.9253, -1668.9552, 2001.0859, 2},
	{2472.9458, -2694.2681, 1251.6870, 9},
	{2788.5901, -2343.2546, 1013.6578, 12},
	{2780.4810, -2345.3369, 1017.1500, 3},
	{2785.5952, -2355.0920, 1021.2078, 14},
	{2771.0659, -2340.9402, 1027.9500, 7},
	{2777.1370, -2343.7576, 1048.6000, 5},
	{2775.7568, -2344.7263, 1056.6296, 6},
	{2780.6125, -2349.6445, 1070.6031, 2},
	{2776.4036, -2349.2214, 1089.1962, 1},
	{2765.8804, -2351.1328, 1096.3118, 4},
	{2774.7024, -2349.2817, 1111.8344, 6},
	{2781.7346, -2341.9973, 1131.7844, 11},
	{2780.1899, -2332.6531, 1137.2985, 6},
	{2778.2764, -2344.4192, 1143.5297, 2},
	{2776.2864, -2344.0676, 1146.9954, 8},
	{2774.4026, -2348.5085, 1150.7656, 3},
	{2776.1121, -2346.4146, 1154.3079, 1},
	{2765.8633, -2348.0225, 1157.4750, 7},
	{1527.8909, -2117.9673, 2001.0859, 9},
	{1319.4021, -1939.7700, 1501.0859, 3},
	{2948.471191, 2955.737060, 1310.093017, 11}
};

static const stock BusinessMenu [1] [9] [16] = {
	{
		"√Å√≥√∞√£√•√∞", //No traduce
		"Servicio",
		"Moco grande",
		"Vuelos",
		"Delicias",
		"RAMBUGER",
		"Shashluk", //No se
		"Rosy en la prueba",
		"Sot-doog",
	}
};
new bool:back_tp[MAX_PLAYERS];

stock Float: GetVehSpeed(vehicleid) {
	static Float: x,
		   Float: y,
		   Float: z;

	return GetVehicleVelocity(vehicleid, x, y, z)
		? floatmul(VectorSize(x, y, z), 180.0)
		: Float: 0x7F800000;
}

stock SetVehSpeed(vehicleid, Float: speed) {
    new Float: X,
        Float: Y,
        Float: Z,
        Float: Angle;

    GetVehicleZAngle(vehicleid, Angle);
    speed = speed / 200;
    X = speed * floatsin(-Angle, degrees);
    Y = speed * floatcos(-Angle, degrees);
    SetVehicleVelocity(vehicleid, X, Y, Z);
}

enum fInfo
{
	fName[29],
	fColor,
Float:fPosX,
Float:fPosY,
Float:fPosZ,
Float:fPosA,
	fractionInt,
	fractionVirt
}

static const stock GetFractionColor [30] [7] = {"ffffff","0000ff","0000ff","ffffff","ff6666","993366","bb0000","ccff00","ccff00","ccff00","0000ff","FFCC66","cc00ff","ffcd00","007575","009900","ff6600","00CCFF","6666ff","996633","996633","0000ff","0000ff","ff6666","996633","ffffff","ccff00","996633","ff6666","ff6666"};
static const stock FractionInfo[30][fInfo] = {
	{"sueco",                         0xFFFFFF33,         1763.2140,-1894.0676,13.5612,       270.0,     0,  0},
	{"√ì√Ø√∞. Por el favor de Ros-Anthos",           0x0000FFAA,         -1522.1084,-1197.3870,1300.9688,    270.0,     1,  1}, //No traduce
	{"√î√Å√ê",                                 0x0000FFAA,         830.3853,-1048.7937,2108.0117,      0.0,       1,  0}, //No traduce
	{"Error",                               0xFFFFFF33,         1763.2140,-1894.0676,13.5612,       270.0,     0,  0},
	{"Columna de Ros-Anthos",                0xFF6666AA,         1508.6653,-1802.1176,2982.6953,     0.0,       1,  1},
	{"La Cosa Nostra",                      0x993366AA,         2609.7148,1275.9747,1055.2428,      270.0,     5,  2},
	{"Yakuza",                              0xBB0000AA,         2609.7148,1275.9747,1055.2428,      270.0,     5,  3},
	{"Tyr Kos-Anthosa",                   0xccff00AA,         1526.4143,-1765.6196,994.2026,      270.0,	   3,  1},
	{"Kyryo Pan-Hiero",                    0xccff00AA,         1526.4143,-1765.6196,994.2026,      270.0,     3,  3},
	{"Tyr Vas-Venturasa",                 0xccff00AA,         1526.4143,-1765.6196,994.2026,      270.0,     3,  2},
	{"√ì√Ø√∞. por orden de Pan-Riero",            0x0000FFAA,         -1522.1084,-1197.3870,1300.9688,    270.0,     1,  2},
	{"El instalador",                         0xFFCC66AA,         -890.1230,973.5089,1134.5349,       180.0,     3,  229},
	{"The Ballas",                          0xCC00FFAA,         2741.2622,-1960.5403,666.2686,      0.0,       6,  34},
	{"Los Santos Vagos",                    0xFFCD00AA,         2741.2622,-1960.5403,666.2686,      0.0,       4,  75},
	{"ruso",                       0x007575AA,         2609.7148,1275.9747,1055.2428,      270.0,     5,  5},
	{"Grove Street",                        0x009900AA,         2741.2622,-1960.5403,666.2686,      0.0,       2,  1},
	{"Instalaciones de informaci√≥n masiva",        0xFF6600AA,         1649.7417,-1635.8073,74.2805,       0.0,       0,  1},
	{"Varrios Los Aztecas",                 0x00CCFFAA,         2741.2622,-1960.5403,666.2686,      0.0,       8,  36},
	{"The Rifa",                            0x6666FFAA,         2741.2622,-1960.5403,666.2686,      0.0,       18, 63},
	{"Noticias de oficina",                   0x996633AA,         2587.4531,-1291.8992,1008.1899,     270.0,     2,  1},
	{"Fuerza a√©rea militar",               0x996633AA,         2587.4531,-1291.8992,1008.1899,     270.0,     2,  2},
	{"√ì√Ø√∞. Por el favor de Vas-Venturas",         0x0000FFAA,         -1522.1084,-1197.3870,1300.9688,    270.0,     1,  3},
	{"Error",                               0xFFFFFF33,         1763.2140,-1894.0676,13.5612,   	270.0,     0,  0},
	{"Error",                               0xFFFFFF33,         1763.2140,-1894.0676,13.5612,   	270.0,     0,  0},
	{"Error",                               0xFFFFFF33,         1763.2140,-1894.0676,13.5612,   	270.0,     0,  0},
	{"Error",                               0xFFFFFF33,         1763.2140,-1894.0676,13.5612,       270.0,     0,  0},
	{"Administraci√≥n residente",            0xccff00AA,         -824.1781,1094.3809,2746.1028,      270.0,     1,  0},
	{"Armada",                 0x996633AA,         2587.4531,-1291.8992,1008.1899,     270.0,     2,  3},
	{"Colinitza Pan-Riero",                 0xFF6666AA,         1508.6653,-1802.1176,2982.6953,    	0.0,	   1,  2},
	{"Columbia Vas-Venturasa",              0xFF6666AA,         1508.6653,-1802.1176,2982.6953,     0.0,	   1,  3}
};

new Business_Nalog;
new Gos_Nalog[2];

new bool:PhoneCall[MAX_PLAYERS];
new lcnosob_enter, rusosob_enter, yakosob_enter, lcnosob_exit, rusosob_exit, yakosob_exit;
new AdminCar[MAX_VEHICLES];
new ammunation;
new patrul_id[MAX_PLAYERS];
new tick_wanted[MAX_PLAYERS char];
new Items_Cops;
new gDSTurn[20] = {INVALID_PLAYER_ID,...};
new Text3D:gDSTurnText;

enum ADVERT_DATA
{
	adSender[24],
	adCheker[24],
	adPhone,
	adText[100],
	adTime,
	adMoney,
bool:adCheked,
bool:adBusy,
bool:adCheking
}
new gAdvert[MAX_ADVERT_COUNT][ADVERT_DATA];
new gAdvertCount;
new gAdvertPrice = 60;
new gAdvertTime;


enum SAZONE_MAIN
{
	   SAZONE_NAME[28],
Float: SAZONE_AREA[6]
};

static const stock Float: atm_position [24] [3] = { 
	{1587.30920410,2218.34838867,11.96464443},{2021.42102,998.87201,11.722},{-1676.34570312,434.01806641,8.08183193},{-2033.32604980,159.50723267,29.94120598},
	{1367.56359863,-1290.13696289,14.44901943},{1144.18323,-1765.89429,14.42092},{847.58093262,-1799.19348145,14.71945286},{-78.74282837,-1171.64892578,2.95329499},
	{-1551.53637695,-2737.33691406,49.64560318},{661.71307373,-576.21777344,17.25428581},{557.32824707,-1294.28137207,18.24994087},{-2035.706055, -102.354912, 36.074020},
	{1928.723510, -1780.253051, 14.382810},{2843.30444336,1286.17187500,12.29276943},{2187.36035156,2478.89160156,12.14433193},{1466.34998,-1749.75,16.347},
	{2174.20336914,1402.93469238,11.96464443},{-818.55200195,1567.63708496,28.01933098},{91.92106628,1180.56555176,19.56620598},{-1282.38098145,2715.18652344,51.16842651},
	{-2452.32275391,2252.62988281,5.87058449},{-2621.31445312,1415.23510742,7.88521862},{-2421.45410156,958.35540771,46.18632126},{2235.250488, -1666.827758, 16.136668}
};
static const stock rank_name[29][10][31] = { 

// Nombres predeterminados de los cuelgues. Se utiliza para establecer los valores de /rankname

	{"√ê√ø√§√Æ√¢√Æ√©","√ë√•√∞√¶√†√≠√≤","√ë√≤. √±√•√∞√¶√†√≠√≤","√ã√•√©√≤√•√≠√†√≠√≤","√ë√≤. √´√•√©√≤√•√≠√†√≠√≤","√ä√†√Ø√®√≤√†√≠","√å√†√©√Æ√∞","√è√Æ√§√Ø√Æ√´√™√Æ√¢√≠√®√™","√è√Æ√´√™√Æ√¢√≠√®√™","√É√•√≠√•√∞√†√´"}, // √ì√Ø√∞. Por el favor de Ros-Anthos
	{"√ë√≤√†√¶¬∏√∞","√å√´√†√§√∏√®√© √†√£√•√≠√≤","√Ä√£√•√≠√≤ √Æ√≤√§√•√´√† √É√ç√ä","√Ä√£√•√≠√≤ √Æ√≤√§√•√´√† √ä√ë√é","√ë√≤√†√∞√∏√®√© √†√£√•√≠√≤","√É√´√†√¢√† √Æ√≤√§√•√´√† √É√ç√ä","√É√´√†√¢√† √Æ√≤√§√•√´√† √ä√ë√é","√à√≠√±√Ø√•√™√≤√Æ√∞ √î√Å√ê","√á√†√¨√•√±√≤√®√≤√•√´√º √§√®√∞√•√™√≤√Æ√∞√† √î√Å√ê","√Ñ√®√∞√•√™√≤√Æ√∞ √î√Å√ê"}, // √î√Å√ê
	{"‚Äî","‚Äî","‚Äî","‚Äî","‚Äî","‚Äî","‚Äî","‚Äî","‚Äî","‚Äî"}, // No √Æ√∞√£.
	{"√à√≠√≤√•√∞√≠","√å√´√†√§√∏√®√© √¨√•√§. √∞√†√°√Æ√≤√≠√®√™","√ë√≤√†√∞√∏√®√© √¨√•√§. √∞√†√°√Æ√≤√≠√®√™","√Ç√∞√†√∑ √≥√∑√†√±√≤√™√Æ√¢√ª√©","√Ç√∞√†√∑ √≤√•√∞√†√Ø√•√¢√≤","√Ç√∞√†√∑ √µ√®√∞√≥√∞√£","√å√´√†√§√∏√®√© √±√Ø√•√∂√®√†√´√®√±√≤","√ë√≤√†√∞√∏√®√© √±√Ø√•√∂√®√†√´√®√±√≤","√á√†√¢. √Æ√≤√§√•√´√•√≠√®√ø","√É√´√†√¢√≠√ª√© √¢√∞√†√∑"}, // Columna de Ros-Anthos
	{"√ç√Æ√¢√®√∂√®√Æ","√Ä√±√±√Æ√±√®√†√≤√Æ","√ë√Æ√¨√°√†√≤√≤√•√≠√≤√•","√ë√Æ√´S√≠√≤√Æ","√Å√Æ√•√∂","√ë√Æ√≤√≤√Æ-√ä√†√Ø√Æ","√ä√†√Ø√Æ","√å√´√†√§√∏√®√© √°√Æ√±√±","√ä√Æ√≠√±√®√´√º√•√∞√®","√Ñ√Æ√≠"}, // La Cosa Nostra
	{"√Ç√†√™√†√±√æ","√í√Æ√¨√ÆS√≠√≤√®","√ä¬∏S√≠√©","√ë√ø√¨√Ω√©√£√†√±√®√∞√†","√Ç√†√™√†√£√†√±√®√∞√†","√ë√Æ-√µ√Æ√≠√°√≥√≤√•","√ä√†√¨√°√≥","√é√ø√§√ß√®","√ë√†√©√™√Æ-√ä√Æ√¨√Æ√≠","√ä√≥√¨√®√≤¬∏"}, // Yakuza
	{"√é√µ√∞√†√≠√≠√®√™","√ç√†√∑√†√´√º√≠√®√™ √Æ√µ√∞√†√≠√ª","√ë√•√™√∞√•√≤√†√∞√º","√ë√≤√†√∞√∏√®√© √±√•√™√∞√•√≤√†√∞√º","√Ä√§√¢√Æ√™√†√≤","√Ä√≥√§√®√≤√Æ√∞","√ë√≤√†√∞√∏√®√© √†√≥√§√®√≤√Æ√∞","√Ñ√•√Ø√≥√≤√†√≤","√á√†√¨√•√±√≤√®√≤√•√´√º √¨√Ω√∞√†","√å√Ω√∞"}, // Tyr Kos-Anthosa
	{"√é√µ√∞√†√≠√≠√®√™","√ç√†√∑√†√´√º√≠√®√™ √Æ√µ√∞√†√≠√ª","√ë√•√™√∞√•√≤√†√∞√º","√ë√≤√†√∞√∏√®√© √±√•√™√∞√•√≤√†√∞√º","√Ä√§√¢√Æ√™√†√≤","√Ä√≥√§√®√≤√Æ√∞","√ë√≤√†√∞√∏√®√© √†√≥√§√®√≤√Æ√∞","√Ñ√•√Ø√≥√≤√†√≤","√á√†√¨√•√±√≤√®√≤√•√´√º √¨√Ω√∞√†","√å√Ω√∞"}, // Kyryo Pan-Hiero
	{"√é√µ√∞√†√≠√≠√®√™","√ç√†√∑√†√´√º√≠√®√™ √Æ√µ√∞√†√≠√ª","√ë√•√™√∞√•√≤√†√∞√º","√ë√≤√†√∞√∏√®√© √±√•√™√∞√•√≤√†√∞√º","√Ä√§√¢√Æ√™√†√≤","√Ä√≥√§√®√≤√Æ√∞","√ë√≤√†√∞√∏√®√© √†√≥√§√®√≤√Æ√∞","√Ñ√•√Ø√≥√≤√†√≤","√á√†√¨√•√±√≤√®√≤√•√´√º √¨√Ω√∞√†","√å√Ω√∞"}, // Tyr Vas-Venturasa
	{"√ê√ø√§√Æ√¢√Æ√©","√ë√•√∞√¶√†√≠√≤","√ë√≤. √±√•√∞√¶√†√≠√≤","√ã√•√©√≤√•√≠√†√≠√≤","√ë√≤. √´√•√©√≤√•√≠√†√≠√≤","√ä√†√Ø√®√≤√†√≠","√å√†√©√Æ√∞","√è√Æ√§√Ø√Æ√´√™√Æ√¢√≠√®√™","√è√Æ√´√™√Æ√¢√≠√®√™","√É√•√≠√•√∞√†√´"}, // √ì√Ø√∞. por orden de Pan-Riero
	{"√ë√≤√†√¶¬∏√∞","√ä√Æ√≠√±√≥√´√º√≤√†√≠√≤","√ù√™√ß√†√¨√•√≠√†√≤√Æ√∞","√å√´√†√§√∏√®√© √®√≠√±√≤√∞√≥√™√≤√Æ√∞","√à√≠√±√≤√∞√≥√™√≤√Æ√∞","√ä√Æ√Æ√∞√§√®√≠√†√≤√Æ√∞","√å√´√†√§√∏√®√© √¨√•√≠√•√§√¶√•√∞","√ë√≤√†√∞√∏√®√© √¨√•√≠√•√§√¶√•√∞","√á√†√¨√•√±√≤√®√≤√•√´√º √§√®√∞√•√™√≤√Æ√∞√†","√Ñ√®√∞√•√™√≤√Æ√∞ √†√¢√≤√Æ√∏√™√Æ√´√ª"}, // El instalador
	{"√Å√´√†√©√§","√Å√†√±√≤√•√∞","√ä√∞√Ω√™√•√∞","√É√≥√≠ √°√∞√Æ","√Ä√Ø √°√∞√Æ","√É√†√≠√£√±√≤√•√∞","√î√•√§√•√∞√†√´ √°√´√Æ√™","√î√Æ√´√™√±","√ê√†√©√∑ √ç√®√£√£√†","√Å√®√£ √Ç√®√´√´√®"}, // The Ballas
	{"√ç√Æ√¢√®√≤√Æ","√é√∞√§√®√≠√†√∞√®√Æ","√ã√Æ√™√†√´","√Ç√•√∞√®√¥√®√™√†√§√Æ","√Å√†√≠√§√®√≤√Æ","V. E. G","√Ä√±√±√•√±√®√≠√Æ","√ã√®√§√•√∞ V. E. G","√è√†√§√∞√®√≠√Æ","√è√†√§√∞√•"}, // Los Santos Vagos
	{"√ò√≠√ª√∞√º","√î√∞√†√•√∞","√Å√ª√™","√Å√†√∞√ª√£√†","√Å√´√†√≤√≠√Æ√©","√ë√¢√Æ√ø√™","√Å√∞√†√≤√Æ√™","√Ç√Æ√∞","√Ç√Æ√∞ √¢ √ß√†√™√Æ√≠√•","√Ä√¢√≤√Æ√∞√®√≤√•√≤"}, // ruso
	{"√è√´√Ω√©√ø","√ï√†√±√≤√´√†","√ä√®√´√´√†","√û√Æ√≠√£ √É","√É√†√≠√£√±√≤√†","√é. √É.","√å√Æ√°√±√≤√†","√Ñ√• √™√®√≠√£","√ã√•√£√•√≠√§","√å√Ω√§ √§√Æ√£"}, // Grove Street
	{"√è√Æ√¨√Æ√π√≠√®√™ √∞√•S√≠√™√∂√®√®","√Ç√•√∞√±√≤√†√´√º√π√®√™ √≠√Æ√¢√Æ√±√≤√•√©","√ê√†√§√®√Æ√≤√•√µ√≠√®√™","√Ü√≥√∞√≠√†√´√®√±√≤","√ë√≤. √¶√≥√∞√≠√†√´√®√±√≤","√ä√Æ√∞√∞√•√™√≤√Æ√∞","√è√Æ√¨√Æ√π√≠√®√™ √∞√•S√≠√™√≤√Æ√∞√†","√ê√•S√≠√™√≤√Æ√∞","√É√´√†√¢√≠√ª√© √∞√•S√≠√™√≤√Æ√∞","√ì√Ø√∞√†√¢√´√ø√æ√π√®√© √ë√å√à"}, // Instalaciones de informaci√≥n masiva
	{"√è√•√∞√∞√Æ","√í√®√∞√†√§√Æ√∞","√É√•√≤√≤√Æ√∞","√ã√†√± √É√•√∞√∞√†√±","√å√®√∞√®√≠√§√Æ","√ë√†√°√®√Æ","√à√≠√¢√†√±√Æ√∞","√í√•√±√Æ√∞√•√∞√Æ","√ç√•√±√≤√∞√Æ","√è√†√§√∞√•"}, // Varrios Los Aztecas
	{"√ã√†√§√∞√Æ√≠","√ç√Æ√¢√†√≤√Æ","√Ä√¨√®√£√Æ","√å√†√∑√Æ","√Ñ√¶√≥√≠√®√Æ√∞","√ù√∞√¨√†√≠√Æ","√Å√†√≠√§√®√§√Æ","√Ä√≥√≤√Æ√∞√®√§√®√§","√Ä√§√¶√≥√≠√≤√Æ","√è√†√§√∞√•"}, // The Rifa
	{"√ê√ø√§√Æ√¢√Æ√©","√Ö√¥√∞√•√©√≤√Æ√∞","√ë√•√∞√¶√†√≠√≤","√ë√≤√†√∞√∏√®√≠√†","√ã√•√©√≤√•√≠√†√≠√≤","√ä√†√Ø√®√≤√†√≠","√å√†√©√Æ√∞","√è√Æ√§√Ø√Æ√´√™√Æ√¢√≠√®√™","√è√Æ√´√™√Æ√¢√≠√®√™","√É√•√≠√•√∞√†√´"}, // Noticias de oficina
	{"√ê√ø√§√Æ√¢√Æ√©","√Ö√¥√∞√•√©√≤√Æ√∞","√ë√•√∞√¶√†√≠√≤","√ë√≤√†√∞√∏√®√≠√†","√ã√•√©√≤√•√≠√†√≠√≤","√ä√†√Ø√®√≤√†√≠","√å√†√©√Æ√∞","√è√Æ√§√Ø√Æ√´√™√Æ√¢√≠√®√™","√è√Æ√´√™√Æ√¢√≠√®√™","√É√•√≠√•√∞√†√´"}, // Fuerza a√©rea militar
	{"√ê√ø√§√Æ√¢√Æ√©","√ë√•√∞√¶√†√≠√≤","√ë√≤. √±√•√∞√¶√†√≠√≤","√ã√•√©√≤√•√≠√†√≠√≤","√ë√≤. √´√•√©√≤√•√≠√†√≠√≤","√ä√†√Ø√®√≤√†√≠","√å√†√©√Æ√∞","√è√Æ√§√Ø√Æ√´√™√Æ√¢√≠√®√™","√è√Æ√´√™√Æ√¢√≠√®√™","√É√•√≠√•√∞√†√´"}, // √ì√Ø√∞. Por el favor de Vas-Venturas
	{"‚Äî","‚Äî","‚Äî","‚Äî","‚Äî","‚Äî","‚Äî","‚Äî","‚Äî","‚Äî"}, // No √Æ√∞√£.
	{"‚Äî","‚Äî","‚Äî","‚Äî","‚Äî","‚Äî","‚Äî","‚Äî","‚Äî","‚Äî"}, // No √Æ√∞√£.
	{"‚Äî","‚Äî","‚Äî","‚Äî","‚Äî","‚Äî","‚Äî","‚Äî","‚Äî","‚Äî"}, // No √Æ√∞√£.
	{"‚Äî","‚Äî","‚Äî","‚Äî","‚Äî","‚Äî","‚Äî","‚Äî","‚Äî","‚Äî"}, // No √Æ√∞√£.
	{"√ë√Æ√≤√∞√≥√§√≠√®√™ √±√´√≥√¶√°√ª √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√®","√è√∞√•√±√±-√±√•√™√∞√•√≤√†√∞√º","√è√∞√•√¨√º√•√∞-√¨√®√≠√®√±√≤√∞","√É√•√≠√•√∞√†√´√º√≠√ª√© √Ø√∞√Æ√™√≥√∞√Æ√∞","√ë√≥√§√º√ø","√Ç√®√∂√•-√Ø√∞√•√ß√®√§√•√≠√≤","√å√®√≠√®√±√≤√∞ √¢√≠√≥√≤√∞√•√≠√≠√®√µ √§√•√´","√å√®√≠√®√±√≤√∞ √Æ√°√Æ√∞√Æ√≠√ª","√å√®√≠√®√±√≤√∞ √ß√§√∞√†√¢√Æ√Æ√µ√∞√†√≠√•√≠√®√ø","√è√∞√•√ß√®√§√•√≠√≤"}, // Administraci√≥n residente
	{"√å√†√≤√∞√Æ√±","√ë√≤√†√∞√∏√®√© √¨√†√≤√∞√Æ√±","√å√®√∑√¨√†√≠","C√≤√†√∞√∏√®√© √¨√®√∑√¨√†√≠","√ã√•√©√≤√•√≠√†√≠√≤","√ä√†√Ø√®√≤√†√≠-√ã√•√©√≤√•√≠√†√≠√≤","√ä√†√Ø√®√≤√†√≠ 3 √∞√†√≠√£√†","√ä√†√Ø√®√≤√†√≠ 2 √∞√†√≠√£√†","√ä√†√Ø√®√≤√†√≠ 1 √∞√†√≠√£√†","√Ä√§√¨√®√∞√†√´"}, // Armada
	{"√à√≠√≤√•√∞√≠","√å√´√†√§√∏√®√© √¨√•√§. √∞√†√°√Æ√≤√≠√®√™","√ë√≤√†√∞√∏√®√© √¨√•√§. √∞√†√°√Æ√≤√≠√®√™","√Ç√∞√†√∑ √≥√∑√†√±√≤√™√Æ√¢√ª√©","√Ç√∞√†√∑ √≤√•√∞√†√Ø√•√¢√≤","√Ç√∞√†√∑ √µ√®√∞√≥√∞√£","√å√´√†√§√∏√®√© √±√Ø√•√∂√®√†√´√®√±√≤","√ë√≤√†√∞√∏√®√© √±√Ø√•√∂√®√†√´√®√±√≤","√á√†√¢. √Æ√≤√§√•√´√•√≠√®√ø","√É√´√†√¢√≠√ª√© √¢√∞√†√∑"}, // Colinitza Pan-Riero
	{"√à√≠√≤√•√∞√≠","√å√´√†√§√∏√®√© √¨√•√§. √∞√†√°√Æ√≤√≠√®√™","√ë√≤√†√∞√∏√®√© √¨√•√§. √∞√†√°√Æ√≤√≠√®√™","√Ç√∞√†√∑ √≥√∑√†√±√≤√™√Æ√¢√ª√©","√Ç√∞√†√∑ √≤√•√∞√†√Ø√•√¢√≤","√Ç√∞√†√∑ √µ√®√∞√≥√∞√£","√å√´√†√§√∏√®√© √±√Ø√•√∂√®√†√´√®√±√≤","√ë√≤√†√∞√∏√®√© √±√Ø√•√∂√®√†√´√®√±√≤","√á√†√¢. √Æ√≤√§√•√´√•√≠√®√ø","√É√´√†√¢√≠√ª√© √¢√∞√†√∑"} // Columbia Vas-Venturasa
};
static const stock ChangeSkin[29][16] = {
	{280,281,265,266,267,306,307,282,283,288,309}, // √ì√Ø√∞. Por el favor de Ros-Anthos
	{286,163,166,165,141}, // √î√Å√ê
	{1}, // No √Æ√∞√£.
	{274,276,275,70,308,148}, // Columna de Ros-Anthos
	{223,124,113,214}, // La Cosa Nostra
	{120,123,169,186,118,117}, // Yakuza
	{164,165,59,185,57,98,186,240,187,228,46,219,76,12,233}, // Tyr Kos-Anthosa
	{164,165,59,185,57,98,186,240,187,228,46,219,76,12,233}, // Kyryo Pan-Hiero
	{164,165,59,185,57,98,186,240,187,228,46,219,76,12,233}, // Tyr Vas-Venturasa
	{280,281,265,266,267,306,307,282,283,288,309}, // √ì√Ø√∞. por orden de Pan-Riero
	{59,172,189,240}, // El instalador
	{102,103,104,195}, // The Ballas
	{108,109,110,190}, // Los Santos Vagos
	{112,111,125,272,214}, // ruso
	{105,106,107,269,270,271,56}, // Grove Street
	{170,250,188,186,223,187,76,141,150,263}, // Instalaciones de informaci√≥n masiva
	{114,115,116,41}, // Varrios Los Aztecas 
	{173,174,175,226}, // The Rifa 
	{73,179,287,255,61,253,191}, // Noticias de oficina
	{73,179,287,255,61,253,191}, // Fuerza a√©rea militar
	{280,281,265,266,267,306,307,282,283,288,309}, // √ì√Ø√∞. Por el favor de Vas-Venturas
	{1}, // No √Æ√∞√£.
	{1}, // No √Æ√∞√£.
	{1}, // No √Æ√∞√£.
	{1}, // No √Æ√∞√£.
	{164,163,186,165,98,185,17,187,227,240,93,169,147,295,219,150}, // Administraci√≥n residente
	{73,179,287,255,61,253,191}, // Armada
	{274,276,275,70,308,148}, // Colinitza Pan-Riero
	{274,276,275,70,308,148} // Columbia Vas-Venturasa
};
static const stock gSAZones[][SAZONE_MAIN] = {
	{"The Big Ear",                 {-410.00,1403.30,-3.00,-137.90,1681.20,200.00}},    {"Aldea Malvada",               {-1372.10,2498.50,0.00,-1277.50,2615.30,200.00}},   {"Angel Pine",                  {-2324.90,-2584.20,-6.10,-1964.20,-2212.10,200.00}},    {"Arco del Oeste",              {-901.10,2221.80,0.00,-592.00,2571.90,200.00}},
	{"Avispa Country Club",         {-2646.40,-355.40,0.00,-2270.00,-222.50,200.00}},   {"Avispa Country Club",         {-2831.80,-430.20,-6.10,-2646.40,-222.50,200.00}},  {"Avispa Country Club",         {-2361.50,-417.10,0.00,-2270.00,-355.40,200.00}},
	{"Avispa Country Club",         {-2667.80,-302.10,-28.80,-2646.40,-262.30,71.10}},  {"Avispa Country Club",         {-2470.00,-355.40,0.00,-2270.00,-318.40,46.10}},    {"Avispa Country Club",         {-2550.00,-355.40,0.00,-2470.00,-318.40,39.70}},
	{"Back o Beyond",               {-1166.90,-2641.10,0.00,-321.70,-1856.00,200.00}},  {"Battery Point",               {-2741.00,1268.40,-4.50,-2533.00,1490.40,200.00}},  {"Bayside",                     {-2741.00,2175.10,0.00,-2353.10,2722.70,200.00}},
	{"Bayside Marina",              {-2353.10,2275.70,0.00,-2153.10,2475.70,200.00}},   {"Beacon Hill",                 {-399.60,-1075.50,-1.40,-319.00,-977.50,198.50}},   {"Blackfield",                  {964.30,1203.20,-89.00,1197.30,1403.20,110.90}},
	{"Blackfield",                  {964.30,1403.20,-89.00,1197.30,1726.20,110.90}},    {"Blackfield Chapel",           {1375.60,596.30,-89.00,1558.00,823.20,110.90}}, {"Blackfield Chapel",           {1325.60,596.30,-89.00,1375.60,795.00,110.90}},
	{"Blackfield Intersection",     {1197.30,1044.60,-89.00,1277.00,1163.30,110.90}},   {"Blackfield Intersection",     {1166.50,795.00,-89.00,1375.60,1044.60,110.90}},    {"Blackfield Intersection",     {1277.00,1044.60,-89.00,1315.30,1087.60,110.90}},
	{"Blackfield Intersection",     {1375.60,823.20,-89.00,1457.30,919.40,110.90}},     {"Blueberry",                   {104.50,-220.10,2.30,349.60,152.20,200.00}},    {"Blueberry",                   {19.60,-404.10,3.80,349.60,-220.10,200.00}},
	{"Blueberry Acres",             {-319.60,-220.10,0.00,104.50,293.30,200.00}},       {"Caligula's Palace",           {2087.30,1543.20,-89.00,2437.30,1703.20,110.90}},   {"Caligula's Palace",           {2137.40,1703.20,-89.00,2437.30,1783.20,110.90}},
	{"Calton Heights",              {-2274.10,744.10,-6.10,-1982.30,1358.90,200.00}},   {"Chinatown",                   {-2274.10,578.30,-7.60,-2078.60,744.10,200.00}},    {"City Hall",                   {-2867.80,277.40,-9.10,-2593.40,458.40,200.00}},
	{"Come-A-Lot",                  {2087.30,943.20,-89.00,2623.10,1203.20,110.90}},    {"Commerce",                    {1323.90,-1842.20,-89.00,1701.90,-1722.20,110.90}}, {"Commerce",                    {1323.90,-1722.20,-89.00,1440.90,-1577.50,110.90}},
	{"Commerce",                    {1370.80,-1577.50,-89.00,1463.90,-1384.90,110.90}}, {"Commerce",                    {1463.90,-1577.50,-89.00,1667.90,-1430.80,110.90}}, {"Commerce",                    {1583.50,-1722.20,-89.00,1758.90,-1577.50,110.90}},
	{"Commerce",                    {1667.90,-1577.50,-89.00,1812.60,-1430.80,110.90}}, {"Conference Center",           {1046.10,-1804.20,-89.00,1323.90,-1722.20,110.90}}, {"Conference Center",           {1073.20,-1842.20,-89.00,1323.90,-1804.20,110.90}},
	{"Cranberry Station",           {-2007.80,56.30,0.00,-1922.00,224.70,100.00}},      {"Creek",                       {2749.90,1937.20,-89.00,2921.60,2669.70,110.90}},   {"Dillimore",                   {580.70,-674.80,-9.50,861.00,-404.70,200.00}},
	{"Doherty",                     {-2270.00,-324.10,-0.00,-1794.90,-222.50,200.00}},  {"Doherty",                     {-2173.00,-222.50,-0.00,-1794.90,265.20,200.00}},   {"Downtown",                    {-1982.30,744.10,-6.10,-1871.70,1274.20,200.00}},
	{"Downtown",                    {-1871.70,1176.40,-4.50,-1620.30,1274.20,200.00}},  {"Downtown",                    {-1700.00,744.20,-6.10,-1580.00,1176.50,200.00}},   {"Downtown",                    {-1580.00,744.20,-6.10,-1499.80,1025.90,200.00}},
	{"Downtown",                    {-2078.60,578.30,-7.60,-1499.80,744.20,200.00}},    {"Downtown",                    {-1993.20,265.20,-9.10,-1794.90,578.30,200.00}},    {"Downtown Los Santos",         {1463.90,-1430.80,-89.00,1724.70,-1290.80,110.90}}, {"Downtown Los Santos",         {1724.70,-1430.80,-89.00,1812.60,-1250.90,110.90}},
	{"Downtown Los Santos",         {1463.90,-1290.80,-89.00,1724.70,-1150.80,110.90}}, {"Downtown Los Santos",         {1370.80,-1384.90,-89.00,1463.90,-1170.80,110.90}}, {"Downtown Los Santos",         {1724.70,-1250.90,-89.00,1812.60,-1150.80,110.90}},
	{"Downtown Los Santos",         {1370.80,-1170.80,-89.00,1463.90,-1130.80,110.90}}, {"Downtown Los Santos",         {1378.30,-1130.80,-89.00,1463.90,-1026.30,110.90}}, {"Downtown Los Santos",         {1391.00,-1026.30,-89.00,1463.90,-926.90,110.90}},
	{"Downtown Los Santos",         {1507.50,-1385.20,110.90,1582.50,-1325.30,335.90}}, {"East Beach",                  {2632.80,-1852.80,-89.00,2959.30,-1668.10,110.90}}, {"East Beach",                  {2632.80,-1668.10,-89.00,2747.70,-1393.40,110.90}}, {"East Beach",                  {2747.70,-1668.10,-89.00,2959.30,-1498.60,110.90}},
	{"East Beach",                  {2747.70,-1498.60,-89.00,2959.30,-1120.00,110.90}}, {"East Los Santos",             {2421.00,-1628.50,-89.00,2632.80,-1454.30,110.90}}, {"East Los Santos",             {2222.50,-1628.50,-89.00,2421.00,-1494.00,110.90}},
	{"East Los Santos",             {2266.20,-1494.00,-89.00,2381.60,-1372.00,110.90}}, {"East Los Santos",             {2381.60,-1494.00,-89.00,2421.00,-1454.30,110.90}}, {"East Los Santos",             {2281.40,-1372.00,-89.00,2381.60,-1135.00,110.90}},
	{"East Los Santos",             {2381.60,-1454.30,-89.00,2462.10,-1135.00,110.90}}, {"East Los Santos",             {2462.10,-1454.30,-89.00,2581.70,-1135.00,110.90}}, {"Easter Basin",                {-1794.90,249.90,-9.10,-1242.90,578.30,200.00}},
	{"Easter Basin",                {-1794.90,-50.00,-0.00,-1499.80,249.90,200.00}},    {"Easter Bay Airport",          {-1499.80,-50.00,-0.00,-1242.90,249.90,200.00}},    {"Easter Bay Airport",          {-1794.90,-730.10,-3.00,-1213.90,-50.00,200.00}},
	{"Easter Bay Airport",          {-1213.90,-730.10,0.00,-1132.80,-50.00,200.00}},    {"Easter Bay Airport",          {-1242.90,-50.00,0.00,-1213.90,578.30,200.00}}, {"Easter Bay Airport",          {-1213.90,-50.00,-4.50,-947.90,578.30,200.00}},
	{"Easter Bay Airport",          {-1315.40,-405.30,15.40,-1264.40,-209.50,25.40}},   {"Easter Bay Airport",          {-1354.30,-287.30,15.40,-1315.40,-209.50,25.40}},   {"Easter Bay Airport",          {-1490.30,-209.50,15.40,-1264.40,-148.30,25.40}},
	{"Easter Bay Chemicals",        {-1132.80,-768.00,0.00,-956.40,-578.10,200.00}},    {"Easter Bay Chemicals",        {-1132.80,-787.30,0.00,-956.40,-768.00,200.00}},    {"El Castillo del Diablo",      {-464.50,2217.60,0.00,-208.50,2580.30,200.00}},
	{"El Castillo del Diablo",      {-208.50,2123.00,-7.60,114.00,2337.10,200.00}},     {"El Castillo del Diablo",      {-208.50,2337.10,0.00,8.40,2487.10,200.00}},    {"El Corona",                   {1812.60,-2179.20,-89.00,1970.60,-1852.80,110.90}},
	{"El Corona",                   {1692.60,-2179.20,-89.00,1812.60,-1842.20,110.90}}, {"El Quebrados",                {-1645.20,2498.50,0.00,-1372.10,2777.80,200.00}},   {"Esplanade East",              {-1620.30,1176.50,-4.50,-1580.00,1274.20,200.00}},
	{"Esplanade East",              {-1580.00,1025.90,-6.10,-1499.80,1274.20,200.00}},  {"Esplanade East",              {-1499.80,578.30,-79.60,-1339.80,1274.20,20.30}},   {"Esplanade North",             {-2533.00,1358.90,-4.50,-1996.60,1501.20,200.00}},
	{"Esplanade North",             {-1996.60,1358.90,-4.50,-1524.20,1592.50,200.00}},  {"Esplanade North",             {-1982.30,1274.20,-4.50,-1524.20,1358.90,200.00}},  {"Fallen Tree",                 {-792.20,-698.50,-5.30,-452.40,-380.00,200.00}},
	{"Fallow Bridge",               {434.30,366.50,0.00,603.00,555.60,200.00}},         {"Fern Ridge",                  {508.10,-139.20,0.00,1306.60,119.50,200.00}},   {"Financial",                   {-1871.70,744.10,-6.10,-1701.30,1176.40,300.00}},
	{"Fisher's Lagoon",             {1916.90,-233.30,-100.00,2131.70,13.80,200.00}},    {"Flint Intersection",          {-187.70,-1596.70,-89.00,17.00,-1276.60,110.90}},   {"Flint Range",                 {-594.10,-1648.50,0.00,-187.70,-1276.60,200.00}},
	{"Fort Carson",                 {-376.20,826.30,-3.00,123.70,1220.40,200.00}},      {"Foster Valley",               {-2270.00,-430.20,-0.00,-2178.60,-324.10,200.00}},  {"Foster Valley",               {-2178.60,-599.80,-0.00,-1794.90,-324.10,200.00}},
	{"Foster Valley",               {-2178.60,-1115.50,0.00,-1794.90,-599.80,200.00}},  {"Foster Valley",               {-2178.60,-1250.90,0.00,-1794.90,-1115.50,200.00}}, {"Frederick Bridge",            {2759.20,296.50,0.00,2774.20,594.70,200.00}},
	{"Gant Bridge",                 {-2741.40,1659.60,-6.10,-2616.40,2175.10,200.00}},  {"Gant Bridge",                 {-2741.00,1490.40,-6.10,-2616.40,1659.60,200.00}},  {"Ganton",                      {2222.50,-1852.80,-89.00,2632.80,-1722.30,110.90}},
	{"Ganton",                      {2222.50,-1722.30,-89.00,2632.80,-1628.50,110.90}}, {"Garcia",                      {-2411.20,-222.50,-0.00,-2173.00,265.20,200.00}},   {"Garcia",                      {-2395.10,-222.50,-5.30,-2354.00,-204.70,200.00}},
	{"Garver Bridge",               {-1339.80,828.10,-89.00,-1213.90,1057.00,110.90}},  {"Garver Bridge",               {-1213.90,950.00,-89.00,-1087.90,1178.90,110.90}},  {"Garver Bridge",               {-1499.80,696.40,-179.60,-1339.80,925.30,20.30}},
	{"Glen Park",                   {1812.60,-1449.60,-89.00,1996.90,-1350.70,110.90}}, {"Glen Park",                   {1812.60,-1100.80,-89.00,1994.30,-973.30,110.90}},  {"Glen Park",                   {1812.60,-1350.70,-89.00,2056.80,-1100.80,110.90}},
	{"Green Palms",                 {176.50,1305.40,-3.00,338.60,1520.70,200.00}},      {"Greenglass College",          {964.30,1044.60,-89.00,1197.30,1203.20,110.90}},    {"Greenglass College",          {964.30,930.80,-89.00,1166.50,1044.60,110.90}},
	{"Hampton Barns",               {603.00,264.30,0.00,761.90,366.50,200.00}},         {"Hankypanky Point",            {2576.90,62.10,0.00,2759.20,385.50,200.00}},    {"Harry Gold Parkway",          {1777.30,863.20,-89.00,1817.30,2342.80,110.90}},
	{"Hashbury",                    {-2593.40,-222.50,-0.00,-2411.20,54.70,200.00}},    {"Hilltop Farm",                {967.30,-450.30,-3.00,1176.70,-217.90,200.00}}, {"Hunter Quarry",               {337.20,710.80,-115.20,860.50,1031.70,203.70}},
	{"Idlewood",                    {1812.60,-1852.80,-89.00,1971.60,-1742.30,110.90}}, {"Idlewood",                    {1812.60,-1742.30,-89.00,1951.60,-1602.30,110.90}}, {"Idlewood",                    {1951.60,-1742.30,-89.00,2124.60,-1602.30,110.90}}, {"Idlewood",                    {1812.60,-1602.30,-89.00,2124.60,-1449.60,110.90}}, {"Idlewood",                    {2124.60,-1742.30,-89.00,2222.50,-1494.00,110.90}},
	{"Idlewood",                    {1971.60,-1852.80,-89.00,2222.50,-1742.30,110.90}}, {"Jefferson",                   {1996.90,-1449.60,-89.00,2056.80,-1350.70,110.90}}, {"Jefferson",                   {2124.60,-1494.00,-89.00,2266.20,-1449.60,110.90}},
	{"Jefferson",                   {2056.80,-1372.00,-89.00,2281.40,-1210.70,110.90}}, {"Jefferson",                   {2056.80,-1210.70,-89.00,2185.30,-1126.30,110.90}}, {"Jefferson",                   {2185.30,-1210.70,-89.00,2281.40,-1154.50,110.90}},
	{"Jefferson",                   {2056.80,-1449.60,-89.00,2266.20,-1372.00,110.90}}, {"Julius Thruway East",         {2623.10,943.20,-89.00,2749.90,1055.90,110.90}},    {"Julius Thruway East",         {2685.10,1055.90,-89.00,2749.90,2626.50,110.90}},
	{"Julius Thruway East",         {2536.40,2442.50,-89.00,2685.10,2542.50,110.90}},   {"Julius Thruway East",         {2625.10,2202.70,-89.00,2685.10,2442.50,110.90}},   {"Julius Thruway North",        {2498.20,2542.50,-89.00,2685.10,2626.50,110.90}},
	{"Julius Thruway North",        {2237.40,2542.50,-89.00,2498.20,2663.10,110.90}},   {"Julius Thruway North",        {2121.40,2508.20,-89.00,2237.40,2663.10,110.90}},   {"Julius Thruway North",        {1938.80,2508.20,-89.00,2121.40,2624.20,110.90}},
	{"Julius Thruway North",        {1534.50,2433.20,-89.00,1848.40,2583.20,110.90}},   {"Julius Thruway North",        {1848.40,2478.40,-89.00,1938.80,2553.40,110.90}},   {"Julius Thruway North",        {1704.50,2342.80,-89.00,1848.40,2433.20,110.90}},
	{"Julius Thruway North",        {1377.30,2433.20,-89.00,1534.50,2507.20,110.90}},   {"Julius Thruway South",        {1457.30,823.20,-89.00,2377.30,863.20,110.90}}, {"Julius Thruway South",        {2377.30,788.80,-89.00,2537.30,897.90,110.90}},
	{"Julius Thruway West",         {1197.30,1163.30,-89.00,1236.60,2243.20,110.90}},   {"Julius Thruway West",         {1236.60,2142.80,-89.00,1297.40,2243.20,110.90}},   {"Juniper Hill",                {-2533.00,578.30,-7.60,-2274.10,968.30,200.00}},
	{"Juniper Hollow",              {-2533.00,968.30,-6.10,-2274.10,1358.90,200.00}},   {"K.A.C.C. Military Fuels",     {2498.20,2626.50,-89.00,2749.90,2861.50,110.90}},   {"Kincaid Bridge",              {-1339.80,599.20,-89.00,-1213.90,828.10,110.90}},
	{"Kincaid Bridge",              {-1213.90,721.10,-89.00,-1087.90,950.00,110.90}},   {"Kincaid Bridge",              {-1087.90,855.30,-89.00,-961.90,986.20,110.90}},    {"King's",                      {-2329.30,458.40,-7.60,-1993.20,578.30,200.00}},    {"King's",                      {-2411.20,265.20,-9.10,-1993.20,373.50,200.00}},
	{"King's",                      {-2253.50,373.50,-9.10,-1993.20,458.40,200.00}},    {"LVA Freight Depot",           {1457.30,863.20,-89.00,1777.40,1143.20,110.90}},    {"LVA Freight Depot",           {1375.60,919.40,-89.00,1457.30,1203.20,110.90}},
	{"LVA Freight Depot",           {1277.00,1087.60,-89.00,1375.60,1203.20,110.90}},   {"LVA Freight Depot",           {1315.30,1044.60,-89.00,1375.60,1087.60,110.90}},   {"LVA Freight Depot",           {1236.60,1163.40,-89.00,1277.00,1203.20,110.90}},   {"Las Barrancas",               {-926.10,1398.70,-3.00,-719.20,1634.60,200.00}},
	{"Las Brujas",                  {-365.10,2123.00,-3.00,-208.50,2217.60,200.00}},    {"Las Colinas",                 {1994.30,-1100.80,-89.00,2056.80,-920.80,110.90}},  {"Las Colinas",                 {2056.80,-1126.30,-89.00,2126.80,-920.80,110.90}},
	{"Las Colinas",                 {2185.30,-1154.50,-89.00,2281.40,-934.40,110.90}},  {"Las Colinas",                 {2126.80,-1126.30,-89.00,2185.30,-934.40,110.90}},  {"Las Colinas",                 {2747.70,-1120.00,-89.00,2959.30,-945.00,110.90}},
	{"Las Colinas",                 {2632.70,-1135.00,-89.00,2747.70,-945.00,110.90}},  {"Las Colinas",                 {2281.40,-1135.00,-89.00,2632.70,-945.00,110.90}},  {"Las Payasadas",               {-354.30,2580.30,2.00,-133.60,2816.80,200.00}},
	{"Las Venturas Airport",        {1236.60,1203.20,-89.00,1457.30,1883.10,110.90}},   {"Las Venturas Airport",        {1457.30,1203.20,-89.00,1777.30,1883.10,110.90}},   {"Las Venturas Airport",        {1457.30,1143.20,-89.00,1777.40,1203.20,110.90}},
	{"Las Venturas Airport",        {1515.80,1586.40,-12.50,1729.90,1714.50,87.50}},    {"Last Dime Motel",             {1823.00,596.30,-89.00,1997.20,823.20,110.90}}, {"Leafy Hollow",                {-1166.90,-1856.00,0.00,-815.60,-1602.00,200.00}},
	{"Liberty City",                {-1000.00,400.00,1300.00,-700.00,600.00,1400.00}},  {"Lil' Probe Inn",              {-90.20,1286.80,-3.00,153.80,1554.10,200.00}},  {"Linden Side",                 {2749.90,943.20,-89.00,2923.30,1198.90,110.90}},
	{"Linden Station",              {2749.90,1198.90,-89.00,2923.30,1548.90,110.90}},   {"Linden Station",              {2811.20,1229.50,-39.50,2861.20,1407.50,60.40}},    {"Little Mexico",               {1701.90,-1842.20,-89.00,1812.60,-1722.20,110.90}},
	{"Little Mexico",               {1758.90,-1722.20,-89.00,1812.60,-1577.50,110.90}}, {"Los Flores",                  {2581.70,-1454.30,-89.00,2632.80,-1393.40,110.90}}, {"Los Flores",                  {2581.70,-1393.40,-89.00,2747.70,-1135.00,110.90}}, {"Los Santos International",    {1249.60,-2394.30,-89.00,1852.00,-2179.20,110.90}},
	{"Los Santos International",    {1852.00,-2394.30,-89.00,2089.00,-2179.20,110.90}}, {"Los Santos International",    {1382.70,-2730.80,-89.00,2201.80,-2394.30,110.90}}, {"Los Santos International",    {1974.60,-2394.30,-39.00,2089.00,-2256.50,60.90}},
	{"Los Santos International",    {1400.90,-2669.20,-39.00,2189.80,-2597.20,60.90}},  {"Los Santos International",    {2051.60,-2597.20,-39.00,2152.40,-2394.30,60.90}},  {"Marina",                      {647.70,-1804.20,-89.00,851.40,-1577.50,110.90}},
	{"Marina",                      {647.70,-1577.50,-89.00,807.90,-1416.20,110.90}},   {"Marina",                      {807.90,-1577.50,-89.00,926.90,-1416.20,110.90}},   {"Market",                      {787.40,-1416.20,-89.00,1072.60,-1310.20,110.90}},
	{"Market",                      {952.60,-1310.20,-89.00,1072.60,-1130.80,110.90}},  {"Market",                      {1072.60,-1416.20,-89.00,1370.80,-1130.80,110.90}}, {"Market",                      {926.90,-1577.50,-89.00,1370.80,-1416.20,110.90}},
	{"Market Station",              {787.40,-1410.90,-34.10,866.00,-1310.20,65.80}},    {"Martin Bridge",               {-222.10,293.30,0.00,-122.10,476.40,200.00}},   {"Missionary Hill",             {-2994.40,-811.20,0.00,-2178.60,-430.20,200.00}},   {"Montgomery",                  {1119.50,119.50,-3.00,1451.40,493.30,200.00}},
	{"Montgomery",                  {1451.40,347.40,-6.10,1582.40,420.80,200.00}},      {"Montgomery Intersection",     {1546.60,208.10,0.00,1745.80,347.40,200.00}},   {"Montgomery Intersection",     {1582.40,347.40,0.00,1664.60,401.70,200.00}},
	{"Mulholland",                  {1414.00,-768.00,-89.00,1667.60,-452.40,110.90}},   {"Mulholland",                  {1281.10,-452.40,-89.00,1641.10,-290.90,110.90}},   {"Mulholland",                  {1269.10,-768.00,-89.00,1414.00,-452.40,110.90}},
	{"Mulholland",                  {1357.00,-926.90,-89.00,1463.90,-768.00,110.90}},   {"Mulholland",                  {1318.10,-910.10,-89.00,1357.00,-768.00,110.90}},   {"Mulholland",                  {1169.10,-910.10,-89.00,1318.10,-768.00,110.90}},
	{"Mulholland",                  {768.60,-954.60,-89.00,952.60,-860.60,110.90}},     {"Mulholland",                  {687.80,-860.60,-89.00,911.80,-768.00,110.90}}, {"Mulholland",                  {737.50,-768.00,-89.00,1142.20,-674.80,110.90}},
	{"Mulholland",                  {1096.40,-910.10,-89.00,1169.10,-768.00,110.90}},   {"Mulholland",                  {952.60,-937.10,-89.00,1096.40,-860.60,110.90}},    {"Mulholland",                  {911.80,-860.60,-89.00,1096.40,-768.00,110.90}},
	{"Mulholland",                  {861.00,-674.80,-89.00,1156.50,-600.80,110.90}},    {"Mulholland Intersection",     {1463.90,-1150.80,-89.00,1812.60,-768.00,110.90}},  {"North Rock",                  {2285.30,-768.00,0.00,2770.50,-269.70,200.00}},
	{"Ocean Docks",                 {2373.70,-2697.00,-89.00,2809.20,-2330.40,110.90}}, {"Ocean Docks",                 {2201.80,-2418.30,-89.00,2324.00,-2095.00,110.90}}, {"Ocean Docks",                 {2324.00,-2302.30,-89.00,2703.50,-2145.10,110.90}},
	{"Ocean Docks",                 {2089.00,-2394.30,-89.00,2201.80,-2235.80,110.90}}, {"Ocean Docks",                 {2201.80,-2730.80,-89.00,2324.00,-2418.30,110.90}}, {"Ocean Docks",                 {2703.50,-2302.30,-89.00,2959.30,-2126.90,110.90}},
	{"Ocean Docks",                 {2324.00,-2145.10,-89.00,2703.50,-2059.20,110.90}}, {"Ocean Flats",                 {-2994.40,277.40,-9.10,-2867.80,458.40,200.00}},    {"Ocean Flats",                 {-2994.40,-222.50,-0.00,-2593.40,277.40,200.00}},
	{"Ocean Flats",                 {-2994.40,-430.20,-0.00,-2831.80,-222.50,200.00}},  {"Octane Springs",              {338.60,1228.50,0.00,664.30,1655.00,200.00}},   {"Old Venturas Strip",          {2162.30,2012.10,-89.00,2685.10,2202.70,110.90}},
	{"Palisades",                   {-2994.40,458.40,-6.10,-2741.00,1339.60,200.00}},   {"Palomino Creek",              {2160.20,-149.00,0.00,2576.90,228.30,200.00}},  {"Paradiso",                    {-2741.00,793.40,-6.10,-2533.00,1268.40,200.00}},   {"Pershing Square",             {1440.90,-1722.20,-89.00,1583.50,-1577.50,110.90}},
	{"Pilgrim",                     {2437.30,1383.20,-89.00,2624.40,1783.20,110.90}},   {"Pilgrim",                     {2624.40,1383.20,-89.00,2685.10,1783.20,110.90}},   {"Pilson Intersection",         {1098.30,2243.20,-89.00,1377.30,2507.20,110.90}},
	{"Pirates in Men's Pants",      {1817.30,1469.20,-89.00,2027.40,1703.20,110.90}},   {"Playa del Seville",           {2703.50,-2126.90,-89.00,2959.30,-1852.80,110.90}}, {"Prickle Pine",                {1534.50,2583.20,-89.00,1848.40,2863.20,110.90}},
	{"Prickle Pine",                {1117.40,2507.20,-89.00,1534.50,2723.20,110.90}},   {"Prickle Pine",                {1848.40,2553.40,-89.00,1938.80,2863.20,110.90}},   {"Prickle Pine",                {1938.80,2624.20,-89.00,2121.40,2861.50,110.90}},
	{"Queens",                      {-2533.00,458.40,0.00,-2329.30,578.30,200.00}},     {"Queens",                      {-2593.40,54.70,0.00,-2411.20,458.40,200.00}},  {"Queens",                      {-2411.20,373.50,0.00,-2253.50,458.40,200.00}},
	{"Randolph Industrial Estate",  {1558.00,596.30,-89.00,1823.00,823.20,110.90}},     {"Redsands East",               {1817.30,2011.80,-89.00,2106.70,2202.70,110.90}},   {"Redsands East",               {1817.30,2202.70,-89.00,2011.90,2342.80,110.90}},
	{"Redsands East",               {1848.40,2342.80,-89.00,2011.90,2478.40,110.90}},   {"Redsands West",               {1236.60,1883.10,-89.00,1777.30,2142.80,110.90}},   {"Redsands West",               {1297.40,2142.80,-89.00,1777.30,2243.20,110.90}},
	{"Redsands West",               {1377.30,2243.20,-89.00,1704.50,2433.20,110.90}},   {"Redsands West",               {1704.50,2243.20,-89.00,1777.30,2342.80,110.90}},   {"Regular Tom",                 {-405.70,1712.80,-3.00,-276.70,1892.70,200.00}},
	{"Richman",                     {647.50,-1118.20,-89.00,787.40,-954.60,110.90}},    {"Richman",                     {647.50,-954.60,-89.00,768.60,-860.60,110.90}}, {"Richman",                     {225.10,-1369.60,-89.00,334.50,-1292.00,110.90}},
	{"Richman",                     {225.10,-1292.00,-89.00,466.20,-1235.00,110.90}},   {"Richman",                     {72.60,-1404.90,-89.00,225.10,-1235.00,110.90}},    {"Richman",                     {72.60,-1235.00,-89.00,321.30,-1008.10,110.90}},
	{"Richman",                     {321.30,-1235.00,-89.00,647.50,-1044.00,110.90}},   {"Richman",                     {321.30,-1044.00,-89.00,647.50,-860.60,110.90}},    {"Richman",                     {321.30,-860.60,-89.00,687.80,-768.00,110.90}},
	{"Richman",                     {321.30,-768.00,-89.00,700.70,-674.80,110.90}},     {"Robada Intersection",         {-1119.00,1178.90,-89.00,-862.00,1351.40,110.90}},  {"Roca Escalante",              {2237.40,2202.70,-89.00,2536.40,2542.50,110.90}},   {"Roca Escalante",              {2536.40,2202.70,-89.00,2625.10,2442.50,110.90}},
	{"Rockshore East",              {2537.30,676.50,-89.00,2902.30,943.20,110.90}},     {"Rockshore West",              {1997.20,596.30,-89.00,2377.30,823.20,110.90}}, {"Rockshore West",              {2377.30,596.30,-89.00,2537.30,788.80,110.90}},
	{"Rodeo",                       {72.60,-1684.60,-89.00,225.10,-1544.10,110.90}},    {"Rodeo",                       {72.60,-1544.10,-89.00,225.10,-1404.90,110.90}},    {"Rodeo",                       {225.10,-1684.60,-89.00,312.80,-1501.90,110.90}},   {"Rodeo",                       {225.10,-1501.90,-89.00,334.50,-1369.60,110.90}},
	{"Rodeo",                       {334.50,-1501.90,-89.00,422.60,-1406.00,110.90}},   {"Rodeo",                       {312.80,-1684.60,-89.00,422.60,-1501.90,110.90}},   {"Rodeo",                       {422.60,-1684.60,-89.00,558.00,-1570.20,110.90}},
	{"Rodeo",                       {558.00,-1684.60,-89.00,647.50,-1384.90,110.90}},   {"Rodeo",                       {466.20,-1570.20,-89.00,558.00,-1385.00,110.90}},   {"Rodeo",                       {422.60,-1570.20,-89.00,466.20,-1406.00,110.90}},
	{"Rodeo",                       {466.20,-1385.00,-89.00,647.50,-1235.00,110.90}},   {"Rodeo",                       {334.50,-1406.00,-89.00,466.20,-1292.00,110.90}},   {"Royal Casino",                {2087.30,1383.20,-89.00,2437.30,1543.20,110.90}},
	{"San Andreas Sound",           {2450.30,385.50,-100.00,2759.20,562.30,200.00}},    {"Santa Flora",                 {-2741.00,458.40,-7.60,-2533.00,793.40,200.00}},    {"Santa Maria Beach",           {342.60,-2173.20,-89.00,647.70,-1684.60,110.90}},
	{"Santa Maria Beach",           {72.60,-2173.20,-89.00,342.60,-1684.60,110.90}},    {"Shady Cabin",                 {-1632.80,-2263.40,-3.00,-1601.30,-2231.70,200.00}},    {"Shady Creeks",                {-1820.60,-2643.60,-8.00,-1226.70,-1771.60,200.00}},
	{"Shady Creeks",                {-2030.10,-2174.80,-6.10,-1820.60,-1771.60,200.00}},{"Sobell Rail Yards",           {2749.90,1548.90,-89.00,2923.30,1937.20,110.90}},   {"Spinybed",                    {2121.40,2663.10,-89.00,2498.20,2861.50,110.90}},
	{"Starfish Casino",             {2437.30,1783.20,-89.00,2685.10,2012.10,110.90}},   {"Starfish Casino",             {2437.30,1858.10,-39.00,2495.00,1970.80,60.90}},    {"Starfish Casino",             {2162.30,1883.20,-89.00,2437.30,2012.10,110.90}},
	{"Temple",                      {1252.30,-1130.80,-89.00,1378.30,-1026.30,110.90}}, {"Temple",                      {1252.30,-1026.30,-89.00,1391.00,-926.90,110.90}},  {"Temple",                      {1252.30,-926.90,-89.00,1357.00,-910.10,110.90}},
	{"Temple",                      {952.60,-1130.80,-89.00,1096.40,-937.10,110.90}},   {"Temple",                      {1096.40,-1130.80,-89.00,1252.30,-1026.30,110.90}}, {"Temple",                      {1096.40,-1026.30,-89.00,1252.30,-910.10,110.90}},
	{"The Camel's Toe",             {2087.30,1203.20,-89.00,2640.40,1383.20,110.90}},   {"The Clown's Pocket",          {2162.30,1783.20,-89.00,2437.30,1883.20,110.90}},   {"The Emerald Isle",            {2011.90,2202.70,-89.00,2237.40,2508.20,110.90}},
	{"The Farm",                    {-1209.60,-1317.10,114.90,-908.10,-787.30,251.90}}, {"The Four Dragons Casino",     {1817.30,863.20,-89.00,2027.30,1083.20,110.90}},    {"The High Roller",             {1817.30,1283.20,-89.00,2027.30,1469.20,110.90}},
	{"The Mako Span",               {1664.60,401.70,0.00,1785.10,567.20,200.00}},       {"The Panopticon",              {-947.90,-304.30,-1.10,-319.60,327.00,200.00}}, {"The Pink Swan",               {1817.30,1083.20,-89.00,2027.30,1283.20,110.90}},
	{"The Sherman Dam",             {-968.70,1929.40,-3.00,-481.10,2155.20,200.00}},    {"The Strip",                   {2027.40,863.20,-89.00,2087.30,1703.20,110.90}},    {"The Strip",                   {2106.70,1863.20,-89.00,2162.30,2202.70,110.90}},
	{"The Strip",                   {2027.40,1783.20,-89.00,2162.30,1863.20,110.90}},   {"The Strip",                   {2027.40,1703.20,-89.00,2137.40,1783.20,110.90}},   {"The Visage",                  {1817.30,1863.20,-89.00,2106.70,2011.80,110.90}},
	{"The Visage",                  {1817.30,1703.20,-89.00,2027.40,1863.20,110.90}},   {"Unity Station",               {1692.60,-1971.80,-20.40,1812.60,-1932.80,79.50}},  {"Valle Ocultado",              {-936.60,2611.40,2.00,-715.90,2847.90,200.00}},
	{"Verdant Bluffs",              {930.20,-2488.40,-89.00,1249.60,-2006.70,110.90}},  {"Verdant Bluffs",              {1073.20,-2006.70,-89.00,1249.60,-1842.20,110.90}}, {"Verdant Bluffs",              {1249.60,-2179.20,-89.00,1692.60,-1842.20,110.90}},
	{"Verdant Meadows",             {37.00,2337.10,-3.00,435.90,2677.90,200.00}},       {"Verona Beach",                {647.70,-2173.20,-89.00,930.20,-1804.20,110.90}},   {"Verona Beach",                {930.20,-2006.70,-89.00,1073.20,-1804.20,110.90}},
	{"Verona Beach",                {851.40,-1804.20,-89.00,1046.10,-1577.50,110.90}},  {"Verona Beach",                {1161.50,-1722.20,-89.00,1323.90,-1577.50,110.90}}, {"Verona Beach",                {1046.10,-1722.20,-89.00,1161.50,-1577.50,110.90}},
	{"Vinewood",                    {787.40,-1310.20,-89.00,952.60,-1130.80,110.90}},   {"Vinewood",                    {787.40,-1130.80,-89.00,952.60,-954.60,110.90}},    {"Vinewood",                    {647.50,-1227.20,-89.00,787.40,-1118.20,110.90}},   {"Vinewood",                    {647.70,-1416.20,-89.00,787.40,-1227.20,110.90}},
	{"Whitewood Estates",           {883.30,1726.20,-89.00,1098.30,2507.20,110.90}},    {"Whitewood Estates",           {1098.30,1726.20,-89.00,1197.30,2243.20,110.90}},   {"Willowfield",                 {1970.60,-2179.20,-89.00,2089.00,-1852.80,110.90}},
	{"Willowfield",                 {2089.00,-2235.80,-89.00,2201.80,-1989.90,110.90}}, {"Willowfield",                 {2089.00,-1989.90,-89.00,2324.00,-1852.80,110.90}}, {"Willowfield",                 {2201.80,-2095.00,-89.00,2324.00,-1989.90,110.90}},
	{"Willowfield",                 {2541.70,-1941.40,-89.00,2703.50,-1852.80,110.90}}, {"Willowfield",                 {2324.00,-2059.20,-89.00,2541.70,-1852.80,110.90}}, {"Willowfield",                 {2541.70,-2059.20,-89.00,2703.50,-1941.40,110.90}},
	{"Yellow Bell Station",         {1377.40,2600.40,-21.90,1492.40,2687.30,78.00}},    {"Los Santos",                  {44.60,-2892.90,-242.90,2997.00,-768.00,900.00}},   {"Las Venturas",                {869.40,596.30,-242.90,2997.00,2993.80,900.00}},
	{"Bone County",                 {-480.50,596.30,-242.90,869.40,2993.80,900.00}},    {"Tierra Robada",               {-2997.40,1659.60,-242.90,-480.50,2993.80,900.00}}, {"Tierra Robada",               {-1213.90,596.30,-242.90,-480.50,1659.60,900.00}},
	{"San Fierro",                  {-2997.40,-1115.50,-242.90,-1213.90,1659.60,900.00}},{"Red County",                  {-1213.90,-768.00,-242.90,2997.00,596.30,900.00}}, {"Flint County",                {-1213.90,-2892.90,-242.90,44.60,-768.00,900.00}},  {"Whetstone",                   {-2997.40,-2892.90,-242.90,-1213.90,-1115.50,900.00}}
};
static const stock gSAZonesCity[][SAZONE_MAIN] = {
	{"√£. √ã√Æ√±-√ë√†√≠√≤√Æ√±",                   {44.60, -2892.90, -242.90, 2997.00, -768.00, 900.00}},
	{"√£. √ã√†√±-√Ç√•√≠√≤√≥√∞√†√±",                 {869.40, 596.30, -242.90, 2997.00, 2993.80, 900.00}},
	{"√§. Bone-County",                  {-480.50, 596.30, -242.90, 869.40, 2993.80, 900.00}},
	{"√§. Tierra-Robada",                {-2997.40, 1659.60, -242.90, -480.50, 2993.80, 900.00}},
	{"√§. Tierra-Robada",                {-1213.90, 596.30, -242.90, -480.50, 1659.60, 900.00}},
	{"√£. √ë√†√≠-√î√®√•√∞√∞√Æ",                   {-2997.40, -1115.50, -242.90, -1213.90, 1659.60, 900.00}},
	{"√§. Red-County",                   {-1213.90, -768.00, -242.90, 2997.00, 596.30, 900.00}},
	{"√§. Flint-County",                 {-1213.90, -2892.90, -242.90, 44.60, -768.00, 900.00}},
	{"√§. Whetstone",                    {-2997.40, -2892.90, -242.90, -1213.90, -1115.50, 900.00}}
};
static const stock GetMember[29][29] = {
	"√ì√Ø√∞. Por el favor de Ros-Anthos","√î√Å√ê","Error","Columna de Ros-Anthos","La Cosa Nostra",
	"Yakuza","Tyr Kos-Anthosa","Kyryo Pan-Hiero","Tyr Vas-Venturasa","√ì√Ø√∞. por orden de Pan-Riero",
	"El instalador","The Ballas","Los Santos Vagos","ruso","Grove Street",
	"Instalaciones de informaci√≥n masiva","Varrios Los Aztecas","The Rifa","Noticias de oficina","Fuerza a√©rea militar",
	"√ì√Ø√∞. Por el favor de Vas-Venturas","Error","Error","Error","Error",
	"Administraci√≥n residente","Armada","Colinitza Pan-Riero","Columbia Vas-Venturasa"
};
stock max_car_speed(veh_model) {
	new speed;
	switch(veh_model) {
		case 400, 409, 516, 517, 526, 535, 551, 575, 576, 579, 599: speed = 88;
		case 401, 466: speed = 82;
		case 402, 477: speed = 104;
		case 403, 433, 471, 532, 601: speed = 61;
		case 404: speed = 74;
		case 405, 445, 518, 542: speed = 91;
		case 410: speed = 72;
		case 411: speed = 123;
		case 412, 439, 560, 534, 602, 603: speed = 94;
		case 415, 451: speed = 108;
		case 416, 421: speed = 86;
		case 419, 436, 474, 527, 529, 540, 546: speed = 83;
		case 420, 550, 568: speed = 81;
		case 422, 467, 489, 492, 500: speed = 78;
		case 424: speed = 75;
		case 426, 522, 596, 597, 598: speed = 98;
		case 427, 507, 565, 587: speed = 92;
		case 429, 541: speed = 113;
		case 434: speed = 93;
		case 438, 505, 515, 547: speed = 79;
		case 440, 582: speed = 76;
		case 461, 521, 524, 566: speed = 90;
		case 462, 463, 468, 586: speed = 80;
		case 558, 470, 482, 490: speed = 87;
		case 475, 536, 567: speed = 96;
		case 478: speed = 65;
		case 480: speed = 103;
		case 491: speed = 83;
		case 494, 502, 503: speed = 120;
		case 523, 580, 581, 585, 600: speed = 85;
		case 506, 559, 562: speed = 100;
		case 571: speed = 52;
		case 514: speed = 67;
		default: speed = 124;
	}
	return speed;
}
static const stock SkinMen[70][2] = {
	{78,1000},{79,1000},{135,1000},{136,1000},{137,1000},{200,1000},{212,1000},{213,1000},{230,1000},{239,1000},
    {1,5000},{3,5000},{4,5000},{5,5000},{44,5000},{95,5000},{128,5000},{132,5000},{133,5000},{159,5000},{160,5000},{161,5000},{162,5000},
    {2,10000},{7,10000},{22,10000},{27,10000},{32,10000},{35,10000},{37,10000},{47,10000},{48,10000},{60,10000},{67,10000},{72,10000},{96,10000},
    {101,25000},{111,25000},{117,25000},{119,25000},{143,25000},{154,25000},{180,25000},{184,25000},
    {217,50000},{223,50000},{272,50000},{291,50000},{295,50000},{59,50000},{46,50000},{82,50000},{83,50000},{84,50000},{98,50000},
    {293,100000},{292,100000},{228,100000},{223,100000},{208,100000},{186,100000},{187,100000},{188,100000},
    {147,150000},{124,170000},{17,200000},{296,300000},{297,400000},{299,500000},{249,1000000}
};
static const stock SkinMale[56][2] = {
    {31,1000},{53,1000},{75,1000},{77,1000},{197,1000},{198,1000},{199,1000},{196,1000},
    {10,5000},{13,5000},{39,5000},{54,5000},{53,5000},{87,5000},{89,5000},{129,5000},{130,5000},{151,5000},{157,5000},{196,5000},{207,5000},{232,5000},
    {63,10000},{64,10000},{69,10000},{76,10000},{85,10000},{131,10000},{138,10000},{139,10000},{152,10000},{201,10000},
    {40,25000},{41,25000},{55,25000},{56,25000},{90,25000},{93,25000},{140,25000},
    {141,50000},{150,50000},{178,50000},{211,50000},{215,50000},{216,50000},{224,50000},{225,50000},{226,50000},{233,50000},
    {192,125000},{194,150000},{190,175000},{193,200000},{195,250000},{246,300000},{298,500000}
};

static const stock VehicleNames[211][] = {
	"Landstalker","Bravura","Buffalo","Linerunner","Perenniel","Sentinel","Dumper","Firetruck","Trashmaster","Stretch","Manana","Infernus",
	"Voodoo","Pony","Mule","Cheetah","Ambulance","Leviathan","Moonbeam","Esperanto","Taxi","Washington","Bobcat","Mr Whoopee","BF Injection",
	"Hunter","Premier","Enforcer","Securicar","Banshee","Predator","Bus","Rhino","Barracks","Hotknife","Trailer","Previon","Coach","Cabbie",
	"Stallion","Rumpo","RC Bandit","Romero","Packer","Monster","Admiral","Squalo","Seasparrow","Pizzaboy","Tram","Trailer","Turismo","Speeder",
	"Reefer","Tropic","Flatbed","Yankee","Caddy","Solair","Berkley's RC Van","Skimmer","PCJ-600","Faggio","Freeway","RC Baron","RC Raider",
	"Glendale","Oceanic","Sanchez","Sparrow","Patriot","Quad","Coastguard","Dinghy","Hermes","Sabre","Rustler","ZR-350","Walton","Regina",
	"Comet","BMX","Burrito","Camper","Marquis","Baggage","Dozer","Maverick","News Chopper","Rancher","FBI Rancher","Virgo","Greenwood",
	"Jetmax","Hotring Racer","Sandking","Blista Compact","Police Maverick","Boxville","Benson","Mesa","RC Goblin","Hotring Racer A","Hotring Racer B",
	"Bloodring Banger","Rancher","Super GT","Elegant","Journey","Bike","Mountain Bike","Beagle","Cropduster","Stuntplane","Tanker","Roadtrain",
	"Nebula","Majestic","Buccaneer","Shamal","Hydra","FCR-900","NRG-500","HPV1000","Cement Truck","Towtruck","Fortune","Cadrona","FBI Truck",
	"Willard","Forklift","Tractor","Combine Harvester","Feltzer","Remington","Slamvan","Blade","Freight","Streak","Vortex","Vincent","Bullet","Clover",
	"Sadler","Firetruck LA","Hustler","Intruder","Primo","Cargobob","Tampa","Sunrise","Merit","Utility","Nevada","Yosemite","Windsor","Monster \"A\"",
	"Monster \"B\"","Uranus","Jester","Sultan","Stratum","Elegy","Raindance","RC Tiger","Flash","Tahoma","Savanna","Bandito","Freight Flat Trailer (Train)","Streak Trailer (Train)",
	"Kart","Mower","Duneride","Sweeper","Broadway","Tornado","AT400","DFT-30","Huntley","Stafford","BF-400","Newsvan","Tug","Petrol Trailer","Emperor",
	"Wayfarer","Euros","Hotdog","Club","Freight Box Trailer (Train)","Article Trailer 3","Andromada","Dodo","RC Cam","Launch","Police Car","Police Car",
	"Police Car","Police Ranger","Picador","S.W.A.T.","Alpha","Phoenix","Glendale Shit","Sadler Shit","Baggage Trailer \"A\"","Baggage Trailer \"B\"",
	"Tug Stairs Trailer","Boxville","Farm Trailer" };

new dicetime,
	fam_pick;

new bool: b_Sklad[5 char];

enum VehicleInfo
{
Float:vehicleX,
Float:vehicleY,
Float:vehicleZ,
Float:vehicleA,
	vColor1,
	vColor2,
Float:vDrived,
Float:vFuel,
	bool:vLock,
	bool:vLamp,
	bool:vEngine
}
new VehInfo[MAX_VEHICLES][VehicleInfo];

stock SetVehicleParamsExEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective) {
	if(vehicleid < 1 || vehicleid > MAX_VEHICLES) return 0;
	VehInfo[vehicleid - 1][vEngine]   = (engine) ? (true) : (false);

	SetVehicleParamsEx(vehicleid,engine, lights, alarm, doors, bonnet, boot, objective);

	return 1;
}
#define SetVehicleParamsEx SetVehicleParamsExEx

CB: ACAC_SetVehiclePos(vehicleid, Float:x, Float:y, Float:z) {
	if(vehicleid < 1 || vehicleid > MAX_VEHICLES) return 0;

	VehInfo[vehicleid][vehicleX] = x;
	VehInfo[vehicleid][vehicleY] = y;
	VehInfo[vehicleid][vehicleZ] = z;

	return 1;
}

new BizEnter [MAX_PLAYERS char];

#define ADMIN_KICK 0
#define ADMIN_BAN  1
#define ADMIN_MUTE 2
#define ADMIN_ANS  3
#define ADMIN_WARN 4
#define ADMIN_JAIL 5
new gAdmin[MAX_PLAYERS][6];

enum pTemp_e {
bool: pInHospital,
bool: pWaitingExam,
bool: pExamType,
bool: pOnExam,
	pExamCandidate,
	rep_rport[90],
	pAFK,
	bool:pSpectate,
	pSpectateID
}
new pTemp[MAX_PLAYERS][pTemp_e];

new Text: global_invTD[25], 
	PlayerText: player_invTD[MAX_PLAYERS][30];

new string[2000];

new CountOnZone[20];

new selectedskin[MAX_PLAYERS];

new house_carid[MAX_PLAYERS][3];
new ministrcar[2];

new MySQL:mysql_Handle;

new Float:TeleportDest[MAX_PLAYERS][3];
new smspricels = 12, bool:smsls = false;
new shifthour;
new matsfuravagos,matsfuragrove, matsfuraactek,matsfurarifa,matsfuraballas,massmediacar[2],lvpdcar[2],liccar[2], mehanik[2];
new sapdpatrul[2], sapdcar[2], sfpdcar[2],vmfcar[2], yakcar[2],ruscar[2], lcncar[2], armcar[2], grovecar[2], ballascar[2], coronoscar[2], vagoscar[2],rifacar[2];
new medpic[2],fbidoor[2],lspd[6],sf[5],lvpdpic[7];
new mo[2],vagospic[2],grooveexit,grooveenter,skinshop[3],sklad[2];

new org_materials[30], org_drugs[30], org_ammo[30];
new frac_gangzone                   [29]={0,...};
new Text3D: frac_text                [29]={Text3D:-1,...};

enum bInfo
{
	bID,
Float: EnterBiz[3],
Float: EntBizVh[4],
Float: ExitBiz[3],
Float: IntExitBiz[4],
	bOwner[24],
	bPrice,
	bInt,
	bVW,
	bLock,
Text3D:bLabel,
	bName[32],
	bPay,
	bPribil,
Float:BarPos[3],
	bCena[9],
	bVhod,
	bBank,
	bTypeBiz,
	bProdOrder,
	bProdOrderPrice,
	bProd,
	bProdMax
};
new BizInfo[MAX_BUSINESS][bInfo],BIZES;
new bar_biz_pic[MAX_BUSINESS];

enum fillingInfo
{
	fOwner[24],
	ffName[32],
	Float:fPos[4],
	fPrice,
	bool:fLock,
	fBankMoney,
	fBenz,
	fPay,
	fMaxBenz,
	fPriceBenz,
	Text3D:fText
}
new Filling[MAX_FUEL][fillingInfo], FILLING_TOTAL;

stock IsVehicleOccupied(vehicleid) {
	foreach(new i:Player) {
		if(IsPlayerInAnyVehicle(i) && GetPlayerVehicleID(i) == vehicleid) return 1;
	}
	return 0;
}
Float:GetDistanceBetweenPlayers(p1,p2) {
	new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
	if(!IsPlayerConnected(p1) || !IsPlayerConnected(p2)) return -1.00;
	GetPlayerPos(p1,x1,y1,z1);
	GetPlayerPos(p2,x2,y2,z2);
	return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}
enum StorMine
{
	StHigh,
	StLow,
	StHighReady,
	StLowReady
};
new storage_mine[StorMine];
new pass_status[MAX_PLAYERS];
new num_plate[MAX_PLAYERS][3][16];
new PlayerText: barTDS_PLAYER[MAX_PLAYERS][6], 
	Text: barTDS[14];

new cercov_enter,
	cercov_exit;

new kandidat1[50] = "No √™√†√≠√§√®S√≠√≤√†",
	kandidat2[50] = "No √™√†√≠√§√®S√≠√≤√†",
	kandidat3[50] = "No √™√†√≠√§√®S√≠√≤√†",
	kandidat4[50] = "No √™√†√≠√§√®S√≠√≤√†",
	kandidat5[50] = "No √™√†√≠√§√®S√≠√≤√†";

new kandidats_votes[5]; 
new bool: startvibor = false;
enum hInfo
{
	hID,
Float:hEnter[3],
Float:hExit[3],
Float:hCar[4],
Float:hOrigCar[4],
	hOwner[24],
	hValue,
	hInt,
	hPay,
	hLock,
	hOwned,
	hKlass,
	hPickup,
	hMIcon,
	hSafe,
	hGun[5],
	hGunAmmo[5],
	hADoor,
	hSub,
	hPool,
Float:CarDrived[3],
Text3D:LabelText
};

new HouseInfo[MAX_HOUSE][hInfo], TOTAL_HOUSE;

new 
	jkey_objid, 
	Text3D: jkey_3d, 
	jcard_objid, 
	Text3D: jcard_3d;

stock Forveh_CreateVehicle(modelid, Float:x, Float:y, Float:z, Float: angle, color1, color2, respawn_delay, addsiren = 0) {
	new vehid = CreateVehicle(modelid, x, y, z, angle, color1, color2, respawn_delay, addsiren);
	if(vehid == 65535) return 0;
	VehInfo[vehid - 1][vLock] = false;
	VehInfo[vehid - 1][vEngine] = false;
	VehInfo[vehid - 1][vLamp] = false;
	VehInfo[vehid][vehicleX] = x;
	VehInfo[vehid][vehicleY] = y;
	VehInfo[vehid][vehicleZ] = z;
	VehInfo[vehid][vehicleA] = angle;
	VehInfo[vehid][vColor1] = color1;
	VehInfo[vehid][vColor2] = color2;
	VehInfo[vehid - 1][vDrived] = 0;
	VehInfo[vehid][vFuel] = 50.0;
	return vehid;
}
stock Home_CreateVehicle(modelid, Float:x, Float:y, Float:z, Float: angle, color1, color2, respawn_delay, addsiren = 0) {
	new vehid = CreateVehicle(modelid, x, y, z, angle, color1, color2, respawn_delay, addsiren);
	if(vehid == 65535) return 0;
	VehInfo[vehid - 1][vLock] = true;
	VehInfo[vehid - 1][vEngine] = false;
	VehInfo[vehid - 1][vLamp] = false;
	VehInfo[vehid][vehicleX] = x;
	VehInfo[vehid][vehicleY] = y;
	VehInfo[vehid][vehicleZ] = z;
	VehInfo[vehid][vehicleA] = angle;
	VehInfo[vehid][vColor1] = color1;
	VehInfo[vehid][vColor2] = color2;
	VehInfo[vehid - 1][vDrived] = 0;
	return vehid;
}
#define CreateVehicleEx Forveh_CreateVehicle
stock Forveh_AddStaticVehicle(modelid, Float: spawn_x, Float: spawn_y, Float: spawn_z, Float: angle, color1, color2) {
	new vehid = AddStaticVehicle(modelid, spawn_x, spawn_y, spawn_z, angle, color1, color2);
	if(vehid == 65535) return 0;
	VehInfo[vehid][vehicleX] = spawn_x;
	VehInfo[vehid][vehicleY] = spawn_y;
	VehInfo[vehid][vehicleZ] = spawn_z;
	VehInfo[vehid][vehicleA] = angle;
	VehInfo[vehid - 1][vLock] = false;
	VehInfo[vehid - 1][vEngine] = false;
	VehInfo[vehid - 1][vLamp] = false;
	VehInfo[vehid][vColor1] = color1;
	VehInfo[vehid][vColor2] = color2;
	VehInfo[vehid - 1][vDrived] = 0.0;
	VehInfo[vehid][vFuel] = 50.0;
	return vehid;
}

stock Forveh_AddStaticVehicleEx(modelid, Float: spawn_x, Float: spawn_y, Float: spawn_z, Float: angle, color1, color2, respawn_delay, addsiren = 0) {
	new vehid = AddStaticVehicleEx(modelid, spawn_x, spawn_y, spawn_z, angle, color1, color2, respawn_delay, addsiren);
	if(vehid == 65535) return 0;
	VehInfo[vehid][vehicleX] = spawn_x;
	VehInfo[vehid][vehicleY] = spawn_y;
	VehInfo[vehid][vehicleZ] = spawn_z;
	VehInfo[vehid][vehicleA] = angle;
	VehInfo[vehid - 1][vLock] = false;
	VehInfo[vehid - 1][vEngine] = false;
	VehInfo[vehid - 1][vLamp] = false;
	VehInfo[vehid][vColor1] = color1;
	VehInfo[vehid][vColor2] = color2;
	VehInfo[vehid - 1][vDrived] = 0.0;
	VehInfo[vehid][vFuel] = 50.0;
	return vehid;
}

#include <derby>

stock IsAFull_nick(nickname[]) {
	return (!strcmp(nickname, FD1) || 
    !strcmp(nickname, FD2) || 
    !strcmp(nickname, FD3) || 
    !strcmp(nickname, FD4) || 
    !strcmp(nickname, FD5) || 
    !strcmp(nickname, FD6) || 
    !strcmp(nickname, FD7) || 
    !strcmp(nickname, FD8) || 
    !strcmp(nickname, FD9) || 
    !strcmp(nickname, FD10)) ?true:false;
}
stock IsAFull(playerid) {
	return (!strcmp(pData[playerid][pName], FD1) || 
    !strcmp(pData[playerid][pName], FD2) || 
    !strcmp(pData[playerid][pName], FD3) || 
    !strcmp(pData[playerid][pName], FD4) || 
    !strcmp(pData[playerid][pName], FD5) || 
    !strcmp(pData[playerid][pName], FD6) || 
    !strcmp(pData[playerid][pName], FD7) || 
    !strcmp(pData[playerid][pName], FD8) || 
    !strcmp(pData[playerid][pName], FD9) || 
    !strcmp(pData[playerid][pName], FD10)) ?true:false;
}

stock IsAMafia(playerid) {
	if(!IsPlayerConnected(playerid)) return 0;
	return((pData[playerid][pMember]==5 || pData[playerid][pMember]==6 || pData[playerid][pMember]==14) || pData[playerid][pLeader]==5|| pData[playerid][pLeader]==6 || pData[playerid][pLeader]==14) ?true:false;
}
stock OrgNotUnite(fractid) {
	return (fractid == 3 ||
		fractid == 5 ||
		fractid == 6 ||
		fractid == 11 ||
		fractid == 12 ||
		fractid == 13 ||
		fractid == 14 || 
		fractid == 15 || 
		fractid == 17 || 
		fractid == 18 || 
		fractid == 25)?true:false;
}
stock IsAGang(playerid) {
	if(!IsPlayerConnected(playerid)) return 0;
	return ((pData[playerid][pMember]==12 || pData[playerid][pMember]==13 || pData[playerid][pMember]==15 || pData[playerid][pMember]==17 || pData[playerid][pMember]==18) || pData[playerid][pLeader]==12 || pData[playerid][pLeader]==13 || pData[playerid][pLeader]==15 || pData[playerid][pLeader]==17 || pData[playerid][pLeader]==18) ?true:false;
}
stock UpdateIconHouse(h) {
	if(!HouseInfo[h][hOwned]) {
		DestroyDynamicMapIcon(HouseInfo[h][hMIcon]);
		DestroyDynamicPickup(HouseInfo[h][hPickup]);
		HouseInfo[h][hPickup] = CreateDynamicPickup(1273, 23, HouseInfo[h][hEnter][0], HouseInfo[h][hEnter][1], HouseInfo[h][hEnter][2],0);
		HouseInfo[h][hMIcon] = CreateDynamicMapIcon(HouseInfo[h][hEnter][0], HouseInfo[h][hEnter][1], HouseInfo[h][hEnter][2], 31, -1, 0, -1, -1, 200.0);
	}
	if(HouseInfo[h][hOwned]) {
		DestroyDynamicMapIcon(HouseInfo[h][hMIcon]);
		DestroyDynamicPickup(HouseInfo[h][hPickup]);
		HouseInfo[h][hPickup] = CreateDynamicPickup(1272, 23, HouseInfo[h][hEnter][0], HouseInfo[h][hEnter][1], HouseInfo[h][hEnter][2],0);
		HouseInfo[h][hMIcon] = CreateDynamicMapIcon(HouseInfo[h][hEnter][0], HouseInfo[h][hEnter][1], HouseInfo[h][hEnter][2], 32, -1, 0, -1, -1, 200.0);
	}
	return 1;
}
stock zavod_unwork(playerid) {
	RemovePlayerAttachedObject(playerid, 0);
	SetPlayerSpecialAction(playerid, 0);
	RemovePlayerAttachedObject(playerid, 4);
	workzavod[playerid] = false;
	if(pData[playerid][pMember]) SetPlayerSkin(playerid, pData[playerid][pModel]);
	else SetPlayerSkin(playerid, pData[playerid][pChar]);
	SCM(playerid, 0x3399FFFF, "√ê√†√°√Æ√∑√®√© √§√•√≠√º √ß√†√¢√•√∞√∏¬∏√≠");
	new ol[92];
	if(GetPVarInt(playerid, "amountprod") >= 1)
	{
		Hook_GivePlayerMoney(playerid, GetPVarInt(playerid, "factorymoney") - GetPVarInt(playerid, "factoryfail"));
		format(ol, sizeof(ol), "~b~+%d$", GetPVarInt(playerid, "factorymoney") - GetPVarInt(playerid, "factoryfail"));
		GameTextForPlayer(playerid, ol, 5000, 1);
	   	format(ol, sizeof(ol), "√Ç√±√•√£√Æ √±√Æ√ßS√≠√≠√Æ {FFFF00}%d{66CC00} √Ø√∞√Æ√§√≥√™√≤√Æ√¢, √ß√†√°√∞√†√™√Æ√¢√†√≠√Æ {FFFF00}%d √∏√≤.", GetPVarInt(playerid, "amountprod"), GetPVarInt(playerid, "failquantity"));
		SCM(playerid, 0x66CC00FF, ol);
		if(GetPVarInt(playerid, "mychanse") >= 6)
		{
			format(ol, sizeof(ol), "√ê√†√°√Æ√∑√®√© √≠√†√¢√ª√™ √≥√¢√•√´√®√∑√®√´√±√ø {66ccff}√≠√† %d √•√§√®√≠√®√∂(√ª)", GetPVarInt(playerid, "mychanse") - 5);
			SCM(playerid, 0x66CC00FF, ol);
		}
		else SCM(playerid, 0x66CC00FF, "√ê√†√°√Æ√∑√®√© √≠√†√¢√ª√™ √≠√• √®√ß√¨√•√≠√®√´√±√ø");
		format(ol, sizeof(ol), "√á√†√∞√†√°√Æ√≤√†√≠√Æ {00cc00}%d$,"CWHITE" √®√ß √≠√®√µ {ff6600}%d$"CWHITE" - √∏√≤√∞√†√¥ √ß√† √°√∞√†√™ √Ø√∞√Æ√§√≥√™√≤√Æ√¢", GetPVarInt(playerid, "factorymoney"), GetPVarInt(playerid, "factoryfail"));
		SCM(playerid, COLOR_WHITE, ol);
	}

	DeletePVar(playerid, "factorymoney");
	DeletePVar(playerid, "factoryfail");
	DeletePVar(playerid, "failquantity");
	DeletePVar(playerid, "mymetal");
	DeletePVar(playerid, "amountprod");
	SetPVarInt(playerid, "mychanse", 5);
}
public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid) {
	if(oldinteriorid == 2 && newinteriorid != 2 && workzavod[playerid]) 
		zavod_unwork(playerid);
	if(oldinteriorid == 10 && newinteriorid != 10 && is_work_casino[playerid]) {
		is_work_casino[playerid]=false;
		if(pData[playerid][pMember]) SetPlayerSkin(playerid, pData[playerid][pModel]);
		else SetPlayerSkin(playerid, pData[playerid][pChar]);
	}
	if(oldinteriorid != 5 && newinteriorid == 5 && GetPVarInt(playerid, "abonement")) {
		new vw = GetPlayerVirtualWorld(playerid);
		if(vw != 2 && vw != 3 && vw != 5) {
			if(pData[playerid][pSex] == 1) {
				switch(random(2)) {
					case 0: SetPlayerSkin(playerid, 80);
					case 1: SetPlayerSkin(playerid, 81);
				}
			}
			else SetPlayerSkin(playerid, 193);
		}
	}
	if(oldinteriorid == 5 && newinteriorid != 5 && GetPVarInt(playerid, "abonement")) {
		if(pData[playerid][pMember]) SetPlayerSkin(playerid, pData[playerid][pModel]);
		else SetPlayerSkin(playerid, pData[playerid][pChar]);
	}
	if(oldinteriorid == 5 && newinteriorid != 5 && GetPVarInt(playerid, "sport-inventory")) {
		RemovePlayerAttachedObject(playerid, 2);
		RemovePlayerAttachedObject(playerid, 3);
		DeletePVar(playerid, "sport-inventory");
		if(GetPVarInt(playerid, "set_enabled")) 
			DeletePVar(playerid, "set_enabled");
		ClearAnimations(playerid);
		SCM(playerid, COLOR_ERROR, "√í√∞√•√≠√®√∞√Æ√¢√™√† √ß√†√¢√•√∞√∏√•√≠√†");
	}

	if(newinteriorid == 0) {
		SetPlayerTime(playerid, time_server, 0);
		SetPlayerWeather(playerid, weather_server);
	}
	else {
		SetPlayerTime(playerid, 12, 0);
		SetPlayerWeather(playerid, 1);
	}

	return 1;
}
public OnPlayerLeaveDynamicArea(playerid, areaid) {
	Derby_OnPlayerLeaveDynamicArea(playerid, areaid);

	if(areaid == tirzone) TogglePlayerDynamicCP(playerid, ammunation, 1);
	if(areaid == ashdoor) 
		TextDrawHideForPlayer(playerid, alttd);
	if(areaid >= pay_n_spray[0] && areaid <= pay_n_spray[8]) {
		SetVehicleHealth(GetPlayerVehicleID(playerid), GetPVarFloat(playerid, "pspray_fix_hp"));
		DeletePVar(playerid, "pspray_fix_hp");
	}
	if(areaid == sphere_props) {
		SetPlayerTime(playerid, time_server, 0);
		SetPlayerWeather(playerid, weather_server);
	}
	if(areaid >= lift_sphere[0] && areaid <= lift_sphere[13]) {
		new Float: x, Float: y, Float: z, 
			num;

		if(areaid == lift_sphere[0]) num = 0;
		if(areaid == lift_sphere[1]) num = 1;
		if(areaid == lift_sphere[2]) num = 2;
		if(areaid == lift_sphere[3]) num = 3;
		if(areaid == lift_sphere[4]) num = 4;
		if(areaid == lift_sphere[5]) num = 5;
		if(areaid == lift_sphere[6]) num = 6;
		if(areaid == lift_sphere[7]) num = 7;
		if(areaid == lift_sphere[8]) num = 8;
		if(areaid == lift_sphere[9]) num = 9;
		if(areaid == lift_sphere[10]) num = 10;
		if(areaid == lift_sphere[11]) num = 11;
		if(areaid == lift_sphere[12]) num = 12;
		if(areaid == lift_sphere[13]) num = 13;

		GetDynamicObjectPos(lift_door[num][0], x, y, z);
		MoveDynamicObject(lift_door[num][0], 287.887451, -1609.585780, z, DOORS_SPEED);
		MoveDynamicObject(lift_door[num][1], 287.880798, -1609.639536, z, DOORS_SPEED);
	}
	if(areaid >= kv_sphere[0] && areaid <= kv_sphere[13]) {
		for(new i = 0; i < 34; i ++) PlayerTextDrawDestroy(playerid, lift_td[playerid][i]);
		CancelSelectTextDraw(playerid);
	}

	if(areaid == fix_light_bank) {
		SetPlayerTime(playerid, time_server, 0);
		SetPlayerWeather(playerid, weather_server);
	}
	foreach(new i:boxPlayer) {
		if(!GetPVarType(i, "BBArea") || areaid != GetPVarInt(i, "BBArea")) continue;
		StopStream(playerid);
		SCM(playerid, COLOR_MAIN, "En la zona del magnet√≥fono");
		break;
	} return 1;
}
CB: repairing_car(playerid) {
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
	Hook_GivePlayerMoney(playerid, -500);
	TogglePlayerControllable(playerid, 1);
	new car = GetPlayerVehicleID(playerid);
	RepairVehicle(car);
	PlayerPlaySound(playerid, 4600, 0.0, 0.0, 0.0);
	return GameTextForPlayer(playerid, "~r~-500$~n~~y~CAR REPAIRED", 5000, 3);
}
public OnPlayerEnterDynamicArea(playerid, areaid) {

	if(areaid == gpssphere[playerid]) {
		if(GetPVarInt(playerid, "playerisGPS")) {
			PlayStream(playerid, "https://normative-rp.ru/files/media/gps.mp3");
			DisableGPS(playerid);
		}
	}

	if(areaid == tirzone) TogglePlayerDynamicCP(playerid, ammunation, 0);
	if(pTemp[playerid][pSpectate] && areaid != sphere_props) 
		return 1;
	if(areaid == ashdoor) 
		TextDrawShowForPlayer(playerid, alttd);
	if(areaid >= pay_n_spray[0] && areaid <= pay_n_spray[8]) {
		new Float: health;
		GetVehicleHealth(GetPlayerVehicleID(playerid), health);
		SetPVarFloat(playerid, "pspray_fix_hp", health);
	}
	if(areaid == sphere_props) {
		SetPlayerTime(playerid, 12, 0);
		SetPlayerWeather(playerid, 1);
	}
	if(areaid >= lift_sphere[0] && areaid <= lift_sphere[13]) {
		new Float: x, Float: y, Float: z, 
			num;

		if(areaid == lift_sphere[0]) num = 0;
		if(areaid == lift_sphere[1]) num = 1;
		if(areaid == lift_sphere[2]) num = 2;
		if(areaid == lift_sphere[3]) num = 3;
		if(areaid == lift_sphere[4]) num = 4;
		if(areaid == lift_sphere[5]) num = 5;
		if(areaid == lift_sphere[6]) num = 6;
		if(areaid == lift_sphere[7]) num = 7;
		if(areaid == lift_sphere[8]) num = 8;
		if(areaid == lift_sphere[9]) num = 9;
		if(areaid == lift_sphere[10]) num = 10;
		if(areaid == lift_sphere[11]) num = 11;
		if(areaid == lift_sphere[12]) num = 12;
		if(areaid == lift_sphere[13]) num = 13;

		GetDynamicObjectPos(lift_door[num][0], x, y, z);
		MoveDynamicObject(lift_door[num][0], 286.299930, -1609.332519, z, DOORS_SPEED);
		MoveDynamicObject(lift_door[num][1], 289.471160, -1609.902465, z, DOORS_SPEED);

		PlayerPlaySound(playerid, 21000, 0.0, 0.0, 0.0);
	}
	if(areaid >= kv_sphere[0] && areaid <= kv_sphere[13]) {
		if(areaid == kv_sphere[0]) fl_floor[playerid] = 0;
		if(areaid == kv_sphere[1]) fl_floor[playerid] = 1;
		if(areaid == kv_sphere[2]) fl_floor[playerid] = 2;
		if(areaid == kv_sphere[3]) fl_floor[playerid] = 3;
		if(areaid == kv_sphere[4]) fl_floor[playerid] = 4;
		if(areaid == kv_sphere[5]) fl_floor[playerid] = 5;
		if(areaid == kv_sphere[6]) fl_floor[playerid] = 6;
		if(areaid == kv_sphere[7]) fl_floor[playerid] = 7;
		if(areaid == kv_sphere[8]) fl_floor[playerid] = 8;
		if(areaid == kv_sphere[9]) fl_floor[playerid] = 9;
		if(areaid == kv_sphere[10]) fl_floor[playerid] = 10;
		if(areaid == kv_sphere[11]) fl_floor[playerid] = 11;
		if(areaid == kv_sphere[12]) fl_floor[playerid] = 12;
		if(areaid == kv_sphere[13]) fl_floor[playerid] = 13;

		if(GetPVarInt(playerid, "delay_lifttd") > gettime()) 
			return 1;

		lift_td[playerid][33] = CreatePlayerTextDraw(playerid, 320.000000, 120.000000, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~");
		PlayerTextDrawLetterSize(playerid, lift_td[playerid][33], 0.500000, 1.000000);
		PlayerTextDrawTextSize(playerid, lift_td[playerid][33], 20.000000, 250.000000);
		PlayerTextDrawAlignment(playerid, lift_td[playerid][33], 2);
		PlayerTextDrawColor(playerid, lift_td[playerid][33], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, lift_td[playerid][33], 1);
		PlayerTextDrawBoxColor(playerid, lift_td[playerid][33], 0x66666666);
		PlayerTextDrawSetShadow(playerid, lift_td[playerid][33], 1);
		PlayerTextDrawSetOutline(playerid, lift_td[playerid][33], 0);
		PlayerTextDrawBackgroundColor(playerid, lift_td[playerid][33], 0x000000FF);
		PlayerTextDrawFont(playerid, lift_td[playerid][33], 1);
		PlayerTextDrawSetProportional(playerid, lift_td[playerid][33], 1);
		PlayerTextDrawSetSelectable(playerid, lift_td[playerid][33], 0);

		lift_td[playerid][32] = CreatePlayerTextDraw(playerid, 320.000000, 124.000000, "_");
		PlayerTextDrawLetterSize(playerid, lift_td[playerid][32], 0.500000, 1.000000);
		PlayerTextDrawTextSize(playerid, lift_td[playerid][32], 20.000000, 230.000000);
		PlayerTextDrawAlignment(playerid, lift_td[playerid][32], 2);
		PlayerTextDrawColor(playerid, lift_td[playerid][32], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, lift_td[playerid][32], 1);
		PlayerTextDrawBoxColor(playerid, lift_td[playerid][32], 0x00000055);
		PlayerTextDrawSetShadow(playerid, lift_td[playerid][32], 1);
		PlayerTextDrawSetOutline(playerid, lift_td[playerid][32], 0);
		PlayerTextDrawBackgroundColor(playerid, lift_td[playerid][32], 0x000000FF);
		PlayerTextDrawFont(playerid, lift_td[playerid][32], 1);
		PlayerTextDrawSetProportional(playerid, lift_td[playerid][32], 1);
		PlayerTextDrawSetSelectable(playerid, lift_td[playerid][32], 0);

		lift_td[playerid][31] = CreatePlayerTextDraw(playerid, 330.000000, 120.000000, "FLOOR");
		PlayerTextDrawLetterSize(playerid, lift_td[playerid][31], 0.800000, 1.899999);
		PlayerTextDrawTextSize(playerid, lift_td[playerid][31], 1280.000000, 1280.000000);
		PlayerTextDrawAlignment(playerid, lift_td[playerid][31], 2);
		PlayerTextDrawColor(playerid, lift_td[playerid][31], 0x4D5EFFFF);
		PlayerTextDrawUseBox(playerid, lift_td[playerid][31], 0);
		PlayerTextDrawBoxColor(playerid, lift_td[playerid][31], 0x80808080);
		PlayerTextDrawSetShadow(playerid, lift_td[playerid][31], 2);
		PlayerTextDrawSetOutline(playerid, lift_td[playerid][31], 1);
		PlayerTextDrawBackgroundColor(playerid, lift_td[playerid][31], 0x000000FF);
		PlayerTextDrawFont(playerid, lift_td[playerid][31], 3);
		PlayerTextDrawSetProportional(playerid, lift_td[playerid][31], 1);
		PlayerTextDrawSetSelectable(playerid, lift_td[playerid][31], 0);

		lift_td[playerid][30] = CreatePlayerTextDraw(playerid, 320.000000, 144.000000, "_");
		PlayerTextDrawLetterSize(playerid, lift_td[playerid][30], 0.500000, 1.000000);
		PlayerTextDrawTextSize(playerid, lift_td[playerid][30], 20.000000, 230.000000);
		PlayerTextDrawAlignment(playerid, lift_td[playerid][30], 2);
		PlayerTextDrawColor(playerid, lift_td[playerid][30], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, lift_td[playerid][30], 1);
		PlayerTextDrawBoxColor(playerid, lift_td[playerid][30], 0x00000055);
		PlayerTextDrawSetShadow(playerid, lift_td[playerid][30], 1);
		PlayerTextDrawSetOutline(playerid, lift_td[playerid][30], 0);
		PlayerTextDrawBackgroundColor(playerid, lift_td[playerid][30], 0x000000FF);
		PlayerTextDrawFont(playerid, lift_td[playerid][30], 1);
		PlayerTextDrawSetProportional(playerid, lift_td[playerid][30], 1);
		PlayerTextDrawSetSelectable(playerid, lift_td[playerid][30], 1);

		lift_td[playerid][29] = CreatePlayerTextDraw(playerid, 320.000000, 140.000000, "1");
		PlayerTextDrawLetterSize(playerid, lift_td[playerid][29], 0.800000, 1.899999);
		PlayerTextDrawTextSize(playerid, lift_td[playerid][29], 20.000000, 40.000000);
		PlayerTextDrawAlignment(playerid, lift_td[playerid][29], 2);
		PlayerTextDrawColor(playerid, lift_td[playerid][29], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, lift_td[playerid][29], 1);
		PlayerTextDrawBoxColor(playerid, lift_td[playerid][29], 0x00000000);
		PlayerTextDrawSetShadow(playerid, lift_td[playerid][29], 2);
		PlayerTextDrawSetOutline(playerid, lift_td[playerid][29], 1);
		PlayerTextDrawBackgroundColor(playerid, lift_td[playerid][29], 0x000000FF);
		PlayerTextDrawFont(playerid, lift_td[playerid][29], 3);
		PlayerTextDrawSetProportional(playerid, lift_td[playerid][29], 1);
		PlayerTextDrawSetSelectable(playerid, lift_td[playerid][29], 1);

		lift_td[playerid][28] = CreatePlayerTextDraw(playerid, 320.000000, 164.000000, "_");
		PlayerTextDrawLetterSize(playerid, lift_td[playerid][28], 0.500000, 1.000000);
		PlayerTextDrawTextSize(playerid, lift_td[playerid][28], 20.000000, 230.000000);
		PlayerTextDrawAlignment(playerid, lift_td[playerid][28], 2);
		PlayerTextDrawColor(playerid, lift_td[playerid][28], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, lift_td[playerid][28], 1);
		PlayerTextDrawBoxColor(playerid, lift_td[playerid][28], 0x00000055);
		PlayerTextDrawSetShadow(playerid, lift_td[playerid][28], 1);
		PlayerTextDrawSetOutline(playerid, lift_td[playerid][28], 0);
		PlayerTextDrawBackgroundColor(playerid, lift_td[playerid][28], 0x000000FF);
		PlayerTextDrawFont(playerid, lift_td[playerid][28], 1);
		PlayerTextDrawSetProportional(playerid, lift_td[playerid][28], 1);
		PlayerTextDrawSetSelectable(playerid, lift_td[playerid][28], 1);

		lift_td[playerid][27] = CreatePlayerTextDraw(playerid, 320.000000, 160.000000, "2");
		PlayerTextDrawLetterSize(playerid, lift_td[playerid][27], 0.800000, 1.899999);
		PlayerTextDrawTextSize(playerid, lift_td[playerid][27], 20.000000, 40.000000);
		PlayerTextDrawAlignment(playerid, lift_td[playerid][27], 2);
		PlayerTextDrawColor(playerid, lift_td[playerid][27], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, lift_td[playerid][27], 1);
		PlayerTextDrawBoxColor(playerid, lift_td[playerid][27], 0x00000000);
		PlayerTextDrawSetShadow(playerid, lift_td[playerid][27], 2);
		PlayerTextDrawSetOutline(playerid, lift_td[playerid][27], 1);
		PlayerTextDrawBackgroundColor(playerid, lift_td[playerid][27], 0x000000FF);
		PlayerTextDrawFont(playerid, lift_td[playerid][27], 3);
		PlayerTextDrawSetProportional(playerid, lift_td[playerid][27], 1);
		PlayerTextDrawSetSelectable(playerid, lift_td[playerid][27], 1);

		lift_td[playerid][26] = CreatePlayerTextDraw(playerid, 320.000000, 184.000000, "_");
		PlayerTextDrawLetterSize(playerid, lift_td[playerid][26], 0.500000, 1.000000);
		PlayerTextDrawTextSize(playerid, lift_td[playerid][26], 20.000000, 230.000000);
		PlayerTextDrawAlignment(playerid, lift_td[playerid][26], 2);
		PlayerTextDrawColor(playerid, lift_td[playerid][26], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, lift_td[playerid][26], 1);
		PlayerTextDrawBoxColor(playerid, lift_td[playerid][26], 0x00000055);
		PlayerTextDrawSetShadow(playerid, lift_td[playerid][26], 1);
		PlayerTextDrawSetOutline(playerid, lift_td[playerid][26], 0);
		PlayerTextDrawBackgroundColor(playerid, lift_td[playerid][26], 0x000000FF);
		PlayerTextDrawFont(playerid, lift_td[playerid][26], 1);
		PlayerTextDrawSetProportional(playerid, lift_td[playerid][26], 1);
		PlayerTextDrawSetSelectable(playerid, lift_td[playerid][26], 1);

		lift_td[playerid][25] = CreatePlayerTextDraw(playerid, 320.000000, 180.000000, "3");
		PlayerTextDrawLetterSize(playerid, lift_td[playerid][25], 0.800000, 1.899999);
		PlayerTextDrawTextSize(playerid, lift_td[playerid][25], 20.000000, 40.000000);
		PlayerTextDrawAlignment(playerid, lift_td[playerid][25], 2);
		PlayerTextDrawColor(playerid, lift_td[playerid][25], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, lift_td[playerid][25], 1);
		PlayerTextDrawBoxColor(playerid, lift_td[playerid][25], 0x00000000);
		PlayerTextDrawSetShadow(playerid, lift_td[playerid][25], 2);
		PlayerTextDrawSetOutline(playerid, lift_td[playerid][25], 1);
		PlayerTextDrawBackgroundColor(playerid, lift_td[playerid][25], 0x000000FF);
		PlayerTextDrawFont(playerid, lift_td[playerid][25], 3);
		PlayerTextDrawSetProportional(playerid, lift_td[playerid][25], 1);
		PlayerTextDrawSetSelectable(playerid, lift_td[playerid][25], 1);

		lift_td[playerid][24] = CreatePlayerTextDraw(playerid, 320.000000, 204.000000, "_");
		PlayerTextDrawLetterSize(playerid, lift_td[playerid][24], 0.500000, 1.000000);
		PlayerTextDrawTextSize(playerid, lift_td[playerid][24], 20.000000, 230.000000);
		PlayerTextDrawAlignment(playerid, lift_td[playerid][24], 2);
		PlayerTextDrawColor(playerid, lift_td[playerid][24], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, lift_td[playerid][24], 1);
		PlayerTextDrawBoxColor(playerid, lift_td[playerid][24], 0x00000055);
		PlayerTextDrawSetShadow(playerid, lift_td[playerid][24], 1);
		PlayerTextDrawSetOutline(playerid, lift_td[playerid][24], 0);
		PlayerTextDrawBackgroundColor(playerid, lift_td[playerid][24], 0x000000FF);
		PlayerTextDrawFont(playerid, lift_td[playerid][24], 1);
		PlayerTextDrawSetProportional(playerid, lift_td[playerid][24], 1);
		PlayerTextDrawSetSelectable(playerid, lift_td[playerid][24], 1);

		lift_td[playerid][23] = CreatePlayerTextDraw(playerid, 320.000000, 200.000000, "4");
		PlayerTextDrawLetterSize(playerid, lift_td[playerid][23], 0.800000, 1.899999);
		PlayerTextDrawTextSize(playerid, lift_td[playerid][23], 20.000000, 40.000000);
		PlayerTextDrawAlignment(playerid, lift_td[playerid][23], 2);
		PlayerTextDrawColor(playerid, lift_td[playerid][23], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, lift_td[playerid][23], 1);
		PlayerTextDrawBoxColor(playerid, lift_td[playerid][23], 0x00000000);
		PlayerTextDrawSetShadow(playerid, lift_td[playerid][23], 2);
		PlayerTextDrawSetOutline(playerid, lift_td[playerid][23], 1);
		PlayerTextDrawBackgroundColor(playerid, lift_td[playerid][23], 0x000000FF);
		PlayerTextDrawFont(playerid, lift_td[playerid][23], 3);
		PlayerTextDrawSetProportional(playerid, lift_td[playerid][23], 1);
		PlayerTextDrawSetSelectable(playerid, lift_td[playerid][23], 1);

		lift_td[playerid][22] = CreatePlayerTextDraw(playerid, 320.000000, 224.000000, "_");
		PlayerTextDrawLetterSize(playerid, lift_td[playerid][22], 0.500000, 1.000000);
		PlayerTextDrawTextSize(playerid, lift_td[playerid][22], 20.000000, 230.000000);
		PlayerTextDrawAlignment(playerid, lift_td[playerid][22], 2);
		PlayerTextDrawColor(playerid, lift_td[playerid][22], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, lift_td[playerid][22], 1);
		PlayerTextDrawBoxColor(playerid, lift_td[playerid][22], 0x00000055);
		PlayerTextDrawSetShadow(playerid, lift_td[playerid][22], 1);
		PlayerTextDrawSetOutline(playerid, lift_td[playerid][22], 0);
		PlayerTextDrawBackgroundColor(playerid, lift_td[playerid][22], 0x000000FF);
		PlayerTextDrawFont(playerid, lift_td[playerid][22], 1);
		PlayerTextDrawSetProportional(playerid, lift_td[playerid][22], 1);
		PlayerTextDrawSetSelectable(playerid, lift_td[playerid][22], 1);

		lift_td[playerid][21] = CreatePlayerTextDraw(playerid, 320.000000, 220.000000, "5");
		PlayerTextDrawLetterSize(playerid, lift_td[playerid][21], 0.800000, 1.899999);
		PlayerTextDrawTextSize(playerid, lift_td[playerid][21], 20.000000, 40.000000);
		PlayerTextDrawAlignment(playerid, lift_td[playerid][21], 2);
		PlayerTextDrawColor(playerid, lift_td[playerid][21], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, lift_td[playerid][21], 1);
		PlayerTextDrawBoxColor(playerid, lift_td[playerid][21], 0x00000000);
		PlayerTextDrawSetShadow(playerid, lift_td[playerid][21], 2);
		PlayerTextDrawSetOutline(playerid, lift_td[playerid][21], 1);
		PlayerTextDrawBackgroundColor(playerid, lift_td[playerid][21], 0x000000FF);
		PlayerTextDrawFont(playerid, lift_td[playerid][21], 3);
		PlayerTextDrawSetProportional(playerid, lift_td[playerid][21], 1);
		PlayerTextDrawSetSelectable(playerid, lift_td[playerid][21], 1);

		lift_td[playerid][20] = CreatePlayerTextDraw(playerid, 320.000000, 244.000000, "_");
		PlayerTextDrawLetterSize(playerid, lift_td[playerid][20], 0.500000, 1.000000);
		PlayerTextDrawTextSize(playerid, lift_td[playerid][20], 20.000000, 230.000000);
		PlayerTextDrawAlignment(playerid, lift_td[playerid][20], 2);
		PlayerTextDrawColor(playerid, lift_td[playerid][20], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, lift_td[playerid][20], 1);
		PlayerTextDrawBoxColor(playerid, lift_td[playerid][20], 0x00000055);
		PlayerTextDrawSetShadow(playerid, lift_td[playerid][20], 1);
		PlayerTextDrawSetOutline(playerid, lift_td[playerid][20], 0);
		PlayerTextDrawBackgroundColor(playerid, lift_td[playerid][20], 0x000000FF);
		PlayerTextDrawFont(playerid, lift_td[playerid][20], 1);
		PlayerTextDrawSetProportional(playerid, lift_td[playerid][20], 1);
		PlayerTextDrawSetSelectable(playerid, lift_td[playerid][20], 1);

		lift_td[playerid][19] = CreatePlayerTextDraw(playerid, 320.000000, 240.000000, "6");
		PlayerTextDrawLetterSize(playerid, lift_td[playerid][19], 0.800000, 1.899999);
		PlayerTextDrawTextSize(playerid, lift_td[playerid][19], 20.000000, 40.000000);
		PlayerTextDrawAlignment(playerid, lift_td[playerid][19], 2);
		PlayerTextDrawColor(playerid, lift_td[playerid][19], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, lift_td[playerid][19], 1);
		PlayerTextDrawBoxColor(playerid, lift_td[playerid][19], 0x00000000);
		PlayerTextDrawSetShadow(playerid, lift_td[playerid][19], 2);
		PlayerTextDrawSetOutline(playerid, lift_td[playerid][19], 1);
		PlayerTextDrawBackgroundColor(playerid, lift_td[playerid][19], 0x000000FF);
		PlayerTextDrawFont(playerid, lift_td[playerid][19], 3);
		PlayerTextDrawSetProportional(playerid, lift_td[playerid][19], 1);
		PlayerTextDrawSetSelectable(playerid, lift_td[playerid][19], 1);

		lift_td[playerid][18] = CreatePlayerTextDraw(playerid, 320.000000, 264.000000, "_");
		PlayerTextDrawLetterSize(playerid, lift_td[playerid][18], 0.500000, 1.000000);
		PlayerTextDrawTextSize(playerid, lift_td[playerid][18], 20.000000, 230.000000);
		PlayerTextDrawAlignment(playerid, lift_td[playerid][18], 2);
		PlayerTextDrawColor(playerid, lift_td[playerid][18], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, lift_td[playerid][18], 1);
		PlayerTextDrawBoxColor(playerid, lift_td[playerid][18], 0x00000055);
		PlayerTextDrawSetShadow(playerid, lift_td[playerid][18], 1);
		PlayerTextDrawSetOutline(playerid, lift_td[playerid][18], 0);
		PlayerTextDrawBackgroundColor(playerid, lift_td[playerid][18], 0x000000FF);
		PlayerTextDrawFont(playerid, lift_td[playerid][18], 1);
		PlayerTextDrawSetProportional(playerid, lift_td[playerid][18], 1);
		PlayerTextDrawSetSelectable(playerid, lift_td[playerid][18], 1);

		lift_td[playerid][17] = CreatePlayerTextDraw(playerid, 320.000000, 260.000000, "7");
		PlayerTextDrawLetterSize(playerid, lift_td[playerid][17], 0.800000, 1.899999);
		PlayerTextDrawTextSize(playerid, lift_td[playerid][17], 20.000000, 40.000000);
		PlayerTextDrawAlignment(playerid, lift_td[playerid][17], 2);
		PlayerTextDrawColor(playerid, lift_td[playerid][17], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, lift_td[playerid][17], 1);
		PlayerTextDrawBoxColor(playerid, lift_td[playerid][17], 0x00000000);
		PlayerTextDrawSetShadow(playerid, lift_td[playerid][17], 2);
		PlayerTextDrawSetOutline(playerid, lift_td[playerid][17], 1);
		PlayerTextDrawBackgroundColor(playerid, lift_td[playerid][17], 0x000000FF);
		PlayerTextDrawFont(playerid, lift_td[playerid][17], 3);
		PlayerTextDrawSetProportional(playerid, lift_td[playerid][17], 1);
		PlayerTextDrawSetSelectable(playerid, lift_td[playerid][17], 1);

		lift_td[playerid][16] = CreatePlayerTextDraw(playerid, 320.000000, 284.000000, "_");
		PlayerTextDrawLetterSize(playerid, lift_td[playerid][16], 0.500000, 1.000000);
		PlayerTextDrawTextSize(playerid, lift_td[playerid][16], 20.000000, 230.000000);
		PlayerTextDrawAlignment(playerid, lift_td[playerid][16], 2);
		PlayerTextDrawColor(playerid, lift_td[playerid][16], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, lift_td[playerid][16], 1);
		PlayerTextDrawBoxColor(playerid, lift_td[playerid][16], 0x00000055);
		PlayerTextDrawSetShadow(playerid, lift_td[playerid][16], 1);
		PlayerTextDrawSetOutline(playerid, lift_td[playerid][16], 0);
		PlayerTextDrawBackgroundColor(playerid, lift_td[playerid][16], 0x000000FF);
		PlayerTextDrawFont(playerid, lift_td[playerid][16], 1);
		PlayerTextDrawSetProportional(playerid, lift_td[playerid][16], 1);
		PlayerTextDrawSetSelectable(playerid, lift_td[playerid][16], 1);

		lift_td[playerid][15] = CreatePlayerTextDraw(playerid, 320.000000, 280.000000, "8");
		PlayerTextDrawLetterSize(playerid, lift_td[playerid][15], 0.800000, 1.899999);
		PlayerTextDrawTextSize(playerid, lift_td[playerid][15], 20.000000, 40.000000);
		PlayerTextDrawAlignment(playerid, lift_td[playerid][15], 2);
		PlayerTextDrawColor(playerid, lift_td[playerid][15], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, lift_td[playerid][15], 1);
		PlayerTextDrawBoxColor(playerid, lift_td[playerid][15], 0x00000000);
		PlayerTextDrawSetShadow(playerid, lift_td[playerid][15], 2);
		PlayerTextDrawSetOutline(playerid, lift_td[playerid][15], 1);
		PlayerTextDrawBackgroundColor(playerid, lift_td[playerid][15], 0x000000FF);
		PlayerTextDrawFont(playerid, lift_td[playerid][15], 3);
		PlayerTextDrawSetProportional(playerid, lift_td[playerid][15], 1);
		PlayerTextDrawSetSelectable(playerid, lift_td[playerid][15], 1);

		lift_td[playerid][14] = CreatePlayerTextDraw(playerid, 320.000000, 304.000000, "_");
		PlayerTextDrawLetterSize(playerid, lift_td[playerid][14], 0.500000, 1.000000);
		PlayerTextDrawTextSize(playerid, lift_td[playerid][14], 20.000000, 230.000000);
		PlayerTextDrawAlignment(playerid, lift_td[playerid][14], 2);
		PlayerTextDrawColor(playerid, lift_td[playerid][14], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, lift_td[playerid][14], 1);
		PlayerTextDrawBoxColor(playerid, lift_td[playerid][14], 0x00000055);
		PlayerTextDrawSetShadow(playerid, lift_td[playerid][14], 1);
		PlayerTextDrawSetOutline(playerid, lift_td[playerid][14], 0);
		PlayerTextDrawBackgroundColor(playerid, lift_td[playerid][14], 0x000000FF);
		PlayerTextDrawFont(playerid, lift_td[playerid][14], 1);
		PlayerTextDrawSetProportional(playerid, lift_td[playerid][14], 1);
		PlayerTextDrawSetSelectable(playerid, lift_td[playerid][14], 1);

		lift_td[playerid][13] = CreatePlayerTextDraw(playerid, 320.000000, 300.000000, "9");
		PlayerTextDrawLetterSize(playerid, lift_td[playerid][13], 0.800000, 1.899999);
		PlayerTextDrawTextSize(playerid, lift_td[playerid][13], 20.000000, 40.000000);
		PlayerTextDrawAlignment(playerid, lift_td[playerid][13], 2);
		PlayerTextDrawColor(playerid, lift_td[playerid][13], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, lift_td[playerid][13], 1);
		PlayerTextDrawBoxColor(playerid, lift_td[playerid][13], 0x00000000);
		PlayerTextDrawSetShadow(playerid, lift_td[playerid][13], 2);
		PlayerTextDrawSetOutline(playerid, lift_td[playerid][13], 1);
		PlayerTextDrawBackgroundColor(playerid, lift_td[playerid][13], 0x000000FF);
		PlayerTextDrawFont(playerid, lift_td[playerid][13], 3);
		PlayerTextDrawSetProportional(playerid, lift_td[playerid][13], 1);
		PlayerTextDrawSetSelectable(playerid, lift_td[playerid][13], 1);

		lift_td[playerid][12] = CreatePlayerTextDraw(playerid, 320.000000, 324.000000, "_");
		PlayerTextDrawLetterSize(playerid, lift_td[playerid][12], 0.500000, 1.000000);
		PlayerTextDrawTextSize(playerid, lift_td[playerid][12], 20.000000, 230.000000);
		PlayerTextDrawAlignment(playerid, lift_td[playerid][12], 2);
		PlayerTextDrawColor(playerid, lift_td[playerid][12], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, lift_td[playerid][12], 1);
		PlayerTextDrawBoxColor(playerid, lift_td[playerid][12], 0x00000055);
		PlayerTextDrawSetShadow(playerid, lift_td[playerid][12], 1);
		PlayerTextDrawSetOutline(playerid, lift_td[playerid][12], 0);
		PlayerTextDrawBackgroundColor(playerid, lift_td[playerid][12], 0x000000FF);
		PlayerTextDrawFont(playerid, lift_td[playerid][12], 1);
		PlayerTextDrawSetProportional(playerid, lift_td[playerid][12], 1);
		PlayerTextDrawSetSelectable(playerid, lift_td[playerid][12], 1);

		lift_td[playerid][11] = CreatePlayerTextDraw(playerid, 320.000000, 320.000000, "10");
		PlayerTextDrawLetterSize(playerid, lift_td[playerid][11], 0.800000, 1.899999);
		PlayerTextDrawTextSize(playerid, lift_td[playerid][11], 20.000000, 40.000000);
		PlayerTextDrawAlignment(playerid, lift_td[playerid][11], 2);
		PlayerTextDrawColor(playerid, lift_td[playerid][11], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, lift_td[playerid][11], 1);
		PlayerTextDrawBoxColor(playerid, lift_td[playerid][11], 0x00000000);
		PlayerTextDrawSetShadow(playerid, lift_td[playerid][11], 2);
		PlayerTextDrawSetOutline(playerid, lift_td[playerid][11], 1);
		PlayerTextDrawBackgroundColor(playerid, lift_td[playerid][11], 0x000000FF);
		PlayerTextDrawFont(playerid, lift_td[playerid][11], 3);
		PlayerTextDrawSetProportional(playerid, lift_td[playerid][11], 1);
		PlayerTextDrawSetSelectable(playerid, lift_td[playerid][11], 1);

		lift_td[playerid][10] = CreatePlayerTextDraw(playerid, 320.000000, 344.000000, "_");
		PlayerTextDrawLetterSize(playerid, lift_td[playerid][10], 0.500000, 1.000000);
		PlayerTextDrawTextSize(playerid, lift_td[playerid][10], 20.000000, 230.000000);
		PlayerTextDrawAlignment(playerid, lift_td[playerid][10], 2);
		PlayerTextDrawColor(playerid, lift_td[playerid][10], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, lift_td[playerid][10], 1);
		PlayerTextDrawBoxColor(playerid, lift_td[playerid][10], 0x00000055);
		PlayerTextDrawSetShadow(playerid, lift_td[playerid][10], 1);
		PlayerTextDrawSetOutline(playerid, lift_td[playerid][10], 0);
		PlayerTextDrawBackgroundColor(playerid, lift_td[playerid][10], 0x000000FF);
		PlayerTextDrawFont(playerid, lift_td[playerid][10], 1);
		PlayerTextDrawSetProportional(playerid, lift_td[playerid][10], 1);
		PlayerTextDrawSetSelectable(playerid, lift_td[playerid][10], 1);

		lift_td[playerid][9] = CreatePlayerTextDraw(playerid, 320.000000, 340.000000, "11");
		PlayerTextDrawLetterSize(playerid, lift_td[playerid][9], 0.800000, 1.899999);
		PlayerTextDrawTextSize(playerid, lift_td[playerid][9], 20.000000, 40.000000);
		PlayerTextDrawAlignment(playerid, lift_td[playerid][9], 2);
		PlayerTextDrawColor(playerid, lift_td[playerid][9], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, lift_td[playerid][9], 1);
		PlayerTextDrawBoxColor(playerid, lift_td[playerid][9], 0x00000000);
		PlayerTextDrawSetShadow(playerid, lift_td[playerid][9], 2);
		PlayerTextDrawSetOutline(playerid, lift_td[playerid][9], 1);
		PlayerTextDrawBackgroundColor(playerid, lift_td[playerid][9], 0x000000FF);
		PlayerTextDrawFont(playerid, lift_td[playerid][9], 3);
		PlayerTextDrawSetProportional(playerid, lift_td[playerid][9], 1);
		PlayerTextDrawSetSelectable(playerid, lift_td[playerid][9], 1);

		lift_td[playerid][8] = CreatePlayerTextDraw(playerid, 320.000000, 364.000000, "_");
		PlayerTextDrawLetterSize(playerid, lift_td[playerid][8], 0.500000, 1.000000);
		PlayerTextDrawTextSize(playerid, lift_td[playerid][8], 20.000000, 230.000000);
		PlayerTextDrawAlignment(playerid, lift_td[playerid][8], 2);
		PlayerTextDrawColor(playerid, lift_td[playerid][8], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, lift_td[playerid][8], 1);
		PlayerTextDrawBoxColor(playerid, lift_td[playerid][8], 0x00000055);
		PlayerTextDrawSetShadow(playerid, lift_td[playerid][8], 1);
		PlayerTextDrawSetOutline(playerid, lift_td[playerid][8], 0);
		PlayerTextDrawBackgroundColor(playerid, lift_td[playerid][8], 0x000000FF);
		PlayerTextDrawFont(playerid, lift_td[playerid][8], 1);
		PlayerTextDrawSetProportional(playerid, lift_td[playerid][8], 1);
		PlayerTextDrawSetSelectable(playerid, lift_td[playerid][8], 1);

		lift_td[playerid][7] = CreatePlayerTextDraw(playerid, 320.000000, 360.000000, "12");
		PlayerTextDrawLetterSize(playerid, lift_td[playerid][7], 0.800000, 1.899999);
		PlayerTextDrawTextSize(playerid, lift_td[playerid][7], 20.000000, 40.000000);
		PlayerTextDrawAlignment(playerid, lift_td[playerid][7], 2);
		PlayerTextDrawColor(playerid, lift_td[playerid][7], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, lift_td[playerid][7], 1);
		PlayerTextDrawBoxColor(playerid, lift_td[playerid][7], 0x00000000);
		PlayerTextDrawSetShadow(playerid, lift_td[playerid][7], 2);
		PlayerTextDrawSetOutline(playerid, lift_td[playerid][7], 1);
		PlayerTextDrawBackgroundColor(playerid, lift_td[playerid][7], 0x000000FF);
		PlayerTextDrawFont(playerid, lift_td[playerid][7], 3);
		PlayerTextDrawSetProportional(playerid, lift_td[playerid][7], 1);
		PlayerTextDrawSetSelectable(playerid, lift_td[playerid][7], 1);

		lift_td[playerid][6] = CreatePlayerTextDraw(playerid, 320.000000, 384.000000, "_");
		PlayerTextDrawLetterSize(playerid, lift_td[playerid][6], 0.500000, 1.000000);
		PlayerTextDrawTextSize(playerid, lift_td[playerid][6], 20.000000, 230.000000);
		PlayerTextDrawAlignment(playerid, lift_td[playerid][6], 2);
		PlayerTextDrawColor(playerid, lift_td[playerid][6], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, lift_td[playerid][6], 1);
		PlayerTextDrawBoxColor(playerid, lift_td[playerid][6], 0x00000055);
		PlayerTextDrawSetShadow(playerid, lift_td[playerid][6], 1);
		PlayerTextDrawSetOutline(playerid, lift_td[playerid][6], 0);
		PlayerTextDrawBackgroundColor(playerid, lift_td[playerid][6], 0x000000FF);
		PlayerTextDrawFont(playerid, lift_td[playerid][6], 1);
		PlayerTextDrawSetProportional(playerid, lift_td[playerid][6], 1);
		PlayerTextDrawSetSelectable(playerid, lift_td[playerid][6], 1);

		lift_td[playerid][5] = CreatePlayerTextDraw(playerid, 320.000000, 380.000000, "GARAGE");
		PlayerTextDrawLetterSize(playerid, lift_td[playerid][5], 0.800000, 1.899999);
		PlayerTextDrawTextSize(playerid, lift_td[playerid][5], 20.000000, 80.000000);
		PlayerTextDrawAlignment(playerid, lift_td[playerid][5], 2);
		PlayerTextDrawColor(playerid, lift_td[playerid][5], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, lift_td[playerid][5], 1);
		PlayerTextDrawBoxColor(playerid, lift_td[playerid][5], 0x00000000);
		PlayerTextDrawSetShadow(playerid, lift_td[playerid][5], 2);
		PlayerTextDrawSetOutline(playerid, lift_td[playerid][5], 1);
		PlayerTextDrawBackgroundColor(playerid, lift_td[playerid][5], 0x000000FF);
		PlayerTextDrawFont(playerid, lift_td[playerid][5], 3);
		PlayerTextDrawSetProportional(playerid, lift_td[playerid][5], 1);
		PlayerTextDrawSetSelectable(playerid, lift_td[playerid][5], 1);

		lift_td[playerid][4] = CreatePlayerTextDraw(playerid, 320.000000, 426.000000, "_");
		PlayerTextDrawLetterSize(playerid, lift_td[playerid][4], 0.500000, 1.000000);
		PlayerTextDrawTextSize(playerid, lift_td[playerid][4], 20.000000, 230.000000);
		PlayerTextDrawAlignment(playerid, lift_td[playerid][4], 2);
		PlayerTextDrawColor(playerid, lift_td[playerid][4], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, lift_td[playerid][4], 1);
		PlayerTextDrawBoxColor(playerid, lift_td[playerid][4], 0x00000055);
		PlayerTextDrawSetShadow(playerid, lift_td[playerid][4], 1);
		PlayerTextDrawSetOutline(playerid, lift_td[playerid][4], 0);
		PlayerTextDrawBackgroundColor(playerid, lift_td[playerid][4], 0x000000FF);
		PlayerTextDrawFont(playerid, lift_td[playerid][4], 1);
		PlayerTextDrawSetProportional(playerid, lift_td[playerid][4], 1);
		PlayerTextDrawSetSelectable(playerid, lift_td[playerid][4], 1);

		lift_td[playerid][3] = CreatePlayerTextDraw(playerid, 320.000000, 422.000000, "EXIT");
		PlayerTextDrawLetterSize(playerid, lift_td[playerid][3], 0.800000, 1.899999);
		PlayerTextDrawTextSize(playerid, lift_td[playerid][3], 20.000000, 60.000000);
		PlayerTextDrawAlignment(playerid, lift_td[playerid][3], 2);
		PlayerTextDrawColor(playerid, lift_td[playerid][3], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, lift_td[playerid][3], 1);
		PlayerTextDrawBoxColor(playerid, lift_td[playerid][3], 0x00000000);
		PlayerTextDrawSetShadow(playerid, lift_td[playerid][3], 2);
		PlayerTextDrawSetOutline(playerid, lift_td[playerid][3], 1);
		PlayerTextDrawBackgroundColor(playerid, lift_td[playerid][3], 0x000000FF);
		PlayerTextDrawFont(playerid, lift_td[playerid][3], 3);
		PlayerTextDrawSetProportional(playerid, lift_td[playerid][3], 1);
		PlayerTextDrawSetSelectable(playerid, lift_td[playerid][3], 1);

		lift_td[playerid][2] = CreatePlayerTextDraw(playerid, 229.000000, 92.000000, "New");
		PlayerTextDrawLetterSize(playerid, lift_td[playerid][2], 0.699999, 4.000000);
		PlayerTextDrawTextSize(playerid, lift_td[playerid][2], 90.000000, 70.000000);
		PlayerTextDrawAlignment(playerid, lift_td[playerid][2], 0);
		PlayerTextDrawColor(playerid, lift_td[playerid][2], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, lift_td[playerid][2], 1);
		PlayerTextDrawBoxColor(playerid, lift_td[playerid][2], 0x00000000);
		PlayerTextDrawSetShadow(playerid, lift_td[playerid][2], 2);
		PlayerTextDrawSetOutline(playerid, lift_td[playerid][2], 1);
		PlayerTextDrawBackgroundColor(playerid, lift_td[playerid][2], 0x00000000);
		PlayerTextDrawFont(playerid, lift_td[playerid][2], 5);
		PlayerTextDrawSetProportional(playerid, lift_td[playerid][2], 1);
		PlayerTextDrawSetSelectable(playerid, lift_td[playerid][2], 0);
		PlayerTextDrawSetPreviewModel(playerid, lift_td[playerid][2], 19523);
		PlayerTextDrawSetPreviewRot(playerid, lift_td[playerid][2], 0.000000, 0.000000, 0.000000, 1.000000);

		lift_td[playerid][1] = CreatePlayerTextDraw(playerid, 320.000000, 404.000000, "_");
		PlayerTextDrawLetterSize(playerid, lift_td[playerid][1], 0.500000, 1.000000);
		PlayerTextDrawTextSize(playerid, lift_td[playerid][1], 20.000000, 230.000000);
		PlayerTextDrawAlignment(playerid, lift_td[playerid][1], 2);
		PlayerTextDrawColor(playerid, lift_td[playerid][1], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, lift_td[playerid][1], 1);
		PlayerTextDrawBoxColor(playerid, lift_td[playerid][1], 0x00000055);
		PlayerTextDrawSetShadow(playerid, lift_td[playerid][1], 1);
		PlayerTextDrawSetOutline(playerid, lift_td[playerid][1], 0);
		PlayerTextDrawBackgroundColor(playerid, lift_td[playerid][1], 0x000000FF);
		PlayerTextDrawFont(playerid, lift_td[playerid][1], 1);
		PlayerTextDrawSetProportional(playerid, lift_td[playerid][1], 1);
		PlayerTextDrawSetSelectable(playerid, lift_td[playerid][1], 1);

		lift_td[playerid][0] = CreatePlayerTextDraw(playerid, 320.000000, 400.000000, "STREET");
		PlayerTextDrawLetterSize(playerid, lift_td[playerid][0], 0.800000, 1.899999);
		PlayerTextDrawTextSize(playerid, lift_td[playerid][0], 20.000000, 80.000000);
		PlayerTextDrawAlignment(playerid, lift_td[playerid][0], 2);
		PlayerTextDrawColor(playerid, lift_td[playerid][0], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, lift_td[playerid][0], 1);
		PlayerTextDrawBoxColor(playerid, lift_td[playerid][0], 0x00000000);
		PlayerTextDrawSetShadow(playerid, lift_td[playerid][0], 2);
		PlayerTextDrawSetOutline(playerid, lift_td[playerid][0], 1);
		PlayerTextDrawBackgroundColor(playerid, lift_td[playerid][0], 0x000000FF);
		PlayerTextDrawFont(playerid, lift_td[playerid][0], 3);
		PlayerTextDrawSetProportional(playerid, lift_td[playerid][0], 1);
		PlayerTextDrawSetSelectable(playerid, lift_td[playerid][0], 1);

		for(new i = 0; i < 34; i ++) PlayerTextDrawShow(playerid, lift_td[playerid][i]);
		SelectTextDraw(playerid, 0xBB0000FF);
	}

	if(areaid == fix_light_bank) {
		SetPlayerTime(playerid, 12, 0);
		SetPlayerWeather(playerid, 1);
	}
	if(areaid == kill_zone) 
		SetPlayerHealth(playerid, 0);
	if(areaid == bank_exits) {
		switch(GetPlayerVirtualWorld(playerid)) {
			case 1: {
				SetPlayerPos(playerid, 1422.506713, -1623.661743, 13.546875);
				SetPlayerFacingAngle(playerid, 270.0);
			}
			case 2: {
				SetPlayerPos(playerid, -1495.166625, 920.114440, 7.187500);
				SetPlayerFacingAngle(playerid, 90.0);
			}
			case 3: {
				SetPlayerPos(playerid, 2180.977783, 2294.581542, 10.820312);
				SetPlayerFacingAngle(playerid, 109.235519);
			}
			default: return SCM(playerid, COLOR_ERROR, "Error de geometr√≠a [083]");
		}
		SetPlayerTime(playerid, time_server, 0);
		SetPlayerWeather(playerid, weather_server);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	if(areaid == bank_pickmenu) show_menu_bank(playerid);
	if(areaid == bank_payproperty) SPD(playerid, 157, DIALOG_STYLE_LIST, ""CMAIN"Alambrado", ""CWHITE"[1] Pagar por casa\n[2] Pagar la basura\n[3] Pagar el apartamento\n[4] Paga el alquiler de tu negocio\n[5] Pagar un alquiler", "Seleccione", "Cerrar");
	if(areaid == helpbank) {
		new str_l[] = 
		""CWHITE"√è√∞√®√¢√•√≤√±√≤√¢√≥√•√¨ √Ç√†√± √¢ √≠√†√∏√•√¨ √°√†√≠√™√•! √Ç √Ω√≤√Æ√¨ √∞√†√ß√§√•√´√•\n\
		√Ç√ª √¨√Æ√¶√•√≤√• √≥√ß√≠√†√≤√º √¢√±√æ √≠√•√Æ√°√µ√Æ√§√®√¨√≥√æ √®√≠√¥√Æ√∞√¨√†√∂√®√æ √Æ √§√•√©√±√≤√¢√®√ø√µ\n\
		√¢ √°√†√≠√™√• √® √°√†√≠√™√Æ√¢√±√™√®√µ √±√∑√•√≤√†√µ.\n\n\
		"CPALEGREEN"√é√±√≠√Æ√¢√≠√Æ√© √±√∑¬∏√≤ "CWHITE"‚Äî √£√´√†√¢√≠√ª√© √±√∑¬∏√≤, √™√Æ√≤√Æ√∞√ª√© √•√±√≤√º √≥ √™√†√¶√§√Æ√£√Æ.\n\
		√í√†√™√¶√•, √®√£√∞√Æ√™ √¨√Æ√¶√•√≤ √Æ√≤√™√∞√ª√≤√º √§√Æ 10-√≤√® √§√Æ√Ø√Æ√´√≠√®√≤√•√´√º√≠√ª√µ\n\
		√°√†√≠√™√Æ√¢√±√™√®√µ √±√∑¬∏√≤√Æ√¢. √ä√†√¶√§√Æ√¨√≥ √≤√†√™√Æ√¨√≥\n\
		√±√∑¬∏√≤√≥ √¨√Æ√¶√≠√Æ √≥√±√≤√†√≠√Æ√¢√®√≤√º PIN-√™√Æ√§ √® √Ø√∞√®√§√≥√¨√†√≤√º\n\
		√´√æ√°√Æ√• √≠√†√ß√¢√†√≠√®√•. √Ñ√Æ√Ø√Æ√´√≠√®√≤√•√´√º√≠√ª√© √±√∑¬∏√≤ √®√¨√•√•√≤ √±√¢√Æ√© √≠√Æ√¨√•√∞,\n\
		√Ø√Æ√Ω√≤√Æ√¨√≥ √§√•√≠√º√£√® √≠√† √≠√•√£√Æ √¨√Æ√¶√≠√Æ √Ø√•√∞√•√¢√•√±√≤√®, S√≠√¶√• √≤√Æ√£S√≠,\n\
		√™√Æ√£S√≠ √•√£√Æ √¢√´√†√§√•√´√•√∂ √≠√†√µ√Æ√§√®√≤√±√ø √Æ√¥√¥√´√†√©√≠.\n\n\
		√Ö√±√´√® √Ç√ª √≠√• √Ø√´√†√≠√®√∞√≥√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Æ√§√®√≠ √®√´√® √≠√•√±√™√Æ√´√º√™√Æ\n\
		√±√∑√•√≤√Æ√¢, √Ç√ª √¨√Æ√¶√•√≤√• √±√™√∞√ª√≤√º √®√µ √®√ß √Æ√°√π√•√£√Æ √±√Ø√®√±√™√†. √Ç √´√æ√°√Æ√©\n\
		√¨√Æ√¨√•√≠√≤ √¨√Æ√¶√≠√Æ √¢√Æ√±√±√≤√†√≠√Æ√¢√®√≤√º √§√Æ√±√≤√≥√Ø, √¢√ª√°√∞√†√¢\n\
		√±√Æ√Æ√≤√¢√•√≤√±√≤√¢√≥√æ√π√®√© √Ø√≥√≠√™√≤ √¢ √Æ√±√≠√Æ√¢√≠√Æ√¨ √¨√•√≠√æ √°√†√≠√™√†.";

		SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{3cb300}√à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ √°√†√≠√™√•", str_l, "Cerrar", "");
	}
	if(areaid == repair_bloody) {
		if(!bloody_en[playerid]) return 1;
		DestroyPickup(repair_bloody_1); DestroyDynamicArea(repair_bloody);
		reppictime = SetTimer("create_pickrep_bloody", 40000, 0);
		new Float: car_hpbloody; GetVehicleHealth(GetPlayerVehicleID(playerid), car_hpbloody);
		SetVehicleHealth(GetPlayerVehicleID(playerid), car_hpbloody + 70);
		if((car_hpbloody + 70) > 1000.0) SetVehicleHealth(GetPlayerVehicleID(playerid), 1000.0);
		PlayerPlaySound(playerid, 1139, 0.0, 0.0, 0.0);
		SetPlayerChatBubble(playerid, "+70 CAR HP", 0x00FF00FF, 4.0, 5000);
		SCM(playerid, COLOR_YELLOW, "√á√§√Æ√∞√Æ√¢√º√• √Ç√†√∏√•√£√Æ √†√¢√≤√Æ√¨√Æ√°√®√´√ø √≥√¢√•√´√®√∑√•√≠√Æ √≠√† {99cc33}70 HP");
	}
	for(new i = 0; i < sizeof(TrayData); i ++) {
		if(TrayData[i][trayAreaID] != areaid) continue;
		GetTray(playerid, i);
		break;
	}
	foreach(new i:boxPlayer) {
		if(!GetPVarType(i, "BBArea") || areaid != GetPVarInt(i, "BBArea")) continue;
		new station[100];
		GetPVarString(i, "BBStation", station, sizeof(station));
		if(!isnull(station)) {
			PlayStream(playerid, station, GetPVarFloat(i, "BBX"), GetPVarFloat(i, "BBY"), GetPVarFloat(i, "BBZ"), 30.0, 1);
			SCM(playerid, COLOR_MAIN, "√Ç√ª √Ø√Æ√Ø√†√´√® √¢ √®√£√∞√Æ√¢√≥√æ √ß√Æ√≠√≥ √¨√†√£√≠√®√≤√Æ√¥√Æ√≠√† "CORANGE"(√ß√¢√≥√™ √¨√Æ√¶√•√≤ √°√ª√≤√º √±√´√®√∏√™√Æ√¨ √£√∞√Æ√¨√™√®√¨ √®√´√® √®√¨√•√≤√º √≠√•√∂√•√≠√ß√≥√∞√≠√≥√æ √´√•√™√±√®√™√≥)");
		} break;
	}
	return 1;
}

stock StopStream(playerid) {
	DeletePVar(playerid, "pAudioStream");
	StopAudioStreamForPlayer(playerid);
}
stock PlayStream(playerid, url[], Float:posX = 0.0, Float:posY = 0.0, Float:posZ = 0.0, Float:distance = 50.0, usepos = 0) {
	if(GetPVarType(playerid, #pAudioStream)) StopAudioStreamForPlayer(playerid);
	else SetPVarInt(playerid, #pAudioStream, 1);
	PlayAudioStreamForPlayer(playerid, url, posX, posY, posZ, distance, usepos);
}

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger) {
	SetPVarInt(playerid, "car_state_id", vehicleid);

    if(GetPVarInt(playerid, "SIGNAL") != vehicleid && alarm_vehicle[vehicleid] != 60605) {
    	new engine, lights, alarm, doors, bonnet, boot, objective;
        GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
        SetVehicleParamsEx(vehicleid, engine, lights, VEHICLE_PARAMS_ON, doors, bonnet, boot, objective);
		PlayerPlaySound(alarm_vehicle[vehicleid], 41603, 0.0, 0.0, 0.0);
        SCM(alarm_vehicle[vehicleid], COLOR_ERROR, "√ç√† √Ç√†√∏√•√¨ √†√¢√≤√Æ√¨√Æ√°√®√´√• √±√∞√†√°√Æ√≤√†√´√† √±√®√£√≠√†√´√®√ß√†√∂√®√ø");
    }
    if(vehicleid >= af_orig_truck[0] && vehicleid <= af_orig_truck[1]) {}
	else if(!ispassenger) { 
		if(VodPrava(vehicleid) && !pData[playerid][pLicenses][0] && !pTemp[playerid][pOnExam]) {
			ClearAnimations(playerid);
			return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √¢√Æ√§√®√≤√•√´√º√±√™√®√µ √Ø√∞√†√¢");
		}
		if(IsAPlane(vehicleid) && !pData[playerid][pLicenses][1] && !pTemp[playerid][pOnExam]) {
			ClearAnimations(playerid);
			return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √´√®√∂√•√≠√ß√®√® √≠√† √≥√Ø√∞√†√¢√´√•√≠√®√• √†√¢√®√†-√≤√∞√†√≠√±√Ø√Æ√∞√≤√Æ√¨");
		}
		if(IsABoat(vehicleid) && !pData[playerid][pLicenses][2]) {
			ClearAnimations(playerid);
			return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √´√®√∂√•√≠√ß√®√® √≠√† √≥√Ø√∞√†√¢√´√•√≠√®√• √¢√Æ√§√≠√ª√¨ √≤√∞√†√≠√±√Ø√Æ√∞√≤√Æ√¨");
		}
	}
	return SetVehicleParamsForPlayer(vehicleid, playerid, 0, VehInfo[vehicleid - 1][vLock]);
}
stock IsAMedic(playerid) {
	if(!IsPlayerConnected(playerid)) return 1;
	if(pData[playerid][pMember] == 26 && pData[playerid][pRank] == 6) 
		return 1;
	return(pData[playerid][pMember]==4 || pData[playerid][pMember]==28 || pData[playerid][pMember]==29) ?true:false;
}
stock IsAAudit(playerid) {
	if(!IsPlayerConnected(playerid)) return 0;
	return(pData[playerid][pMember] == 7 && pData[playerid][pRank] == 6 || 
		pData[playerid][pMember] == 7 && pData[playerid][pRank] == 7 || 
		pData[playerid][pMember] == 8 && pData[playerid][pRank] == 6 || 
		pData[playerid][pMember] == 8 && pData[playerid][pRank] == 7 || 
		pData[playerid][pMember] == 9 && pData[playerid][pRank] == 6 || 
		pData[playerid][pMember] == 9 && pData[playerid][pRank] == 7) ?true:false;
}
stock IsAGover(playerid) {
	if(!IsPlayerConnected(playerid)) return 0;
	return(pData[playerid][pMember] == 7 || pData[playerid][pMember] == 8 || pData[playerid][pMember] == 9 || pData[playerid][pMember] == 26) ?true:false;
}
stock IsAMayor(playerid) {
	if(!IsPlayerConnected(playerid)) return 0;
	return(pData[playerid][pMember] == 7 && pData[playerid][pRank] == 5 ||
		   pData[playerid][pMember] == 8 && pData[playerid][pRank] == 5 ||
		   pData[playerid][pMember] == 9 && pData[playerid][pRank] == 5) ?true:false;
}
stock IsACop(playerid) {
	if(!IsPlayerConnected(playerid)) return 0;
	new member = pData[playerid][pMember];
	if(pData[playerid][pMember] == 26 && pData[playerid][pRank] == 7) 
		return 1;
	return(member==1 || member==2 || member==21 || member==10) ?true:false;
}
stock IsAArm(playerid) {
	if(!IsPlayerConnected(playerid)) return 0;
	new member = pData[playerid][pMember];
	if(pData[playerid][pMember] == 26 && pData[playerid][pRank] == 8) 
		return 1;
	return(member==19 || member==20 || member==27) ?true:false;
}
stock PlayerInAntiDM(playerid) {
	return (IsPlayerInRangeOfPoint(playerid,50.0,-83.0453,-1156.8373,1.8073)
	|| IsPlayerInRangeOfPoint(playerid,50.0,-8.9967,-341.8044,5.4297)
	|| IsPlayerInRangeOfPoint(playerid,100.0,1782.0861,-1898.4985,13.3908)
	|| IsPlayerInRangeOfPoint(playerid,300.0,-769.1125,-1785.3724,13.9054)
	|| IsPlayerInRangeOfPoint(playerid,100.0,-776.5970,-1858.6976,11.9141)
	|| IsPlayerInRangeOfPoint(playerid,100.0,2183.8699,-2262.1460,13.4206)
	|| IsPlayerInRangeOfPoint(playerid,150.0,1175.4642,-1746.1620,13.3984)
	|| IsPlayerInRangeOfPoint(playerid,200.0,1481.6755,-1740.2124,13.5469)
	|| IsPlayerInRangeOfPoint(playerid,200.0,372.0396,173.5450,1008.3828)
	|| IsPlayerInRangeOfPoint(playerid,150.0,-2717.9023,376.3027,4.3721)
	|| IsPlayerInRangeOfPoint(playerid,150.0,2382.1523,2468.1917,10.8203)
	|| IsPlayerInRangeOfPoint(playerid,100.0,-2438.5081,504.6053,29.9374)
	|| IsPlayerInRangeOfPoint(playerid,100.0,-164.5386,-69.2763,915.9959)
	|| IsPlayerInRangeOfPoint(playerid,150.0,246.3072,75.5996,1003.6406)
	|| IsPlayerInRangeOfPoint(playerid,100.0,-1605.0482,717.9171,11.8925)
	|| IsPlayerInRangeOfPoint(playerid,260.0,245.1728,116.1095,1003.2188)
	|| IsPlayerInRangeOfPoint(playerid,150.0,-1989.7030,129.6528,27.5391)
	|| IsPlayerInRangeOfPoint(playerid,150.0,2809.6448,1289.7308,10.7576)
	|| IsPlayerInRangeOfPoint(playerid,250.0,276.4114,179.7984,1007.1719)
	|| IsPlayerInRangeOfPoint(playerid,100.0,1128.5177,-2.2808,1000.6797)
	|| IsPlayerInRangeOfPoint(playerid,100.0,1023.1943,-1129.6279,23.8716)
	|| IsPlayerInRangeOfPoint(playerid,100.0,2029.9144,1007.7384,10.8203)
	|| IsPlayerInRangeOfPoint(playerid,100.0,2004.2528,1017.6862,994.4688)
	|| IsPlayerInRangeOfPoint(playerid,300.0,1596.2635,-1712.0316,1441.1000)
	|| IsPlayerInRangeOfPoint(playerid,300.0,3433.4092,-2090.6760,37.5178)
	|| IsPlayerInRangeOfPoint(playerid,150.0,-2165.9294,642.4532,1052.3750)
	|| IsPlayerInRangeOfPoint(playerid,200.0,-29.6407,1857.7740,17.6406)
	|| IsPlayerInRangeOfPoint(playerid,50.0,1011.8651,-1879.8894,13.3306)
	|| IsPlayerInRangeOfPoint(playerid,150.0,-1980.0321,-2438.7041,30.6250)
	|| IsPlayerInRangeOfPoint(playerid,150.0,285.7182,-84.4868,1001.5156)
	|| IsPlayerInRangeOfPoint(playerid,150.0,1191.6841,-1330.1151,1584.9719)
	|| IsPlayerInRangeOfPoint(playerid,60.0,1787.1606,-1573.4250,22.9431)
	|| IsPlayerInRangeOfPoint(playerid,180.0,-77.9932,2434.8088,1180.1295)
	|| IsPlayerInRangeOfPoint(playerid,250.0,1526.4076,-1763.4166,994.2026)
	|| IsPlayerInRangeOfPoint(playerid,50.0,2342.5454,-800.1076,3001.0930)
	|| IsPlayerInRangeOfPoint(playerid,100.0,1462.2194,-1011.6264,26.8433)
	|| IsPlayerInRangeOfPoint(playerid,100,2487.6838,64.6085,1056.1132)
	|| IsPlayerInRangeOfPoint(playerid,50,549.5118,-1278.7650,3001.0859)
	|| IsPlayerInRangeOfPoint(playerid,50,542.4494,-1291.8831,17.2422)
	|| IsPlayerInRangeOfPoint(playerid,50,2130.9648,-1146.6838,24.5491)
	|| IsPlayerInRangeOfPoint(playerid,100,-1973.1891,294.1925,35.1719)
	|| IsPlayerInRangeOfPoint(playerid,50,2458.2104,1326.6477,10.8203)
	|| IsPlayerInRangeOfPoint(playerid,100,-27.7872,-184.2147,1003.5469)
	|| IsPlayerInRangeOfPoint(playerid,50,418.0688,-78.5423,1001.8047)
	|| IsPlayerInRangeOfPoint(playerid,50,-1641.2079,-119.4762,3385.1750)
	|| IsPlayerInRangeOfPoint(playerid,50,1495.0723,1307.3474,1093.2915)
	|| IsPlayerInRangeOfPoint(playerid,150,774.7840,1148.7400,1087.2699)
	|| IsPlayerInRangeOfPoint(playerid,100,2313.1904,-13.2494,26.7422)
	|| IsPlayerInRangeOfPoint(playerid,50,-2030.0646,-114.1586,1035.1719)
	|| IsPlayerInRangeOfPoint(playerid,90,1298.7682,-1429.5712,13.5399)
	|| IsPlayerInRangeOfPoint(playerid,200,1387.2900,-24.2072,1000.9175)
	|| IsPlayerInRangeOfPoint(playerid,100,-2027.7628,-95.0978,35.1641)
	|| IsPlayerInRangeOfPoint(playerid,40,306.1608,-1902.5291,2.8028)
	|| IsPlayerInRangeOfPoint(playerid,70,336.5945,-1795.4846,4.7828)
	|| IsPlayerInRangeOfPoint(playerid,150,290.4869,-1603.4630,83.0000)
	|| IsPlayerInRangeOfPoint(playerid,90,1249.5367,-1258.6515,13.6360)
	|| IsPlayerInRangeOfPoint(playerid,100,-1494.6007,920.1379,7.1875)
	|| IsPlayerInRangeOfPoint(playerid,100,2221.7659,-36.0109,606.8281)
	|| IsPlayerInRangeOfPoint(playerid,100,-1985.1841,1117.7961,53.1232)
	|| IsPlayerInRangeOfPoint(playerid,100,1579.8400,-322.5020,1319.2909))?true:false;
}

stock ShowBusinessInformation(playerid, bizid) {
	new str_bss[350], biz_type = BizInfo[bizid][bTypeBiz];
	if(biz_type == 12 || biz_type == 23 || biz_type == 28 || biz_type == 30 || biz_type == 39 || biz_type == 40 || biz_type == 33 || biz_type == 44 || biz_type == 49) {
		format(str_bss, sizeof(str_bss), "\n"CWHITE"La cantidad de dinero:\t%d\nEl nombre de la empresa:\t"CYELLOW"%s\n\n"CWHITE"Costo:\t\t%i$\n√é√Ø√´√†√≤√† √°√®√ß√≠√•√±√†:\t%d √®√ß 30 √§√≠√•√©\n√Å√æ√§√¶√•√≤ √°√®√ß√≠√•√±√†:\t{40bf80}%i$\n"CWHITE"√è√∞√®√°√ª√´√º √ß√† √§√•√≠√º:\t{40bf40}%i$\n"CWHITE"√ë√≤√†√≤√≥√±:\t\t%s",
		BizInfo[bizid][bID], BizInfo[bizid][bName], BizInfo[bizid][bPrice], BizInfo[bizid][bPay], BizInfo[bizid][bBank], BizInfo[bizid][bPribil], (BizInfo[bizid][bLock] ? (""CERROR"√Å√®√ß√≠√•√± √ß√†√™√∞√ª√≤") : (""CMAIN"√Å√®√ß√≠√•√± √Æ√≤√™√∞√ª√≤")));
	}
	else if(biz_type == 31) {
		format(str_bss, sizeof(str_bss), "\n"CWHITE"La cantidad de dinero:\t%d\n√ç√†√ß√¢√†√≠√®√• √°√®√ß√≠√•√±√†:\t"CYELLOW"%s\n\n"CWHITE"√ë√≤√Æ√®√¨√Æ√±√≤√º:\t\t%i$\n√é√Ø√´√†√≤√† √°√®√ß√≠√•√±√†:\t%d √®√ß 30 √§√≠√•√©\n√Å√æ√§√¶√•√≤ √°√®√ß√≠√•√±√†:\t{40bf80}%i$\n"CWHITE"√è√∞√®√°√ª√´√º √ß√† √§√•√≠√º:\t{40bf40}%i$",
		BizInfo[bizid][bID], BizInfo[bizid][bName], BizInfo[bizid][bPrice], BizInfo[bizid][bPay], BizInfo[bizid][bBank], BizInfo[bizid][bPribil]);
	}
	else {
		format(str_bss, sizeof(str_bss), "\n"CWHITE"La cantidad de dinero:\t%d\n√ç√†√ß√¢√†√≠√®√• √°√®√ß√≠√•√±√†:\t"CYELLOW"%s\n\n"CWHITE"√ë√≤√Æ√®√¨√Æ√±√≤√º:\t\t%i$\n√é√Ø√´√†√≤√† √°√®√ß√≠√•√±√†:\t%d √®√ß 30 √§√≠√•√©\n√è√∞√Æ√§√≥√™√≤√Æ√¢:\t\t%d √∏√≤\n√Å√æ√§√¶√•√≤ √°√®√ß√≠√•√±√†:\t{40bf80}%i$\n"CWHITE"√è√∞√®√°√ª√´√º √ß√† √§√•√≠√º:\t{40bf40}%i$\n"CWHITE"√ë√≤√†√≤√≥√±:\t\t%s",
		BizInfo[bizid][bID], BizInfo[bizid][bName], BizInfo[bizid][bPrice], BizInfo[bizid][bPay], BizInfo[bizid][bProd], BizInfo[bizid][bBank], BizInfo[bizid][bPribil], (BizInfo[bizid][bLock] ? (""CERROR"√Å√®√ß√≠√•√± √ß√†√™√∞√ª√≤") : (""CMAIN"√Å√®√ß√≠√•√± √Æ√≤√™√∞√ª√≤")));
	}
	SPD(playerid, 401, DIALOG_STYLE_MSGBOX, "{FFCD00}√à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ √°√®√ß√≠√•√±√•", str_bss, "Siguiente", "");
}
stock IsABoat(carid) {
	switch(GetVehicleModel(carid)) {
		case 472, 473, 493, 595, 484, 430, 452..454, 446: return 1;
	}
	return 0;
}

enum GangZoneInfo
{
	gID,
	Float:gCoords[4],
	gFrakVlad,
	gNapad,
	gTime,
	gzTimer,
	GZName[30],
	strcpt[150]
}
#define GANG_ZONES 104
new GZInfo[GANG_ZONES][GangZoneInfo];

enum MZ_Enum
{
	maf_ID,
	Float:maf_Coords[4],
	maf_FrakVlad,
	maf_Napad,
	maf_Time,
	maf_Timer,
	maf_Name[30],
	maf_strtd[150]
}
#define MAFIA_ZONES 24
new MZ_Info[MAFIA_ZONES][MZ_Enum];

CB: LoadMafiaZone() {
	new time = GetTickCount(), 
		rows;
	cache_get_row_count(rows);
	if(!rows) 
		return print("√á√Æ√≠√ª √¨√†√¥√®√© √≠√† √™√†√∞√≤√• √≠√• √ß√†√£√∞√≥√¶√•√≠√ª");

	for(new i = 0; i < rows; i ++) {
		if(rows >= MAFIA_ZONES) break;
		cache_get_value_name_float(i, "maf_Coords1", MZ_Info[i][maf_Coords][0]);
		cache_get_value_name_float(i, "maf_Coords2", MZ_Info[i][maf_Coords][1]);
		cache_get_value_name_float(i, "maf_Coords3", MZ_Info[i][maf_Coords][2]);
		cache_get_value_name_float(i, "maf_Coords4", MZ_Info[i][maf_Coords][3]);
		cache_get_value_name_int(i, "maf_FrakVlad", MZ_Info[i][maf_FrakVlad]);
		MZ_Info[i][maf_ID] = GangZoneCreate(MZ_Info[i][maf_Coords][0], MZ_Info[i][maf_Coords][1], MZ_Info[i][maf_Coords][2], MZ_Info[i][maf_Coords][3]);
		maf_zone[MZ_Info[i][maf_FrakVlad]]++;
	}

	return printf("%d √ß√Æ√≠ √¨√†√¥√®√© √≠√† √™√†√∞√≤√• √ß√†√£√∞√≥√¶√•√≠√Æ | %d √¨√±", rows, GetTickCount() - time);
}

CB: LoadGZ() {
	new time = GetTickCount(), rows;
	cache_get_row_count(rows);
	if(!rows) {
		print("√á√Æ√≠√ª √°√†√≠√§ √≠√† √™√†√∞√≤√• √≠√• √ß√†√£√∞√≥√¶√•√≠√ª");

		new day, month, year, hour, minuite, second;
		getdate(year, month, day); gettime(hour, minuite, second);
		FixHour(hour); hour = shifthour;
		return printf("S√≠√≤√† √ß√†√Ø√≥√±√™√†: %02d.%02d.%d √¢ %02d:%02d", day, month, year, hour, minuite);
	}
	for(new i = 0; i < rows; i ++) {
		if(i >= GANG_ZONES) break;
		cache_get_value_name_float(i, "gCoords1", GZInfo[i][gCoords][0]);
		cache_get_value_name_float(i, "gCoords2", GZInfo[i][gCoords][1]);
		cache_get_value_name_float(i, "gCoords3", GZInfo[i][gCoords][2]);
		cache_get_value_name_float(i, "gCoords4", GZInfo[i][gCoords][3]);
		cache_get_value_name_int(i, "gFrakVlad", GZInfo[i][gFrakVlad]);
		GZInfo[i][gID] = GangZoneCreate(GZInfo[i][gCoords][0], GZInfo[i][gCoords][1], GZInfo[i][gCoords][2], GZInfo[i][gCoords][3]);
		frac_gangzone[GZInfo[i][gFrakVlad]]++;
	}
	UpdateStoreGang(12); UpdateStoreGang(13); UpdateStoreGang(15); UpdateStoreGang(17); UpdateStoreGang(18);
	printf("%d √ß√Æ√≠ √°√†√≠√§ √≠√† √™√†√∞√≤√• √ß√†√£√∞√≥√¶√•√≠√Æ | %d √¨√±", rows, GetTickCount() - time);

	new day, month, year, hour, minuite, second;
	getdate(year, month, day); gettime(hour, minuite, second);
	FixHour(hour); hour = shifthour;
	return printf("S√≠√≤√† √ß√†√Ø√≥√±√™√†: %02d.%02d.%d √¢ %02d:%02d", day, month, year, hour, minuite);
}
stock SaveMAFZ(i) {
	updatesalarys();
	new query[100];
	mysql_format(mysql_Handle,query, sizeof(query), "UPDATE `mafiazone` SET `maf_FrakVlad` = %i WHERE `maf_ID` = %i",MZ_Info[i][maf_FrakVlad], i);
	return mysql_tquery(mysql_Handle, query);
}
stock SaveGZ(i) {
	new query[100];
	mysql_format(mysql_Handle,query, sizeof(query), "UPDATE `zone` SET `gFrakVlad` = %i WHERE `gID` = %i",GZInfo[i][gFrakVlad], i);
	return mysql_tquery(mysql_Handle, query);
}

stock IsAPlane(carid){switch(GetVehicleModel(carid)){case 592,577,511,512,593,520,553,476,519,460,513,548,417,487,488,497,563,447,469:return 1;}return 0;}

stock LoadPlayerDraws(playerid) {
	#include <playerdraws>
}
stock RemoveBuildings(playerid) {
	#include <removebuildings>
}
public OnPlayerConnect(playerid) {
	for(new pData_e:i; i < pData_e; i++) pData[playerid][i] = 0;
	for(new pTemp_e:i; i < pTemp_e; i++) pTemp[playerid][i] = 0;
	SetPlayerDataToDefault(playerid);

	foreach(new i:Player)
	{
		if(!strcmp(exit_info[i][exit_ip], pData[playerid][pIP], true))
		{
			if(GetTickCount()-exit_info[i][exit_time] <= 3000)
			{
				SCM(playerid, COLOR_ERROR, "T√≥mese unos segundos antes del pr√≥ximo servidor");
				return Kick(playerid);
			}
			else
			{
				strdel(exit_info[i][exit_ip], 0, strlen(exit_info[i][exit_ip]));
				exit_info[i][exit_time] = 0;
			}
		}
	}
	GetPlayerName(playerid, pData[playerid][pName], 24);
	GetPlayerIp(playerid, pData[playerid][pIP], 16);
	RemoveBuildings(playerid);
	LoadPlayerDraws(playerid);

	ShowAuthObjects(playerid);

	if(startvibor == true)
	{
		SCMF(playerid, -1, "Votado todos los d√≠as {FFAA00}%s", electionname);
		SCM(playerid, -1, "Te decimos que hagas tu elecci√≥n en el mundo que quieras");
	}
	return 1;
}
GetMafiaZoneColor(zonenum) {
	new color;
	switch(MZ_Info[zonenum][maf_FrakVlad]) {
		case 5: color = 0x993366AA;
		case 6: color = 0xBB0000AA;
		case 14: color = 0x007575AA;
		default: color = COLOR_WHITE;
	}
	return color;
}
stock SetPlayerDataToDefault(playerid)
{
	Derby_Zeroing(playerid);

	pData[playerid][p_desc_textid] = Text3D:INVALID_3DTEXT_ID;

	for(new i = 0; i < sizeof(MZ_Info); i++) GangZoneShowForPlayer(playerid, MZ_Info[i][maf_ID], GetMafiaZoneColor(i));
	for(new i = 0; i < sizeof(GZInfo); i ++) GangZoneShowForPlayer(playerid, GZInfo[i][gID], GetGangZoneColor(i));
	for(new i = 0; i < sizeof(new_logo); i ++) TextDrawShowForPlayer(playerid, new_logo[i]);

	box_object[playerid] = false;
	for(new i = 0; i < 3; i ++) {
		createhome_posenter[playerid][i] = 0.0;
		createhome_posexit[playerid][i] = 0.0;
	}

	g_iVehicleIDObject[playerid] = -1;
    g_iVehicleCarID[playerid] = -1;

    for(new i = 0; i < 26; i ++) {
		inv_info[playerid][i_count][i] = 0;
		inv_info[playerid][i_type][i] = -1;
		inv_info[playerid][is_click][i] = false;
	}
	inv_info[playerid][i_clickID] = -1;

	blinded[playerid] = false;

	new_playerammo[playerid] = 0;
	playerammo[playerid] = 0;

	for(new i = 0; i < 11; i++) 
		skillgun[playerid][i] = 0;

	createhome_interiorid[playerid] = 0;
	time_admdelay[playerid] = 0;
	in_buymenu_market[playerid]=false;
	createhome_classid[playerid] = 0;
	is_salonsee[playerid] = false;
	blow_num[playerid] = 0;
	bomb[playerid]=false;
	dop_quest[playerid] = 0;
	is_work_casino[playerid]=false;
	inventory_open[playerid] = false;
	in_menutune[playerid] = false;
	af_hprem[playerid] = 0;
	createhome_price[playerid] = 0;
	af_carID[playerid] = 0;
	af_player_loadready[playerid] = false;
	af_player_lootstatus[playerid]=false;
	af_player_status[playerid] = false;
	place_coeff[playerid] = -1;
	FLAT_place_coeff[playerid] = -1;
	td_prokat_used[playerid] = false;
	fl_floor[playerid] = 12;
	pass_status[playerid] = 0;
	podpanel_in[playerid] = false;
	player_p_turned[playerid] = false;
	player_p_turned_angel[playerid] = 0.0;
	salonsee_dialogid[playerid] = 0;
	bilet_tune[playerid] = false;
	prodwork_bizid[playerid] = 0;
	prop_see[playerid] = false;
	selfie_sended[playerid] = false;
	anims_loaded[playerid] = false;
	fuelcan_buyed[playerid] = false;
	attempt_google_n[playerid] = false;
	mafia_object[playerid] = 0;
	SetPVarInt(playerid, "hold_player", -1);

	prodworker_vehicle[playerid] = -1;
	prodwork_prods[playerid] = 0;
	prodworker_status[playerid] = false;
	in_alcMenu[playerid] = false;
	bomjfood_use[playerid] = false;
	timer_plbloody[playerid] = -1;
	TUNE_wheel_component[playerid] = 0;
	TUNE_hydraulics[playerid] = false;
	TUNE_neon_component[playerid] = -1;
	TUNE_stereo[playerid] = false;
	TUNE_carcolor_1[playerid] = -1;
	TUNE_carcolor_2[playerid] = -1;
	bus_payday[playerid] = 0;
	TUNE_paintjob[playerid] = -1;
	time_gnews[playerid] = 0;
	gagtie_time[playerid] = 0;
	panelauto_en[playerid] = false;
	bet_bloody[playerid] = 0;
	bloody_en[playerid] = false;
	player_is_drivebus[playerid] = false;
	arenda_bus_id[playerid] = -1;
	enable_toggle[playerid] = false;
	player_in_tir[playerid] = false;
	dead_pljob[playerid] = false;
	gnews_number_str[playerid] = 0;
	antiflood_cmd[playerid] = 0;
	permission_fcmd[playerid] = false;
	player_isselectskin[playerid] = false;
	badge_enable[playerid] = false;
	checkpoint_bus[playerid] = 0; checkpoint_bus_mine[playerid] = 0; checkpoint_bus_fores[playerid] = 0;
 	taxi_payday[playerid] = 0, taxi_passengers[playerid] = 0;
	inadmcar[playerid] = INVALID_VEHICLE_ID;
	player_gameveh[playerid] = INVALID_VEHICLE_ID;
	veh_salonsee[playerid] = INVALID_VEHICLE_ID;
	player_allowed_model[playerid] = -1;
	player_allowed[playerid] = false;
	last_vehiclejob[playerid] = -1;
	player_is_taxi[playerid] = false;
	old_lampstat[playerid] = false, old_lockstat[playerid] = false, old_enginestat[playerid] = false;
	arenda_taxi[playerid] = false;
	arenda_bus[playerid] = false;
	arenda_taxi_id[playerid] = -1;
	taxi_type[playerid] = -1;
	taxi_tarif[playerid] = -1;
	passenger_taxien[playerid] = false;
	used_NRP_phone[playerid] = 0;
	pData[playerid][pLowSkill] = 0;
	pData[playerid][pHighSkill] = 0;
	back_tp[playerid] = false;
	lable_matr[playerid] = false;
	intback[playerid] = 0;
	JobLCash[playerid] = 0;
	vwback[playerid] = 0;
	JobLC[playerid] = 0;
	SetPVarInt(playerid, "WrongPassword", 4);
	SetPVarInt(playerid, "see_status", true);
	SetPVarInt(playerid, "nowarnadm", true);
	SetPVarInt(playerid, "nobanadm", true);
	SetPVarInt(playerid, "nokickadm", true);
	JobL[playerid] = false;
	SetPVarInt(playerid, "HelpersShow", true);
	SetPVarInt(playerid, "veh_rent", -1);
	SetPVarInt(playerid, "hProdaet", 999);
	SetPVarInt(playerid, "Tel", 999);
	SetPVarInt(playerid, "Mobile", 999);
	SetPVarInt(playerid, "PEfir", 999);
	SetPVarInt(playerid, "RefillOffer", 999);
	SetPVarInt(playerid, "RepairOffer", 999);
	SetPVarInt(playerid, "FreeOffer", 999);
	SetPVarInt(playerid, "ZoneOffer", 999);
	SetPVarInt(playerid, "LiveOfferls", 999);
	SetPVarInt(playerid, "TicketOffer",999);
    SetPVarInt(playerid, "CarOffer", 999);
	SetPVarInt(playerid, "ProposeOffer", 999);
	SetPVarInt(playerid, "MarryWitnessOffer", 999);
	SetPVarInt(playerid, "TalkingLivels", 999);
	SetPVarInt(playerid, "MarryWitness", 999);
	SetPVarInt(playerid, "offer_id", 999);
	SetPVarInt(playerid, "offer", 9999);
	SetPVarInt(playerid, "sellerbiz", 999);
	PhoneOnline{playerid} = false;
	lNews[playerid] = false;
	hold[playerid] = -1;

	BizEnter{playerid} = 255;
	PlayerTied{playerid} = false;

	SetPlayerHealth(playerid, 100.0, true);
	SetPlayerArmour(playerid, 0);

	ResetPlayerWeapons(playerid);
	SetPlayerColor(playerid, 0x90909000);
	return 1;
}
stock RemovePlayerWeapon(playerid, weaponid)
{
	new Weapons[12], Ammo[12];
	new weap, ammo;
	for(new slot = 0; slot != 12; slot++)
	{
		GetPlayerWeaponData(playerid, slot, weap, ammo);
		if(weap != weaponid)
		{
			GetPlayerWeaponData(playerid, slot, Weapons[slot], Ammo[slot]);
		}
	}
	ResetPlayerWeapons(playerid);
	for(new slot = 0; slot != 12; slot++)
	{
		GivePlayerWeapon(playerid, Weapons[slot], Ammo[slot]);
	}
}
CB: changekey(playerid) {
	new Password[16], rows;
	cache_get_row_count(rows);
	if(!rows) return 1;
	cache_get_value_name(0, "password", Password);
	DeletePVar(playerid, "ChangePass");
	return SPD(playerid, 1228, DIALOG_STYLE_INPUT, ""CMAIN"√ë√¨√•√≠√† √†√§√¨√®√≠-√Ø√†√∞√Æ√´√ø", ""CWHITE"√Ç√¢√•√§√®√≤√• √Ø√†√∞√Æ√´√º, √™√Æ√≤√Æ√∞√ª√© √≥ √Ç√†√± √≥√±√≤√†√≠√Æ√¢√´√•√≠:", "S√≠√´√•√•", "Cerrar");
}
CB: alogin1(playerid) {
	new Password[16], rows;
	cache_get_row_count(rows);
	if(!rows) {
		if(pData[playerid][pAdmin] > 0) pData[playerid][pAdmin] = 0;
		return 1;
	}
	cache_get_value_name(0, "password", Password);
	if(!strcmp(Password,"qwerty", true)) SetPVarInt(playerid, "aLogin", 1), SPD(playerid, 1227, DIALOG_STYLE_INPUT, ""CERROR"√Ä√§√¨√®√≠-√∞√•√£√®√±√≤√∞√†√∂√®√ø", ""CWHITE"√Ç√¢√•√§√®√≤√• √´√æ√°√Æ√© √Ø√†√∞√Æ√´√º √§√´√ø √∞√•√£√®√±√≤√∞√†√∂√®√® √†√§√¨√®√≠-√Ø√∞√†√¢\n\n"CLIGHTGREY"√è√†√∞√Æ√´√º √§√Æ√´√¶√•√≠ √±√Æ√±√≤√Æ√ø√≤√º √®√ß √´√†√≤√®√≠√±√™√®√µ √°√≥√™√¢ √® √∂√®√¥√∞\n√∞√†√ß√¨√•√∞√Æ√¨ √Æ√≤ 6 √§√Æ 15 √±√®√¨√¢√Æ√´√Æ√¢", "√Ç√Æ√©√≤√®", "Cerrar");
	else SetPVarInt(playerid, "aLogin", 0), SPD(playerid, 1227, DIALOG_STYLE_INPUT, ""CERROR"√Ä√§√¨√®√≠-√†√¢√≤√Æ√∞√®√ß√†√∂√®√ø", ""CWHITE"√Ñ√´√ø √≤√Æ√£√Æ, √∑√≤√Æ√°√ª √¢√Æ√©√≤√® √™√†√™ √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞,\n√¢√¢√•√§√®√≤√• √Ø√†√∞√Æ√´√º √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√Ç√Æ√©√≤√®", "Cerrar");
	return 1;
}
CB: alogin(playerid) {
	new inputtext[16], string_last[3], rows;
	cache_get_row_count(rows);
	if(!rows) return 1;
	GetPVarString(playerid,"inputtext",inputtext,sizeof(inputtext));
	mysql_format(mysql_Handle,string, 144, "UPDATE `admin` SET `password` = '%s' WHERE `name` = '%s' LIMIT 1", inputtext, pData[playerid][pName]);
	mysql_tquery(mysql_Handle,string);
	SetPVarInt(playerid, "dostup", 1);
	cache_get_value_name(0, "level", string_last); pData[playerid][pAdmin] = strval(string_last);
	new astr[144], regcountry[20], regcity[30], ip[17];
	GetPlayerIp(playerid, ip, 17);
	GetIPCountry(ip, regcountry);
	GetIPCity(ip, regcity);
	if(IsAFull(playerid)) format(astr, 144, "[A] %s[%d] √¢√Æ√∏¬∏√´ √™√†√™ √Æ√±√≠√Æ√¢√†√≤√•√´√º {cc9900}[%s, %s]", pData[playerid][pName], playerid, regcountry, regcity);
	else if(pData[playerid][pAdmin] == 6) format(astr, 144, "[A] %s[%d] √¢√Æ√∏¬∏√´ √™√†√™ √£√´√†√¢√≠√ª√© √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ {cc9900}[%s, %s]", pData[playerid][pName], playerid, regcountry, regcity);
	else if(pData[playerid][pAdmin] == 7) format(astr, 144, "[A] %s[%d] √¢√Æ√∏¬∏√´ √™√†√™ √±√Ø√•√∂√®√†√´√º√≠√ª√© √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ {cc9900}[%s, %s]", pData[playerid][pName], playerid, regcountry, regcity);
	else format(astr, 144, "[A] %s[%d] √¢√Æ√∏¬∏√´ √™√†√™ √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √≥√∞√Æ√¢√≠√ø {cc9900}[%s, %s]", pData[playerid][pName], playerid, PlayerAdmin[pData[playerid][pAdmin] - 1], regcountry, regcity);
	AdminMessage(COLOR_YELLOW, astr);
	SetPVarInt(playerid, "alogin33", true);

	cache_get_value_name_int(0,"kick", gAdmin[playerid][ADMIN_KICK]);
	cache_get_value_name_int(0,"ban", gAdmin[playerid][ADMIN_BAN]);
	cache_get_value_name_int(0,"mute", gAdmin[playerid][ADMIN_MUTE]);
	cache_get_value_name_int(0,"ans", gAdmin[playerid][ADMIN_ANS]);
	cache_get_value_name_int(0,"warn", gAdmin[playerid][ADMIN_WARN]);
	cache_get_value_name_int(0,"jail", gAdmin[playerid][ADMIN_JAIL]);

	new day,month,year;
	getdate(year,month,day);
	mysql_format(mysql_Handle, string, 144, "UPDATE `admin` SET `last_alogin` = '%02d.%02d.%02d' WHERE `name` = '%s' LIMIT 1", day,month,year,pData[playerid][pName]);
	mysql_tquery(mysql_Handle, string);

	SetPVarInt(playerid, "AntiCheatShow", false);
	TextDrawShowForPlayer(playerid, cheatpanelTD[0]);
	TextDrawShowForPlayer(playerid, cheatpanelTD[1]);
	return 1;
}
CB: changepass(playerid,inputtext[]) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SCM(playerid, COLOR_ERROR, "√Ç√ª √¢√¢√•√´√® √≠√•√¢√•√∞√≠√ª√© √Ø√†√∞√Æ√´√º");
	SetPVarInt(playerid, #ChangePass, 1);
	return SPD(playerid, 1228, DIALOG_STYLE_INPUT, ""CMAIN"√ë√¨√•√≠√† √†√§√¨√®√≠-√Ø√†√∞√Æ√´√ø", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¢√ª√© √Ø√†√∞√Æ√´√º √¢ √Ø√Æ√´√• √≠√®√¶√•:", "S√≠√´√•√•", "Cerrar");
}
CB: password3(playerid) {
	new string_last[144], rows;
	cache_get_row_count(rows);
	if(!rows) return 1;
	SetPVarInt(playerid, "alogin43", true);
	SetPVarInt(playerid, "dostup", 1);
	cache_get_value_name(0, "level", string_last);
	pData[playerid][pAdmin] = strval(string_last);

	new astr[144], regcountry[20], regcity[30], ip[17];
	GetPlayerIp(playerid, ip, 17);
	GetIPCountry(ip, regcountry);
	GetIPCity(ip, regcity);
	if(IsAFull(playerid)) format(astr, 144, "[A] %s[%d] √¢√Æ√∏¬∏√´ √™√†√™ √Æ√±√≠√Æ√¢√†√≤√•√´√º {cc9900}[%s, %s]", pData[playerid][pName], playerid, regcountry, regcity);
	else if(pData[playerid][pAdmin] == 6) format(astr, 144, "[A] %s[%d] √¢√Æ√∏¬∏√´ √™√†√™ √£√´√†√¢√≠√ª√© √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ {cc9900}[%s, %s]", pData[playerid][pName], playerid, regcountry, regcity);
	else if(pData[playerid][pAdmin] == 7) format(astr, 144, "[A] %s[%d] √¢√Æ√∏¬∏√´ √™√†√™ √±√Ø√•√∂√®√†√´√º√≠√ª√© √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ {cc9900}[%s, %s]", pData[playerid][pName], playerid, regcountry, regcity);
	else format(astr, 144, "[A] %s[%d] √¢√Æ√∏¬∏√´ √™√†√™ √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √≥√∞√Æ√¢√≠√ø {cc9900}[%s, %s]", pData[playerid][pName], playerid, PlayerAdmin[pData[playerid][pAdmin] - 1], regcountry, regcity);
	AdminMessage(COLOR_YELLOW, astr);

	TextDrawShowForPlayer(playerid, cheatpanelTD[0]);
	TextDrawShowForPlayer(playerid, cheatpanelTD[1]);
	return 1;
}
CB: password(playerid,inputtext[]) {
	new string_last[144], rows;
	new pip[16]; GetPlayerIp(playerid,pip,16);
	cache_get_row_count(rows);
	if(pData[playerid][pApass] != 0) {
		new astr[144], regcountry[20], regcity[30];
		GetIPCountry(pip, regcountry);
		GetIPCity(pip, regcity);
		if(IsAFull(playerid)) format(astr, 144, "[A] %s[%d] √¢√Æ√∏¬∏√´ √™√†√™ √Æ√±√≠√Æ√¢√†√≤√•√´√º {cc9900}[%s, %s]", pData[playerid][pName], playerid, regcountry, regcity);
		else if(pData[playerid][pAdmin] == 6) format(astr, 144, "[A] %s[%d] √¢√Æ√∏¬∏√´ √™√†√™ √£√´√†√¢√≠√ª√© √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ {cc9900}[%s, %s]", pData[playerid][pName], playerid, regcountry, regcity);
		else if(pData[playerid][pAdmin] == 7) format(astr, 144, "[A] %s[%d] √¢√Æ√∏¬∏√´ √™√†√™ √±√Ø√•√∂√®√†√´√º√≠√ª√© √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ {cc9900}[%s, %s]", pData[playerid][pName], playerid, regcountry, regcity);
		else format(astr, 144, "[A] %s[%d] √¢√Æ√∏¬∏√´ √™√†√™ √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √≥√∞√Æ√¢√≠√ø {cc9900}[%s, %s]", pData[playerid][pName], playerid, PlayerAdmin[pData[playerid][pAdmin] - 1], regcountry, regcity);
		AdminMessage(COLOR_YELLOW, astr);
		SetPVarInt(playerid, "alogin43", true);
		SetPVarInt(playerid, "dostup", 1);
		cache_get_value_name(0, "level", string_last);
		pData[playerid][pAdmin] = strval(string_last);
		return 1;
	}
	if(!rows) {
		format(string_last, 144, "[A] %s[%d] √¢√¢√•√´ √≠√•√¢√•√∞√≠√ª√© √†√§√¨√®√≠-√Ø√†√∞√Æ√´√º [IP %s]",pData[playerid][pName],playerid,pip);
		AdminMessage(COLOR_RED,string_last);
		SCM(playerid, COLOR_ERROR, "√Ç√ª √¢√¢√•√´√® √≠√•√¢√•√∞√≠√ª√© √Ø√†√∞√Æ√´√º. √è√∞√® √¨√≠√Æ√£√Æ√™√∞√†√≤√≠√ª√µ √Ø√Æ√¢√≤√Æ√∞√•√≠√®√ø√µ √Ç√ª √°√≥√§√•√≤√• √Æ√≤√™√´√æ√∑√•√≠√ª √Æ√≤ √±√•√∞√¢√•√∞√†");
		SetPVarInt(playerid, "Popytki", GetPVarInt(playerid, "Popytki") + 1);
		if(GetPVarInt(playerid, "Popytki") > 3) {
			DeletePVar(playerid, "Popytki");
			SCM(playerid, COLOR_GREY, "√ä√Æ√´√®√∑√•√±√≤√¢√Æ √Ø√Æ√Ø√ª√≤√Æ√™ √®√±√∑√•√∞√Ø√†√≠√Æ");
			SCM(playerid, COLOR_GREY, "√Ç√¢√•√§√®√≤√• /q, √∑√≤√Æ√°√ª √¢√ª√©√≤√®");
			Kick(playerid);
		}
		return 1;
	}
	SetPVarInt(playerid, "dostup", 1);
	cache_get_value_name(0, "level", string_last);
	pData[playerid][pAdmin] = strval(string_last);
	new astr[144], regcountry[20], regcity[30];
	GetIPCountry(pip, regcountry);
	GetIPCity(pip, regcity);
	if(IsAFull(playerid)) format(astr, 144, "[A] %s[%d] √¢√Æ√∏¬∏√´ √™√†√™ √Æ√±√≠√Æ√¢√†√≤√•√´√º {cc9900}[%s, %s]", pData[playerid][pName], playerid, regcountry, regcity);
	else if(pData[playerid][pAdmin] == 6) format(astr, 144, "[A] %s[%d] √¢√Æ√∏¬∏√´ √™√†√™ √£√´√†√¢√≠√ª√© √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ {cc9900}[%s, %s]", pData[playerid][pName], playerid, regcountry, regcity);
	else if(pData[playerid][pAdmin] == 7) format(astr, 144, "[A] %s[%d] √¢√Æ√∏¬∏√´ √™√†√™ √±√Ø√•√∂√®√†√´√º√≠√ª√© √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ {cc9900}[%s, %s]", pData[playerid][pName], playerid, regcountry, regcity);
	else format(astr, 144, "[A] %s[%d] √¢√Æ√∏¬∏√´ √™√†√™ √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √≥√∞√Æ√¢√≠√ø {cc9900}[%s, %s]", pData[playerid][pName], playerid, PlayerAdmin[pData[playerid][pAdmin] - 1], regcountry, regcity);
	AdminMessage(COLOR_YELLOW, astr);
	SetPVarInt(playerid, "alogin33", true);

	cache_get_value_name_int(0,"kick", gAdmin[playerid][ADMIN_KICK]);
	cache_get_value_name_int(0,"ban", gAdmin[playerid][ADMIN_BAN]);
	cache_get_value_name_int(0,"mute", gAdmin[playerid][ADMIN_MUTE]);
	cache_get_value_name_int(0,"ans", gAdmin[playerid][ADMIN_ANS]);
	cache_get_value_name_int(0,"warn", gAdmin[playerid][ADMIN_WARN]);
	cache_get_value_name_int(0,"jail", gAdmin[playerid][ADMIN_JAIL]);

	new day,month,year;
	getdate(year,month,day);
	mysql_format(mysql_Handle, string_last, 144, "UPDATE `admin` SET `last_alogin` = '%02d.%02d.%02d' WHERE `name` = '%s' LIMIT 1", day,month,year,pData[playerid][pName]);
	mysql_tquery(mysql_Handle, string_last);

	TextDrawShowForPlayer(playerid, cheatpanelTD[0]);
	TextDrawShowForPlayer(playerid, cheatpanelTD[1]);
	return 1;
}
CB: SetLvlAdm(playerid, targetname[], level) {

	if(!IsAFull(playerid)) {
		if(IsAFull_nick(targetname)) return SCM(playerid,COLOR_ERROR,"√è√∞√†√¢√† √Ω√≤√Æ√£√Æ √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√† √ß√†√Ø√∞√•√π√•√≠√Æ √®√ß√¨√•√≠√ø√≤√º");
	}

	new statics, rows;
	cache_get_row_count(rows);
	if(rows) {
		cache_get_value_name_int(0, "level", statics);
		new id_g = GetPlayerID(targetname);
		if(!level) {
			if(IsPlayerConnected(id_g)) SCMF(playerid, 0xB5B500FF, "√Ç√ª √®√ß√¨√•√≠√®√´√® √≥√∞√Æ√¢√•√≠√º √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√† %s √≠√† 0", targetname);
			else SCMF(playerid, 0xB5B500FF, "√Ç√ª √®√ß√¨√•√≠√®√´√® √≥√∞√Æ√¢√•√≠√º √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√† √Æ√¥√¥√´√†√©√≠ %s √≠√† 0", targetname);
			pData[playerid][adm_good_rate] = 0;
			pData[playerid][adm_bad_rate] = 0;
			mysql_format(mysql_Handle, string, 135, "UPDATE `accounts` SET `pHelper` = '0', `adm_good_rate` = '0', `adm_bad_rate` = '0' WHERE `Name` = '%s'", targetname);
			mysql_tquery(mysql_Handle, string);
			new str_query[70];
			mysql_format(mysql_Handle, str_query, sizeof(str_query), "DELETE FROM `admin` WHERE `name` = '%s'", targetname);
			mysql_tquery(mysql_Handle, str_query);
			if(IsPlayerConnected(id_g)) {
				pData[id_g][pAdmin] = 0;
				TextDrawHideForPlayer(id_g, cheatpanelTD[0]);
				TextDrawHideForPlayer(id_g, cheatpanelTD[1]);
				SetPVarInt(id_g, "alogin33", false);
				SetPVarInt(id_g, "alogin43", false);
				SCM(id_g, 0xB5B500FF, "√Ç√†√∏ √≥√∞√Æ√¢√•√≠√º √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√† √Ø√Æ√≠√®√¶√•√≠");
			} 
		}
		else {
			mysql_format(mysql_Handle, string, 128, "UPDATE `admin` SET `level` = %d WHERE `name` = '%s' LIMIT 1", level,targetname);
			mysql_tquery(mysql_Handle, string);
			mysql_format(mysql_Handle, string, 100, "UPDATE `accounts` SET `pHelper` = '0' WHERE `Name` = '%s'", targetname);
			mysql_tquery(mysql_Handle, string);
			if(IsPlayerConnected(id_g)) SCMF(playerid, 0xB5B500FF, "√Ç√ª √®√ß√¨√•√≠√®√´√® √≥√∞√Æ√¢√•√≠√º √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√† %s √≠√† %d", targetname, level);
			else SCMF(playerid, 0xB5B500FF, "√Ç√ª √®√ß√¨√•√≠√®√´√® √≥√∞√Æ√¢√•√≠√º √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√† √Æ√¥√¥√´√†√©√≠ %s √≠√† %d", targetname, level);
			if(IsPlayerConnected(id_g)) {
				SCM(id_g, 0xB5B500FF, "√Ç√†√∏ √≥√∞√Æ√¢√•√≠√º √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√† √®√ß√¨√•√≠¬∏√≠ (/alogin)");
				SetPVarInt(id_g, "alogin33", false);
				SetPVarInt(id_g, "alogin43", false);
			}
		}
		return 1;
	}
	if(!level) return SCM(playerid, COLOR_GREY, "√à√£√∞√Æ√™ √≠√• √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞");
	new years, months, days,data[32]; getdate(years, months, days);
	format(data, 32, "%02d.%02d.%04d", days, months, years);
	mysql_format(mysql_Handle,string, 246, "INSERT INTO `admin` (`Name`, `level`, `last_alogin`, `Postavil`, `Data`) VALUES ('%s', %d, '00.00.0000', '%s', '%s')", targetname, level, pData[playerid][pName], data);
	mysql_tquery(mysql_Handle, string);
	mysql_format(mysql_Handle, string, 100, "UPDATE `accounts` SET `pHelper` = '0' WHERE `Name` = '%s'", targetname);
	mysql_tquery(mysql_Handle, string);
	if(IsPlayerConnected(GetPlayerID(targetname))) SCMF(playerid, 0xB5B500FF, "√Ç√ª √®√ß√¨√•√≠√®√´√® √≥√∞√Æ√¢√•√≠√º √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√† %s √≠√† %d", targetname, level);
	else SCMF(playerid, 0xB5B500FF, "√Ç√ª √®√ß√¨√•√≠√®√´√® √≥√∞√Æ√¢√•√≠√º √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√† √Æ√¥√¥√´√†√©√≠ %s √≠√† %d", targetname, level);
	if(IsPlayerConnected(GetPlayerID(targetname))) {
		SCM(GetPlayerID(targetname), 0xB5B500FF, "√Ç√†√∏ √≥√∞√Æ√¢√•√≠√º √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√† √®√ß√¨√•√≠¬∏√≠ (/alogin)");
		SetPVarInt(GetPlayerID(targetname), "alogin33", false);
	}
	return 1;
}
stock CreatePlayerMineTD(playerid) {
	MineMoneyPTD[playerid] = CreatePlayerTextDraw(playerid, 596.333007, 226.488815, "$0");
	PlayerTextDrawLetterSize(playerid, MineMoneyPTD[playerid], 0.423666, 1.554370);
	PlayerTextDrawAlignment(playerid, MineMoneyPTD[playerid], 2);
	PlayerTextDrawColor(playerid, MineMoneyPTD[playerid], -1);
	PlayerTextDrawSetShadow(playerid, MineMoneyPTD[playerid], 0);
	PlayerTextDrawSetOutline(playerid, MineMoneyPTD[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, MineMoneyPTD[playerid], 0);
	PlayerTextDrawFont(playerid, MineMoneyPTD[playerid], 3);
	PlayerTextDrawSetProportional(playerid, MineMoneyPTD[playerid], 1);

	MineAmountPTD[playerid] = CreatePlayerTextDraw(playerid, 595.333068, 193.473983, "0 kg");
	PlayerTextDrawLetterSize(playerid, MineAmountPTD[playerid], 0.401665, 1.566815);
	PlayerTextDrawAlignment(playerid, MineAmountPTD[playerid], 2);
	PlayerTextDrawColor(playerid, MineAmountPTD[playerid], -1);
	PlayerTextDrawSetShadow(playerid, MineAmountPTD[playerid], 0);
	PlayerTextDrawSetOutline(playerid, MineAmountPTD[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, MineAmountPTD[playerid], 0);
	PlayerTextDrawFont(playerid, MineAmountPTD[playerid], 3);
	PlayerTextDrawSetProportional(playerid, MineAmountPTD[playerid], 1);
}
stock withdraw_donate(playerid, cena, name[]) {
	pData[playerid][pRub] -= cena;
	UpdatePlayerData(playerid, "pRub", pData[playerid][pRub]);
	new msg[164], game_strr[26], years, months, days, data[32];
	getdate(years, months, days);
	format(game_strr, sizeof game_strr, "~r~-%d ~w~rub", cena);
	GameTextForPlayer(playerid, game_strr, 3000, 1);
	format(data, 32, "%02d.%02d.%04d", days, months, years);
	mysql_format(mysql_Handle, msg, 164, "INSERT INTO `donate_log` (`NamePlayer`, `Price`, `Name`, `Date`) VALUES ('%s', %d, '%s', '%s')", pData[playerid][pName],cena,name,data);
	return mysql_tquery(mysql_Handle, msg);
}
stock mafia_menu(playerid) {
	if(IsPlayerInRangeOfPoint(playerid, 3.0, 2606.9250,1303.7983,1051.6802)) {
		if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return 1;
		new vw_player = GetPlayerVirtualWorld(playerid);
		if(vw_player != 2 && vw_player != 5 && vw_player != 3) return 1;
		if(vw_player == 2 && pData[playerid][pMember] != 5) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √±√Æ√±√≤√Æ√®√≤√• √¢ La Cosa Nostra");
		else if(vw_player == 5 && pData[playerid][pMember] != 14) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √±√Æ√±√≤√Æ√®√≤√• √¢ √∞√≥√±√±√™√Æ√© √¨√†√¥√®√®");
		else if(vw_player == 3 && pData[playerid][pMember] != 6) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √±√Æ√±√≤√Æ√®√≤√• √¢ Yakuza");
		SPD(playerid, 7171, DIALOG_STYLE_LIST,"{ffcc15}√ë√™√´√†√§ √¨√†√¥√®√®", 
			"[1] √è√Æ√´√Æ√¶√®√≤√º √Ø√†√≤√∞√Æ√≠√ª\n\
			[2] √è√Æ√´√Æ√¶√®√≤√º √≠√†√∞√™√Æ√≤√®√™√®\n\
			[3] √è√Æ√´√Æ√¶√®√≤√º √¨√•√≤√†√´√´\n\
			{99cc66}[4] √Ç√ß√ø√≤√º √Ø√†√≤√∞√Æ√≠√ª\n\
			{99cc66}[5] √Ç√ß√ø√≤√º √≠√†√∞√™√Æ√≤√®√™√®\n\
			{99cc66}[6] √Ç√ß√ø√≤√º √¨√•√≤√†√´√´\n\
			"CWHITE"[7] √Ç√ß√ø√≤√º √°√Æ√¨√°√≥", 
		"S√≠√´√•√•", "Cerrar");
	}
	return 1;
}
stock GangMenu(playerid) {
	if(IsPlayerInRangeOfPoint(playerid, 1.75, 2740.0842,-1957.2704,662.6328)) {
		if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return 1;

		new vw=GetPlayerVirtualWorld(playerid),
			org=pData[playerid][pMember];
		if(vw==34 && org !=12) 
			return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √±√Æ√±√≤√Æ√®√≤√• √¢ The Ballas");
		else if(vw==75 && org !=13) 
			return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √±√Æ√±√≤√Æ√®√≤√• √¢ Los Santos Vagos");
		else if(vw==1 && org !=15) 
			return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √±√Æ√±√≤√Æ√®√≤√• √¢ Grove Street");
		else if(vw==36 && org !=17) 
			return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √±√Æ√±√≤√Æ√®√≤√• √¢ Varrios Los Aztecas");
		else if(vw==63 && org !=18) 
			return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √±√Æ√±√≤√Æ√®√≤√• √¢ The Rifa");

		switch(org) {
			case 12: if(b_Sklad{0} == true) return SCM(playerid, COLOR_ERROR, "√ë√™√´√†√§ √ß√†√™√∞√ª√≤");
			case 13: if(b_Sklad{1} == true) return SCM(playerid, COLOR_ERROR, "√ë√™√´√†√§ √ß√†√™√∞√ª√≤");
			case 15: if(b_Sklad{2} == true) return SCM(playerid, COLOR_ERROR, "√ë√™√´√†√§ √ß√†√™√∞√ª√≤");
			case 17: if(b_Sklad{3} == true) return SCM(playerid, COLOR_ERROR, "√ë√™√´√†√§ √ß√†√™√∞√ª√≤");
			case 18: if(b_Sklad{4} == true) return SCM(playerid, COLOR_ERROR, "√ë√™√´√†√§ √ß√†√™√∞√ª√≤");
		}
		SPD(playerid, 7171, DIALOG_STYLE_LIST,"{ffcc15}√ë√™√´√†√§ √°√†√≠√§√ª", 
			"[1] √è√Æ√´√Æ√¶√®√≤√º √Ø√†√≤√∞√Æ√≠√ª\n\
			[2] √è√Æ√´√Æ√¶√®√≤√º √≠√†√∞√™√Æ√≤√®√™√®\n\
			[3] √è√Æ√´√Æ√¶√®√≤√º √¨√•√≤√†√´√´\n\
			{99cc66}[4] √Ç√ß√ø√≤√º √Ø√†√≤√∞√Æ√≠√ª\n\
			{99cc66}[5] √Ç√ß√ø√≤√º √≠√†√∞√™√Æ√≤√®√™√®\n\
			{99cc66}[6] √Ç√ß√ø√≤√º √¨√•√≤√†√´√´", 
		"S√≠√´√•√•", "Cerrar");
	}
	return 1;
}

static const lib_anims[][] =
{
    "AIRPORT",    "ATTRACTORS",   "BAR",         "BASEBALL",
    "BD_FIRE",    "BEACH",        "BENCHPRESS",  "BF_INJECTION",
    "BIKED",      "BIKEH",        "BIKELEAP",    "BIKES",
    "BIKEV",      "BIKE_DBZ",     "BMX",         "BOMBER",
    "BOX",        "BSKTBALL",     "BUDDY",       "BUS",
    "CAMERA",     "CAR",          "CARRY",       "CAR_CHAT",
    "CASINO",     "CHAINSAW",     "CHOPPA",      "CLOTHES",
    "COACH",      "COLT45",       "COP_AMBIENT", "COP_DVBYZ",
    "CRACK",      "CRIB",         "DAM_JUMP",     "DANCING",
    "DEALER",     "DILDO",        "DODGE",        "DOZER",
    "DRIVEBYS",   "FAT",          "FIGHT_B",      "FIGHT_C",
    "FIGHT_D",    "FIGHT_E",      "FINALE",       "FINALE2",
    "FLAME",      "FLOWERS",      "FOOD",         "FREEWEIGHTS",
    "GANGS",      "GHANDS",       "GHETTO_DB",    "GOGGLES",
    "GRAFFITI",   "GRAVEYARD",    "GRENADE",      "GYMNASIUM",
    "HAIRCUTS",   "HEIST9",       "INT_HOUSE",    "INT_OFFICE",
    "INT_SHOP",   "JST_BUISNESS", "KART",         "KISSING",
    "KNIFE",      "LAPDAN1",      "LAPDAN2",      "LAPDAN3",
    "LOWRIDER",   "MD_CHASE",     "MD_END",       "MEDIC",
    "MISC",       "MTB",          "MUSCULAR",     "NEVADA",
    "ON_LOOKERS", "OTB",          "PARACHUTE",    "PARK",
    "PAULNMAC",   "PED",          "PLAYER_DVBYS", "PLAYIDLES",
    "POLICE",     "POOL",         "POOR",         "PYTHON",
    "QUAD",       "QUAD_DBZ",     "RAPPING",      "RIFLE",
    "RIOT",       "ROB_BANK",     "ROCKET",       "RUSTLER",
    "RYDER",      "SCRATCHING",   "SHAMAL",       "SHOP",
    "SHOTGUN",    "SILENCED",     "SKATE",        "SMOKING",
    "SNIPER",     "SPRAYCAN",     "STRIP",        "SUNBATHE",
    "SWAT",       "SWEET",        "SWIM",         "SWORD",
    "TANK",       "TATTOOS",      "TEC",          "TRAIN",
    "TRUCK",      "UZI",          "VAN",          "VENDING",
    "VORTEX",     "WAYFARER",     "WEAPONS",      "WUZI",
    "WOP",        "GFUNK",        "RUNNINGMAN"
};
stock preload_anim_libs(playerid) {
	if(!anims_loaded[playerid])
	{
		for(new i, s = sizeof(lib_anims); i < s; i++) 
		{
			ApplyAnimation(playerid, lib_anims[i], "null", 0,0,0,0,0,0);
			// SCMF(playerid,-1, "preload anims: i:%i lib:%s", i,lib_anims[i]);
		}
		anims_loaded[playerid] = true;
	}
}

A_ApplyAnimation(playerid, a_lib[], a_name[], Float: a_fdelta, a_loop, a_lockx, a_locky, a_freeze, a_time, a_forcesync) {
	if(GetPVarInt(playerid, "player_anim")) ClearAnimations(playerid), DeletePVar(playerid, "player_anim");
	ApplyAnimation(playerid, a_lib, a_name, a_fdelta, a_loop, a_lockx, a_locky, a_freeze, a_time, a_forcesync);
	for(new i = 0; i < sizeof(animinfo_TD); i++)
		TextDrawShowForPlayer(playerid, animinfo_TD[i]);
	return SetPVarInt(playerid, "player_anim", 1);
}
stock update_mafia_store(fracid) {
	if(fracid != 5 && fracid != 6 && fracid != 14) return 1;

	if(IsValidDynamic3DTextLabel(frac_text[fracid])) {
		string[0] = EOS;
		format(string,300,"{%s}%s\n\n"CWHITE"√è√†√≤√∞√Æ√≠√ª: "CORANGE"%d √∏√≤\n"CWHITE"√ç√†√∞√™√Æ√≤√®√™√®: "CORANGE"%d √£√∞\n"CWHITE"√å√•√≤√†√´√´: "CORANGE"%d √™√£\n\n"CBLUE"/ammoput "CWHITE"- √Ø√Æ√´√Æ√¶√®√≤√º √ø√π√®√™ √±\n√Ø√†√≤√∞√Æ√≠√†√¨√® √≠√† √±√™√´√†√§",
			GetFractionColor[fracid],FractionInfo[fracid][fName],org_ammo[fracid],org_drugs[fracid],org_materials[fracid]);
		UpdateDynamic3DTextLabelText(frac_text[fracid], -1, string);
	}
	return 1;
}
stock UpdateStoreGang(fracid) {
	if(fracid != 12 && fracid != 13 && fracid != 15 && fracid != 17 && fracid != 18) return 1;

	if(IsValidDynamic3DTextLabel(frac_text[fracid])) {
		string[0] = EOS;
		new numf_sklad;
		switch(fracid) {
			case 12: numf_sklad = 0;
			case 13: numf_sklad = 1;
			case 15: numf_sklad = 2;
			case 17: numf_sklad = 3;
			case 18: numf_sklad = 4;
		}
		format(string,450,""CCYAN"√ë√™√´√†√§ √°√†√≠√§√ª\n%s\n\n"CWHITE"√í√•√∞√∞√®√≤√Æ√∞√®√®: "CLITEBLUE"%d / 104\n"CWHITE"√è√†√≤√∞√Æ√≠√ª: "CORANGE"%d √∏√≤\n"CWHITE"√ç√†√∞√™√Æ√≤√®√™√®: "CORANGE"%d √£√∞\n"CWHITE"√å√•√≤√†√´√´: "CORANGE"%d √™√£\n\n"CWHITE"√å√•√≠√æ √±√™√´√†S√≠: "CLITEBLUE"√™√´√†√¢√®√∏√† F\n\n"CCYAN"√Å√ª√±√≤√∞√ª√© √§√Æ√±√≤√≥√Ø:\n"CLITEBLUE"/patrtake "CWHITE"- √¢√ß√ø√≤√º √Ø√†√≤√∞√Æ√≠√ª √±√Æ √±√™√´√†S√≠\n"CLITEBLUE"/mtake "CWHITE"- √¢√ß√ø√≤√º √¨√•√≤√†√´√´ √±√Æ √±√™√´√†S√≠",
			(b_Sklad{numf_sklad} == false) ? (""CMAIN"√é√≤√™√∞√ª√≤") : (""CERROR"√á√†√™√∞√ª√≤"),frac_gangzone[fracid],org_ammo[fracid],org_drugs[fracid],org_materials[fracid]);
		UpdateDynamic3DTextLabelText(frac_text[fracid], 0xFFFFFFBB, string);
	}
	return 1;
}
stock close_dialog(playerid) return SPD(playerid, -1, 0, " ", " ", " ", " ");
public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[]) {

	if(strlen(inputtext))
		printf("[%s] OnDialogResponse(%i, %i, %i, %i, %s)", GetName(playerid), playerid,dialogid,response,listitem,inputtext);

	if(strfind(inputtext, "'", true) != -1 || strfind(inputtext, "=", true) != -1) return SCM(playerid,COLOR_ERROR,"√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [098] [Incorrect symbols]");
	for(new i = 0, s = strlen(inputtext); i < s; i ++)
	{
		if(inputtext[i] == '%' || inputtext[i] == '\\') inputtext[i] = '#';
	}
	if(dialogid != 1 && dialogid != 2) // √≠√• √∞√•√£√®√±√≤√∞√†√∂√®√ø √® √≠√• √†√¢√≤√Æ√∞√®√ß√†√∂√®√ø
	{
		if(strval(inputtext) < -10 || strval(inputtext) > 100000000)
		{
			return SCM(playerid,COLOR_ERROR,"√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [012]");
		}
	}

	Derby_OnDialogResponse(playerid, dialogid, response, listitem, inputtext);

	switch(dialogid)
	{
        case 341: 
        { 
            if(!response) return 1;
            if(!listitem) SPD(playerid, 8900, DIALOG_STYLE_LIST, "{cccc66}√Å√†√≠√™√Æ√¨√†√≤", "{ff9945}[1] "CWHITE"√è√Æ√´√Æ√¶√®√≤√º √±√∞√•√§√±√≤√¢√† √≠√† √°√†√≠√™. √±√∑¬∏√≤\n{ff9945}[2] "CWHITE"√ë√≠√ø√≤√º √±√∞√•√§√±√≤√¢√† √± √°√†√≠√™. √±√∑¬∏√≤√†\n{ff9945}[3] "CWHITE"√ì√ß√≠√†√≤√º √°√†√´√†√≠√± √°√†√≠√™. √±√∑¬∏√≤√†\n{ff9945}[4] "CWHITE"√è√Æ√Ø√Æ√´√≠√®√≤√º √±√∑¬∏√≤ √≤√•√´√•√¥√Æ√≠√†\n{ff9945}[5] "CWHITE"√Å√•√ß√≠√†√´√®√∑√≠√ª√© √Ø√•√∞√•√¢√Æ√§", "Seleccione", "√Ç√ª√©√≤√®");
            new p_listitem = -1, listed;
            for(; listed < _PLAYERBANK[playerid]; listed ++) {
                if(!_INFO[playerid][HIDED][listed]) p_listitem ++;
                if(p_listitem != listitem - 1) continue;
                SetPVarInt(playerid, "_banklogin", listed);
                SPD(playerid, 344, DIALOG_STYLE_PASSWORD, ""CLITEBLUE"√Ä√¢√≤√Æ√∞√®√ß√†√∂√®√ø", ""CWHITE"√Ç√¢√•√§√®√≤√• "CLITEBLUE"PIN-√™√Æ√§ "CWHITE"√±√∑¬∏√≤√†:", "√Ç√¢√•√±√≤√®", "Cerrar");
                break;
            }
            if(listitem == p_listitem + 2) {
            	if(!IsPlayerInRangeOfPoint(playerid, 20.0, -0.6922,159.5390,1243.9670) && 
            		!IsPlayerInRangeOfPoint(playerid, 20.0, 1458,-990,26)) 
            		return SCM(playerid, COLOR_GREY, "√î√≥√≠√™√∂√®√ø √§√Æ√±√≤√≥√Ø√≠√† √≤√Æ√´√º√™√Æ √¢ √°√†√≠√™√•");
				mysql_format(mysql_Handle, string, 104, "SELECT `OWNER` FROM `bank_acc` WHERE `OWNER` = '%s'", GetName(playerid)); 
        		mysql_tquery(mysql_Handle, string, "bank_c_check", "d", playerid);
            }
            if(listitem == p_listitem + 3) {
                new bool: checking = false;
                for(new i = 0; i < _PLAYERBANK[playerid]; i ++) {
                    if(!_INFO[playerid][HIDED][i]) continue;
                    checking = true;
                }
                if(!checking) {
                	show_menu_bank(playerid);
                	return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √±√™√∞√ª√≤√ª√µ √°√†√≠√™√Æ√¢√±√™√®√µ √±√∑√•√≤√Æ√¢");
                }
                for(new i = 0; i < _PLAYERBANK[playerid]; i ++) {
                    if(!_INFO[playerid][HIDED][i]) continue;
                    _INFO[playerid][HIDED][i] = false;
                }
                PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
                show_menu_bank(playerid);
                SCM(playerid, COLOR_BLUE, "√Ç√±√• √±√™√∞√ª√≤√ª√• √±√∑√•√≤√† √¢√≠√Æ√¢√º √§√Æ√±√≤√≥√Ø√≠√ª √§√´√ø √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√ø");
            }
        } 
        case 342: 
        { 
            if(!response) return 1; 
            if(!strlen(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "√ó√≤√Æ√°√ª √Ø√∞√Æ√§√Æ√´√¶√®√≤√º, √¢√¢√•√§√®√≤√• √≠√†√ß√¢√†√≠√®√• √§√´√ø √±√∑¬∏√≤√†"), SPD(playerid, 342, DIALOG_STYLE_INPUT, ""CMAIN"√é√≤√™√∞√ª√≤√®√• √≠√Æ√¢√Æ√£√Æ √±√∑√•√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√†√ß√¢√†√≠√®√• √§√´√ø √≠√Æ√¢√Æ√£√Æ √±√∑√•√≤√†: (√¨√†√™√±. √§√´√®√≠√†: 20 √±√®√¨√¢√Æ√´√Æ√¢)", "S√≠√´√•√•", "Cerrar");
            if(strlen(inputtext) < 5 || strlen(inputtext) > 20) { 
                SCM(playerid, COLOR_GREY, "√ä√Æ√´√®√∑√•√±√≤√¢√Æ √±√®√¨√¢√Æ√´√Æ√¢ √≠√• √§√Æ√´√¶√≠√Æ √°√ª√≤√º √¨√•√≠√º√∏√• 5 √® √°√Æ√´√º√∏√• 20"); 
                return SPD(playerid, 342, DIALOG_STYLE_INPUT, ""CMAIN"√é√≤√™√∞√ª√≤√®√• √≠√Æ√¢√Æ√£√Æ √±√∑√•√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√†√ß√¢√†√≠√®√• √§√´√ø √≠√Æ√¢√Æ√£√Æ √±√∑√•√≤√†: (√¨√†√™√±. √§√´√®√≠√†: 20 √±√®√¨√¢√Æ√´√Æ√¢)", "S√≠√´√•√•", "Cerrar");
            }
            TOTALBANK ++;
            strmid(_INFONAME[playerid][_PLAYERBANK[playerid]], inputtext, 0, strlen(inputtext), 20); 
            strmid(_INFO[playerid][OWNER][_PLAYERBANK[playerid]], GetName(playerid), 0, strlen(GetName(playerid)), 20); 
            _INFO[playerid][NUMBER][_PLAYERBANK[playerid]] = 1000 + TOTALBANK;
            _INFO[playerid][ID][_PLAYERBANK[playerid]] = TOTALBANK; 
            _INFO[playerid][PASSWORD][_PLAYERBANK[playerid]] = 0000; 
            _INFO[playerid][BALANCE][_PLAYERBANK[playerid]] = 0; 
            mysql_format(mysql_Handle, string, 340, "INSERT INTO `bank_acc` (`ID`,`NAME`,`NUMBER`,`OWNER`,`BALANCE`,`PASSWORD`) VALUES (%i,'%s',%i,'%s','0','0000')", TOTALBANK, _INFONAME[playerid][_PLAYERBANK[playerid]], _INFO[playerid][NUMBER][_PLAYERBANK[playerid]], GetName(playerid)); 
            mysql_tquery(mysql_Handle, string);
            _PLAYERBANK[playerid] ++; 
            PlayerPlaySound(playerid, 17001, 0.0, 0.0, 0.0);
            return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CMAIN"√ë√∑¬∏√≤ √±√Æ√ßS√≠√≠",
	            ""CWHITE"√Ç√ª √±√Æ√ßS√≠√´√® √≠√Æ√¢√ª√© √±√∑√•√≤ √¢ √°√†√≠√™√•.\n\n\
	            √Ñ√´√ø √§√Æ√±√≤√≥√Ø√† √™ √≠√•√¨√≥ Usar√≤√• PIN-√™√Æ√§ "CLITEBLUE"0000"CWHITE". √è√Æ√±√´√• √¢√µ√ÆS√≠\n\
	            √≠√†√±√≤√Æ√ø√≤√•√´√º√≠√Æ √∞√•√™√Æ√¨√•√≠√§√≥√•√¨ Cambio √•√£√Æ √≠√† √°√Æ√´√•√• √±√´√Æ√¶√≠√ª√©.\n\
	            √ù√≤√Æ √Ø√Æ√¨√Æ√¶√•√≤ √ß√†√π√®√≤√®√≤√º √±√∑√•√≤ √Æ√≤ √≠√•√±√†√≠√™√∂√®√Æ√≠√®√∞√Æ√¢√†√≠√≠√Æ√£√Æ √§√Æ√±√≤√≥√Ø√†.", 
	        "Cerrar", "");
        } 
        case 343: { 
            if(!response) return show_menu_bank(playerid);
            switch(listitem) { 
                case 0: { 
                    new _messages[200]; 
                    format(_messages,sizeof(_messages), 
                    	""CWHITE"√ç√Æ√¨√•√∞ √±√∑¬∏√≤√†:\t\t"CPALEGREEN"%i\n\
                    	"CWHITE"√ç√†√®√¨√•√≠√Æ√¢√†√≠√®√•:\t"CLITEBLUE"\"%s\"\n\
                    	"CWHITE"√Å√†√´√†√≠√±:\t\t"CCYAN"%i$", 
                    _INFO[playerid][NUMBER][GetPVarInt(playerid, "_banklogin")],_INFONAME[playerid][GetPVarInt(playerid, "_banklogin")], 
                    _INFO[playerid][BALANCE][GetPVarInt(playerid, "_banklogin")]); 
                    SPD(playerid, 345, DIALOG_STYLE_MSGBOX, ""CLITEBLUE"√à√≠√¥√Æ√∞√¨√†√∂√®√ø", _messages, "Siguiente", "");
                } 
                case 1: {
                    new query_history_bank[110];
                    mysql_format(mysql_Handle, query_history_bank, 110, "SELECT * FROM `logs_bank` WHERE `number_bank` = %d ORDER BY id DESC", _INFO[playerid][NUMBER][GetPVarInt(playerid, "_banklogin")]); 
                    mysql_tquery(mysql_Handle, query_history_bank, "show_logs_bank", "d", playerid);
                }
                case 2: SPD(playerid, 346, DIALOG_STYLE_INPUT, ""CLITEBLUE"√ë√≠√ø√≤√º √§√•√≠√º√£√®",""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥ √™√Æ√≤√Æ√∞√≥√æ √µ√Æ√≤√®√≤√• √±√≠√ø√≤√º:","√ë√≠√ø√≤√º","Siguiente");
                case 3: SPD(playerid, 347, DIALOG_STYLE_INPUT, ""CLITEBLUE"√è√Æ√´√Æ√¶√®√≤√º √§√•√≠√º√£√®",""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥ √™√Æ√≤√Æ√∞√≥√æ √µ√Æ√≤√®√≤√• √Ø√Æ√´√Æ√¶√®√≤√º:","√è√Æ√´√Æ√¶√®√≤√º","Siguiente");
                case 4: SPD(playerid, 348, DIALOG_STYLE_INPUT,""CLITEBLUE"√è√•√∞√•√¢√Æ√§ √±√∞√•√§√±√≤√¢",""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¨√•√∞ √±√∑¬∏√≤√†, √≠√† √™√Æ√≤√Æ√∞√ª√©\n√µ√Æ√≤√®√≤√• √Æ√±√≥√π√•√±√≤√¢√®√≤√º √Ø√•√∞√•√¢√Æ√§ √±√∞√•√§√±√≤√¢:", "S√≠√´√•√•","Siguiente");
                case 5: SPD(playerid, 3411, DIALOG_STYLE_INPUT,""CLITEBLUE"√è√•√∞√•√®√¨√•√≠√Æ√¢√†√≠√®√• √±√∑¬∏√≤√†",""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¢√Æ√• √≠√†√ß√¢√†√≠√®√• √§√´√ø\n√±√∑¬∏√≤√† √¢ √Ø√Æ√´√• √≠√®√¶√•:","√Ç√¢√•√±√≤√®","Siguiente");
                case 6: SPD(playerid, 3412, DIALOG_STYLE_INPUT,""CLITEBLUE"√ë√¨√•√≠√† PIN-√™√ÆS√≠ √±√∑¬∏√≤√†",""CWHITE"√Ç√¢√•√§√®√≤√• √≤√•√™√≥√π√®√© PIN-√™√Æ√§ √¢ √Ø√Æ√´√• √≠√®√¶√•:","√Ç√¢√•√±√≤√®","Siguiente");
                case 7: {
                    _INFO[playerid][HIDED][GetPVarInt(playerid, "_banklogin")] = true;
                    PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
                    SCMF(playerid, 0xFF9933FF, "√Å√†√≠√™√Æ√¢√±√™√®√© √±√∑¬∏√≤ "CCYAN"¬π%d {ff9933}√±√™√∞√ª√≤ √®√ß √Æ√°√π√•√£√Æ √±√Ø√®√±√™√†", _INFO[playerid][NUMBER][GetPVarInt(playerid, "_banklogin")]);
                    show_menu_bank(playerid);
                }
            } 
        } 
        case 3411: 
        { 
            if(!response) return DialogBank(playerid); 
            if(!strlen(inputtext)) return SCM(playerid, COLOR_GREY, "√Ç√¢√•√§√®√≤√• √≠√Æ√¢√Æ√• √≠√†√ß√¢√†√≠√®√• √§√´√ø √±√∑¬∏√≤√†"), SPD(playerid, 3411, DIALOG_STYLE_INPUT,""CLITEBLUE"√è√•√∞√•√®√¨√•√≠√Æ√¢√†√≠√®√• √±√∑¬∏√≤√†",""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¢√Æ√• √≠√†√ß√¢√†√≠√®√• √§√´√ø\n√±√∑¬∏√≤√† √¢ √Ø√Æ√´√• √≠√®√¶√•:","√Ç√¢√•√±√≤√®","Siguiente");
            if(strlen(inputtext) < 5 || strlen(inputtext) > 20) 
            { 
                SCM(playerid, COLOR_GREY, "√ä√Æ√´√®√∑√•√±√≤√¢√Æ √±√®√¨√¢√Æ√´√Æ√¢ √≠√• √§√Æ√´√¶√≠√Æ √°√ª√≤√º √¨√•√≠√º√∏√• 5 √® √°√Æ√´√º√∏√• 20"); 
                return SPD(playerid, 3411, DIALOG_STYLE_INPUT,""CLITEBLUE"√è√•√∞√•√®√¨√•√≠√Æ√¢√†√≠√®√• √±√∑¬∏√≤√†",""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¢√Æ√• √≠√†√ß√¢√†√≠√®√• √§√´√ø\n√±√∑¬∏√≤√† √¢ √Ø√Æ√´√• √≠√®√¶√•:","√Ç√¢√•√±√≤√®","Siguiente");
            }
            strmid(_INFONAME[playerid][GetPVarInt(playerid, "_banklogin")], inputtext, 0, strlen(inputtext), 20); 
            PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
            format(string, 104, ""CWHITE"√ç√†√ß√¢√†√≠√®√• √°√†√≠√™√Æ√¢√±√™√Æ√£√Æ √±√∑¬∏√≤√† √≥√±√Ø√•√∏√≠√Æ √®√ß√¨√•√≠√•√≠√Æ\n√ç√Æ√¢√Æ√• √≠√†√ß√¢√†√≠√®√•: {FFCD00}%s", _INFONAME[playerid][GetPVarInt(playerid, "_banklogin")]);
            SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CPALEGREEN"√à√≠√¥√Æ√∞√¨√†√∂√®√ø", string, "Cerrar", "");
            mysql_format(mysql_Handle, string, 340, "UPDATE `bank_acc` SET `NAME` = '%s' WHERE `NUMBER` = %i", _INFONAME[playerid][GetPVarInt(playerid, "_banklogin")], _INFO[playerid][NUMBER][GetPVarInt(playerid, "_banklogin")]); 
            mysql_tquery(mysql_Handle, string);
        } 
        case 3412: 
        { 
            if(!response) return DialogBank(playerid); 
            if(!strlen(inputtext)) return SPD(playerid, 3412, DIALOG_STYLE_INPUT,""CLITEBLUE"√ë√¨√•√≠√† PIN-√™√ÆS√≠ √±√∑¬∏√≤√†",""CWHITE"√Ç√¢√•√§√®√≤√• √≤√•√™√≥√π√®√© PIN-√™√Æ√§ √¢ √Ø√Æ√´√• √≠√®√¶√•:","√Ç√¢√•√±√≤√®","Siguiente");
            if(strlen(inputtext) != 4) return SPD(playerid, 3412, DIALOG_STYLE_INPUT,""CLITEBLUE"√ë√¨√•√≠√† PIN-√™√ÆS√≠ √±√∑¬∏√≤√†",""CWHITE"√Ç√¢√•√§√®√≤√• √≤√•√™√≥√π√®√© PIN-√™√Æ√§ √¢ √Ø√Æ√´√• √≠√®√¶√•:","√Ç√¢√•√±√≤√®","Siguiente");
            if(_INFO[playerid][PASSWORD][GetPVarInt(playerid, "_banklogin")] == 0) 
            { 
                if(_INFO[playerid][PASSWORD][GetPVarInt(playerid, "_banklogin")] == 0 && strval(inputtext) == 0000) return SPD(playerid, 3413, DIALOG_STYLE_INPUT,""CLITEBLUE"√ë√¨√•√≠√† PIN-√™√ÆS√≠ √±√∑¬∏√≤√†",""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¢√ª√© PIN-√™√Æ√§ √¢ √Ø√Æ√´√• √≠√®√¶√•:","√Ç√¢√•√±√≤√®","Cerrar");
                else return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CERROR"√é√∏√®√°√™√†", ""CWHITE"√Ç√ª √§√Æ√Ø√≥√±√≤√®√´√® √Æ√∏√®√°√™√≥ √Ø√∞√® √¢√¢√Æ√§√• PIN-√™√ÆS√≠", "Cerrar", "");
            } 
            else 
            { 
                if(_INFO[playerid][PASSWORD][GetPVarInt(playerid, "_banklogin")] == strval(inputtext)) return SPD(playerid, 3413, DIALOG_STYLE_INPUT,""CLITEBLUE"√ë√¨√•√≠√† PIN-√™√ÆS√≠ √±√∑¬∏√≤√†",""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¢√ª√© PIN-√™√Æ√§ √¢ √Ø√Æ√´√• √≠√®√¶√•:","√Ç√¢√•√±√≤√®","Cerrar");
                else SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CERROR"√é√∏√®√°√™√†", ""CWHITE"√Ç√ª √§√Æ√Ø√≥√±√≤√®√´√® √Æ√∏√®√°√™√≥ √Ø√∞√® √¢√¢√Æ√§√• PIN-√™√ÆS√≠", "Cerrar", "");
            } 
        } 
        case 3413: 
        { 
            if(!response) return 1; 
			if(!strlen(inputtext)) return SPD(playerid, 3413, DIALOG_STYLE_INPUT,""CLITEBLUE"√ë√¨√•√≠√† PIN-√™√ÆS√≠ √±√∑¬∏√≤√†",""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¢√ª√© PIN-√™√Æ√§ √¢ √Ø√Æ√´√• √≠√®√¶√•:","√Ç√¢√•√±√≤√®","Cerrar");
			if(strlen(inputtext) != 4) return SCM(playerid, COLOR_GREY, "PIN-√™√Æ√§ √§√Æ√´√¶√•√≠ √±√Æ√±√≤√Æ√ø√≤√º √®√ß 4-¬∏√µ √∂√®√¥√∞"), SPD(playerid, 3413, DIALOG_STYLE_INPUT,""CLITEBLUE"√ë√¨√•√≠√† PIN-√™√ÆS√≠ √±√∑¬∏√≤√†",""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¢√ª√© PIN-√™√Æ√§ √¢ √Ø√Æ√´√• √≠√®√¶√•:","√Ç√¢√•√±√≤√®","Cerrar");
            string[0] = EOS;
            PlayerPlaySound(playerid, 17001, 0.0, 0.0, 0.0);
            _INFO[playerid][PASSWORD][GetPVarInt(playerid, "_banklogin")] = strval(inputtext); 
			mysql_format(mysql_Handle, string, 340, "UPDATE `bank_acc` SET `PASSWORD` = %d WHERE `NUMBER` = %i", _INFO[playerid][PASSWORD][GetPVarInt(playerid, "_banklogin")], _INFO[playerid][NUMBER][GetPVarInt(playerid, "_banklogin")]); 
			mysql_tquery(mysql_Handle, string);
            format(string, 240, ""CWHITE"PIN-√™√Æ√§ √Æ√≤ √±√∑√•√≤√† √≥√±√Ø√•√∏√≠√Æ √®√ß√¨√•√≠¬∏√≠\n√Ç√†√∏ PIN-√™√Æ√§: "CLITEBLUE"%d\n\n"CLIGHTGREY"√è√Æ√§√±√™√†√ß√™√†: √Ç√ª √¨√Æ√¶√•√≤√• √±√§√•√´√†√≤√º √±√™√∞√®√≠√∏√Æ√≤ (√™√´√†√¢√®√∏√† F8),\n√∑√≤√Æ√°√ª √≠√• √ß√†√°√ª√≤√º √≠√Æ√¢√ª√© PIN-√™√Æ√§", _INFO[playerid][PASSWORD][GetPVarInt(playerid, "_banklogin")]);
 			SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CMAIN"√à√≠√¥√Æ√∞√¨√†√∂√®√ø", string, "Cerrar", "");
        } 
        case 344: 
        { 
            if(!response) return show_menu_bank(playerid);
            if(!strlen(inputtext)) return SPD(playerid, 344, DIALOG_STYLE_PASSWORD, ""CLITEBLUE"√Ä√¢√≤√Æ√∞√®√ß√†√∂√®√ø", ""CWHITE"√Ç√¢√•√§√®√≤√• "CLITEBLUE"PIN-√™√Æ√§ "CWHITE"√±√∑¬∏√≤√†:", "√Ç√¢√•√±√≤√®", "Cerrar");
           	for(new i = strlen(inputtext) - 1; i != -1; i --) {
				switch(inputtext[i]) {
					case '0'..'9': continue;
					default: return SPD(playerid, 344, DIALOG_STYLE_PASSWORD, ""CLITEBLUE"√Ä√¢√≤√Æ√∞√®√ß√†√∂√®√ø", ""CWHITE"√Ç√¢√•√§√®√≤√• "CLITEBLUE"PIN-√™√Æ√§ "CWHITE"√±√∑¬∏√≤√†:", "√Ç√¢√•√±√≤√®", "Cerrar");
				}
			}
            if(strlen(inputtext) != 4) return SPD(playerid, 344, DIALOG_STYLE_PASSWORD, ""CLITEBLUE"√Ä√¢√≤√Æ√∞√®√ß√†√∂√®√ø",""CWHITE"√Ç√¢√•√§√®√≤√• "CLITEBLUE"PIN-√™√Æ√§ "CWHITE"√±√∑¬∏√≤√†:", "√Ç√¢√•√±√≤√®", "Cerrar");
            if(_INFO[playerid][PASSWORD][GetPVarInt(playerid, "_banklogin")] == 0) 
            { 
                if(_INFO[playerid][PASSWORD][GetPVarInt(playerid, "_banklogin")] == 0 && strval(inputtext) == 0000) return DialogBank(playerid); 
                else return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CERROR"√é√∏√®√°√™√†", ""CWHITE"√Ç√ª √§√Æ√Ø√≥√±√≤√®√´√® √Æ√∏√®√°√™√≥ √Ø√∞√® √¢√¢√Æ√§√• PIN-√™√ÆS√≠", "Cerrar", "");
            } 
            else 
            { 
                if(_INFO[playerid][PASSWORD][GetPVarInt(playerid, "_banklogin")] == strval(inputtext)) return DialogBank(playerid); 
                else SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CERROR"√é√∏√®√°√™√†", ""CWHITE"√Ç√ª √§√Æ√Ø√≥√±√≤√®√´√® √Æ√∏√®√°√™√≥ √Ø√∞√® √¢√¢√Æ√§√• PIN-√™√ÆS√≠", "Cerrar", "");
            }
        } 
        case 345: return DialogBank(playerid); 
        case 346: 
        { 
            if(!response) return DialogBank(playerid); 
            if(!strlen(inputtext)) return SPD(playerid, 346, DIALOG_STYLE_INPUT, ""CLITEBLUE"√ë√≠√ø√≤√º √§√•√≠√º√£√®",""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥ √™√Æ√≤√Æ√∞√≥√æ √µ√Æ√≤√®√≤√• √±√≠√ø√≤√º:","√ë√≠√ø√≤√º","Siguiente");
            if(strval(inputtext) <= 0) return SPD(playerid, 346, DIALOG_STYLE_INPUT, ""CLITEBLUE"√ë√≠√ø√≤√º √§√•√≠√º√£√®",""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥ √™√Æ√≤√Æ√∞√≥√æ √µ√Æ√≤√®√≤√• √±√≠√ø√≤√º:","√ë√≠√ø√≤√º","Siguiente");
            if(_INFO[playerid][BALANCE][GetPVarInt(playerid, "_banklogin")] < strval(inputtext)) return SCM(playerid, COLOR_GREY,"√ç√† √Ω√≤√Æ√¨ √±√∑¬∏√≤√• √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢"),SPD(playerid, 346, DIALOG_STYLE_INPUT, ""CLITEBLUE"√ë√≠√ø√≤√º √§√•√≠√º√£√®",""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥ √™√Æ√≤√Æ√∞√≥√æ √µ√Æ√≤√®√≤√• √±√≠√ø√≤√º:","√ë√≠√ø√≤√º","Siguiente");
            _INFO[playerid][BALANCE][GetPVarInt(playerid, "_banklogin")] -= strval(inputtext), Hook_GivePlayerMoney(playerid, strval(inputtext));
            SCMF(playerid, COLOR_ORANGE, "√ë √Ç√†√∏√•√£√Æ √±√∑¬∏√≤√† \"%s\" √°√ª√´√Æ √±√≠√ø√≤√Æ %i$",_INFONAME[playerid][GetPVarInt(playerid, "_banklogin")], strval(inputtext)); 
            mysql_format(mysql_Handle,string,1000, "UPDATE `bank_acc` SET `BALANCE` = %i WHERE `NUMBER` = %i", _INFO[playerid][BALANCE][GetPVarInt(playerid, "_banklogin")], _INFO[playerid][NUMBER][GetPVarInt(playerid, "_banklogin")]); 
           	mysql_tquery(mysql_Handle, string);
            add_log_bank(_INFO[playerid][NUMBER][GetPVarInt(playerid, "_banklogin")], strval(inputtext), "√ë√≠√ø√≤√®√• √≠√†√´√®√∑√≠√ª√¨√®", 0);
           	format(string, 24, "~g~+%d$", strval(inputtext));
           	GameTextForPlayer(playerid, string, 3000, 1);
            DialogBank(playerid); 
            return 1; 
        } 
		case 3447: {
			if(!response) {
				SPD(playerid, 8900, DIALOG_STYLE_LIST, "{cccc66}√Å√†√≠√™√Æ√¨√†√≤", "{ff9945}[1] "CWHITE"√è√Æ√´√Æ√¶√®√≤√º √±√∞√•√§√±√≤√¢√† √≠√† √°√†√≠√™. √±√∑¬∏√≤\n{ff9945}[2] "CWHITE"√ë√≠√ø√≤√º √±√∞√•√§√±√≤√¢√† √± √°√†√≠√™. √±√∑¬∏√≤√†\n{ff9945}[3] "CWHITE"√ì√ß√≠√†√≤√º √°√†√´√†√≠√± √°√†√≠√™. √±√∑¬∏√≤√†\n{ff9945}[4] "CWHITE"√è√Æ√Ø√Æ√´√≠√®√≤√º √±√∑¬∏√≤ √≤√•√´√•√¥√Æ√≠√†\n{ff9945}[5] "CWHITE"√Å√•√ß√≠√†√´√®√∑√≠√ª√© √Ø√•√∞√•√¢√Æ√§", "Seleccione", "√Ç√ª√©√≤√®");
				DeletePVar(playerid, "numb_bank");
				DeletePVar(playerid, "nme_bank");
				DeletePVar(playerid, "balance_bnk");
				return DeletePVar(playerid, "bnks_owner");
			}
			new numb_perr = GetPVarInt(playerid, "numb_bank"), bal_bnk = GetPVarInt(playerid, "balance_bnk"), name_prr[32], banks_owner[24],komissia = strval(inputtext)/100;
			GetPVarString(playerid, "bnks_owner", banks_owner, sizeof(banks_owner));
			GetPVarString(playerid, "nme_bank", name_prr, sizeof(name_prr));
			DeletePVar(playerid, "numb_bank"); DeletePVar(playerid, "nme_bank"); DeletePVar(playerid, "balance_bnk"); DeletePVar(playerid, "bnks_owner");
			if(!strlen(inputtext)) {
				mysql_format(mysql_Handle, string, 144, "SELECT * FROM `bank_acc` WHERE `NUMBER` = %i", GetPVarInt(playerid, "number_bnkk_cs")); 
          	 	mysql_tquery(mysql_Handle, string, "check_banks_cs", "dd", playerid, GetPVarInt(playerid, "number_bnkk_cs"));
				return SCM(playerid, COLOR_GREY, "√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√•√∞√•√¢√•√±√≤√®");
			}
			if(strval(inputtext) < 100) {
				mysql_format(mysql_Handle, string, 144, "SELECT * FROM `bank_acc` WHERE `NUMBER` = %i", GetPVarInt(playerid, "number_bnkk_cs")); 
          	 	mysql_tquery(mysql_Handle, string, "check_banks_cs", "dd", playerid, GetPVarInt(playerid, "number_bnkk_cs"));
				return SCM(playerid, COLOR_GREY, "√å√®√≠√®√¨√†√´√º√≠√†√ø √±√≥√¨√¨√† √Ø√•√∞√•√¢√ÆS√≠: "CORANGE"100$");
			}
			if(pData[playerid][pBank] < strval(inputtext)) {
				mysql_format(mysql_Handle, string, 144, "SELECT * FROM `bank_acc` WHERE `NUMBER` = %i", GetPVarInt(playerid, "number_bnkk_cs")); 
          	 	mysql_tquery(mysql_Handle, string, "check_banks_cs", "dd", playerid, GetPVarInt(playerid, "number_bnkk_cs"));
				return SCMF(playerid, COLOR_LIGHTGREY, "√ç√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Ø√•√∞√•√¢√ÆS√≠. √í√•√™√≥√π√®√© √°√†√´√†√≠√± √Ç√†√∏√•√£√Æ √±√∑¬∏√≤√†: "CCYAN"%d$", pData[playerid][pBank]);
			}
			new svitk = strval(inputtext)-komissia;
			if(pData[playerid][pBank] < strval(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "√ç√† √Ç√†√∏√•√¨ √±√∑¬∏√≤√• No √±√≤√Æ√´√º√™√Æ √±√∞√•√§√±√≤√¢");
			mysql_format(mysql_Handle, string, 144, "UPDATE `bank_acc` SET `BALANCE` = %i WHERE `NUMBER` = %i", bal_bnk+svitk, numb_perr); 
			mysql_tquery(mysql_Handle, string);
			pData[playerid][pBank] -= strval(inputtext);
			UpdatePlayerData(playerid, "pBank", pData[playerid][pBank]);
			new t_id = GetPlayerID(banks_owner);
			if(IsPlayerConnected(t_id)) 
			{ 
				SCMF(t_id, COLOR_MAIN, "√Ç√†√¨ √≠√† √±√∑¬∏√≤ {009900}¬π%d "CMAIN"√°√ª√´ √±√§√•√´√†√≠ √Ø√•√∞√•√¢√Æ√§ √± √°√†√≠√™√Æ√¨√†√≤√† √¢ √∞√†√ß√¨√•√∞√• {009900}%i$", numb_perr, svitk); 
				mysql_format(mysql_Handle, string, 96, "SELECT * FROM `bank_acc` WHERE `OWNER` = '%s'", banks_owner); 
    			mysql_tquery(mysql_Handle, string, "RefreshBanks", "i", t_id);
			}
			DeletePVar(playerid, "number_bnkk_cs");
			PlayerPlaySound(playerid, 17001, 0.0, 0.0, 0.0);
            add_log_bank(numb_perr, svitk, "√è√•√∞√•√¢√Æ√§ √±√∞√•√§√±√≤√¢ √± √°√†√≠√™√Æ√¨√†√≤√†", 1);
			format(string, 250, ""CWHITE"√è√•√∞√•√¢√Æ√§ √≠√† √±√∑¬∏√≤ "CMAIN"¬π%d "CWHITE"√≥√±√Ø√•√∏√≠√Æ √¢√ª√Ø√Æ√´√≠√•√≠\n\n√ë√≥√¨√¨√† √Ø√•√∞√•√¢√ÆS√≠ √°√•√ß √¢√ª√∑√•√≤√† √™√Æ√¨√®√±√±√®√®: "CCYAN"%d$\n"CWHITE"√ë√≥√¨√¨√† √Ø√•√∞√•√¢√ÆS√≠ √± √¢√ª√∑√•√≤√Æ√¨ √™√Æ√¨√®√±√±√®√®: {40bf80}%d$\n"CWHITE"√é√±√≤√†√≤√Æ√™ √≠√† √±√∑√•√≤√≥: {00cc00}%d$", numb_perr, strval(inputtext),svitk, pData[playerid][pBank]);
			return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CLITEBLUE"√à√≠√¥√Æ√∞√¨√†√∂√®√ø", string, "Cerrar", "");
		}
		case 3446: {
			if(!response) return DialogBank(playerid), DeletePVar(playerid, "numb_bank"), DeletePVar(playerid, "nme_bank"), DeletePVar(playerid, "balance_bnk"), DeletePVar(playerid, "bnks_owner");
			new numb_perr = GetPVarInt(playerid, "numb_bank"), bal_bnk = GetPVarInt(playerid, "balance_bnk"), name_prr[32], banks_owner[24];
			GetPVarString(playerid, "bnks_owner", banks_owner, sizeof(banks_owner));
			GetPVarString(playerid, "nme_bank", name_prr, sizeof(name_prr));
			DeletePVar(playerid, "numb_bank"); DeletePVar(playerid, "nme_bank"); DeletePVar(playerid, "balance_bnk"); DeletePVar(playerid, "bnks_owner");
			if(!strlen(inputtext)) {
				mysql_format(mysql_Handle, string, 144, "SELECT * FROM `bank_acc` WHERE `NUMBER` = %i", GetPVarInt(playerid, "number_bnkk")); 
           		mysql_tquery(mysql_Handle, string, "check_banks", "dd", playerid, GetPVarInt(playerid, "number_bnkk"));
				return SCM(playerid, COLOR_GREY, "√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√•√∞√•√¢√•√±√≤√®");
			}
			if(strval(inputtext) < 100) {
				mysql_format(mysql_Handle, string, 144, "SELECT * FROM `bank_acc` WHERE `NUMBER` = %i", GetPVarInt(playerid, "number_bnkk")); 
           		mysql_tquery(mysql_Handle, string, "check_banks", "dd", playerid, GetPVarInt(playerid, "number_bnkk"));
				return SCM(playerid, COLOR_GREY, "√å√®√≠√®√¨√†√´√º√≠√†√ø √±√≥√¨√¨√† √Ø√•√∞√•√¢√ÆS√≠: "CORANGE"100$");
			}
			if(_INFO[playerid][BALANCE][GetPVarInt(playerid, "_banklogin")] < strval(inputtext)) {
				mysql_format(mysql_Handle, string, 144, "SELECT * FROM `bank_acc` WHERE `NUMBER` = %i", GetPVarInt(playerid, "number_bnkk")); 
				mysql_tquery(mysql_Handle, string, "check_banks", "dd", playerid, GetPVarInt(playerid, "number_bnkk"));
				return SCMF(playerid, COLOR_LIGHTGREY, "√ç√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Ø√•√∞√•√¢√ÆS√≠. √í√•√™√≥√π√®√© √°√†√´√†√≠√± √±√∑¬∏√≤√†: "CCYAN"%d$", _INFO[playerid][BALANCE][GetPVarInt(playerid, "_banklogin")]);
			}
			mysql_format(mysql_Handle, string, 144, "UPDATE `bank_acc` SET `BALANCE` = %i WHERE `NUMBER` = %i", bal_bnk+strval(inputtext), numb_perr); 
			mysql_tquery(mysql_Handle, string);
			mysql_format(mysql_Handle, string, 144, "UPDATE `bank_acc` SET `BALANCE` = %i WHERE `NUMBER` = %i", _INFO[playerid][BALANCE][GetPVarInt(playerid, "_banklogin")]-strval(inputtext), _INFO[playerid][NUMBER][GetPVarInt(playerid, "_banklogin")]); 
			mysql_tquery(mysql_Handle, string);
			new t_id = GetPlayerID(banks_owner);
			if(IsPlayerConnected(t_id)) { 
				SCMF(t_id, COLOR_MAIN, "√Ç√†√¨ √≠√† √±√∑¬∏√≤ {009900}¬π%d "CMAIN"√°√ª√´ √±√§√•√´√†√≠ √Ø√•√∞√•√¢√Æ√§ √¢ √∞√†√ß√¨√•√∞√• {009900}%i$"CMAIN". √é√≤√Ø√∞√†√¢√®√≤√•√´√º: {FFCD00}%s", numb_perr, strval(inputtext), GetName(playerid)); 
				mysql_format(mysql_Handle, string, 96, "SELECT * FROM `bank_acc` WHERE `OWNER` = '%s'", banks_owner); 
    			mysql_tquery(mysql_Handle, string, "RefreshBanks", "i", t_id);
			}
			DeletePVar(playerid, "number_bnkk");
			PlayerPlaySound(playerid, 17001, 0.0, 0.0, 0.0);
			format(string, 160, ""CWHITE"√è√•√∞√•√¢√Æ√§ √≠√† √±√∑¬∏√≤ "CMAIN"¬π%d "CWHITE"√≥√±√Ø√•√∏√≠√Æ √¢√ª√Ø√Æ√´√≠√•√≠\n\n√ë√≥√¨√¨√† √Ø√•√∞√•√¢√ÆS√≠: "CCYAN"%d$"CWHITE"\n√é√±√≤√†√≤√Æ√™ √≠√† √±√∑√•√≤√≥: {00cc00}%d$", numb_perr, strval(inputtext), _INFO[playerid][BALANCE][GetPVarInt(playerid, "_banklogin")]-strval(inputtext));
			SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CPALEGREEN"√à√≠√¥√Æ√∞√¨√†√∂√®√ø", string, "Cerrar", "");
            new str_logb[55];
            format(str_logb, 55, "√è√•√∞√•√¢√Æ√§ √±√∞√•√§√±√≤√¢ √±√Æ √±√∑¬∏√≤√† ¬π%d", _INFO[playerid][NUMBER][GetPVarInt(playerid, "_banklogin")]);
            add_log_bank(numb_perr, strval(inputtext), str_logb, 1);
            format(str_logb, 55, "√è√•√∞√•√¢√Æ√§ √±√∞√•√§√±√≤√¢ √≠√† √±√∑¬∏√≤ ¬π%d", _INFO[playerid][NUMBER][GetPVarInt(playerid, "_banklogin")]);
            add_log_bank(_INFO[playerid][NUMBER][GetPVarInt(playerid, "_banklogin")], strval(inputtext), str_logb, 0);
			mysql_format(mysql_Handle, string, 96, "SELECT * FROM `bank_acc` WHERE `OWNER` = '%s'", GetName(playerid)); 
			return mysql_tquery(mysql_Handle, string, "RefreshBanks", "i", playerid);
		}
        case 347: 
        { 
            if(!response) return DialogBank(playerid); 
            if(!strlen(inputtext)) return SPD(playerid, 347, DIALOG_STYLE_INPUT, ""CLITEBLUE"√è√Æ√´√Æ√¶√®√≤√º √§√•√≠√º√£√®",""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥ √™√Æ√≤√Æ√∞√≥√æ √µ√Æ√≤√®√≤√• √Ø√Æ√´√Æ√¶√®√≤√º:","√è√Æ√´√Æ√¶√®√≤√º","Siguiente");
            if(strval(inputtext) <= 0) return SPD(playerid, 347, DIALOG_STYLE_INPUT, ""CLITEBLUE"√è√Æ√´√Æ√¶√®√≤√º √§√•√≠√º√£√®",""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥ √™√Æ√≤√Æ√∞√≥√æ √µ√Æ√≤√®√≤√• √Ø√Æ√´√Æ√¶√®√≤√º:","√è√Æ√´√Æ√¶√®√≤√º","Siguiente");
            if(pData[playerid][pCash] < strval(inputtext)) return SCM(playerid, COLOR_GREY,"√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √≠√†√´√®√∑√≠√ª√µ √±√∞√•√§√±√≤√¢"),SPD(playerid, 347, DIALOG_STYLE_INPUT, ""CLITEBLUE"√è√Æ√´√Æ√¶√®√≤√º √§√•√≠√º√£√®",""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥ √™√Æ√≤√Æ√∞√≥√æ √µ√Æ√≤√®√≤√• √Ø√Æ√´√Æ√¶√®√≤√º:","√è√Æ√´√Æ√¶√®√≤√º","Siguiente");
            _INFO[playerid][BALANCE][GetPVarInt(playerid, "_banklogin")] += strval(inputtext), Hook_GivePlayerMoney(playerid, -strval(inputtext));
            SCMF(playerid, COLOR_MAIN, "√Ç√†√∏ √±√∑¬∏√≤ \"%s\" √°√ª√´ √Ø√Æ√Ø√Æ√´√≠√•√≠ √≠√† %i$",_INFONAME[playerid][GetPVarInt(playerid, "_banklogin")], strval(inputtext)); 
            add_log_bank(_INFO[playerid][NUMBER][GetPVarInt(playerid, "_banklogin")], strval(inputtext), "√è√Æ√Ø√Æ√´√≠√•√≠√®√• √∑√•√∞√•√ß √¨√•√≠√æ √°√†√≠√™√†", 1);
            format(string, 24, "~r~-%d$", strval(inputtext));
            GameTextForPlayer(playerid, string, 3000, 1);
            mysql_format(mysql_Handle,string,104, "UPDATE `bank_acc` SET `BALANCE` = %i WHERE `NUMBER` = %i", _INFO[playerid][BALANCE][GetPVarInt(playerid, "_banklogin")], _INFO[playerid][NUMBER][GetPVarInt(playerid, "_banklogin")]); 
           	mysql_tquery(mysql_Handle, string);
            return DialogBank(playerid);
        } 
        case 348: 
        { 
            if(!response) return DialogBank(playerid); 
            if(!strlen(inputtext)) return SPD(playerid, 348, DIALOG_STYLE_INPUT,""CLITEBLUE"√è√•√∞√•√¢√Æ√§ √±√∞√•√§√±√≤√¢",""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¨√•√∞ √±√∑¬∏√≤√†, √≠√† √™√Æ√≤√Æ√∞√ª√©\n√µ√Æ√≤√®√≤√• √Æ√±√≥√π√•√±√≤√¢√®√≤√º √Ø√•√∞√•√¢√Æ√§ √±√∞√•√§√±√≤√¢:", "S√≠√´√•√•","Siguiente");
            if(strlen(inputtext) < 4 || strlen(inputtext) > 5) return SPD(playerid, 348, DIALOG_STYLE_INPUT,""CLITEBLUE"√è√•√∞√•√¢√Æ√§ √±√∞√•√§√±√≤√¢",""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¨√•√∞ √±√∑¬∏√≤√†, √≠√† √™√Æ√≤√Æ√∞√ª√©\n√µ√Æ√≤√®√≤√• √Æ√±√≥√π√•√±√≤√¢√®√≤√º √Ø√•√∞√•√¢√Æ√§ √±√∞√•√§√±√≤√¢:", "S√≠√´√•√•","Siguiente");
            mysql_format(mysql_Handle, string, 144, "SELECT * FROM `bank_acc` WHERE `NUMBER` = %i", strval(inputtext)); 
           	mysql_tquery(mysql_Handle, string, "check_banks", "dd", playerid, strval(inputtext));
			return SetPVarInt(playerid, "number_bnkk", strval(inputtext));
        } 
        case 3499: 
        { 
            if(!response) return ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch", 4.0,0,0,0,0,0, 1), PlayerPlaySound(playerid, 4203, 0.0, 0.0, 0.0), SPD(playerid, 8900, DIALOG_STYLE_LIST, "{cccc66}√Å√†√≠√™√Æ√¨√†√≤", "{ff9945}[1] "CWHITE"√è√Æ√´√Æ√¶√®√≤√º √±√∞√•√§√±√≤√¢√† √≠√† √°√†√≠√™. √±√∑¬∏√≤\n{ff9945}[2] "CWHITE"√ë√≠√ø√≤√º √±√∞√•√§√±√≤√¢√† √± √°√†√≠√™. √±√∑¬∏√≤√†\n{ff9945}[3] "CWHITE"√ì√ß√≠√†√≤√º √°√†√´√†√≠√± √°√†√≠√™. √±√∑¬∏√≤√†\n{ff9945}[4] "CWHITE"√è√Æ√Ø√Æ√´√≠√®√≤√º √±√∑¬∏√≤ √≤√•√´√•√¥√Æ√≠√†\n{ff9945}[5] "CWHITE"√Å√•√ß√≠√†√´√®√∑√≠√ª√© √Ø√•√∞√•√¢√Æ√§", "Seleccione", "√Ç√ª√©√≤√®");
            if(!strlen(inputtext)) return SPD(playerid, 3499, DIALOG_STYLE_INPUT,"{40bf80}√Å√•√ß√≠√†√´√®√∑√≠√ª√© √Ø√•√∞√•√¢√Æ√§",""CWHITE"√É√Æ√±√≥S√≠√∞√±√≤√¢√•√≠√≠√†√ø √™√Æ√¨√®√±√±√®√ø √Ø√•√∞√•√¢√ÆS√≠: {99ff66}1%\n\n"CWHITE"√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø, √¢√¢√•√§√®√≤√• √≠√Æ√¨√•√∞ √°√†√≠√™√Æ√¢√±√™√Æ√£√Æ √±√∑¬∏√≤√†, √≠√† √™√Æ√≤√Æ√∞√ª√©\n√µ√Æ√≤√®√≤√• √Æ√±√≥√π√•√±√≤√¢√®√≤√º √Ø√•√∞√•√¢√Æ√§ √±√∞√•√§√±√≤√¢ √¢ √Ø√Æ√´√• √≠√®√¶√•:", "S√≠√´√•√•","Siguiente");
            if(strlen(inputtext) < 4 || strlen(inputtext) > 5) return SPD(playerid, 3499, DIALOG_STYLE_INPUT,"{40bf80}√Å√•√ß√≠√†√´√®√∑√≠√ª√© √Ø√•√∞√•√¢√Æ√§",""CWHITE"√É√Æ√±√≥S√≠√∞√±√≤√¢√•√≠√≠√†√ø √™√Æ√¨√®√±√±√®√ø √Ø√•√∞√•√¢√ÆS√≠: {99ff66}1%\n\n"CWHITE"√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø, √¢√¢√•√§√®√≤√• √≠√Æ√¨√•√∞ √°√†√≠√™√Æ√¢√±√™√Æ√£√Æ √±√∑¬∏√≤√†, √≠√† √™√Æ√≤√Æ√∞√ª√©\n√µ√Æ√≤√®√≤√• √Æ√±√≥√π√•√±√≤√¢√®√≤√º √Ø√•√∞√•√¢√Æ√§ √±√∞√•√§√±√≤√¢ √¢ √Ø√Æ√´√• √≠√®√¶√•:", "S√≠√´√•√•","Siguiente");
            mysql_format(mysql_Handle, string, 144, "SELECT * FROM `bank_acc` WHERE `NUMBER` = %i", strval(inputtext)); 
           	mysql_tquery(mysql_Handle, string, "check_banks_cs", "dd", playerid, strval(inputtext));
            return SetPVarInt(playerid, "number_bnkk_cs", strval(inputtext));
        } 
        case 971:
        {
        	if(!response) return callcmd::elections(playerid);

        	if(strlen(inputtext) < 3 || strlen(inputtext) > 40)
			{
				return SPD(playerid, 971, DIALOG_STYLE_INPUT, "{FFCD00}√ç√†√ß√¢√†√≠√®√• √£√Æ√´√Æ√±√Æ√¢√†√≠√®√ø", ""CWHITE"\
						√Ç√¢√•√§√®√≤√• √≠√†√ß√¢√†√≠√®√• √§√´√ø √£√Æ√´√Æ√±√Æ√¢√†√≠√®√ø. √Ö√£√Æ √≥√¢√®√§√ø√≤ √¢√±√• √®√£√∞√Æ√™√® √Ø√∞√® √¢√µ√Æ√§√• √¢ √®√£√∞√≥.\n\
						\n\
						"CCYAN"√è√∞√®√¨√•√∞√ª:\n\
						\n\
						{9999FF}√Ç√ª√°√Æ√∞√ª √è√∞√•√ß√®√§√•√≠√≤√†\n\
						√É√Æ√´√Æ√±√Æ√¢√†√≠√®√• √≠√† √´√≥√∑√∏√•√£√Æ √†√§√¨√®√≠√†\n\
						√Ç√ª√°√Æ√∞√ª √∑√•√´√Æ√¢√•√™√† √£√ÆS√≠\n\
						√ã√≥√∑√∏√®√© √°√®√ß√≠√•√±√¨√•√≠ 2020", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
			}
        	
        	strmid(electionname, inputtext, 0, strlen(inputtext), 255); 

        	SCMF(playerid, COLOR_BLUE, "√ç√†√ß√¢√†√≠√®√• √£√Æ√´√Æ√±√Æ√¢√†√≠√®√ø √®√ß√¨√•√≠√•√≠√Æ √≠√† "CORANGE"\"%s\"",inputtext);
        }
		case 177: 
		{ 
			if(!response) return 1; 
			switch(listitem) 
			{ 
				case 0: 
				{
					SPD(playerid, 971, DIALOG_STYLE_INPUT, "{FFCD00}√ç√†√ß√¢√†√≠√®√• √£√Æ√´√Æ√±√Æ√¢√†√≠√®√ø", ""CWHITE"\
						√Ç√¢√•√§√®√≤√• √≠√†√ß√¢√†√≠√®√• √§√´√ø √£√Æ√´√Æ√±√Æ√¢√†√≠√®√ø. √Ö√£√Æ √≥√¢√®√§√ø√≤ √¢√±√• √®√£√∞√Æ√™√® √Ø√∞√® √¢√µ√Æ√§√• √¢ √®√£√∞√≥.\n\
						\n\
						"CCYAN"√è√∞√®√¨√•√∞√ª:\n\
						\n\
						{9999FF}√Ç√ª√°√Æ√∞√ª √è√∞√•√ß√®√§√•√≠√≤√†\n\
						√É√Æ√´√Æ√±√Æ√¢√†√≠√®√• √≠√† √´√≥√∑√∏√•√£√Æ √†√§√¨√®√≠√†\n\
						√Ç√ª√°√Æ√∞√ª √∑√•√´√Æ√¢√•√™√† √£√ÆS√≠\n\
						√ã√≥√∑√∏√®√© √°√®√ß√≠√•√±√¨√•√≠ 2020", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
				}
				case 1: { 
					if(startvibor)
					{
						foreach(new i:Player) 
						{
							if(pData[i][pVotedVibor] != 1) continue;
							pData[i][pVotedVibor] = 0;
						}
						mysql_tquery(mysql_Handle, "UPDATE `accounts` SET `pVotedVibor` = '0'", "", "");

						format(string, 144, "[A] %s[%d] √Æ√±√≤√†√≠√Æ√¢√®√´ √£√Æ√´√Æ√±√Æ√¢√†√≠√®√• "CORANGE"\"%s\"", pData[playerid][pName], playerid,electionname);
					}
					else 
					{
						if(!strlen(electionname)) return SPD(playerid, 0, 0, "{FF6600}√é√∏√®√°√™√†", ""CWHITE"√ç√•√Æ√°√µ√Æ√§√®√¨√Æ √≥√™√†√ß√†√≤√º √≠√†√ß√¢√†√≠√®√• √£√Æ√´√Æ√±√Æ√¢√†√≠√®√ø", "Cerrar", "");

						format(string, 144, "[A] %s[%d] √ß√†√Ø√≥√±√≤√®√´ √£√Æ√´√Æ√±√Æ√¢√†√≠√®√• "CORANGE"\"%s\"", pData[playerid][pName], playerid,electionname);
					}
					startvibor = !startvibor;
					
					if(GetPVarInt(playerid, "AdminMessages")) SCM(playerid, 0x33CC99FF, string);
					AdminMessage(0x33CC99FF, string);
					
				}
				case 2: {
					if(startvibor) return SPD(playerid, 0,0, "{FF6600}√é√∏√®√°√™√†", ""CWHITE"√Ç√ª√°√Æ√∞√ª √ß√†√Ø√≥√π√•√≠√ª. √ê√•S√≠√™√≤√®√∞√Æ√¢√†√≠√®√• √±√Ø√®√±√™√† √™√†√≠√§√®S√≠√≤√Æ√¢ √ß√†√Ø√∞√•√π√•√≠√Æ", "Cerrar","");
					electionsMembers(playerid);
				}
				case 3:
				{
					string = "√É√Æ√´√Æ√±√Æ√¢\t\t√ä√†√≠√§√®S√≠√≤\n\n";

					if(strcmp(kandidat1, "No √™√†√≠√§√®S√≠√≤√†"))
						format(string, 360, "%s"CCYAN"%i\t\t\t"CWHITE"%s\n",string,kandidats_votes[0],kandidat1);
					if(strcmp(kandidat2, "No √™√†√≠√§√®S√≠√≤√†"))
						format(string, 360, "%s"CCYAN"%i\t\t\t"CWHITE"%s\n",string,kandidats_votes[1],kandidat2);
					if(strcmp(kandidat3, "No √™√†√≠√§√®S√≠√≤√†"))
						format(string, 360, "%s"CCYAN"%i\t\t\t"CWHITE"%s\n",string,kandidats_votes[2],kandidat3);
					if(strcmp(kandidat4, "No √™√†√≠√§√®S√≠√≤√†"))
						format(string, 360, "%s"CCYAN"%i\t\t\t"CWHITE"%s\n",string,kandidats_votes[3],kandidat4);
					if(strcmp(kandidat5, "No √™√†√≠√§√®S√≠√≤√†"))
						format(string, 360, "%s"CCYAN"%i\t\t\t"CWHITE"%s\n",string,kandidats_votes[4],kandidat5);

					SPD(playerid, 747, 0, "{FFCD00}√ê√•√ß√≥√´√º√≤√†√≤√ª √£√Æ√´√Æ√±√Æ√¢√†√≠√®√ø", string, "Siguiente", "Cerrar");
				}
				case 4:
				{
					for(new i = 0; i < 5; i++) kandidats_votes[i] = 0;
					SCM(playerid, COLOR_BLUE, "√ê√•√ß√≥√´√º√≤√†√≤√ª √£√Æ√´√Æ√±√Æ√¢√†√≠√®√ø √Æ√°√≠√≥√´√•√≠√ª");
				}
			} 
			return 1; 
		} 
		case 747:
		{
			if(!response) return 1;
			callcmd::elections(playerid);
		} 
		case 179: 
		{ 
			if(!response) return callcmd::elections(playerid);
			switch(listitem) 
			{ 
				case 0: SPD(playerid, 190, DIALOG_STYLE_INPUT, "{FFCD00}√à√ß√¨√•√≠√•√≠√®√• √™√†√≠√§√®S√≠√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√®√™ √™√†√≠√§√®S√≠√≤√† √®√´√® √Æ√±√≤√†√¢√º√≤√• √±√≤√∞√Æ√™√≥ √Ø√≥√±√≤√Æ√© √§√´√ø √≥S√≠√´√•√≠√®√ø:", "S√≠√´√•√•", "Cerrar");
				case 1: SPD(playerid, 191, DIALOG_STYLE_INPUT, "{FFCD00}√à√ß√¨√•√≠√•√≠√®√• √™√†√≠√§√®S√≠√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√®√™ √™√†√≠√§√®S√≠√≤√† √®√´√® √Æ√±√≤√†√¢√º√≤√• √±√≤√∞√Æ√™√≥ √Ø√≥√±√≤√Æ√© √§√´√ø √≥S√≠√´√•√≠√®√ø:", "S√≠√´√•√•", "Cerrar");
				case 2: SPD(playerid, 192, DIALOG_STYLE_INPUT, "{FFCD00}√à√ß√¨√•√≠√•√≠√®√• √™√†√≠√§√®S√≠√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√®√™ √™√†√≠√§√®S√≠√≤√† √®√´√® √Æ√±√≤√†√¢√º√≤√• √±√≤√∞√Æ√™√≥ √Ø√≥√±√≤√Æ√© √§√´√ø √≥S√≠√´√•√≠√®√ø:", "S√≠√´√•√•", "Cerrar");
				case 3: SPD(playerid, 276, DIALOG_STYLE_INPUT, "{FFCD00}√à√ß√¨√•√≠√•√≠√®√• √™√†√≠√§√®S√≠√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√®√™ √™√†√≠√§√®S√≠√≤√† √®√´√® √Æ√±√≤√†√¢√º√≤√• √±√≤√∞√Æ√™√≥ √Ø√≥√±√≤√Æ√© √§√´√ø √≥S√≠√´√•√≠√®√ø:", "S√≠√´√•√•", "Cerrar");
				case 4: SPD(playerid, 277, DIALOG_STYLE_INPUT, "{FFCD00}√à√ß√¨√•√≠√•√≠√®√• √™√†√≠√§√®S√≠√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√®√™ √™√†√≠√§√®S√≠√≤√† √®√´√® √Æ√±√≤√†√¢√º√≤√• √±√≤√∞√Æ√™√≥ √Ø√≥√±√≤√Æ√© √§√´√ø √≥S√≠√´√•√≠√®√ø:", "S√≠√´√•√•", "Cerrar");
			} 
			return 1; 
		} 
		case 190: 
		{ 
			if(!response) return 1; 
			new ucs = strlen(inputtext); 
			if(ucs <= 0) 
			{ 
				format(kandidat1, 40, "No √™√†√≠√§√®S√≠√≤√†");
				SCM(playerid, COLOR_LIGHTRED, "√ä√†√≠√§√®S√≠√≤ √≥S√≠√´¬∏√≠ √®√ß √±√Ø√®√±√™√† √£√Æ√´√Æ√±√Æ√¢√†√≠√®√ø");
				kandidats_votes[0] = 0;
				return 1;
			}
			strmid(kandidat1, inputtext, 0, strlen(inputtext), 255); 
			SCMF(playerid, COLOR_BLUE, "√è√•√∞√¢√ª√¨ √™√†√≠√§√®S√≠√≤√Æ√¨ √≥√±√Ø√•√∏√≠√Æ √≥√±√≤√†√≠√Æ√¢√´√•√≠ %s", kandidat1);
			kandidats_votes[0] = 0; 
			electionsMembers(playerid);
			return 1;
		} 
		case 191: 
		{ 
			if(!response) return 1; 
			new ucs = strlen(inputtext); 
			if(ucs <= 0) 
			{ 
				format(kandidat2, 40, "No √™√†√≠√§√®S√≠√≤√†");
				SCM(playerid, COLOR_LIGHTRED, "√ä√†√≠√§√®S√≠√≤ √≥S√≠√´¬∏√≠ √®√ß √±√Ø√®√±√™√† √£√Æ√´√Æ√±√Æ√¢√†√≠√®√ø");
				kandidats_votes[1] = 0;
				return 1;
			} 
			strmid(kandidat2, inputtext, 0, strlen(inputtext), 255); 
			SCMF(playerid, COLOR_BLUE, "√Ç√≤√Æ√∞√ª√¨ √™√†√≠√§√®S√≠√≤√Æ√¨ √≥√±√Ø√•√∏√≠√Æ √≥√±√≤√†√≠√Æ√¢√´√•√≠ %s", kandidat2);
			kandidats_votes[1] = 0;
			electionsMembers(playerid);
			return 1;
		} 
		case 192: 
		{ 
			if(!response) return 1; 
			new ucs = strlen(inputtext); 
			if(ucs <= 0) 
			{ 
				format(kandidat3, 40, "No √™√†√≠√§√®S√≠√≤√†");
				SCM(playerid, COLOR_LIGHTRED, "√ä√†√≠√§√®S√≠√≤ √≥S√≠√´¬∏√≠ √®√ß √±√Ø√®√±√™√† √£√Æ√´√Æ√±√Æ√¢√†√≠√®√ø");
				kandidats_votes[2] = 0;
				return 1;
			} 
			strmid(kandidat3, inputtext, 0, strlen(inputtext), 255);
			SCMF(playerid, COLOR_BLUE, "√í√∞√•√≤√º√®√¨ √™√†√≠√§√®S√≠√≤√Æ√¨ √≥√±√Ø√•√∏√≠√Æ √≥√±√≤√†√≠√Æ√¢√´√•√≠ %s", kandidat3);
			kandidats_votes[2] = 0;
			electionsMembers(playerid);
			return 1;
		}
		case 276: 
		{ 
			if(!response) return 1; 
			new ucs = strlen(inputtext); 
			if(ucs <= 0) 
			{ 
				format(kandidat4, 40, "No √™√†√≠√§√®S√≠√≤√†");
				SCM(playerid, COLOR_LIGHTRED, "√ä√†√≠√§√®S√≠√≤ √≥S√≠√´¬∏√≠ √®√ß √±√Ø√®√±√™√† √£√Æ√´√Æ√±√Æ√¢√†√≠√®√ø");
				kandidats_votes[3] = 0;
				return 1;
			} 
			strmid(kandidat4, inputtext, 0, strlen(inputtext), 255);
			SCMF(playerid, COLOR_BLUE, "√ó√•√≤√¢√•√∞√≤√ª√¨ √™√†√≠√§√®S√≠√≤√Æ√¨ √≥√±√Ø√•√∏√≠√Æ √≥√±√≤√†√≠√Æ√¢√´√•√≠ %s", kandidat4);
			kandidats_votes[3] = 0;
			electionsMembers(playerid);
			return 1;
		}
		case 277: 
		{ 
			if(!response) return 1; 
			new ucs = strlen(inputtext); 
			if(ucs <= 0) 
			{ 
				format(kandidat5, 40, "No √™√†√≠√§√®S√≠√≤√†");
				SCM(playerid, COLOR_LIGHTRED, "√ä√†√≠√§√®S√≠√≤ √≥S√≠√´¬∏√≠ √®√ß √±√Ø√®√±√™√† √£√Æ√´√Æ√±√Æ√¢√†√≠√®√ø");
				kandidats_votes[4] = 0;
				return 1;
			} 
			strmid(kandidat5, inputtext, 0, strlen(inputtext), 255);
			SCMF(playerid, COLOR_BLUE, "√è√ø√≤√ª√¨ √™√†√≠√§√®S√≠√≤√Æ√¨ √≥√±√Ø√•√∏√≠√Æ √≥√±√≤√†√≠√Æ√¢√´√•√≠ %s", kandidat5);
			kandidats_votes[4] = 0;
			electionsMembers(playerid);
			return 1;
		}
		case 178: 
		{ 
			if(!response) return 1; 
			switch(listitem) 
			{ 
				case 0: {
					if(!strcmp(kandidat1, "No √™√†√≠√§√®S√≠√≤√†")) return SCM(playerid, COLOR_ERROR, "√ä√†√≠√§√®S√≠√≤ √Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤. √É√Æ√´√Æ√±√Æ√¢√†√≠√®√• √≠√•√¢√Æ√ß√¨√Æ√¶√≠√Æ");
					kandidats_votes[0] ++;
					SCMF(playerid, COLOR_MAIN, "√Ç√ª √≥√±√Ø√•√∏√≠√Æ √Ø√∞√Æ√£√Æ√´√Æ√±√Æ√¢√†√´√® √ß√† {FFCD00}%s"CMAIN", √¢√†√∏ √£√Æ√´√Æ√± √≥√∑√≤√•√≠", kandidat1);
					SCM(playerid, -1, "√ë√Ø√†√±√®√°√Æ, √∑√≤√Æ √Ø√∞√®√∏√´√®"); 
					pData[playerid][pVotedVibor] = 1;
					UpdatePlayerData(playerid, "pVotedVibor", 1);
					return 1; 
				}
				case 1: {
					if(!strcmp(kandidat2, "No √™√†√≠√§√®S√≠√≤√†")) return SCM(playerid, COLOR_ERROR, "√ä√†√≠√§√®S√≠√≤ √Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤. √É√Æ√´√Æ√±√Æ√¢√†√≠√®√• √≠√•√¢√Æ√ß√¨√Æ√¶√≠√Æ");
					kandidats_votes[1] ++;
					SCMF(playerid, COLOR_MAIN, "√Ç√ª √≥√±√Ø√•√∏√≠√Æ √Ø√∞√Æ√£√Æ√´√Æ√±√Æ√¢√†√´√® √ß√† {FFCD00}%s"CMAIN", √¢√†√∏ √£√Æ√´√Æ√± √≥√∑√≤√•√≠", kandidat2);
					SCM(playerid, -1, "√ë√Ø√†√±√®√°√Æ, √∑√≤√Æ √Ø√∞√®√∏√´√®"); 
					pData[playerid][pVotedVibor] = 1;
					UpdatePlayerData(playerid, "pVotedVibor", 1);
					return 1; 
				}
				case 2: {
					if(!strcmp(kandidat3, "No √™√†√≠√§√®S√≠√≤√†")) return SCM(playerid, COLOR_ERROR, "√ä√†√≠√§√®S√≠√≤ √Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤. √É√Æ√´√Æ√±√Æ√¢√†√≠√®√• √≠√•√¢√Æ√ß√¨√Æ√¶√≠√Æ");
					kandidats_votes[2] ++;
					SCMF(playerid, COLOR_MAIN, "√Ç√ª √≥√±√Ø√•√∏√≠√Æ √Ø√∞√Æ√£√Æ√´√Æ√±√Æ√¢√†√´√® √ß√† {FFCD00}%s"CMAIN", √¢√†√∏ √£√Æ√´√Æ√± √≥√∑√≤√•√≠", kandidat3);
					SCM(playerid, -1, "√ë√Ø√†√±√®√°√Æ, √∑√≤√Æ √Ø√∞√®√∏√´√®"); 
					pData[playerid][pVotedVibor] = 1;
					UpdatePlayerData(playerid, "pVotedVibor", 1);
					return 1; 
				}
				case 3: {
					if(!strcmp(kandidat4, "No √™√†√≠√§√®S√≠√≤√†")) return SCM(playerid, COLOR_ERROR, "√ä√†√≠√§√®S√≠√≤ √Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤. √É√Æ√´√Æ√±√Æ√¢√†√≠√®√• √≠√•√¢√Æ√ß√¨√Æ√¶√≠√Æ");
					kandidats_votes[3] ++;
					SCMF(playerid, COLOR_MAIN, "√Ç√ª √≥√±√Ø√•√∏√≠√Æ √Ø√∞√Æ√£√Æ√´√Æ√±√Æ√¢√†√´√® √ß√† {FFCD00}%s"CMAIN", √¢√†√∏ √£√Æ√´√Æ√± √≥√∑√≤√•√≠", kandidat4);
					SCM(playerid, -1, "√ë√Ø√†√±√®√°√Æ, √∑√≤√Æ √Ø√∞√®√∏√´√®"); 
					pData[playerid][pVotedVibor] = 1;
					UpdatePlayerData(playerid, "pVotedVibor", 1);
					return 1; 
				}
				case 4: {
					if(!strcmp(kandidat5, "No √™√†√≠√§√®S√≠√≤√†")) return SCM(playerid, COLOR_ERROR, "√ä√†√≠√§√®S√≠√≤ √Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤. √É√Æ√´√Æ√±√Æ√¢√†√≠√®√• √≠√•√¢√Æ√ß√¨√Æ√¶√≠√Æ");
					kandidats_votes[4] ++;
					SCMF(playerid, COLOR_MAIN, "√Ç√ª √≥√±√Ø√•√∏√≠√Æ √Ø√∞√Æ√£√Æ√´√Æ√±√Æ√¢√†√´√® √ß√† {FFCD00}%s"CMAIN", √¢√†√∏ √£√Æ√´√Æ√± √≥√∑√≤√•√≠", kandidat5);
					SCM(playerid, -1, "√ë√Ø√†√±√®√°√Æ, √∑√≤√Æ √Ø√∞√®√∏√´√®"); 
					pData[playerid][pVotedVibor] = 1;
					UpdatePlayerData(playerid, "pVotedVibor", 1);
					return 1; 
				}
			}
		}
		case 182: {
			if(!response) return 1;
			if(BizEnter{playerid} == 255) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [015]");
			if(pData[playerid][pCash] < 600) return SCM(playerid, COLOR_LIGHTGREY, "√á√†√Ø√®√±√º √≠√† √Æ√°√±√´√≥√¶√®√¢√†√≠√®√• √±√≤√Æ√®√≤ 600$");
			bilet_tune[playerid] = true;
			Hook_GivePlayerMoney(playerid, -600);
			BizInfo[BizEnter{playerid}][bPribil] += 600;
			BizInfo[BizEnter{playerid}][bBank] += 600;
			if(BizInfo[BizEnter{playerid}][bBank] > 10000000) BizInfo[BizEnter{playerid}][bBank] = 10000000;
			UpdateBusinessData(BizEnter{playerid}, "bPribil", BizInfo[BizEnter{playerid}][bPribil]);
			UpdateBusinessData(BizEnter{playerid}, "bBank", BizInfo[BizEnter{playerid}][bBank]);
			GameTextForPlayer(playerid, "~r~-600$", 3000, 1);
			PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
			SCM(playerid, COLOR_MAIN, "√Ç√ª √≥√±√Ø√•√∏√≠√Æ √ß√†√Ø√®√±√†√´√®√±√º √≠√† √Æ√°√±√´√≥√¶√®√¢√†√≠√®√• √ß√† {008800}600$");
			SCM(playerid, COLOR_LITEBLUE, "Usar√≤√• "CMAIN"/tune "CLITEBLUE"√§√´√ø √≤√æ√≠√®√≠√£√† √†√¢√≤√Æ√¨√Æ√°√®√´√ø");
			SCM(playerid, COLOR_LITEBLUE, "Usar√≤√• "CMAIN"/power "CLITEBLUE"√§√´√ø √Ø√∞√Æ√™√†√∑√™√® √µ√†√∞√†√™√≤√•√∞√®√±√≤√®√™ √†√¢√≤√Æ√¨√Æ√°√®√´√ø");

			antiflood_move[playerid] = gettime() + 3;
		}
		case 4998: ShowFilling(playerid);
		case 200: {
			if(!response) return 1;
			switch(listitem) {
				case 0: {
					format(string, 140, ""CWHITE"√ç√† S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤ √Ç√†√∏√† √Ä√á√ë √Æ√Ø√´√†√∑√•√≠√† √≠√† "CORANGE"%d √®√ß 30 √§√≠√•√©.\n"CWHITE"√Ç√ª √¨√Æ√¶√•√≤√• √Æ√Ø√´√†√≤√®√≤√º √•¬∏ √¢ √´√æ√°√Æ√¨ √£√Æ√±√≥S√≠√∞√±√≤√¢√•√≠√≠√Æ√¨ √°√†√≠√™√•.", Filling[pData[playerid][pFilling]][fPay]);
					SPD(playerid, 4998, DIALOG_STYLE_MSGBOX, ""CLITEBLUE"√é√Ø√´√†√≤√† √Ä√á√ë", string, "Siguiente", "");
				}
				case 1: SPD(playerid, 201, DIALOG_STYLE_LIST, ""CLITEBLUE"√Å√†√´√†√≠√±", ""CWHITE"√ë√≠√ø√≤√º √§√•√≠√º√£√®\n√è√Æ√´√Æ√¶√®√≤√º √§√•√≠√º√£√®", "S√≠√´√•√•", "Siguiente");
				case 2: SPD(playerid, 204, DIALOG_STYLE_INPUT, ""CMAIN"√ñ√•√≠√† √ß√† 1 √´√®√≤√∞", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≤√Æ√®√¨√Æ√±√≤√º √≤√Æ√Ø√´√®√¢√† √ß√† 1 √´√®√≤√∞\n√Ñ√Æ√±√≤√≥√Ø√≠√Æ √Æ√≤ 1$ √§√Æ 300$", "S√≠√´√•√•", "Siguiente");
				case 3: SPD(playerid, 212, DIALOG_STYLE_MSGBOX, ""CMAIN"√á√†√™√≥√Ø√™√† √≤√Æ√Ø√´√®√¢√†", ""CWHITE"√ë√≤√Æ√®√¨√Æ√±√≤√º √Æ√§√≠√Æ√£√Æ √´√®√≤√∞√† √≤√Æ√Ø√´√®√¢√† √Ø√Æ √Æ√Ø√≤√Æ√¢√ª√¨ √∂√•√≠√†√¨: "CMAIN"90$"CWHITE".\n\nQuieres √≥√ß√≠√†√≤√º √±√≤√Æ√®√¨√Æ√±√≤√º √Ø√Æ√´√≠√Æ√© √∂√®√±√≤√•√∞√≠√ª √¢√†√∏√•√© √ß√†√Ø√∞√†√¢√™√®?", "√è√∞√Æ√§√Æ√´√¶√®√≤√º", "Cerrar");
				case 4: {
					new fillingid = pData[playerid][pFilling];

					Filling[fillingid][fLock] = !Filling[fillingid][fLock] ? true : false;
					UpdateFuelInfo(playerid, "fLock", Filling[fillingid][fLock]);

					ShowFilling(playerid);
					update_3dtext_fill(fillingid);
					update_text_fill(fillingid);
				}
				case 5: {
					new NoPlayers,str[16],fstring[128];
					foreach(new i:Player) {
						if(pData[i][pFilling] == -1 && i != playerid && ProxDetectorS(10,playerid,i)) {
							format(fstring,128,"%s%s[%d]\n", fstring,GetName(i),i);
							format(str,16,"Zapis_%i",NoPlayers); SetPVarInt(playerid, str, i);
							NoPlayers++;
						}
					}
					SPD(playerid, 205, DIALOG_STYLE_LIST, ""CLITEBLUE"√è√∞√ÆS√≠√≤√º √ß√†√Ø√∞√†√¢√™√≥", fstring, "√è√∞√ÆS√≠√≤√º", "Siguiente");
					if(!NoPlayers) return SCM(playerid, COLOR_LIGHTGREY, "√ê√ø√§√Æ√¨ √± √Ç√†√¨√® No √≠√® √Æ√§√≠√Æ√£√Æ √®√£√∞√Æ√™√† √°√•√ß √Ä√á√ë");
				}
				case 6: {
					new NoPlayers,str[16],fstring[128];
					foreach(new i:Player) {
						if(pData[i][pFilling] && i != playerid && ProxDetectorS(10,playerid,i)) {
							format(fstring,128,"%s%s[%d]\n", fstring,GetName(i),i);
							format(str,16,"Zapis_%i",NoPlayers); SetPVarInt(playerid, str, i);
							NoPlayers++;
						}
					}
					SPD(playerid, 208, DIALOG_STYLE_LIST, ""CLITEBLUE"√é√°√¨√•√≠√ø√≤√º √ß√†√Ø√∞√†√¢√™√≥", fstring, "√é√°√¨√•√≠", "Siguiente");
					if(!NoPlayers) return SCM(playerid, COLOR_LIGHTGREY, "√ê√ø√§√Æ√¨ √± √Ç√†√¨√® No √≠√® √Æ√§√≠√Æ√£√Æ √®√£√∞√Æ√™√† √± √ß√†√Ø√∞√†√¢√™√Æ√©");
				}
				case 7: {
					format(string, 345, ""CWHITE"√á√†√Ø√∞√†√¢√™√† √°√≥√§√•√≤ √¢√ª√±√≤√†√¢√´√•√≠√† √≠√† √±√¢√Æ√°√Æ√§√≠√≥√æ √Ø√∞√ÆS√≠√¶√≥ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥.\n√ç√† √¢√†√∏ √°√†√≠√™√Æ√¢√±√™√®√© √±√∑√•√≤ √¢√•√∞No√±√ø √≤√Æ√´√º√™√Æ "CMAIN"50%%"CWHITE" √Æ√≤ √±√≤√Æ√®√¨√Æ√±√≤√® √Ä√á√ë.\n\n√ë√≤√Æ√®√¨√Æ√±√≤√º √Ä√á√ë: "CMAIN"%d$"CWHITE".\n√Å√≥√§√•√≤ √¢√Æ√ß√¢√∞√†√π√•√≠√Æ: "CMAIN"%d$"CWHITE".\n\n√Ç√ª √§√•√©√±√≤√¢√®√≤√•√´√º√≠√Æ √µ√Æ√≤√®√≤√• √Ø√∞√ÆS√≠√≤√º √ß√†√Ø√∞√†√¢√™√≥?", Filling[pData[playerid][pFilling]][fPrice],Filling[pData[playerid][pFilling]][fPrice]/2);
					SPD(playerid, 611, DIALOG_STYLE_MSGBOX, ""CMAIN"√è√∞√ÆS√≠√¶√† √Ä√á√ë", string, "√è√∞√ÆS√≠√≤√º", "Siguiente");
				}
			}
			return 1;
		}
		case 201: {
			if(!response) return ShowFilling(playerid);
			switch(listitem) {
				case 0: SPD(playerid, 202, DIALOG_STYLE_INPUT, ""CMAIN"√Å√†√´√†√≠√±", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ √µ√Æ√≤√®√≤√• √±√≠√ø√≤√º √± √°√†√´√†√≠√±√† √Ä√á√ë", "S√≠√´√•√•", "Siguiente");
				case 1: SPD(playerid, 203, DIALOG_STYLE_INPUT, ""CMAIN"√Å√†√´√†√≠√±", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ √µ√Æ√≤√®√≤√• √Ø√Æ√´√Æ√¶√®√≤√º √≠√† √°√†√´√†√≠√± √Ä√á√ë", "S√≠√´√•√•", "Siguiente");
			}
			return 1;
		}
		case 202: {
			if(!response) return ShowFilling(playerid);
			if(strval(inputtext) < 1 || strval(inputtext) > Filling[pData[playerid][pFilling]][fBankMoney]) return SCM(playerid, COLOR_LIGHTGREY, "√ç√† √±√∑√•√≤√≥ √Ä√á√ë No √±√≤√Æ√´√º√™√Æ √§√•√≠√•√£");
			Hook_GivePlayerMoney(playerid, strval(inputtext));
			Filling[pData[playerid][pFilling]][fBankMoney] -= strval(inputtext);
			SCMF(playerid,-1, "√Ç√ª √±√≠√ø√´√® √±√Æ √±√∑√•√≤√† √Ä√á√ë {29DF32}%d$",strval(inputtext));
			UpdateFuelInfo(playerid, "fBankMoney", Filling[pData[playerid][pFilling]][fBankMoney]);
			return 1;
		}
		case 203: {
			if(!response) return ShowFilling(playerid);
			if(strval(inputtext) < 1 || strval(inputtext) > pData[playerid][pCash]) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √±√≤√Æ√´√º√™√Æ √§√•√≠√•√£");
			Hook_GivePlayerMoney(playerid, -strval(inputtext));
			Filling[pData[playerid][pFilling]][fBankMoney] += strval(inputtext);
			SCMF(playerid,-1, "√Ç√ª √Ø√Æ√´√Æ√¶√®√´√® √≠√† √±√∑√•√≤ √Ä√á√ë {29DF32}%d$",strval(inputtext));
			UpdateFuelInfo(playerid, "fBankMoney", Filling[pData[playerid][pFilling]][fBankMoney]);
			return 1;
		}
		case 204: {
			if(!response) return ShowFilling(playerid);
			if(strval(inputtext) < 1 || strval(inputtext) > 300) return SCM(playerid, COLOR_LIGHTGREY, "√ñ√•√≠√† √Æ√≤ 1$ √§√Æ 300$");
			new fillingid = pData[playerid][pFilling];

			Filling[fillingid][fPriceBenz] = strval(inputtext);
			SCMF(playerid,-1, "√Ç√ª √≥√±√≤√†√≠√Æ√¢√®√´√® √∂√•√≠√≥ √ß√† 1 √´√®√≤√∞ √≤√Æ√Ø√´√®√¢√†: {29DF32}%d$",strval(inputtext));
			UpdateFuelInfo(playerid, "fPriceBenz", Filling[fillingid][fPriceBenz]);

			update_3dtext_fill(fillingid);
			return update_text_fill(fillingid);
		}
		case 205: {
			if(!response) return ShowFilling(playerid);
			format(string,64,"Zapis_%i",listitem);
			new Zapis = GetPVarInt(playerid, string);
			format(string,256,""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √ß√† √™√Æ√≤√Æ√∞√≥√æ √µ√Æ√≤√®√≤√• √Ø√∞√ÆS√≠√≤√º √ß√†√Ø√∞√†√¢√™√≥:\n√Ñ√Æ√±√≤√≥√Ø√≠√Æ √Æ√≤ %d$ √§√Æ %d$", Filling[pData[playerid][pFilling]][fPrice]/2,Filling[pData[playerid][pFilling]][fPrice]*2);
			SPD(playerid, 206, DIALOG_STYLE_INPUT, ""CMAIN"√è√∞√ÆS√≠√≤√º √ß√†√Ø√∞√†√¢√™√≥",string,"√è√∞√ÆS√≠√≤√º","Siguiente");
			SetPVarInt(playerid,"ImvoGive",Zapis+1);
			return 1;
		}
		case 206: {
			if(!response) return ShowFilling(playerid);
			new ImvoGive = GetPVarInt(playerid, "ImvoGive") - 1;
			if(strval(inputtext) < Filling[pData[playerid][pFilling]][fPrice]/2 || strval(inputtext) > Filling[pData[playerid][pFilling]][fPrice]*2) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√™√Æ√∞√∞√•√™√≤√≠√†√ø √±√≥√¨√¨√†");
			format(string,256,""CWHITE"%s √Ø√∞√•√§√´√†√£√†√•√≤ √Ç√†√¨ √™√≥√Ø√®√≤√º √ß√†√Ø√∞√†√¢√™√≥ ¬π%d √ß√† %d$",pData[playerid][pName],pData[playerid][pFilling],strval(inputtext));
			SPD(ImvoGive, 207, DIALOG_STYLE_MSGBOX, ""CMAIN"√á√†√Ø√∞√†√¢√™√†",string, "√ä√≥√Ø√®√≤√º", "Cerrar");
			SCMF(playerid,-1,"√Ç√ª √Ø√∞√•√§√´√Æ√¶√®√´√® %s √™√≥√Ø√®√≤√º √Ç√†√∏√≥ √ß√†√Ø√∞√†√¢√™√≥ √ß√† %d$",pData[ImvoGive][pName],strval(inputtext));
			SetPVarInt(ImvoGive,"FillingOffer",playerid+1); SetPVarInt(ImvoGive,"FillingPrice",strval(inputtext));
			return 1;
		}
		case 207: {
			new FillingOffer = GetPVarInt(playerid,"FillingOffer") - 1;
			if(!response) return SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√†√ß√†√´√®√±√º √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø"), SCM(FillingOffer,COLOR_ERROR, "√à√£√∞√Æ√™ √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √±√§√•√´√™√®"), DeletePVar(FillingOffer,"ImvoGive"), DeletePVar(playerid,"FillingOffer"), DeletePVar(playerid,"FillingPrice");
			if(!IsPlayerConnected(FillingOffer)) return SCM(playerid, COLOR_GREY,"√à√£√∞√Æ√™ √≠√•√†√™√≤√®√¢√•√≠"), DeletePVar(FillingOffer,"ImvoGive"), DeletePVar(playerid,"FillingOffer"), DeletePVar(playerid,"FillingPrice");
			if(pData[playerid][pCash] < GetPVarInt(playerid,"FillingPrice")) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√• √µ√¢√†√≤√†√•√≤ √§√•√≠√•√£"), DeletePVar(FillingOffer,"ImvoGive"), DeletePVar(playerid,"FillingOffer"), DeletePVar(playerid,"FillingPrice");
			Hook_GivePlayerMoney(playerid, -GetPVarInt(playerid,"FillingPrice"));
			Hook_GivePlayerMoney(FillingOffer, GetPVarInt(playerid,"FillingPrice"));
			pData[playerid][pFilling] = pData[FillingOffer][pFilling];
			UpdatePlayerData(playerid, "pPsbiskey", pData[playerid][pFilling]);
			pData[FillingOffer][pFilling] = -1;
			UpdatePlayerData(FillingOffer, "pPsbiskey", -1);
			strmid(Filling[pData[playerid][pFilling]][fOwner],pData[playerid][pName],0,strlen(pData[playerid][pName]),255);
			UpdateFuelInfoEx(playerid, "fOwner", Filling[pData[playerid][pFilling]][fOwner]);
			SCM(playerid,-1, "√Ç√ª √Ø√∞√®√Æ√°√∞√•√´√® √ß√†√Ø√∞√†√¢√Æ√∑√≠√≥√æ √±√≤√†√≠√∂√®√æ");
			SCM(playerid, COLOR_ORANGE, "√ç√• √ß√†√°√≥√§√º√≤√• √Ø√∞√Æ√¢√•√∞√®√≤√º, √≠√†√±√™√Æ√´√º√™√Æ √Æ√≠√† √Æ√Ø√´√†√∑√•√≠√† √® √Ø√∞√® √≠√•√Æ√°√µ√Æ√§√®√¨√Æ√±√≤√® √Æ√Ø√´√†√≤√®√≤√º √•¬∏");
			SCM(FillingOffer, -1, "√à√£√∞√Æ√™ √™√≥√Ø√®√´ √Ç√†√∏√≥ √ß√†√Ø√∞√†√¢√Æ√∑√≠√≥√æ √±√≤√†√≠√∂√®√æ");
			DeletePVar(FillingOffer,"ImvoGive");
			DeletePVar(playerid,"FillingOffer");
			DeletePVar(playerid,"FillingPrice");

			new fillingid = pData[playerid][pFilling];
			update_3dtext_fill(fillingid);
			return 1;
		}
		case 208: {
			if(!response) return ShowFilling(playerid);
			format(string,64,"Zapis_%i",listitem);
			new Zapis = GetPVarInt(playerid, string);
			if(!ProxDetectorS(20.0, playerid, Zapis)) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
			if(pData[Zapis][pFilling]==-1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √®√£√∞√Æ√™√† No √Ä√á√ë");
			SPD(playerid, 209, DIALOG_STYLE_INPUT, ""CMAIN"√é√°√¨√•√≠√ø√≤√º √ß√†√Ø√∞√†√¢√™√≥",""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥ √§√Æ√Ø√´√†√≤√ª √¢ √Ø√Æ√´√• √≠√®√¶√•:","√é√°√¨√•√≠√ø√≤√º√±√ø","Siguiente");
			SetPVarInt(playerid,"ImvoGive",Zapis+1);
			return 1;
		}
		case 209: {
			if(!response) return ShowFilling(playerid);
			new ImvoGive = GetPVarInt(playerid, "ImvoGive") - 1;
			if(!ProxDetectorS(20.0, playerid, ImvoGive)) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
			if(pData[ImvoGive][pFilling]==-1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √®√£√∞√Æ√™√† No √Ä√á√ë");
			if(strval(inputtext) < 1000) return SCM(playerid, COLOR_LIGHTGREY, "√å√®√≠√®√¨√†√´√º√≠√†√ø √§√Æ√Ø√´√†√≤√† - 1000$");
			format(string,164,""CWHITE"%s √Ø√∞√•√§√´√†√£√†√•√≤ √¢√†√¨ √Æ√°√¨√•√≠√ø√≤√º√±√ø √Ä√á√ë (¬π%d) √± √Ç√†√∏√•√© √§√Æ√Ø√´√†√≤√Æ√© %d$",pData[playerid][pName],pData[playerid][pFilling],strval(inputtext));
			SPD(ImvoGive, 610, DIALOG_STYLE_MSGBOX, ""CMAIN"√á√†√Ø√∞√†√¢√™√†",string,"√é√°√¨√•√≠√ø√≤√º√±√ø","Cerrar");
			if(pData[ImvoGive][pSex] == 1) SCMF(playerid,COLOR_LITEBLUE,"√Ç√ª √Ø√∞√•√§√´√Æ√¶√®√´√® %s √Æ√°√¨√•√≠√ø√≤√º √Ç√†√∏√≥ √ß√†√Ø√∞√†√¢√™√≥ √≠√† ¬π%d √± √•√£√Æ √§√Æ√Ø√´√†√≤√Æ√© %d$",pData[ImvoGive][pName],pData[ImvoGive][pFilling],strval(inputtext));
			else SCMF(playerid,COLOR_LITEBLUE,"√Ç√ª √Ø√∞√•√§√´√Æ√¶√®√´√® %s √Æ√°√¨√•√≠√ø√≤√º √Ç√†√∏√≥ √ß√†√Ø√∞√†√¢√™√≥ √≠√† ¬π%d √± √•¬∏ √§√Æ√Ø√´√†√≤√Æ√© %d$",pData[ImvoGive][pName],pData[ImvoGive][pFilling],strval(inputtext));
			SetPVarInt(ImvoGive,"FillingOffer",playerid+1); SetPVarInt(ImvoGive,"FillingPrice",strval(inputtext));
			return 1;
		}
		case 610: {
			new FillingOffer = GetPVarInt(playerid,"FillingOffer") - 1, b = pData[playerid][pFilling];
			if(!response) return SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√†√ß√†√´√®√±√º √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø"), SCM(FillingOffer,COLOR_ERROR, "√à√£√∞√Æ√™ √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √±√§√•√´√™√®"), DeletePVar(FillingOffer,"ImvoGive"), DeletePVar(playerid,"FillingOffer"), DeletePVar(playerid,"FillingPrice");
			if(!IsPlayerConnected(FillingOffer)) return SCM(playerid, COLOR_GREY,"√à√£√∞√Æ√™ √≠√•√†√™√≤√®√¢√•√≠"), DeletePVar(FillingOffer,"ImvoGive"), DeletePVar(playerid,"FillingOffer"), DeletePVar(playerid,"FillingPrice");
			if(pData[playerid][pCash] < GetPVarInt(playerid,"FillingPrice")) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√• √µ√¢√†√≤√†√•√≤ √§√•√≠√•√£"), DeletePVar(FillingOffer,"ImvoGive"), DeletePVar(playerid,"FillingOffer"), DeletePVar(playerid,"FillingPrice");
			Hook_GivePlayerMoney(playerid, -GetPVarInt(playerid,"FillingPrice"));
			Hook_GivePlayerMoney(FillingOffer, GetPVarInt(playerid,"FillingPrice"));
			pData[playerid][pFilling] = pData[FillingOffer][pFilling];
			UpdatePlayerData(playerid, "pPsbiskey", pData[playerid][pFilling]);
			pData[FillingOffer][pFilling] = b;
			UpdatePlayerData(FillingOffer, "pPsbiskey", b);
			strmid(Filling[pData[playerid][pFilling]][fOwner],pData[playerid][pName],0,strlen(pData[playerid][pName]),255);
			strmid(Filling[pData[FillingOffer][pFilling]][fOwner],pData[FillingOffer][pName],0,strlen(pData[FillingOffer][pName]),255);
			UpdateFuelInfoEx(playerid, "fOwner", Filling[pData[playerid][pFilling]][fOwner]);
			UpdateFuelInfoEx(FillingOffer, "fOwner", Filling[pData[FillingOffer][pFilling]][fOwner]);
			SCM(playerid, COLOR_MAIN, "√é√°√¨√•√≠ √Ä√á√ë √Ø√∞√Æ√∏¬∏√´ √≥√±√Ø√•√∏√≠√Æ");
			SCM(FillingOffer,COLOR_MAIN, "√é√°√¨√•√≠ √Ä√á√ë √Ø√∞√Æ√∏¬∏√´ √≥√±√Ø√•√∏√≠√Æ");
			DeletePVar(FillingOffer,"ImvoGive");
			DeletePVar(playerid,"FillingOffer");
			DeletePVar(playerid,"FillingPrice");

			update_3dtext_fill(b);
			return 1;
		}
		case 611: {
			if(!response) return ShowFilling(playerid);
			new fillingid = pData[playerid][pFilling], gmt_sellh[60];
			pData[playerid][pBank] += Filling[fillingid][fPrice] / 2;
			UpdatePlayerData(playerid, "pBank", pData[playerid][pBank]);
			SCMF(playerid, -1, "√Ç√ª √Ø√∞√ÆS√≠√´√® √ß√†√Ø√∞√†√¢√™√≥ √ß√† "CMAIN"%i$"CWHITE". √ñ√•√≠√† √ß√†√Ø√∞√†√¢√Æ√∑√≠√Æ√© √±√≤√†√≠√∂√®√®: "CMAIN"%i$", Filling[fillingid][fPrice]/2,Filling[fillingid][fPrice]);
			strmid(Filling[fillingid][fOwner],"None",0,strlen("None"),255);
			format(gmt_sellh, 60, "~g~+%d$ ~n~~g~ bank", Filling[fillingid][fPrice] / 2);
			GameTextForPlayer(playerid, gmt_sellh, 3000, 1);
            Filling[fillingid][fLock] = false;
            UpdateFuelInfo(playerid, "fLock", 0);
			UpdateFuelInfoEx(playerid, "fOwner", "None");
			pData[playerid][pFilling] = -1;
			update_3dtext_fill(fillingid);
            update_text_fill(fillingid);
			return UpdatePlayerData(playerid, "pPsbiskey", -1);
		}
		case 2012: {
			if(!response) return ShowFilling(playerid);
			new fillingid = pData[playerid][pFilling];
			format(string,264,""CWHITE"√ë√≤√Æ√®√¨√Æ√±√≤√º √Ø√Æ√´√≠√Æ√© √∂√®√±√≤√•√∞√≠√ª √≤√Æ√Ø√´√®√¢√†: "CMAIN"%i$"CWHITE"\n\n- √Ñ√Æ √Ø√Æ√´√≠√Æ√£√Æ √Ø√Æ√Ø√Æ√´√≠√•√≠√®√ø √∂√®√±√≤√•√∞√≠√ª √≠√≥√¶√≠√Æ: "CMAIN"%i √´√®√≤√∞√Æ√¢ "CWHITE"√≤√Æ√Ø√´√®√¢√†\n- √Ç√ª √Ø√∞√®√Æ√°√∞√•√≤√†√•√≤√• "CMAIN"%i"CWHITE" √´√®√≤√∞√Æ√¢ √≤√Æ√Ø√´√®√¢√† √Ø√Æ √Æ√Ø√≤√Æ√¢√Æ√© √∂√•√≠√•: "CMAIN"90$"CWHITE"\n\n√Ç√ª √±√Æ√£√´√†√±√≠√ª √≠√† √±√§√•√´√™√≥?",(Filling[fillingid][fMaxBenz]-Filling[fillingid][fBenz])*90,Filling[fillingid][fMaxBenz]-Filling[fillingid][fBenz],Filling[fillingid][fMaxBenz]-Filling[fillingid][fBenz]);
			return SPD(playerid, 2013, DIALOG_STYLE_MSGBOX, ""CMAIN"√à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ √Æ√Ø√≤√Æ√¢√Æ√© √ß√†√™√≥√Ø√™√• √≤√Æ√Ø√´√®√¢√†", string, "S√≠", "No");
		}
		case 2013: {
			if(!response) return ShowFilling(playerid);
			new fillingid = pData[playerid][pFilling];
			if(Filling[fillingid][fBankMoney] < (Filling[fillingid][fMaxBenz]-Filling[fillingid][fBenz])*90) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √°√†√≠√™√• √Ä√á√ë √≠√• √µ√¢√†√≤√†√•√≤ √±√∞√•√§√±√≤√¢"), ShowFilling(playerid);
			SCMF(playerid, -1, "√Ç√ª √Ø√∞√®√Æ√°√∞√•√´√® %i √´√®√≤√∞√Æ√¢ √≤√Æ√Ø√´√®√¢√† √Ø√Æ √Æ√Ø√≤√Æ√¢√Æ√© √∂√•√≠√• 90$ √ß√† 1 √´√®√≤√∞",(Filling[fillingid][fMaxBenz]-Filling[fillingid][fBenz]));
			SCMF(playerid, -1, "√Ç √∂√®√±√≤√•√∞√≠√• %i √´√®√≤√∞√Æ√¢ √≤√Æ√Ø√´√®√¢√†", Filling[fillingid][fMaxBenz]);
			SCMF(playerid,-1, "√ë√Æ √±√∑√•√≤√† √±√≠√ø√≤√Æ {29DF32}%d$",(Filling[fillingid][fMaxBenz]-Filling[fillingid][fBenz])*90);
			Filling[fillingid][fBankMoney] -= (Filling[fillingid][fMaxBenz]-Filling[fillingid][fBenz])*90;
			UpdateFuelInfo(playerid, "fBankMoney", Filling[fillingid][fBankMoney]);
			Filling[fillingid][fBenz] += (Filling[fillingid][fMaxBenz]-Filling[fillingid][fBenz]);
			UpdateFuelInfo(playerid, "fBenz", Filling[fillingid][fBenz]);

			update_3dtext_fill(fillingid);
			return 1;
		}
		case 495: {
			if(!response) return 1;
			if(listitem == 0) {
				ResetPlayerWeapons(playerid);
				if(pData[playerid][pSex] == 1) {
					MeAction(playerid, "√¢√ª√°√∞√Æ√±√®√´ √¢√±¬∏ √±√¢√Æ¬∏ √Æ√∞√≥√¶√®√•");
					SetPlayerChatBubble(playerid, "√¢√ª√°√∞√Æ√±√®√´ √¢√±¬∏ √±√¢√Æ¬∏ √Æ√∞√≥√¶√®√•", COLOR_PURPLE, 4.0, 5000);
				}
				else {
					MeAction(playerid, "√¢√ª√°√∞√Æ√±√®√´√† √¢√±¬∏ √±√¢√Æ¬∏ √Æ√∞√≥√¶√®√•");
					SetPlayerChatBubble(playerid, "√¢√ª√°√∞√Æ√±√®√´√† √¢√±¬∏ √±√¢√Æ¬∏ √Æ√∞√≥√¶√®√•", COLOR_PURPLE, 4.0, 5000);
				}
				return SCM(playerid, COLOR_ORANGE, "√Ç√±¬∏ √Ç√†√∏√• √Æ√∞√≥√¶√®√• √°√ª√´√Æ √¢√ª√°√∞√Æ√∏√•√≠√Æ");
			}
			new p_listitem = -1, weaponid, ammo, weaponname[30];
			for(new i = 0; i <= 12; i ++) {
				GetPlayerWeaponData(playerid, i, weaponid, ammo);
				if(weaponid != 0 && ammo != 0) p_listitem ++;
				if(p_listitem != listitem - 1) continue;
				RemovePlayerWeapon(playerid, weaponid);
				GetWeaponName(weaponid, weaponname, sizeof(weaponname));
				if(pData[playerid][pSex] == 1) {
					MeAction(playerid, "√¢√ª√°√∞√Æ√±√®√´ √Æ√∞√≥√¶√®√•");
					SetPlayerChatBubble(playerid, "√¢√ª√°√∞√Æ√±√®√´ √Æ√∞√≥√¶√®√•", COLOR_PURPLE, 4.0, 5000);
				}
				else {
					MeAction(playerid, "√¢√ª√°√∞√Æ√±√®√´√† √Æ√∞√≥√¶√®√•");
					SetPlayerChatBubble(playerid, "√¢√ª√°√∞√Æ√±√®√´√† √Æ√∞√≥√¶√®√•", COLOR_PURPLE, 4.0, 5000);
				}
				SCMF(playerid, COLOR_ORANGE, "√Ç√ª √¢√ª√°√∞√Æ√±√®√´√® √Æ√∞√≥√¶√®√• {669999}%s", weaponname);
				SetPVarInt(playerid, "drop_delay", gettime() + 5);
				break;
			}
			if(p_listitem != listitem - 1) SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [013]");
		}
		case 4592: {
			if(!response) return 1;
			if(BizEnter{playerid} == 255) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [015]");
			if(BizInfo[BizEnter{playerid}][bProd] < 15) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√Æ√≤ √≤√Æ√¢√†√∞ √Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤ √¢ √¨√†√£√†√ß√®√≠√•");
			switch(listitem) {
				case 0: {
					if(pData[playerid][pCash] < 200) 
						return SCM(playerid,COLOR_LIGHTGREY,"√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢");
					SCM(playerid, COLOR_BLUE, "√Ç√ª √™√≥√Ø√®√´√® "CPURPLE"√∞√Æ√ß√Æ√¢√ª√© "CBLUE"√¢√®√°√∞√†√≤√Æ√∞");
					Hook_GivePlayerMoney(playerid, -200);
					BizInfo[BizEnter{playerid}][bPribil] += 200;
					BizInfo[BizEnter{playerid}][bBank] += 200;
					GameTextForPlayer(playerid, "~r~-200$", 3000, 1);
				}
				case 1: {
					if(pData[playerid][pCash] < 150) 
						return SCM(playerid,COLOR_LIGHTGREY,"√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢");
					SCM(playerid, COLOR_BLUE, "√Ç√ª √™√≥√Ø√®√´√® "CYELLOW"√Æ√°√ª√∑√≠√ª√© "CBLUE"√¢√®√°√∞√†√≤√Æ√∞");
					Hook_GivePlayerMoney(playerid, -150);
					BizInfo[BizEnter{playerid}][bPribil] += 150;
					BizInfo[BizEnter{playerid}][bBank] += 150;
					GameTextForPlayer(playerid, "~r~-150$", 3000, 1);
				}
				case 2: {
					if(pData[playerid][pCash] < 250) 
						return SCM(playerid,COLOR_LIGHTGREY,"√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢");
					SCM(playerid, COLOR_BLUE, "√Ç√ª √™√≥√Ø√®√´√® {66cc00}√°√Æ√´√º√∏√Æ√© "CBLUE"√¢√®√°√∞√†√≤√Æ√∞");
					Hook_GivePlayerMoney(playerid, -250);
					BizInfo[BizEnter{playerid}][bPribil] += 250;
					BizInfo[BizEnter{playerid}][bBank] += 250;
					GameTextForPlayer(playerid, "~r~-250$", 3000, 1);
				}
				case 3: {
					if(pData[playerid][pCash] < 100) 
						return SCM(playerid,COLOR_LIGHTGREY,"√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢");
					SCM(playerid, COLOR_BLUE, "√Ç√ª √™√≥√Ø√®√´√® {313131}√∑¬∏√∞√≠√ª√© "CBLUE"√¢√®√°√∞√†√≤√Æ√∞");
					Hook_GivePlayerMoney(playerid, -100);
					BizInfo[BizEnter{playerid}][bPribil] += 100;
					BizInfo[BizEnter{playerid}][bBank] += 100;
					GameTextForPlayer(playerid, "~r~-100$", 3000, 1);
				}
			}
			GivePlayerWeapon(playerid, listitem + 10, 1);
			BizInfo[BizEnter{playerid}][bProd] -= 15;
			UpdateBusinessData(BizEnter{playerid}, "bProd", BizInfo[BizEnter{playerid}][bProd]);
			if(BizInfo[BizEnter{playerid}][bBank] > 10000000) BizInfo[BizEnter{playerid}][bBank] = 10000000;
			UpdateBusinessData(BizEnter{playerid}, "bPribil",BizInfo[BizEnter{playerid}][bPribil]);
			UpdateBusinessData(BizEnter{playerid}, "bBank",BizInfo[BizEnter{playerid}][bBank]);
			PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
		}
	case 1303: {
		if(!response) return 1;
		SPD(playerid, 1304, DIALOG_STYLE_LIST, "√ä√¢√†√∞√≤√®√∞√†", "{ffe79e}[1] "CWHITE"√Ç√Æ√©√≤√®\n{ffe79e}[2] "CWHITE"√Ä√∞√•√≠S√≠", "Seleccione", "Cerrar");
	}
	case 1304: {
		if(!response) return 1;
		switch(listitem) {
			case 0: {
				for(new i = 1; i != 49; i ++) {
					if(!IsPlayerInRangeOfPoint(playerid, 2.0, flat_info[i][fl_enterposX], flat_info[i][fl_enterposY], flat_info[i][fl_enterposZ])) continue;
					if(flat_info[i][fl_lock] && strcmp(flat_info[i][fl_owner], pData[playerid][pName]) && strcmp(flat_info[i][fl_renter], pData[playerid][pName])) 
						return GameTextForPlayer(playerid, "~r~Closed", 4000, 1);

					new obj_first = first_obj_flat[playerid],
						obj_last = last_obj_flat[playerid] + 1;

					if(IsValidDynamicObject(obj_first)) {
						for(new l = obj_first; l != obj_last; l ++) 
							DestroyDynamicObject(l);
					}

					new vw = i + 1;
					switch(i) {
						case 1..4: create_floor_objs_1(playerid, vw);
						case 5..8: create_floor_objs_2(playerid, vw);
						case 9..12: create_floor_objs_3(playerid, vw);
						case 13..16: create_floor_objs_4(playerid, vw);
						case 17..20: create_floor_objs_5(playerid, vw);
						case 21..24: create_floor_objs_6(playerid, vw);
						case 25..28: create_floor_objs_7(playerid, vw);
						case 29..32: create_floor_objs_8(playerid, vw);
						case 33..36: create_floor_objs_9(playerid, vw);
						case 37..40: create_floor_objs_10(playerid, vw);
						case 41..44: create_floor_objs_11(playerid, vw);
						case 45..48: create_floor_objs_12(playerid, vw);
					}

					SetPlayerVirtualWorld(playerid, vw);
					SetPlayerPos(playerid, flat_info[i][fl_exitposX], flat_info[i][fl_exitposY], flat_info[i][fl_exitposZ]);
				}
			}
			case 1: {
				if(pData[playerid][pLevel] < 2) return SCM(playerid, COLOR_GREY, "√Ä√∞√•√≠S√≠ √™√¢√†√∞√≤√®√∞√ª √∞√†√ß√∞√•√∏√•√≠√† √±√Æ 2-√£√Æ √≥√∞√Æ√¢√≠√ø");
				if(pData[playerid][pHouse] != -1 || pData[playerid][pHotel] != -1 || pData[playerid][pFlat] != -1 || pData[playerid][p_rent_flat] != -1) 
					return SCM(playerid, COLOR_GREY, "√Ñ√´√ø √†√∞√•√≠√§√ª √™√¢√†√∞√≤√®√∞√ª √Ç√ª √§√Æ√´√¶√≠√ª √Ø√∞√ÆS√≠√≤√º √±√¢√Æ¬∏ √≤√•√™√≥√π√•√• √¶√®√´√º¬∏");
				for(new i = 1; i != 49; i ++) {
					if(!IsPlayerInRangeOfPoint(playerid, 2.0, flat_info[i][fl_enterposX], flat_info[i][fl_enterposY], flat_info[i][fl_enterposZ])) continue;
					if(!flat_info[i][fl_rentstatus]) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [087]");
					if(strcmp(flat_info[i][fl_renter], "None")) return SCM(playerid, COLOR_GREY, "√ù√≤√≥ √™√¢√†√∞√≤√®√∞√≥ √≥√¶√• √™√≤√Æ-√≤√Æ √†√∞√•√≠√§√≥√•√≤");
					new price_rent = flat_info[i][fl_rentprice];
					if(pData[playerid][pCash] < price_rent) return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √§√•√≠√•√£ √§√´√ø √†√∞√•√≠√§√ª √Ω√≤√Æ√© √™√¢√†√∞√≤√®√∞√ª");

					Hook_GivePlayerMoney(playerid, -price_rent);
					new gametext_str[25];
					format(gametext_str, sizeof(gametext_str), "~r~-%d$", price_rent);
		            GameTextForPlayer(playerid, gametext_str, 3000, 1);
		            pData[playerid][p_rent_flat] = i;
		            UpdatePlayerData(playerid, "p_rent_flat", i);

		            strmid(flat_info[i][fl_renter], pData[playerid][pName], 0, strlen(pData[playerid][pName]), 255);
		            new fl_query[100];
					mysql_format(mysql_Handle, fl_query, sizeof(fl_query), "UPDATE `flats` SET `_fl_renter` = '%s' WHERE `_fl_id` = %d", pData[playerid][pName], i);
					mysql_tquery(mysql_Handle, fl_query);

		            new obj_first = first_obj_flat[playerid],
						obj_last = last_obj_flat[playerid] + 1;

					if(IsValidDynamicObject(obj_first)) {
						for(new l = obj_first; l != obj_last; l ++) 
							DestroyDynamicObject(l);
					}

					new vw = i + 1;
					switch(i) {
						case 1..4: create_floor_objs_1(playerid, vw);
						case 5..8: create_floor_objs_2(playerid, vw);
						case 9..12: create_floor_objs_3(playerid, vw);
						case 13..16: create_floor_objs_4(playerid, vw);
						case 17..20: create_floor_objs_5(playerid, vw);
						case 21..24: create_floor_objs_6(playerid, vw);
						case 25..28: create_floor_objs_7(playerid, vw);
						case 29..32: create_floor_objs_8(playerid, vw);
						case 33..36: create_floor_objs_9(playerid, vw);
						case 37..40: create_floor_objs_10(playerid, vw);
						case 41..44: create_floor_objs_11(playerid, vw);
						case 45..48: create_floor_objs_12(playerid, vw);
					}

					SetPlayerVirtualWorld(playerid, vw);
					SetPlayerPos(playerid, flat_info[i][fl_exitposX], flat_info[i][fl_exitposY], flat_info[i][fl_exitposZ]);
					PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
		            
		            SCMF(playerid, COLOR_PALEGREEN, "√Ç√ª √≥√±√Ø√•√∏√≠√Æ √†√∞√•√≠√§√Æ√¢√†√´√® √™√¢√†√∞√≤√®√∞√≥ √ß√† "CLITEBLUE"%d$", price_rent);
				}
			}
		}
	}
	case 1305: {
		if(!response) return 1;
		for(new i = 1; i != 49; i ++) {
			if(!IsPlayerInRangeOfPoint(playerid, 2.0, flat_info[i][fl_enterposX], flat_info[i][fl_enterposY], flat_info[i][fl_enterposZ])) continue;
			if(flat_info[i][fl_lock] && strcmp(flat_info[i][fl_owner], pData[playerid][pName]) && strcmp(flat_info[i][fl_renter], pData[playerid][pName])) 
				return GameTextForPlayer(playerid, "~r~Closed", 4000, 1);

			new obj_first = first_obj_flat[playerid],
				obj_last = last_obj_flat[playerid] + 1;

			if(IsValidDynamicObject(obj_first)) {
				for(new l = obj_first; l != obj_last; l ++) 
					DestroyDynamicObject(l);
			}

			new vw = i + 1;
			switch(i) {
				case 1..4: create_floor_objs_1(playerid, vw);
				case 5..8: create_floor_objs_2(playerid, vw);
				case 9..12: create_floor_objs_3(playerid, vw);
				case 13..16: create_floor_objs_4(playerid, vw);
				case 17..20: create_floor_objs_5(playerid, vw);
				case 21..24: create_floor_objs_6(playerid, vw);
				case 25..28: create_floor_objs_7(playerid, vw);
				case 29..32: create_floor_objs_8(playerid, vw);
				case 33..36: create_floor_objs_9(playerid, vw);
				case 37..40: create_floor_objs_10(playerid, vw);
				case 41..44: create_floor_objs_11(playerid, vw);
				case 45..48: create_floor_objs_12(playerid, vw);
			}

			SetPlayerVirtualWorld(playerid, vw);
			SetPlayerPos(playerid, flat_info[i][fl_exitposX], flat_info[i][fl_exitposY], flat_info[i][fl_exitposZ]);
		}
	}
	case 1306: {
		if(!response) return 1;
		for(new i = 1; i != 49; i ++) {
			if(!IsPlayerInRangeOfPoint(playerid, 2.0, flat_info[i][fl_enterposX], flat_info[i][fl_enterposY], flat_info[i][fl_enterposZ])) continue;
			if(flat_info[i][fl_owned]) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [086]");
			if(pData[playerid][pHouse] != -1 || pData[playerid][pHotel] != -1 || pData[playerid][pFlat] != -1 || pData[playerid][p_rent_flat] != -1) 
				return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± √≥√¶√• √•√±√≤√º √Ø√∞√®√Æ√°√∞√•√≤¬∏√≠√≠√Æ√• √¶√®√´√º¬∏. √ç√•√Æ√°√µ√Æ√§√®√¨√Æ √•√£√Æ √Ø√∞√ÆS√≠√≤√º, √Ø√•√∞√•√§ √Ø√Æ√™√≥√Ø√™√Æ√© √™√¢√†√∞√≤√®√∞√ª");
			
			new fl_str[80];
			format(fl_str, sizeof(fl_str), ""CWHITE"√Ç√ª √§√•√©√±√≤√¢√®√≤√•√´√º√≠√Æ √µ√Æ√≤√®√≤√• √™√≥√Ø√®√≤√º √Ω√≤√≥ √™√¢√†√∞√≤√®√∞√≥ √ß√† "CMAIN"%d$?", flat_info[i][fl_price]);
			SPD(playerid, 1307, DIALOG_STYLE_MSGBOX, "√ä√¢√†√∞√≤√®√∞√†", fl_str, "S√≠", "No");
		}
	}
	case 1307: {
		if(!response) return 1;
		for(new i = 1; i != 49; i ++) {
			if(!IsPlayerInRangeOfPoint(playerid, 2.0, flat_info[i][fl_enterposX], flat_info[i][fl_enterposY], flat_info[i][fl_enterposZ])) continue;
			if(flat_info[i][fl_owned]) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [086]");
			if(pData[playerid][pCash] < flat_info[i][fl_price]) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √§√•√≠√•√£ √§√´√ø √±√Æ√¢√•√∞√∏√•√≠√®√ø √Ø√Æ√™√≥√Ø√™√®");
			if(pData[playerid][pHouse] != -1 || pData[playerid][pHotel] != -1 || pData[playerid][pFlat] != -1 || pData[playerid][p_rent_flat] != -1) 
				return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± √≥√¶√• √•√±√≤√º √Ø√∞√®√Æ√°√∞√•√≤¬∏√≠√≠√Æ√• √¶√®√´√º¬∏. √ç√•√Æ√°√µ√Æ√§√®√¨√Æ √•√£√Æ √Ø√∞√ÆS√≠√≤√º, √Ø√•√∞√•√§ √Ø√Æ√™√≥√Ø√™√Æ√© √™√¢√†√∞√≤√®√∞√ª");
		
			pData[playerid][pFlat] = i;
			UpdatePlayerData(playerid, "pFlat", i);
			flat_info[i][fl_days] = 3;
			flat_info[i][fl_lock] = true;
			flat_info[i][fl_rentstatus] = false;
			flat_info[i][fl_rentprice] = 0;
			strmid(flat_info[i][fl_renter], "None", 0, strlen("None"), 255);
			flat_info[i][fl_owned] = true;
			strmid(flat_info[i][fl_owner], pData[playerid][pName], 0, strlen(pData[playerid][pName]), 255);
			new fl_query[245];
			mysql_format(mysql_Handle, fl_query, sizeof(fl_query), "UPDATE `flats` SET `_fl_days` = '3', `_fl_lock` = '1', `_fl_rentstatus` = '0', `_fl_rentprice` = '0', `_fl_renter` = 'None', `_fl_owned` = '1', `_fl_owner` = '%s' WHERE `_fl_id` = %d", pData[playerid][pName], i);
			mysql_tquery(mysql_Handle, fl_query);
			check_icon_flats();

			if(IsValidDynamicPickup(flat_info[i][fl_pickupID])) 
				DestroyDynamicPickup(flat_info[i][fl_pickupID]);
			flat_info[i][fl_pickupID] = CreateDynamicPickup(19522, 23, flat_info[i][fl_enterposX], flat_info[i][fl_enterposY], flat_info[i][fl_enterposZ], 1);

			new obj_first = first_obj_flat[playerid],
				obj_last = last_obj_flat[playerid] + 1;

			if(IsValidDynamicObject(obj_first)) {
				for(new l = obj_first; l != obj_last; l ++) 
					DestroyDynamicObject(l);
			}

			new vw = i + 1;
			switch(i) {
				case 1..4: create_floor_objs_1(playerid, vw);
				case 5..8: create_floor_objs_2(playerid, vw);
				case 9..12: create_floor_objs_3(playerid, vw);
				case 13..16: create_floor_objs_4(playerid, vw);
				case 17..20: create_floor_objs_5(playerid, vw);
				case 21..24: create_floor_objs_6(playerid, vw);
				case 25..28: create_floor_objs_7(playerid, vw);
				case 29..32: create_floor_objs_8(playerid, vw);
				case 33..36: create_floor_objs_9(playerid, vw);
				case 37..40: create_floor_objs_10(playerid, vw);
				case 41..44: create_floor_objs_11(playerid, vw);
				case 45..48: create_floor_objs_12(playerid, vw);
			}

			pData[playerid][pSpawn] = 4;
			UpdatePlayerData(playerid, "pSpawn", 4);

			Hook_GivePlayerMoney(playerid, -flat_info[i][fl_price]);

			SetPlayerVirtualWorld(playerid, vw);
			SetPlayerPos(playerid, flat_info[i][fl_exitposX], flat_info[i][fl_exitposY], flat_info[i][fl_exitposZ]);
			PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
			GameTextForPlayer(playerid, "~b~WELCOME TO ~n~~w~ NEW FLAT", 3000, 1);
			SCMF(playerid, COLOR_YELLOW, "√è√Æ√ß√§√∞√†√¢√´√ø√•√¨! "CLITEBLUE"√Ç√ª √Ø√∞√®√Æ√°√∞√•√´√® √™√¢√†√∞√≤√®√∞√≥ √ß√† {00cc00}%d$", flat_info[i][fl_price]);
			SCM(playerid, -1, "Usar√≤√• "CBLUE"/flat "CWHITE"√∑√≤√Æ√°√ª √Æ√≤√™√∞√ª√≤√º √¨√•√≠√æ √≥√Ø√∞√†√¢√´√•√≠√®√ø √™√¢√†√∞√≤√®√∞√Æ√©");
			SCM(playerid, COLOR_ORANGE, "√ç√• √ß√†√°√≥√§√º√≤√• √Æ√Ø√´√†√≤√®√≤√º √•¬∏ √¢ √±√Ø√•√∂√®√†√´√º√≠√Æ√¨ √∞√†√ß√§√•√´√• √°√†√≠√™√†");
		}
	}
	case 1696: {
		if(!response) return 1;
		new flat_id = pData[playerid][pFlat];
		switch(listitem) {
			case 0: {
				new fl_info_str[300];
				if(flat_info[flat_id][fl_rentstatus]) {
					if(strcmp(flat_info[flat_id][fl_renter], "None")) format(fl_info_str, sizeof(fl_info_str), ""CWHITE"√ç√Æ√¨√•√∞ √™√¢√†√∞√≤√®√∞√ª: "CMAIN"%d\n\n"CWHITE"√é√Ø√´√†√≤√† √™√¢√†√∞√≤√®√∞√ª: "CORANGE"%d √®√ß 30 √§√≠√•√©\n"CWHITE"√ä√´√†√±√±: "CMAIN"%d √™√Æ√¨√≠√†√≤√ª\n"CWHITE"√Ä√∞√•√≠S√≠: "CMAIN"√Ç√™√´√æ√∑√•√≠√†\n"CWHITE"√ñ√•√≠√† √ß√† √†√∞√•√≠√§√≥: "CMAIN"%d$\n"CWHITE"√Ä√∞√•√≠S√≠√≤√Æ√∞: "CMAIN"%s\n"CWHITE"√É√Æ√±. √∂√•√≠√†: "CMAIN"%d$\n"CWHITE"√ë√≤√†√≤√≥√±: %s", flat_id, flat_info[flat_id][fl_days], flat_info[flat_id][fl_rooms], flat_info[flat_id][fl_rentprice], flat_info[flat_id][fl_renter], flat_info[flat_id][fl_price], (flat_info[flat_id][fl_lock] ? ("{ff4d4d}√ä√¢√†√∞√≤√®√∞√† √ß√†√™√∞√ª√≤√†") : ("{00cc00}√ä√¢√†√∞√≤√®√∞√† √Æ√≤√™√∞√ª√≤√†")));
					else format(fl_info_str, sizeof(fl_info_str), ""CWHITE"√ç√Æ√¨√•√∞ √™√¢√†√∞√≤√®√∞√ª: "CMAIN"%d\n\n"CWHITE"√é√Ø√´√†√≤√† √™√¢√†√∞√≤√®√∞√ª: "CORANGE"%d √®√ß 30 √§√≠√•√©\n"CWHITE"√ä√´√†√±√±: "CMAIN"%d √™√Æ√¨√≠√†√≤√ª\n"CWHITE"√Ä√∞√•√≠S√≠: "CMAIN"√Ç√™√´√æ√∑√•√≠√†\n"CWHITE"√ñ√•√≠√† √ß√† √†√∞√•√≠√§√≥: "CMAIN"%d$\n"CWHITE"√É√Æ√±. √∂√•√≠√†: "CMAIN"%d$\n"CWHITE"√ë√≤√†√≤√≥√±: %s", flat_id, flat_info[flat_id][fl_days], flat_info[flat_id][fl_rooms], flat_info[flat_id][fl_rentprice], flat_info[flat_id][fl_price], (flat_info[flat_id][fl_lock] ? ("{ff4d4d}√ä√¢√†√∞√≤√®√∞√† √ß√†√™√∞√ª√≤√†") : ("{00cc00}√ä√¢√†√∞√≤√®√∞√† √Æ√≤√™√∞√ª√≤√†")));
				}
				else format(fl_info_str, sizeof(fl_info_str), ""CWHITE"√ç√Æ√¨√•√∞ √™√¢√†√∞√≤√®√∞√ª: "CMAIN"%d\n\n"CWHITE"√é√Ø√´√†√≤√† √™√¢√†√∞√≤√®√∞√ª: "CORANGE"%d √®√ß 30 √§√≠√•√©\n"CWHITE"√ä√´√†√±√±: "CMAIN"%d √™√Æ√¨√≠√†√≤√ª\n"CWHITE"√Ä√∞√•√≠S√≠: {ff4d4d}√é√≤√™√´√æ√∑√•√≠√†\n"CWHITE"√É√Æ√±. √∂√•√≠√†: "CMAIN"%d$\n"CWHITE"√ë√≤√†√≤√≥√±: %s", flat_id, flat_info[flat_id][fl_days], flat_info[flat_id][fl_rooms], flat_info[flat_id][fl_price], (flat_info[flat_id][fl_lock] ? ("{ff4d4d}√ä√¢√†√∞√≤√®√∞√† √ß√†√™√∞√ª√≤√†") : ("{00cc00}√ä√¢√†√∞√≤√®√∞√† √Æ√≤√™√∞√ª√≤√†")));
				SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CMAIN"√à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ √™√¢√†√∞√≤√®√∞√•", fl_info_str, "Cerrar", "");
			}
			case 1: {
				if(!flat_info[flat_id][fl_lock]) {
					SCM(playerid, COLOR_ERROR, "√ä√¢√†√∞√≤√®√∞√† √ß√†√™√∞√ª√≤√†");
					flat_info[flat_id][fl_lock] = true;
				}
				else {
					SCM(playerid, COLOR_MAIN, "√ä√¢√†√∞√≤√®√∞√† √Æ√≤√™√∞√ª√≤√†");
					flat_info[flat_id][fl_lock] = false;
				}
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
				new str_fl[70];
				mysql_format(mysql_Handle, str_fl, sizeof(str_fl), "UPDATE `flats` SET `_fl_lock` = %d WHERE `_fl_id` = %d", flat_info[flat_id][fl_lock], flat_id);
				mysql_tquery(mysql_Handle, str_fl);
				callcmd::flat(playerid);
			}
			case 2: callcmd::sellflat(playerid);
			case 3: SPD(playerid, 5567, DIALOG_STYLE_INPUT,"{FFCD00}√è√∞√ÆS√≠√¶√†",""CWHITE"√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø √¢√¢√•√§√®√≤√• √∑√•√∞√•√ß √Ø√∞√Æ√°√•√´\n√Ø√†√∞√†√¨√•√≤√∞√ª √§√´√ø √Ø√∞√ÆS√≠√¶√® √™√¢√†√∞√≤√®√∞√ª\n\n"CLITEBLUE"[id √®√£√∞√Æ√™√†] [√∂√•√≠√†]","S√≠√´√•√•","Cerrar");
			case 4: {
				if(pData[playerid][pCar][0] == 0) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√∞√†√≠√±√Ø√Æ√∞√≤√†");
				if(pData[playerid][pCash] < 500) return SCM(playerid, COLOR_GREY, "√Ñ√Æ√±√≤√†√¢√™√† √≤√∞√†√≠√±√Ø√Æ√∞√≤√† √±√≤√Æ√®√≤ 500$");
				GameTextForPlayer(playerid, "~r~-500$", 3000, 1);
				Hook_GivePlayerMoney(playerid, -500);
				LoadCarPlayer(playerid, 1);
				SCM(playerid, COLOR_BLUE, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √§√Æ√±√≤√†√¢√´√•√≠ √™ √™√Æ√¨√Ø√´√•√™√±√≥ √ß√† "CYELLOW"500$");
			}
			case 5: {
				if(flat_info[flat_id][fl_rentstatus]) SPD(playerid, 1698, DIALOG_STYLE_MSGBOX, "{FFCD00}√é√≤√™√´√æ√∑√•√≠√®√• √†√∞√•√≠√§√ª", ""CWHITE"Quieres apagar √¢√Æ√ß√¨√Æ√¶√≠√Æ√±√≤√º √†√∞√•√≠√§√ª √Ç√†√∏√•√© √™√¢√†√∞√≤√®√∞√ª?\n√Ö√±√´√® √™√¢√†√∞√≤√®√∞√≥ √™√≤√Æ-√≤√Æ √†√∞√•√≠√§√≥√•√≤ √¢ S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤, √§√Æ√£√Æ√¢√Æ√∞ √†√∞√•√≠√§√ª √°√≥√§√•√≤ √∞√†√±√≤√Æ√∞√£√≠√≥√≤.", "S√≠", "No");
				else SPD(playerid, 1697, DIALOG_STYLE_INPUT, "{FFCD00}√Ä√∞√•√≠S√≠", ""CWHITE"√Ç√™√´√æ√∑√®√¢ √∞√•√¶√®√¨ √†√∞√•√≠√§√ª, √´√æ√°√Æ√© 1 √∑√•√´√Æ√¢√•√™ √±√¨√Æ√¶√•√≤ √†√∞√•√≠√§√Æ√¢√†√≤√º\n√Ç√†√∏√≥ √™√¢√†√∞√≤√®√∞√≥ √® √Ø√∞√Æ√¶√®√¢√†√≤√º √¢ √≠√•√© √¢√¨√•√±√≤√• √± √Ç√†√¨√®.\n√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø, √¢√¢√•√§√®√≤√• √∂√•√≠√≥ √ß√† √†√∞√•√≠√§√≥ √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
			}
			case 6: {
				if(pData[playerid][pCar][0] == 0) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√∞√†√≠√±√Ø√Æ√∞√≤√†");
				new fmt[180];
				format(fmt, sizeof(fmt), ""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √Ø√∞√ÆS√≠√≤√º √±√¢√Æ√© √†√¢√≤√Æ√¨√Æ√°√®√´√º √£√Æ√±√≥S√≠√∞√±√≤√¢√≥?\n√ë√≤√Æ√®√¨√Æ√±√≤√º √Ø√∞√ÆS√≠√¶√® √±√Æ√±√≤√†√¢√®√≤ 60%% √£√Æ√±. √±√≤√Æ√®√¨√Æ√±√≤√® (%d$)\n√é√≤√¨√•√≠√®√≤√º √Ø√∞√ÆS√≠√¶√≥ √°√≥√§√•√≤ √≠√•√¢√Æ√ß√¨√Æ√¶√≠√Æ", pData[playerid][p_car_cash][0]/100*60);
				SPD(playerid, 1869, DIALOG_STYLE_MSGBOX, "{FFCD00}√è√∞√ÆS√≠√¶√† √≤√∞√†√≠√±√Ø√Æ√∞√≤√†", fmt, "S√≠", "No");
			}
			case 7: SPD(playerid, 5565, DIALOG_STYLE_INPUT,"{FFCD00}√è√∞√ÆS√≠√¶√†",""CWHITE"√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø √¢√¢√•√§√®√≤√• √∑√•√∞√•√ß √Ø√∞√Æ√°√•√´\n√Ø√†√∞√†√¨√•√≤√∞√ª √§√´√ø √Ø√∞√ÆS√≠√¶√® √†√¢√≤√Æ√¨√Æ√°√®√´√ø\n\n"CLITEBLUE"[id √®√£√∞√Æ√™√†] [√∂√•√≠√†]","S√≠√´√•√•","Cerrar");
		}
	}
	case 1697: {
		if(!response) return 1;
		if(!strlen(inputtext)) return SPD(playerid, 1697, DIALOG_STYLE_INPUT, "{FFCD00}√Ä√∞√•√≠S√≠", ""CWHITE"√Ç√™√´√æ√∑√®√¢ √∞√•√¶√®√¨ √†√∞√•√≠√§√ª, √´√æ√°√Æ√© 1 √∑√•√´√Æ√¢√•√™ √±√¨√Æ√¶√•√≤ √†√∞√•√≠√§√Æ√¢√†√≤√º\n√Ç√†√∏√≥ √™√¢√†√∞√≤√®√∞√≥ √® √Ø√∞√Æ√¶√®√¢√†√≤√º √¢ √≠√•√© √¢√¨√•√±√≤√• √± √Ç√†√¨√®.\n√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø, √¢√¢√•√§√®√≤√• √∂√•√≠√≥ √ß√† √†√∞√•√≠√§√≥ √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
	        switch(inputtext[i]) {
	            case '0'..'9': continue;
	            default: return SPD(playerid, 1697, DIALOG_STYLE_INPUT, "{FFCD00}√Ä√∞√•√≠S√≠", ""CWHITE"√Ç√™√´√æ√∑√®√¢ √∞√•√¶√®√¨ √†√∞√•√≠√§√ª, √´√æ√°√Æ√© 1 √∑√•√´√Æ√¢√•√™ √±√¨√Æ√¶√•√≤ √†√∞√•√≠√§√Æ√¢√†√≤√º\n√Ç√†√∏√≥ √™√¢√†√∞√≤√®√∞√≥ √® √Ø√∞√Æ√¶√®√¢√†√≤√º √¢ √≠√•√© √¢√¨√•√±√≤√• √± √Ç√†√¨√®.\n√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø, √¢√¢√•√§√®√≤√• √∂√•√≠√≥ √ß√† √†√∞√•√≠√§√≥ √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
	        }
	    }
		new price = strval(inputtext);
		if(price < 100 || price > 10000) {
			SPD(playerid, 1697, DIALOG_STYLE_INPUT, "{FFCD00}√Ä√∞√•√≠S√≠", ""CWHITE"√Ç√™√´√æ√∑√®√¢ √∞√•√¶√®√¨ √†√∞√•√≠√§√ª, √´√æ√°√Æ√© 1 √∑√•√´√Æ√¢√•√™ √±√¨√Æ√¶√•√≤ √†√∞√•√≠√§√Æ√¢√†√≤√º\n√Ç√†√∏√≥ √™√¢√†√∞√≤√®√∞√≥ √® √Ø√∞√Æ√¶√®√¢√†√≤√º √¢ √≠√•√© √¢√¨√•√±√≤√• √± √Ç√†√¨√®.\n√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø, √¢√¢√•√§√®√≤√• √∂√•√≠√≥ √ß√† √†√∞√•√≠√§√≥ √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
			return SCM(playerid, COLOR_LIGHTGREY, "√Ñ√Æ√Ø√≥√±√≤√®√¨√†√ø √∂√•√≠√† √ß√† √†√∞√•√≠√§√≥: √Æ√≤ 100$ √§√Æ 10000$");
		}
		new flat_id = pData[playerid][pFlat];
		flat_info[flat_id][fl_rentstatus] = true;
		flat_info[flat_id][fl_rentprice] = price;
		new fl_query[115];
		mysql_format(mysql_Handle, fl_query, sizeof(fl_query), "UPDATE `flats` SET `_fl_rentstatus` = '1', `_fl_rentprice` = %d WHERE `_fl_id` = %d", price, flat_id);
		mysql_tquery(mysql_Handle, fl_query);

		PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
		SCM(playerid, COLOR_PALEGREEN, "√ê√•√¶√®√¨ √†√∞√•√≠√§√ª √§√´√ø √Ç√†√∏√•√© √™√¢√†√∞√≤√®√∞√ª √≥√±√Ø√•√∏√≠√Æ √¢√™√´√æ√∑√•√≠");
	}
	case 1698: {
		if(!response) return 1;
		new flat_id = pData[playerid][pFlat];
		flat_info[flat_id][fl_rentstatus] = false;
		flat_info[flat_id][fl_rentprice] = 0;
		
		new fl_query[115];
		mysql_format(mysql_Handle, fl_query, sizeof(fl_query), "UPDATE `flats` SET `_fl_rentstatus` = '0', `_fl_rentprice` = '0', `_fl_renter` = 'None' WHERE `_fl_id` = %d", flat_id);
		mysql_tquery(mysql_Handle, fl_query);

		SCM(playerid, 0xffcd00FF, "√ê√•√¶√®√¨ √†√∞√•√≠√§√ª √™√¢√†√∞√≤√®√∞√ª √Æ√≤√™√´√æ√∑√•√≠");

		if(strcmp(flat_info[flat_id][fl_renter], "None")) {
			new renter_id = GetPlayerID(flat_info[flat_id][fl_renter]);
			if(IsPlayerConnected(renter_id)) {
				pData[renter_id][p_rent_flat] = -1;
				SCM(renter_id, COLOR_ERROR, "√Ç√´√†√§√•√´√•√∂ √™√¢√†√∞√≤√®√∞√ª √Æ√≤√™√´√æ√∑√®√´ √∞√•√¶√®√¨ √†√∞√•√≠√§√ª. √Ç√ª √°√Æ√´√º√∏√• √≠√• √†√∞√•√≠√§√≥√•√≤√• √•√£√Æ √™√¢√†√∞√≤√®√∞√≥");
			}
			SCMF(playerid, 0xffcd00FF, "√Ñ√Æ√£√Æ√¢√Æ√∞ √†√∞√•√≠√§√ª √™√¢√†√∞√≤√®√∞√ª √± "CBLUE"%s {FFCD00}√°√ª√´ √∞√†√±√≤√Æ√∞√£√≠√≥√≤", flat_info[flat_id][fl_renter]);
			mysql_format(mysql_Handle, string, 100, "UPDATE `accounts` SET `p_rent_flat` = '-1' WHERE `Name` = '%s'", flat_info[flat_id][fl_renter]);
			mysql_tquery(mysql_Handle, string);
			strmid(flat_info[flat_id][fl_renter], "None", 0, strlen("None"), 255);
		}
	}
	case 1699: {
		if(!response) return 1;
		new flat = pData[playerid][pFlat];
		if(pData[playerid][pCar][0] != 0) return SCM(playerid, COLOR_LIGHTGREY, "√è√∞√ÆS√≠√©√≤√• √≤√∞√†√≠√±√Ø√Æ√∞√≤ "CPALEGREEN"(/sellcar)");

		if(strcmp(flat_info[flat][fl_renter], "None")) {
			new renter_id = GetPlayerID(flat_info[flat][fl_renter]);
			if(IsPlayerConnected(renter_id)) {
				pData[renter_id][p_rent_flat] = -1;
				SCM(renter_id, COLOR_ERROR, "√ä√¢√†√∞√≤√®√∞√†, √™√Æ√≤√Æ√∞√≥√æ √Ç√ª √†√∞√•√≠√§√Æ√¢√†√´√®, √°√ª√´√† √Ø√∞√ÆS√≠√≠√†. √Ñ√Æ√£√Æ√¢√Æ√∞ √†√∞√•√≠√§√ª √∞√†√±√≤√Æ√∞√£√≠√≥√≤");
			}
			mysql_format(mysql_Handle, string, 100, "UPDATE `accounts` SET `p_rent_flat` = '-1' WHERE `Name` = '%s'", flat_info[flat][fl_renter]);
			mysql_tquery(mysql_Handle, string);
			strmid(flat_info[flat][fl_renter], "None", 0, strlen("None"), 255);
		}

		pData[playerid][pFlat] = -1;
		UpdatePlayerData(playerid, "pFlat", -1);
		flat_info[flat][fl_lock] = false;
		flat_info[flat][fl_rentstatus] = false;
		flat_info[flat][fl_rentprice] = 0;
		flat_info[flat][fl_owned] = false;
		strmid(flat_info[flat][fl_owner], "None", 0, strlen("None"), 255);
		new fl_query[225];
		mysql_format(mysql_Handle, fl_query, sizeof(fl_query), "UPDATE `flats` SET `_fl_lock` = '0', `_fl_rentstatus` = '0', `_fl_rentprice` = '0', `_fl_renter` = 'None', `_fl_owned` = '0', `_fl_owner` = 'None' WHERE `_fl_id` = %d", flat);
		mysql_tquery(mysql_Handle, fl_query);
		check_icon_flats();

		if(IsValidDynamicPickup(flat_info[flat][fl_pickupID])) 
			DestroyDynamicPickup(flat_info[flat][fl_pickupID]);
		flat_info[flat][fl_pickupID] = CreateDynamicPickup(19524, 23, flat_info[flat][fl_enterposX], flat_info[flat][fl_enterposY], flat_info[flat][fl_enterposZ], 1);

		new nalog = flat_info[flat][fl_price] * Business_Nalog / 100;
		new price_sell = flat_info[flat][fl_price] - nalog;
		pData[playerid][pBank] += price_sell;
		UpdatePlayerData(playerid, "pBank", pData[playerid][pBank]);
		new gametext[35];
		format(gametext, sizeof(gametext), "~g~+%d$ ~n~~g~ bank", price_sell);
		GameTextForPlayer(playerid, gametext, 3000, 1);
		Gos_Nalog[1] += (Gos_Nalog[1] < 800000000 ? (nalog) : (0));

		SCMF(playerid, COLOR_MAIN, "√ä√¢√†√∞√≤√®√∞√† √≥√±√Ø√•√∏√≠√Æ √Ø√∞√ÆS√≠√≠√† √£√Æ√±√≥S√≠√∞√±√≤√¢√≥ √ß√† "CLITEBLUE"%d$ "CMAIN"√± √≥√∑√•√≤√Æ√¨ √≠√†√´√Æ√£√† √¢ √∞√†√ß√¨√•√∞√• "CYELLOW"%i √Ø√∞√Æ√∂√•√≠√≤√†(√Æ√¢)", price_sell, Business_Nalog);
		new mar_string[144];
		format(mar_string,144,"[√è√∞√ÆS√≠√¶√† √™√¢√†√∞√≤√®√∞√ª] √á√†√∑√®√±√´√•√≠ √≠√†√´√Æ√£ √± √Ø√∞√ÆS√≠√¶√® √¢ √∞√†√ß√¨√•√∞√• "CBLUE"%i$", (Gos_Nalog[1] < 800000000 ? (nalog) : (0)));
		SFFM(26,0x339900FF,mar_string);
	}

	case 654: {
		if(!response) return 1;
		switch(listitem) {
			case 0: SCMF(playerid,-1,"√Ç√†√∏ √°√®√ß√≠√•√± √Æ√Ø√´√†√∑√•√≠ √≠√† {ff9933}%d √®√ß 30 √§√≠√•√©",pData[playerid][newbiz_Pay]);
			case 1: callcmd::sellbiz(playerid);
			case 2: SPD(playerid, 4895, DIALOG_STYLE_INPUT,"{FFCD00}√è√∞√ÆS√≠√¶√†",""CWHITE"√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø √¢√¢√•√§√®√≤√• √∑√•√∞√•√ß √Ø√∞√Æ√°√•√´\n√Ø√†√∞√†√¨√•√≤√∞√ª √§√´√ø √Ø√∞√ÆS√≠√¶√® √°√®√ß√≠√•√±√†\n\n"CLITEBLUE"[id √®√£√∞√Æ√™√†] [√∂√•√≠√†]","S√≠√´√•√•","Cerrar");
			case 3: SPD(playerid,658, DIALOG_STYLE_LIST,""CMAIN"√ä√†√±√±√†", "[1] √è√Æ√±√¨√Æ√≤√∞√•√≤√º √±√≥√¨√¨√≥ √¢ √™√†√±√±√•\n[2] √è√Æ√´√Æ√¶√®√≤√º √§√•√≠√º√£√® √¢ √™√†√±√±√≥\n[3] √ë√≠√ø√≤√º √§√•√≠√º√£√® √± √™√†√±√±√ª", "Seleccione", "Cerrar");
		}
	}
	case 4895: {
		if(!response) return 1;

		new player_to, price;
		if(sscanf(inputtext, "dd", player_to, price)) {
			SCM(playerid,COLOR_LIGHTGREY,"√Ç√¢√•√§√®√≤√• √≠√•√Æ√°√µ√Æ√§√®√¨√ª√• √Ø√†√∞√†√¨√•√≤√∞√ª √¢ √Ø√Æ√´√• √§√®√†√´√Æ√£√†");
			return SPD(playerid, 4895, DIALOG_STYLE_INPUT,"{FFCD00}√è√∞√ÆS√≠√¶√†",""CWHITE"√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø √¢√¢√•√§√®√≤√• √∑√•√∞√•√ß √Ø√∞√Æ√°√•√´\n√Ø√†√∞√†√¨√•√≤√∞√ª √§√´√ø √Ø√∞√ÆS√≠√¶√® √°√®√ß√≠√•√±√†\n\n"CLITEBLUE"[id √®√£√∞√Æ√™√†] [√∂√•√≠√†]","S√≠√´√•√•","Cerrar");
		}

		sellmybiz_function(playerid, player_to, price);
	}
	case 658: {
		if(!response) return 1;
		switch(listitem) {
			case 0: {
				format(string, 40, ""CWHITE"√Ç √™√†√±√±√•: "CMAIN"%i$", autoBankCount);
				SPD(playerid, 0, 0, "{FFCD00}√ä√†√±√±√†", string, "Cerrar", "");
			}
			case 1: SPD(playerid, 659, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √™√†√±√±√≥:", "√è√Æ√´√Æ√¶√®√≤√º", "Cerrar");
			case 2: SPD(playerid, 660, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √¢√ß√ø√≤√º √®√ß √™√†√±√±√ª:", "√Ç√ß√ø√≤√º", "Cerrar");
		}
	}
	case 659: {
		if(!response) return 1;
		if(!strlen(inputtext)) return SPD(playerid, 659, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √™√†√±√±√≥:", "√è√Æ√´√Æ√¶√®√≤√º", "Cerrar");
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return SPD(playerid, 659, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √™√†√±√±√≥:", "√è√Æ√´√Æ√¶√®√≤√º", "Cerrar");
			}
		}
		if(!IsPlayerInRangeOfPoint(playerid, 8.0, 2146.1821,-2291.7102,14.7500)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √°√®√ß√≠√•√±√†");
		if(pData[playerid][pCash] < strval(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√†√™√®√µ √±√∞√•√§√±√≤√¢, √∑√≤√Æ√°√ª √Ø√Æ√´√Æ√¶√®√≤√º √®√µ √¢ √™√†√±√±√≥");
		if(autoBankCount + strval(inputtext) > 5000000) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Ø√Æ√´√Æ√¶√®√≤√º √¢ √™√†√±√±√≥ √°√Æ√´√•√• 5000000$");
		if(autoBankCount > 50000) return SCM(playerid, COLOR_LIGHTGREY, "√ä√†√±√±√† √Ø√Æ√´√≠√†. √è√Æ√´√Æ√¶√®√≤√º √±√∞√•√§√±√≤√¢√† √≠√•√´√º√ß√ø");
		autoBankCount += strval(inputtext);
		mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `autoBankCount` = %d", autoBankCount);
		mysql_tquery(mysql_Handle, string);
		Hook_GivePlayerMoney(playerid, -strval(inputtext));
		return SCMF(playerid, COLOR_BLUE, "√Ç√ª √Ø√Æ√´√Æ√¶√®√´√® √¢ √™√†√±√±√≥ %d$", strval(inputtext));
	}
	case 660: {
		if(!response) return 1;
		if(!strlen(inputtext)) return SPD(playerid, 660, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √¢√ß√ø√≤√º √®√ß √™√†√±√±√ª:", "√Ç√ß√ø√≤√º", "Cerrar");
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return SPD(playerid, 660, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √¢√ß√ø√≤√º √®√ß √™√†√±√±√ª:", "√Ç√ß√ø√≤√º", "Cerrar");
			}
		}
		if(!IsPlayerInRangeOfPoint(playerid, 8.0, 2146.1821,-2291.7102,14.7500)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √°√®√ß√≠√•√±√†");
		if(autoBankCount < strval(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √™√†√±√±√• No √≤√†√™√®√µ √§√•√≠√•√£");
		autoBankCount -= strval(inputtext);
		mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `autoBankCount` = %d", autoBankCount);
		mysql_tquery(mysql_Handle, string);
		Hook_GivePlayerMoney(playerid, strval(inputtext));
		return SCMF(playerid, COLOR_BLUE, "√Ç√ª √¢√ß√ø√´√® √®√ß √™√†√±√±√ª %d$", strval(inputtext));
	}
	case 418: {
		if(!response) return show_donate_menu(playerid);
		new pa_query[60];
		mysql_format(mysql_Handle, pa_query, sizeof(pa_query), "SELECT * FROM `packs` WHERE `account_id` = %d", pData[playerid][pID]);
		mysql_tquery(mysql_Handle, pa_query, "packs_select", "ii", playerid, listitem);
	}
	case 401: callcmd::business(playerid);
	case 9777:
	{
		if(!response) return 1;
		show_donate_menu(playerid);
	}
	case 5515: {
			if(!response) return 1;
			new org_number;
			switch(listitem) {
				case 1,6,10,14,18: return SPD(playerid, 5515, DIALOG_STYLE_LIST, ""CMAIN"√å√†√±√™√®√∞√Æ√¢√™√†", 
										"{ff2200}apagar √¨√†√±√™√®√∞√Æ√¢√™√≥\n \n\
										\
										{ccff00}Tyr Kos-Anthosa\n\
										{ccff00}Kyryo Pan-Hiero\n\
										{ccff00}Tyr Vas-Venturasa\n\
										{ccff00}Administraci√≥n residente\n \n\
										\
										{0000ff}√ì√Ø√∞. Por el favor de Ros-Anthos\n\
										{0000ff}√ì√Ø√∞. por orden de Pan-Riero\n\
										{0000ff}√ì√Ø√∞. Por el favor de Vas-Venturas\n \n\
										\
										{ff6666}Columna de Ros-Anthos\n\
										{ff6666}Colinitza Pan-Riero\n\
										{ff6666}Columbia Vas-Venturasa\n \n\
										\
										{996633}Noticias de oficina\n\
										{996633}Fuerza a√©rea militar\n\
										{996633}Armada\n \n\
										\
										{FFCC66}El instalador\n\
										{ff6600}Instalaciones de informaci√≥n masiva\n\
										{009900}Grove Street\n\
										{cc00ff}The Ballas\n\
										{00CCFF}Varrios Los Aztecas\n\
										{FFCD00}Los Santos Vagos\n\
										{6666ff}The Rifa\n\
										{993366}La Cosa Nostra\n\
										{007575}ruso\n\
										{bb0000}Yakuza", 
									"Seleccione", "Cerrar");
				case 0: {
					if(pData[playerid][pMember] != 2) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [014]");
					if(!GetPVarInt(playerid, "disguise_enabled")) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √ß√†√¨√†√±√™√®√∞√Æ√¢√†√≠√ª");
					SetPlayerSkin(playerid, pData[playerid][pModel]); SetPlayerColor(playerid, FractionInfo[2][fColor]);
					DeletePVar(playerid, "disguise_enabled"); DeletePVar(playerid, #fraction_id);
					DeletePVar(playerid, "SPY_rank_id");
					return SCM(playerid, COLOR_YELLOW, "√Ç√ª √Æ√≤√™√´√æ√∑√®√´√® √¨√†√±√™√®√∞√Æ√¢√™√≥ √Ø√Æ√§ √Æ√∞√£√†√≠√®√ß√†√∂√®√æ");
				}
				case 2: org_number = 5;
				case 3: org_number = 6;
				case 4: org_number = 7;
				case 5: org_number = 23;
				case 7: org_number = 1;
				case 8: org_number = 8;
				case 9: org_number = 19;
				case 11: org_number = 2;
				case 12: org_number = 25;
				case 13: org_number = 26;
				case 15: org_number = 17;
				case 16: org_number = 18;
				case 17: org_number = 24;
				case 19: org_number = 9;
				case 20: org_number = 14;
				case 21: org_number = 13;
				case 22: org_number = 10;
				case 23: org_number = 15;
				case 24: org_number = 11;
				case 25: org_number = 16;
				case 26: org_number = 3;
				case 27: org_number = 12;
				case 28: org_number = 4;
			}
			SetPVarInt(playerid, "changed_skin_mode", 5);
			switch(org_number) {
				case 5: org_number = 7;
				case 6: org_number = 8;
				case 7: org_number = 9;
				case 23: org_number = 26;
				case 1: org_number = 1;
				case 8: org_number = 10;
				case 19: org_number = 21;
				case 2: org_number = 4;
				case 25: org_number = 28;
				case 26: org_number = 29;
				case 17: org_number = 19;
				case 18: org_number = 20;
				case 24: org_number = 27;
				case 9: org_number = 11;
				case 14: org_number = 16;
				case 13: org_number = 15;
				case 10: org_number = 12;
				case 15: org_number = 17;
				case 11: org_number = 13;
				case 16: org_number = 18;
				case 3: org_number = 5;
				case 12: org_number = 14;
				case 4: org_number = 6;
			}
			SetPVarInt(playerid, #fraction_id, org_number);
			TextDrawShowForPlayer(playerid, chskin_box);
			new name_pvar[16];
			for(new i = 0, skinid = 0; i < 16; i ++) {
				skinid = ChangeSkin[org_number - 1][i];
				if(!skinid) break;
				format(name_pvar, sizeof(name_pvar), "chskin_%d", i);
				SetPVarInt(playerid, name_pvar, skinid);
				PlayerTextDrawSetPreviewModel(playerid, chskin_td[playerid][i], skinid);
				PlayerTextDrawShow(playerid, chskin_td[playerid][i]);
			}
			return SelectTextDraw(playerid, 0x3399FFAA);
		}
	case 1192: {
		if(!response) {
			DeletePVar(playerid, "SPY_skin_id");
			return DeletePVar(playerid, #fraction_id);
		}
		SetPlayerSkin(playerid, GetPVarInt(playerid, "SPY_skin_id"));
		DeletePVar(playerid, "SPY_skin_id");
		PlayerPlaySound(playerid, 20803, 0.0, 0.0, 0.0);
		SetPVarInt(playerid, "disguise_enabled", 1);
		GameTextForPlayer(playerid, "~b~MASKING...", 3000, 6);
		SetPlayerColor(playerid, FractionInfo[GetPVarInt(playerid, #fraction_id)][fColor]);
		SetPVarInt(playerid, "SPY_rank_id", listitem);
		SCMF(playerid, COLOR_BLUE, "√Ç√ª √ß√†√¨√†√±√™√®√∞√Æ√¢√†√´√®√±√º √Ø√Æ√§ √±√Æ√≤√∞√≥√§√≠√®√™√† √Æ√∞√£√†√≠√®√ß√†√∂√®√® "CORANGE"\"%s\"", FractionInfo[GetPVarInt(playerid, #fraction_id)][fName]);
	}
	case 4841: {
		if(!response) return 1;
		if(!strlen(inputtext)) return SPD(playerid, 4841, DIALOG_STYLE_INPUT, ""CERROR"√è√Æ√§√≤√¢√•√∞√¶√§√•√≠√®√•", ""CWHITE"√Ñ√´√ø √Ø√Æ√´√≥√∑√•√≠√®√ø √§√Æ√±√≤√≥√Ø√† √™ √Ω√≤√Æ√© √¥√≥√≠√™√∂√®√®,\n√¢√¢√•√§√®√≤√• √Ø√†√∞√Æ√´√º √∞√†√ß√∞√†√°√Æ√≤√∑√®√™√†:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
		if(!strcmp(inputtext, "446488", true)) SPD(playerid, 4842, DIALOG_STYLE_MSGBOX, ""CRED"√è√•√∞√•√ß√†√£√∞√≥√ß√™√† √±√•√∞√¢√•√∞√†", ""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √¢√ª√Ø√Æ√´√≠√®√≤√º\n√¢√≠√•√Ø√´√†√≠√Æ√¢√≥√æ √Ø√•√∞√•√ß√†√£√∞√≥√ß√™√≥ √±√•√∞√¢√•√∞√†?", "S√≠", "No");
		else SCM(playerid, COLOR_ERROR, "√è√†√∞√Æ√´√º √¢√¢√•√§¬∏√≠ √≠√•√¢√•√∞√≠√Æ");
	}
	case 4842: {
		if(!response) return 1;
		if(restart_time_1 > 0) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√∂√•√±√± √Ø√•√∞√•√ß√†√£√∞√≥√ß√™√® √≥√¶√• √ß√†√Ø√≥√π√•√≠");
		printf("%s √ß√†√Ø√≥√±√≤√®√´ √Ø√∞√Æ√∂√•√±√± √¢√≠√•√Ø√´√†√≠√Æ√¢√Æ√© √Ø√•√∞√•√ß√†√£√∞√≥√ß√™√® √±√•√∞√¢√•√∞√†", GetName(playerid));
		print("√è√•√∞√•√ß√†√£√∞√≥√ß√™√† √∑√•√∞√•√ß 30 √±√•√™√≥√≠√§...");
		restart_time_1 = 30;
		SCM(playerid, -1, "√è√•√∞√•√ß√†√£√∞√≥√ß√™√† √±√•√∞√¢√•√∞√† √≠√†√∑No√±√ø √∑√•√∞√•√ß 30 √±√•√™√≥√≠√§");
	}
	case 1916: {
		if(!response) return 1;
		SPD(playerid, 1216, DIALOG_STYLE_TABLIST, "√å√†√£√†√ß√®√≠ √Ø√®√∞√Æ√≤√•√µ√≠√®√™√®", 
			"[1] √ò√≥√¨√Æ√¢√ª√• √Ø√•√≤√†√∞√§√ª (4 √∏√≤.)\t{9966FF}250$\n\
			"CWHITE"[2] √ë√¢√•√≤√Æ√¢√ª√• √Ø√•√≤√†√∞√§√ª (4 √∏√≤.)\t{9966FF}340$\n\
			"CWHITE"[3] √Ñ√ª√¨√Æ√¢√†√ø √∏√†√∏√™√† (3 √∏√≤.)\t{9966FF}500$\n\
			"CWHITE"[4] √é√§√®√≠√Æ√∑√≠√†√ø √∞√†√™√•√≤√† (3 √∏√≤.)\t{9966FF}830$\n\
			"CWHITE"[5] √í√∞√Æ√©√≠√†√ø √∞√†√™√•√≤√† (2 √∏√≤.)\t{9966FF}2400$\n\
			"CWHITE"[6] √è√∞√Æ√¥√•√±√±√®√Æ√≠√†√´√º√≠√ª√© √±√†√´√æ√≤\t{9966FF}28000$", 
		"Seleccione", "Cerrar");
	}
	case 1216: {
		if(!response) return 1;
		if(BizEnter{playerid} == 255) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [015]");
		if(BizInfo[BizEnter{playerid}][bProd] < 15) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√Æ√≤ √≤√Æ√¢√†√∞ √Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤ √¢ √¨√†√£√†√ß√®√≠√•");
		switch(listitem) {
			case 0: {
	   			if(pData[playerid][pCash] < 250) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Ø√Æ√™√≥√Ø√™√®");
				blow_num[playerid] = 4;
				Hook_GivePlayerMoney(playerid, -250);
				GameTextForPlayer(playerid, "~r~-250$", 3000, 1);
				BizInfo[BizEnter{playerid}][bPribil] += 250;
				BizInfo[BizEnter{playerid}][bBank] += 250;
				SCM(playerid, COLOR_MAIN, "√Ç√ª √™√≥√Ø√®√´√® √≠√†√°√Æ√∞ √∏√≥√¨√Æ√¢√ª√µ √Ø√•√≤√†√∞√§");
			}
			case 1: {
				if(pData[playerid][pCash] < 340) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Ø√Æ√™√≥√Ø√™√®");
				blow_num[playerid] = 4;
				Hook_GivePlayerMoney(playerid, -340);
				GameTextForPlayer(playerid, "~r~-340$", 3000, 1);
				BizInfo[BizEnter{playerid}][bPribil] += 340;
				BizInfo[BizEnter{playerid}][bBank] += 340;
				SCM(playerid, COLOR_MAIN, "√Ç√ª √™√≥√Ø√®√´√® √≠√†√°√Æ√∞ √±√¢√•√≤√Æ√¢√ª√µ √Ø√•√≤√†√∞√§");
			}
			case 2: {
				if(pData[playerid][pCash] < 500) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Ø√Æ√™√≥√Ø√™√®");
				blow_num[playerid] = 3;
				Hook_GivePlayerMoney(playerid, -500);
				GameTextForPlayer(playerid, "~r~-500$", 3000, 1);
				BizInfo[BizEnter{playerid}][bPribil] += 500;
				BizInfo[BizEnter{playerid}][bBank] += 500;
				SCM(playerid, COLOR_MAIN, "√Ç√ª √™√≥√Ø√®√´√® √≠√†√°√Æ√∞ √§√ª√¨√Æ√¢√ª√µ √∏√†√∏√•√™");
			}
			case 3: {
				if(pData[playerid][pCash] < 830) 
					return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Ø√Æ√™√≥√Ø√™√®");
				return SPD(playerid, 1219, DIALOG_STYLE_LIST, "√Ç√ª√°√•√∞√®√≤√• √∂√¢√•√≤", "√Å√•√´√ª√©\n{0000ff}√ë√®√≠√®√©\n{00ff00}√á√•√´√•√≠√ª√©\n{ff0000}√ä√∞√†√±√≠√ª√©\n{66ff00}√ü√∞√™√Æ-√ß√•√´√•√≠√ª√©\n{00bbff}√É√Æ√´√≥√°√Æ√©\n{aa00ff}√î√®√Æ√´√•√≤√Æ√¢√ª√©", "Seleccione", "Cerrar");
			}
			case 4:
			{
				if(pData[playerid][pCash] < 2400) 
					return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Ø√Æ√™√≥√Ø√™√®");
				return SPD(playerid, 1222, DIALOG_STYLE_LIST, "√Ç√ª√°√•√∞√®√≤√• √∂√¢√•√≤", "√Å√•√´√ª√©\n{0000ff}√ë√®√≠√®√©\n{00ff00}√á√•√´√•√≠√ª√©\n{ff0000}√ä√∞√†√±√≠√ª√©\n{66ff00}√ü√∞√™√Æ-√ß√•√´√•√≠√ª√©\n{00bbff}√É√Æ√´√≥√°√Æ√©\n{aa00ff}√î√®√Æ√´√•√≤√Æ√¢√ª√©", "Seleccione", "Cerrar");
			}
			case 5:
			{
				if(pData[playerid][pCash] < 28000) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Ø√Æ√™√≥√Ø√™√®");
				blow_num[playerid] = 1;
				Hook_GivePlayerMoney(playerid, -28000);
				GameTextForPlayer(playerid, "~r~-28000$", 3000, 1);
				BizInfo[BizEnter{playerid}][bPribil] += 28000;
				BizInfo[BizEnter{playerid}][bBank] += 28000;
				SCM(playerid, COLOR_MAIN, "√Ç√ª √™√≥√Ø√®√´√® √Ø√∞√Æ√¥√•√±√±√®√Æ√≠√†√´√º√≠√ª√© √±√†√´√æ√≤");
			}
		}
		SetPVarInt(playerid, "pType", listitem + 1);
		PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
		SCM(playerid, COLOR_BLUE, "√Ç√¢√•√§√®√≤√• {FFCD00}/blow "CBLUE"√§√´√ø √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√ø √Ø√®√∞√Æ√≤√•√µ√≠√®√™√®");
		BizInfo[BizEnter{playerid}][bProd] -= 15;
		UpdateBusinessData(BizEnter{playerid}, "bProd",BizInfo[BizEnter{playerid}][bProd]);
		if(BizInfo[BizEnter{playerid}][bBank] > 10000000) BizInfo[BizEnter{playerid}][bBank] = 10000000;
		UpdateBusinessData(BizEnter{playerid}, "bPribil",BizInfo[BizEnter{playerid}][bPribil]);
		UpdateBusinessData(BizEnter{playerid}, "bBank",BizInfo[BizEnter{playerid}][bBank]);
	}
	case 1219: {
		if(!response) return 1;
		SetPVarInt(playerid, "PColor", listitem + 1);
		SetPVarInt(playerid, "pType", 4);
		blow_num[playerid] = 3;
		Hook_GivePlayerMoney(playerid, -830);
		GameTextForPlayer(playerid, "~r~-830$", 3000, 1);
		BizInfo[BizEnter{playerid}][bPribil] += 830;
		PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
		BizInfo[BizEnter{playerid}][bBank] += 830;
		SCM(playerid, COLOR_MAIN, "√Ç√ª √™√≥√Ø√®√´√® √≠√†√°√Æ√∞ √Æ√§√®√≠√Æ√∑√≠√ª√µ √∞√†√™√•√≤");
		SCM(playerid, COLOR_BLUE, "√Ç√¢√•√§√®√≤√• {FFCD00}/blow "CBLUE"√§√´√ø √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√ø √Ø√®√∞√Æ√≤√•√µ√≠√®√™√®");
		BizInfo[BizEnter{playerid}][bProd] -= 15;
		UpdateBusinessData(BizEnter{playerid}, "bProd",BizInfo[BizEnter{playerid}][bProd]);
		if(BizInfo[BizEnter{playerid}][bBank] > 10000000) BizInfo[BizEnter{playerid}][bBank] = 10000000;
		UpdateBusinessData(BizEnter{playerid}, "bPribil",BizInfo[BizEnter{playerid}][bPribil]);
		UpdateBusinessData(BizEnter{playerid}, "bBank",BizInfo[BizEnter{playerid}][bBank]);
	}
	case 1222: {
		if(!response) return 1;
		SetPVarInt(playerid, "PColor", listitem + 1);
		SetPVarInt(playerid, "pType", 5);
		blow_num[playerid] = 2;
		Hook_GivePlayerMoney(playerid, -2400);
		GameTextForPlayer(playerid, "~r~-2400$", 3000, 1);
		BizInfo[BizEnter{playerid}][bPribil] += 2400;
		PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
		BizInfo[BizEnter{playerid}][bBank] += 2400;
		SCM(playerid, COLOR_MAIN, "√Ç√ª √™√≥√Ø√®√´√® √≠√†√°√Æ√∞ √≤√∞√Æ√©√≠√ª√µ √∞√†√™√•√≤");
		SCM(playerid, COLOR_BLUE, "√Ç√¢√•√§√®√≤√• {FFCD00}/blow "CBLUE"√§√´√ø √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√ø √Ø√®√∞√Æ√≤√•√µ√≠√®√™√®");
		BizInfo[BizEnter{playerid}][bProd] -= 15;
		UpdateBusinessData(BizEnter{playerid}, "bProd",BizInfo[BizEnter{playerid}][bProd]);
		if(BizInfo[BizEnter{playerid}][bBank] > 10000000) BizInfo[BizEnter{playerid}][bBank] = 10000000;
		UpdateBusinessData(BizEnter{playerid}, "bPribil",BizInfo[BizEnter{playerid}][bPribil]);
		UpdateBusinessData(BizEnter{playerid}, "bBank",BizInfo[BizEnter{playerid}][bBank]);
	}
	case 164: {
		if(!response) return SelectTextDraw(playerid, 0x000000AA);
		new veh_id = GetPlayerVehicleID(playerid), num_car;
		if(house_carid[playerid][0] && veh_id == house_carid[playerid][0]) num_car = 0;
		if(house_carid[playerid][1] && veh_id == house_carid[playerid][1]) num_car = 1;
		if(house_carid[playerid][2] && veh_id == house_carid[playerid][2]) num_car = 2;
		in_menutune[playerid] = false;
		TogglePlayerControllable(playerid, 1);
		CancelSelectTextDraw(playerid);
		SetCameraBehindPlayer(playerid);
		for(new i = 0; i < 55; i ++) TextDrawHideForPlayer(playerid, tune_td[i]);
		if(TUNE_wheel_component[playerid] != 0) 
			RemoveVehicleComponent(veh_id, TUNE_wheel_component[playerid]);
		if(TUNE_hydraulics[playerid]) 
			RemoveVehicleComponent(veh_id, 1087);
		if(TUNE_stereo[playerid]) 
			RemoveVehicleComponent(veh_id, veh_id);
		if(TUNE_paintjob[playerid] != -1) 
			ChangeVehiclePaintjob(veh_id, 3);
		if(TUNE_neon_component[playerid] != -1) 
			RemoveNeonFromVehicle(veh_id);
		if(TUNE_carcolor_1[playerid] != -1 || TUNE_carcolor_2[playerid] != -1) 
			ChangeVehicleColor(veh_id, pData[playerid][t_color_1][num_car], pData[playerid][t_color_2][num_car]);
		if(pData[playerid][t_wheel][num_car] != 0) 
			AddVehicleComponent(veh_id, pData[playerid][t_wheel][num_car]);
		if(pData[playerid][t_neon_num][num_car] != -1) {
			switch(pData[playerid][t_neon_num][num_car]) {
				case 1: AddNeonToVehicle(veh_id, NEON_COLOR_RED);
				case 2: AddNeonToVehicle(veh_id, NEON_COLOR_BLUE);
				case 3: AddNeonToVehicle(veh_id, NEON_COLOR_GREEN);
				case 4: AddNeonToVehicle(veh_id, NEON_COLOR_YELLOW);
			}
		}
		if(pData[playerid][t_hydraulics][num_car]) 
			AddVehicleComponent(veh_id, 1087);
		if(pData[playerid][t_stereo][num_car]) 
			AddVehicleComponent(veh_id, 1086);
		if(pData[playerid][t_paintjob][num_car] != -1) 
			ChangeVehiclePaintjob(veh_id, pData[playerid][t_paintjob][num_car]);
		if(pData[playerid][t_color_1][num_car] != -1 || pData[playerid][t_color_2][num_car] != -1)
			ChangeVehicleColor(veh_id, pData[playerid][t_color_1][num_car], pData[playerid][t_color_2][num_car]);
		TUNE_wheel_component[playerid] = 0;
		TUNE_paintjob[playerid] = -1;
		TUNE_hydraulics[playerid] = false;
		TUNE_stereo[playerid] = false;
		TUNE_carcolor_1[playerid] = -1;
		TUNE_carcolor_2[playerid] = -1;
		TUNE_neon_component[playerid] = -1;
		SCM(playerid, 0xFF6640FF, "√Ç√ª √¢√ª√∏√´√® √®√ß √∞√•√¶√®√¨√† √≤√æ√≠√®√≠√£√† √†√¢√≤√Æ√¨√Æ√°√®√´√ø");
	}
	case 133: {
		if(!response) return 1;
		if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √≤√∞√†√≠√±√Ø√Æ√∞√≤√•");
		if(GetPlayerInterior(playerid) != 0) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √Ø√Æ√¨√•√π√•√≠√®√ø√µ");
		new Float: x_pos, Float: y_pos, Float: z_pos, id_str[4], obj_id;
		GetPlayerPos(playerid, x_pos, y_pos, z_pos);
		valstr(id_str, playerid);
		mafia_object_text[playerid] = Create3DTextLabel(id_str, 0xBB995580, x_pos + 1.0, y_pos, z_pos + 0.3, 30.0, GetPlayerVirtualWorld(playerid), 1);
		ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.2, 0, 0, 0, 0, 0, 1);
		switch(listitem) {
			case 0: {
				switch(random(5)) {
					case 0: obj_id = 19054;
					case 1: obj_id = 19055;
					case 2: obj_id = 19056;
					case 3: obj_id = 19057;
					case 4: obj_id = 19058;
				}
				mafia_object[playerid] = CreateObject(obj_id, x_pos + 1.0, y_pos, z_pos - 0.4, 0.0, 0.0, 30.0);
			}
			case 1: mafia_object[playerid] = CreateObject(18690, x_pos + 1.0, y_pos,z_pos - 2.5, 0.0, 0.0, 30.0);
			case 2: mafia_object[playerid] = CreateObject(19279, x_pos + 1.0, y_pos, z_pos - 1.0, 0.0, 0.0, 30.0);
			case 3: mafia_object[playerid] = CreateObject(1481, x_pos + 1.0, y_pos, z_pos - 0.4, 0.0, 0.0, 30.0);
			case 4: mafia_object[playerid] = CreateObject(19320, x_pos + 1.0, y_pos,z_pos - 0.7, 0.0, 0.0, 20.0);
		}
		Streamer_Update(playerid);
	}
	case 1220: {
		if(!response) return 1;
		SetPVarInt(playerid,"prizivnik", 1);
		SetPlayerSkin(playerid, 252);
		SCM(playerid,COLOR_PALEGREEN,"√Ç√ª √Ø√•√∞√•√Æ√§√•√´√®√±√º √¢ √¥√Æ√∞√¨√≥ √Ø√∞√®√ß√ª√¢√≠√®√™√†");
	}
	case 1221: {
		if(!response) return 1;
		DeletePVar(playerid, "prizivnik");
		if(pData[playerid][pMember]) SetPlayerSkin(playerid, pData[playerid][pModel]);
		else SetPlayerSkin(playerid, pData[playerid][pChar]);
		SCM(playerid,COLOR_PALEGREEN,"√Ç√ª √Ø√•√∞√•√Æ√§√•√´√®√±√º √¢ √Æ√°√ª√∑√≠√≥√æ √Æ√§√•√¶√§√≥");
	}
	case 924: {
		if(!response) return 1;
		new vehcolor;
		switch(listitem) {
			case 0: vehcolor = 0;
			case 1: vehcolor = 1;
			case 2: vehcolor = 2;
			case 3: vehcolor = 3;
			case 4: vehcolor = 5;
			case 5: vehcolor = 6;
			case 6: vehcolor = 128;
			case 7: vehcolor = 126;
			case 8: return SPD(playerid, 928, DIALOG_STYLE_INPUT, "{cc9900}√ñ√¢√•√≤ √†√¢√≤√Æ√¨√Æ√°√®√´√ø ¬π1", ""CWHITE"√Ç√¢√•√§√®√≤√• √ß√≠√†√∑√•√≠√®√• √∂√¢√•√≤√† √Æ√≤ 0 √§√Æ 255 √¢ √Ø√Æ√´√• √≠√®√¶√•. √è√Æ√´√≠√ª√© √±√Ø√®√±√Æ√™ √¢√±√•√µ\n√∂√¢√•√≤√Æ√¢ √® √ß√≠√†√∑√•√≠√®√© √Ç√ª √¨√Æ√¶√•√≤√• √≠√†√©√≤√® √Ø√Æ √±√±√ª√´√™√• {99ff33}wiki.sa-mp.com/wiki/Color_ID", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
		}
		SetPVarInt(playerid, "vehcolor_1", vehcolor);
		SPD(playerid, 925, DIALOG_STYLE_TABLIST_HEADERS, "{FFCD00}√ë√¨√•√≠√† √∂√¢√•√≤√Æ√¢ √†√¢√≤√Æ√¨√Æ√°√®√´√ø", "√Ç√ª√°√•√∞√®√≤√• √∂√¢√•√≤ ¬π2:\n{000000}√ó¬∏√∞√≠√ª√©\n"CWHITE"√Å√•√´√ª√©\n{336699}√ë√®√≠√®√©\n{cc0000}√ä√∞√†√±√≠√ª√©\n{cc3370}√î√®√Æ√´√•√≤√Æ√¢√ª√©\n{ff8800}√é√∞√†√≠√¶√•√¢√ª√©\n{339900}√á√•√´¬∏√≠√ª√©\n{ff66cc}√ê√Æ√ß√Æ√¢√ª√©\n"CWHITE"√Ñ√∞√≥√£√Æ√© √∂√¢√•√≤...", "Seleccione", "Cerrar");
	}
	case 925: {
		if(!response) return DeletePVar(playerid, "vehcolor_1");
		new vehcolor, p_vehcolor = GetPVarInt(playerid, "vehcolor_1");
		switch(listitem) {
			case 0: vehcolor = 0;
			case 1: vehcolor = 1;
			case 2: vehcolor = 2;
			case 3: vehcolor = 3;
			case 4: vehcolor = 5;
			case 5: vehcolor = 6;
			case 6: vehcolor = 128;
			case 7: vehcolor = 126;
			case 8: return SPD(playerid, 929, DIALOG_STYLE_INPUT, "{cc9900}√ñ√¢√•√≤ √†√¢√≤√Æ√¨√Æ√°√®√´√ø ¬π2", ""CWHITE"√Ç√¢√•√§√®√≤√• √ß√≠√†√∑√•√≠√®√• √∂√¢√•√≤√† √Æ√≤ 0 √§√Æ 255 √¢ √Ø√Æ√´√• √≠√®√¶√•. √è√Æ√´√≠√ª√© √±√Ø√®√±√Æ√™ √¢√±√•√µ\n√∂√¢√•√≤√Æ√¢ √® √ß√≠√†√∑√•√≠√®√© √Ç√ª √¨√Æ√¶√•√≤√• √≠√†√©√≤√® √Ø√Æ √±√±√ª√´√™√• {99ff33}wiki.sa-mp.com/wiki/Color_ID", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
		}
		new veh = GetPlayerVehicleID(playerid);
		ChangeVehicleColor(veh, p_vehcolor, vehcolor);
		if(IsABike(veh) || (pData[playerid][pHotel] != -1 && pData[playerid][pCar][0] != 0) || (pData[playerid][have_garage] != -1 && pData[playerid][pCar][0] != 0) || (pData[playerid][pFlat] != -1 && pData[playerid][pCar][0] != 0)) {
			Hook_GivePlayerMoney(playerid, -400);
			GameTextForPlayer(playerid, "~r~-400$", 3000, 1);
			new num_car;
			if(house_carid[playerid][0] && veh == house_carid[playerid][0]) num_car = 0;
			if(house_carid[playerid][1] && veh == house_carid[playerid][1]) num_car = 1;
			if(house_carid[playerid][2] && veh == house_carid[playerid][2]) num_car = 2;
			pData[playerid][t_color_1][num_car] = p_vehcolor;
			pData[playerid][t_color_2][num_car] = vehcolor;
			new s_query[144];
			if(house_carid[playerid][0] && veh == house_carid[playerid][0]) 
				mysql_format(mysql_Handle, s_query, sizeof(s_query), "UPDATE `accounts` SET `t_color_1_1` = %d, `t_color_2_1` = %d WHERE `Name` = '%s'", p_vehcolor, vehcolor, GetName(playerid));
			else if(house_carid[playerid][1] && veh == house_carid[playerid][1]) 
				mysql_format(mysql_Handle, s_query, sizeof(s_query), "UPDATE `accounts` SET `t_color_1_2` = %d, `t_color_2_2` = %d WHERE `Name` = '%s'", p_vehcolor, vehcolor, GetName(playerid));
			else if(house_carid[playerid][2] && veh == house_carid[playerid][2]) 
				mysql_format(mysql_Handle, s_query, sizeof(s_query), "UPDATE `accounts` SET `t_color_1_3` = %d, `t_color_2_3` = %d WHERE `Name` = '%s'", p_vehcolor, vehcolor, GetName(playerid));
			mysql_tquery(mysql_Handle, s_query);
			SCM(playerid, COLOR_LITEBLUE, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √≥√±√Ø√•√∏√≠√Æ √Ø√•√∞√•√™√∞√†√∏√•√≠");
		}
		else {
			TUNE_carcolor_1[playerid] = p_vehcolor;
			TUNE_carcolor_2[playerid] = vehcolor;
			PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		}
	}
	case 928: {
		if(!response) return SPD(playerid, 924, DIALOG_STYLE_TABLIST_HEADERS, "{FFCD00}√ë√¨√•√≠√† √∂√¢√•√≤√Æ√¢ √†√¢√≤√Æ√¨√Æ√°√®√´√ø", "√Ç√ª√°√•√∞√®√≤√• √∂√¢√•√≤ ¬π1:\n{000000}√ó¬∏√∞√≠√ª√©\n"CWHITE"√Å√•√´√ª√©\n{336699}√ë√®√≠√®√©\n{cc0000}√ä√∞√†√±√≠√ª√©\n{cc3370}√î√®√Æ√´√•√≤√Æ√¢√ª√©\n{ff8800}√é√∞√†√≠√¶√•√¢√ª√©\n{339900}√á√•√´¬∏√≠√ª√©\n{ff66cc}√ê√Æ√ß√Æ√¢√ª√©\n"CWHITE"√Ñ√∞√≥√£√Æ√© √∂√¢√•√≤...", "Seleccione", "Cerrar");
		if(!strlen(inputtext)) return SPD(playerid, 928, DIALOG_STYLE_INPUT, "{cc9900}√ñ√¢√•√≤ √†√¢√≤√Æ√¨√Æ√°√®√´√ø ¬π1", ""CWHITE"√Ç√¢√•√§√®√≤√• √ß√≠√†√∑√•√≠√®√• √∂√¢√•√≤√† √Æ√≤ 0 √§√Æ 255 √¢ √Ø√Æ√´√• √≠√®√¶√•. √è√Æ√´√≠√ª√© √±√Ø√®√±√Æ√™ √¢√±√•√µ\n√∂√¢√•√≤√Æ√¢ √® √ß√≠√†√∑√•√≠√®√© √Ç√ª √¨√Æ√¶√•√≤√• √≠√†√©√≤√® √Ø√Æ √±√±√ª√´√™√• {99ff33}wiki.sa-mp.com/wiki/Color_ID", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
            switch(inputtext[i]) {
                case '0'..'9': continue;
                default: {
                	SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§√•√≠√Æ √≠√•√¢√•√∞√≠√Æ√• √ß√≠√†√∑√•√≠√®√•");
					return SPD(playerid, 928, DIALOG_STYLE_INPUT, "{cc9900}√ñ√¢√•√≤ √†√¢√≤√Æ√¨√Æ√°√®√´√ø ¬π1", ""CWHITE"√Ç√¢√•√§√®√≤√• √ß√≠√†√∑√•√≠√®√• √∂√¢√•√≤√† √Æ√≤ 0 √§√Æ 255 √¢ √Ø√Æ√´√• √≠√®√¶√•. √è√Æ√´√≠√ª√© √±√Ø√®√±√Æ√™ √¢√±√•√µ\n√∂√¢√•√≤√Æ√¢ √® √ß√≠√†√∑√•√≠√®√© √Ç√ª √¨√Æ√¶√•√≤√• √≠√†√©√≤√® √Ø√Æ √±√±√ª√´√™√• {99ff33}wiki.sa-mp.com/wiki/Color_ID", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
            	}
            }
        }
        new zn = strval(inputtext);
		if(zn < 0 || zn > 255) {
			SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§√•√≠√Æ √≠√•√¢√•√∞√≠√Æ√• √ß√≠√†√∑√•√≠√®√•");
			return SPD(playerid, 928, DIALOG_STYLE_INPUT, "{cc9900}√ñ√¢√•√≤ √†√¢√≤√Æ√¨√Æ√°√®√´√ø ¬π1", ""CWHITE"√Ç√¢√•√§√®√≤√• √ß√≠√†√∑√•√≠√®√• √∂√¢√•√≤√† √Æ√≤ 0 √§√Æ 255 √¢ √Ø√Æ√´√• √≠√®√¶√•. √è√Æ√´√≠√ª√© √±√Ø√®√±√Æ√™ √¢√±√•√µ\n√∂√¢√•√≤√Æ√¢ √® √ß√≠√†√∑√•√≠√®√© √Ç√ª √¨√Æ√¶√•√≤√• √≠√†√©√≤√® √Ø√Æ √±√±√ª√´√™√• {99ff33}wiki.sa-mp.com/wiki/Color_ID", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
		}
		SetPVarInt(playerid, "vehcolor_1", zn);
		SPD(playerid, 925, DIALOG_STYLE_TABLIST_HEADERS, "{FFCD00}√ë√¨√•√≠√† √∂√¢√•√≤√Æ√¢ √†√¢√≤√Æ√¨√Æ√°√®√´√ø", "√Ç√ª√°√•√∞√®√≤√• √∂√¢√•√≤ ¬π2:\n{000000}√ó¬∏√∞√≠√ª√©\n"CWHITE"√Å√•√´√ª√©\n{336699}√ë√®√≠√®√©\n{cc0000}√ä√∞√†√±√≠√ª√©\n{cc3370}√î√®√Æ√´√•√≤√Æ√¢√ª√©\n{ff8800}√é√∞√†√≠√¶√•√¢√ª√©\n{339900}√á√•√´¬∏√≠√ª√©\n{ff66cc}√ê√Æ√ß√Æ√¢√ª√©\n"CWHITE"√Ñ√∞√≥√£√Æ√© √∂√¢√•√≤...", "Seleccione", "Cerrar");
	}
	case 929: {
		if(!response) return SPD(playerid, 925, DIALOG_STYLE_TABLIST_HEADERS, "{FFCD00}√ë√¨√•√≠√† √∂√¢√•√≤√Æ√¢ √†√¢√≤√Æ√¨√Æ√°√®√´√ø", "√Ç√ª√°√•√∞√®√≤√• √∂√¢√•√≤ ¬π2:\n{000000}√ó¬∏√∞√≠√ª√©\n"CWHITE"√Å√•√´√ª√©\n{336699}√ë√®√≠√®√©\n{cc0000}√ä√∞√†√±√≠√ª√©\n{cc3370}√î√®√Æ√´√•√≤√Æ√¢√ª√©\n{ff8800}√é√∞√†√≠√¶√•√¢√ª√©\n{339900}√á√•√´¬∏√≠√ª√©\n{ff66cc}√ê√Æ√ß√Æ√¢√ª√©\n"CWHITE"√Ñ√∞√≥√£√Æ√© √∂√¢√•√≤...", "Seleccione", "Cerrar");
		if(!strlen(inputtext)) return SPD(playerid, 929, DIALOG_STYLE_INPUT, "{cc9900}√ñ√¢√•√≤ √†√¢√≤√Æ√¨√Æ√°√®√´√ø ¬π2", ""CWHITE"√Ç√¢√•√§√®√≤√• √ß√≠√†√∑√•√≠√®√• √∂√¢√•√≤√† √Æ√≤ 0 √§√Æ 255 √¢ √Ø√Æ√´√• √≠√®√¶√•. √è√Æ√´√≠√ª√© √±√Ø√®√±√Æ√™ √¢√±√•√µ\n√∂√¢√•√≤√Æ√¢ √® √ß√≠√†√∑√•√≠√®√© √Ç√ª √¨√Æ√¶√•√≤√• √≠√†√©√≤√® √Ø√Æ √±√±√ª√´√™√• {99ff33}wiki.sa-mp.com/wiki/Color_ID", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
            switch(inputtext[i]) {
                case '0'..'9': continue;
                default: {
                	SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§√•√≠√Æ √≠√•√¢√•√∞√≠√Æ√• √ß√≠√†√∑√•√≠√®√•");
					return SPD(playerid, 929, DIALOG_STYLE_INPUT, "{cc9900}√ñ√¢√•√≤ √†√¢√≤√Æ√¨√Æ√°√®√´√ø ¬π2", ""CWHITE"√Ç√¢√•√§√®√≤√• √ß√≠√†√∑√•√≠√®√• √∂√¢√•√≤√† √Æ√≤ 0 √§√Æ 255 √¢ √Ø√Æ√´√• √≠√®√¶√•. √è√Æ√´√≠√ª√© √±√Ø√®√±√Æ√™ √¢√±√•√µ\n√∂√¢√•√≤√Æ√¢ √® √ß√≠√†√∑√•√≠√®√© √Ç√ª √¨√Æ√¶√•√≤√• √≠√†√©√≤√® √Ø√Æ √±√±√ª√´√™√• {99ff33}wiki.sa-mp.com/wiki/Color_ID", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
            	}
            }
        }
        new zn = strval(inputtext), p_zn = GetPVarInt(playerid, "vehcolor_1");
        DeletePVar(playerid, "vehcolor_1");
		if(zn < 0 || zn > 255) {
			SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§√•√≠√Æ √≠√•√¢√•√∞√≠√Æ√• √ß√≠√†√∑√•√≠√®√•");
			return SPD(playerid, 929, DIALOG_STYLE_INPUT, "{cc9900}√ñ√¢√•√≤ √†√¢√≤√Æ√¨√Æ√°√®√´√ø ¬π2", ""CWHITE"√Ç√¢√•√§√®√≤√• √ß√≠√†√∑√•√≠√®√• √∂√¢√•√≤√† √Æ√≤ 0 √§√Æ 255 √¢ √Ø√Æ√´√• √≠√®√¶√•. √è√Æ√´√≠√ª√© √±√Ø√®√±√Æ√™ √¢√±√•√µ\n√∂√¢√•√≤√Æ√¢ √® √ß√≠√†√∑√•√≠√®√© √Ç√ª √¨√Æ√¶√•√≤√• √≠√†√©√≤√® √Ø√Æ √±√±√ª√´√™√• {99ff33}wiki.sa-mp.com/wiki/Color_ID", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
		}
		new veh = GetPlayerVehicleID(playerid);
		ChangeVehicleColor(veh, p_zn, zn);
		if(IsABike(veh) || (pData[playerid][pHotel] != -1 && pData[playerid][pCar][0] != 0) || (pData[playerid][have_garage] != -1 && pData[playerid][pCar][0] != 0) || (pData[playerid][pFlat] != -1 && pData[playerid][pCar][0] != 0)) {
			Hook_GivePlayerMoney(playerid, -400);
			GameTextForPlayer(playerid, "~r~-400$", 3000, 1);
			new num_car;
			if(house_carid[playerid][0] && veh == house_carid[playerid][0]) num_car = 0;
			if(house_carid[playerid][1] && veh == house_carid[playerid][1]) num_car = 1;
			if(house_carid[playerid][2] && veh == house_carid[playerid][2]) num_car = 2;
			pData[playerid][t_color_1][num_car] = p_zn;
			pData[playerid][t_color_2][num_car] = zn;
			new s_query[144];
			if(house_carid[playerid][0] && veh == house_carid[playerid][0]) 
				mysql_format(mysql_Handle, s_query, sizeof(s_query), "UPDATE `accounts` SET `t_color_1_1` = %d, `t_color_2_1` = %d WHERE `Name` = '%s'", p_zn, zn, GetName(playerid));
			else if(house_carid[playerid][1] && veh == house_carid[playerid][1]) 
				mysql_format(mysql_Handle, s_query, sizeof(s_query), "UPDATE `accounts` SET `t_color_1_2` = %d, `t_color_2_2` = %d WHERE `Name` = '%s'", p_zn, zn, GetName(playerid));
			else if(house_carid[playerid][2] && veh == house_carid[playerid][2]) 
				mysql_format(mysql_Handle, s_query, sizeof(s_query), "UPDATE `accounts` SET `t_color_1_3` = %d, `t_color_2_3` = %d WHERE `Name` = '%s'", p_zn, zn, GetName(playerid));
			mysql_tquery(mysql_Handle, s_query);
			SCM(playerid, COLOR_LITEBLUE, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √≥√±√Ø√•√∏√≠√Æ √Ø√•√∞√•√™√∞√†√∏√•√≠");
		}
		else {
			TUNE_carcolor_1[playerid] = p_zn;
			TUNE_carcolor_2[playerid] = zn;
			PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		}
	}
	
	case 2756: {
		if(!response) return 1;
		kiosk1_owner = -1;
		pData[playerid][kiosk_have] = 0;
		UpdatePlayerData(playerid, "kiosk_have", 0);
		GameTextForPlayer(playerid, "~g~+300000$", 3000, 1);
		Hook_GivePlayerMoney(playerid, 300000);
		mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `kiosk1_owner` = '-1'");
		UpdateDynamic3DTextLabelText(kiosk_info_1, 0x4682B4FF, "√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"500000$");
		SCM(playerid, COLOR_LITEBLUE, "√Å√®√ß√≠√•√± √°√ª√´ √Ø√∞√ÆS√≠√≠ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥ √ß√† "CCYAN"300000$");
	}
	case 2757: {
		if(!response) return 1;
		kiosk2_owner = -1;
		pData[playerid][kiosk_have] = 0;
		UpdatePlayerData(playerid, "kiosk_have", 0);
		GameTextForPlayer(playerid, "~g~+300000$", 3000, 1);
		Hook_GivePlayerMoney(playerid, 300000);
		mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `kiosk2_owner` = '-1'");
		UpdateDynamic3DTextLabelText(kiosk_info_2, 0x4682B4FF, "√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"500000$");
		SCM(playerid, COLOR_LITEBLUE, "√Å√®√ß√≠√•√± √°√ª√´ √Ø√∞√ÆS√≠√≠ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥ √ß√† "CCYAN"300000$");
	}
	case 2758: {
		if(!response) return 1;
		kiosk3_owner = -1;
		pData[playerid][kiosk_have] = 0;
		UpdatePlayerData(playerid, "kiosk_have", 0);
		GameTextForPlayer(playerid, "~g~+300000$", 3000, 1);
		Hook_GivePlayerMoney(playerid, 300000);
		mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `kiosk3_owner` = '-1'");
		UpdateDynamic3DTextLabelText(kiosk_info_3, 0x4682B4FF, "√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"500000$");
		SCM(playerid, COLOR_LITEBLUE, "√Å√®√ß√≠√•√± √°√ª√´ √Ø√∞√ÆS√≠√≠ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥ √ß√† "CCYAN"300000$");
	}
	case 2759: {
		if(!response) return 1;
		kiosk4_owner = -1;
		pData[playerid][kiosk_have] = 0;
		UpdatePlayerData(playerid, "kiosk_have", 0);
		GameTextForPlayer(playerid, "~g~+300000$", 3000, 1);
		Hook_GivePlayerMoney(playerid, 300000);
		mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `kiosk4_owner` = '-1'");
		UpdateDynamic3DTextLabelText(kiosk_info_4, 0x4682B4FF, "√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"500000$");
		SCM(playerid, COLOR_LITEBLUE, "√Å√®√ß√≠√•√± √°√ª√´ √Ø√∞√ÆS√≠√≠ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥ √ß√† "CCYAN"300000$");
	}

	case 9437: {
		if(!response) return 1;
		if(!IsPlayerInRangeOfPoint(playerid, 10.0, 1794.0339,-1939.8192,13.5521)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √±√¢√Æ√•√£√Æ √Ø√∞√Æ√™√†√≤√≠√Æ√£√Æ √Ø√≥√≠√™√≤√†");
		prok1_owner = -1;
		pData[playerid][prok_have] = 0;
		UpdatePlayerData(playerid, "prok_have", 0);
		GameTextForPlayer(playerid, "~g~+1200000$", 3000, 1);
		Hook_GivePlayerMoney(playerid, 1200000);
		mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `prok1_owner` = '-1'");
		UpdateDynamic3DTextLabelText(prok_info_1, 0x4682B4FF, "√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"2000000$");
		SCM(playerid, COLOR_LITEBLUE, "√Å√®√ß√≠√•√± √°√ª√´ √Ø√∞√ÆS√≠√≠ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥ √ß√† "CCYAN"1200000$");
	}
	case 9443: {
		if(!response) return 1;
		if(!IsPlayerInRangeOfPoint(playerid, 10.0, 1182.3124,-1356.9469,14.2071)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √±√¢√Æ√•√£√Æ √Ø√∞√Æ√™√†√≤√≠√Æ√£√Æ √Ø√≥√≠√™√≤√†");
		prok2_owner = -1;
		pData[playerid][prok_have] = 0;
		UpdatePlayerData(playerid, "prok_have", 0);
		GameTextForPlayer(playerid, "~g~+1200000$", 3000, 1);
		Hook_GivePlayerMoney(playerid, 1200000);
		mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `prok2_owner` = '-1'");
		UpdateDynamic3DTextLabelText(prok_info_2, 0x4682B4FF, "√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"2000000$");
		SCM(playerid, COLOR_LITEBLUE, "√Å√®√ß√≠√•√± √°√ª√´ √Ø√∞√ÆS√≠√≠ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥ √ß√† "CCYAN"1200000$");
	}
	case 9449: {
		if(!response) return 1;
		if(!IsPlayerInRangeOfPoint(playerid, 10.0, -1996.8857,94.9524,27.6875)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √±√¢√Æ√•√£√Æ √Ø√∞√Æ√™√†√≤√≠√Æ√£√Æ √Ø√≥√≠√™√≤√†");
		prok3_owner = -1;
		pData[playerid][prok_have] = 0;
		UpdatePlayerData(playerid, "prok_have", 0);
		GameTextForPlayer(playerid, "~g~+1200000$", 3000, 1);
		Hook_GivePlayerMoney(playerid, 1200000);
		mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `prok3_owner` = '-1'");
		UpdateDynamic3DTextLabelText(prok_info_3, 0x4682B4FF, "√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"2000000$");
		SCM(playerid, COLOR_LITEBLUE, "√Å√®√ß√≠√•√± √°√ª√´ √Ø√∞√ÆS√≠√≠ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥ √ß√† "CCYAN"1200000$");
	}
	case 9455: {
		if(!response) return 1;
		if(!IsPlayerInRangeOfPoint(playerid, 10.0, 1631.7618,1843.6959,10.8203)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √±√¢√Æ√•√£√Æ √Ø√∞√Æ√™√†√≤√≠√Æ√£√Æ √Ø√≥√≠√™√≤√†");
		prok4_owner = -1;
		pData[playerid][prok_have] = 0;
		UpdatePlayerData(playerid, "prok_have", 0);
		GameTextForPlayer(playerid, "~g~+1200000$", 3000, 1);
		Hook_GivePlayerMoney(playerid, 1200000);
		mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `prok4_owner` = '-1'");
		UpdateDynamic3DTextLabelText(prok_info_4, 0x4682B4FF, "√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"2000000$");
		SCM(playerid, COLOR_LITEBLUE, "√Å√®√ß√≠√•√± √°√ª√´ √Ø√∞√ÆS√≠√≠ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥ √ß√† "CCYAN"1200000$");
	}
	case 9461: {
		if(!response) return 1;
		if(!IsPlayerInRangeOfPoint(playerid, 10.0, 2819.8347,1293.8167,10.9609)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √±√¢√Æ√•√£√Æ √Ø√∞√Æ√™√†√≤√≠√Æ√£√Æ √Ø√≥√≠√™√≤√†");
		prok5_owner = -1;
		pData[playerid][prok_have] = 0;
		UpdatePlayerData(playerid, "prok_have", 0);
		GameTextForPlayer(playerid, "~g~+1200000$", 3000, 1);
		Hook_GivePlayerMoney(playerid, 1200000);
		mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `prok5_owner` = '-1'");
		UpdateDynamic3DTextLabelText(prok_info_5, 0x4682B4FF, "√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"2000000$");
		SCM(playerid, COLOR_LITEBLUE, "√Å√®√ß√≠√•√± √°√ª√´ √Ø√∞√ÆS√≠√≠ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥ √ß√† "CCYAN"1200000$");
	}
	case 9467: {
		if(!response) return 1;
		if(!IsPlayerInRangeOfPoint(playerid, 10.0, 1631.7504,1844.1727,10.8203)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √±√¢√Æ√•√£√Æ √Ø√∞√Æ√™√†√≤√≠√Æ√£√Æ √Ø√≥√≠√™√≤√†");
		prok6_owner = -1;
		pData[playerid][prok_have] = 0;
		UpdatePlayerData(playerid, "prok_have", 0);
		GameTextForPlayer(playerid, "~g~+1200000$", 3000, 1);
		Hook_GivePlayerMoney(playerid, 1200000);
		mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `prok6_owner` = '-1'");
		UpdateDynamic3DTextLabelText(prok_info_6, 0x4682B4FF, "√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"2000000$");
		SCM(playerid, COLOR_LITEBLUE, "√Å√®√ß√≠√•√± √°√ª√´ √Ø√∞√ÆS√≠√≠ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥ √ß√† "CCYAN"1200000$");
	}
	case 9473: {
		if(!response) return 1;
		if(!IsPlayerInRangeOfPoint(playerid, 10.0, 1157.5634,-1727.3196,13.8628)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √±√¢√Æ√•√£√Æ √Ø√∞√Æ√™√†√≤√≠√Æ√£√Æ √Ø√≥√≠√™√≤√†");
		prok7_owner = -1;
		pData[playerid][prok_have] = 0;
		UpdatePlayerData(playerid, "prok_have", 0);
		GameTextForPlayer(playerid, "~g~+1200000$", 3000, 1);
		Hook_GivePlayerMoney(playerid, 1200000);
		mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `prok7_owner` = '-1'");
		UpdateDynamic3DTextLabelText(prok_info_7, 0x4682B4FF, "√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"2000000$");
		SCM(playerid, COLOR_LITEBLUE, "√Å√®√ß√≠√•√± √°√ª√´ √Ø√∞√ÆS√≠√≠ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥ √ß√† "CCYAN"1200000$");
	}
	case 847: {
		if(!response) return 1;
		mysql_format(mysql_Handle, string, 110, "SELECT `Name`, `pLevel`, `pGetonDate` FROM `accounts` WHERE `pDrugID` = %d", pData[playerid][pID]);
		return mysql_tquery(mysql_Handle, string, "RegST_CallBack_2", "i", playerid);
	}
	case 1: // √ê√•√£√®√±√≤√∞√†√∂√®√ø
		{
			if(!response) return RegisterDialog(playerid);
			for(new i = strlen(inputtext); i != 0; --i)
			switch(inputtext[i]){case '√Ä'..'√ü', '√†'..'√ø', '=', ' ': return SPD(playerid, 1, DIALOG_STYLE_MSGBOX, ""CERROR"√é√∏√®√°√™√†", ""CWHITE"√Ñ√´√®√≠√† √Ø√†√∞√Æ√´√ø √§√Æ√´√¶√≠√† √°√ª√≤√º √Æ√≤ 6 √§√Æ 15 √±√®√¨√¢√Æ√´√Æ√¢\n√è√†√∞√Æ√´√º √¨√Æ√¶√•√≤ √®√¨√•√≤√º √´√†√≤√®√≠√±√™√®√• √°√≥√™√¢√ª, √† √≤√†√™√¶√• √´√æ√°√ª√• √ß√≠√†√™√®", "√è√Æ√¢√≤√Æ√∞", ""),PlayerPlaySound(playerid, 1053, 0.0, 0.0, 0.0);}
			if(!strlen(inputtext)) return RegisterDialog(playerid);
			if(strlen(inputtext) < 6 || strlen(inputtext) > 15) return RegisterDialog(playerid);
			for(new i = 0; i < strlen(pData[playerid][pName]); i ++) {
			    if(pData[playerid][pName][i] >= '0' && pData[playerid][pName][i] <= '9') {
			    	SCM(playerid, COLOR_ERROR, "√Ç√¢√•√§√®√≤√• √™√Æ√¨√†√≠√§√≥ /q (/quit) √§√´√ø √¢√ª√µ√ÆS√≠");
					SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CERROR"√é√∏√®√°√™√†", ""CWHITE"√Ç √Ç√†√∏√•√¨ √≠√®√™√• √Ø√∞√®√±√≥√≤√±√≤√¢√≥√æ√≤ √∂√®√¥√∞√ª, √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√• √∞√•√£√®√±√≤√∞√†√∂√®√® √≠√•√¢√Æ√ß√¨√Æ√¶√≠√Æ.\n√ë√¨√•√≠√®√≤√• √≠√®√™ √¢ √Æ√™√≠√• √™√´√®√•√≠√≤√† SAMP √® √Ø√•√∞√•√ß√†√©√§√®√≤√• √≠√† √±√•√∞√¢√•√∞.", "Cerrar", "");
			    	return Kick(playerid);
			    }
			}
        	strmid(pData[playerid][pKey], inputtext, 0, strlen(inputtext), 255);
			return dialog_email(playerid);
		}
	case 2: // √Ä√¢√≤√Æ√∞√®√ß√†√∂√®√ø
		{
			if(!response) return SCM(playerid, COLOR_ERROR, "√Ç√¢√•√§√®√≤√• √™√Æ√¨√†√≠√§√≥ /q (/quit) √§√´√ø √¢√ª√µ√ÆS√≠"), Kick(playerid);
			for(new i = strlen(inputtext); i != 0; -- i)
			switch(inputtext[i]){case '√Ä'..'√ü', '√†'..'√ø', '=', ' ': return SPD(playerid,2, DIALOG_STYLE_MSGBOX, ""CERROR"√é√∏√®√°√™√†", ""CWHITE"√Ñ√´√®√≠√† √Ø√†√∞√Æ√´√ø √§√Æ√´√¶√≠√† √°√ª√≤√º √Æ√≤ 6 √§√Æ 15 √±√®√¨√¢√Æ√´√Æ√¢\n√è√†√∞√Æ√´√º √¨√Æ√¶√•√≤ √®√¨√•√≤√º √´√†√≤√®√≠√±√™√®√• √°√≥√™√¢√ª, √† √≤√†√™√¶√• √´√æ√°√ª√• √ß√≠√†√™√®", "√è√Æ√¢√≤√Æ√∞", ""),PlayerPlaySound(playerid, 1053, 0.0, 0.0, 0.0);}
			if(!strlen(inputtext)) return LoginDialog(playerid);
			if(strlen(inputtext) < 6 || strlen(inputtext) > 15) return SPD(playerid,2, DIALOG_STYLE_MSGBOX, ""CERROR"√é√∏√®√°√™√†", ""CWHITE"√Ñ√´√®√≠√† √Ø√†√∞√Æ√´√ø √§√Æ√´√¶√≠√† √°√ª√≤√º √Æ√≤ 6 √§√Æ 15 √±√®√¨√¢√Æ√´√Æ√¢\n√è√†√∞√Æ√´√º √¨√Æ√¶√•√≤ √®√¨√•√≤√º √´√†√≤√®√≠√±√™√®√• √°√≥√™√¢√ª, √† √≤√†√™√¶√• √´√æ√°√ª√• √ß√≠√†√™√®", "√è√Æ√¢√≤√Æ√∞", ""),PlayerPlaySound(playerid, 1053, 0.0, 0.0, 0.0);
			strmid(pData[playerid][pLoadName], pData[playerid][pName], 0, 24, 255);
			new QUERY[220];
			mysql_format(mysql_Handle,QUERY,210, "SELECT * FROM `accounts` WHERE `id` = %d AND `pKey` = MD5('%s')", pData[playerid][pID], inputtext);
			return mysql_tquery(mysql_Handle, QUERY, "LoginCallback", "d", playerid);
		}
	case 3: {
			new text[40];
			format(text, sizeof(text), inputtext);
			if(!response) text = "None";
			else {
				for(new i = strlen(text); i != 0; --i) switch(text[i]) { case '√Ä'..'√ü', '√†'..'√ø', '=', ' ': return dialog_email(playerid, true); }
				if(strlen(text) < 5 || strlen(text) > 40) return dialog_email(playerid);

				if(!regex_match(text, "|([a-z0-9_\\.\\-]{1,20})@([a-z0-9\\.\\-]{1,20})\\.([a-z]{2,4})|is"))
					return dialog_email(playerid, true);
			}
			new strs[128];
			format(strs, 128, "SELECT `pEmail` FROM `accounts` WHERE `pEmail` = '%s'", text);
			return mysql_tquery(mysql_Handle, strs, "MailCallback", "ds", playerid, text);
		}
	case 7: {
			if(!response) return dialog_sex(playerid);
			if(!strlen(inputtext)) 
				return SPD(playerid,7, DIALOG_STYLE_INPUT, "{bbaa00}√ç√®√™ √Ø√∞√®√£√´√†√±√®√¢√∏√•√£√Æ √®√£√∞√Æ√™√†", ""CWHITE"√Ö√±√´√® √Ç√ª √≥√ß√≠√†√´√® √Æ √≠√†√∏√•√¨ √±√•√∞√¢√•√∞√• √Æ√≤ √±√¢√Æ√•√£√Æ √§√∞√≥√£√†, √™√Æ√≤√Æ√∞√ª√©\n√≤√≥√≤ √®√£√∞√†√•√≤, √≥√™√†√¶√®√≤√• √•√£√Æ √≠√®√™ √¢ √Ø√Æ√´√• √≠√®√¶√•\n\n{cdff00}√ä√Æ√£S√≠ √Ç√ª √§√Æ√±√≤√®√£No√• 4 √≥√∞√Æ√¢√≠√ø, √Æ√≠ √±√¨√Æ√¶√•√≤ √Ø√Æ√´√≥√∑√®√≤√º √≠√†√£√∞√†√§√≥", "√Ç√¢√•√±√≤√®", "√è√∞√Æ√Ø√≥√±√≤√®√≤√º");
			new strs[128];
			format(strs, 128, "SELECT `id` FROM `accounts` WHERE `Name` = '%s' LIMIT 1", inputtext);
			return mysql_tquery(mysql_Handle, strs, "FriendCallback", "ds", playerid, inputtext);
		}
	case 8: {
		if(!response) SetPVarInt(playerid, #reg_sex, 2);
		else SetPVarInt(playerid, #reg_sex, 1);

		pData[playerid][pLogin] = true;
		SetPVarInt(playerid, "Register_ChooseSkin", 1);
		RegChooseSkin(playerid);
		}
	case 8888: {
			if(GetPVarInt(playerid, #business_nalog)) {
				if(!response) return econ_panel(playerid), SaveInstrument(), DeletePVar(playerid, #business_nalog);
				if(!strval(inputtext)) return SPD(playerid, 8888, DIALOG_STYLE_INPUT, "{FFCD00}√ç√†√´√Æ√£ √≠√† √Ø√∞√ÆS√≠√¶√≥ √®√¨√≥√π√•√±√≤√¢√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √Ø√∞√Æ√∂√•√≠√≤ √≠√†√´√Æ√£√† √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
                for(new i = strlen(inputtext) - 1; i != -1; i --) {
                    switch(inputtext[i]) {
                        case '0'..'9': continue;
                        default: return SPD(playerid, 8888, DIALOG_STYLE_INPUT, "{FFCD00}√ç√†√´√Æ√£ √≠√† √Ø√∞√ÆS√≠√¶√≥ √®√¨√≥√π√•√±√≤√¢√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √Ø√∞√Æ√∂√•√≠√≤ √≠√†√´√Æ√£√† √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
                    }
                }
                if(strval(inputtext) < 1 || strval(inputtext) > 50) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§¬∏√≠ √≠√•√¢√•√∞√≠√ª√© √Ø√∞√Æ√∂√•√≠√≤ √≠√†√´√Æ√£√†. √Ñ√Æ√±√≤√≥√Ø√≠√Æ √Æ√≤ 1 √§√Æ 50 √Ø√∞√Æ√∂√•√≠√≤√Æ√¢"), SPD(playerid, 8888, DIALOG_STYLE_INPUT, "{FFCD00}√ç√†√´√Æ√£ √≠√† √Ø√∞√ÆS√≠√¶√≥ √®√¨√≥√π√•√±√≤√¢√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √Ø√∞√Æ√∂√•√≠√≤ √≠√†√´√Æ√£√† √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
				Business_Nalog = strval(inputtext);
                SCMF(playerid, COLOR_MAIN, "√ç√†√´√Æ√£ √≠√† √Ø√∞√ÆS√≠√¶√≥ √®√¨√≥√π√•√±√≤√¢√† √≤√•√Ø√•√∞√º √±√Æ√±√≤√†√¢√´√ø√•√≤ "CYELLOW"%d √Ø√∞√Æ√∂√•√≠√≤√†(√Æ√¢)", strval(inputtext));
				econ_panel(playerid), SaveInstrument();
				return DeletePVar(playerid, #business_nalog);
			}
			if(GetPVarInt(playerid, #gos_nalog)) {
				if(!response) return econ_panel(playerid), SaveInstrument(), DeletePVar(playerid, #gos_nalog);
				if(!strval(inputtext)) return SPD(playerid, 8888, DIALOG_STYLE_INPUT, "{FFCD00}√É√Æ√±√≥S√≠√∞√±√≤√¢√•√≠√≠√ª√© √≠√†√´√Æ√£", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¢√Æ√• √ß√≠√†√∑√•√≠√®√• √¢ √Ø√Æ√´√• √≠√®√¶√• (√Æ√≤ 1000$ √§√Æ 7000$):", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
				for(new i = strlen(inputtext) - 1; i != -1; i --) {
                switch(inputtext[i]) {
                        case '0'..'9': continue;
                        default: return SPD(playerid, 8888, DIALOG_STYLE_INPUT, "{FFCD00}√É√Æ√±√≥S√≠√∞√±√≤√¢√•√≠√≠√ª√© √≠√†√´√Æ√£", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¢√Æ√• √ß√≠√†√∑√•√≠√®√• √¢ √Ø√Æ√´√• √≠√®√¶√• (√Æ√≤ 1000$ √§√Æ 7000$):", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
                    }
                }
                if(strval(inputtext) < 1000 || strval(inputtext) > 7000) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§¬∏√≠ √≠√•√¢√•√∞√≠√ª√© √≠√†√´√Æ√£. √Ñ√Æ√Ø√≥√±√≤√®√¨√Æ √Æ√≤ 1000$ √§√Æ 7000$"), SPD(playerid, 8888, DIALOG_STYLE_INPUT, "{FFCD00}√É√Æ√±√≥S√≠√∞√±√≤√¢√•√≠√≠√ª√© √≠√†√´√Æ√£", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¢√Æ√• √ß√≠√†√∑√•√≠√®√• √¢ √Ø√Æ√´√• √≠√®√¶√• (√Æ√≤ 1000$ √§√Æ 7000$):", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
				Gos_Nalog[0] = strval(inputtext);
                SCMF(playerid, COLOR_MAIN, "√É√Æ√±. √≠√†√´√Æ√£ √®√ß√¨√•√≠√•√≠ √≠√† "CYELLOW"%d$", strval(inputtext));
				econ_panel(playerid), SaveInstrument();
				return DeletePVar(playerid, #gos_nalog);
			}
			if(!response) return 1;
			switch(listitem) {
                case 0: SPD(playerid, 8888, DIALOG_STYLE_INPUT, "{FFCD00}√ç√†√´√Æ√£ √≠√† √Ø√∞√ÆS√≠√¶√≥ √®√¨√≥√π√•√±√≤√¢√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √Ø√∞√Æ√∂√•√≠√≤ √≠√†√´√Æ√£√† √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente"), SetPVarInt(playerid, #business_nalog, true);
                case 1: SPD(playerid, 8888, DIALOG_STYLE_INPUT, "{FFCD00}√É√Æ√±√≥S√≠√∞√±√≤√¢√•√≠√≠√ª√© √≠√†√´√Æ√£", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¢√Æ√• √ß√≠√†√∑√•√≠√®√• √¢ √Ø√Æ√´√• √≠√®√¶√• (√Æ√≤ 1000$ √§√Æ 7000$):", "√É√Æ√≤√Æ√¢√Æ", "Siguiente"), SetPVarInt(playerid, #gos_nalog, true);
                case 2: {
                	new f_str[75];
                	format(f_str, sizeof(f_str), ""CWHITE"√ë√Æ√±√≤√Æ√ø√≠√®√• √™√†√ß√≠√ª √∏√≤√†√≤√†: {00cc00}%d$", Gos_Nalog[1]);
                	SPD(playerid, 951, DIALOG_STYLE_MSGBOX, "{FFCD00}√à√≠√¥√Æ√∞√¨√†√∂√®√ø", f_str, "Siguiente", "");
                }
                case 3: SPD(playerid, 9599, DIALOG_STYLE_INPUT, "{FFCD00}√è√Æ√Ø√Æ√´√≠√•√≠√®√• √™√†√ß√≠√ª", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √™√†√ß√≠√≥:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
                case 4: SPD(playerid, 9598, DIALOG_STYLE_INPUT, "{FFCD00}√ë√≠√ø√≤√®√• √§√•√≠√•√£ √± √™√†√ß√≠√ª", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √±√≠√ø√≤√º √± √™√†√ß√≠√ª:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
                /*
                case 5: SPD(playerid, 9655, DIALOG_STYLE_INPUT, "{FFCD00}√á√†√∞√Ø√´√†√≤√† √≠√† √∏√†√µ√≤√•", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√∞√•√§√≠√æ√æ √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ √°√≥√§√•√≤ √Ø√Æ√´√≥√∑√†√≤√º\n√®√£√∞√Æ√™ √ß√† √Æ√§√®√≠ √Ø√•√∞√•√≠√Æ√± √∞√≥√§√ª:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
                case 6: SPD(playerid, 9657, DIALOG_STYLE_INPUT, "{FFCD00}√á√†√∞√Ø√´√†√≤√† √£√∞√≥√ß√∑√®√™√Æ√¢", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√∞√•√§√≠√æ√æ √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ √°√≥√§√•√≤ √Ø√Æ√´√≥√∑√†√≤√º\n√®√£√∞√Æ√™ √ß√† √Æ√§√®√≠ √£√∞√≥√ß:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
                case 7: SPD(playerid, 9656, DIALOG_STYLE_INPUT, "{FFCD00}√á√†√∞√Ø√´√†√≤√† √≠√† √´√•√±√Æ√Ø√®√´√™√•", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√∞√•√§√≠√æ√æ √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ √°√≥√§√•√≤ √Ø√Æ√´√≥√∑√†√≤√º\n√®√£√∞√Æ√™ √ß√† √Æ√§√®√≠ √Ø√•√∞√•√≠√Æ√± √¨√†√≤√•√∞√®√†√´√Æ√¢:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
            	*/
            }
		}
		case 904: {
			if(!response) return 1;
			new i=listitem*12;
			new totalvalue = i+12;
			new str_last[125];
			string = "√ç√Æ√¨√•√∞\t√ë√≤√†√≤√≥√±\t√é√Ø√´√†√∑√•√≠√≠√ª√• √§√≠√®\t√è√Æ√±√≤√Æ√ø√´√•√∂\n\n"CWHITE"";
			for(; i < totalvalue; i ++) {
				if(!hotel_info[i][hotel_is_using]) format(str_last, sizeof(str_last), "%d\t√ë√¢√Æ√°√Æ√§√•√≠\t\t-\tNo\n", get_orig_num_hotel(i));
				else format(str_last, sizeof(str_last), "%d\t√á√†√≠√ø√≤\t\t%d\t%s\n", get_orig_num_hotel(i), hotel_info[i][hotel_days], hotel_info[i][hotel_owner]);
				strcat(string, str_last);
			}
			new titledl[45];
			format(titledl,sizeof(titledl),"{66cc99}√ë√Ø√®√±√Æ√™ √≠√Æ√¨√•√∞√Æ√¢ √≠√† %d √Ω√≤√†√¶√•",listitem+1);
			SPD(playerid, 906, DIALOG_STYLE_MSGBOX, titledl, string, "Siguiente", "Cerrar");
		}
		case 906: {
			if(!response) return 1;
			if(pData[playerid][pHotel] != -1) SPD(playerid, 1196, DIALOG_STYLE_LIST, "{FFCD00}√å√•√≠√æ √Æ√≤√•√´√ø", "√ë√Ø√®√±√Æ√™ √≠√Æ√¨√•√∞√Æ√¢\n√ê√•√£√®√±√≤√∞√†√∂√®√ø\n√é√Ø√´√†√≤√®√≤√º √Ø√∞√Æ√¶√®√¢√†√≠√®√•\n√Ñ√Æ√±√≤√†√¢√®√≤√º √≤√∞√†√≠√±√Ø√Æ√∞√≤ √™ √Æ√≤√•√´√æ {ff6640}(500$)\n{ff6640}√è√∞√ÆS√≠√≤√º "CWHITE"√≤√∞√†√≠√±√Ø√Æ√∞√≤ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥\n{fa1010}√è√∞√ÆS√≠√≤√º "CWHITE"√≤√∞√†√≠√±√Ø√Æ√∞√≤ √§√∞√≥√£√Æ√¨√≥ √®√£√∞√Æ√™√≥\n√Ç√ª√±√•√´√®√≤√º√±√ø", "Seleccione", "Cerrar");
			else SPD(playerid, 1196, DIALOG_STYLE_LIST, "{FFCD00}√å√•√≠√æ √Æ√≤√•√´√ø", "√ë√Ø√®√±√Æ√™ √≠√Æ√¨√•√∞√Æ√¢\n√ê√•√£√®√±√≤√∞√†√∂√®√ø", "Seleccione", "Cerrar");
		}
		case 1196: {
			if(!response) return 1;
			switch(listitem) {
				case 0: SPD(playerid,904,DIALOG_STYLE_LIST,"{FFCD00}√Ç√ª√°√•√∞√®√≤√• √Ω√≤√†√¶","1 √Ω√≤√†√¶\n2 √Ω√≤√†√¶\n3 √Ω√≤√†√¶","Seleccione","Cerrar");
				case 1: {
					if(pData[playerid][pHotel] != -1) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≥√¶√• √±√≠√ø√´√® √≠√Æ√¨√•√∞ √¢ √Æ√≤√•√´√•");
					if(pData[playerid][pHouse] != -1) 
						return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≥√¶√• √£√§√•-√≤√Æ √Ø√∞√Æ√¶√®√¢√†√•√≤√•. √ë√≠√ø√≤√º √≠√Æ√¨√•√∞ √≠√•√´√º√ß√ø");
					new bool: status = false, fmt_str[80];
					for(new i = 0; i < total_hotels; i ++) {
						if(hotel_info[i][hotel_is_using]) continue;
						status = true;
						SetPVarInt(playerid, "rhotel_id", i);
						format(fmt_str, sizeof(fmt_str), ""CWHITE"√ç√† %d √Ω√≤√†√¶√• √•√±√≤√º √±√¢√Æ√°√Æ√§√≠√ª√© √≠√Æ√¨√•√∞ (%d).\nQuieres √±√≠√ø√≤√º √•√£√Æ √ß√† %d$?", hotel_info[i][hotel_floor], get_orig_num_hotel(i),BizInfo[77][bCena][0]);
						SPD(playerid, 1197, DIALOG_STYLE_MSGBOX, "{FFCD00}√ê√•√£√®√±√≤√∞√†√∂√®√ø √≠√Æ√¨√•√∞√†", fmt_str, "S√≠", "No");
						break;
					}
					if(!status) return SCM(playerid, COLOR_LIGHTGREY, "√ë√¢√Æ√°√Æ√§√≠√ª√• √≠√Æ√¨√•√∞√† √¢ √Æ√≤√•√´√• √Æ√≤√±√≥√≤√±√≤√¢√≥√æ√≤");
				}
				case 2: SPD(playerid, 1896, DIALOG_STYLE_INPUT, "{FFCD00}√é√Ø√´√†√≤√† √Ø√∞√Æ√¶√®√¢√†√≠√®√ø", ""CWHITE"√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √§√≠√•√© √Æ√Ø√´√†√≤√ª √≠√Æ√¨√•√∞√† √¢ √Ø√Æ√´√• √≠√®√¶√•\n√å√†√™√±√®√¨√†√´√º√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √§√≠√•√©: 10", "√é√Ø√´√†√≤√®√≤√º", "Cerrar");
				case 3: {
					if(pData[playerid][pCar][0] == 0) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√∞√†√≠√±√Ø√Æ√∞√≤√†");
					if(pData[playerid][pCash] < 500) return SCM(playerid, COLOR_GREY, "√Ñ√Æ√±√≤√†√¢√™√† √≤√∞√†√≠√±√Ø√Æ√∞√≤√† √±√≤√Æ√®√≤ 500$");
					GameTextForPlayer(playerid, "~r~-500$", 3000, 1);
					Hook_GivePlayerMoney(playerid, -500);
					LoadCarPlayer(playerid, 1);
					SCM(playerid, COLOR_BLUE, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √§√Æ√±√≤√†√¢√´√•√≠ √™ √Æ√≤√•√´√æ √ß√† "CYELLOW"500$");
				}
				case 4: {
					if(pData[playerid][pCar][0] == 0) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√∞√†√≠√±√Ø√Æ√∞√≤√†");
					new fmt[180];
					format(fmt, sizeof(fmt), ""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √Ø√∞√ÆS√≠√≤√º √±√¢√Æ√© √†√¢√≤√Æ√¨√Æ√°√®√´√º √£√Æ√±√≥S√≠√∞√±√≤√¢√≥?\n√ë√≤√Æ√®√¨√Æ√±√≤√º √Ø√∞√ÆS√≠√¶√® √±√Æ√±√≤√†√¢√®√≤ 60%% √£√Æ√±. √±√≤√Æ√®√¨√Æ√±√≤√® (%d$)\n√é√≤√¨√•√≠√®√≤√º √Ø√∞√ÆS√≠√¶√≥ √°√≥√§√•√≤ √≠√•√¢√Æ√ß√¨√Æ√¶√≠√Æ", pData[playerid][p_car_cash][0]/100*60);
					SPD(playerid, 1869, DIALOG_STYLE_MSGBOX, "{FFCD00}√è√∞√ÆS√≠√¶√† √≤√∞√†√≠√±√Ø√Æ√∞√≤√†", fmt, "S√≠", "No");
				}
				case 5: SPD(playerid, 5565, DIALOG_STYLE_INPUT,"{FFCD00}√è√∞√ÆS√≠√¶√†",""CWHITE"√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø √¢√¢√•√§√®√≤√• √∑√•√∞√•√ß √Ø√∞√Æ√°√•√´\n√Ø√†√∞√†√¨√•√≤√∞√ª √§√´√ø √Ø√∞√ÆS√≠√¶√® √†√¢√≤√Æ√¨√Æ√°√®√´√ø\n\n"CLITEBLUE"[id √®√£√∞√Æ√™√†] [√∂√•√≠√†]","S√≠√´√•√•","Cerrar");
				case 6: {
					if(pData[playerid][pCar][0] != 0) return SCM(playerid, COLOR_LIGHTGREY, "√è√•√∞√•√§ √≤√•√¨ √™√†√™ √¢√ª√±√•√´√®√≤√º√±√ø √Ø√∞√ÆS√≠√©√≤√• √≤√∞√†√≠√±√Ø√Æ√∞√≤ "CPALEGREEN"(/sellcar)");
					new hotelid = pData[playerid][pHotel];
					pData[playerid][pHotel] = -1;
					format(hotel_info[hotelid][hotel_owner], 5, "None");
					hotel_info[hotelid][hotel_is_using] = false;
					hotel_info[hotelid][hotel_days] = 0;
					hotel_info[hotelid][hotel_lock] = false;
					mysql_format(mysql_Handle, string, 144, "UPDATE `hotel` SET `lock` = '0', `owner` = 'None', `days` = '0', `using` = '0' WHERE `id` = %d", hotelid);
					mysql_tquery(mysql_Handle, string);
					UpdatePlayerData(playerid, "pHotel", -1);
					SCM(playerid, COLOR_YELLOW, "√Ç√ª √¢√ª√±√•√´√®√´√®√±√º √®√ß √Æ√≤√•√´√ø");
				}
			}
		}
		case 1869: {
			if(!response) return 1;
			new priceat = pData[playerid][p_car_cash][0]/100*60;
			new strgmt[60];
			format(strgmt, sizeof(strgmt), "~g~+%d$ ~n~~g~ bank", priceat);
			GameTextForPlayer(playerid, strgmt, 3000, 1);
			Hook_GivePlayerMoney(playerid, priceat);
			pData[playerid][pCar][0] = 0;
			DestroyVehicle(house_carid[playerid][0]);
			if(place_coeff[playerid] != -1) car_places[place_coeff[playerid]] = false;
			if(FLAT_place_coeff[playerid] != -1) FLAT_car_places[FLAT_place_coeff[playerid]] = false;
			house_carid[playerid][0] = 0;
			pData[playerid][p_car_cash][0]=0;
			pData[playerid][t_wheel][0] = 0;
			pData[playerid][Un_CarType][0] = 0;
			pData[playerid][t_hydraulics][0] = 0;
			pData[playerid][t_stereo][0] = 0;
			pData[playerid][t_paintjob][0] = -1;
			pData[playerid][t_neon_num][0] = -1;
			pData[playerid][t_color_1][0] = -1;
			pData[playerid][t_color_2][0] = -1;
			strmid(num_plate[playerid][0], "None", 0, strlen("None"), 255);
			strmid(p_car_charact_1[playerid], "0, 0, 0, 0, 0, 0, 0", 0, 20, 255);
			UpdatePlayerDataEx(playerid, "p_car_charact_1", "0, 0, 0, 0, 0, 0, 0");
			UpdatePlayerData(playerid, "t_wheel_car_1", 0);
			UpdatePlayerData(playerid, "t_hydraulics_car_1", 0);
			UpdatePlayerData(playerid, "t_stereo_car_1", 0);
			UpdatePlayerData(playerid, "t_paintjob_car_1", -1);
			UpdatePlayerData(playerid, "Un_CarType_1", 0);
			UpdatePlayerData(playerid, "t_color_1_1", -1);
			UpdatePlayerData(playerid, "t_neon_num_1", -1);
			UpdatePlayerData(playerid, "t_color_2_1", -1);
			UpdatePlayerData(playerid, "pCar", 0);
			UpdatePlayerData(playerid, "p_car_cash_1", 0);
			UpdatePlayerDataEx(playerid, "num_plate_1", "None");

			new query[140];
	   		mysql_format(mysql_Handle, query, sizeof(query), "DELETE FROM `tuneobjects` WHERE `accountid`='%d' AND `numcar` = '0'",
			pData[playerid][pID]);
			mysql_tquery(mysql_Handle, query);

			SCMF(playerid, 0x6AB1FFFF, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √≥√±√Ø√•√∏√≠√Æ √Ø√∞√ÆS√≠√≠ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥ √ß√† {00cc00}%i$", priceat);
		}
		case 1896: {
			if(!response) return 1;
			if(!strlen(inputtext)) return SPD(playerid, 1896, DIALOG_STYLE_INPUT, "{FFCD00}√é√Ø√´√†√≤√† √Ø√∞√Æ√¶√®√¢√†√≠√®√ø", ""CWHITE"√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √§√≠√•√© √Æ√Ø√´√†√≤√ª √≠√Æ√¨√•√∞√† √¢ √Ø√Æ√´√• √≠√®√¶√•\n√å√†√™√±√®√¨√†√´√º√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √§√≠√•√©: 10", "√é√Ø√´√†√≤√®√≤√º", "Cerrar");
			for(new i = strlen(inputtext) - 1; i != -1; i --) {
                switch(inputtext[i]) {
                    case '0'..'9': continue;
                    default: return SPD(playerid, 1896, DIALOG_STYLE_INPUT, "{FFCD00}√é√Ø√´√†√≤√† √Ø√∞√Æ√¶√®√¢√†√≠√®√ø", ""CWHITE"√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √§√≠√•√© √Æ√Ø√´√†√≤√ª √≠√Æ√¨√•√∞√† √¢ √Ø√Æ√´√• √≠√®√¶√•\n√å√†√™√±√®√¨√†√´√º√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √§√≠√•√©: 10", "√é√Ø√´√†√≤√®√≤√º", "Cerrar");
                }
            }
            new val = strval(inputtext);
            new htel_id = pData[playerid][pHotel];
            new price_pay = val * 150, all_days = 10 - hotel_info[htel_id][hotel_days];
			if(all_days < strval(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Æ√Ø√´√†√≤√®√≤√º √≠√Æ√¨√•√∞ √°√Æ√´√•√• √∑√•√¨ √≠√† 10 √§√≠√•√©");
			if(pData[playerid][pCash] < price_pay) return SCMF(playerid, COLOR_LIGHTGREY, "√Ñ√´√ø √Æ√Ø√´√†√≤√ª √≠√Æ√¨√•√∞√† √≠√† √±√≤√Æ√´√º√™√Æ √§√≠√•√© √≠√≥√¶√≠√Æ "CCYAN"%d$", price_pay);
			hotel_info[htel_id][hotel_days] += val;
			Hook_GivePlayerMoney(playerid, -price_pay);
			BizInfo[77][bPribil] += price_pay;
			BizInfo[77][bBank] += price_pay;
			if(BizInfo[77][bBank] > 10000000) BizInfo[BizEnter{playerid}][bBank] = 10000000;
			UpdateBusinessData(77, "bPribil", BizInfo[BizEnter{playerid}][bPribil]);
			UpdateBusinessData(77, "bBank", BizInfo[BizEnter{playerid}][bBank]);
			new gametext_str[30];
			format(gametext_str, sizeof(gametext_str), "~r~-%d$", price_pay);
            GameTextForPlayer(playerid, gametext_str, 3000, 1);
			mysql_format(mysql_Handle, string, 90, "UPDATE `hotel` SET `days` = %d WHERE `id` = %d", hotel_info[htel_id][hotel_days], htel_id);
			mysql_tquery(mysql_Handle, string);
			SCMF(playerid, COLOR_MAIN, "√ç√Æ√¨√•√∞ √≥√±√Ø√•√∏√≠√Æ √Æ√Ø√´√†√∑√•√≠ √•√π√• √≠√† "CORANGE"%d √§√≠√•√© "CMAIN"√ß√† "CYELLOW"%d$", val, price_pay);
		}
		case 1197: {
			new hotel_num = GetPVarInt(playerid, "rhotel_id");
			DeletePVar(playerid, "rhotel_id");
			if(!response) return 1;
			if(pData[playerid][pHotel] != -1) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≥√¶√• √±√≠√ø√´√® √≠√Æ√¨√•√∞ √¢ √Æ√≤√•√´√•");
			if(pData[playerid][pHouse] != -1 || pData[playerid][pFlat] != -1 || pData[playerid][p_rent_flat] != -1) 
				return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≥√¶√• √£√§√•-√≤√Æ √Ø√∞√Æ√¶√®√¢√†√•√≤√•. √ë√≠√ø√≤√º √≠√Æ√¨√•√∞ √≠√•√´√º√ß√ø");
			if(pData[playerid][pCash] < BizInfo[77][bCena][0]) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √§√•√≠√•√£ √§√´√ø √±√≠√ø√≤√®√ø √≠√Æ√¨√•√∞√†");
			Hook_GivePlayerMoney(playerid, -BizInfo[77][bCena][0]);
			BizInfo[77][bPribil] += BizInfo[77][bCena][0];
			BizInfo[77][bBank] += BizInfo[77][bCena][0];
			if(BizInfo[77][bBank] > 10000000) BizInfo[77][bBank] = 10000000;
			UpdateBusinessData(77, "bPribil", BizInfo[77][bPribil]);
			UpdateBusinessData(77, "bBank", BizInfo[77][bBank]);
			pData[playerid][pHotel] = hotel_num;
			hotel_info[hotel_num][hotel_is_using] = true;
			hotel_info[hotel_num][hotel_lock] = true;
			hotel_info[hotel_num][hotel_days] = 1;
			UpdatePlayerData(playerid, "pHotel", hotel_num);
			pData[playerid][pSpawn] = 3;
			UpdatePlayerData(playerid, "pSpawn", 3);
			format(hotel_info[hotel_num][hotel_owner], 24, pData[playerid][pName]);
			mysql_format(mysql_Handle, string, 160, "UPDATE `hotel` SET `lock` = '1', `owner` = '%s', `days` = '1', `using` = '1' WHERE `id` = %d", pData[playerid][pName], hotel_num);
			mysql_tquery(mysql_Handle, string);
			PlayerPlaySound(playerid, 1700, 0.0, 0.0, 0.0);
			hotel_enter[playerid] = hotel_num;
			SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CMAIN"√à√≠√¥√Æ√∞√¨√†√∂√®√ø", ""CWHITE"√è√Æ√ß√§√∞√†√¢√´√ø√•√¨! √Ç√ª √±√≠√ø√´√® √≠√Æ√¨√•√∞ √¢ √Æ√≤√•√´√•. Usar√≤√• "CLIGHTBLUE"/hotel "CWHITE"√∑√≤√Æ√°√ª Cerrar √®√´√® √Æ√≤√™√∞√ª√≤√º √•√£√Æ\n√ë√•√©√∑√†√± √Ç√†√¨ √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √Æ√Ø√´√†√≤√®√≤√º √•√£√Æ. √ù√≤√Æ √¨√Æ√¶√≠√Æ √±√§√•√´√†√≤√º √¢ √´√Æ√°√°√® √Æ√≤√•√´√ø", "√é√™", "");
		}

		case 61: {
			if(!response) {
				DeletePVar(playerid, "market_numset");
				DeletePVar(playerid, "market_priceitem");
				DeletePVar(playerid, "market_inv_slot");
				return DeletePVar(playerid, "market_inv_isaccessory");
			}
			new len=strlen(inputtext);
			if(!len) 
				return SPD(playerid, 61, DIALOG_STYLE_INPUT,"√è√∞√ÆS√≠√¶√†",""CWHITE"√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √≤√Æ√¢√†√∞√† √§√´√ø √¢√ª√±√≤√†√¢√´√•√≠√®√ø:","√É√Æ√≤√Æ√¢√Æ","Cerrar");
			new val=strval(inputtext);
			for(new i = len - 1; i != -1; i --) {
				switch(inputtext[i]) {
					case '0'..'9': continue;
					default: return SPD(playerid, 61, DIALOG_STYLE_INPUT,"√è√∞√ÆS√≠√¶√†",""CWHITE"√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √≤√Æ√¢√†√∞√† √§√´√ø √¢√ª√±√≤√†√¢√´√•√≠√®√ø:","√É√Æ√≤√Æ√¢√Æ","Cerrar");
				}
			}
			if(inv_info[playerid][i_clickID] == -1)
				return 1;

			new invslot=GetPVarInt(playerid, "market_inv_slot");

			if(inv_info[playerid][i_type][invslot] == 2 || 
				inv_info[playerid][i_type][invslot] == 3) return SCM(playerid, COLOR_LIGHTGREY,"√ù√≤√≥ √¢√•√π√º √≠√•√´√º√ß√ø √¢√ª√±√≤√†√¢√®√≤√º √≠√† √Ø√∞√ÆS√≠√¶√≥");

			new nummarket=GetPVarInt(playerid, "market_numset");
			
			if(invslot == -1) return 1;
			new freenum=-1;
			for(new i=0; i<5; i++) {
				if(modelitem[nummarket][i] != -1) 
					continue;
				freenum=i;
				break;
			}

			if(freenum == -1) 
				return SCM(playerid,COLOR_LIGHTGREY,"√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √¢√ª√±√≤√†√¢√®√≤√º √≠√† √Ø√∞√ÆS√≠√¶√≥ √°√Æ√´√•√• 5 √≤√Æ√¢√†√∞√Æ√¢");

			if(val < 1 || val > inv_info[playerid][i_count][invslot]) {
				SPD(playerid, 61, DIALOG_STYLE_INPUT,"√è√∞√ÆS√≠√¶√†",""CWHITE"√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √≤√Æ√¢√†√∞√† √§√´√ø √¢√ª√±√≤√†√¢√´√•√≠√®√ø:","√É√Æ√≤√Æ√¢√Æ","Cerrar");
				return SCM(playerid,COLOR_LIGHTGREY,"√Ç√¢√•√§√•√≠√Æ √≠√•√™√Æ√∞√∞√•√™√≤√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ");
			}

			new model;

			if(GetPVarInt(playerid, "market_inv_isaccessory")) 
				model=inv_info[playerid][in_amodel][invslot];
			else model=item_data[inv_info[playerid][i_type][invslot]][itemmodel];

			close_inventory(playerid);
			SetPVarInt(playerid, "count_prod", val);
			new Float:posmX,Float:posmY,Float:posmZ,Float:posmA;
			switch(nummarket) {
				case 0: {
					posmX=1325.049438;
					posmY=-1435.264526;
					posmZ=13.189930;
					posmA=180;
				}
				case 1: {
					posmX=1313.134800;
					posmY=-1432.012200;
					posmZ=13.260000;
					posmA=180;
				}
				case 2: {
					posmX=1303.629900;
					posmY=-1432.012200;
					posmZ=13.260000;
					posmA=180;
				}
				case 3: {
					posmX=1293.264000;
					posmY=-1432.012200;
					posmZ=13.260000;
					posmA=180;
				}
				case 4: {
					posmX=1288.200683;
					posmY=-1429.448600;
					posmZ=13.259940;
					posmA=90;
				}
				case 5: {
					posmX=1293.017000;
					posmY=-1424.253784;
					posmZ=13.260000;
					posmA=0;
				}
				case 6: {
					posmX=1300.538000;
					posmY=-1424.253784;
					posmZ=13.260000;
					posmA=0;
				}
				case 7: {
					posmX=1310.837500;
					posmY=-1424.253784;
					posmZ=13.260000;
					posmA=0;
				}
				case 8: {
					posmX=1317.893600;
					posmY=-1424.253784;
					posmZ=13.260000;
					posmA=0;
				}
			}
			install_market_obj[playerid][freenum] = CreateObject(model, posmX,posmY,posmZ,0, 0, posmA);
			Streamer_Update(playerid);
			SetPVarInt(playerid, "market_IsEditing", 1);
			SetPVarInt(playerid, "market_NumProd", freenum);
			EditObject(playerid, install_market_obj[playerid][freenum]);
			SCM(playerid, -1, "√ì√±√≤√†√≠√Æ√¢√®√≤√• √¢√ª√°√∞√†√≠√≠√ª√© √≤√Æ√¢√†√∞ √≠√† √Ø√∞√®√´√†√¢√™√• √® √≠√†√¶√¨√®√≤√• √®√™√Æ√≠√™√≥ "CBLUE"\"√ë√Æ√µ√∞√†√≠√®√≤√º\"");
			SCM(playerid, -1, "√è√Æ√§√±√™√†√ß√™√†: √Ç√ª √¨√Æ√¶√•√≤√• √§√¢√®√£√†√≤√º √™√†√¨√•√∞√≥, √ß√†√¶√®√¨√†√ø "CYELLOW"√è√ê√é√Å√Ö√ã");
		}

		case 147: {
			if(!response) {
				DeletePVar(playerid, "market_numset");
				DeletePVar(playerid, "market_inv_slot");
				DeletePVar(playerid, "market_inv_isskin");
				return DeletePVar(playerid, "market_inv_isaccessory");
			}
			new len=strlen(inputtext);
			if(!len) 
				return SPD(playerid,147,DIALOG_STYLE_INPUT,"√è√∞√ÆS√≠√¶√†",""CWHITE"Quieres √¢√ª√±√≤√†√¢√®√≤√º √≤√Æ√¢√†√∞ √≠√† √Ø√∞√ÆS√≠√¶√≥.\n√Ç√¢√•√§√®√≤√• √∂√•√≠√≥ √§√´√ø √Ω√≤√Æ√£√Æ √≤√Æ√¢√†√∞√† √¢ √Ø√Æ√´√• √≠√®√¶√•:","√É√Æ√≤√Æ√¢√Æ","Cerrar");
			new val=strval(inputtext);
			for(new i = len - 1; i != -1; i --) {
				switch(inputtext[i]) {
					case '0'..'9': continue;
					default: return SPD(playerid,147,DIALOG_STYLE_INPUT,"√è√∞√ÆS√≠√¶√†",""CWHITE"Quieres √¢√ª√±√≤√†√¢√®√≤√º √≤√Æ√¢√†√∞ √≠√† √Ø√∞√ÆS√≠√¶√≥.\n√Ç√¢√•√§√®√≤√• √∂√•√≠√≥ √§√´√ø √Ω√≤√Æ√£√Æ √≤√Æ√¢√†√∞√† √¢ √Ø√Æ√´√• √≠√®√¶√•:","√É√Æ√≤√Æ√¢√Æ","Cerrar");
				}
			}
			if(val < 100 || val > 500000) {
				SPD(playerid,147,DIALOG_STYLE_INPUT,"√è√∞√ÆS√≠√¶√†",""CWHITE"Quieres √¢√ª√±√≤√†√¢√®√≤√º √≤√Æ√¢√†√∞ √≠√† √Ø√∞√ÆS√≠√¶√≥.\n√Ç√¢√•√§√®√≤√• √∂√•√≠√≥ √§√´√ø √Ω√≤√Æ√£√Æ √≤√Æ√¢√†√∞√† √¢ √Ø√Æ√´√• √≠√®√¶√•:","√É√Æ√≤√Æ√¢√Æ","Cerrar");
				return SCM(playerid,COLOR_LIGHTGREY,"√ì√™√†√¶√®√≤√• √∂√•√≠√≥ √Æ√≤ 100$ √§√Æ 500000$");
			}
			if(inv_info[playerid][i_clickID] == -1)
				return 1;

			new invslot=GetPVarInt(playerid, "market_inv_slot");

			if(inv_info[playerid][i_type][invslot] == 2 || 
				inv_info[playerid][i_type][invslot] == 3) return SCM(playerid, COLOR_LIGHTGREY,"√ù√≤√≥ √¢√•√π√º √≠√•√´√º√ß√ø √¢√ª√±√≤√†√¢√®√≤√º √≠√† √Ø√∞√ÆS√≠√¶√≥");

			new nummarket=GetPVarInt(playerid, "market_numset");
			
			if(invslot == -1) return 1;
			new freenum=-1;
			for(new i=0; i<5; i++) {
				if(modelitem[nummarket][i] != -1) 
					continue;
				freenum=i;
				break;
			}
			new countskins;
			for(new i=0; i<5; i++) {
				if(!item_is_Skin[nummarket][i]) 
					continue;
				countskins++;
			}

			if(countskins >= 3) return SCM(playerid,COLOR_LIGHTGREY,"√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √¢√ª√±√≤√†√¢√´√ø√≤√º √≠√† √Ø√∞√ÆS√≠√¶√≥ √°√Æ√´√•√• 3 √±√™√®√≠√Æ√¢");

			if(freenum == -1) 
				return SCM(playerid,COLOR_LIGHTGREY,"√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √¢√ª√±√≤√†√¢√®√≤√º √≠√† √Ø√∞√ÆS√≠√¶√≥ √°√Æ√´√•√• 5 √≤√Æ√¢√†√∞√Æ√¢");

			SetPVarInt(playerid, "market_priceitem", val);

			if(inv_info[playerid][i_count][invslot] > 1) 
				return SPD(playerid, 61, DIALOG_STYLE_INPUT,"√è√∞√ÆS√≠√¶√†",""CWHITE"√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √≤√Æ√¢√†√∞√† √§√´√ø √¢√ª√±√≤√†√¢√´√•√≠√®√ø:","√É√Æ√≤√Æ√¢√Æ","Cerrar");

			new model;

			if(GetPVarInt(playerid, "market_inv_isskin")) {
				switch(random(2)) {
					case 0: model=2399;
					case 1: model=2390;
				}
				SetPVarInt(playerid, "market_inv_skinobj", model);
			}
			else if(GetPVarInt(playerid, "market_inv_isaccessory")) 
				model=inv_info[playerid][in_amodel][invslot];
			else model=item_data[inv_info[playerid][i_type][invslot]][itemmodel];

			close_inventory(playerid);
			SetPVarInt(playerid, "count_prod", 1);

			new Float:posmX,Float:posmY,Float:posmZ,Float:posmA;
			switch(nummarket) {
				case 0: {
					posmX=1325.049438;
					posmY=-1435.264526;
					posmZ=13.189930;
					posmA=180;
				}
				case 1: {
					posmX=1313.134800;
					posmY=-1432.012200;
					posmZ=13.260000;
					posmA=180;
				}
				case 2: {
					posmX=1303.629900;
					posmY=-1432.012200;
					posmZ=13.260000;
					posmA=180;
				}
				case 3: {
					posmX=1293.264000;
					posmY=-1432.012200;
					posmZ=13.260000;
					posmA=180;
				}
				case 4: {
					posmX=1288.200683;
					posmY=-1429.448600;
					posmZ=13.259940;
					posmA=90;
				}
				case 5: {
					posmX=1293.017000;
					posmY=-1424.253784;
					posmZ=13.260000;
					posmA=0;
				}
				case 6: {
					posmX=1300.538000;
					posmY=-1424.253784;
					posmZ=13.260000;
					posmA=0;
				}
				case 7: {
					posmX=1310.837500;
					posmY=-1424.253784;
					posmZ=13.260000;
					posmA=0;
				}
				case 8: {
					posmX=1317.893600;
					posmY=-1424.253784;
					posmZ=13.260000;
					posmA=0;
				}
			}

			install_market_obj[playerid][freenum] = CreateObject(model, posmX,posmY,posmZ,0, 0, posmA);
			Streamer_Update(playerid);
			SetPVarInt(playerid, "market_IsEditing", 1);
			SetPVarInt(playerid, "market_NumProd", freenum);
			EditObject(playerid, install_market_obj[playerid][freenum]);
			SCM(playerid, -1, "√ì√±√≤√†√≠√Æ√¢√®√≤√• √¢√ª√°√∞√†√≠√≠√ª√© √≤√Æ√¢√†√∞ √≠√† √Ø√∞√®√´√†√¢√™√• √® √≠√†√¶√¨√®√≤√• √®√™√Æ√≠√™√≥ "CBLUE"\"√ë√Æ√µ√∞√†√≠√®√≤√º\"");
			SCM(playerid, -1, "√è√Æ√§√±√™√†√ß√™√†: √Ç√ª √¨√Æ√¶√•√≤√• √§√¢√®√£√†√≤√º √™√†√¨√•√∞√≥, √ß√†√¶√®√¨√†√ø "CYELLOW"√è√ê√é√Å√Ö√ã");
		}

		case 951: econ_panel(playerid);
		case 9599: {
			if(!response) return econ_panel(playerid);
			if(!strlen(inputtext)) return SPD(playerid, 9599, DIALOG_STYLE_INPUT, "{FFCD00}√è√Æ√Ø√Æ√´√≠√•√≠√®√• √™√†√ß√≠√ª", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √™√†√ß√≠√≥:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
			for(new i = strlen(inputtext) - 1; i != -1; i --) {
                switch(inputtext[i]) {
                    case '0'..'9': continue;
                    default: return SCM(playerid, COLOR_GREY, "√Ç√¢√•√§√•√≠√† √≠√•√¢√•√∞√≠√†√ø √±√≥√¨√¨√†"), SPD(playerid, 9599, DIALOG_STYLE_INPUT, "{FFCD00}√è√Æ√Ø√Æ√´√≠√•√≠√®√• √™√†√ß√≠√ª", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √™√†√ß√≠√≥:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
                }
            }
            if(strval(inputtext) < 1) return SCM(playerid, COLOR_GREY, "√Ç√¢√•√§√•√≠√† √≠√•√¢√•√∞√≠√†√ø √±√≥√¨√¨√†"), SPD(playerid, 9599, DIALOG_STYLE_INPUT, "{FFCD00}√è√Æ√Ø√Æ√´√≠√•√≠√®√• √™√†√ß√≠√ª", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √™√†√ß√≠√≥:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
            if(strval(inputtext) > 100000) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Ø√Æ√´√Æ√¶√®√≤√º √±√≥√¨√¨√≥ √°√Æ√´√º√∏√• 100000$ √ß√† √∞√†√ß"), SPD(playerid, 9599, DIALOG_STYLE_INPUT, "{FFCD00}√è√Æ√Ø√Æ√´√≠√•√≠√®√• √™√†√ß√≠√ª", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √™√†√ß√≠√≥:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
            if(pData[playerid][pCash] < strval(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√†√™√Æ√© √±√≥√¨√¨√ª"), SPD(playerid, 9599, DIALOG_STYLE_INPUT, "{FFCD00}√è√Æ√Ø√Æ√´√≠√•√≠√®√• √™√†√ß√≠√ª", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √™√†√ß√≠√≥:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
            Hook_GivePlayerMoney(playerid, -strval(inputtext));
			Gos_Nalog[1] += strval(inputtext);
            format(string, 50, "~r~-%d$", strval(inputtext));
            GameTextForPlayer(playerid, string, 3000, 1);
			new mar_string[144];
			if(pData[playerid][pSex] == 1) format(mar_string,144,"%s %s √Ø√Æ√´√Æ√¶√®√´ √¢ √™√†√ß√≠√≥ √∏√≤√†√≤√† %i$", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], GetName(playerid), strval(inputtext));
			else format(mar_string,144,"%s %s √Ø√Æ√´√Æ√¶√®√´√† √¢ √™√†√ß√≠√≥ √∏√≤√†√≤√† %i$", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], GetName(playerid), strval(inputtext));
			SFFM(26,COLOR_MAIN,mar_string);
			return SaveInstrument();
		}
		case 474: {
			if(!response) return 1;
			new org_number;
			switch(listitem) {
				case 1,6,10,14,18: return SPD(playerid, 474, DIALOG_STYLE_LIST, ""CMAIN"√è√∞√Æ√±√´√≥√∏√®√¢√†√≠√®√• √∑√†√≤√Æ√¢ √Æ√∞√£√†√≠√®√ß√†√∂√®√©", 
									"{ff2200}apagar √Ø√∞√Æ√±√´√≥√∏√®√¢√†√≠√®√•\n \n\
									\
									{ccff00}Tyr Kos-Anthosa\n\
									{ccff00}Kyryo Pan-Hiero\n\
									{ccff00}Tyr Vas-Venturasa\n\
									{ccff00}Administraci√≥n residente\n \n\
									\
									{0000ff}√ì√Ø√∞. Por el favor de Ros-Anthos\n\
									{0000ff}√ì√Ø√∞. por orden de Pan-Riero\n\
									{0000ff}√ì√Ø√∞. Por el favor de Vas-Venturas\n \n\
									\
									{ff6666}Columna de Ros-Anthos\n\
									{ff6666}Colinitza Pan-Riero\n\
									{ff6666}Columbia Vas-Venturasa\n \n\
									\
									{996633}Noticias de oficina\n\
									{996633}Fuerza a√©rea militar\n\
									{996633}Armada\n \n\
									\
									{FFCC66}El instalador\n\
									{ff6600}Instalaciones de informaci√≥n masiva",
								"Seleccione", "Cerrar");
				case 0: {
					if(pData[playerid][pMember] != 2) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [016]");
					if(!GetPVarInt(playerid, "listening_enabled")) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √Ø√∞√Æ√±√´√≥√∏√®√¢√†√•√≤√• √∑√†√≤ √Æ√∞√£√†√≠√®√ß√†√∂√®√® √¢ S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤");
					DeletePVar(playerid, "listening_orgid");
					DeletePVar(playerid, "listening_enabled");
					PlayerPlaySound(playerid, 4202, 0.0, 0.0, 0.0);
					return SCM(playerid, COLOR_YELLOW, "√Ç√ª √Æ√≤√™√´√æ√∑√®√´√® √Ø√∞√Æ√±√´√≥√∏√®√¢√†√≠√®√•");
				}
				case 2: org_number = 7;
				case 3: org_number = 8;
				case 4: org_number = 9;
				case 5: org_number = 26;
				case 7: org_number = 1;
				case 8: org_number = 10;
				case 9: org_number = 21;
				case 11: org_number = 4;
				case 12: org_number = 28;
				case 13: org_number = 29;
				case 15: org_number = 19;
				case 16: org_number = 20;
				case 17: org_number = 27;
				case 19: org_number = 11;
				case 20: org_number = 16;
			}
			SetPVarInt(playerid, "listening_orgid", org_number);
			SetPVarInt(playerid, "listening_enabled", 1);
			if(org_number == 11 || org_number == 16) 
				SetPVarInt(playerid, "listeningaddit", 1);
			else DeletePVar(playerid, "listeningaddit");
			GameTextForPlayer(playerid, "~g~LISTENING ON", 3000, 6);
			PlayerPlaySound(playerid, 20803, 0.0, 0.0, 0.0);
			SCM(playerid, COLOR_MAIN, "√ê√•√¶√®√¨ √Ø√∞√Æ√±√´√≥√∏√®√¢√†√≠√®√ø √≥√±√Ø√•√∏√≠√Æ √¢√™√´√æ√∑√•√≠");
		}
		case 18257:
	    {
	        if(!response) return 1;
			if(listitem >= 0 || listitem <= 4)
			{
				new veh = g_iVehicleCarID[playerid];
				if(g_iVehicleDetails[veh][listitem][eObjectID] == -1)
				{
					return ShowPlayerDialog(playerid, 18258, DIALOG_STYLE_MSGBOX, "{ff6600}√è√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√•", ""CWHITE"√Ç √Ω√≤√Æ√¨ √±√´√Æ√≤√• No √Æ√°√∫√•√™√≤√†.\n\
					√Ç√ª √¨√Æ√¶√•√≤√• √±√Æ√ßS√≠√≤√º √≠√Æ√¢√ª√© √Æ√°√∫√•√™√≤. √è√∞√Æ√§√Æ√´√¶√®√≤√º?", "S√≠", "No");
				}
				else
				{
				    SetPVarInt(playerid, "idxTune", listitem);
				    new str[64];
				    format(str, sizeof(str), "{ffdd00}%d √±√´√Æ√≤", listitem+1);
				    return ShowPlayerDialog(playerid, 18259, DIALOG_STYLE_LIST, str, "1. √ê√•S√≠√™√≤√®√∞√Æ√¢√†√≤√º √Ø√Æ√´√Æ√¶√•√≠√®√•\n2. √ìS√≠√´√®√≤√º √Æ√°√∫√•√™√≤", "Seleccione", "Cerrar");
				}
			}
	    }
	    case 18259:
	    {
	        if(!response) return ao_edit_menu(playerid);
	        switch(listitem)
	        {
	            case 0:
	            {
	                new idx = GetPVarInt(playerid, "idxTune");
	                
	                DestroyObject(g_iVehicleDetails[g_iVehicleCarID[playerid]][idx][eObjectID]);
	                g_iVehicleDetails[g_iVehicleCarID[playerid]][idx][eObjectID] = -1;
	                new Float:floPos[3];
	    			GetVehiclePos(g_iVehicleCarID[playerid], floPos[0], floPos[1], floPos[2]);
	    			
	                g_iVehicleIDObject[playerid] = CreateObject(g_iVehicleDetails[g_iVehicleCarID[playerid]][idx][eObject],
					floPos[0] + g_iVehicleDetails[g_iVehicleCarID[playerid]][idx][ePos][0]
					, floPos[1] + g_iVehicleDetails[g_iVehicleCarID[playerid]][idx][ePos][1]
					, floPos[2] + g_iVehicleDetails[g_iVehicleCarID[playerid]][idx][ePos][2],
					g_iVehicleDetails[g_iVehicleCarID[playerid]][idx][eRot][0], g_iVehicleDetails[g_iVehicleCarID[playerid]][idx][eRot][1], g_iVehicleDetails[g_iVehicleCarID[playerid]][idx][eRot][2]);
					EditObject(playerid, g_iVehicleIDObject[playerid]);
					SCM(playerid, -1, "√ì√±√≤√†√≠√Æ√¢√®√≤√• √Æ√°√∫√•√™√≤ √¢ √´√æ√°√Æ√¨ √¨√•√±√≤√• √†√¢√≤√Æ√¨√Æ√°√®√´√ø √® √≠√†√¶√¨√®√≤√• √®√™√Æ√≠√™√≥ "CBLUE"\"√ë√Æ√µ√∞√†√≠√®√≤√º\"");
					SCM(playerid, -1, "√í√†√™√¶√• √¨√Æ√¶√≠√Æ √¢√ª√©√≤√® √®√ß √¨√†√∏√®√≠√ª √® √§√¢√®√£√†√≤√º √™√†√¨√•√∞√≥, √ß√†√¶√®√¨√†√ø "CYELLOW"√è√ê√é√Å√Ö√ã");
	            }
	            case 1:
	            {
	                new idx = GetPVarInt(playerid, "idxTune");
	                DestroyObject(g_iVehicleDetails[g_iVehicleCarID[playerid]][idx][eObjectID]);

	                new num_car;
					if(house_carid[playerid][0] && g_iVehicleCarID[playerid] == house_carid[playerid][0]) num_car = 0;
					if(house_carid[playerid][1] && g_iVehicleCarID[playerid] == house_carid[playerid][1]) num_car = 1;
					if(house_carid[playerid][2] && g_iVehicleCarID[playerid] == house_carid[playerid][2]) num_car = 2;
	                new query[140];
	                mysql_format(mysql_Handle, query, sizeof(query), "DELETE FROM `tuneobjects` WHERE `modelid`='%d' AND `accountid`='%d' AND `numcar` = '%d'",
					g_iVehicleDetails[g_iVehicleCarID[playerid]][idx][eObject],pData[playerid][pID],num_car);
					mysql_tquery(mysql_Handle, query);
	                SCM(playerid, 0xFF9900AA, "√é√°√∫√•√™√≤ √≥√±√Ø√•√∏√≠√Æ √≥S√≠√´¬∏√≠");
	                g_iVehicleDetails[g_iVehicleCarID[playerid]][idx][eObjectID] = -1;

	                ao_edit_menu(playerid);
	            }
	        }
	    }
	    case 18256:
	    {
	        if(!response) return ao_edit_menu(playerid);
	        if(listitem < 0 || listitem > 5) return ao_edit_menu(playerid);
	        SetPVarInt(playerid, "categoryTune", listitem);
	        new bigstr[512]="√ç√Æ√¨√•√∞\tID √¨√Æ√§√•√´√®\n", 
	        	num=1;
	        new str[50];
	        for(new i = 0; i < MAX_DETAILS_IN_CATEGORY; i++)
	        {
	            if(g_iVehicleComponents[listitem][i] == 0) break;
	            format(str, sizeof(str), "%i\t%i\n", num, g_iVehicleComponents[listitem][i]);
	            strcat(bigstr, str);
	            num++;
	        }
	        return ShowPlayerDialog(playerid, 18260, DIALOG_STYLE_TABLIST_HEADERS, "√Ç√ª√°√•√∞√®√≤√• √Æ√°√∫√•√™√≤", bigstr, "Seleccione", "Cerrar");
	    }
	    case 18260:
	    {
	        if(!response) return ao_attach_menu(playerid);

	        if(pData[playerid][pCash] < 10000) 
	        	return SCM(playerid, COLOR_LIGHTGREY, "√ì√±√≤√†√≠√Æ√¢√™√† √Æ√°√∫√•√™√≤√† √≠√† √¨√†√∏√®√≠√≥ √±√≤√Æ√®√≤ 10000$");

	        new Float:floPos[3];
  			GetVehiclePos(g_iVehicleCarID[playerid], floPos[0], floPos[1], floPos[2]);
  			SetPVarInt(playerid, "idxModel", listitem);
     		g_iVehicleIDObject[playerid] = CreateObject(g_iVehicleComponents[GetPVarInt(playerid, "categoryTune")][listitem], floPos[0], floPos[1], floPos[2], 0.0, 0.0, 0.0);
			EditObject(playerid, g_iVehicleIDObject[playerid]);
			SetPVarInt(playerid, "isInstalling", 1);
			SCM(playerid, -1, "√ì√±√≤√†√≠√Æ√¢√®√≤√• √Æ√°√∫√•√™√≤ √¢ √´√æ√°√Æ√¨ √¨√•√±√≤√• √†√¢√≤√Æ√¨√Æ√°√®√´√ø √® √≠√†√¶√¨√®√≤√• √®√™√Æ√≠√™√≥ "CBLUE"\"√ë√Æ√µ√∞√†√≠√®√≤√º\"");
			SCM(playerid, -1, "√è√Æ√§√±√™√†√ß√™√†: √¨√Æ√¶√≠√Æ √¢√ª√©√≤√® √®√ß √¨√†√∏√®√≠√ª √® √§√¢√®√£√†√≤√º √™√†√¨√•√∞√≥, √ß√†√¶√®√¨√†√ø "CYELLOW"√è√ê√é√Å√Ö√ã");
	    }
	    case 18258:
	    {
	        if(response) ao_attach_menu(playerid);
	        else ao_edit_menu(playerid);
	    }

		case 652: {
			if(!response) return 1;
			new inv_clickedslot = inv_info[playerid][i_clickID];
			if(inv_clickedslot != -1) {
				switch(inv_info[playerid][i_type][inv_clickedslot]) {
					case 0: {
						pData[playerid][pSpal] = 0;
						UpdatePlayerData(playerid,"spal",0);
					}
					case 1: {
						pData[playerid][pSiga] = 0;
						UpdatePlayerData(playerid,"sigar",0);
					}
					case 2: {
						player_allowed[playerid] = false;
						player_allowed_model[playerid] = -1;
					}
					case 3: {
						pData[playerid][pPnumber] = -1;
						UpdatePlayerData(playerid,"pPnumber",-1);
					}
					case 4: {
						pData[playerid][pAptech] = 0;
						UpdatePlayerData(playerid,"pAptech",0);
					}
					case 5: {
						pData[playerid][pMasks] = 0;
						UpdatePlayerData(playerid,"pMasks",0);
					}
					case 6: {
						pData[playerid][pRec]=false;
						UpdatePlayerData(playerid,"pRec",0);
					}
					case 7: {
						fuelcan_buyed[playerid] = false;
						if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) 
							RemovePlayerAttachedObject(playerid, 2);
					}
					case 8: {
						pData[playerid][casino_amount]=0;
						UpdatePlayerData(playerid,"casino_amount",0);
					}
				}
				PlayerTextDrawBoxColor(playerid, player_invTD[playerid][inv_clickedslot], 1025056153);
				PlayerTextDrawHide(playerid, player_invTD[playerid][inv_clickedslot]);
				PlayerTextDrawShow(playerid, player_invTD[playerid][inv_clickedslot]);
				PlayerTextDrawHide(playerid, inv_previewTD[playerid][inv_clickedslot]);
				if(inv_info[playerid][i_count][inv_clickedslot] > 1) 
					PlayerTextDrawHide(playerid, td_inv_counts[playerid][inv_clickedslot]);
				inv_info[playerid][is_click][inv_clickedslot] = false;
				inv_info[playerid][i_clickID] = -1;
				RemoveItemFromInventory(playerid, inv_info[playerid][i_type][inv_clickedslot]);
				SCM(playerid,0xFF3333FF,"√è√∞√•√§√¨√•√≤ √¢√ª√°√∞√Æ√∏√•√≠");
			}
		}
		case 653: {
			if(!response) return 1;
			new inv_clickedslot = inv_info[playerid][i_clickID];
			if(inv_clickedslot != -1) {
				PlayerTextDrawBoxColor(playerid, player_invTD[playerid][inv_clickedslot], 1025056153);
				PlayerTextDrawHide(playerid, player_invTD[playerid][inv_clickedslot]);
				PlayerTextDrawShow(playerid, player_invTD[playerid][inv_clickedslot]);
				PlayerTextDrawHide(playerid, inv_previewTD[playerid][inv_clickedslot]);
				if(inv_info[playerid][i_count][inv_clickedslot] > 1) 
					PlayerTextDrawHide(playerid, td_inv_counts[playerid][inv_clickedslot]);
				inv_info[playerid][is_click][inv_clickedslot] = false;
				inv_info[playerid][i_clickID] = -1;

				RemovePlayerAttachedObject(playerid, inv_info[playerid][in_aindex][inv_clickedslot]);

				RemoveAccessoryFromInv(playerid, inv_info[playerid][i_type][inv_clickedslot]);

				SCM(playerid,0xFF3333FF,"√Ä√™√±√•√±√±√≥√†√∞ √¢√ª√°√∞√Æ√∏√•√≠");
			}
		}

		case 423: {
			if(!response) return 1;
			new status[5],indedit[5];
			for(new index = 0; index < MAX_PLAYER_ATTACHED_OBJECTS; index ++) {
				if(!PLAYER_AO[playerid][index][g_modelid]) continue;

				switch(index) {
					case 0: {
						status[0]=true;
						indedit[0]=index;
					}
					case 2: {
						status[1]=true;
						indedit[1]=index;
					}
					case 5: {
						status[2]=true;
						indedit[2]=index;
					}
					case 6: {
						status[3]=true;
						indedit[3]=index;
					}
					case 7: {
						status[4]=true;
						indedit[4]=index;
					}
				}
			}
			if(!status[listitem]) 
				return SCM(playerid, COLOR_LIGHTGREY,"√ç√† √Ç√†√± √≠√• √≠√†√§√•√≤ √†√™√±√•√±√±√≥√†√∞ √≤√†√™√Æ√£√Æ √≤√®√Ø√†");

			PLAYER_AO[playerid][indedit[listitem]][g_boneid]    = 0;
			PLAYER_AO[playerid][indedit[listitem]][g_fOffsetX]  = 0;
			PLAYER_AO[playerid][indedit[listitem]][g_fOffsetY]  = 0;
			PLAYER_AO[playerid][indedit[listitem]][g_fOffsetZ]  = 0;
			PLAYER_AO[playerid][indedit[listitem]][g_fRotX]     = 0;
			PLAYER_AO[playerid][indedit[listitem]][g_fRotY]     = 0;
			PLAYER_AO[playerid][indedit[listitem]][g_fRotZ]     = 0;
			PLAYER_AO[playerid][indedit[listitem]][g_fScaleX]   = 0;
			PLAYER_AO[playerid][indedit[listitem]][g_fScaleY]   = 0;
			PLAYER_AO[playerid][indedit[listitem]][g_fScaleZ]   = 0;
			PLAYER_AO[playerid][indedit[listitem]][g_COLOR1]=0;
			PLAYER_AO[playerid][indedit[listitem]][g_COLOR2]=0;
			PLAYER_AO[playerid][indedit[listitem]][acs_color_type]=0;
			
			RemovePlayerAttachedObject(playerid, indedit[listitem]);
			for(new i = 20; i < 26; i++) {
				if(inv_info[playerid][i_type][i] != indedit[listitem]+PLAYER_AO[playerid][indedit[listitem]][g_modelid]) continue;
				RemoveAccessoryFromInv(playerid, inv_info[playerid][i_type][i]);
			}

			PLAYER_AO[playerid][indedit[listitem]][g_modelid]  = 0;
			
			SaveAccessories(playerid,indedit[listitem]+1);
			SCM(playerid, 0xFF6666FF,"√Ä√™√±√•√±√±√≥√†√∞ √°√ª√´ √≥S√≠√´¬∏√≠");
		}
		case 548: {
			if(!response) return 1;
			new status[5],indedit[5];
			for(new index = 0; index < MAX_PLAYER_ATTACHED_OBJECTS; index ++) {
				if(!PLAYER_AO[playerid][index][g_modelid]) continue;

				switch(index) {
					case 0: {
						status[0]=true;
						indedit[0]=index;
					}
					case 2: {
						status[1]=true;
						indedit[1]=index;
					}
					case 5: {
						status[2]=true;
						indedit[2]=index;
					}
					case 6: {
						status[3]=true;
						indedit[3]=index;
					}
					case 7: {
						status[4]=true;
						indedit[4]=index;
					}
				}
			}
			if(!status[listitem]) 
				return SCM(playerid, COLOR_LIGHTGREY,"√ç√† √Ç√†√± √≠√• √≠√†√§√•√≤ √†√™√±√•√±√±√≥√†√∞ √≤√†√™√Æ√£√Æ √≤√®√Ø√†");

			SetPVarInt(playerid, "acsType_edit", 1);
			EditAttachedObject(playerid, indedit[listitem]);
		}

		case 132: {
			if(!response) return 1;
			callcmd::recorder(playerid);
			close_inventory(playerid);
		}

		case 67: {
			if(!response) return DeletePVar(playerid, "buymarket_num");

			new idmarket = -1;
			for(new i =0; i < 9; i++) {
				if(!IsPlayerInRangeOfPoint(playerid, 5, posMarket[i][markX],posMarket[i][markY],posMarket[i][markZ])) continue;
				if(selleritemid[i] == -1) continue;
				idmarket= i;
				break;
			}
			if(idmarket == -1) {
				closeMenuMarket(playerid);
				return SCM(playerid,COLOR_ERROR,"√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [096]");
			}

			new itemcount;
			for(new i =0; i < 5; i++) {
				if(modelitem[idmarket][i] == -1) 
					continue;
				itemcount ++;
			}
			if(itemcount != GetPVarInt(playerid, "mark_count_items")) {
				closeMenuMarket(playerid);
				return SCM(playerid,COLOR_ERROR,"√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [096]");
			}

			new productnum=GetPVarInt(playerid, "buymarket_num");
			DeletePVar(playerid, "buymarket_num");

			new price = priceitem[idmarket][productnum];
			if(pData[playerid][pCash] < price) 
				return SCM(playerid,COLOR_LIGHTGREY,"√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √§√•√≠√•√£ √§√´√ø √Ø√Æ√™√≥√Ø√™√® √Ω√≤√Æ√£√Æ √≤√Æ√¢√†√∞√†");

			switch(typeitem[idmarket][productnum]) {
				case 0: if(pData[playerid][pSpal] > 0) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≥√¶√• √•√±√≤√º Hajigalk");
				case 1: if(pData[playerid][pSiga] > 0) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≥√¶√• √•√±√≤√º El comienzo comenzar√°");
				case 4: {
					if(pData[playerid][pAptech] && !pData[playerid][p_premium]) return SCM(playerid, COLOR_LIGHTGREY, "√å√†√™√±√®√¨√†√´√º√≠√Æ √Ç√ª √¨√Æ√¶√•√≤√• √µ√∞√†√≠√®√≤√º √≤√Æ√´√º√™√Æ √Æ√§√≠√≥ √†√Ø√≤√•√∑√™√≥");
					if(pData[playerid][p_premium] && pData[playerid][pAptech] >= 5) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √µ√∞√†√≠√®√≤√º √°√Æ√´√•√• 5 √†√Ø√≤√•√∑√•√™");
				}
				case 5: {
					if(pData[playerid][pMasks] && !pData[playerid][p_premium]) return SCM(playerid, COLOR_LIGHTGREY, "√å√†√™√±√®√¨√†√´√º√≠√Æ √Ç√ª √¨√Æ√¶√•√≤√• √µ√∞√†√≠√®√≤√º √≤√Æ√´√º√™√Æ √Æ√§√≠√≥ √¨√†√±√™√≥");
					if(pData[playerid][p_premium] && pData[playerid][pMasks] >= 3) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √µ√∞√†√≠√®√≤√º √°√Æ√´√•√• 3 √¨√†√±√Æ√™");
				}
				case 6: if(pData[playerid][pRec]) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≥√¶√• √•√±√≤√º √¨√†√£√≠√®√≤√Æ√¥√Æ√≠");
				case 7: if(fuelcan_buyed[playerid]) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≥√¶√• √•√±√≤√º √™√†√≠√®√±√≤√∞√† √± √≤√Æ√Ø√´√®√¢√Æ√¨");
			}

			Hook_GivePlayerMoney(playerid,-price);
			new gamet[30];
			format(gamet, sizeof(gamet), "~r~-%d$",price);
			GameTextForPlayer(playerid, gamet, 3000, 1);

			new kom = price/100;
			Hook_GivePlayerMoney(selleritemid[idmarket],price-kom);
			SCMF(selleritemid[idmarket], COLOR_MAIN, "√à√£√∞√Æ√™ %s √™√≥√Ø√®√´ √Ç√†√∏ √≤√Æ√¢√†√∞ "CLITEBLUE"(%s) "CMAIN"√≠√† √∞√ª√≠√™√• √ß√† {00cc00}%d$", GetName(playerid),marketname[idmarket][productnum],price);
			new strg[70];
			format(strg,sizeof(strg),"~b~+%d$ ~n~~r~ -%d$ ~n~~r~ commission",price,kom);
			GameTextForPlayer(selleritemid[idmarket], strg, 3000, 1);

			SCMF(playerid,-1,"√í√Æ√¢√†√∞ √≥√±√Ø√•√∏√≠√Æ √™√≥√Ø√´√•√≠ √ß√† "CMAIN"%d$",price);
			SCM(playerid,-1,"√Ç√¢√•√§√®√≤√• "CBLUE"/inv "CWHITE"√∑√≤√Æ√°√ª √Ø√Æ√±√¨√Æ√≤√∞√•√≤√º √≠√† √≠√•√£√Æ");
			closeMenuMarket(playerid);

			if(item_is_Skin[idmarket][productnum]) 
				AddSkinToInventory(playerid,modelitem[idmarket][productnum]);
			else if(item_is_Accessory[idmarket][productnum]) {
				AddAccessoryToInv(playerid,
				indexmark[idmarket][productnum],
				boneitem[idmarket][productnum],
				modelitem[idmarket][productnum],
				acsRotX[idmarket][productnum],
				acsRotY[idmarket][productnum],
				acsRotZ[idmarket][productnum],
				acsZoom[idmarket][productnum],
				osetX[idmarket][productnum],osetY[idmarket][productnum],osetZ[idmarket][productnum],
				itemfRotX[idmarket][productnum],itemfRotY[idmarket][productnum],itemfRotZ[idmarket][productnum],
				fitemScaleX[idmarket][productnum],fitemScaleY[idmarket][productnum],fitemScaleZ[idmarket][productnum]);
			}
			else {
				switch(typeitem[idmarket][productnum]) {
					case 0: {
						pData[playerid][pSpal] += countitem[idmarket][productnum];
						UpdatePlayerData(playerid,"spal",pData[playerid][pSpal]);
					}
					case 1: {
						pData[playerid][pSiga] += countitem[idmarket][productnum];
						UpdatePlayerData(playerid,"sigar",pData[playerid][pSiga]);
					}
					case 4: {
						pData[playerid][pAptech] += countitem[idmarket][productnum];
						UpdatePlayerData(playerid,"pAptech",pData[playerid][pAptech]);
					}
					case 5: {
						pData[playerid][pMasks] += countitem[idmarket][productnum];
						UpdatePlayerData(playerid,"pMasks",pData[playerid][pMasks]);
					}
					case 6: {
						pData[playerid][pRec]=true;
						UpdatePlayerData(playerid,"pRec",1);
					}
					case 7: {
						fuelcan_buyed[playerid] = true;
						SetPlayerAttachedObject(playerid, 2, 1650, 6, 0.120999, 0.017999, 0.069000, 0.000000, -100.400024, 0.000000, 1.000000, 1.000000, 1.000000, 0, 0);
					}
					case 8: {
						pData[playerid][casino_amount]+= countitem[idmarket][productnum];
						UpdatePlayerData(playerid,"casino_amount",pData[playerid][casino_amount]);
					}
				}

				AddItemToInventory(playerid, countitem[idmarket][productnum], typeitem[idmarket][productnum]);
			}

			RemoveProdFromMarket(selleritemid[idmarket],idmarket,productnum);
		}

		case 913: {
			if(!response) return 1;
			if(pData[playerid][pHotel] != -1 || pData[playerid][pFlat] != -1 || pData[playerid][have_garage] != -1) {
				if(pData[playerid][pCar][0] == 0) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√∞√†√≠√±√Ø√Æ√∞√≤√†");
				if(pData[playerid][pCash] < 500) return SCM(playerid, COLOR_GREY, "√Ñ√Æ√±√≤√†√¢√™√† √≤√∞√†√≠√±√Ø√Æ√∞√≤√† √±√≤√Æ√®√≤ 500$");
				GameTextForPlayer(playerid, "~r~-500$", 3000, 1);
				Hook_GivePlayerMoney(playerid, -500);
				LoadCarPlayer(playerid, 1);
				if(pData[playerid][have_garage] != -1) 
					SCM(playerid, COLOR_BLUE, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √§√Æ√±√≤√†√¢√´√•√≠ √™ √£√†√∞√†√¶√≥ √ß√† "CYELLOW"500$");
				if(pData[playerid][pFlat] != -1) 
					SCM(playerid, COLOR_BLUE, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √§√Æ√±√≤√†√¢√´√•√≠ √™ √™√Æ√¨√Ø√´√•√™√±√≥ √ß√† "CYELLOW"500$");
				if(pData[playerid][pHotel] != -1) 
					SCM(playerid, COLOR_BLUE, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √§√Æ√±√≤√†√¢√´√•√≠ √™ √Æ√≤√•√´√æ √ß√† "CYELLOW"500$");
			}
		}

		case 826: {
			if(!response) return 1;
			if(pData[playerid][pWanted] == 0) 
				return 1;
			TogglePlayerControllable(playerid, 0);
			SetTimerEx("freearrest", 5500, 0, "i", playerid);
			PlayerPlaySound(playerid, 12200, 0.0, 0.0, 0.0);
			GameTextForPlayer(playerid, "~y~ARREST", 5000, 3);
		}

		case 7088: {
			if(!response) return 1;
			SPD(playerid,414,DIALOG_STYLE_LIST,"{FFCD00}√ë√•√¨√º√®","[1] √à√≠√¥√Æ√∞√¨√†√∂√®√ø\n[2] √ë√Æ√ßS√≠√≤√º √±√•√¨√º√æ","Seleccione","Cerrar");
		}

		case 414: {
			if(!response) return 1;
			switch(listitem) {
				case 0: {
					SPD(playerid,7088, DIALOG_STYLE_MSGBOX, "{FFCD00}√à√≠√¥√Æ√∞√¨√†√∂√®√ø", 
						"\n\
						"CWHITE"√ë√•√¨√º√ø - √Æ√°√∫√•√§√®√≠√•√≠√®√• √´√æ√§√•√©, √±√Ø√´√Æ√∑¬∏√≠√≠√ª√µ √Æ√°√π√®√¨√® √∂√•√´√ø√¨√®\n\
						√®√´√® √®√≠√≤√•√∞√•√±√†√¨√®. √ë√Æ√ßS√≠√¢ √±√•√¨√º√æ, √¢√ª √±√¨√Æ√¶√•√≤√• √Ø√∞√®√≠√®√¨√†√≤√º\n\
						√¢ √≠√•¬∏ √≠√•√Æ√£√∞√†√≠√®√∑√•√≠√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √®√£√∞√Æ√™√Æ√¢.\n\
						√Ç√±√•√¨ √¢√†√¨ √°√≥√§√•√≤ √§√Æ√±√≤√≥√Ø√•√≠ √Æ√°√π√®√© √∑√†√≤.\n\
						\n\
						√ë√Æ√ßS√≠√≠√®√• √±√•√¨√º√® √±√≤√Æ√®√≤ {66b3ff}359 √∞√≥√°√´√•√©.",
					"Siguiente", "Cerrar");
				}
				case 1: {
					SPD(playerid,993,DIALOG_STYLE_INPUT,"{FFCD00}√ë√Æ√ßS√≠√≠√®√• √±√•√¨√º√®",
						""CWHITE"√ó√≤√Æ√°√ª √Ø√∞√Æ√§√Æ√´√¶√®√≤√º, √¢√¢√•√§√®√≤√• √≠√†√ß√¢√†√≠√®√• √¢√†√∏√•√©\n\
						√°√≥√§√≥√π√•√© √±√•√¨√º√®. √é√≠√Æ √≠√• √§√Æ√´√¶√≠√Æ √≠√†√∞√≥√∏√†√≤√º √Ø√∞√†√¢√®√´√†\n\
						√±√•√∞√¢√•√∞√†.\n\
						√å√†√™√±√®√¨√†√´√º√≠√†√ø √§√´√®√≠√†: {00cc33}30 √ß√≠√†√™√Æ√¢.",
					"√É√Æ√≤√Æ√¢√Æ","Cerrar");
				}
			}
		}
		case 993: {
			if(!response) return 1;
			new len = strlen(inputtext);
			if(len < 2 || len > 30) {
				return SPD(playerid,993,DIALOG_STYLE_INPUT,"{FFCD00}√ë√Æ√ßS√≠√≠√®√• √±√•√¨√º√®",
					""CWHITE"√ó√≤√Æ√°√ª √Ø√∞√Æ√§√Æ√´√¶√®√≤√º, √¢√¢√•√§√®√≤√• √≠√†√ß√¢√†√≠√®√• √¢√†√∏√•√©\n\
					√°√≥√§√≥√π√•√© √±√•√¨√º√®. √é√≠√Æ √≠√• √§√Æ√´√¶√≠√Æ √≠√†√∞√≥√∏√†√≤√º √Ø√∞√†√¢√®√´√†\n\
					√±√•√∞√¢√•√∞√†.\n\
					√å√†√™√±√®√¨√†√´√º√≠√†√ø √§√´√®√≠√†: {00cc33}30 √ß√≠√†√™√Æ√¢.",
				"√É√Æ√≤√Æ√¢√Æ","Cerrar");
			}
			if(pData[playerid][pRub] < 359) 
				return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √±√Æ√ßS√≠√≠√®√ø");
			new fam_Query[100];
			mysql_format(mysql_Handle, fam_Query, sizeof(fam_Query), "SELECT `name` FROM `family_system` WHERE `name` = '%s'", inputtext);
			return mysql_tquery(mysql_Handle, fam_Query, "check_relevant_name_family", "is",playerid,inputtext);
		}

		case 524: {
			if(!response) return 1;
			SetPVarInt(playerid, "changecolor_carid", 0);
			SPD(playerid, 113, DIALOG_STYLE_TABLIST_HEADERS, "{FFCD00}√ë√¨√•√≠√† √∂√¢√•√≤√Æ√¢ √†√¢√≤√Æ√¨√Æ√°√®√´√ø", "√Ç√ª√°√•√∞√®√≤√• √∂√¢√•√≤ ¬π1:\n{000000}√ó¬∏√∞√≠√ª√©\n"CWHITE"√Å√•√´√ª√©\n{336699}√ë√®√≠√®√©\n{cc0000}√ä√∞√†√±√≠√ª√©\n{cc3370}√î√®√Æ√´√•√≤√Æ√¢√ª√©\n{ff8800}√é√∞√†√≠√¶√•√¢√ª√©\n{339900}√á√•√´¬∏√≠√ª√©\n{ff66cc}√ê√Æ√ß√Æ√¢√ª√©\n"CWHITE"√Ñ√∞√≥√£√Æ√© √∂√¢√•√≤...", "Seleccione", "Cerrar");
		}
		case 129: {
			if(!response) return 1;
			if(!listitem) {
				string[0] = EOS;
				new text_car_1[140], text_car_2[140], text_car_3[140];
				if(pData[playerid][pCar][0] != 0) format(text_car_1, 140, "(√¨√†√∞√™√†: %s)", VehicleNames[pData[playerid][pCar][0] - 400]);
				else strcat(text_car_1, "{ff4d4d}(√Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤)");
				if(pData[playerid][pCar][1] != 0) format(text_car_2, 140, "(√¨√†√∞√™√†: %s)", VehicleNames[pData[playerid][pCar][1] - 400]);
				else strcat(text_car_2, "{ff4d4d}(√Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤)");
				if(pData[playerid][pCar][2] != 0) format(text_car_3, 140, "(√¨√†√∞√™√†: %s)", VehicleNames[pData[playerid][pCar][2] - 400]);
				else strcat(text_car_3, "{ff4d4d}(√Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤)");
				format(string, 400, ""CLITEBLUE"√Ç√ª√°√•√∞√®√≤√• √†√¢√≤√Æ√¨√Æ√°√®√´√º √®√ß √±√Ø√®√±√™√† √≠√®√¶√•:\n"CWHITE"√è√•√∞√¢√ª√© √†√¢√≤√Æ√¨√Æ√°√®√´√º "CMAIN"%s\n"CWHITE"√Ç√≤√Æ√∞√Æ√© √†√¢√≤√Æ√¨√Æ√°√®√´√º "CMAIN"%s\n"CWHITE"√í√∞√•√≤√®√© √†√¢√≤√Æ√¨√Æ√°√®√´√º "CMAIN"%s", text_car_1, text_car_2, text_car_3);
				return SPD(playerid, 129, DIALOG_STYLE_LIST, ""CPALEGREEN"√à√ß√¨√•√≠√•√≠√®√• √∂√¢√•√≤√Æ√¢ √†√¢√≤√Æ√¨√Æ√°√®√´√ø {ff9945}(√±√≤√Æ√®√≤ 500$)", string, "Seleccione", "Cerrar");
			}
			if(pData[playerid][pCash] < 500) return SCM(playerid, COLOR_GREY, "√ì√±√´√≥√£√† √®√ß√¨√•√≠√•√≠√®√ø √∂√¢√•√≤√Æ√¢ √±√≤√Æ√®√≤ 500$");
			new car = listitem-1;
			if(pData[playerid][pCar][car] == 0) 
				return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤ √†√¢√≤√Æ√¨√Æ√°√®√´√º √Ø√Æ√§ S√≠√≠√≠√ª√¨ √±√´√Æ√≤√Æ√¨");
			SetPVarInt(playerid, "changecolor_carid", car);
			SPD(playerid, 113, DIALOG_STYLE_TABLIST_HEADERS, "{FFCD00}√ë√¨√•√≠√† √∂√¢√•√≤√Æ√¢ √†√¢√≤√Æ√¨√Æ√°√®√´√ø", "√Ç√ª√°√•√∞√®√≤√• √∂√¢√•√≤ ¬π1:\n{000000}√ó¬∏√∞√≠√ª√©\n"CWHITE"√Å√•√´√ª√©\n{336699}√ë√®√≠√®√©\n{cc0000}√ä√∞√†√±√≠√ª√©\n{cc3370}√î√®√Æ√´√•√≤√Æ√¢√ª√©\n{ff8800}√é√∞√†√≠√¶√•√¢√ª√©\n{339900}√á√•√´¬∏√≠√ª√©\n{ff66cc}√ê√Æ√ß√Æ√¢√ª√©\n"CWHITE"√Ñ√∞√≥√£√Æ√© √∂√¢√•√≤...", "Seleccione", "Cerrar");
		}
		case 113: {
			if(!response) return DeletePVar(playerid, "changecolor_carid");
			new vehcolor;
			switch(listitem) {
				case 0: vehcolor = 0;
				case 1: vehcolor = 1;
				case 2: vehcolor = 2;
				case 3: vehcolor = 3;
				case 4: vehcolor = 5;
				case 5: vehcolor = 6;
				case 6: vehcolor = 128;
				case 7: vehcolor = 126;
				case 8: return SPD(playerid, 167, DIALOG_STYLE_INPUT, "{cc9900}√ñ√¢√•√≤ √†√¢√≤√Æ√¨√Æ√°√®√´√ø ¬π1", ""CWHITE"√Ç√¢√•√§√®√≤√• √ß√≠√†√∑√•√≠√®√• √∂√¢√•√≤√† √Æ√≤ 0 √§√Æ 255 √¢ √Ø√Æ√´√• √≠√®√¶√•. √è√Æ√´√≠√ª√© √±√Ø√®√±√Æ√™ √¢√±√•√µ\n√∂√¢√•√≤√Æ√¢ √® √ß√≠√†√∑√•√≠√®√© √Ç√ª √¨√Æ√¶√•√≤√• √≠√†√©√≤√® √Ø√Æ √±√±√ª√´√™√• {99ff33}wiki.sa-mp.com/wiki/Color_ID", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
			}
			SetPVarInt(playerid, "vehcolor_1", vehcolor);
			SPD(playerid, 114, DIALOG_STYLE_TABLIST_HEADERS, "{FFCD00}√ë√¨√•√≠√† √∂√¢√•√≤√Æ√¢ √†√¢√≤√Æ√¨√Æ√°√®√´√ø", "√Ç√ª√°√•√∞√®√≤√• √∂√¢√•√≤ ¬π2:\n{000000}√ó¬∏√∞√≠√ª√©\n"CWHITE"√Å√•√´√ª√©\n{336699}√ë√®√≠√®√©\n{cc0000}√ä√∞√†√±√≠√ª√©\n{cc3370}√î√®√Æ√´√•√≤√Æ√¢√ª√©\n{ff8800}√é√∞√†√≠√¶√•√¢√ª√©\n{339900}√á√•√´¬∏√≠√ª√©\n{ff66cc}√ê√Æ√ß√Æ√¢√ª√©\n"CWHITE"√Ñ√∞√≥√£√Æ√© √∂√¢√•√≤...", "Seleccione", "Cerrar");
		}
		case 114: {
			if(!response) {
				DeletePVar(playerid, "changecolor_carid");
				return DeletePVar(playerid, "vehcolor_1");
			}
			new vehcolor, p_vehcolor = GetPVarInt(playerid, "vehcolor_1");
			switch(listitem) {
				case 0: vehcolor = 0;
				case 1: vehcolor = 1;
				case 2: vehcolor = 2;
				case 3: vehcolor = 3;
				case 4: vehcolor = 5;
				case 5: vehcolor = 6;
				case 6: vehcolor = 128;
				case 7: vehcolor = 126;
				case 8: return SPD(playerid, 168, DIALOG_STYLE_INPUT, "{cc9900}√ñ√¢√•√≤ √†√¢√≤√Æ√¨√Æ√°√®√´√ø ¬π2", ""CWHITE"√Ç√¢√•√§√®√≤√• √ß√≠√†√∑√•√≠√®√• √∂√¢√•√≤√† √Æ√≤ 0 √§√Æ 255 √¢ √Ø√Æ√´√• √≠√®√¶√•. √è√Æ√´√≠√ª√© √±√Ø√®√±√Æ√™ √¢√±√•√µ\n√∂√¢√•√≤√Æ√¢ √® √ß√≠√†√∑√•√≠√®√© √Ç√ª √¨√Æ√¶√•√≤√• √≠√†√©√≤√® √Ø√Æ √±√±√ª√´√™√• {99ff33}wiki.sa-mp.com/wiki/Color_ID", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
			}
			new num = GetPVarInt(playerid, "changecolor_carid");
			DeletePVar(playerid, "changecolor_carid");
			new veh = house_carid[playerid][num];
			if(IsValidVehicle(veh)) 
				ChangeVehicleColor(veh, p_vehcolor, vehcolor);
			Hook_GivePlayerMoney(playerid, -500);
			GameTextForPlayer(playerid, "~r~-500$", 3000, 1);
			pData[playerid][t_color_1][num] = p_vehcolor;
			pData[playerid][t_color_2][num] = vehcolor;
			new s_query[144];
			switch(num) {
				case 0: mysql_format(mysql_Handle, s_query, sizeof(s_query), "UPDATE `accounts` SET `t_color_1_1` = %d, `t_color_2_1` = %d WHERE `Name` = '%s'", p_vehcolor, vehcolor, GetName(playerid));
				case 1: mysql_format(mysql_Handle, s_query, sizeof(s_query), "UPDATE `accounts` SET `t_color_1_2` = %d, `t_color_2_2` = %d WHERE `Name` = '%s'", p_vehcolor, vehcolor, GetName(playerid));
				case 2: mysql_format(mysql_Handle, s_query, sizeof(s_query), "UPDATE `accounts` SET `t_color_1_3` = %d, `t_color_2_3` = %d WHERE `Name` = '%s'", p_vehcolor, vehcolor, GetName(playerid));
			}
			mysql_tquery(mysql_Handle, s_query);
			SCM(playerid, COLOR_LITEBLUE, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √≥√±√Ø√•√∏√≠√Æ √Ø√•√∞√•√™√∞√†√∏√•√≠");
		}
		case 167: {
			if(!response) return SPD(playerid, 113, DIALOG_STYLE_TABLIST_HEADERS, "{FFCD00}√ë√¨√•√≠√† √∂√¢√•√≤√Æ√¢ √†√¢√≤√Æ√¨√Æ√°√®√´√ø", "√Ç√ª√°√•√∞√®√≤√• √∂√¢√•√≤ ¬π1:\n{000000}√ó¬∏√∞√≠√ª√©\n"CWHITE"√Å√•√´√ª√©\n{336699}√ë√®√≠√®√©\n{cc0000}√ä√∞√†√±√≠√ª√©\n{cc3370}√î√®√Æ√´√•√≤√Æ√¢√ª√©\n{ff8800}√é√∞√†√≠√¶√•√¢√ª√©\n{339900}√á√•√´¬∏√≠√ª√©\n{ff66cc}√ê√Æ√ß√Æ√¢√ª√©\n"CWHITE"√Ñ√∞√≥√£√Æ√© √∂√¢√•√≤...", "Seleccione", "Cerrar");
			if(!strlen(inputtext)) return SPD(playerid, 167, DIALOG_STYLE_INPUT, "{cc9900}√ñ√¢√•√≤ √†√¢√≤√Æ√¨√Æ√°√®√´√ø ¬π1", ""CWHITE"√Ç√¢√•√§√®√≤√• √ß√≠√†√∑√•√≠√®√• √∂√¢√•√≤√† √Æ√≤ 0 √§√Æ 255 √¢ √Ø√Æ√´√• √≠√®√¶√•. √è√Æ√´√≠√ª√© √±√Ø√®√±√Æ√™ √¢√±√•√µ\n√∂√¢√•√≤√Æ√¢ √® √ß√≠√†√∑√•√≠√®√© √Ç√ª √¨√Æ√¶√•√≤√• √≠√†√©√≤√® √Ø√Æ √±√±√ª√´√™√• {99ff33}wiki.sa-mp.com/wiki/Color_ID", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
			for(new i = strlen(inputtext) - 1; i != -1; i --) {
	            switch(inputtext[i]) {
	                case '0'..'9': continue;
	                default: {
	                	SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§√•√≠√Æ √≠√•√¢√•√∞√≠√Æ√• √ß√≠√†√∑√•√≠√®√•");
						return SPD(playerid, 167, DIALOG_STYLE_INPUT, "{cc9900}√ñ√¢√•√≤ √†√¢√≤√Æ√¨√Æ√°√®√´√ø ¬π1", ""CWHITE"√Ç√¢√•√§√®√≤√• √ß√≠√†√∑√•√≠√®√• √∂√¢√•√≤√† √Æ√≤ 0 √§√Æ 255 √¢ √Ø√Æ√´√• √≠√®√¶√•. √è√Æ√´√≠√ª√© √±√Ø√®√±√Æ√™ √¢√±√•√µ\n√∂√¢√•√≤√Æ√¢ √® √ß√≠√†√∑√•√≠√®√© √Ç√ª √¨√Æ√¶√•√≤√• √≠√†√©√≤√® √Ø√Æ √±√±√ª√´√™√• {99ff33}wiki.sa-mp.com/wiki/Color_ID", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
	            	}
	            }
	        }
	        new zn = strval(inputtext);
			if(zn < 0 || zn > 255) {
				SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§√•√≠√Æ √≠√•√¢√•√∞√≠√Æ√• √ß√≠√†√∑√•√≠√®√•");
				return SPD(playerid, 167, DIALOG_STYLE_INPUT, "{cc9900}√ñ√¢√•√≤ √†√¢√≤√Æ√¨√Æ√°√®√´√ø ¬π1", ""CWHITE"√Ç√¢√•√§√®√≤√• √ß√≠√†√∑√•√≠√®√• √∂√¢√•√≤√† √Æ√≤ 0 √§√Æ 255 √¢ √Ø√Æ√´√• √≠√®√¶√•. √è√Æ√´√≠√ª√© √±√Ø√®√±√Æ√™ √¢√±√•√µ\n√∂√¢√•√≤√Æ√¢ √® √ß√≠√†√∑√•√≠√®√© √Ç√ª √¨√Æ√¶√•√≤√• √≠√†√©√≤√® √Ø√Æ √±√±√ª√´√™√• {99ff33}wiki.sa-mp.com/wiki/Color_ID", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
			}
			SetPVarInt(playerid, "vehcolor_1", zn);
			SPD(playerid, 114, DIALOG_STYLE_TABLIST_HEADERS, "{FFCD00}√ë√¨√•√≠√† √∂√¢√•√≤√Æ√¢ √†√¢√≤√Æ√¨√Æ√°√®√´√ø", "√Ç√ª√°√•√∞√®√≤√• √∂√¢√•√≤ ¬π2:\n{000000}√ó¬∏√∞√≠√ª√©\n"CWHITE"√Å√•√´√ª√©\n{336699}√ë√®√≠√®√©\n{cc0000}√ä√∞√†√±√≠√ª√©\n{cc3370}√î√®√Æ√´√•√≤√Æ√¢√ª√©\n{ff8800}√é√∞√†√≠√¶√•√¢√ª√©\n{339900}√á√•√´¬∏√≠√ª√©\n{ff66cc}√ê√Æ√ß√Æ√¢√ª√©\n"CWHITE"√Ñ√∞√≥√£√Æ√© √∂√¢√•√≤...", "Seleccione", "Cerrar");
		}
		case 168: {
			if(!response) return SPD(playerid, 114, DIALOG_STYLE_TABLIST_HEADERS, "{FFCD00}√ë√¨√•√≠√† √∂√¢√•√≤√Æ√¢ √†√¢√≤√Æ√¨√Æ√°√®√´√ø", "√Ç√ª√°√•√∞√®√≤√• √∂√¢√•√≤ ¬π2:\n{000000}√ó¬∏√∞√≠√ª√©\n"CWHITE"√Å√•√´√ª√©\n{336699}√ë√®√≠√®√©\n{cc0000}√ä√∞√†√±√≠√ª√©\n{cc3370}√î√®√Æ√´√•√≤√Æ√¢√ª√©\n{ff8800}√é√∞√†√≠√¶√•√¢√ª√©\n{339900}√á√•√´¬∏√≠√ª√©\n{ff66cc}√ê√Æ√ß√Æ√¢√ª√©\n"CWHITE"√Ñ√∞√≥√£√Æ√© √∂√¢√•√≤...", "Seleccione", "Cerrar");
			if(!strlen(inputtext)) return SPD(playerid, 168, DIALOG_STYLE_INPUT, "{cc9900}√ñ√¢√•√≤ √†√¢√≤√Æ√¨√Æ√°√®√´√ø ¬π2", ""CWHITE"√Ç√¢√•√§√®√≤√• √ß√≠√†√∑√•√≠√®√• √∂√¢√•√≤√† √Æ√≤ 0 √§√Æ 255 √¢ √Ø√Æ√´√• √≠√®√¶√•. √è√Æ√´√≠√ª√© √±√Ø√®√±√Æ√™ √¢√±√•√µ\n√∂√¢√•√≤√Æ√¢ √® √ß√≠√†√∑√•√≠√®√© √Ç√ª √¨√Æ√¶√•√≤√• √≠√†√©√≤√® √Ø√Æ √±√±√ª√´√™√• {99ff33}wiki.sa-mp.com/wiki/Color_ID", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
			for(new i = strlen(inputtext) - 1; i != -1; i --) {
	            switch(inputtext[i]) {
	                case '0'..'9': continue;
	                default: {
	                	SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§√•√≠√Æ √≠√•√¢√•√∞√≠√Æ√• √ß√≠√†√∑√•√≠√®√•");
						return SPD(playerid, 114, DIALOG_STYLE_INPUT, "{cc9900}√ñ√¢√•√≤ √†√¢√≤√Æ√¨√Æ√°√®√´√ø ¬π2", ""CWHITE"√Ç√¢√•√§√®√≤√• √ß√≠√†√∑√•√≠√®√• √∂√¢√•√≤√† √Æ√≤ 0 √§√Æ 255 √¢ √Ø√Æ√´√• √≠√®√¶√•. √è√Æ√´√≠√ª√© √±√Ø√®√±√Æ√™ √¢√±√•√µ\n√∂√¢√•√≤√Æ√¢ √® √ß√≠√†√∑√•√≠√®√© √Ç√ª √¨√Æ√¶√•√≤√• √≠√†√©√≤√® √Ø√Æ √±√±√ª√´√™√• {99ff33}wiki.sa-mp.com/wiki/Color_ID", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
	            	}
	            }
	        }
	        new zn = strval(inputtext), p_zn = GetPVarInt(playerid, "vehcolor_1");
	        DeletePVar(playerid, "vehcolor_1");
			if(zn < 0 || zn > 255) {
				SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§√•√≠√Æ √≠√•√¢√•√∞√≠√Æ√• √ß√≠√†√∑√•√≠√®√•");
				return SPD(playerid, 114, DIALOG_STYLE_INPUT, "{cc9900}√ñ√¢√•√≤ √†√¢√≤√Æ√¨√Æ√°√®√´√ø ¬π2", ""CWHITE"√Ç√¢√•√§√®√≤√• √ß√≠√†√∑√•√≠√®√• √∂√¢√•√≤√† √Æ√≤ 0 √§√Æ 255 √¢ √Ø√Æ√´√• √≠√®√¶√•. √è√Æ√´√≠√ª√© √±√Ø√®√±√Æ√™ √¢√±√•√µ\n√∂√¢√•√≤√Æ√¢ √® √ß√≠√†√∑√•√≠√®√© √Ç√ª √¨√Æ√¶√•√≤√• √≠√†√©√≤√® √Ø√Æ √±√±√ª√´√™√• {99ff33}wiki.sa-mp.com/wiki/Color_ID", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
			}
			new num = GetPVarInt(playerid, "changecolor_carid");
			DeletePVar(playerid, "changecolor_carid");
			new veh = house_carid[playerid][num];
			if(IsValidVehicle(veh)) 
				ChangeVehicleColor(veh, p_zn, zn);
			Hook_GivePlayerMoney(playerid, -500);
			GameTextForPlayer(playerid, "~r~-500$", 3000, 1);
			pData[playerid][t_color_1][num] = p_zn;
			pData[playerid][t_color_2][num] = zn;
			new s_query[144];
			switch(num) {
				case 0: mysql_format(mysql_Handle, s_query, sizeof(s_query), "UPDATE `accounts` SET `t_color_1_1` = %d, `t_color_2_1` = %d WHERE `Name` = '%s'", p_zn, zn, GetName(playerid));
				case 1: mysql_format(mysql_Handle, s_query, sizeof(s_query), "UPDATE `accounts` SET `t_color_1_2` = %d, `t_color_2_2` = %d WHERE `Name` = '%s'", p_zn, zn, GetName(playerid));
				case 2: mysql_format(mysql_Handle, s_query, sizeof(s_query), "UPDATE `accounts` SET `t_color_1_3` = %d, `t_color_2_3` = %d WHERE `Name` = '%s'", p_zn, zn, GetName(playerid));
			}
			mysql_tquery(mysql_Handle, s_query);
			SCM(playerid, COLOR_LITEBLUE, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √≥√±√Ø√•√∏√≠√Æ √Ø√•√∞√•√™√∞√†√∏√•√≠");
		}

		case 2212: {
			if(!response) return 1;
			SetPVarInt(playerid, "mark_numbercar", listitem);
			SPD(playerid,2213,DIALOG_STYLE_LIST,"{ffaa00}√å√†√∞√™√®√∞√Æ√¢√™√†","A\nL\nAIR\nO\nM\nH\nC\nR\nSV","Seleccione","Cerrar");
		}
		case 2213: {
			if(!response) return DeletePVar(playerid, "mark_numbercar");
			SetPVarString(playerid, "mark_typename", inputtext);
			SPD(playerid,214,DIALOG_STYLE_INPUT,"{ffaa00}√å√†√∞√™√®√∞√Æ√¢√™√†",""CWHITE"√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √∑√•√´√Æ√¢√•√™ √¢ √Ø√Æ√´√• √≠√®√¶√•:","√É√Æ√≤√Æ√¢√Æ","Cerrar");
		}
		case 214: {
			if(!response) {
				DeletePVar(playerid, "mark_numbercar");
				return DeletePVar(playerid, "mark_typename");
			}
			if(!strlen(inputtext)) return SPD(playerid,214,DIALOG_STYLE_INPUT,"{ffaa00}√å√†√∞√™√®√∞√Æ√¢√™√†",""CWHITE"√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √∑√•√´√Æ√¢√•√™ √¢ √Ø√Æ√´√• √≠√®√¶√•:","√É√Æ√≤√Æ√¢√Æ","Cerrar");
			for(new i = strlen(inputtext) - 1; i != -1; i --) {
		        switch(inputtext[i]) {
		            case '0'..'9': continue;
		            default: return SPD(playerid,214,DIALOG_STYLE_INPUT,"{ffaa00}√å√†√∞√™√®√∞√Æ√¢√™√†",""CWHITE"√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √∑√•√´√Æ√¢√•√™ √¢ √Ø√Æ√´√• √≠√®√¶√•:","√É√Æ√≤√Æ√¢√Æ","Cerrar");
		        }
		    }
		    new value = strval(inputtext);
		    if(value < 1 || value > 4) {
		    	SCM(playerid,COLOR_LIGHTGREY,"√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √∑√•√´√Æ√¢√•√™ √Æ√≤ 1 √§√Æ 4");
		    	return SPD(playerid,214,DIALOG_STYLE_INPUT,"{ffaa00}√å√†√∞√™√®√∞√Æ√¢√™√†",""CWHITE"√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √∑√•√´√Æ√¢√•√™ √¢ √Ø√Æ√´√• √≠√®√¶√•:","√É√Æ√≤√Æ√¢√Æ","Cerrar");
		    }
			SetPVarInt(playerid, "mark_count", value);
			SPD(playerid,215,DIALOG_STYLE_INPUT,"{ffaa00}√å√†√∞√™√®√∞√Æ√¢√™√†",""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¨√•√∞ √Ø√Æ√±√≤√† √¢ √Ø√Æ√´√• √≠√®√¶√•:","√É√Æ√≤√Æ√¢√Æ","Cerrar");
		}
		case 215: {
			if(!response) {
				DeletePVar(playerid, "mark_numbercar");
				DeletePVar(playerid, "mark_typename");
				return DeletePVar(playerid, "mark_count");
			}
			if(!strlen(inputtext)) return SPD(playerid,215,DIALOG_STYLE_INPUT,"{ffaa00}√å√†√∞√™√®√∞√Æ√¢√™√†",""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¨√•√∞ √Ø√Æ√±√≤√† √¢ √Ø√Æ√´√• √≠√®√¶√•:","√É√Æ√≤√Æ√¢√Æ","Cerrar");
			for(new i = strlen(inputtext) - 1; i != -1; i --) {
		        switch(inputtext[i]) {
		            case '0'..'9': continue;
		            default: return SPD(playerid,215,DIALOG_STYLE_INPUT,"{ffaa00}√å√†√∞√™√®√∞√Æ√¢√™√†",""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¨√•√∞ √Ø√Æ√±√≤√† √¢ √Ø√Æ√´√• √≠√®√¶√•:","√É√Æ√≤√Æ√¢√Æ","Cerrar");
		        }
		    }
		    new value = strval(inputtext);
		    if(value < 1 || value > 20) {
		    	SCM(playerid,COLOR_LIGHTGREY,"√Ç√¢√•√§√®√≤√• √≠√Æ√¨√•√∞ √Æ√≤ 1 √§√Æ 20");
		    	return SPD(playerid,215,DIALOG_STYLE_INPUT,"{ffaa00}√å√†√∞√™√®√∞√Æ√¢√™√†",""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¨√•√∞ √Ø√Æ√±√≤√† √¢ √Ø√Æ√´√• √≠√®√¶√•:","√É√Æ√≤√Æ√¢√Æ","Cerrar");
		    }
			new numbercar=GetPVarInt(playerid, "mark_numbercar"),
				typename[5],
				count=GetPVarInt(playerid, "mark_count");
			GetPVarString(playerid, "mark_typename", typename, sizeof(typename));
			DeletePVar(playerid, "mark_numbercar");
			DeletePVar(playerid, "mark_typename");
			DeletePVar(playerid, "mark_count");
			new org;
			switch(pData[playerid][pMember]) {
				case 1: org = 0;
				case 10: org = 1;
				case 21: org = 2;
			}
			format(markauto[org][numbercar],15,"%d-%s-%d",count,typename,value);
			new qstr[80];
			mysql_format(mysql_Handle, qstr, sizeof(qstr), "UPDATE `marksystem` SET `text`='%s' WHERE `orgnum` = %d AND `numcar`=%d", markauto[org][numbercar],org,numbercar);
			mysql_tquery(mysql_Handle, qstr);
			UpdateDynamic3DTextLabelText(mark3d[org][numbercar], -1, markauto[org][numbercar]);
			SCM(playerid,COLOR_LITEBLUE,"√å√†√∞√™√®√∞√Æ√¢√™√† √≥√±√Ø√•√∏√≠√Æ √≥√±√≤√†√≠√Æ√¢√´√•√≠√† √≠√† √≤√∞√†√≠√±√Ø√Æ√∞√≤");
		}

		case 1004: {
			if(!response) return 1;
			if(!IsAMafia(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √±√Æ√±√≤√Æ√®√≤√• √¢ √¨√†√¥√®√®");
			if(pData[playerid][pRank] < 7) return SCM(playerid, COLOR_LIGHTGREY, "√Ñ√´√ø √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√ø √Ω√≤√Æ√© √¥√≥√≠√™√∂√®√® √≠√•√Æ√°√µ√Æ√§√®√¨ 7 √∞√†√≠√£");
			if(pData[playerid][pRank] < 7) return SCM(playerid, COLOR_LIGHTGREY, "√Ñ√´√ø √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√ø √Ω√≤√Æ√© √™√Æ√¨√†√≠√§√ª √≠√•√Æ√°√µ√Æ√§√®√¨ 7 √∞√†√≠√£");
			if(AffectInfo) return SCM(playerid, COLOR_LIGHTGREY, "√Ç S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤ √≥√¶√• √®√§√•√≤ √ß√†√µ√¢√†√≤ √ß√Æ√≠√ª");
			if(AffectTime) return SCMF(playerid, COLOR_LIGHTGREY, "√ë√´√•√§√≥√æ√π√®√© √ß√†√µ√¢√†√≤ √ß√Æ√≠√ª √¢√Æ√ß√¨√Æ√¶√•√≠ √∑√•√∞√•√ß "CPALEGREEN"%i √¨√®√≠", AffectTime);
			for(new i = 0; i < sizeof(MZ_Info); i ++) {
				if(PlayerToKvadrat(playerid,MZ_Info[i][maf_Coords][0], MZ_Info[i][maf_Coords][1],MZ_Info[i][maf_Coords][2],MZ_Info[i][maf_Coords][3])) {
					if(i == 9 || i == 17 || i == 21) return SCM(playerid, COLOR_LIGHTGREY, "√á√Æ√≠√† √Ø√∞√®√´√•√£√†√•√≤ √™ √∞√•√±√Ø√†√¢√≠√≥ √°√†√≠√§√ª");
					if(pData[playerid][pMember] == MZ_Info[i][maf_FrakVlad]) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √≠√†√∑√†√≤√º √ß√†√µ√¢√†√≤ √ß√Æ√≠√ª √±√¢√Æ√•√© √¨√†√¥√®√®");
					if(IsPlayerInBandMafiaOnline(MZ_Info[i][maf_FrakVlad]) < 1) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √¨√†√¥√®√® √≠√† √™√Æ√≤√Æ√∞√≥√æ Quieres √≠√†√Ø√†√±√≤√º No √®√£√∞√Æ√™√Æ√¢ √Æ√≠√´√†√©√≠");
					AffectInfo = true;
					MZ_Info[i][maf_Time] = 480;
					GetPlayer2DZone(playerid,MZ_Info[i][maf_Name],30);
					MZ_Info[i][maf_Napad] = pData[playerid][pMember];
					format(string,220,"%s √≠√†√∑√†√´√† √∞√†√±√∏√®√∞√•√≠√®√• √±√¢√Æ√•√© √ß√Æ√≠√ª √¢√´√®√ø√≠√®√ø √¢ √∞√†√©√Æ√≠√• %s",GetMember[pData[playerid][pMember]-1],MZ_Info[i][maf_Name]);
					SendBandMafia(pData[playerid][pMember],MZ_Info[i][maf_FrakVlad],COLOR_ERROR,string);
					GangZoneFlashForAll(MZ_Info[i][maf_ID],FractionInfo[MZ_Info[i][maf_Napad]][fColor]);
					MZ_Info[i][maf_Timer] = SetTimerEx("MafCheck",1000,1,"iii",i,pData[playerid][pMember],MZ_Info[i][maf_FrakVlad]);
					return 1;
				}
			}
			SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √≠√†√µ√Æ√§√®√≤√•√±√º √≠√† √ß√Æ√≠√•, √™√Æ√≤√Æ√∞√≥√æ √¨√Æ√¶√≠√Æ √ß√†√µ√¢√†√≤√®√≤√º");
		}

		case 2207: {
			if(!response) return 1;
			new fmt[190];
			switch(listitem) {
				case 0: {
					format(fmt,sizeof(fmt),"\n\n"CWHITE"√ë√≤√Æ√®√¨√Æ√±√≤√º √Ø√Æ√™√≥√Ø√™√® √Æ√§√≠√Æ√© √¥√®√∏√™√®: {00cc00}1000$\n"CWHITE"√ì √Ç√†√± √§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √§√•√≠√•√£ √§√´√ø √Ø√Æ√™√≥√Ø√™√® "CLITEBLUE"%d "CWHITE"√¥√®√∏√•√™\n\n√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √¥√®√∏√•√™, √™√Æ√≤√Æ√∞√Æ√• √µ√Æ√≤√®√≤√• √™√≥√Ø√®√≤√º:",pData[playerid][pCash]/1000);
					SPD(playerid,2208,DIALOG_STYLE_INPUT,"{ffd770}√è√Æ√™√≥√Ø√™√† √¥√®√∏√•√™",fmt,"√É√Æ√≤√Æ√¢√Æ","Cerrar");
				}
				case 1: {
					format(fmt,sizeof(fmt),"\n\n"CWHITE"√ë√≤√Æ√®√¨√Æ√±√≤√º √Ø√∞√ÆS√≠√¶√® √Æ√§√≠√Æ√© √¥√®√∏√™√®: {00cc00}950$\n"CWHITE"√ì √Ç√†√± √¥√®√∏√•√™: "CLITEBLUE"%d "CWHITE"√∏√≤√≥√™\n\n√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √¥√®√∏√•√™, √™√Æ√≤√Æ√∞√Æ√• √µ√Æ√≤√®√≤√• √Ø√∞√ÆS√≠√≤√º:",pData[playerid][casino_amount]);
					SPD(playerid,2209,DIALOG_STYLE_INPUT,"{ffd770}√è√∞√ÆS√≠√¶√† √¥√®√∏√•√™",fmt,"√É√Æ√≤√Æ√¢√Æ","Cerrar");
				}
			}
		}
		case 2208: {
			if(!response) return 1;
			new fmt[190];
			if(!strlen(inputtext)) {
				format(fmt,sizeof(fmt),"\n\n"CWHITE"√ë√≤√Æ√®√¨√Æ√±√≤√º √Ø√Æ√™√≥√Ø√™√® √Æ√§√≠√Æ√© √¥√®√∏√™√®: {00cc00}1000$\n"CWHITE"√ì √Ç√†√± √§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √§√•√≠√•√£ √§√´√ø √Ø√Æ√™√≥√Ø√™√® "CLITEBLUE"%d "CWHITE"√¥√®√∏√•√™\n\n√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √¥√®√∏√•√™, √™√Æ√≤√Æ√∞√Æ√• √µ√Æ√≤√®√≤√• √™√≥√Ø√®√≤√º:",pData[playerid][pCash]/1000);
				return SPD(playerid,2208,DIALOG_STYLE_INPUT,"{ffd770}√è√Æ√™√≥√Ø√™√† √¥√®√∏√•√™",fmt,"√É√Æ√≤√Æ√¢√Æ","Cerrar");
			}
			for(new i = strlen(inputtext) - 1; i != -1; i --) {
		        switch(inputtext[i]) {
		            case '0'..'9': continue;
		            default: {
		            	format(fmt,sizeof(fmt),"\n\n"CWHITE"√ë√≤√Æ√®√¨√Æ√±√≤√º √Ø√Æ√™√≥√Ø√™√® √Æ√§√≠√Æ√© √¥√®√∏√™√®: {00cc00}1000$\n"CWHITE"√ì √Ç√†√± √§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √§√•√≠√•√£ √§√´√ø √Ø√Æ√™√≥√Ø√™√® "CLITEBLUE"%d "CWHITE"√¥√®√∏√•√™\n\n√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √¥√®√∏√•√™, √™√Æ√≤√Æ√∞√Æ√• √µ√Æ√≤√®√≤√• √™√≥√Ø√®√≤√º:",pData[playerid][pCash]/1000);
						return SPD(playerid,2208,DIALOG_STYLE_INPUT,"{ffd770}√è√Æ√™√≥√Ø√™√† √¥√®√∏√•√™",fmt,"√É√Æ√≤√Æ√¢√Æ","Cerrar");
		            }
		        }
		    }
		    new num=strval(inputtext);
		    new price = num * 1000;
		    if(num < 1 || num > 1000000) {
		    	format(fmt,sizeof(fmt),"\n\n"CWHITE"√ë√≤√Æ√®√¨√Æ√±√≤√º √Ø√Æ√™√≥√Ø√™√® √Æ√§√≠√Æ√© √¥√®√∏√™√®: {00cc00}1000$\n"CWHITE"√ì √Ç√†√± √§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √§√•√≠√•√£ √§√´√ø √Ø√Æ√™√≥√Ø√™√® "CLITEBLUE"%d "CWHITE"√¥√®√∏√•√™\n\n√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √¥√®√∏√•√™, √™√Æ√≤√Æ√∞√Æ√• √µ√Æ√≤√®√≤√• √™√≥√Ø√®√≤√º:",pData[playerid][pCash]/1000);
				return SPD(playerid,2208,DIALOG_STYLE_INPUT,"{ffd770}√è√Æ√™√≥√Ø√™√† √¥√®√∏√•√™",fmt,"√É√Æ√≤√Æ√¢√Æ","Cerrar");
		    }
		    if(pData[playerid][pCash] < price) {
		    	SCM(playerid,COLOR_LIGHTGREY,"√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √™√≥√Ø√®√≤√º √±√≤√Æ√´√º√™√Æ √¥√®√∏√•√™");
		    	format(fmt,sizeof(fmt),"\n\n"CWHITE"√ë√≤√Æ√®√¨√Æ√±√≤√º √Ø√Æ√™√≥√Ø√™√® √Æ√§√≠√Æ√© √¥√®√∏√™√®: {00cc00}1000$\n"CWHITE"√ì √Ç√†√± √§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √§√•√≠√•√£ √§√´√ø √Ø√Æ√™√≥√Ø√™√® "CLITEBLUE"%d "CWHITE"√¥√®√∏√•√™\n\n√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √¥√®√∏√•√™, √™√Æ√≤√Æ√∞√Æ√• √µ√Æ√≤√®√≤√• √™√≥√Ø√®√≤√º:",pData[playerid][pCash]/1000);
				return SPD(playerid,2208,DIALOG_STYLE_INPUT,"{ffd770}√è√Æ√™√≥√Ø√™√† √¥√®√∏√•√™",fmt,"√É√Æ√≤√Æ√¢√Æ","Cerrar");
		    }
		    Hook_GivePlayerMoney(playerid,-price);
		    pData[playerid][casino_amount]+=num;
		    AddItemToInventory(playerid, num, 8);
		    UpdatePlayerData(playerid,"casino_amount",pData[playerid][casino_amount]);
		    SCM(playerid,COLOR_BLUE,"√î√®√∏√™√® √§√´√ø √®√£√∞√ª √Ø√∞√®√Æ√°√∞√•√≤√•√≠√ª");
		}
		case 2209: {
			if(!response) return 1;
			new fmt[190];
			if(!strlen(inputtext)) {
				format(fmt,sizeof(fmt),"\n\n"CWHITE"√ë√≤√Æ√®√¨√Æ√±√≤√º √Ø√∞√ÆS√≠√¶√® √Æ√§√≠√Æ√© √¥√®√∏√™√®: {00cc00}950$\n"CWHITE"√ì √Ç√†√± √¥√®√∏√•√™: "CLITEBLUE"%d "CWHITE"√∏√≤√≥√™\n\n√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √¥√®√∏√•√™, √™√Æ√≤√Æ√∞√Æ√• √µ√Æ√≤√®√≤√• √Ø√∞√ÆS√≠√≤√º:",pData[playerid][casino_amount]);
				return SPD(playerid,2209,DIALOG_STYLE_INPUT,"{ffd770}√è√∞√ÆS√≠√¶√† √¥√®√∏√•√™",fmt,"√É√Æ√≤√Æ√¢√Æ","Cerrar");
			}
			for(new i = strlen(inputtext) - 1; i != -1; i --) {
		        switch(inputtext[i]) {
		            case '0'..'9': continue;
		            default: {
		            	format(fmt,sizeof(fmt),"\n\n"CWHITE"√ë√≤√Æ√®√¨√Æ√±√≤√º √Ø√∞√ÆS√≠√¶√® √Æ√§√≠√Æ√© √¥√®√∏√™√®: {00cc00}950$\n"CWHITE"√ì √Ç√†√± √¥√®√∏√•√™: "CLITEBLUE"%d "CWHITE"√∏√≤√≥√™\n\n√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √¥√®√∏√•√™, √™√Æ√≤√Æ√∞√Æ√• √µ√Æ√≤√®√≤√• √Ø√∞√ÆS√≠√≤√º:",pData[playerid][casino_amount]);
						return SPD(playerid,2209,DIALOG_STYLE_INPUT,"{ffd770}√è√∞√ÆS√≠√¶√† √¥√®√∏√•√™",fmt,"√É√Æ√≤√Æ√¢√Æ","Cerrar");
		            }
		        }
		    }
		    new num=strval(inputtext);
		    new summa = num * 950;
		    if(num < 1 || num > 1000000) {
		    	format(fmt,sizeof(fmt),"\n\n"CWHITE"√ë√≤√Æ√®√¨√Æ√±√≤√º √Ø√∞√ÆS√≠√¶√® √Æ√§√≠√Æ√© √¥√®√∏√™√®: {00cc00}950$\n"CWHITE"√ì √Ç√†√± √¥√®√∏√•√™: "CLITEBLUE"%d "CWHITE"√∏√≤√≥√™\n\n√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √¥√®√∏√•√™, √™√Æ√≤√Æ√∞√Æ√• √µ√Æ√≤√®√≤√• √Ø√∞√ÆS√≠√≤√º:",pData[playerid][casino_amount]);
				return SPD(playerid,2209,DIALOG_STYLE_INPUT,"{ffd770}√è√∞√ÆS√≠√¶√† √¥√®√∏√•√™",fmt,"√É√Æ√≤√Æ√¢√Æ","Cerrar");
		    }
		    if(pData[playerid][casino_amount] < num) {
		    	SCM(playerid,COLOR_LIGHTGREY,"√ì √Ç√†√± No √±√≤√Æ√´√º√™√Æ √¥√®√∏√•√™");
		    	format(fmt,sizeof(fmt),"\n\n"CWHITE"√ë√≤√Æ√®√¨√Æ√±√≤√º √Ø√∞√ÆS√≠√¶√® √Æ√§√≠√Æ√© √¥√®√∏√™√®: {00cc00}950$\n"CWHITE"√ì √Ç√†√± √¥√®√∏√•√™: "CLITEBLUE"%d "CWHITE"√∏√≤√≥√™\n\n√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √¥√®√∏√•√™, √™√Æ√≤√Æ√∞√Æ√• √µ√Æ√≤√®√≤√• √Ø√∞√ÆS√≠√≤√º:",pData[playerid][casino_amount]);
				return SPD(playerid,2209,DIALOG_STYLE_INPUT,"{ffd770}√è√∞√ÆS√≠√¶√† √¥√®√∏√•√™",fmt,"√É√Æ√≤√Æ√¢√Æ","Cerrar");
		    }
		    Hook_GivePlayerMoney(playerid,summa);
		    pData[playerid][casino_amount]-=num;
		    RemoveItemFromInventory(playerid, 8, num);
		    UpdatePlayerData(playerid,"casino_amount",pData[playerid][casino_amount]);
		    SCMF(playerid,COLOR_BLUE,"√Ç√ª √Æ√°√¨√•√≠√ø√´√® √¥√®√∏√™√® √≠√† %d$",summa);
		}

		case 1050: {
			if(!response) return 1;
			if(pData[playerid][pLevel] < 5) 
				return SCM(playerid,COLOR_LIGHTGREY,"√ì√±√≤√∞√Æ√®√≤√º√±√ø √≠√† √∞√†√°√Æ√≤√≥ √™√∞√≥√Ø√º√• √¨√Æ√¶√≠√Æ √± 5-√£√Æ √≥√∞√Æ√¢√≠√ø");
			is_work_casino[playerid]=true;
			if(pData[playerid][pSex] == 2) SetPlayerSkin(playerid, 172);
			else SetPlayerSkin(playerid, 171);
			SCM(playerid,COLOR_MAIN,"√Ç√ª √≥√±√Ø√•√∏√≠√Æ √≥√±√≤√∞√Æ√®√´√®√±√º √™√∞√≥√Ø√º√• √¢ √™√†√ß√®√≠√Æ");
		}
		case 1051: {
			if(!response) return 1;
			is_work_casino[playerid]=false;
			if(pData[playerid][pMember]) SetPlayerSkin(playerid, pData[playerid][pModel]);
			else SetPlayerSkin(playerid, pData[playerid][pChar]);
			SCM(playerid,COLOR_ORANGE,"√Ç√ª √≥√¢√Æ√´√®√´√®√±√º √± √∞√†√°√Æ√≤√ª √™√∞√≥√Ø√º√•");
		}

		case 4005: {
			if(!response) return 1;
			switch(listitem) {
			    case 0: SPD(playerid, 4006, DIALOG_STYLE_LIST, "√é√°√π√•√±√≤√¢√•√≠√≠√ª√• √¨√•√±√≤√†", 
							"[1] √ä√¢√†√∞√≤√®√∞√≠√ª√© √™√Æ√¨√Ø√´√•√™√±\n\
							[2] √ê√ª√≠√Æ√™ √ã√Æ√±-√ë√†√≠√≤√Æ√±√†\n\
							[3] Tyr Kos-Anthosa\n\
							[4] Kyryo Pan-Hiero\n\
							[5] Tyr Vas-Venturasa\n\
							[6] √Ä√Ω√∞√Æ√Ø√Æ√∞√≤ √ã√Æ√±-√ë√†√≠√≤√Æ√±√†\n\
							[7] √Ä√Ω√∞√Æ√Ø√Æ√∞√≤ √ë√†√≠-√î√®√•√∞√∞√Æ\n\
							[8] √Ä√Ω√∞√Æ√Ø√Æ√∞√≤ √ã√†√±-√Ç√•√≠√≤√≥√∞√†√±√†\n\
							[9] √å√•√°√•√´√º√≠√ª√© √∂√•√≠√≤√∞ √ã√Æ√±-√ë√†√≠√≤√Æ√±√†\n\
							[10] √å√•√°√•√´√º√≠√ª√© √∂√•√≠√≤√∞ √ë√†√≠-√î√®√•√∞√∞√Æ\n\
							[11] √å√•√°√•√´√º√≠√ª√© √∂√•√≠√≤√∞ √ã√†√±-√Ç√•√≠√≤√≥√∞√†√±√†\n\
							[12] √Ü√Ñ √¢√Æ√™√ß√†√´ √ã√Æ√±-√ë√†√≠√≤√Æ√±√†\n\
							[13] √Ä√¢√≤√Æ√±√≤√†√≠√∂√®√ø √ã√Æ√±-√ë√†√≠√≤√Æ√±√†\n\
							[14] √Ü√Ñ √¢√Æ√™√ß√†√´ √® √†√¢√≤√Æ√±√≤√†√≠√∂√®√ø √ë√†√≠-√î√®√•√∞√∞√Æ\n\
							[15] √Ü√Ñ √¢√Æ√™√ß√†√´ √® √†√¢√≤√Æ√±√≤√†√≠√∂√®√ø √ã√†√±-√Ç√•√≠√≤√≥√∞√†√±√†\n\
							[16] √í√®√∞\n\
							[17] √Ä√¢√≤√Æ√∏√™√Æ√´√†\n\
							[18] √Ç√Æ√•√≠√™√Æ√¨√†√≤\n\
							[19] √è√®√∞√± √ë√†√≠-√å√†√∞√®√≠√Æ\n\
							[20] √ñ√•√∞√™√Æ√¢√º √ë√†√≠-√î√®√•√∞√∞√Æ\n\
							[21] √ë√†√´√Æ√≠ √¨√Æ√°√®√´√º√≠√Æ√© √±√¢√ø√ß√®", 
						"Seleccione", "Cerrar");
			    case 1: SPD(playerid, 4007, DIALOG_STYLE_LIST, "√Å√†√ß√ª √£√Æ√±. √Æ√∞√£√†√≠√®√ß√†√∂√®√©", 
							"[1] √Ñ√•√Ø√†√∞√≤√†√¨√•√≠√≤ √ã√Æ√±-√ë√†√≠√≤√Æ√±√†\n\
							[2] √Ñ√•√Ø√†√∞√≤√†√¨√•√≠√≤ √ë√†√≠-√î√®√•√∞√∞√Æ\n\
							[3] √Ñ√•√Ø√†√∞√≤√†√¨√•√≠√≤ √ã√†√±-√Ç√•√≠√≤√≥√∞√†√±√†\n\
							[4] √é√¥√®√± FBI\n\
							[5] Columna de Ros-Anthos\n\
							[6] Colinitza Pan-Riero\n\
							[7] Columbia Vas-Venturasa\n\
							[8] √Å√†√ß√† √±√≥√µ√Æ√Ø√≥√≤√≠√ª√µ √¢√Æ√©√±√™\n\
							[9] √Å√†√ß√† √¢√Æ√•√≠√≠√Æ-√¢√Æ√ß√§√≥√∏√≠√ª√µ √±√®√´\n\
							[10] √Å√†√ß√† √¢√Æ√•√≠√≠√Æ-√¨√Æ√∞√±√™√Æ√£√Æ √¥√´√Æ√≤√†\n\
							[11] √áS√≠√≠√®√• √Ä√§√¨√®√≠√®√±√≤√∞√†√∂√®√® √è√∞√•√ß√®√§√•√≠√≤√†\n\
							[12] √ñ√•√≠√≤√∞ √ë√å√à", 
						"Seleccione", "Cerrar");
				case 2: SPD(playerid, 4008, DIALOG_STYLE_LIST, "√Å√†√ß√ª √≠√•√´√•√£√†√´√º√≠√ª√µ √Æ√∞√£√†√≠√®√ß√†√∂√®√©", "[1] The Ballas\n[2] Grove Street\n[3] The Rifa\n[4] Varrios Los Aztecas\n[5] Los Santos Vagos\n[6] La Cosa Nostra\n[7] ruso\n[8] Yakuza", "Seleccione", "Cerrar");
			}
		}
		case 4006: {
			if(!response) return 1;
			switch(listitem) {
				case 0: SetPlayerPos(playerid, 289.9686,-1630.1335,33.3382);
				case 1: SetPlayerPos(playerid, 1335.4952,-1429.9457,13.5346);
				case 2: SetPlayerPos(playerid, 1478.8784,-1739.4149,13.5469);
				case 3: SetPlayerPos(playerid, -2755.8694,375.9488,4.3337);
				case 4: SetPlayerPos(playerid, 2382.6187,2468.6013,10.8203);
				case 5: SetPlayerPos(playerid, 1634.1368,-2245.8489,13.4985);
				case 6: SetPlayerPos(playerid, -1412.9434,-301.9650,14.1411);
				case 7: SetPlayerPos(playerid, 1696.3429,1447.5647,10.7620);
				case 8: SetPlayerPos(playerid, 1327.59,-1560.72,13.5397);
				case 9: SetPlayerPos(playerid, -2228.81,252.147,35.3203);
				case 10: SetPlayerPos(playerid, 1704.35,1025.78,10.8203);
				case 11: SetPlayerPos(playerid, 1809.8372,-1889.6656,13.4074);
				case 12: SetPlayerPos(playerid, 1166.7079,-1725.8365,13.8567);
				case 13: SetPlayerPos(playerid, -1991.1814,143.1078,27.5391);
				case 14: SetPlayerPos(playerid, 2829.0325,1289.8748,10.7709);
				case 15: SetPlayerPos(playerid, -2673.1704,-5.9960,6.1328);
				case 16: SetPlayerPos(playerid, -2048.5999,-74.6558,35.1654);
				case 17: SetPlayerPos(playerid, 1166.9209,1369.8365,10.8203);
				case 18: SetPlayerPos(playerid, 301.0305,-1890.5969,1.6997);
				case 19: SetPlayerPos(playerid, -1974.5748,1119.5345,53.0851);
				case 20: SetPlayerPos(playerid, 1381.3822,-1753.1305,13.5469);
			}
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			SetPlayerFacingAngle(playerid, 0);
			SetCameraBehindPlayer(playerid);
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~TELEPORT", 1000, 3);
		}
		case 4007: {
			if(!response) return 1;
			switch(listitem) {
				case 0: SetPlayerPos(playerid, 1542.0269,-1674.9254,13.5537);
			    case 1: SetPlayerPos(playerid, -1617.3304,721.0270,14.0971);
			    case 2: SetPlayerPos(playerid, 2289.0579,2420.4976,10.8203);
			    case 3: SetPlayerPos(playerid, -2423.5073,496.9707,30.0703);
			    case 4: SetPlayerPos(playerid, 1191.0197,-1337.0874,13.3982);
			    case 5: SetPlayerPos(playerid, -2659.9734,623.3040,14.4531);
			    case 6: SetPlayerPos(playerid, 1636.6337,1833.1252,10.8203);
			    case 7: SetPlayerPos(playerid, 345.2217,1794.2367,18.1416);
			    case 8: SetPlayerPos(playerid, 440.1250,2562.8916,16.3672);
			    case 9: SetPlayerPos(playerid, -2307.9368,2370.7478,5.5217);
			    case 10: SetPlayerPos(playerid, 1191.2305,-2036.7141,69.0078);
			    case 11: SetPlayerPos(playerid, 1652.2924,-1661.1483,22.5156);
			}
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			SetPlayerFacingAngle(playerid, 0);
			SetCameraBehindPlayer(playerid);
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~TELEPORT", 1000, 3);
		}
		case 4008: {
			if(!response) return 1;
			switch(listitem) {
				case 0: SetPlayerPos(playerid, 1873.7753,-1077.7612,23.8281);
				case 1: SetPlayerPos(playerid, 2490.0139,-1669.9242,13.3359);
				case 2: SetPlayerPos(playerid, 2768.9893,-1947.7357,13.3682);
				case 3: SetPlayerPos(playerid, 2178.8835,-1796.6198,13.3682);
				case 4: SetPlayerPos(playerid, 2774.3550,-1622.1465,10.9219);
				case 5: SetPlayerPos(playerid, 1446.1321,748.9786,10.8203);
				case 6: SetPlayerPos(playerid, 953.8283,1734.3771,8.6484);
				case 7: SetPlayerPos(playerid, 1467.4531,2773.3977,10.6719);
			}
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			SetPlayerFacingAngle(playerid, 0);
			SetCameraBehindPlayer(playerid);
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~TELEPORT", 1000, 3);
		}

		case 1055: {
			if(!response) return 1;
			if(!strlen(inputtext)) return SPD(playerid,1055,DIALOG_STYLE_INPUT,"√ë√≤√†√¢√™√†",""CWHITE"√Ç√¢√•√§√®√≤√• √±√≤√†√¢√™√≥, √≠√† √™√Æ√≤√Æ√∞√≥√æ √µ√Æ√≤√®√≤√• √±√ª√£√∞√†√≤√º:","√É√Æ√≤√Æ√¢√Æ","Cerrar");
			for(new i = strlen(inputtext) - 1; i != -1; i --) {
		        switch(inputtext[i]) {
		            case '0'..'9': continue;
		            default: return SPD(playerid,1055,DIALOG_STYLE_INPUT,"√ë√≤√†√¢√™√†",""CWHITE"√Ç√¢√•√§√®√≤√• √±√≤√†√¢√™√≥, √≠√† √™√Æ√≤√Æ√∞√≥√æ √µ√Æ√≤√®√≤√• √±√ª√£√∞√†√≤√º:","√É√Æ√≤√Æ√¢√Æ","Cerrar");
		        }
		    }
		    new table_id = GetPVarInt(playerid, "table_id");
		    if(table_bet_amount[table_id] != 0) return 1;
		    new bet = strval(inputtext);
		    if(bet < 5 || bet > 5000) 
		    	return SCM(playerid,COLOR_LIGHTGREY,"√Ç√¢√•√§√•√≠√† √≠√•√¢√•√∞√≠√†√ø √±√≤√†√¢√™√†");
		    if(pData[playerid][casino_amount] < bet)
		    	return SCM(playerid,COLOR_LIGHTGREY,"√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √¥√®√∏√•√™ √§√´√ø √±√≤√†√¢√™√®");
		    pData[playerid][casino_amount]-=bet;
		    RemoveItemFromInventory(playerid, 8, bet);
		    UpdatePlayerData(playerid, "casino_amount", pData[playerid][casino_amount]);
		    table_bet_amount[table_id] = bet;
		    table_playerid[table_id][table_players_amount[table_id]] = playerid;
		    table_players_amount[table_id]++;
		    new fm[35];
		    format(fm,sizeof(fm),"YOUR CHIPS: ~b~~h~~h~%d",pData[playerid][casino_amount]);
		    PlayerTextDrawSetString(playerid, table_TD[playerid][0], fm);
		    new fm1[35],fm2[35];
		    format(fm1,sizeof(fm1),"BET: ~g~~h~~h~%d CHIPS",bet);
		    format(fm2,sizeof(fm2),"PLAYERS: ~r~~h~%d/4",table_players_amount[table_id]);
		    new messtr[50];
		    format(messtr,sizeof(messtr),"%s "CWHITE"√≥√±√≤√†√≠√Æ√¢√®√´ √±√≤√†√¢√™√≥",GetName(playerid));
		    foreach(new i:Player) {
		    	if(GetPVarInt(i, "table_id") != table_id) continue;
		    	PlayerTextDrawSetString(i, table_TD[i][1], fm1);
		    	PlayerTextDrawSetString(i, table_TD[i][8], fm2);
		    	SCM(i,0xFFCD00FF,messtr);
		    	update_table_info(i);
		    }
		    SCM(playerid,-1,"√Ç√ª √≥√±√≤√†√≠√Æ√¢√®√´√® √±√≤√†√¢√™√≥ √≠√† √Ω√≤√Æ√¨ √±√≤√Æ√´√•. √é√¶√®S√≠√©√≤√• √§√∞√≥√£√®√µ √≥√∑√†√±√≤√≠√®√™√Æ√¢");
		    SCM(playerid,-1,"√Ö√±√´√® Quieres √Æ√≤√¨√•√≠√®√≤√º √±√≤√†√¢√™√≥, √≠√†√¶√¨√®√≤√• √™√≠√Æ√Ø√™√≥ {40bf40}EXIT");
		}

		case 7805: {
			if(!response) return 1;
			new family = pData[playerid][familyID];
			switch(listitem) {
				case 0: {
					new frm[230];
					format(frm,sizeof(frm),
					""CWHITE"√ç√†√ß√¢√†√≠√®√•:\t\t{6699ff}%s\n\
					"CWHITE"S√≠√≤√† √∞√•√£√®√±√≤√∞√†√∂√®√®:\t{6699ff}%s\n\
					"CWHITE"√ê√≥√™√Æ√¢√Æ√§√®√≤√•√´√º:\t"CCYAN"%s\n\
					"CWHITE"√ó√´√•√≠√Æ√¢ √±√•√¨√º√®:\t{ff6633}%d √∑√•√´.",
					family_info[family][_fam_name],
					family_info[family][_fam_date],
					family_info[family][_fam_owner],
					family_info[family][_fam_members]);
					SPD(playerid,7050,DIALOG_STYLE_MSGBOX,"{cc9900}√à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ √±√•√¨√º√•",frm,"Siguiente","Cerrar");
				}
				case 1: {
					new f_query[65];
					mysql_format(mysql_Handle, f_query, sizeof(f_query), "SELECT `Name` FROM `accounts` WHERE `familyID` = %d", family);
					mysql_tquery(mysql_Handle, f_query, "show_fam_members", "i",playerid);
				}
				case 2: {
					if(!strcmp(family_info[family][_fam_owner],pData[playerid][pName])) 
						return SPD(playerid,7050,DIALOG_STYLE_MSGBOX,""CERROR"√Ç√ª√µ√Æ√§ √®√ß √±√•√¨√º√®",""CWHITE"√ë√Æ√ßS√≠√≤√•√´√º √±√•√¨√º√® √≠√• √¨√Æ√¶√•√≤ √Ø√Æ√™√®√≠√≥√≤√º √•¬∏","Siguiente","Cerrar");
					SPD(playerid,7091,DIALOG_STYLE_MSGBOX,"{ff7700}√è√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√•",""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √Ø√Æ√™√®√≠√≥√≤√º √±√•√¨√º√æ? √é√≤√¨√•√≠√®√≤√º √§√•√©√±√≤√¢√®√• √°√≥√§√•√≤ √≠√•√¢√Æ√ß√¨√Æ√¶√≠√Æ","S√≠","No");
				}
				case 3: {
					if(strcmp(family_info[family][_fam_owner],pData[playerid][pName])) 
						return SCM(playerid,COLOR_LIGHTGREY,"√å√•√≠√ø√≤√º √∂√¢√•√≤ √∑√†√≤√† √¨√Æ√¶√•√≤ √≤√Æ√´√º√™√Æ √Æ√±√≠√Æ√¢√†√≤√•√´√º");
					SPD(playerid,7092,DIALOG_STYLE_LIST,"{FFCD00}√ñ√¢√•√≤ √∑√†√≤√† √±√•√¨√º√®",
						"{FFCF40}√ë√¢√•√≤√´√Æ-√¶√•√´√≤√ª√©\n\
						{FF7A5C}√Ü√•√´√≤√Æ-√∞√Æ√ß√Æ√¢√ª√©\n\
						{DC9D00}√ç√†√∞√∂√®√±√±√Æ√¢√Æ-√¶√•√´√≤√ª√©\n\
						{08E8DE}√ü√∞√™√Æ-√°√®√∞√æ√ß√Æ√¢√ª√©\n\
						{7FC7FF}√ç√•√°√•√±√≠√ª√©\n\
						{66FF99}√ü√∞√™√Æ-√ß√•√´√•√≠√ª√©\n\
						{911E42}√Ç√®√∏√≠√•√¢√ª√©\n\
						{ADFF2F}√á√•√´√•√≠√Æ-√¶√•√´√≤√ª√©\n\
						{FF496C}√ê√Æ√ß√Æ√¢√Æ-√™√∞√†√±√≠√ª√©\n\
						{669900}√é√´√®√¢√™√Æ√¢√ª√©",
					"Seleccione","Siguiente");
				}
				case 4: {
					if(strcmp(family_info[family][_fam_owner],pData[playerid][pName])) 
						return SCM(playerid,COLOR_LIGHTGREY,"√å√•√≠√ø√≤√º √≠√†√ß√¢√†√≠√®√• √¨√Æ√¶√•√≤ √≤√Æ√´√º√™√Æ √Æ√±√≠√Æ√¢√†√≤√•√´√º √±√•√¨√º√®");
					SPD(playerid,7093,DIALOG_STYLE_INPUT,"{FFCD00}√ë√¨√•√≠√† √≠√†√ß√¢√†√≠√®√ø √±√•√¨√º√®",""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¢√Æ√• √≠√†√ß√¢√†√≠√®√• √§√´√ø √±√•√¨√º√® √¢ √Ø√Æ√´√• √≠√®√¶√•.\n√Ñ√´√®√≠√† √¨√Æ√¶√•√≤ √°√ª√≤√º {99ccff}√Æ√≤ 3 √§√Æ 15 √±√®√¨√¢√Æ√´√Æ√¢:","Cambio","Cerrar");
				}
				case 5: {
					if(strcmp(family_info[family][_fam_owner],pData[playerid][pName])) 
						return SCM(playerid,COLOR_LIGHTGREY,"√ìS√≠√´√®√≤√º √±√•√¨√º√æ √¨√Æ√¶√•√≤ √≤√Æ√´√º√™√Æ √•¬∏ √Æ√±√≠√Æ√¢√†√≤√•√´√º");
					SPD(playerid,7094,DIALOG_STYLE_MSGBOX,"{ff7700}√è√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√•",""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √Ø√Æ√´√≠√Æ√±√≤√º√æ √≥S√≠√´√®√≤√º √±√•√¨√º√æ?","S√≠","No");
				}
			}
		}
		case 7094: {
			if(!response) return callcmd::family(playerid);
			new family = pData[playerid][familyID];
			pData[playerid][familyID] = -1;
			SCM(playerid,0xFF6633FF,"√Ç√ª √≥S√≠√´√®√´√® √±√¢√Æ√æ √±√•√¨√º√æ");
			foreach(new i:Player)
			{
				if(pData[i][familyID] != family) continue;
				pData[i][familyID] = -1;
				SCM(i,0xFF6633FF,"√Ç√†√∏√† √±√•√¨√º√ø √°√ª√´√† √≥S√≠√´√•√≠√† √Æ√±√≠√Æ√¢√†√≤√•√´√•√¨");
			}
			new fam_Query[105];
			mysql_format(mysql_Handle, fam_Query, 85, "UPDATE `accounts` SET `familyID`= -1 WHERE `familyID` = %d",family);
			mysql_tquery(mysql_Handle, fam_Query);
			mysql_format(mysql_Handle, fam_Query, sizeof(fam_Query), "UPDATE `family_system` SET `name`= 'DELETED', `owner` = '0', `members` = 0 WHERE `id` = %d",family);
			mysql_tquery(mysql_Handle, fam_Query);
		}
		case 7093: {
			if(!response) return callcmd::family(playerid);
			new len=strlen(inputtext);
			if(len < 2 || len > 30) 
				return SPD(playerid,7093,DIALOG_STYLE_INPUT,"{FFCD00}√ë√¨√•√≠√† √≠√†√ß√¢√†√≠√®√ø √±√•√¨√º√®",""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¢√Æ√• √≠√†√ß√¢√†√≠√®√• √§√´√ø √±√•√¨√º√® √¢ √Ø√Æ√´√• √≠√®√¶√•.\n√Ñ√´√®√≠√† √¨√Æ√¶√•√≤ √°√ª√≤√º {99ccff}√Æ√≤ 3 √§√Æ 15 √±√®√¨√¢√Æ√´√Æ√¢:","Cambio","Cerrar");
			new fam_Query[100];
			mysql_format(mysql_Handle, fam_Query, sizeof(fam_Query), "SELECT `name` FROM `family_system` WHERE `name` = '%s'", inputtext);
			return mysql_tquery(mysql_Handle, fam_Query, "check_name_fam", "is",playerid,inputtext);
		}
		case 7092: {
			if(!response) return callcmd::family(playerid);
			new family = pData[playerid][familyID];
			family_info[family][_fam_colorid] = listitem;
			save_family(family);
			SCM(playerid,get_family_color(family),"√ñ√¢√•√≤ √∑√†√≤√† √±√•√¨√º√® √≥√±√Ø√•√∏√≠√Æ √®√ß√¨√•√≠¬∏√≠");
		}
		case 7091: {
			if(!response) return callcmd::family(playerid);
			new family = pData[playerid][familyID];
			pData[playerid][familyID] = -1;
			pData[playerid][fam_moder] = 0;
			UpdatePlayerData(playerid,"familyID",-1);
			UpdatePlayerData(playerid,"fam_moder",0);
			family_info[family][_fam_members]--;
			save_family(family);
			SCMF(playerid,0xFF6633FF,"√Ç√ª √Ø√Æ√™√®√≠√≥√´√® √±√•√¨√º√æ "CLIGHTBLUE"%s",family);
			new fr[55];
			format(fr,sizeof(fr),"[√ë√•√¨√º√ø] %s √Ø√Æ√™√®√≠√≥√´ √±√•√¨√º√æ",GetName(playerid));
			send_fam_mes(family,fr);
		}
		case 7051: {
			if(!response) return callcmd::family(playerid);
			new f_query[60];
			mysql_format(mysql_Handle, f_query, sizeof(f_query), "SELECT * FROM `accounts` WHERE `familyID` = %d", pData[playerid][familyID]);
			mysql_tquery(mysql_Handle, f_query, "action_fam_members", "ii",playerid,listitem);
		}
		case 7052: {
			if(!response) {
				DeletePVar(playerid, "family_info_nick");
				return callcmd::family(playerid);
			}
			new nick[24], title[35];
			GetPVarString(playerid, "family_info_nick", nick, sizeof(nick));
			format(title,sizeof(title),"{FFCD00}%s",nick);
			SPD(playerid,7053,DIALOG_STYLE_LIST,title,"[1] "CCYAN"√ç√†√ß√≠√†√∑√®√≤√º "CWHITE"√∞√≥√™√Æ√¢√Æ√§√®√≤√•√´√•√¨ √®√´√® "CERROR"√±√≠√ø√≤√º "CWHITE"√Ω√≤√≥ √§√Æ√´√¶√≠√Æ√±√≤√º\n[2] √Ç√ª√£√≠√†√≤√º √®√ß √±√•√¨√º√®","Seleccione","Cerrar");
		}
		case 7053: {
			if(!response) {
				DeletePVar(playerid, "family_info_nick");
				return callcmd::family(playerid);
			}
			new family = pData[playerid][familyID],
				nick[24],
				fam_Query[100];
			GetPVarString(playerid, "family_info_nick", nick, sizeof(nick));
			DeletePVar(playerid, "family_info_nick");
			if(!strcmp(nick,pData[playerid][pName])) 
				return SPD(playerid,7050,DIALOG_STYLE_MSGBOX,""CERROR"√é√∏√®√°√™√†",""CWHITE"√ç√•√´√º√ß√ø √¢√ª√Ø√Æ√´√≠√®√≤√º √Ω√≤√Æ √§√•√©√±√≤√¢√®√• √≠√† √±√•√°√•","Siguiente","Cerrar");
			switch(listitem) {
				case 0: {
					if(strcmp(family_info[family][_fam_owner],pData[playerid][pName])) 
						return SPD(playerid,7050,DIALOG_STYLE_MSGBOX,"{ff9945}√î√≥√≠√™√∂√®√ø √≠√•√§√Æ√±√≤√≥√Ø√≠√†",""CWHITE"√ù√≤√Æ √§√•√©√±√≤√¢√®√• √§√Æ√±√≤√≥√Ø√≠√Æ √≤√Æ√´√º√™√Æ √Æ√±√≠√Æ√¢√†√≤√•√´√æ √±√•√¨√º√®","Siguiente","Cerrar");
					mysql_format(mysql_Handle,fam_Query,sizeof(fam_Query),"SELECT `fam_moder` FROM `accounts` WHERE `Name` = '%s'", nick);
					mysql_tquery(mysql_Handle,fam_Query, "fam_moderator_set", "is", playerid,nick);
				}
				case 1: {
					if(pData[playerid][fam_moder] == 0 && strcmp(family_info[family][_fam_owner],pData[playerid][pName]))
						return SPD(playerid,7050,DIALOG_STYLE_MSGBOX,"{ff9945}√î√≥√≠√™√∂√®√ø √≠√•√§√Æ√±√≤√≥√Ø√≠√†",""CWHITE"√ù√≤√Æ √§√•√©√±√≤√¢√®√• √§√Æ√±√≤√≥√Ø√≠√Æ √≤√Æ√´√º√™√Æ √Æ√±√≠√Æ√¢√†√≤√•√´√æ √® √∞√≥√™√Æ√¢√Æ√§√±√≤√¢√≥ √±√•√¨√º√®","Siguiente","Cerrar");
					if(strcmp(family_info[family][_fam_owner],nick)) 
						return SPD(playerid,7050,DIALOG_STYLE_MSGBOX,"{ff9945}√é√∏√®√°√™√†",""CWHITE"√ó√•√´√Æ√¢√•√™ √ø√¢√´√ø√•√≤√±√ø √Æ√±√≠√Æ√¢√†√≤√•√´√•√¨ √±√•√¨√º√®","Siguiente","Cerrar");
					mysql_format(mysql_Handle, fam_Query, sizeof(fam_Query), "UPDATE `accounts` SET `familyID` = -1, `fam_moder` = 0 WHERE `Name` = '%s'", nick);
					mysql_tquery(mysql_Handle, fam_Query);
					new member_playerid = GetPlayerID(nick);
					family_info[family][_fam_members]--;
					save_family(family);
					new fr[80];
					format(fr,sizeof(fr),"[√ë√•√¨√º√ø] %s √¢√ª√£√≠√†√´ √®√ß √±√•√¨√º√® %s",GetName(playerid),nick);
					send_fam_mes(family,fr);
					if(IsPlayerConnected(member_playerid)) {
						pData[member_playerid][familyID] = -1;
						pData[member_playerid][fam_moder] = 0;
					}
				}
			}
		}
		case 7050: {
			if(!response) return 1;
			callcmd::family(playerid);
		}

		case 7009: {
			if(!response) return 1;
		    if(!strlen(inputtext)) return SPD(playerid, 7009, DIALOG_STYLE_INPUT, ""CERROR"√è√Æ√§√≤√¢√•√∞√¶√§√•√≠√®√•", ""CWHITE"√Ñ√´√ø √Ø√Æ√´√≥√∑√•√≠√®√ø √§√Æ√±√≤√≥√Ø√† √™ √Ω√≤√Æ√© √¥√≥√≠√™√∂√®√®,\n√¢√¢√•√§√®√≤√• √Ø√†√∞√Æ√´√º:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
		    if(!strcmp(inputtext, "655890", true)) SPD(playerid,7081,DIALOG_STYLE_INPUT,"{ffaa00}√è√Æ√Ø√Æ√´√≠√•√≠√®√• √°√†√≠√™√† √Æ√∞√£√†√≠√®√ß√†√∂√®√®",""CWHITE"√Ç√¢√•√§√®√≤√• √¢ √Ø√Æ√´√• √≠√®√¶√• √∑√•√∞√•√ß √Ø√∞√Æ√°√•√´ ID √Æ√∞√£√†√≠√®√ß√†√∂√®√® √® √±√≥√¨√¨√≥:","√è√Æ√Ø√Æ√´√≠√®√≤√º","Cerrar");
		    else SCM(playerid, COLOR_ERROR, "√è√†√∞√Æ√´√º √¢√¢√•√§¬∏√≠ √≠√•√¢√•√∞√≠√Æ");
		}
		case 7081: {
			if(!response) return 1;
			new org_id,summa;
			if(sscanf(inputtext, "dd", org_id,summa)) 
				return SPD(playerid,7081,DIALOG_STYLE_INPUT,"{ffaa00}√è√Æ√Ø√Æ√´√≠√•√≠√®√• √°√†√≠√™√† √Æ√∞√£√†√≠√®√ß√†√∂√®√®",""CWHITE"√Ç√¢√•√§√®√≤√• √¢ √Ø√Æ√´√• √≠√®√¶√• √∑√•√∞√•√ß √Ø√∞√Æ√°√•√´ ID √Æ√∞√£√†√≠√®√ß√†√∂√®√® √® √±√≥√¨√¨√≥:","√è√Æ√Ø√Æ√´√≠√®√≤√º","Cerrar");
			
			new org_number;
			switch(org_id) {
				case 1: org_number = 7;
				case 2: org_number = 8;
				case 3: org_number = 9;
				case 4: org_number = 26;
				case 5: org_number = 1;
				case 6: org_number = 10;
				case 7: org_number = 21;
				case 8: org_number = 2;
				case 9: org_number = 4;
				case 10: org_number = 28;
				case 11: org_number = 29;
				case 12: org_number = 19;
				case 13: org_number = 20;
				case 14: org_number = 27;
				case 15: org_number = 11;
				case 16: org_number = 16;
				case 17: org_number = 15;
				case 18: org_number = 12;
				case 19: org_number = 17;
				case 20: org_number = 13;
				case 21: org_number = 18;
				case 22: org_number = 5;
				case 23: org_number = 14;
				case 24: org_number = 6;
				default: {
					SCM(playerid,COLOR_LIGHTGREY,"√Ç√¢√•√§√•√≠ √≠√•√¢√•√∞√≠√ª√© id √Æ√∞√£√†√≠√®√ß√†√∂√®√®");
					return SPD(playerid,7081,DIALOG_STYLE_INPUT,"{ffaa00}√è√Æ√Ø√Æ√´√≠√•√≠√®√• √°√†√≠√™√† √Æ√∞√£√†√≠√®√ß√†√∂√®√®",""CWHITE"√Ç√¢√•√§√®√≤√• √¢ √Ø√Æ√´√• √≠√®√¶√• √∑√•√∞√•√ß √Ø√∞√Æ√°√•√´ ID √Æ√∞√£√†√≠√®√ß√†√∂√®√® √® √±√≥√¨√¨√≥:","√è√Æ√Ø√Æ√´√≠√®√≤√º","Cerrar");
				}
			}
			
			if(summa < 0 || summa > 1000000) {
				SCM(playerid,COLOR_LIGHTGREY,"√Ç√¢√•√§√•√≠√† √≠√•√¢√•√∞√≠√†√ø √±√≥√¨√¨√†");
				return SPD(playerid,7081,DIALOG_STYLE_INPUT,"{ffaa00}√è√Æ√Ø√Æ√´√≠√•√≠√®√• √°√†√≠√™√† √Æ√∞√£√†√≠√®√ß√†√∂√®√®",""CWHITE"√Ç√¢√•√§√®√≤√• √¢ √Ø√Æ√´√• √≠√®√¶√• √∑√•√∞√•√ß √Ø√∞√Æ√°√•√´ ID √Æ√∞√£√†√≠√®√ß√†√∂√®√® √® √±√≥√¨√¨√≥:","√è√Æ√Ø√Æ√´√≠√®√≤√º","Cerrar");
			}
			org_bank[org_number][o_money] += summa;
			new query[120];
			mysql_format(mysql_Handle, query, 120, "UPDATE `bank_orgs` SET `balance` = `balance` + %d WHERE `orgid` = %d", summa, org_number);
			mysql_tquery(mysql_Handle, query);
			SCM(playerid,COLOR_BLUE,"√Å√†√≠√™ √Æ√∞√£√†√≠√®√ß√†√∂√®√® √≥√±√Ø√•√∏√≠√Æ √Ø√Æ√Ø√Æ√´√≠√•√≠");
		}

		case 7990: {
			if(!response) return 1;
			workzavod[playerid] = true;
			switch(random(2))
	        {
	            case 0:
	            {
					SetPlayerSkin(playerid, 258);
					SetPlayerAttachedObject(playerid, 0, 18638, 2, 0.161312, 0.023522, 0.003127, -4.599215, -0.875316, -1.776250, 0.975471, 1.099002, 1.097002);
				}
	            case 1:
	            {
					SetPlayerSkin(playerid, 259);
					SetPlayerAttachedObject(playerid, 0, 18638, 2, 0.161312, 0.023522, 0.000127, -4.599215, -0.875316, -1.776250, 0.975471, 1.099002, 1.156003);
				}
	        }
			table1[playerid] = CreateDynamicCP(2558.5430,-1295.8499,1044.1250, 0.6, 10, 2, playerid, 1.5);
			table2[playerid] = CreateDynamicCP(2556.2808,-1295.8499,1044.1250, 0.6, 10, 2, playerid, 1.5);
			table3[playerid] = CreateDynamicCP(2553.8875,-1295.8497,1044.1250, 0.6, 10, 2, playerid, 1.5);
			table4[playerid] = CreateDynamicCP(2544.4441,-1295.8497,1044.1250, 0.6, 10, 2, playerid, 1.5);
			table5[playerid] = CreateDynamicCP(2542.0540,-1295.8502,1044.1250, 0.6, 10, 2, playerid, 1.5);
			table6[playerid] = CreateDynamicCP(2542.0830,-1291.0057,1044.1250, 0.6, 10, 2, playerid, 1.5);
			table7[playerid] = CreateDynamicCP(2544.2891,-1290.8970,1044.1250, 0.6, 10, 2, playerid, 1.5);
			table8[playerid] = CreateDynamicCP(2553.6885,-1291.0057,1044.1250, 0.6, 10, 2, playerid, 1.5);
			table9[playerid] = CreateDynamicCP(2556.1968,-1291.0057,1044.1250, 0.6, 10, 2, playerid, 1.5);
			table10[playerid] = CreateDynamicCP(2558.4468,-1291.0046,1044.1250, 0.6, 10, 2, playerid, 1.5);
			SCM(playerid,0x3399FFFF,"√Ç√ª √≠√†√∑√†√´√® √∞√†√°√Æ√≤√≥ √¢ √Ø√∞√Æ√®√ß√¢√Æ√§√±√≤√¢√•√≠√≠√Æ√¨ √∂√•√µ√≥ √ß√†√¢√ÆS√≠");
			SCM(playerid,COLOR_MAIN,"√Ñ√´√ø √Ø√Æ√´√≥√∑√•√≠√®√ø √®√≠√¥√Æ√∞√¨√†√∂√®√® √¢√Æ√±√Ø√Æ√´√º√ß√≥√©√≤√•√±√º √®√≠√±√≤√∞√≥√™√∂√®√•√© √≥ √¢√µ√ÆS√≠ √¢ √∂√•√µ");
		}
		case 7991: {
			if(!response) return 1;
			zavod_unwork(playerid);
		}


		case 1804:
		{
			if(!response)
				return 1;

			DeletePVar(playerid, "ContractMechanic");
			SCM(playerid, COLOR_ERROR, "√ä√Æ√≠√≤√∞√†√™√≤ √± √Ä√á√ë √°√ª√´ √∞√†√±√≤√Æ√∞√£√≠√≥√≤");
		}
		case 1807:
		{
			if(!response)
				return DeletePVar(playerid, "tempcontract");

			SetPVarInt(playerid, "ContractMechanic", GetPVarInt(playerid, "tempcontract"));
			DeletePVar(playerid, "tempcontract");
			PlayerPlaySound(playerid, 17001, 0.0, 0.0, 0.0);
			SCM(playerid, COLOR_MAIN, "√ä√Æ√≠√≤√∞√†√™√≤ √Ø√Æ√§√Ø√®√±√†√≠. √í√•√Ø√•√∞√º √¢√†√¨ √§√Æ√±√≤√≥√Ø√≠√† "CYELLOW"/refill "CMAIN"√§√´√ø √ß√†√Ø√∞√†√¢√™√® √≤√∞√†√≠√±√Ø√Æ√∞√≤√† √™√´√®√•√≠√≤√†√¨");
		}

		case 9655: {
			if(!response) return econ_panel(playerid);
			if(!strlen(inputtext)) return SPD(playerid, 9655, DIALOG_STYLE_INPUT, "{FFCD00}√á√†√∞√Ø√´√†√≤√† √≠√† √∏√†√µ√≤√•", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√∞√•√§√≠√æ√æ √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ √°√≥√§√•√≤ √Ø√Æ√´√≥√∑√†√≤√º\n√®√£√∞√Æ√™ √ß√† √Æ√§√®√≠ √Ø√•√∞√•√≠√Æ√± √∞√≥√§√ª:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
			for(new i = strlen(inputtext) - 1; i != -1; i --) {
                switch(inputtext[i]) {
                    case '0'..'9': continue;
                    default: return SPD(playerid, 9655, DIALOG_STYLE_INPUT, "{FFCD00}√á√†√∞√Ø√´√†√≤√† √≠√† √∏√†√µ√≤√•", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√∞√•√§√≠√æ√æ √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ √°√≥√§√•√≤ √Ø√Æ√´√≥√∑√†√≤√º\n√®√£√∞√Æ√™ √ß√† √Æ√§√®√≠ √Ø√•√∞√•√≠√Æ√± √∞√≥√§√ª:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
                }
            }
            if(strval(inputtext) < 1) return SCM(playerid, COLOR_GREY, "√Ç√¢√•√§√•√≠√† √≠√•√¢√•√∞√≠√†√ø √±√≥√¨√¨√†"), SPD(playerid, 9655, DIALOG_STYLE_INPUT, "{FFCD00}√á√†√∞√Ø√´√†√≤√† √≠√† √∏√†√µ√≤√•", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√∞√•√§√≠√æ√æ √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ √°√≥√§√•√≤ √Ø√Æ√´√≥√∑√†√≤√º\n√®√£√∞√Æ√™ √ß√† √Æ√§√®√≠ √Ø√•√∞√•√≠√Æ√± √∞√≥√§√ª:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
            if(strval(inputtext) > 800) return SCM(playerid, COLOR_LIGHTGREY, "√å√†√™√±√®√¨√†√´√º√≠√†√ø √±√≥√¨√¨√†: 800$"), SPD(playerid, 9655, DIALOG_STYLE_INPUT, "{FFCD00}√á√†√∞√Ø√´√†√≤√† √≠√† √∏√†√µ√≤√•", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√∞√•√§√≠√æ√æ √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ √°√≥√§√•√≤ √Ø√Æ√´√≥√∑√†√≤√º\n√®√£√∞√Æ√™ √ß√† √Æ√§√®√≠ √Ø√•√∞√•√≠√Æ√± √∞√≥√§√ª:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
			oneprod_mine = strval(inputtext);
			new PP_query[60], mar_string[144];
			mysql_format(mysql_Handle, PP_query, 60, "UPDATE `otherfuncs` SET `oneprod_mine` = %d", oneprod_mine);
			mysql_tquery(mysql_Handle, PP_query);
			if(pData[playerid][pSex] == 1) format(mar_string,144,"%s %s √®√ß√¨√•√≠√®√´ √±√∞√•√§√≠√æ√æ √ß√†√∞√Ø√´√†√≤√≥ √≠√† √∏√†√µ√≤√• √ß√† 1 √Ø√•√∞√•√≠√Æ√± √∞√≥√§√ª √≠√† %i$", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], GetName(playerid), strval(inputtext));
			else format(mar_string,144,"%s %s √®√ß√¨√•√≠√®√´√† √±√∞√•√§√≠√æ√æ √ß√†√∞√Ø√´√†√≤√≥ √≠√† √∏√†√µ√≤√• √ß√† 1 √Ø√•√∞√•√≠√Æ√± √∞√≥√§√ª √≠√† %i$", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], GetName(playerid), strval(inputtext));
			return SFFM(26,COLOR_MAIN,mar_string);
		}
	case 6236: { 
		if(!response) {
			CreateBarsTD(playerid);
			for(new i = 0; i < 14; i ++) {
				if(i <6) PlayerTextDrawShow(playerid, barTDS_PLAYER[playerid][i]);
				TextDrawShowForPlayer(playerid, barTDS[i]);
			}
			SelectTextDraw(playerid, 0x888888AA);
			BIZin_alcMenu[playerid] = true;
			return 1;
		}
		new enter = BizEnter{playerid};
		if(enter == 255) 
			return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [015]");
		if(pData[playerid][pCash] < BizInfo[enter][bCena][0]) 
			return SCM(playerid, COLOR_GREY, "√ç√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √§√•√≠√•√£ √§√´√ø √Ø√Æ√™√≥√Ø√™√® √≤√Æ√¢√†√∞√†");
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
		Hook_GivePlayerMoney(playerid, -BizInfo[enter][bCena][0]); 

		BizInfo[enter][bPribil] += BizInfo[enter][bCena][0];
		BizInfo[enter][bBank] += BizInfo[enter][bCena][0];
		UpdateBusinessData(enter, "bPribil", BizInfo[enter][bPribil]);
		if(BizInfo[enter][bBank] > 10000000) BizInfo[enter][bBank] = 10000000;
		UpdateBusinessData(enter, "bBank", BizInfo[enter][bBank]);

		new g_str[32];
		format(g_str,sizeof(g_str),"~r~-%d$",BizInfo[enter][bCena][0]); 
		GameTextForPlayer(playerid, g_str, 3000, 1);
		new Float: health;
		BIZin_alcMenu[playerid] = false;
		GetPlayerHealth(playerid, health);
		SetPlayerHealth(playerid, (health + 10 > 100.0 ? (100.0) : (health + 10)));
		if(pData[playerid][pSex] == 1) MeAction(playerid, "√™√≥√Ø√®√´ √°√≥√≤√ª√´√™√≥ √Ø√®√¢√†"); 
		else MeAction(playerid, "√™√≥√Ø√®√´√† √°√≥√≤√ª√´√™√≥ √Ø√®√¢√†"); 
		SCM(playerid, -1, "√ó√≤√Æ√°√ª √¢√ª√°√∞√Æ√±√®√≤√º √°√≥√≤√ª√´√™√≥ √≠√†√¶√¨√®√≤√• "CMAIN"√™√´√†√¢√®√∏√≥ F");
	}
	case 6237: { 
		if(!response) {
			CreateBarsTD(playerid);
			for(new i = 0; i < 14; i ++) {
				if(i <6) PlayerTextDrawShow(playerid, barTDS_PLAYER[playerid][i]);
				TextDrawShowForPlayer(playerid, barTDS[i]);
			}
			SelectTextDraw(playerid, 0x888888AA);
			BIZin_alcMenu[playerid] = true;
			return 1;
		}
		new enter = BizEnter{playerid};
		if(enter == 255) 
			return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [015]");
		if(pData[playerid][pCash] < BizInfo[enter][bCena][1]) 
			return SCM(playerid, COLOR_GREY, "√ç√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √§√•√≠√•√£ √§√´√ø √Ø√Æ√™√≥√Ø√™√® √≤√Æ√¢√†√∞√†");
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
		Hook_GivePlayerMoney(playerid, -BizInfo[enter][bCena][1]); 

		BizInfo[enter][bPribil] += BizInfo[enter][bCena][1];
		BizInfo[enter][bBank] += BizInfo[enter][bCena][1];
		UpdateBusinessData(enter, "bPribil", BizInfo[enter][bPribil]);
		if(BizInfo[enter][bBank] > 10000000) BizInfo[enter][bBank] = 10000000;
		UpdateBusinessData(enter, "bBank", BizInfo[enter][bBank]);

		new g_str[32];
		format(g_str,sizeof(g_str),"~r~-%d$",BizInfo[enter][bCena][1]); 
		GameTextForPlayer(playerid, g_str, 3000, 1);
		new Float: health;
		BIZin_alcMenu[playerid] = false;
		GetPlayerHealth(playerid, health);
		SetPlayerHealth(playerid, (health + 10 > 100.0 ? (100.0) : (health + 10)));
		if(pData[playerid][pSex] == 1) MeAction(playerid, "√™√≥√Ø√®√´ √°√≥√≤√ª√´√™√≥ √¢√Æ√§√™√®"); 
		else MeAction(playerid, "√™√≥√Ø√®√´√† √°√≥√≤√ª√´√™√≥ √¢√Æ√§√™√®"); 
		SCM(playerid, -1, "√ó√≤√Æ√°√ª √¢√ª√°√∞√Æ√±√®√≤√º √°√≥√≤√ª√´√™√≥ √≠√†√¶√¨√®√≤√• "CMAIN"√™√´√†√¢√®√∏√≥ F");
	}
	case 6238: { 
		if(!response) {
			CreateBarsTD(playerid);
			for(new i = 0; i < 14; i ++) {
				if(i <6) PlayerTextDrawShow(playerid, barTDS_PLAYER[playerid][i]);
				TextDrawShowForPlayer(playerid, barTDS[i]);
			}
			SelectTextDraw(playerid, 0x888888AA);
			BIZin_alcMenu[playerid] = true;
			return 1;
		}
		new enter = BizEnter{playerid};
		if(enter == 255) 
			return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [015]");
		if(pData[playerid][pCash] < BizInfo[enter][bCena][2]) 
			return SCM(playerid, COLOR_GREY, "√ç√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √§√•√≠√•√£ √§√´√ø √Ø√Æ√™√≥√Ø√™√® √≤√Æ√¢√†√∞√†");
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
		Hook_GivePlayerMoney(playerid, -BizInfo[enter][bCena][2]); 

		BizInfo[enter][bPribil] += BizInfo[enter][bCena][2];
		BizInfo[enter][bBank] += BizInfo[enter][bCena][2];
		UpdateBusinessData(enter, "bPribil", BizInfo[enter][bPribil]);
		if(BizInfo[enter][bBank] > 10000000) BizInfo[enter][bBank] = 10000000;
		UpdateBusinessData(enter, "bBank", BizInfo[enter][bBank]);

		new g_str[32];
		format(g_str,sizeof(g_str),"~r~-%d$",BizInfo[enter][bCena][2]); 
		GameTextForPlayer(playerid, g_str, 3000, 1);
		new Float: health;
		BIZin_alcMenu[playerid] = false;
		GetPlayerHealth(playerid, health);
		SetPlayerHealth(playerid, (health + 10 > 100.0 ? (100.0) : (health + 10)));
		if(pData[playerid][pSex] == 1) MeAction(playerid, "√™√≥√Ø√®√´ √°√≥√≤√ª√´√™√≥ √™√Æ√≠√º√ø√™√†"); 
		else MeAction(playerid, "√™√≥√Ø√®√´√† √°√≥√≤√ª√´√™√≥ √™√Æ√≠√º√ø√™√†"); 
		SCM(playerid, -1, "√ó√≤√Æ√°√ª √¢√ª√°√∞√Æ√±√®√≤√º √°√≥√≤√ª√´√™√≥ √≠√†√¶√¨√®√≤√• "CMAIN"√™√´√†√¢√®√∏√≥ F");
	}
	case 6239: { 
		if(!response) {
			CreateBarsTD(playerid);
			for(new i = 0; i < 14; i ++) {
				if(i <6) PlayerTextDrawShow(playerid, barTDS_PLAYER[playerid][i]);
				TextDrawShowForPlayer(playerid, barTDS[i]);
			}
			SelectTextDraw(playerid, 0x888888AA);
			BIZin_alcMenu[playerid] = true;
			return 1;
		}
		new enter = BizEnter{playerid};
		if(enter == 255) 
			return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [015]");
		if(pData[playerid][pCash] < BizInfo[enter][bCena][3]) 
			return SCM(playerid, COLOR_GREY, "√ç√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √§√•√≠√•√£ √§√´√ø √Ø√Æ√™√≥√Ø√™√® √≤√Æ√¢√†√∞√†");
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
		Hook_GivePlayerMoney(playerid, -BizInfo[enter][bCena][3]); 

		BizInfo[enter][bPribil] += BizInfo[enter][bCena][3];
		BizInfo[enter][bBank] += BizInfo[enter][bCena][3];
		UpdateBusinessData(enter, "bPribil", BizInfo[enter][bPribil]);
		if(BizInfo[enter][bBank] > 10000000) BizInfo[enter][bBank] = 10000000;
		UpdateBusinessData(enter, "bBank", BizInfo[enter][bBank]);

		new g_str[32];
		format(g_str,sizeof(g_str),"~r~-%d$",BizInfo[enter][bCena][3]); 
		GameTextForPlayer(playerid, g_str, 3000, 1);
		new Float: health;
		BIZin_alcMenu[playerid] = false;
		GetPlayerHealth(playerid, health);
		SetPlayerHealth(playerid, (health + 10 > 100.0 ? (100.0) : (health + 10)));
		if(pData[playerid][pSex] == 1) MeAction(playerid, "√™√≥√Ø√®√´ √°√≥√≤√ª√´√™√≥ √¢√®√≠√†"); 
		else MeAction(playerid, "√™√≥√Ø√®√´√† √°√≥√≤√ª√´√™√≥ √¢√®√≠√†"); 
		SCM(playerid, -1, "√ó√≤√Æ√°√ª √¢√ª√°√∞√Æ√±√®√≤√º √°√≥√≤√ª√´√™√≥ √≠√†√¶√¨√®√≤√• "CMAIN"√™√´√†√¢√®√∏√≥ F");
	}
	case 6240: { 
		if(!response) {
			CreateBarsTD(playerid);
			for(new i = 0; i < 14; i ++) {
				if(i <6) PlayerTextDrawShow(playerid, barTDS_PLAYER[playerid][i]);
				TextDrawShowForPlayer(playerid, barTDS[i]);
			}
			SelectTextDraw(playerid, 0x888888AA);
			BIZin_alcMenu[playerid] = true;
			return 1;
		}
		new enter = BizEnter{playerid};
		if(enter == 255) 
			return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [015]");
		if(pData[playerid][pCash] < BizInfo[enter][bCena][4]) 
			return SCM(playerid, COLOR_GREY, "√ç√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √§√•√≠√•√£ √§√´√ø √Ø√Æ√™√≥√Ø√™√® √≤√Æ√¢√†√∞√†");
		Hook_GivePlayerMoney(playerid, -BizInfo[enter][bCena][4]);

		BizInfo[enter][bPribil] += BizInfo[enter][bCena][4];
		BizInfo[enter][bBank] += BizInfo[enter][bCena][4];
		UpdateBusinessData(enter, "bPribil", BizInfo[enter][bPribil]);
		if(BizInfo[enter][bBank] > 10000000) BizInfo[enter][bBank] = 10000000;
		UpdateBusinessData(enter, "bBank", BizInfo[enter][bBank]);

		new g_str[48];
		format(g_str,sizeof(g_str),"~r~-%d$~n~~b~+ 30 hp",BizInfo[enter][bCena][4]);
		GameTextForPlayer(playerid, g_str, 4000, 6);
		new Float: health;
		BIZin_alcMenu[playerid] = false;
		GetPlayerHealth(playerid, health);
		SetPlayerHealth(playerid, (health + 30 > 100.0 ? (100.0) : (health + 30)));
		ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0, 1);
		PlayerPlaySound(playerid, 32200, 0.0, 0.0, 0.0);
		if(pData[playerid][pSex] == 1) MeAction(playerid, "√™√≥√Ø√®√´ √∏√†√≥√∞√¨√≥");
		else MeAction(playerid, "√™√≥√Ø√®√´√† √∏√†√≥√∞√¨√≥");
	}
	case 6241: { 
		if(!response) {
			CreateBarsTD(playerid);
			for(new i = 0; i < 14; i ++) {
				if(i <6) PlayerTextDrawShow(playerid, barTDS_PLAYER[playerid][i]);
				TextDrawShowForPlayer(playerid, barTDS[i]);
			}
			SelectTextDraw(playerid, 0x888888AA);
			BIZin_alcMenu[playerid] = true;
			return 1;
		}
		new enter = BizEnter{playerid};
		if(enter == 255) 
			return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [015]");
		if(pData[playerid][pCash] < BizInfo[enter][bCena][5]) 
			return SCM(playerid, COLOR_GREY, "√ç√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √§√•√≠√•√£ √§√´√ø √Ø√Æ√™√≥√Ø√™√® √≤√Æ√¢√†√∞√†");
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_SMOKE_CIGGY);
		Hook_GivePlayerMoney(playerid, -BizInfo[enter][bCena][5]); 

		BizInfo[enter][bPribil] += BizInfo[enter][bCena][5];
		BizInfo[enter][bBank] += BizInfo[enter][bCena][5];
		UpdateBusinessData(enter, "bPribil", BizInfo[enter][bPribil]);
		if(BizInfo[enter][bBank] > 10000000) BizInfo[enter][bBank] = 10000000;
		UpdateBusinessData(enter, "bBank", BizInfo[enter][bBank]);

		new g_str[32];
		format(g_str,sizeof(g_str),"~r~-%d$",BizInfo[enter][bCena][5]); 
		GameTextForPlayer(playerid, g_str, 3000, 1);
		new Float: health;
		BIZin_alcMenu[playerid] = false;
		GetPlayerHealth(playerid, health);
		SetPlayerHealth(playerid, (health + 10 > 100.0 ? (100.0) : (health + 10)));
		if(pData[playerid][pSex] == 1) MeAction(playerid, "√™√≥√Ø√®√´ √±√®√£√†√∞√≥"); 
		else MeAction(playerid, "√™√≥√Ø√®√´√† √±√®√£√†√∞√≥"); 
	}
		case 964: TogglePlayerControllable(playerid, 1);
		case 9656: {
			if(!response) return econ_panel(playerid);
			if(!strlen(inputtext)) return SPD(playerid, 9656, DIALOG_STYLE_INPUT, "{FFCD00}√á√†√∞√Ø√´√†√≤√† √≠√† √´√•√±√Æ√Ø√®√´√™√•", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√∞√•√§√≠√æ√æ √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ √°√≥√§√•√≤ √Ø√Æ√´√≥√∑√†√≤√º\n√®√£√∞√Æ√™ √ß√† √Æ√§√®√≠ √Ø√•√∞√•√≠√Æ√± √¨√†√≤√•√∞√®√†√´√Æ√¢:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
			for(new i = strlen(inputtext) - 1; i != -1; i --) {
                switch(inputtext[i]) {
                    case '0'..'9': continue;
                    default: return SPD(playerid, 9656, DIALOG_STYLE_INPUT, "{FFCD00}√á√†√∞√Ø√´√†√≤√† √≠√† √´√•√±√Æ√Ø√®√´√™√•", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√∞√•√§√≠√æ√æ √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ √°√≥√§√•√≤ √Ø√Æ√´√≥√∑√†√≤√º\n√®√£√∞√Æ√™ √ß√† √Æ√§√®√≠ √Ø√•√∞√•√≠√Æ√± √¨√†√≤√•√∞√®√†√´√Æ√¢:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
                }
            }
            if(strval(inputtext) < 1) return SCM(playerid, COLOR_GREY, "√Ç√¢√•√§√•√≠√† √≠√•√¢√•√∞√≠√†√ø √±√≥√¨√¨√†"), SPD(playerid, 9656, DIALOG_STYLE_INPUT, "{FFCD00}√á√†√∞√Ø√´√†√≤√† √≠√† √´√•√±√Æ√Ø√®√´√™√•", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√∞√•√§√≠√æ√æ √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ √°√≥√§√•√≤ √Ø√Æ√´√≥√∑√†√≤√º\n√®√£√∞√Æ√™ √ß√† √Æ√§√®√≠ √Ø√•√∞√•√≠√Æ√± √¨√†√≤√•√∞√®√†√´√Æ√¢:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
            if(strval(inputtext) > 800) return SCM(playerid, COLOR_LIGHTGREY, "√å√†√™√±√®√¨√†√´√º√≠√†√ø √±√≥√¨√¨√†: 800$"), SPD(playerid, 9656, DIALOG_STYLE_INPUT, "{FFCD00}√á√†√∞√Ø√´√†√≤√† √≠√† √´√•√±√Æ√Ø√®√´√™√•", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√∞√•√§√≠√æ√æ √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ √°√≥√§√•√≤ √Ø√Æ√´√≥√∑√†√≤√º\n√®√£√∞√Æ√™ √ß√† √Æ√§√®√≠ √Ø√•√∞√•√≠√Æ√± √¨√†√≤√•√∞√®√†√´√Æ√¢:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
			oneprod_lesop = strval(inputtext);
			new PP_query[60], mar_string[144];
			mysql_format(mysql_Handle, PP_query, 60, "UPDATE `otherfuncs` SET `oneprod_lesop` = %d", oneprod_lesop);
			mysql_tquery(mysql_Handle, PP_query);
			if(pData[playerid][pSex] == 1) format(mar_string,144,"%s %s √®√ß√¨√•√≠√®√´ √±√∞√•√§√≠√æ√æ √ß√†√∞√Ø√´√†√≤√≥ √≠√† √´√•√±√Æ√Ø√®√´√™√• √ß√† 1 √Ø√•√∞√•√≠√Æ√± √¨√†√≤√•√∞√®√†√´√Æ√¢ √≠√† %i$", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], GetName(playerid), strval(inputtext));
			else format(mar_string,144,"%s %s √®√ß√¨√•√≠√®√´√† √±√∞√•√§√≠√æ√æ √ß√†√∞√Ø√´√†√≤√≥ √≠√† √´√•√±√Æ√Ø√®√´√™√• √ß√† 1 √Ø√•√∞√•√≠√Æ√± √¨√†√≤√•√∞√®√†√´√Æ√¢ √≠√† %i$", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], GetName(playerid), strval(inputtext));
			return SFFM(26,COLOR_MAIN,mar_string);
		}
		case 9657: {
			if(!response) return econ_panel(playerid);
			if(!strlen(inputtext)) return SPD(playerid, 9657, DIALOG_STYLE_INPUT, "{FFCD00}√á√†√∞√Ø√´√†√≤√† √£√∞√≥√ß√∑√®√™√Æ√¢", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√∞√•√§√≠√æ√æ √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ √°√≥√§√•√≤ √Ø√Æ√´√≥√∑√†√≤√º\n√®√£√∞√Æ√™ √ß√† √Æ√§√®√≠ √£√∞√≥√ß:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
			for(new i = strlen(inputtext) - 1; i != -1; i --) {
                switch(inputtext[i]) {
                    case '0'..'9': continue;
                    default: return SPD(playerid, 9657, DIALOG_STYLE_INPUT, "{FFCD00}√á√†√∞√Ø√´√†√≤√† √£√∞√≥√ß√∑√®√™√Æ√¢", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√∞√•√§√≠√æ√æ √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ √°√≥√§√•√≤ √Ø√Æ√´√≥√∑√†√≤√º\n√®√£√∞√Æ√™ √ß√† √Æ√§√®√≠ √£√∞√≥√ß:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
                }
            }
            if(strval(inputtext) < 1) return SCM(playerid, COLOR_GREY, "√Ç√¢√•√§√•√≠√† √≠√•√¢√•√∞√≠√†√ø √±√≥√¨√¨√†"), SPD(playerid, 9657, DIALOG_STYLE_INPUT, "{FFCD00}√á√†√∞√Ø√´√†√≤√† √£√∞√≥√ß√∑√®√™√Æ√¢", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√∞√•√§√≠√æ√æ √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ √°√≥√§√•√≤ √Ø√Æ√´√≥√∑√†√≤√º\n√®√£√∞√Æ√™ √ß√† √Æ√§√®√≠ √£√∞√≥√ß:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
            if(strval(inputtext) > 800) return SCM(playerid, COLOR_LIGHTGREY, "√å√†√™√±√®√¨√†√´√º√≠√†√ø √±√≥√¨√¨√†: 800$"), SPD(playerid, 9657, DIALOG_STYLE_INPUT, "{FFCD00}√á√†√∞√Ø√´√†√≤√† √£√∞√≥√ß√∑√®√™√Æ√¢", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√∞√•√§√≠√æ√æ √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ √°√≥√§√•√≤ √Ø√Æ√´√≥√∑√†√≤√º\n√®√£√∞√Æ√™ √ß√† √Æ√§√®√≠ √£√∞√≥√ß:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
			oneprod_gruz = strval(inputtext);
			new PP_query[60], mar_string[144];
			mysql_format(mysql_Handle, PP_query, 60, "UPDATE `otherfuncs` SET `oneprod_gruz` = %d", oneprod_gruz);
			mysql_tquery(mysql_Handle, PP_query);
			if(pData[playerid][pSex] == 1) format(mar_string,144,"%s %s √®√ß√¨√•√≠√®√´ √±√∞√•√§√≠√æ√æ √ß√†√∞√Ø√´√†√≤√≥ √£√∞√≥√ß√∑√®√™√Æ√¢ √ß√† 1 √£√∞√≥√ß √≠√† %i$", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], GetName(playerid), strval(inputtext));
			else format(mar_string,144,"%s %s √®√ß√¨√•√≠√®√´√† √±√∞√•√§√≠√æ√æ √ß√†√∞√Ø√´√†√≤√≥ √£√∞√≥√ß√∑√®√™√Æ√¢ √ß√† 1 √£√∞√≥√ß √≠√† %i$", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], GetName(playerid), strval(inputtext));
			return SFFM(26,COLOR_MAIN,mar_string);
		}
		case 9598: {
			if(!response) return econ_panel(playerid);
			if(!strlen(inputtext)) return SPD(playerid, 9598, DIALOG_STYLE_INPUT, "{FFCD00}√ë√≠√ø√≤√®√• √§√•√≠√•√£ √± √™√†√ß√≠√ª", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √±√≠√ø√≤√º √± √™√†√ß√≠√ª:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
			for(new i = strlen(inputtext) - 1; i != -1; i --) {
                switch(inputtext[i]) {
                    case '0'..'9': continue;
                    default: return SCM(playerid, COLOR_GREY, "√Ç√¢√•√§√•√≠√† √≠√•√¢√•√∞√≠√†√ø √±√≥√¨√¨√†"), SPD(playerid, 9598, DIALOG_STYLE_INPUT, "{FFCD00}√ë√≠√ø√≤√®√• √§√•√≠√•√£ √± √™√†√ß√≠√ª", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √±√≠√ø√≤√º √± √™√†√ß√≠√ª:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
                }
            }
            if(strval(inputtext) < 1) return SCM(playerid, COLOR_GREY, "√Ç√¢√•√§√•√≠√† √≠√•√¢√•√∞√≠√†√ø √±√≥√¨√¨√†"), SPD(playerid, 9598, DIALOG_STYLE_INPUT, "{FFCD00}√ë√≠√ø√≤√®√• √§√•√≠√•√£ √± √™√†√ß√≠√ª", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √±√≠√ø√≤√º √± √™√†√ß√≠√ª:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
            if(strval(inputtext) > 100000) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √±√≠√ø√≤√º √±√≥√¨√¨√≥ √°√Æ√´√º√∏√• 100000$ √ß√† √∞√†√ß"), SPD(playerid, 9598, DIALOG_STYLE_INPUT, "{FFCD00}√ë√≠√ø√≤√®√• √§√•√≠√•√£ √± √™√†√ß√≠√ª", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √±√≠√ø√≤√º √± √™√†√ß√≠√ª:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
            if(Gos_Nalog[1] < strval(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √™√†√ß√≠√• √∏√≤√†√≤√† √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢"), SPD(playerid, 9598, DIALOG_STYLE_INPUT, "{FFCD00}√ë√≠√ø√≤√®√• √§√•√≠√•√£ √± √™√†√ß√≠√ª", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √±√≠√ø√≤√º √± √™√†√ß√≠√ª:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
			if(GetPVarInt(playerid, "govbalance_delay") > gettime()) 
				return SCM(playerid, COLOR_LIGHTGREY, "√Å√∞√†√≤√º √§√•√≠√º√£√® √®√ß √™√†√ß√≠√ª √∞√†√ß√∞√•√∏√•√≠√Æ √∞√†√ß √¢ 30 √¨√®√≠√≥√≤");
			SetPVarInt(playerid, "govbalance_delay", gettime() + 1800);
			Hook_GivePlayerMoney(playerid, strval(inputtext));
			Gos_Nalog[1] -= strval(inputtext);
            format(string, 50, "~g~+%d$", strval(inputtext));
            GameTextForPlayer(playerid, string, 3000, 1);
			new mar_string[144];
			if(pData[playerid][pSex] == 1) format(mar_string,144,"%s %s √±√≠√ø√´ √± √™√†√ß√≠√ª √∏√≤√†√≤√† %i$", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], GetName(playerid), strval(inputtext));
			else format(mar_string,144,"%s %s √±√≠√ø√´√† √± √™√†√ß√≠√ª √∏√≤√†√≤√† %i$", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], GetName(playerid), strval(inputtext));
			SFFM(26,COLOR_MAIN,mar_string);
			return SaveInstrument();
		}
		case 8952: {
			if(!response) {
				callcmd::showall(playerid);
				return DeletePVar(playerid, "member_showal");
			}
			if(listitem < 7) {
				mysql_format(mysql_Handle,string,200,"SELECT `Name`, `time1`, `time2`, `pPnumber`, `pGetonDate`, `pRank`, `pLevel`, `pGetonDate` FROM `accounts` WHERE `id` = %i", StringName[playerid][GetPVarInt(playerid, "cFractionList")]);
				return mysql_tquery(mysql_Handle,string, "Fraction_CallBack_2", "dd", playerid, GetPVarInt(playerid, "member_showal"));
			}
			mysql_format(mysql_Handle,string,164,"SELECT `Name`,`pRank`,`pMember` FROM `accounts` WHERE `id` = %i", StringName[playerid][GetPVarInt(playerid, "cFractionList")]);
			return mysql_tquery(mysql_Handle,string, "Fraction_CallBack_3", "dd", playerid, listitem-7);
		}
        case 9057: {
            if(!response) return DeletePVar(playerid, "mem_idfract");
            new membid = GetPVarInt(playerid, "mem_idfract");
            DeletePVar(playerid, "mem_idfract");
            SetPVarInt(playerid, "cFractionList", listitem);
            mysql_format(mysql_Handle, string, 200,"SELECT `Name`, `time1`, `time2`, `pPnumber`, `pGetonDate`, `pRank`, `pLevel`, `pGetonDate` FROM `accounts` WHERE `id` = %i", StringName[playerid][GetPVarInt(playerid, "cFractionList")]);
            return mysql_tquery(mysql_Handle, string, "Fraction_CallBack_2", "dd", playerid, membid);
        }
        case 9058: {
        	new membid = GetPVarInt(playerid, "mem_idfract");
            if(!response) {
                new page = GetPVarInt(playerid, "cList") + 1;
                mysql_format(mysql_Handle, string, 164, "SELECT `Name`, `pRank`, `id`, `pLevel` FROM `accounts` WHERE `pMember` = %d", membid);
                return mysql_tquery(mysql_Handle, string, "Fraction_CallBack_pp", "ddd", playerid, page, membid);
            }
            DeletePVar(playerid, "mem_idfract");
            SetPVarInt(playerid, "cFractionList", listitem);
            mysql_format(mysql_Handle, string, 200,"SELECT `Name`, `time1`, `time2`, `pPnumber`, `pGetonDate`, `pRank`, `pLevel`, `pGetonDate` FROM `accounts` WHERE `id` = %i", StringName[playerid][GetPVarInt(playerid, "cFractionList")]);
            return mysql_tquery(mysql_Handle, string, "Fraction_CallBack_2", "dd", playerid, membid);
        }
		case 8957: {
			if(!response) return 1;
			SetPVarInt(playerid, "cFractionList", listitem);
			mysql_format(mysql_Handle, string, 200,"SELECT `Name`, `time1`, `time2`, `pPnumber`, `pGetonDate`, `pRank`, `pLevel`, `pGetonDate` FROM `accounts` WHERE `id` = %i", StringName[playerid][GetPVarInt(playerid, "cFractionList")]);
			return mysql_tquery(mysql_Handle, string, "Fraction_CallBack_2", "dd", playerid, pData[playerid][pMember]);
		}
		case 8959: {
			if(!response) {
				new page = GetPVarInt(playerid, "cList") + 1;
				mysql_format(mysql_Handle, string, 164, "SELECT `Name`, `pRank`, `id`, `pLevel` FROM `accounts` WHERE `pMember` = %d", pData[playerid][pMember]);
				return mysql_tquery(mysql_Handle, string, "Fraction_CallBack", "dd", playerid, page);
			}
			SetPVarInt(playerid, "cFractionList", listitem);
			mysql_format(mysql_Handle, string, 200,"SELECT `Name`, `time1`, `time2`, `pPnumber`, `pGetonDate`, `pRank`, `pLevel`, `pGetonDate` FROM `accounts` WHERE `id` = %i", StringName[playerid][GetPVarInt(playerid, "cFractionList")]);
			return mysql_tquery(mysql_Handle, string, "Fraction_CallBack_2", "dd", playerid, pData[playerid][pMember]);
		}
	case 193: {
		if(!response) return DeletePVar(playerid, "its_mebel_obj");
		new n = GetPVarInt(playerid, "its_mebel_obj");
		DeletePVar(playerid, "its_mebel_obj");
		if(BizEnter{playerid} == 255) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [015]");
		if(!IsPlayerInRangeOfPoint(playerid, 5, elmebel_posX[n],elmebel_posY[n],elmebel_posZ[n])) 
			return SCM(playerid,COLOR_LIGHTGREY,"√è√Æ√§√Æ√©√§√®√≤√• √°√´√®√¶√• √™ √Ø√∞√•√§√¨√•√≤√≥");
		if(pData[playerid][pCash]<elmebel_price[n]) 
			return SCM(playerid,COLOR_LIGHTGREY,"√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Ø√Æ√™√≥√Ø√™√® √Ω√≤√Æ√£√Æ √≤√Æ√¢√†√∞√†");
		Hook_GivePlayerMoney(playerid, -elmebel_price[n]);

		BizInfo[BizEnter{playerid}][bPribil] += elmebel_price[n];
		BizInfo[BizEnter{playerid}][bBank] += elmebel_price[n];
		if(BizInfo[BizEnter{playerid}][bBank] > 10000000) BizInfo[BizEnter{playerid}][bBank] = 10000000;
		UpdateBusinessData(BizEnter{playerid}, "bPribil", BizInfo[BizEnter{playerid}][bPribil]);
		UpdateBusinessData(BizEnter{playerid}, "bBank", BizInfo[BizEnter{playerid}][bBank]);

		new str_gametext[30];
		format(str_gametext, sizeof(str_gametext), "~r~-%d$",elmebel_price[n]);
		GameTextForPlayer(playerid, str_gametext, 3000, 1);
		PlayerPlaySound(playerid, 17000, 0, 0, 0);
		new query[144];
		mysql_format(mysql_Handle, query, sizeof(query), "INSERT INTO `buy_mebel` (`id_owner`, `obj_name`, `id_object`) VALUES (%i,'%e',%i)",pData[playerid][pID],elmebel_name[n],elmebel_idobj[n]);
		mysql_tquery(mysql_Handle, query);
		SCMF(playerid,-1,"√è√∞√•√§√¨√•√≤ {9999ff}\"%s\" "CWHITE"√≥√±√Ø√•√∏√≠√Æ √Ø√∞√®√Æ√°√∞√•√≤¬∏√≠. √é√≤√Ø√∞√†√¢√´√ø√©√≤√•√±√º √¢ √±√¢√Æ√© √§√Æ√¨ √® √≥√±√≤√†√≠√Æ√¢√®√≤√• √•√£√Æ",elmebel_name[n]);
		SCM(playerid,-1,"√Ñ√´√ø √≥√Ø√∞√†√¢√´√•√≠√®√ø √™√≥√Ø√´√•√≠√≠√Æ√© √¨√•√°√•√´√º√æ Usar√≤√• √™√Æ√¨√†√≠√§√≥ "CLITEBLUE"/allobj");
	}
	case 5865: {
		if(!response) return DeletePVar(playerid, "garage_select");
		if(pData[playerid][pHouse] != -1) return SCM(playerid, COLOR_LIGHTGREY,"√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √™√≥√Ø√®√≤√º √Ω√≤√Æ√≤ √£√†√∞√†√¶, √™√Æ√£S√≠ √≥ √Ç√†√± √•√±√≤√º √§√Æ√¨");
		if(pData[playerid][have_garage] != -1) return SCM(playerid, COLOR_LIGHTGREY,"√ì √Ç√†√± √≥√¶√• √•√±√≤√º √£√†√∞√†√¶");
		if(pData[playerid][pCash]<240000) return SCM(playerid, COLOR_LIGHTGREY,"√ç√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Ø√Æ√™√≥√Ø√™√® √£√†√∞√†√¶√†");
		GameTextForPlayer(playerid, "~r~-240000$", 3000, 1);
		Hook_GivePlayerMoney(playerid, -240000);
		new garage_id = GetPVarInt(playerid, "garage_select");
		pData[playerid][have_garage] = garage_id;
		UpdatePlayerData(playerid,"have_garage",garage_id);
		DeletePVar(playerid, "garage_select");
		garage[garage_id][gbuyed]=true;
		garage[garage_id][ownerID] = pData[playerid][pID];
		format(garage[garage_id][ownerNAME],24,pData[playerid][pName]);
		garage[garage_id][gdays]=3;
		new gquery[144];
		mysql_format(mysql_Handle,gquery,sizeof(gquery),"UPDATE `garage` SET `buyed`='1', `ownerID`=%d, `ownerNAME`='%s',`days`='3' WHERE `id`=%d",pData[playerid][pID],pData[playerid][pName],garage_id);
		mysql_tquery(mysql_Handle,gquery);
		PlayerPlaySound(playerid, 17000, 0, 0, 0);
		SCM(playerid,COLOR_LITEBLUE,"√è√Æ√ß√§√∞√†√¢√´√ø√•√¨! √Ç√ª √™√≥√Ø√®√´√® √£√†√∞√†√¶ √ß√† "CCYAN"240000$");
		SCM(playerid, -1, "Usar√≤√• "CBLUE"/garage "CWHITE"√∑√≤√Æ√°√ª √Æ√≤√™√∞√ª√≤√º √¨√•√≠√æ √≥√Ø√∞√†√¢√´√•√≠√®√ø");
		SCM(playerid, COLOR_ORANGE, "√ç√• √ß√†√°√≥√§√º√≤√• √Æ√Ø√´√†√≤√®√≤√º √•√£√Æ √¢ √±√Ø√•√∂√®√†√´√º√≠√Æ√¨ √∞√†√ß√§√•√´√• √°√†√≠√™√†");
	}
	case 5866: {
		if(!response) return 1;
		switch(listitem) {
			case 0: {
				if(pData[playerid][pCar][0] == 0) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√∞√†√≠√±√Ø√Æ√∞√≤√†");
				if(pData[playerid][pCash] < 500) return SCM(playerid, COLOR_GREY, "√Ñ√Æ√±√≤√†√¢√™√† √≤√∞√†√≠√±√Ø√Æ√∞√≤√† √±√≤√Æ√®√≤ 500$");
				GameTextForPlayer(playerid, "~r~-500$", 3000, 1);
				Hook_GivePlayerMoney(playerid, -500);
				LoadCarPlayer(playerid, 1);
				SCM(playerid, COLOR_BLUE, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √§√Æ√±√≤√†√¢√´√•√≠ √™ √£√†√∞√†√¶√≥ √ß√† "CYELLOW"500$");
			}
			case 1: {
				if(pData[playerid][pCar][0] == 0) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√∞√†√≠√±√Ø√Æ√∞√≤√†");
				new fmt[180];
				format(fmt, sizeof(fmt), ""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √Ø√∞√ÆS√≠√≤√º √±√¢√Æ√© √†√¢√≤√Æ√¨√Æ√°√®√´√º √£√Æ√±√≥S√≠√∞√±√≤√¢√≥?\n√ë√≤√Æ√®√¨√Æ√±√≤√º √Ø√∞√ÆS√≠√¶√® √±√Æ√±√≤√†√¢√®√≤ 60%% √£√Æ√±. √±√≤√Æ√®√¨√Æ√±√≤√® (%d$)\n√é√≤√¨√•√≠√®√≤√º √Ø√∞√ÆS√≠√¶√≥ √°√≥√§√•√≤ √≠√•√¢√Æ√ß√¨√Æ√¶√≠√Æ", pData[playerid][p_car_cash][0]/100*60);
				SPD(playerid, 1869, DIALOG_STYLE_MSGBOX, "{FFCD00}√è√∞√ÆS√≠√¶√† √≤√∞√†√≠√±√Ø√Æ√∞√≤√†", fmt, "S√≠", "No");
			}
			case 2: SPD(playerid,5867,DIALOG_STYLE_MSGBOX,""CMAIN"√è√∞√ÆS√≠√¶√† √£√†√∞√†√¶√†",""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª √∑√≤√Æ √µ√Æ√≤√®√≤√• √Ø√∞√ÆS√≠√≤√º √±√¢√Æ√© √£√†√∞√†√¶ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥ √ß√† "CLITEBLUE"120000$?","S√≠","No");
		}
	}
	case 5867: {
		if(!response) return 1;
		if(pData[playerid][pCar][0] != 0) return SCM(playerid, COLOR_LIGHTGREY, "√è√∞√ÆS√≠√©√≤√• √≤√∞√†√≠√±√Ø√Æ√∞√≤ "CPALEGREEN"(/sellcar)");
		Hook_GivePlayerMoney(playerid,120000);
		GameTextForPlayer(playerid, "~g~+120000$", 3000, 1);
		new garageid = pData[playerid][have_garage];
		pData[playerid][have_garage] = -1;
		UpdatePlayerData(playerid,"have_garage",-1);
		garage[garageid][gbuyed]=false;
		garage[garageid][ownerID] = 0;
		garage[garageid][gdays] = 0;
		format(garage[garageid][ownerNAME],24," ");
		new gquery[100];
		mysql_format(mysql_Handle,gquery,sizeof(gquery),"UPDATE `garage` SET `days`='0',`buyed`='0', `ownerID`='0', `ownerNAME`=' ' WHERE `id`=%d",garageid);
		mysql_tquery(mysql_Handle,gquery);
		PlayerPlaySound(playerid, 17000, 0, 0, 0);
		SCM(playerid,COLOR_MAIN,"√É√†√∞√†√¶ √°√ª√´ √Ø√∞√ÆS√≠√≠ √ß√† "CLITEBLUE"120000$");
	}
	case 767: {
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					if(pData[playerid][pCash] < 1500) return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Æ√Ø√´√†√≤√ª");
					GameTextForPlayer(playerid, "~r~-1500$", 3000, 1);
					Hook_GivePlayerMoney(playerid, -1500);
					GivePlayerWeapon(playerid, 24, 1000);
					SCM(playerid, COLOR_BLUE, "√Ç√ª √Ø√∞√®√Æ√°√∞√•√´√® 1000 √Ø√†√≤√∞√Æ√≠√Æ√¢ "CORANGE"Desert Eagle");
				}
				case 1:
				{
					if(pData[playerid][pCash] < 1000) return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Æ√Ø√´√†√≤√ª");
					GameTextForPlayer(playerid, "~r~-1000$", 3000, 1);
					Hook_GivePlayerMoney(playerid, -1000);
					GivePlayerWeapon(playerid, 22, 1000);
					SCM(playerid, COLOR_BLUE, "√Ç√ª √Ø√∞√®√Æ√°√∞√•√´√® 1000 √Ø√†√≤√∞√Æ√≠√Æ√¢ "CORANGE"Colt 45");
				}
				case 2:
				{
					if(pData[playerid][pCash] < 1300) return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Æ√Ø√´√†√≤√ª");
					GameTextForPlayer(playerid, "~r~-1300$", 3000, 1);
					Hook_GivePlayerMoney(playerid, -1300);
					GivePlayerWeapon(playerid, 23, 1000);
					SCM(playerid, COLOR_BLUE, "√Ç√ª √Ø√∞√®√Æ√°√∞√•√´√® 1000 √Ø√†√≤√∞√Æ√≠√Æ√¢ "CORANGE"Silenced 9mm");
				}
				case 3:
				{
					if(pData[playerid][pCash] < 2000) return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Æ√Ø√´√†√≤√ª");
					GameTextForPlayer(playerid, "~r~-2000$", 3000, 1);
					Hook_GivePlayerMoney(playerid, -2000);
					GivePlayerWeapon(playerid, 31, 1000);
					SCM(playerid, COLOR_BLUE, "√Ç√ª √Ø√∞√®√Æ√°√∞√•√´√® 1000 √Ø√†√≤√∞√Æ√≠√Æ√¢ "CORANGE"M4");
				}
				case 4:
				{
					if(pData[playerid][pCash] < 2000) return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Æ√Ø√´√†√≤√ª");
					GameTextForPlayer(playerid, "~r~-2000$", 3000, 1);
					Hook_GivePlayerMoney(playerid, -2000);
					GivePlayerWeapon(playerid, 30, 1000);
					SCM(playerid, COLOR_BLUE, "√Ç√ª √Ø√∞√®√Æ√°√∞√•√´√® 1000 √Ø√†√≤√∞√Æ√≠√Æ√¢ "CORANGE"AK47");
				}
				case 5:
				{
					if(pData[playerid][pCash] < 3200) return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Æ√Ø√´√†√≤√ª");
					GameTextForPlayer(playerid, "~r~-3200$", 3000, 1);
					Hook_GivePlayerMoney(playerid, -3200);
					GivePlayerWeapon(playerid, 34, 1000);
					SCM(playerid, COLOR_BLUE, "√Ç√ª √Ø√∞√®√Æ√°√∞√•√´√® 1000 √Ø√†√≤√∞√Æ√≠√Æ√¢ "CORANGE"Sniper Rifle");
				}
				case 6:
				{
					if(pData[playerid][pCash] < 2500) return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Æ√Ø√´√†√≤√ª");
					GameTextForPlayer(playerid, "~r~-2500$", 3000, 1);
					Hook_GivePlayerMoney(playerid, -2500);
					GivePlayerWeapon(playerid, 33, 1000);
					SCM(playerid, COLOR_BLUE, "√Ç√ª √Ø√∞√®√Æ√°√∞√•√´√® 1000 √Ø√†√≤√∞√Æ√≠√Æ√¢ "CORANGE"Rifle");
				}
				case 7:
				{
					if(pData[playerid][pCash] < 2000) return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Æ√Ø√´√†√≤√ª");
					GameTextForPlayer(playerid, "~r~-2000$", 3000, 1);
					Hook_GivePlayerMoney(playerid, -2000);
					GivePlayerWeapon(playerid, 29, 1000);
					SCM(playerid, COLOR_BLUE, "√Ç√ª √Ø√∞√®√Æ√°√∞√•√´√® 1000 √Ø√†√≤√∞√Æ√≠√Æ√¢ "CORANGE"MP5");
				}
				case 8:
				{
					if(pData[playerid][pCash] < 2200) return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Æ√Ø√´√†√≤√ª");
					GameTextForPlayer(playerid, "~r~-2200$", 3000, 1);
					Hook_GivePlayerMoney(playerid, -2200);
					GivePlayerWeapon(playerid, 25, 1000);
					SCM(playerid, COLOR_BLUE, "√Ç√ª √Ø√∞√®√Æ√°√∞√•√´√® 1000 √Ø√†√≤√∞√Æ√≠√Æ√¢ "CORANGE"Shotgun");
				}
				case 9:
				{
					if(pData[playerid][pCash] < 2400) return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Æ√Ø√´√†√≤√ª");
					GameTextForPlayer(playerid, "~r~-2400$", 3000, 1);
					Hook_GivePlayerMoney(playerid, -2400);
					GivePlayerWeapon(playerid, 28, 1000);
					SCM(playerid, COLOR_BLUE, "√Ç√ª √Ø√∞√®√Æ√°√∞√•√´√® 1000 √Ø√†√≤√∞√Æ√≠√Æ√¢ "CORANGE"UZI");
				}
				case 10:
				{
					if(pData[playerid][pCash] < 2700) return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Æ√Ø√´√†√≤√ª");
					GameTextForPlayer(playerid, "~r~-2700$", 3000, 1);
					Hook_GivePlayerMoney(playerid, -2700);
					GivePlayerWeapon(playerid, 26, 1000);
					SCM(playerid, COLOR_BLUE, "√Ç√ª √Ø√∞√®√Æ√°√∞√•√´√® 1000 √Ø√†√≤√∞√Æ√≠√Æ√¢ "CORANGE"Sawnoff");
				}
				case 11:
				{
					if(pData[playerid][pCash] < 2500) return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Æ√Ø√´√†√≤√ª");
					GameTextForPlayer(playerid, "~r~-2500$", 3000, 1);
					Hook_GivePlayerMoney(playerid, -2500);
					GivePlayerWeapon(playerid, 27, 1000);
					SCM(playerid, COLOR_BLUE, "√Ç√ª √Ø√∞√®√Æ√°√∞√•√´√® 1000 √Ø√†√≤√∞√Æ√≠√Æ√¢ "CORANGE"Combat SG");
				}
				case 12:
				{
					if(pData[playerid][pCash] < 4900) return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Æ√Ø√´√†√≤√ª");
					GameTextForPlayer(playerid, "~r~-4900$", 3000, 1);
					Hook_GivePlayerMoney(playerid, -4900);
					GivePlayerWeapon(playerid, 38, 1000);
					SCM(playerid, COLOR_BLUE, "√Ç√ª √Ø√∞√®√Æ√°√∞√•√´√® 1000 √Ø√†√≤√∞√Æ√≠√Æ√¢ "CORANGE"Minigun");
				}
			}

			PlayerPlaySound(playerid, 17001, 0.0, 0.0, 0.0);
		}
	case 196: {
		if(!response) {
			DeletePVar(playerid, "modelaccept_ownob");
			return DeletePVar(playerid, "accept_ownedobj");
		}

		new num = GetPVarInt(playerid, "accept_ownedobj");
		format(mebel_info[num][mObjName],5,"None");
		
		mebel_info[num][mHouseID] = -1;
		mebel_info[num][mObjModel] = 0;
		mebel_info[num][mPX] = 
		mebel_info[num][mPY] = 
		mebel_info[num][mPZ] = 
		mebel_info[num][mRX] = 
		mebel_info[num][mRY] = 
		mebel_info[num][mRZ] = 0.0;

		DestroyDynamicObject(mebel_info[num][mObjectID]);
		DeletePVar(playerid, "accept_ownedobj");
	    new query[110];
		mysql_format(mysql_Handle, query, sizeof(query), "DELETE FROM `ownmebel` WHERE `homeOwn`=%i AND `modelObj`=%d LIMIT 1", pData[playerid][pHouse],GetPVarInt(playerid, "modelaccept_ownob"));
		mysql_tquery(mysql_Handle, query);
		DeletePVar(playerid, "modelaccept_ownob");
		PlayerPlaySound(playerid, 40403, 0.0, 0.0, 0.0);
		SCM(playerid, 0xFF6640FF,"√è√∞√•√§√¨√•√≤ √°√ª√´ √≥√°√∞√†√≠ √®√ß √Ç√†√∏√•√£√Æ √§√Æ√¨√†");
	}
	case 766: {
			if(!response) return 1;
			if(BizEnter{playerid} == 255) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [015]");
			else if(BizInfo[BizEnter{playerid}][bProd] < 10) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√Æ√≤ √≤√Æ√¢√†√∞ √Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤ √¢ √¨√†√£√†√ß√®√≠√•");
			new gun_id, amount, price;
			switch(listitem)
			{
				case 0:
				{
					gun_id = 1;
					amount = 1;
					price = 750;
				}
				case 1:
				{
					gun_id = 5;
					amount = 1;
					price = 800;
				}
				case 2:
				{
					gun_id = 23;
					amount = 30;
					price = 6700;
				}
				case 3:
				{
					gun_id = 24;
					amount = 30;
					price = 7500;
				}
				case 4:
				{
					gun_id = 25;
					amount = 30;
					price = 8000;
				}
				case 5:
				{
					gun_id = 29;
					amount = 30;
					price = 12300;
				}
				case 6:
				{
					gun_id = 30;
					amount = 30;
					price = 13000;
				}
				case 7:
				{
					gun_id = 31;
					amount = 30;
					price = 17200;
				}
				case 8:
				{
					gun_id = 33;
					amount = 30;
					price = 21000;
				}
				case 9:
				{
					gun_id = 34;
					amount = 10;
					price = 56000;
				}
				case 10:
				{
					gun_id = 22;
					amount = 30;
					price = 9000;
				}
				case 11:
				{
					gun_id = 26;
					amount = 30;
					price = 28000;
				}
				case 12:
				{
					gun_id = 27;
					amount = 30;
					price = 16400;
				}
				case 13:
				{
					gun_id = 28;
					amount = 100;
					price = 34500;
				}
				case 14:
				{
					gun_id = 32;
					amount = 100;
					price = 42000;
				}
				case 15:
				{
					gun_id = 17;
					amount = 40;
					price = 27200;
				}
			}
			if(pData[playerid][pCash] < price) 
				return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢");
			new gtext[12];
			format(gtext, sizeof(gtext), "~r~-%d$", price);
        	GameTextForPlayer(playerid, gtext, 3000, 1);
			Hook_GivePlayerMoney(playerid, -price);
			BizInfo[BizEnter{playerid}][bPribil] += price;
			BizInfo[BizEnter{playerid}][bBank] += price;
			if(BizInfo[BizEnter{playerid}][bBank] > 10000000) BizInfo[BizEnter{playerid}][bBank] = 10000000;
			UpdateBusinessData(BizEnter{playerid}, "bPribil",BizInfo[BizEnter{playerid}][bPribil]);
			UpdateBusinessData(BizEnter{playerid}, "bBank",BizInfo[BizEnter{playerid}][bBank]);
			BizInfo[BizEnter{playerid}][bProd] -= 10;
			UpdateBusinessData(BizEnter{playerid}, "bProd",BizInfo[BizEnter{playerid}][bProd]);
			GivePlayerWeapon(playerid, gun_id, amount);
			PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
			SCM(playerid, COLOR_BLUE, "√Ç√ª √™√≥√Ø√®√´√® √Æ√∞√≥√¶√®√•");
		}
	case 959: {
			if(!response) return 1;
			switch(listitem) {
			case 0: {
					SetPlayerInterior(playerid, 0);
					SetPlayerPos(playerid,1075.9745,-1702.7065,13.5469);
					SetPlayerFacingAngle(playerid, 178.2976);
				}
			case 1: {
					SetPlayerInterior(playerid, 0);
					load_mode(playerid);
					SetPlayerPos(playerid,1110.7749,-1677.8087,13.6528);
					SetPlayerFacingAngle(playerid, 266.2759);
				}
			}
		}
	case 9191: {
			if(!response) return 1;
			SCMF(playerid, COLOR_YELLOW, "√Ç√ª √Ø√Æ√™√®√≠√≥√´√® √Æ√∞√£√†√≠√®√ß√†√∂√®√æ \"%s\"", FractionInfo[pData[playerid][pMember]][fName]);
			check_badgevalid(playerid);
			new oldmemberid = pData[playerid][pMember];
			SetPlayerSkin(playerid, pData[playerid][pChar]);
			pData[playerid][pMember] = 0;
			pData[playerid][pRank] = 0;
			pData[playerid][pLeader] = 0;
			pData[playerid][pJob] = 0;
			mysql_format(mysql_Handle, string, 164, "UPDATE `accounts` SET `pMember` = '0', `pRank` = '0', `pLeader` = '0', `pJob` = '0' WHERE `id` = %d", pData[playerid][pID]);
			mysql_tquery(mysql_Handle, string);
			format(string, 80, "%s √Ø√Æ√™√®√≠√≥√´ √Ç√†√∏√≥ √Æ√∞√£√†√≠√®√ß√†√∂√®√æ √Ø√Æ √±√Æ√°√±√≤√¢√•√≠√≠√Æ√¨√≥ √¶√•√´√†√≠√®√æ", pData[playerid][pName]);
			return SFFM(oldmemberid, COLOR_ERROR, string);
		}
	case 8101: {
			if(!response) return 1;
			if(!gAdvert[listitem][adBusy] || gAdvert[listitem][adCheked] || gAdvert[listitem][adCheking]) return ShowAdvertList(playerid);
			SetPVarInt(playerid,"editadvert",listitem);
			gAdvert[listitem][adCheking] = true;
			SetPVarInt(playerid,"adchecking_fix",listitem+1);
			new mes[550];
			format(mes,sizeof(mes),"{139BEC}√í√•√™√±√≤:"CWHITE" %s\n"CWHITE"[1] √é√§√Æ√°√∞√®√≤√º √°√•√ß √∞√•S√≠√™√≤√®√∞√Æ√¢√†√≠√®√ø\n[2] √é√§√Æ√°√∞√®√≤√º √± √∞√•S√≠√™√≤√®√∞√Æ√¢√†√≠√®√•√¨\n[3] √é√≤√™√´√Æ√≠√®√≤√º",gAdvert[listitem][adText]);
			SPD(playerid,8102,DIALOG_STYLE_TABLIST_HEADERS,gAdvert[listitem][adSender],mes, "Seleccione", "Cerrar");
		}
	case 8102: {
			new id = GetPVarInt(playerid,"editadvert");
			if(!response) {
				gAdvert[id][adCheking] = false;
				return ShowAdvertList(playerid);
			}
			switch(listitem) {
				case 0: {
						gAdvert[id][adTime] = gAdvertTime;
						gAdvertTime += 30;
						format(gAdvert[id][adCheker],400,"%s",pData[playerid][pName]);
						gAdvert[id][adCheking] = false;
						gAdvert[id][adCheked] = true;
						DeletePVar(playerid,"adchecking_fix");
						ShowAdvertList(playerid);
					}
				case 1: {
					new sstr[250];
					format(sstr,sizeof(sstr),""CLITEBLUE"%s\n\n"CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¢√ª√© √≤√•√™√±√≤ √§√´√ø √Ω√≤√Æ√£√Æ √Æ√°√∫√ø√¢√´√•√≠√®√ø √¢ √Ø√Æ√´√• √≠√®√¶√•:",gAdvert[id][adText]);
					SPD(playerid,8103,1, ""CMAIN"√ê√•S√≠√™√≤√®√∞√Æ√¢√†√≠√®√• √Æ√°√∫√ø√¢√´√•√≠√®√ø", sstr, "√é√§√Æ√°√∞√®√≤√º", "Siguiente");
				}
				case 2: SPD(playerid, 14521, DIALOG_STYLE_INPUT, ""CMAIN"√é√≤√™√´√Æ√≠√•√≠√®√• √Æ√°√∫√ø√¢√´√•√≠√®√ø", ""CWHITE"√Ç√¢√•√§√®√≤√• √Ø√∞√®√∑√®√≠√≥ √Æ√≤√™√´√Æ√≠√•√≠√®√ø √Æ√°√∫√ø√¢√´√•√≠√®√ø:", "√é√≤√™√´√Æ√≠√®√≤√º", "Siguiente");
				default: gAdvert[id][adCheking] = false, ShowAdvertList(playerid);
			}
		}
	case 8103: {
			new id = GetPVarInt(playerid,"editadvert");
			if(!response) {
				new mes[550];
				format(mes,sizeof(mes),"{139BEC}√í√•√™√±√≤:"CWHITE" %s\n"CWHITE"[1] √é√§√Æ√°√∞√®√≤√º √°√•√ß √∞√•S√≠√™√≤√®√∞√Æ√¢√†√≠√®√ø\n[2] √é√§√Æ√°√∞√®√≤√º √± √∞√•S√≠√™√≤√®√∞√Æ√¢√†√≠√®√•√¨\n[3] √é√≤√™√´√Æ√≠√®√≤√º",gAdvert[id][adText]);
				return SPD(playerid,8102,DIALOG_STYLE_TABLIST_HEADERS,gAdvert[id][adSender],mes, "Seleccione", "Cerrar");
			}
			if(!strlen(inputtext)) {
				new sstr[250];
				format(sstr,sizeof(sstr),""CLITEBLUE"%s\n\n"CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¢√ª√© √≤√•√™√±√≤ √§√´√ø √Ω√≤√Æ√£√Æ √Æ√°√∫√ø√¢√´√•√≠√®√ø √¢ √Ø√Æ√´√• √≠√®√¶√•:",gAdvert[id][adText]);
				return SPD(playerid,8103,1, ""CMAIN"√ê√•S√≠√™√≤√®√∞√Æ√¢√†√≠√®√• √Æ√°√∫√ø√¢√´√•√≠√®√ø", sstr, "√é√§√Æ√°√∞√®√≤√º", "Siguiente");
			}
			format(gAdvert[id][adText],100,"%s",inputtext);
			gAdvert[id][adTime] = gAdvertTime;
			gAdvertTime += 30;
			format(gAdvert[id][adCheker],24,"%s",pData[playerid][pName]);
			gAdvert[id][adCheking] = false;
			DeletePVar(playerid,"adchecking_fix");
			gAdvert[id][adCheked] = true;
			ShowAdvertList(playerid);
		}
	case 14521: {
			new id = GetPVarInt(playerid,"editadvert");
			if(!response) {
				new mes[550];
				format(mes,sizeof(mes),"{139BEC}√í√•√™√±√≤:"CWHITE" %s\n"CWHITE"[1] √é√§√Æ√°√∞√®√≤√º √°√•√ß √∞√•S√≠√™√≤√®√∞√Æ√¢√†√≠√®√ø\n[2] √é√§√Æ√°√∞√®√≤√º √± √∞√•S√≠√™√≤√®√∞√Æ√¢√†√≠√®√•√¨\n[3] √é√≤√™√´√Æ√≠√®√≤√º",gAdvert[id][adText]);
				return SPD(playerid,8102,DIALOG_STYLE_TABLIST_HEADERS,gAdvert[id][adSender],mes, "Seleccione", "Cerrar");
			}
			if(!strlen(inputtext)) return SPD(playerid, 14521, DIALOG_STYLE_INPUT, ""CMAIN"√é√≤√™√´√Æ√≠√•√≠√®√• √Æ√°√∫√ø√¢√´√•√≠√®√ø", ""CWHITE"√Ç√¢√•√§√®√≤√• √Ø√∞√®√∑√®√≠√≥ √Æ√≤√™√´√Æ√≠√•√≠√®√ø √Æ√°√∫√ø√¢√´√•√≠√®√ø:", "√é√≤√™√´√Æ√≠√®√≤√º", "Siguiente");
			format(string, 128, "%s %s[%d] √Æ√≤√™√´√Æ√≠√®√´ √Æ√°√∫√ø√¢√´√•√≠√®√• √± √≤√•√™√±√≤√Æ√¨ \"%s\". √è√∞√®√∑√®√≠√†: %s",new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1],pData[playerid][pName],playerid,gAdvert[id][adText],inputtext);
			SFFM(16, COLOR_ERROR, string);
			SCMF(GetPlayerID(gAdvert[id][adSender]), COLOR_ERROR, "%s %s[%d] √Æ√≤√™√´√Æ√≠√®√´ √Ç√†√∏√• √Æ√°√∫√ø√¢√´√•√≠√®√•. √è√∞√®√∑√®√≠√†: %s", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1],pData[playerid][pName], playerid, inputtext);
			strdel(gAdvert[id][adSender],0,24);
			gAdvert[id][adPhone] = 0;
			strdel(gAdvert[id][adText],0,100);
			strdel(gAdvert[id][adCheker],0,24);
			gAdvert[id][adBusy] = false;
			gAdvert[id][adCheked] = false;
			gAdvert[id][adCheking] = false;
			gAdvert[id][adTime] = 0;
			if(gAdvertCount > 0) gAdvertCount--;
			ShowAdvertList(playerid);
		}
	case 4425: {
			if(!response) return 1;
			if(!wanted_f) return 1;
			if(GetPlayerInterior(patrul_id[playerid]) != 0) return SCM(playerid, COLOR_GREY, "√ç√• √≥S√≠√´√Æ√±√º √Æ√Ø√∞√•√§√•√´√®√≤√º √¨√•√±√≤√Æ√Ø√Æ√´√Æ√¶√•√≠√®√• √Ø√∞√•√±√≤√≥√Ø√≠√®√™√†");
			if(pData[tick_wanted{listitem}][pWanted] < 2) return SCM(playerid, COLOR_LIGHTGREY, "√ì√∞√Æ√¢√•√≠√º √∞√Æ√ß√ª√±√™√† √®√£√∞√Æ√™√† √≠√• √§√Æ√´√¶√•√≠ √°√ª√≤√º √¨√•√≠√º√∏√• 2-√£√Æ");
			patrul_id[playerid] = tick_wanted{listitem};
			SCM(playerid, COLOR_MAIN, "√ë√®√±√≤√•√¨√† √Ø√Æ√®√±√™√† √Ø√∞√•√±√≤√≥√Ø√≠√®√™√† √ß√†√Ø√≥√π√•√≠√†");
			SCM(playerid, -1, "√ç√† √Ç√†√∏√•√¨ GPS √≥√±√≤√†√≠√Æ√¢√´√•√≠√Æ √•√£√Æ √¨√•√±√≤√Æ√Ø√Æ√´√Æ√¶√•√≠√®√•");
			SCM(playerid, -1, "√Ç √±√´√≥√∑√†√• √Ø√•√∞√•√§√¢√®√¶√•√≠√®√ø √Ø√∞√•√±√≤√≥√Ø√≠√®√™√† √≤√Æ√∑√™√† √≠√† GPS √°√≥√§√•√≤ √Æ√°√≠√Æ√¢√´√•√≠√†");
			SetPVarInt(playerid,"Patrul", 1);
			PlayerPlaySound(playerid, 4601, 0.0, 0.0, 0.0);
			wanted_f = false;
			SetPVarInt(playerid, "StartWanted", SetTimerEx("CopsWanted",2500,true,"ff",playerid,patrul_id[playerid]));
		}
	
	case 9588: {
			if(!response) return 1;
			pData[playerid][pMedCard] = 1;
			UpdatePlayerData(playerid, "pMedCard", pData[playerid][pMedCard]);
			Hook_GivePlayerMoney(playerid, -GetPVarInt(playerid, "myCenaCard"));
			Hook_GivePlayerMoney(GetPVarInt(playerid, "myID"), GetPVarInt(playerid, "myCenaCard"));
			SCMF(GetPVarInt(playerid, "myID"), -1, "√Ç√ª √Ø√Æ√´√≥√∑√®√´√® "CBLUE"%d$ "CWHITE"√ß√† √¢√ªS√≠√∑√≥ √¨√•√§√®√∂√®√≠√±√™√Æ√© √™√†√∞√≤√ª", GetPVarInt(playerid, "myCenaCard"));
			DeletePVar(playerid, "myID");
			DeletePVar(playerid, "myCenaCard");
			PlayerPlaySound(playerid, 17001, 0.0, 0.0, 0.0);
			return SCM(playerid, COLOR_LIGHTBLUE, "√Ç√ª √Ø√∞√®√≠√ø√´√® √Ø√∞√•√§√´√Æ√¶√•√≠√®√• √® √Ø√Æ√´√≥√∑√®√´√® √¨√•√§√®√∂√®√≠√±√™√≥√æ √™√†√∞√≤√≥");
		}
	case 27593: {
		if(!response) return 1;
		switch(listitem) {
			case 0: PlayStream(playerid, "http://ep256.hostingradio.ru:8052/europaplus256.mp3");
			case 1: PlayStream(playerid, "http://chanson.hostingradio.ru:8041/chanson256.mp3");
			case 2: PlayStream(playerid, "http://online-radiomelodia.tavrmedia.ua/RadioMelodia.m3u");
			case 3: PlayStream(playerid, "http://air2.radiorecord.ru:805/rr_320");
			case 4: PlayStream(playerid, "http://retroserver.streamr.ru:8043/retro256.mp3");
			case 5: PlayStream(playerid, "http://dorognoe.hostingradio.ru:8000/dorognoe");
			case 6: PlayStream(playerid, "http://nashe1.hostingradio.ru/nashe-256");
			case 7: PlayStream(playerid, "https://blackstarradio.hostingradio.ru:8024/blackstarradio128.mp3?radiostatistica=radiopotok");
			case 8: PlayStream(playerid, "http://icecast.vgtrk.cdnvideo.ru/kulturafm_mp3_192kbps");
			case 9: return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{FFCD00}√é√≠√´√†√©√≠ √∞√†√§√®√Æ", ""CWHITE"√Ç√ª √¨√Æ√¶√•√≤√• √°√ª√±√≤√∞√Æ √¢√™√´√æ√∑√†√≤√º √´√æ√°√®√¨√≥√æ √∞√†√§√®√Æ√±√≤√†√≠√∂√®√æ √± √Ø√Æ√¨√Æ√π√º√æ {00cc66}/play [√≠√Æ√¨√•√∞ √∞√†√§√®√Æ √®√ß √±√Ø√®√±√™√†]", "Cerrar", "");
		}
		SetPVarInt(playerid, "InternetRadioEnabled", true);
		SCM(playerid, COLOR_MAIN, "√é√≠√´√†√©√≠ √∞√†√§√®√Æ √¢√™√´√æ√∑√•√≠√Æ");
		if(GetPVarInt(playerid, "headphones_radio") != 2) {
			SetPVarInt(playerid, "headphones_radio", 1);
			new color_data;
			switch(random(5)) {
				case 0: color_data = -16777216;
				case 1: color_data = -16776961;
				case 2: color_data = -16711936;
				case 3: color_data = -65536;
				case 4: color_data = -256;
			}
			SetPlayerAttachedObject(playerid, 0, 19423, 2, 0.049999, 0.015000, 0.000000, 87.099998, -4.700028, -87.799995, 1.106000, 1.041000, 1.000000, color_data, color_data);
			SCM(playerid, COLOR_MAIN, "√ó√≤√Æ√°√ª √≥√°√∞√†√≤√º √≠√†√≥√∏√≠√®√™√®, √¢√¢√•√§√®√≤√• "CORANGE"/head");
		}
	}
	case 8237: {
			if(!response) return 1;
			if(!listitem) return callcmd::fixcar(playerid);
			if(pData[playerid][pCash] < 500) return SCM(playerid, COLOR_GREY, "√Ñ√´√ø √§√Æ√±√≤√†√¢√™√® √≤√∞√†√≠√±√Ø√Æ√∞√≤√† √™ √§√Æ√¨√≥ √≤√∞√•√°√≥√•√≤√±√ø 500$ √≠√†√´√®√∑√≠√ª√¨√®");
			switch(listitem) {
				case 1: {
					if(pData[playerid][pCar][0] == 0) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤ √†√¢√≤√Æ√¨√Æ√°√®√´√º ¬π1 √¢ √§√Æ√¨√•");
					SCM(playerid, COLOR_BLUE, "√Ñ√Æ√¨√†√∏√≠√®√© √†√¢√≤√Æ√¨√Æ√°√®√´√º ¬π1 √≥√±√Ø√•√∏√≠√Æ √Æ√≤√°√≥√™√±√®√∞√Æ√¢√†√≠");
				}
				case 2: {
					if(pData[playerid][pCar][1] == 0) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤ √†√¢√≤√Æ√¨√Æ√°√®√´√º ¬π2 √¢ √§√Æ√¨√•");
					SCM(playerid, COLOR_BLUE, "√Ñ√Æ√¨√†√∏√≠√®√© √†√¢√≤√Æ√¨√Æ√°√®√´√º ¬π2 √≥√±√Ø√•√∏√≠√Æ √Æ√≤√°√≥√™√±√®√∞√Æ√¢√†√≠");
				}
				case 3: {
					if(pData[playerid][pCar][2] == 0) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤ √†√¢√≤√Æ√¨√Æ√°√®√´√º ¬π3 √¢ √§√Æ√¨√•");
					SCM(playerid, COLOR_BLUE, "√Ñ√Æ√¨√†√∏√≠√®√© √†√¢√≤√Æ√¨√Æ√°√®√´√º ¬π3 √≥√±√Ø√•√∏√≠√Æ √Æ√≤√°√≥√™√±√®√∞√Æ√¢√†√≠");
				}
			}
			GameTextForPlayer(playerid, "~r~-500$", 3000, 1);
			Hook_GivePlayerMoney(playerid, -500);
			return LoadCarPlayer(playerid, listitem);
		}
	case 1228: {
			if(!response) return 1;
			switch(GetPVarInt(playerid,"ChangePass")) {
			case 0: {
					mysql_format(mysql_Handle, string, 128, "SELECT * FROM `admin` WHERE `name` = '%s' AND `password` = '%e'", pData[playerid][pName], inputtext);
					mysql_tquery(mysql_Handle, string, "changepass", "ds", playerid, inputtext);
				}
			case 1: {
					format(string, 128, "√Ç√ª √®√ß√¨√•√≠√®√´√® √±√¢√Æ√© √Ø√†√∞√Æ√´√º √≠√† "CMAIN"%s", inputtext);
					SCM(playerid, COLOR_YELLOW, string);
					mysql_format(mysql_Handle,string, 128, "UPDATE `admin` SET `password` = '%s' WHERE `name` = '%s' LIMIT 1", inputtext, pData[playerid][pName]);
					mysql_tquery(mysql_Handle, string);
				}
			}
			return 1;
		}
	case 1227: {
			if(!response) return 1;
			switch(GetPVarInt(playerid,"aLogin")) {
			case 1: {
					if(!strlen(inputtext)|| !strcmp(inputtext, "qwerty", true) || strlen(inputtext) < 6 || strlen(inputtext) > 15 || strfind(inputtext, "=", true) != -1) return SPD(playerid, 1227, DIALOG_STYLE_INPUT, ""CERROR"√Ä√§√¨√®√≠-√∞√•√£√®√±√≤√∞√†√∂√®√ø", ""CWHITE"√Ç√¢√•√§√®√≤√• √´√æ√°√Æ√© √Ø√†√∞√Æ√´√º √§√´√ø √∞√•√£√®√±√≤√∞√†√∂√®√® √†√§√¨√®√≠-√Ø√∞√†√¢\n\n"CLIGHTGREY"√è√†√∞√Æ√´√º √§√Æ√´√¶√•√≠ √±√Æ√±√≤√Æ√ø√≤√º √®√ß √´√†√≤√®√≠√±√™√®√µ √°√≥√™√¢ √® √∂√®√¥√∞\n√∞√†√ß√¨√•√∞√Æ√¨ √Æ√≤ 6 √§√Æ 15 √±√®√¨√¢√Æ√´√Æ√¢", "√Ç√Æ√©√≤√®", "Cerrar");
					SetPVarString(playerid,"inputtext",inputtext);
					format(string, 128, "SELECT * FROM `admin` WHERE `Name` = '%s'", pData[playerid][pName]);
					mysql_tquery(mysql_Handle, string,"alogin", "ds",playerid,pData[playerid][pName]);
				}
			case 0: {
					if(!strlen(inputtext)) return SPD(playerid, 1227, DIALOG_STYLE_INPUT, ""CERROR"√Ä√§√¨√®√≠-√†√¢√≤√Æ√∞√®√ß√†√∂√®√ø", ""CWHITE"√Ñ√´√ø √≤√Æ√£√Æ, √∑√≤√Æ√°√ª √¢√Æ√©√≤√® √™√†√™ √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞,\n√¢√¢√•√§√®√≤√• √Ø√†√∞√Æ√´√º √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√Ç√Æ√©√≤√®", "Cerrar");
					mysql_format(mysql_Handle,string, 245,"SELECT * FROM `admin` WHERE `name` = '%s' AND `password` = '%e'", pData[playerid][pName], inputtext);
					mysql_tquery(mysql_Handle, string,"password","ds", playerid, inputtext);
				}
			}
			return 1;
		}

	case 5321: {
			if(!response) return 1;
			new house = pData[playerid][pHouse];
			if(HouseInfo[house][hGunAmmo][0] < strval(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √Ç√†√∏√•√¨ √§√Æ√¨√• No √±√≤√Æ√´√º√™√Æ √Ø√†√≤√∞√Æ√≠√Æ√¢ √Ω√≤√Æ√£√Æ √Æ√∞√≥√¶√®√ø");
			if(strval(inputtext) < 1 || strval(inputtext) > 9999) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√´√º√ß√ø √°√∞√†√≤√º √¨√•√≠√º√∏√• 1 √® √°√Æ√´√º√∏√• 9999");
			GivePlayerWeapon(playerid, HouseInfo[house][hGun][0], strval(inputtext));
			HouseInfo[house][hGun][0] = 24; HouseInfo[house][hGunAmmo][0] -= strval(inputtext); callcmd::home(playerid);
			return SCMF(playerid, COLOR_BLUE, "√Ç√ª √¢√ß√ø√´√® √Æ√∞√≥√¶√®√• √± %i √Ø√†√≤√∞√Æ√≠√†√¨√®", strval(inputtext));
		}
	case 5322: {
			if(!response) return 1;
			new house = pData[playerid][pHouse];
			if(HouseInfo[house][hGunAmmo][1] < strval(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √Ç√†√∏√•√¨ √§√Æ√¨√• No √±√≤√Æ√´√º√™√Æ √Ø√†√≤√∞√Æ√≠√Æ√¢ √Ω√≤√Æ√£√Æ √Æ√∞√≥√¶√®√ø");
			if(strval(inputtext) < 1 || strval(inputtext) > 9999) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√´√º√ß√ø √°√∞√†√≤√º √¨√•√≠√º√∏√• 1 √® √°√Æ√´√º√∏√• 9999");
			GivePlayerWeapon(playerid, HouseInfo[house][hGun][1], strval(inputtext));
			HouseInfo[house][hGun][1] = 25; HouseInfo[house][hGunAmmo][1] -= strval(inputtext); callcmd::home(playerid);
			SCMF(playerid, COLOR_BLUE, "√Ç√ª √¢√ß√ø√´√® √Æ√∞√≥√¶√®√• √± %i √Ø√†√≤√∞√Æ√≠√†√¨√®", strval(inputtext));
			return 1;
		}
	case 5323: {
			if(!response) return 1;
			new house = pData[playerid][pHouse];
			if(HouseInfo[house][hGunAmmo][2] < strval(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √Ç√†√∏√•√¨ √§√Æ√¨√• No √±√≤√Æ√´√º√™√Æ √Ø√†√≤√∞√Æ√≠√Æ√¢ √Ω√≤√Æ√£√Æ √Æ√∞√≥√¶√®√ø");
			if(strval(inputtext) < 1 || strval(inputtext) > 9999) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√´√º√ß√ø √°√∞√†√≤√º √¨√•√≠√º√∏√• 1 √® √°√Æ√´√º√∏√• 9999");
			GivePlayerWeapon(playerid, HouseInfo[house][hGun][2], strval(inputtext));
			HouseInfo[house][hGun][2] = 30; HouseInfo[house][hGunAmmo][2] -= strval(inputtext); callcmd::home(playerid);
			SCMF(playerid, COLOR_BLUE, "√Ç√ª √¢√ß√ø√´√® √Æ√∞√≥√¶√®√• √± %i √Ø√†√≤√∞√Æ√≠√†√¨√®", strval(inputtext));
			return 1;
		}
	case 5325: {
			if(!response) return 1;
			new house = pData[playerid][pHouse];
			if(HouseInfo[house][hGunAmmo][3] < strval(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √Ç√†√∏√•√¨ √§√Æ√¨√• No √±√≤√Æ√´√º√™√Æ √Ø√†√≤√∞√Æ√≠√Æ√¢ √Ω√≤√Æ√£√Æ √Æ√∞√≥√¶√®√ø");
			if(strval(inputtext) < 1 || strval(inputtext) > 9999) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√´√º√ß√ø √°√∞√†√≤√º √¨√•√≠√º√∏√• 1 √® √°√Æ√´√º√∏√• 9999");
			GivePlayerWeapon(playerid, HouseInfo[house][hGun][3], strval(inputtext));
			HouseInfo[house][hGun][3] = 31; HouseInfo[house][hGunAmmo][3] -= strval(inputtext); callcmd::home(playerid);
			SCMF(playerid, COLOR_BLUE, "√Ç√ª √¢√ß√ø√´√® √Æ√∞√≥√¶√®√• √± %i √Ø√†√≤√∞√Æ√≠√†√¨√®", strval(inputtext));
			return 1;
		}
	case 5326: {
			if(!response) return 1;
			new house = pData[playerid][pHouse];
			if(HouseInfo[house][hGunAmmo][4] < strval(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √Ç√†√∏√•√¨ √§√Æ√¨√• No √±√≤√Æ√´√º√™√Æ √Ø√†√≤√∞√Æ√≠√Æ√¢ √Ω√≤√Æ√£√Æ √Æ√∞√≥√¶√®√ø");
			if(strval(inputtext) < 1 || strval(inputtext) > 9999) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√´√º√ß√ø √°√∞√†√≤√º √¨√•√≠√º√∏√• 1 √® √°√Æ√´√º√∏√• 9999");
			GivePlayerWeapon(playerid, HouseInfo[house][hGun][4], strval(inputtext));
			HouseInfo[house][hGun][4] = 29; HouseInfo[house][hGunAmmo][4] -= strval(inputtext); callcmd::home(playerid);
			SCMF(playerid, COLOR_BLUE, "√Ç√ª √¢√ß√ø√´√® √Æ√∞√≥√¶√®√• √± %i √Ø√†√≤√∞√Æ√≠√†√¨√®", strval(inputtext));
			return 1;
		}
	case 5320: {
			if(!response) return callcmd::home(playerid);
			new house=pData[playerid][pHouse];
			if(house == -1) return 1;
			switch(listitem) {
			case 0: {
					if(!HouseInfo[house][hGun][0]) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √Ç√†√∏√•√¨ √§√Æ√¨√• No √Ω√≤√Æ√£√Æ √Æ√∞√≥√¶√®√ø");
					if(HouseInfo[house][hGunAmmo][0] < 1) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √Ç√†√∏√•√¨ √§√Æ√¨√• No √Ω√≤√Æ√£√Æ √Æ√∞√≥√¶√®√ø");
					SPD(playerid, 5321, DIALOG_STYLE_INPUT, ""CMAIN"√Ñ√Æ√¨√†√∏√≠√®√© √±√•√©√¥", ""CWHITE"√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √Ø√†√≤√∞√Æ√≠√Æ√¢, √™√Æ√≤√Æ√∞√Æ√• √µ√Æ√≤√®√≤√• √¢√ß√ø√≤√º:", "√Ç√ß√ø√≤√º", "Cerrar");
				}
			case 1: {
					if(!HouseInfo[house][hGun][1]) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √Ç√†√∏√•√¨ √§√Æ√¨√• No √Ω√≤√Æ√£√Æ √Æ√∞√≥√¶√®√ø");
					if(HouseInfo[house][hGunAmmo][1] < 1) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √Ç√†√∏√•√¨ √§√Æ√¨√• No √Ω√≤√Æ√£√Æ √Æ√∞√≥√¶√®√ø");
					SPD(playerid, 5322, DIALOG_STYLE_INPUT, ""CMAIN"√Ñ√Æ√¨√†√∏√≠√®√© √±√•√©√¥", ""CWHITE"√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √Ø√†√≤√∞√Æ√≠√Æ√¢, √™√Æ√≤√Æ√∞√Æ√• √µ√Æ√≤√®√≤√• √¢√ß√ø√≤√º:", "√Ç√ß√ø√≤√º", "Cerrar");
				}
			case 2: {
					if(!HouseInfo[house][hGun][2]) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √Ç√†√∏√•√¨ √§√Æ√¨√• No √Ω√≤√Æ√£√Æ √Æ√∞√≥√¶√®√ø");
					if(HouseInfo[house][hGunAmmo][2] < 1) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √Ç√†√∏√•√¨ √§√Æ√¨√• No √Ω√≤√Æ√£√Æ √Æ√∞√≥√¶√®√ø");
					SPD(playerid, 5323, DIALOG_STYLE_INPUT, ""CMAIN"√Ñ√Æ√¨√†√∏√≠√®√© √±√•√©√¥", ""CWHITE"√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √Ø√†√≤√∞√Æ√≠√Æ√¢, √™√Æ√≤√Æ√∞√Æ√• √µ√Æ√≤√®√≤√• √¢√ß√ø√≤√º:", "√Ç√ß√ø√≤√º", "Cerrar");
				}
			case 3: {
					if(!HouseInfo[house][hGun][3]) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √Ç√†√∏√•√¨ √§√Æ√¨√• No √Ω√≤√Æ√£√Æ √Æ√∞√≥√¶√®√ø");
					if(HouseInfo[house][hGunAmmo][3] < 1) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √Ç√†√∏√•√¨ √§√Æ√¨√• No √Ω√≤√Æ√£√Æ √Æ√∞√≥√¶√®√ø");
					SPD(playerid, 5325, DIALOG_STYLE_INPUT, ""CMAIN"√Ñ√Æ√¨√†√∏√≠√®√© √±√•√©√¥", ""CWHITE"√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √Ø√†√≤√∞√Æ√≠√Æ√¢, √™√Æ√≤√Æ√∞√Æ√• √µ√Æ√≤√®√≤√• √¢√ß√ø√≤√º:", "√Ç√ß√ø√≤√º", "Cerrar");
				}
			case 4: {
					if(!HouseInfo[house][hGun][4]) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √Ç√†√∏√•√¨ √§√Æ√¨√• No √Ω√≤√Æ√£√Æ √Æ√∞√≥√¶√®√ø");
					if(HouseInfo[house][hGunAmmo][4] < 1) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √Ç√†√∏√•√¨ √§√Æ√¨√• No √Ω√≤√Æ√£√Æ √Æ√∞√≥√¶√®√ø");
					SPD(playerid, 5326, DIALOG_STYLE_INPUT, ""CMAIN"√Ñ√Æ√¨√†√∏√≠√®√© √±√•√©√¥", ""CWHITE"√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √Ø√†√≤√∞√Æ√≠√Æ√¢, √™√Æ√≤√Æ√∞√Æ√• √µ√Æ√≤√®√≤√• √¢√ß√ø√≤√º:", "√Ç√ß√ø√≤√º", "Cerrar");
				}
			case 5: {
					new Weap[8];
					new bool:status;
					GetPlayerWeaponData(playerid, 2, Weap[0], Weap[1]);
					GetPlayerWeaponData(playerid, 3, Weap[2], Weap[3]);
					GetPlayerWeaponData(playerid, 5, Weap[4], Weap[5]);
					GetPlayerWeaponData(playerid, 4, Weap[6], Weap[7]);
					if(Weap[0] !=0) {
						HouseInfo[house][hGun][0]  = Weap[0];
						HouseInfo[house][hGunAmmo][0]  += Weap[1];
						SCM(playerid, COLOR_BLUE, "√Ç√ª √Ø√Æ√´√Æ√¶√®√´√® Desert Eagle √¢ √±√•√©√¥");
						status=true;
					}
					if(Weap[2] == 25) {
						HouseInfo[house][hGun][1]  = Weap[2];
						HouseInfo[house][hGunAmmo][1] += Weap[3];
						SCM(playerid, COLOR_BLUE, "√Ç√ª √Ø√Æ√´√Æ√¶√®√´√® √§√∞√Æ√°√Æ√¢√®√™ √¢ √±√•√©√¥");
						status=true;
					}
					if(Weap[4] == 30) {
						HouseInfo[house][hGun][2]  = Weap[4];
						HouseInfo[house][hGunAmmo][2]  += Weap[5];
						SCM(playerid, COLOR_BLUE, "√Ç√ª √Ø√Æ√´√Æ√¶√®√´√® AK47 √¢ √±√•√©√¥");
						status=true;
					}
					if(Weap[4] == 31) {
						HouseInfo[house][hGun][3]  = Weap[4];
						HouseInfo[house][hGunAmmo][3]  += Weap[5];
						SCM(playerid, COLOR_BLUE, "√Ç√ª √Ø√Æ√´√Æ√¶√®√´√® M4 √¢ √±√•√©√¥");
						status=true;
					}
					if(Weap[6] ==29) {
						HouseInfo[house][hGun][4]  = Weap[6];
						HouseInfo[house][hGunAmmo][4]  += Weap[7];
						SCM(playerid, COLOR_BLUE, "√Ç√ª √Ø√Æ√´√Æ√¶√®√´√® MP5 √¢ √±√•√©√¥");
						status=true;
					}
					if(!status) 
						SCM(playerid,COLOR_GREY,"√ì √Ç√†√± No √± √±√Æ√°√Æ√© √Æ√∞√≥√¶√®√ø, √™√Æ√≤√Æ√∞√Æ√• √¨√Æ√¶√≠√Æ √Ø√Æ√´√Æ√¶√®√≤√º √¢ √±√•√©√¥");
					else {
						SaveHouse(house);
						ResetPlayerWeapons(playerid);
					}
					callcmd::home(playerid);
				}
			}
			return 1;
		}
	case 9654: {
		if(!response) return 1;
		if(pData[playerid][pCash] < 400) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √§√•√≠√•√£ √§√´√ø √´√•√∑√•√≠√®√ø");
		SetPlayerHealth(playerid, 100.0);
		PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
		SCM(playerid, COLOR_MAIN, "√ä√≥√∞√± √´√•√∑√•√≠√®√ø √≥√±√Ø√•√∏√≠√Æ √Ø√∞√Æ√©√§√•√≠ √ß√† "CYELLOW"400$");
		PlayerPlaySound(GetPVarInt(playerid, "heal_vrach_id"), 17000, 0.0, 0.0, 0.0);
		Hook_GivePlayerMoney(playerid, -400);
		GameTextForPlayer(playerid, "~r~-400$", 3000, 1);
	}
	case 711: {
			if(!response) return 1;
			new num_car = listitem, numoffer_car = GetPVarInt(playerid, "CarNum"), Float: fuel_incar;
			new Float: vpos_x, Float: vpos_y, Float: vpos_z, to_pl = GetPVarInt(playerid, "CarOffer");
			new cprice = GetPVarInt(playerid, "CarPrice");
			fuel_incar = VehInfo[house_carid[to_pl][numoffer_car]][vFuel];
			
			DeletePVar(to_pl, "cancel_act"); DeletePVar(to_pl, "cancel_act_id");
			SetPVarInt(playerid, "CarOffer", 999);
			DeletePVar(playerid, "CarPrice");
            SetPVarInt(playerid, "offer", 9999);
			DeletePVar(playerid, "CarNum");
			if(!IsPlayerConnected(to_pl)) 
				return SCM(playerid, COLOR_ERROR, "√è√∞√ÆS√≠√¢√•√∂ √¢√ª√∏√•√´ √®√ß √®√£√∞√ª. √ë√§√•√´√™√† √Æ√≤√¨√•√≠√•√≠√†");
			pData[playerid][pCar][num_car] = pData[to_pl][pCar][numoffer_car];
			pData[to_pl][pCar][numoffer_car] = 0;
			Hook_GivePlayerMoney(playerid, -cprice);
			Hook_GivePlayerMoney(to_pl, cprice);
			format(string,128, "√Ç√ª √Ø√∞√ÆS√≠√´√® %s √®√£√∞√Æ√™√≥ %s √ß√† %d$",VehicleNames[pData[playerid][pCar][num_car] - 400], pData[playerid][pName], cprice);
			SCM(to_pl, COLOR_BLUE, string);
			format(string,128, "√Ç√ª √™√≥√Ø√®√´√® %s √≥ %s √ß√† %d$",VehicleNames[pData[playerid][pCar][num_car] - 400], pData[to_pl][pName], cprice);
			SCM(playerid, COLOR_BLUE, string);
			PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
			PlayerPlaySound(to_pl, 17000, 0.0, 0.0, 0.0);
			pData[to_pl][t_wheel][numoffer_car] = 0;
			pData[playerid][Un_CarType][num_car] = pData[to_pl][Un_CarType][numoffer_car];
			pData[to_pl][Un_CarType][numoffer_car] = 0;
			pData[playerid][p_car_cash][num_car] = pData[to_pl][p_car_cash][numoffer_car];
			pData[to_pl][p_car_cash][numoffer_car] = 0;
			pData[to_pl][t_hydraulics][numoffer_car] = 0;
			pData[to_pl][t_neon_num][numoffer_car] = -1;
			pData[to_pl][t_stereo][numoffer_car] = 0;
			pData[to_pl][t_paintjob][numoffer_car] = -1;
			pData[playerid][t_color_1][num_car] = pData[to_pl][t_color_1][numoffer_car];
			pData[playerid][t_color_2][num_car] = pData[to_pl][t_color_2][numoffer_car];
			format(num_plate[playerid][num_car], 16, num_plate[to_pl][numoffer_car]);
			strmid(num_plate[to_pl][numoffer_car], "None", 0, strlen("None"), 255);
			pData[to_pl][t_color_1][numoffer_car] = -1;
			pData[to_pl][t_color_2][numoffer_car] = -1;

			new query[140];
			mysql_format(mysql_Handle, query, sizeof(query), "DELETE FROM `tuneobjects` WHERE `accountid`='%d' AND `numcar` = '%d'",
			pData[to_pl][pID],numoffer_car);
			mysql_tquery(mysql_Handle, query);

			switch(numoffer_car) {
				case 0: {
					strmid(p_car_charact_1[to_pl], "0, 0, 0, 0, 0, 0, 0", 0, 20, 255);
					UpdatePlayerDataEx(to_pl, "p_car_charact_1", "0, 0, 0, 0, 0, 0, 0");
					UpdatePlayerData(to_pl, "Un_CarType_1", 0);
					UpdatePlayerData(to_pl, "t_wheel_car_1", 0);
					UpdatePlayerData(to_pl, "t_hydraulics_car_1", 0);
					UpdatePlayerData(to_pl, "t_neon_num_1", -1);
					UpdatePlayerData(to_pl, "t_stereo_car_1", 0);
					UpdatePlayerData(to_pl, "t_paintjob_car_1", -1);
					UpdatePlayerData(to_pl, "t_color_1_1", -1);
					UpdatePlayerData(to_pl, "t_color_2_1", -1);
					UpdatePlayerData(to_pl, "p_car_cash_1", 0);
					UpdatePlayerData(to_pl, "pCar", 0);
					UpdatePlayerDataEx(to_pl, "num_plate_1", "None");
				}
				case 1: {
					strmid(p_car_charact_3[to_pl], "0, 0, 0, 0, 0, 0, 0", 0, 20, 255);
					UpdatePlayerDataEx(to_pl, "p_car_charact_2", "0, 0, 0, 0, 0, 0, 0");
					UpdatePlayerData(to_pl, "Un_CarType_2", 0);
					UpdatePlayerData(to_pl, "t_wheel_car_2", 0);
					UpdatePlayerData(to_pl, "t_hydraulics_car_2", 0);
					UpdatePlayerData(to_pl, "t_stereo_car_2", 0);
					UpdatePlayerData(to_pl, "t_paintjob_car_2", -1);
					UpdatePlayerData(to_pl, "t_color_1_2", -1);
					UpdatePlayerData(to_pl, "t_color_2_2", -1);
					UpdatePlayerData(to_pl, "t_neon_num_2", -1);
					UpdatePlayerData(to_pl, "p_car_cash_2", 0);
					UpdatePlayerData(to_pl, "pCar2", 0);
					UpdatePlayerDataEx(to_pl, "num_plate_2", "None");
				}
				case 2: {
					strmid(p_car_charact_3[to_pl], "0, 0, 0, 0, 0, 0, 0", 0, 20, 255);
					UpdatePlayerDataEx(to_pl, "p_car_charact_3", "0, 0, 0, 0, 0, 0, 0");
					UpdatePlayerData(to_pl, "Un_CarType_3", 0);
					UpdatePlayerData(to_pl, "t_wheel_car_3", 0);
					UpdatePlayerData(to_pl, "t_hydraulics_car_3", 0);
					UpdatePlayerData(to_pl, "t_stereo_car_3", 0);
					UpdatePlayerData(to_pl, "t_neon_num_3", -1);
					UpdatePlayerData(to_pl, "t_paintjob_car_3", -1);
					UpdatePlayerData(to_pl, "t_color_1_3", -1);
					UpdatePlayerData(to_pl, "t_color_2_3", -1);
					UpdatePlayerData(to_pl, "p_car_cash_3", 0);
					UpdatePlayerData(to_pl, "pCar3", 0);
					UpdatePlayerDataEx(to_pl, "num_plate_3", "None");
				}
			}
			switch(num_car) {
				case 0: {
					UpdatePlayerData(playerid, "pCar", pData[playerid][pCar][num_car]);
					UpdatePlayerData(playerid, "Un_CarType_1", pData[playerid][Un_CarType][num_car]);
					UpdatePlayerDataEx(playerid, "num_plate_1", num_plate[playerid][num_car]);
					UpdatePlayerData(playerid, "t_color_1_1", pData[playerid][t_color_1][num_car]);
					UpdatePlayerData(playerid, "t_color_2_1", pData[playerid][t_color_2][num_car]);
					UpdatePlayerData(playerid, "p_car_cash_1", pData[playerid][p_car_cash][num_car]);
				}
				case 1: {
					UpdatePlayerData(playerid, "pCar2", pData[playerid][pCar][num_car]);
					UpdatePlayerData(playerid, "Un_CarType_2", pData[playerid][Un_CarType][num_car]);
					UpdatePlayerDataEx(playerid, "num_plate_2", num_plate[playerid][num_car]);
					UpdatePlayerData(playerid, "t_color_1_2", pData[playerid][t_color_1][num_car]);
					UpdatePlayerData(playerid, "t_color_2_2", pData[playerid][t_color_2][num_car]);
					UpdatePlayerData(playerid, "p_car_cash_2", pData[playerid][p_car_cash][num_car]);
				}
				case 2: {
					UpdatePlayerData(playerid, "pCar3", pData[playerid][pCar][num_car]);
					UpdatePlayerData(playerid, "Un_CarType_3", pData[playerid][Un_CarType][num_car]);
					UpdatePlayerDataEx(playerid, "num_plate_3", num_plate[playerid][num_car]);
					UpdatePlayerData(playerid, "t_color_1_3", pData[playerid][t_color_1][num_car]);
					UpdatePlayerData(playerid, "t_color_2_3", pData[playerid][t_color_2][num_car]);
					UpdatePlayerData(playerid, "p_car_cash_3", pData[playerid][p_car_cash][num_car]);
				}
			}
			if(house_carid[playerid][num_car] != 0) {
				DestroyVehicle(house_carid[playerid][num_car]);
				house_carid[playerid][num_car] = 0;
			}
			pData[playerid][FuelCar][num_car] = floatround(fuel_incar, floatround_ceil);
			LoadCarPlayer(playerid, num_car + 1);
			new Float: zangle;
			new car_id = house_carid[to_pl][numoffer_car];
			GetVehicleZAngle(car_id, zangle);
			GetVehiclePos(car_id, vpos_x, vpos_y, vpos_z);
			if(car_id != 0) {
				DestroyVehicle(car_id);
				house_carid[to_pl][numoffer_car] = 0;
			}
			SetVehiclePos(house_carid[playerid][num_car], vpos_x, vpos_y, vpos_z);
			SetVehicleZAngle(house_carid[playerid][num_car], zangle);
			SetVehicleVirtualWorld(house_carid[playerid][num_car], GetPlayerVirtualWorld(playerid));
			LinkVehicleToInterior(house_carid[playerid][num_car], GetPlayerInterior(playerid));
		}
		case 7168: {
			if(!response) {
				if(IsAMafia(playerid)) mafia_menu(playerid);
				else GangMenu(playerid);
				return 1;
			}
			new put = strval(inputtext), unput = pData[playerid][pMetal] + strval(inputtext);
			if(put < 1 || !strlen(inputtext)) return SPD(playerid,7168, DIALOG_STYLE_INPUT, ""CMAIN"√Ç√ß√ø√≤√º √¨√•√≤√†√´√´", ""CWHITE"√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √™√®√´√Æ√£√∞√†√¨√¨ √¨√•√≤√†√´√´√†, √™√Æ√≤√Æ√∞√Æ√•\n√µ√Æ√≤√®√≤√• √¢√ß√ø√≤√º √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
			for(new i = strlen(inputtext) - 1; i != -1; i --) {
				switch(inputtext[i]) {
					case '0'..'9': continue;
					default: return SPD(playerid,7168, DIALOG_STYLE_INPUT, ""CMAIN"√Ç√ß√ø√≤√º √¨√•√≤√†√´√´", ""CWHITE"√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √™√®√´√Æ√£√∞√†√¨√¨ √¨√•√≤√†√´√´√†, √™√Æ√≤√Æ√∞√Æ√•\n√µ√Æ√≤√®√≤√• √¢√ß√ø√≤√º √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
				}
			}
			if(org_materials[pData[playerid][pMember]] < put) return SCM(playerid, COLOR_LIGHTGREY, "√ç√† √±√™√´√†√§√• √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √¨√•√≤√†√´√´√†"), SPD(playerid,7168, DIALOG_STYLE_INPUT, ""CMAIN"√Ç√ß√ø√≤√º √¨√•√≤√†√´√´", ""CWHITE"√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √™√®√´√Æ√£√∞√†√¨√¨ √¨√•√≤√†√´√´√†, √™√Æ√≤√Æ√∞√Æ√•\n√µ√Æ√≤√®√≤√• √¢√ß√ø√≤√º √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
			if(!pData[playerid][p_premium] && unput > 20) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √°√∞√†√≤√º √°√Æ√´√º√∏√• 20 √™√£ √¨√•√≤√†√´√´√†");
			else if(pData[playerid][p_premium] && unput > 40) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √°√∞√†√≤√º √°√Æ√´√º√∏√• 40 √™√£ √¨√•√≤√†√´√´√†");
			org_materials[pData[playerid][pMember]] -= put;
			pData[playerid][pMetal] += put;
			UpdatePlayerData(playerid,"pMats",pData[playerid][pMetal]);
			string[0] = EOS;
			if(pData[playerid][pSex] == 1) format(string, 128, "%s %s[%d] √¢√ß√ø√´ √±√Æ √±√™√´√†S√≠ "CBLUE"%i √™√£"CMAIN" √¨√•√≤√†√´√´√†",new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1],pData[playerid][pName], playerid, put);
			else format(string, 128, "%s %s[%d] √¢√ß√ø√´√† √±√Æ √±√™√´√†S√≠ "CBLUE"%i √™√£"CMAIN" √¨√•√≤√†√´√´√†",new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1],pData[playerid][pName], playerid, put);
			SFFM(pData[playerid][pMember], COLOR_MAIN, string);
			UpdateStoreGang(pData[playerid][pMember]);
			update_mafia_store(pData[playerid][pMember]);
			format(string, 144, "UPDATE `materials_org` SET `count_materials` = %d WHERE `id` = %d", org_materials[pData[playerid][pMember]],pData[playerid][pMember]);
			return mysql_tquery(mysql_Handle,string);
		}
		case 7169: {
			if(!response) {
				if(IsAMafia(playerid)) mafia_menu(playerid);
				else GangMenu(playerid);
				return 1;
			}
			new put = strval(inputtext);
			if(put < 1 || !strlen(inputtext)) return SPD(playerid,7169, DIALOG_STYLE_INPUT, ""CMAIN"√è√Æ√´√Æ√¶√®√≤√º √¨√•√≤√†√´√´", ""CWHITE"√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √™√®√´√Æ√£√∞√†√¨√¨ √¨√•√≤√†√´√´√†, √™√Æ√≤√Æ√∞√Æ√•\n√µ√Æ√≤√®√≤√• √Ø√Æ√´√Æ√¶√®√≤√º √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
			for(new i = strlen(inputtext) - 1; i != -1; i --) {
				switch(inputtext[i]) {
					case '0'..'9': continue;
					default: return SPD(playerid,7169, DIALOG_STYLE_INPUT, ""CMAIN"√è√Æ√´√Æ√¶√®√≤√º √¨√•√≤√†√´√´", ""CWHITE"√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √™√®√´√Æ√£√∞√†√¨√¨ √¨√•√≤√†√´√´√†, √™√Æ√≤√Æ√∞√Æ√•\n√µ√Æ√≤√®√≤√• √Ø√Æ√´√Æ√¶√®√≤√º √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
				}
			}
			if(pData[playerid][pMetal] < put) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √¨√•√≤√†√´√´√† √± √±√Æ√°√Æ√©"), SPD(playerid,7169, DIALOG_STYLE_INPUT, ""CMAIN"√è√Æ√´√Æ√¶√®√≤√º √¨√•√≤√†√´√´", ""CWHITE"√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √™√®√´√Æ√£√∞√†√¨√¨ √¨√•√≤√†√´√´√†, √™√Æ√≤√Æ√∞√Æ√•\n√µ√Æ√≤√®√≤√• √Ø√Æ√´√Æ√¶√®√≤√º √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
			if((org_materials[pData[playerid][pMember]] + put) > 10000) return SCM(playerid, COLOR_GREY, "√ë√™√´√†√§ √¨√•√≤√†√´√´√† √°√†√≠√§√ª √ß√†√Ø√Æ√´√≠√•√≠");
			org_materials[pData[playerid][pMember]] +=put;
			pData[playerid][pMetal] -=put;
			UpdatePlayerData(playerid,"pMats",pData[playerid][pMetal]);
			string[0] = EOS;
			if(pData[playerid][pSex] == 1) format(string, 128, "%s %s[%d] √Ø√Æ√´√Æ√¶√®√´ √≠√† √±√™√´√†√§ "CBLUE"%i √™√£"CMAIN" √¨√•√≤√†√´√´√†",new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1],pData[playerid][pName], playerid, put);
			else format(string, 128, "%s %s[%d] √Ø√Æ√´√Æ√¶√®√´√† √≠√† √±√™√´√†√§ "CBLUE"%i √™√£"CMAIN" √¨√•√≤√†√´√´√†",new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1],pData[playerid][pName], playerid, put);
			SFFM(pData[playerid][pMember], COLOR_MAIN, string);
			if(IsAMafia(playerid)) update_mafia_store(pData[playerid][pMember]);
			else UpdateStoreGang(pData[playerid][pMember]);
			format(string, 144, "UPDATE `materials_org` SET `count_materials` = %d WHERE `id` = %d", org_materials[pData[playerid][pMember]],pData[playerid][pMember]);
			return mysql_tquery(mysql_Handle,string);
		}
		case 8484: {
			if(!response) {
				if(IsAMafia(playerid)) mafia_menu(playerid);
				else GangMenu(playerid);
				return 1;
			}
			new put = strval(inputtext);
			if(put < 1 || !strlen(inputtext)) return SPD(playerid,8484, DIALOG_STYLE_INPUT, ""CMAIN"√è√Æ√´√Æ√¶√®√≤√º √Ø√†√≤√∞√Æ√≠√ª", ""CWHITE"√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √Ø√†√≤√∞√Æ√≠√Æ√¢, √™√Æ√≤√Æ√∞√Æ√•\n√µ√Æ√≤√®√≤√• √Ø√Æ√´√Æ√¶√®√≤√º √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
			for(new i = strlen(inputtext) - 1; i != -1; i --) {
				switch(inputtext[i]) {
					case '0'..'9': continue;
					default: return SPD(playerid,8484, DIALOG_STYLE_INPUT, ""CMAIN"√è√Æ√´√Æ√¶√®√≤√º √Ø√†√≤√∞√Æ√≠√ª", ""CWHITE"√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √Ø√†√≤√∞√Æ√≠√Æ√¢, √™√Æ√≤√Æ√∞√Æ√•\n√µ√Æ√≤√®√≤√• √Ø√Æ√´√Æ√¶√®√≤√º √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
				}
			}
			if(pData[playerid][pPatr] < put) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √Ø√†√≤√∞√Æ√≠√Æ√¢ √± √±√Æ√°√Æ√©"), SPD(playerid,8484, DIALOG_STYLE_INPUT, ""CMAIN"√è√Æ√´√Æ√¶√®√≤√º √Ø√†√≤√∞√Æ√≠√ª", ""CWHITE"√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √Ø√†√≤√∞√Æ√≠√Æ√¢, √™√Æ√≤√Æ√∞√Æ√•\n√µ√Æ√≤√®√≤√• √Ø√Æ√´√Æ√¶√®√≤√º √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
			if((org_ammo[pData[playerid][pMember]] + put) > 50000) return SCM(playerid, COLOR_GREY, "√ë√™√´√†√§ √Ø√†√≤√∞√Æ√≠√Æ√¢ √°√†√≠√§√ª √ß√†√Ø√Æ√´√≠√•√≠");
			org_ammo[pData[playerid][pMember]] +=put;
			pData[playerid][pPatr] -=put;
			UpdatePlayerData(playerid,"pPatr",pData[playerid][pPatr]);
			string[0] = EOS;
			if(pData[playerid][pSex] == 1) format(string, 128, "%s %s[%d] √Ø√Æ√´√Æ√¶√®√´ √≠√† √±√™√´√†√§ "CBLUE"%i √∏√≤"CMAIN" √Ø√†√≤√∞√Æ√≠√Æ√¢",new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1],pData[playerid][pName], playerid, put);
			else format(string, 128, "%s %s[%d] √Ø√Æ√´√Æ√¶√®√´√† √≠√† √±√™√´√†√§ "CBLUE"%i √∏√≤"CMAIN" √Ø√†√≤√∞√Æ√≠√Æ√¢",new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1],pData[playerid][pName], playerid, put);
			SFFM(pData[playerid][pMember], COLOR_MAIN, string);
			if(IsAMafia(playerid)) update_mafia_store(pData[playerid][pMember]);
			else UpdateStoreGang(pData[playerid][pMember]);
			format(string, 144, "UPDATE `materials_org` SET `count_ammo` = %d WHERE `id` = %d", org_ammo[pData[playerid][pMember]],pData[playerid][pMember]);
			return mysql_tquery(mysql_Handle,string);
		}
		case 8485: {
			if(!response) {
				if(IsAMafia(playerid)) mafia_menu(playerid);
				else GangMenu(playerid);
				return 1;
			}
			new put = strval(inputtext), unput = pData[playerid][pPatr] + strval(inputtext);
			if(put < 1 || !strlen(inputtext)) return SPD(playerid,8485, DIALOG_STYLE_INPUT, ""CMAIN"√Ç√ß√ø√≤√º √Ø√†√≤√∞√Æ√≠√ª", ""CWHITE"√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √Ø√†√≤√∞√Æ√≠√Æ√¢, √™√Æ√≤√Æ√∞√Æ√•\n√µ√Æ√≤√®√≤√• √¢√ß√ø√≤√º √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
			for(new i = strlen(inputtext) - 1; i != -1; i --) {
				switch(inputtext[i]) {
					case '0'..'9': continue;
					default: return SPD(playerid,8485, DIALOG_STYLE_INPUT, ""CMAIN"√Ç√ß√ø√≤√º √Ø√†√≤√∞√Æ√≠√ª", ""CWHITE"√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √Ø√†√≤√∞√Æ√≠√Æ√¢, √™√Æ√≤√Æ√∞√Æ√•\n√µ√Æ√≤√®√≤√• √¢√ß√ø√≤√º √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
				}
			}
			if(org_ammo[pData[playerid][pMember]] < put) return SCM(playerid, COLOR_LIGHTGREY, "√ç√† √±√™√´√†√§√• √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √Ø√†√≤√∞√Æ√≠√Æ√¢"), SPD(playerid,8485, DIALOG_STYLE_INPUT, ""CMAIN"√Ç√ß√ø√≤√º √Ø√†√≤√∞√Æ√≠√ª", ""CWHITE"√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √Ø√†√≤√∞√Æ√≠√Æ√¢, √™√Æ√≤√Æ√∞√Æ√•\n√µ√Æ√≤√®√≤√• √¢√ß√ø√≤√º √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
			if(!pData[playerid][p_premium] && unput > 300) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √≥√≠√•√±√≤√® √± √±√Æ√°√Æ√© √±√≤√Æ√´√º√™√Æ √Ø√†√≤√∞√Æ√≠√Æ√¢");
			else if(pData[playerid][p_premium] && unput > 600) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √≥√≠√•√±√≤√® √± √±√Æ√°√Æ√© √±√≤√Æ√´√º√™√Æ √Ø√†√≤√∞√Æ√≠√Æ√¢");
			org_ammo[pData[playerid][pMember]] -= put;
			pData[playerid][pPatr] += put;
			UpdatePlayerData(playerid,"pPatr",pData[playerid][pPatr]);
			string[0] = EOS;
			if(pData[playerid][pSex] == 1) format(string, 128, "%s %s[%d] √¢√ß√ø√´ √±√Æ √±√™√´√†S√≠ "CBLUE"%i √∏√≤"CMAIN" √Ø√†√≤√∞√Æ√≠√Æ√¢",new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1],pData[playerid][pName], playerid, put);
			else format(string, 128, "%s %s[%d] √¢√ß√ø√´√† √±√Æ √±√™√´√†S√≠ "CBLUE"%i √∏√≤"CMAIN" √Ø√†√≤√∞√Æ√≠√Æ√¢",new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1],pData[playerid][pName], playerid, put);
			SFFM(pData[playerid][pMember], COLOR_MAIN, string);
			if(IsAMafia(playerid)) update_mafia_store(pData[playerid][pMember]);
			else UpdateStoreGang(pData[playerid][pMember]);
			format(string, 144, "UPDATE `materials_org` SET `count_ammo` = %d WHERE `id` = %d", org_ammo[pData[playerid][pMember]],pData[playerid][pMember]);
			return mysql_tquery(mysql_Handle,string);
		}
		case 9395: {
			if(!response) {
				if(IsAMafia(playerid)) mafia_menu(playerid);
				else GangMenu(playerid);
				return 1;
			}
			new put = strval(inputtext);
			if(put < 1 || !strlen(inputtext)) return SPD(playerid,9395, DIALOG_STYLE_INPUT, ""CMAIN"√è√Æ√´√Æ√¶√®√≤√º √≠√†√∞√™√Æ√≤√®√™√®", ""CWHITE"√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √£√∞√†√¨√¨ √≠√†√∞√™√Æ√≤√®√™√Æ√¢, √™√Æ√≤√Æ√∞√Æ√•\n√µ√Æ√≤√®√≤√• √Ø√Æ√´√Æ√¶√®√≤√º √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
			for(new i = strlen(inputtext) - 1; i != -1; i --) {
				switch(inputtext[i]) {
					case '0'..'9': continue;
					default: return SPD(playerid,9395, DIALOG_STYLE_INPUT, ""CMAIN"√è√Æ√´√Æ√¶√®√≤√º √≠√†√∞√™√Æ√≤√®√™√®", ""CWHITE"√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √£√∞√†√¨√¨ √≠√†√∞√™√Æ√≤√®√™√Æ√¢, √™√Æ√≤√Æ√∞√Æ√•\n√µ√Æ√≤√®√≤√• √Ø√Æ√´√Æ√¶√®√≤√º √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
				}
			}
			if(pData[playerid][pDrugs] < put) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √±√≤√Æ√´√º√™√Æ √≠√†√∞√™√Æ√≤√®√™√Æ√¢ √± √±√Æ√°√Æ√©"), SPD(playerid,9395, DIALOG_STYLE_INPUT, ""CMAIN"√è√Æ√´√Æ√¶√®√≤√º √≠√†√∞√™√Æ√≤√®√™√®", ""CWHITE"√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √£√∞√†√¨√¨ √≠√†√∞√™√Æ√≤√®√™√Æ√¢, √™√Æ√≤√Æ√∞√Æ√•\n√µ√Æ√≤√®√≤√• √Ø√Æ√´√Æ√¶√®√≤√º √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
			if((org_drugs[pData[playerid][pMember]] + put) > 25000) return SCM(playerid, COLOR_GREY, "√ë√™√´√†√§ √≠√†√∞√™√Æ√≤√®√™√Æ√¢ √°√†√≠√§√ª √ß√†√Ø√Æ√´√≠√•√≠");
			org_drugs[pData[playerid][pMember]] +=put;
			pData[playerid][pDrugs] -=put;
			UpdatePlayerData(playerid,"pDrugs",pData[playerid][pDrugs]);
			string[0] = EOS;
			if(pData[playerid][pSex] == 1) format(string, 128, "%s %s[%d] √Ø√Æ√´√Æ√¶√®√´ √≠√† √±√™√´√†√§ "CBLUE"%i √£√∞"CMAIN" √≠√†√∞√™√Æ√≤√®√™√Æ√¢",new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1],pData[playerid][pName], playerid, put);
			else format(string, 128, "%s %s[%d] √Ø√Æ√´√Æ√¶√®√´√† √≠√† √±√™√´√†√§ "CBLUE"%i √£√∞"CMAIN" √≠√†√∞√™√Æ√≤√®√™√Æ√¢",new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1],pData[playerid][pName], playerid, put);
			SFFM(pData[playerid][pMember], COLOR_MAIN, string);
			if(IsAMafia(playerid)) update_mafia_store(pData[playerid][pMember]);
			else UpdateStoreGang(pData[playerid][pMember]);
			format(string, 144, "UPDATE `materials_org` SET `count_drugs` = %d WHERE `id` = %d", org_drugs[pData[playerid][pMember]],pData[playerid][pMember]);
			return mysql_tquery(mysql_Handle,string);
		}
		case 816: {
			if(!response) return 1;
			switch(listitem) {
				case 1: if(pData[playerid][pHouse] == -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √§√Æ√¨√†");
				case 2: if(!pData[playerid][pMember]) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √±√Æ√±√≤√Æ√®√≤√• √¢ √Æ√∞√£√†√≠√®√ß√†√∂√®√®");
				case 3: if(pData[playerid][pHotel] == -1) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √Ø√∞√Æ√¶√®√¢√†√•√≤√• √¢ √Æ√≤√•√´√•");
				case 4: if(pData[playerid][pFlat] == -1 && pData[playerid][p_rent_flat] == -1) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √ø√¢√´√ø√•√≤√•√±√º √¢√´√†√§√•√´√º√∂√•√¨ √®√´√® √†√∞√•√≠S√≠√≤√Æ√∞√Æ√¨ √™√¢√†√∞√≤√®√∞√ª");
			}
			pData[playerid][pSpawn] = listitem;
			UpdatePlayerData(playerid, "pSpawn", listitem);
			SCM(playerid, COLOR_BLUE, "√å√•√±√≤√Æ √¢√Æ√ß√∞√Æ√¶√§√•√≠√®√ø √≥√±√Ø√•√∏√≠√Æ √®√ß√¨√•√≠√•√≠√Æ");
		}
		case 9495: {
			if(!response) {
				if(IsAMafia(playerid)) mafia_menu(playerid);
				else GangMenu(playerid);
				return 1;
			}
			new put = strval(inputtext), unput = pData[playerid][pDrugs] + strval(inputtext);
			if(put < 1 || !strlen(inputtext)) return SPD(playerid,9495, DIALOG_STYLE_INPUT, ""CMAIN"√Ç√ß√ø√≤√º √≠√†√∞√™√Æ√≤√®√™√®", ""CWHITE"√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √£√∞√†√¨√¨ √≠√†√∞√™√Æ√≤√®√™√Æ√¢, √™√Æ√≤√Æ√∞√Æ√•\n√µ√Æ√≤√®√≤√• √¢√ß√ø√≤√º √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
			for(new i = strlen(inputtext) - 1; i != -1; i --) {
				switch(inputtext[i]) {
					case '0'..'9': continue;
					default: return SPD(playerid,9495, DIALOG_STYLE_INPUT, ""CMAIN"√Ç√ß√ø√≤√º √≠√†√∞√™√Æ√≤√®√™√®", ""CWHITE"√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √£√∞√†√¨√¨ √≠√†√∞√™√Æ√≤√®√™√Æ√¢, √™√Æ√≤√Æ√∞√Æ√•\n√µ√Æ√≤√®√≤√• √¢√ß√ø√≤√º √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
				}
			}
			if(org_drugs[pData[playerid][pMember]] < put) return SCM(playerid, COLOR_LIGHTGREY, "√ç√† √±√™√´√†√§√• √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √≠√†√∞√™√Æ√≤√®√™√Æ√¢"), SPD(playerid,9495, DIALOG_STYLE_INPUT, ""CMAIN"√Ç√ß√ø√≤√º √≠√†√∞√™√Æ√≤√®√™√®", ""CWHITE"√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √£√∞√†√¨√¨ √≠√†√∞√™√Æ√≤√®√™√Æ√¢, √™√Æ√≤√Æ√∞√Æ√•\n√µ√Æ√≤√®√≤√• √¢√ß√ø√≤√º √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
			if(!pData[playerid][p_premium] && unput > 1000) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √≥√≠√•√±√≤√® √± √±√Æ√°√Æ√© √±√≤√Æ√´√º√™√Æ √≠√†√∞√™√Æ√≤√®√™√Æ√¢");
			else if(pData[playerid][p_premium] && unput > 2000) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √≥√≠√•√±√≤√® √± √±√Æ√°√Æ√© √±√≤√Æ√´√º√™√Æ √≠√†√∞√™√Æ√≤√®√™√Æ√¢");
			org_drugs[pData[playerid][pMember]] -= put;
			pData[playerid][pDrugs] += put;
			UpdatePlayerData(playerid,"pDrugs",pData[playerid][pDrugs]);
			string[0] = EOS;
			if(pData[playerid][pSex] == 1) format(string, 128, "%s %s[%d] √¢√ß√ø√´ √±√Æ √±√™√´√†S√≠ "CBLUE"%i √£√∞"CMAIN" √≠√†√∞√™√Æ√≤√®√™√Æ√¢",new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1],pData[playerid][pName], playerid, put);
			else format(string, 128, "%s %s[%d] √¢√ß√ø√´√† √±√Æ √±√™√´√†S√≠ "CBLUE"%i √£√∞"CMAIN" √≠√†√∞√™√Æ√≤√®√™√Æ√¢",new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1],pData[playerid][pName], playerid, put);
			SFFM(pData[playerid][pMember], COLOR_MAIN, string);
			if(IsAMafia(playerid)) update_mafia_store(pData[playerid][pMember]);
			else UpdateStoreGang(pData[playerid][pMember]);
			format(string, 144, "UPDATE `materials_org` SET `count_drugs` = %d WHERE `id` = %d", org_drugs[pData[playerid][pMember]],pData[playerid][pMember]);
			return mysql_tquery(mysql_Handle,string);
		}
		case 7171: {
			if(!response) return 1;
			switch(listitem) {
				case 0: SPD(playerid,8484, DIALOG_STYLE_INPUT, ""CMAIN"√è√Æ√´√Æ√¶√®√≤√º √Ø√†√≤√∞√Æ√≠√ª", ""CWHITE"√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √Ø√†√≤√∞√Æ√≠√Æ√¢, √™√Æ√≤√Æ√∞√Æ√•\n√µ√Æ√≤√®√≤√• √Ø√Æ√´√Æ√¶√®√≤√º √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
				case 1: SPD(playerid,9395, DIALOG_STYLE_INPUT, ""CMAIN"√è√Æ√´√Æ√¶√®√≤√º √≠√†√∞√™√Æ√≤√®√™√®", ""CWHITE"√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √£√∞√†√¨√¨ √≠√†√∞√™√Æ√≤√®√™√Æ√¢, √™√Æ√≤√Æ√∞√Æ√•\n√µ√Æ√≤√®√≤√• √Ø√Æ√´√Æ√¶√®√≤√º √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
				case 2: SPD(playerid,7169, DIALOG_STYLE_INPUT, ""CMAIN"√è√Æ√´√Æ√¶√®√≤√º √¨√•√≤√†√´√´", ""CWHITE"√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √™√®√´√Æ√£√∞√†√¨√¨ √¨√•√≤√†√´√´√†, √™√Æ√≤√Æ√∞√Æ√•\n√µ√Æ√≤√®√≤√• √Ø√Æ√´√Æ√¶√®√≤√º √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
				case 3: {
					if(pData[playerid][pRank] < 2) return SCM(playerid, COLOR_LIGHTGREY, "√Å√∞√†√≤√º √Ø√†√≤√∞√Æ√≠√ª √±√Æ √±√™√´√†S√≠ √∞√†√ß√∞√•√∏√•√≠√Æ √±√Æ 2-√£√Æ √∞√†√≠√£√†");
					SPD(playerid,8485, DIALOG_STYLE_INPUT, ""CMAIN"√Ç√ß√ø√≤√º √Ø√†√≤√∞√Æ√≠√ª", ""CWHITE"√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √Ø√†√≤√∞√Æ√≠√Æ√¢, √™√Æ√≤√Æ√∞√Æ√•\n√µ√Æ√≤√®√≤√• √¢√ß√ø√≤√º √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
				}
				case 4: {
					if(pData[playerid][pRank] < 5) return SCM(playerid, COLOR_LIGHTGREY, "√Å√∞√†√≤√º √≠√†√∞√™√Æ√≤√®√™√® √±√Æ √±√™√´√†S√≠ √∞√†√ß√∞√•√∏√•√≠√Æ √± 5-√£√Æ √∞√†√≠√£√†");
					SPD(playerid,9495, DIALOG_STYLE_INPUT, ""CMAIN"√Ç√ß√ø√≤√º √≠√†√∞√™√Æ√≤√®√™√®", ""CWHITE"√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √£√∞√†√¨√¨ √≠√†√∞√™√Æ√≤√®√™√Æ√¢, √™√Æ√≤√Æ√∞√Æ√•\n√µ√Æ√≤√®√≤√• √¢√ß√ø√≤√º √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
				}
				case 5: {
					if(pData[playerid][pRank] < 3) return SCM(playerid, COLOR_LIGHTGREY, "√Å√∞√†√≤√º √¨√•√≤√†√´√´ √±√Æ √±√™√´√†S√≠ √∞√†√ß√∞√•√∏√•√≠√Æ √± 3-√£√Æ √∞√†√≠√£√†");
					SPD(playerid,7168, DIALOG_STYLE_INPUT, ""CMAIN"√Ç√ß√ø√≤√º √¨√•√≤√†√´√´", ""CWHITE"√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √™√®√´√Æ√£√∞√†√¨√¨ √¨√•√≤√†√´√´√†, √™√Æ√≤√Æ√∞√Æ√•\n√µ√Æ√≤√®√≤√• √¢√ß√ø√≤√º √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
				}
				case 6: {
					if(pData[playerid][pRank] < 7) return SCM(playerid, COLOR_LIGHTGREY, "√Å√∞√†√≤√º √°√Æ√¨√°√ª √∞√†√ß√∞√•√∏√•√≠√Æ √± 7-√£√Æ √∞√†√≠√£√†");
					if(bomb[playerid]) return SCM(playerid,COLOR_LIGHTGREY,"√Ç√ª √≥√¶√• √¢√ß√ø√´√® √°√Æ√¨√°√≥");
					bomb[playerid]=true;
					SCM(playerid,COLOR_LITEBLUE,"√Ç√ª √¢√ß√ø√´√® √°√Æ√¨√°√≥. Usar√≤√• "CORANGE"/bomb "CLITEBLUE"√∑√≤√Æ√°√ª √≥√±√≤√†√≠√Æ√¢√®√≤√º √•¬∏");
				}
			}
			return 1;
		}

	case 83: {
		if(!response) return 1;

		new idmarket=-1;
		for(new i =0; i<9; i++) {
			if(selleritemid[i] != playerid) continue;
			idmarket=i;
			break;
		}
		if(idmarket== -1) return SCM(playerid,COLOR_LIGHTGREY,"√Ç√ª √≠√• √Ø√∞√ÆS√≠¬∏√≤√• √≤√Æ√¢√†√∞√ª √≠√† √∞√ª√≠√™√•");
		if(!IsPlayerInRangeOfPoint(playerid, 6.5, posMarket[idmarket][markX],posMarket[idmarket][markY],posMarket[idmarket][markZ])) 
			return SCM(playerid,COLOR_LIGHTGREY,"√è√Æ√§√Æ√©√§√®√≤√• √°√´√®√¶√• √™ √±√¢√Æ√•√© √Ø√†√´√†√≤√™√• √≠√† √∞√ª√≠√™√•");

		new p_listitem = -1;
		new numberit=-1;
		for(new i = 0; i < 5; i++) {
			if(modelitem[idmarket][i] != -1) p_listitem ++;
			if(p_listitem == listitem) {
				numberit=i;
				break;
			}
		}
		if(numberit == -1) return 1;

		if(item_is_Skin[idmarket][numberit]) 
			AddSkinToInventory(playerid,modelitem[idmarket][numberit]);
		else if(item_is_Accessory[idmarket][numberit]) {
			AddAccessoryToInv(playerid,
			indexmark[idmarket][numberit],
			boneitem[idmarket][numberit],
			modelitem[idmarket][numberit],
			acsRotX[idmarket][numberit],
			acsRotY[idmarket][numberit],
			acsRotZ[idmarket][numberit],
			acsZoom[idmarket][numberit],
			osetX[idmarket][numberit],osetY[idmarket][numberit],osetZ[idmarket][numberit],
			itemfRotX[idmarket][numberit],itemfRotY[idmarket][numberit],itemfRotZ[idmarket][numberit],
			fitemScaleX[idmarket][numberit],fitemScaleY[idmarket][numberit],fitemScaleZ[idmarket][numberit]);
		}
		else {
			switch(typeitem[idmarket][numberit]) {
				case 0: {
					pData[playerid][pSpal] += countitem[idmarket][numberit];
					UpdatePlayerData(playerid,"spal",pData[playerid][pSpal]);
				}
				case 1: {
					pData[playerid][pSiga] += countitem[idmarket][numberit];
					UpdatePlayerData(playerid,"sigar",pData[playerid][pSiga]);
				}
				case 4: {
					pData[playerid][pAptech] += countitem[idmarket][numberit];
					UpdatePlayerData(playerid,"pAptech",pData[playerid][pAptech]);
				}
				case 5: {
					pData[playerid][pMasks] += countitem[idmarket][numberit];
					UpdatePlayerData(playerid,"pMasks",pData[playerid][pMasks]);
				}
				case 6: {
					pData[playerid][pRec]=true;
					UpdatePlayerData(playerid,"pRec",1);
				}
				case 7: {
					fuelcan_buyed[playerid] = true;
					SetPlayerAttachedObject(playerid, 2, 1650, 6, 0.120999, 0.017999, 0.069000, 0.000000, -100.400024, 0.000000, 1.000000, 1.000000, 1.000000, 0, 0);
				}
				case 8: {
					pData[playerid][casino_amount]+= countitem[idmarket][numberit];
					UpdatePlayerData(playerid,"casino_amount",pData[playerid][casino_amount]);
				}
			}

			AddItemToInventory(playerid, countitem[idmarket][numberit], typeitem[idmarket][numberit]);
		}

		SCM(playerid, 0xFF6666FF,"√í√Æ√¢√†√∞ √°√ª√´ √±√≠√ø√≤ √± √Ø√∞√ÆS√≠√¶√®");
		RemoveProdFromMarket(playerid,idmarket,numberit);
	}

	case 2929: {
			if(!response) return 1;
			new bouse = pData[playerid][pBusiness];
			if (bouse == -1) return 1;
			if(!strlen(inputtext)) return SPD(playerid,2929, DIALOG_STYLE_INPUT, "√è√•√∞√•√¢√Æ√§ √§√•√≠√•√£ √≠√† √±√∑¬∏√≤ √°√®√ß√≠√•√±√†","√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ √µ√Æ√≤√®√≤√• √Ø√•√∞√•√¢√•√±√≤√®:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
			if(strval(inputtext) < 1000 || strval(inputtext) > 1000000) return SCM(playerid, COLOR_LIGHTGREY, "√å√®√≠√®√¨√†√´√º√≠√†√ø √±√≥√¨√¨√† 1000$, √¨√†√™√±√®√¨√†√´√º√≠√†√ø - 1000000$");
			if(pData[playerid][pBank] < strval(inputtext)) return SCM(playerid, -1, "√ì √Ç√†√± No √±√≤√Æ√´√º√™√Æ √§√•√≠√•√£");
			if(BizInfo[bouse][bBank] > 10000000) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √°√®√ß√≠√•√±√• √±√´√®√∏√™√Æ√¨ √¨√≠√Æ√£√Æ √§√•√≠√•√£");
			BizInfo[bouse][bBank] += strval(inputtext);
			pData[playerid][pBank] -= strval(inputtext);
			UpdatePlayerData(playerid, "pBank", pData[playerid][pBank]);
			SCMF(playerid, COLOR_YELLOW, "√Ç√ª √Ø√Æ√´√Æ√¶√®√´√® √≠√† √±√∑¬∏√≤ √Ç√†√∏√•√£√Æ √°√®√ß√≠√•√±√† %d$", strval(inputtext));
			return UpdateBusinessData(bouse, "bBank",BizInfo[bouse][bBank]);
		}
	case 514: {
			if(!response) return 1;
			if(!IsPlayerInRangeOfPoint( playerid, 10.0, BizInfo[pData[playerid][pBusiness]][EnterBiz][0], BizInfo[pData[playerid][pBusiness]][EnterBiz][1], BizInfo[pData[playerid][pBusiness]][EnterBiz][2] ) ) return SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √∞√ø√§√Æ√¨ √± √°√®√ß√≠√•√±√Æ√¨");
			strmid(BizInfo[pData[playerid][pBusiness]][bOwner], "None", 0, strlen("None"), 255);
			BizInfo[pData[playerid][pBusiness]][bLock] = 0;
			BizInfo[pData[playerid][pBusiness]][bPribil] = 0;
			BizInfo[pData[playerid][pBusiness]][bBank] = 0;
			BizInfo[pData[playerid][pBusiness]][bVhod] = 0;
			
			BizInfo[pData[playerid][pBusiness]][bProdOrder] = 0;
			BizInfo[pData[playerid][pBusiness]][bProdOrderPrice] = 0;

			new nalog = BizInfo[pData[playerid][pBusiness]][bPrice] * Business_Nalog / 100;
			new price_sell = BizInfo[pData[playerid][pBusiness]][bPrice] - nalog;
			pData[playerid][pBank] += price_sell;
			UpdatePlayerData(playerid, "pBank", pData[playerid][pBank]);
			new gmt_sellh[60];
			format(gmt_sellh, 60, "~g~+%d$ ~n~~g~ bank", price_sell);
			GameTextForPlayer(playerid, gmt_sellh, 3000, 1);
			SaveInstrument();
			UpdateBizInfo(pData[playerid][pBusiness]);
			SaveBusiness(pData[playerid][pBusiness]);
			SCMF(playerid,COLOR_BLUE,"√Ç√ª √Ø√∞√ÆS√≠√´√® √±√¢√Æ√© √°√®√ß√≠√•√± √ß√† "CMAIN"%i$ "CBLUE"√± √≥√∑√•√≤√Æ√¨ √≠√†√´√Æ√£√† √¢ √∞√†√ß√¨√•√∞√• "CYELLOW"%i √Ø√∞√Æ√∂√•√≠√≤√†(√Æ√¢)",price_sell, Business_Nalog);
			new mar_string[144];
			Gos_Nalog[1] += (Gos_Nalog[1] < 800000000 ? (nalog) : (0));
			format(mar_string,144,"[√è√∞√ÆS√≠√¶√† √°√®√ß√≠√•√±√†] √á√†√∑√®√±√´√•√≠ √≠√†√´√Æ√£ √± √Ø√∞√ÆS√≠√¶√® √¢ √∞√†√ß√¨√•√∞√• "CBLUE"%i$", (Gos_Nalog[1] < 800000000 ? (nalog) : (0)));
			SFFM(26,0x339900FF,mar_string);
			pData[playerid][pBusiness] = -1;
			UpdatePlayerData(playerid, "pPbiskey", -1);
		}
	case 9924: {
			if(!response) return 1;
			new bizid = pData[playerid][pBusiness];
			if(bizid == -1) return 1;
			switch(listitem) {
				case 0: ShowBusinessInformation(playerid, bizid);
				case 1: {
					if(!BizInfo[bizid][bLock]) {
						SCM(playerid, COLOR_ERROR, "√Å√®√ß√≠√•√± √ß√†√™√∞√ª√≤");
						BizInfo[bizid][bLock] = 1;
					}
					else {
						SCM(playerid, COLOR_MAIN, "√Å√®√ß√≠√•√± √Æ√≤√™√∞√ª√≤");
						BizInfo[bizid][bLock] = 0;
					}
					PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
					UpdateBusinessData(bizid, "bLock", BizInfo[bizid][bLock]);
					UpdateBizInfo(bizid);
					callcmd::business(playerid);
				}
				case 2: callcmd::sellbiz(playerid);
				case 3: SPD(playerid, 4895, DIALOG_STYLE_INPUT,"{FFCD00}√è√∞√ÆS√≠√¶√†",""CWHITE"√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø √¢√¢√•√§√®√≤√• √∑√•√∞√•√ß √Ø√∞√Æ√°√•√´\n√Ø√†√∞√†√¨√•√≤√∞√ª √§√´√ø √Ø√∞√ÆS√≠√¶√® √°√®√ß√≠√•√±√†\n\n"CLITEBLUE"[id √®√£√∞√Æ√™√†] [√∂√•√≠√†]","S√≠√´√•√•","Cerrar");
				case 4: {
					new type = BizInfo[bizid][bTypeBiz];
					switch(type)
					{
						case 12: SPD(playerid,2424,2, ""CMAIN"√à√ß√¨√•√≠√•√≠√®√• √∂√•√≠", "√ñ√•√≠√† √ß√† √¢√µ√Æ√§ √¢ √°√®√ß√≠√•√±\n√ë√≤√Æ√®√¨√Æ√±√≤√º √†√∞√•√≠√§√ª √°√®√´√°√Æ√∞S√≠ √ß√† √§√•√≠√º", "Seleccione", "Siguiente");
						case 2,4,39: SPD(playerid,71,2, ""CMAIN"√à√ß√¨√•√≠√•√≠√®√• √∂√•√≠", "√ñ√•√≠√† √ß√† √¢√µ√Æ√§ √¢ √°√®√ß√≠√•√±\n√í√Æ√¢√†√∞ 1 (√è√®√¢√Æ)\n√í√Æ√¢√†√∞ 2 (√Ç√Æ√§√™√†)\n√í√Æ√¢√†√∞ 3 (Brandy)\n√í√Æ√¢√†√∞ 4 (√Ç√®√≠√Æ)\n√í√Æ√¢√†√∞ 5 (√ò√†√≥√∞√¨√†)\n√í√Æ√¢√†√∞ 6 (√ë√®√£√†√∞√†)", "Seleccione", "Siguiente");
						default: SPD(playerid,2424,2, ""CMAIN"√à√ß√¨√•√≠√•√≠√®√• √∂√•√≠", "√ñ√•√≠√† √ß√† √¢√µ√Æ√§ √¢ √°√®√ß√≠√•√±", "Seleccione", "Siguiente");
					}
				}
				case 5: SPD(playerid, 1110, DIALOG_STYLE_INPUT, ""CMAIN"√á√†√™√†√ß √Ø√∞√Æ√§√≥√™√≤√Æ√¢", ""CWHITE"√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √Ø√∞√Æ√§√≥√™√≤√Æ√¢, √™√Æ√≤√Æ√∞√Æ√• Quieres √ß√†√™√†√ß√†√≤√º\n√á√†√™√†√ß√ª√¢√†√≤√º √¨√Æ√¶√≠√Æ √Æ√≤ "CMAIN"100 "CWHITE"√§√Æ "CMAIN"10000 "CWHITE"√Ø√∞√Æ√§√≥√™√≤√Æ√¢", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
				case 6:
				{
					if(!BizInfo[bizid][bProdOrder])
						return SCM(playerid,COLOR_ERROR,"√Ç√ª √≠√• √Æ√¥√Æ√∞√¨√´√ø√´√® √ß√†√™√†√ß √Ø√∞√Æ√§√≥√™√≤√Æ√¢ √§√´√ø √±√¢√Æ√•√£√Æ √°√®√ß√≠√•√±√†");
					BizInfo[bizid][bProdOrder] = 0;
					BizInfo[bizid][bProdOrderPrice] = 0;
					SaveBusiness(bizid);
					SCM(playerid, COLOR_YELLOW, "√á√†√™√†√ß √Æ√≤√¨√•√≠¬∏√≠");
					callcmd::business(playerid);
				}
				case 7: {
					EnableGPS(playerid, BizInfo[bizid][EntBizVh][0], BizInfo[bizid][EntBizVh][1], BizInfo[bizid][EntBizVh][2]);
					PlayerPlaySound(playerid, 4601, 0.0, 0.0, 0.0);
					SCM(playerid, COLOR_YELLOW, "√Å√®√ß√≠√•√± √Æ√≤√¨√•√∑√•√≠ √≥ √Ç√†√± √≠√† GPS");
				}
				case 8: SPD(playerid, 9927, DIALOG_STYLE_INPUT, "{FFCD00}√è√Æ√Ø√Æ√´√≠√•√≠√®√•", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
				case 9: SPD(playerid, 9928, DIALOG_STYLE_INPUT, "{FFCD00}√ë√≠√ø√≤√®√•", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
			}
			return 1;
		}
	case 1110: {
		if(!response) return callcmd::business(playerid);

		new put = strval(inputtext);
		new bizid = pData[playerid][pBusiness];

		if(put < 100 || put > 10000) {
			SPD(playerid, 1110, DIALOG_STYLE_INPUT, ""CMAIN"√á√†√™√†√ß √Ø√∞√Æ√§√≥√™√≤√Æ√¢", ""CWHITE"√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √Ø√∞√Æ√§√≥√™√≤√Æ√¢, √™√Æ√≤√Æ√∞√Æ√• Quieres √ß√†√™√†√ß√†√≤√º\n√á√†√™√†√ß√ª√¢√†√≤√º √¨√Æ√¶√≠√Æ √Æ√≤ "CMAIN"100 "CWHITE"√§√Æ "CMAIN"10000 "CWHITE"√Ø√∞√Æ√§√≥√™√≤√Æ√¢", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
			return SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§√•√≠√Æ √≠√•√¢√•√∞√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √Ø√∞√Æ√§√≥√™√≤√Æ√¢ √§√´√ø √ß√†√™√†√ß√†");
		}
		if(BizInfo[bizid][bProd] + put >= BizInfo[bizid][bProdMax]) {
			SPD(playerid, 1110, DIALOG_STYLE_INPUT, ""CMAIN"√á√†√™√†√ß √Ø√∞√Æ√§√≥√™√≤√Æ√¢", ""CWHITE"√Ç√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √Ø√∞√Æ√§√≥√™√≤√Æ√¢, √™√Æ√≤√Æ√∞√Æ√• Quieres √ß√†√™√†√ß√†√≤√º\n√á√†√™√†√ß√ª√¢√†√≤√º √¨√Æ√¶√≠√Æ √Æ√≤ "CMAIN"100 "CWHITE"√§√Æ "CMAIN"10000 "CWHITE"√Ø√∞√Æ√§√≥√™√≤√Æ√¢", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
			return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √ß√†√™√†√ß√†√≤√º √±√≤√Æ√´√º√™√Æ √Ø√∞√Æ√§√≥√™√≤√Æ√¢");
		}

		BizInfo[bizid][bProdOrder] = put;
		SaveBusiness(bizid);

		return SPD(playerid, 1111, DIALOG_STYLE_INPUT, ""CMAIN"√á√†√™√†√ß √Ø√∞√Æ√§√≥√™√≤√Æ√¢", ""CWHITE"√Ç√¢√•√§√®√≤√• √∂√•√≠√≥ √ß√† 1 √Ø√∞√Æ√§√≥√™√≤\n√å√†√™√±√®√¨√†√´√º√≠√†√ø √∂√•√≠√†: 70$", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
	}
	case 1111: {
		new put = strval(inputtext);
		new bizid = pData[playerid][pBusiness];
		if(!response) return 1;
		if(put < 1 || put > 70) {
			SPD(playerid, 1111, DIALOG_STYLE_INPUT, ""CMAIN"√á√†√™√†√ß √Ø√∞√Æ√§√≥√™√≤√Æ√¢", ""CWHITE"√Ç√¢√•√§√®√≤√• √∂√•√≠√≥ √ß√† 1 √Ø√∞√Æ√§√≥√™√≤\n√å√†√™√±√®√¨√†√´√º√≠√†√ø √∂√•√≠√†: 70$", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
			return SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§√•√≠√† √≠√•√¢√•√∞√≠√†√ø √∂√•√≠√†");
		}
		if(BizInfo[bizid][bProd] + put >= BizInfo[bizid][bProdMax]) {
			SPD(playerid, 1111, DIALOG_STYLE_INPUT, ""CMAIN"√á√†√™√†√ß √Ø√∞√Æ√§√≥√™√≤√Æ√¢", ""CWHITE"√Ç√¢√•√§√®√≤√• √∂√•√≠√≥ √ß√† 1 √Ø√∞√Æ√§√≥√™√≤\n√å√†√™√±√®√¨√†√´√º√≠√†√ø √∂√•√≠√†: 70$", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
			return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √ß√†√™√†√ß√†√≤√º √±√≤√Æ√´√º√™√Æ √Ø√∞√Æ√§√≥√™√≤√Æ√¢");
		}
		BizInfo[bizid][bProdOrderPrice] = put;
		SaveBusiness(bizid);
		format(string, 128, "√Ç√ª √ß√†√™√†√ß√†√´√® %d √Ø√∞√Æ√§√≥√™√≤√Æ√¢ √ß√† %d$ √≠√† √™√†√¶√§√ª√©",BizInfo[bizid][bProdOrder],BizInfo[bizid][bProdOrderPrice]);
		SCM(playerid, COLOR_ORANGE,string);
		return SCM(playerid, COLOR_ORANGE, "√é√¶√®S√≠√©√≤√•, √Ø√Æ√™√† √¢√†√¨ √§√Æ√±√≤√†√¢√ø√≤ √Ø√∞√Æ√§√≥√™√≤√ª");
	}
	case 9927: {
			if(!response) return callcmd::business(playerid);
			new biz = pData[playerid][pBusiness];
			if(!strlen(inputtext)) return SPD(playerid, 9927, DIALOG_STYLE_INPUT, "{FFCD00}√è√Æ√Ø√Æ√´√≠√•√≠√®√•", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
			for(new i = strlen(inputtext) - 1; i != -1; i --) {
				switch(inputtext[i]) {
					case '0'..'9': continue;
					default: return SPD(playerid, 9927, DIALOG_STYLE_INPUT, "{FFCD00}√è√Æ√Ø√Æ√´√≠√•√≠√®√•", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
				}
			}
			if(pData[playerid][pCash] < strval(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√†√™√Æ√© √±√≥√¨√¨√ª √± √±√Æ√°√Æ√©");
			if(BizInfo[biz][bBank] + strval(inputtext) > 5000000) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Ø√Æ√´√Æ√¶√®√≤√º √°√Æ√´√•√• 5000000$");
			if(BizInfo[biz][bBank] > 5000000) return SCM(playerid, COLOR_LIGHTGREY, "√ç√† √±√∑√•√≤√≥ √°√®√ß√≠√•√±√† √´√•√¶√®√≤ √¨√†√™√±√®√¨√†√´√º√≠√†√ø √±√≥√¨√¨√†");
			BizInfo[biz][bBank] += strval(inputtext);
			Hook_GivePlayerMoney(playerid, -strval(inputtext));
			return SCMF(playerid, COLOR_BLUE, "√Ç√ª √Ø√Æ√´√Æ√¶√®√´√® √≠√† √±√∑¬∏√≤ √±√¢√Æ√•√£√Æ √°√®√ß√≠√•√±√† %d$", strval(inputtext));
		}
	case 9928: {
			if(!response) return callcmd::business(playerid);
			if(!strlen(inputtext)) return SPD(playerid, 9928, DIALOG_STYLE_INPUT, "{FFCD00}√ë√≠√ø√≤√®√•", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
			for(new i = strlen(inputtext) - 1; i != -1; i --) {
				switch(inputtext[i]) {
					case '0'..'9': continue;
					default: return SPD(playerid, 9928, DIALOG_STYLE_INPUT, "{FFCD00}√ë√≠√ø√≤√®√•", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
				}
			}
			new biz = pData[playerid][pBusiness];
			if(BizInfo[biz][bBank] < strval(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "√ç√† √±√∑√•√≤√≥ √°√®√ß√≠√•√±√† No √≤√†√™√®√µ √§√•√≠√•√£");
			BizInfo[biz][bBank] -= strval(inputtext);
			Hook_GivePlayerMoney(playerid, strval(inputtext));
			return SCMF(playerid, COLOR_BLUE, "√Ç√ª √±√≠√ø√´√® √±√Æ √±√∑¬∏√≤√† √±√¢√Æ√•√£√Æ √°√®√ß√≠√•√±√† %d$", strval(inputtext));
		}
	case 68: {
			if(!response) return 1;
			if(BizEnter{playerid} == 255) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [015]");
 			if(BizInfo[BizEnter{playerid}][bProd] < 10) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√Æ√≤ √≤√Æ√¢√†√∞ √Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤ √¢ √¨√†√£√†√ß√®√≠√•");
			if(pData[playerid][pCash] < BizInfo[BizEnter{playerid}][bCena][listitem]) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√• √µ√¢√†√≤√†√•√≤ √§√•√≠√•√£ √§√´√ø √Ø√Æ√™√≥√Ø√™√® √Ω√≤√Æ√£√Æ √≤√Æ√¢√†√∞√†");
			BizInfo[BizEnter{playerid}][bPribil] += BizInfo[BizEnter{playerid}][bCena][listitem];
			BizInfo[BizEnter{playerid}][bBank] += BizInfo[BizEnter{playerid}][bCena][listitem];
			Hook_GivePlayerMoney(playerid, -BizInfo[BizEnter{playerid}][bCena][listitem]);
			ClearAnimations(playerid);
			ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0,1);
			SetPlayerAttachedObject(playerid, 8, 2880, 6);
			PlayerPlaySound(playerid, 32200, 0.0, 0.0, 0.0);
			new hour;
			gettime(hour);
			switch(hour) {
				case 0..3: MeAction(playerid, "√≥√¶√®√≠√†√•√≤");
				case 4..11: MeAction(playerid, "√ß√†√¢√≤√∞√†√™√†√•√≤");
				case 12..17: MeAction(playerid, "√Æ√°√•SNo");
				case 18..23: MeAction(playerid, "√≥√¶√®√≠√†√•√≤");
			}
			BizInfo[BizEnter{playerid}][bProd] -= 10;
			UpdateBusinessData(BizEnter{playerid}, "bProd",BizInfo[BizEnter{playerid}][bProd]);
			new Float: hpc_pl; GetPlayerHealth(playerid, hpc_pl);
			SetPlayerHealth(playerid, hpc_pl + 20.0);
			new Float: unh_pl = hpc_pl + 20.0;
			SetPlayerChatBubble(playerid, "+ 20 HP", COLOR_MAIN, 4.0, 5000);
			if(unh_pl >= 99.9) SetPlayerHealth(playerid, 100.0);
			SetTimerEx("clearattach", 3000, 0, "d", playerid);
			if(pData[playerid][pHungry] == 1) {
				pData[playerid][pHungry] = 0;
				UpdatePlayerData(playerid,"pHungry",0);
			}
			if(BizInfo[BizEnter{playerid}][bBank] > 10000000) BizInfo[BizEnter{playerid}][bBank] = 10000000;
			UpdateBusinessData(BizEnter{playerid}, "bPribil", BizInfo[BizEnter{playerid}][bPribil]);
			UpdateBusinessData(BizEnter{playerid}, "bBank", BizInfo[BizEnter{playerid}][bBank]);
			return 1;
		}
	case 601: {
		if(!response) return 1;
		for(new i = 0; i<MAX_ADVERT_COUNT;i ++) {
			strdel(gAdvert[i][adSender],0,24);
			gAdvert[i][adPhone] = 0;
			strdel(gAdvert[i][adText],0,100);
			strdel(gAdvert[i][adCheker],0,24);
			gAdvert[i][adBusy] = false;
			gAdvert[i][adCheked] = false;
			gAdvert[i][adCheking] = false;
			gAdvert[i][adTime] = 0;
		}
		gAdvertCount=0;
		gAdvertTime=0;
		format(string, 144, "[A] %s[%d] √Æ√∑√®√±√≤√®√´ √Æ√∑√•√∞√•√§√º √Æ√°√∫√ø√¢√´√•√≠√®√©", pData[playerid][pName], playerid);
		if(GetPVarInt(playerid, "AdminMessages")) SCM(playerid, 0xFF0000FF, string);
		AdminMessage(0xFF0000FF, string);
	}
	case 69: {
			if(!response) return 1;
			if(BizEnter{playerid} == 255) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [015]");
			if(BizInfo[BizEnter{playerid}][bProd] < 10) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√Æ√≤ √≤√Æ√¢√†√∞ √Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤ √¢ √¨√†√£√†√ß√®√≠√•");
			switch(listitem) {
				case 0: {
					if(pData[playerid][pCash] < 170) 
						return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Ø√Æ√™√≥√Ø√™√® √Ω√≤√Æ√£√Æ √≤√Æ√¢√†√∞√†");
					if(pData[playerid][pPnumber] != -1) 
						return SCM(playerid,COLOR_LIGHTGREY,"√ì √Ç√†√± √≥√¶√• √•√±√≤√º √≤√•√´√•√¥√Æ√≠");
					new randomize = 100000 + random(799999) + playerid;
					pData[playerid][pPnumber] = randomize;
					UpdatePlayerData(playerid, "pPnumber", randomize);
					RemoveItemFromInventory(playerid, 3);
					AddItemToInventory(playerid, 1, 3);
					SCMF(playerid, COLOR_BLUE, "√Ç√ª √™√≥√Ø√®√´√® √≤√•√´√•√¥√Æ√≠. √Ç√†√∏ √≠√Æ√¨√•√∞: %d",randomize);
					SCM(playerid,-1,"√Ç√±√• √±√¢√Æ√® √¢√•√π√® √Ç√ª √¨√Æ√¶√•√≤√• √Ø√Æ√±√¨√Æ√≤√∞√•√≤√º √¢ √®√≠√¢√•√≠√≤√†√∞√• "CMAIN"(/inv)");
					GameTextForPlayer(playerid, "~r~-170$", 3000, 1);
					Hook_GivePlayerMoney(playerid, -170);
					BizInfo[BizEnter{playerid}][bPribil] += 170;
					BizInfo[BizEnter{playerid}][bBank] += 170;
				}
				case 1: {
					if(pData[playerid][pCash] < 450) 
						return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Ø√Æ√™√≥√Ø√™√® √Ω√≤√Æ√£√Æ √≤√Æ√¢√†√∞√†");
					if(GetPVarInt(playerid, "takephone")) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√•√´√•√¥√Æ√≠√†");
					if(pData[playerid][pPnumber] == -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√•√´√•√¥√Æ√≠√†");
					return SPD(playerid, 481, DIALOG_STYLE_INPUT, ""CPALEGREEN"√à√ß√¨√•√≠√•√≠√®√• √≠√Æ√¨√•√∞√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¨√•√∞ √§√´√ø √Ç√†√∏√•√© SIM-√™√†√∞√≤√ª\n√é√≠ √§√Æ√´√¶√•√≠ √±√Æ√±√≤√Æ√ø√≤√º √®√ß 6-√≤√® √∂√®√¥√∞\n\n"CLITEBLUE"√ë√≤√Æ√®√¨√Æ√±√≤√º: 300$", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
				}
				case 2: {
					if(pData[playerid][pCash] < 200) 
						return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Ø√Æ√™√≥√Ø√™√® √Ω√≤√Æ√£√Æ √≤√Æ√¢√†√∞√†");
					if(GetPVarInt(playerid, "takephone")) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√•√´√•√¥√Æ√≠√†");
					if(pData[playerid][pPnumber] == -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√•√´√•√¥√Æ√≠√†");
					return SPD(playerid, 485, DIALOG_STYLE_TABLIST_HEADERS, ""CMAIN"√Ç√ª√°√•√∞√®√≤√• √∂√¢√•√≤", "{aa80ff}√ë√≤√Æ√®√¨√Æ√±√≤√º √±√¨√•√≠√ª √∂√¢√•√≤√†: 300$\n"CWHITE"√Å√•√´√ª√©\n"CRED"√ä√∞√†√±√≠√ª√©\n"CORANGE"√é√∞√†√≠√¶√•√¢√ª√©\n{00cc00}√á√•√´¬∏√≠√ª√©\n{2641fe}√ë√®√≠√®√©\n{cc00ff}√î√®√Æ√´√•√≤√Æ√¢√ª√©", "Seleccione", "Cerrar");
				}
				case 3: {
					if(pData[playerid][pCash] < 250) 
						return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Ø√Æ√™√≥√Ø√™√® √Ω√≤√Æ√£√Æ √≤√Æ√¢√†√∞√†");
					GivePlayerWeapon(playerid, 43, 20);
					SCM(playerid, COLOR_BLUE, "√Ç√ª √™√≥√Ø√®√´√® √¥√Æ√≤√Æ√†√Ø√Ø√†√∞√†√≤ √≠√† "CMAIN"20 √±√≠√®√¨√™√Æ√¢");
					SCM(playerid,-1,"√Ç√±√• √±√¢√Æ√® √¢√•√π√® √Ç√ª √¨√Æ√¶√•√≤√• √Ø√Æ√±√¨√Æ√≤√∞√•√≤√º √¢ √®√≠√¢√•√≠√≤√†√∞√• "CMAIN"(/inv)");
					GameTextForPlayer(playerid, "~r~-250$", 3000, 1);
					Hook_GivePlayerMoney(playerid, -250);
					BizInfo[BizEnter{playerid}][bPribil] += 250;
					BizInfo[BizEnter{playerid}][bBank] += 250;
				}
				case 4: {
					if(pData[playerid][pCash] < 150) 
						return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Ø√Æ√™√≥√Ø√™√® √Ω√≤√Æ√£√Æ √≤√Æ√¢√†√∞√†");
					GivePlayerWeapon(playerid, 14, 1);
					SCM(playerid, COLOR_BLUE, "√Ç√ª √™√≥√Ø√®√´√® √°√≥√™√•√≤ √∂√¢√•√≤√Æ√¢. Usar√≤√• "CORANGE"/present "CBLUE"√∑√≤√Æ√°√ª √Ø√ÆS√≠√∞√®√≤√º √•√£√Æ");
					SCM(playerid,-1,"√Ç√±√• √±√¢√Æ√® √¢√•√π√® √Ç√ª √¨√Æ√¶√•√≤√• √Ø√Æ√±√¨√Æ√≤√∞√•√≤√º √¢ √®√≠√¢√•√≠√≤√†√∞√• "CMAIN"(/inv)");
					GameTextForPlayer(playerid, "~r~-150$", 3000, 1);
					Hook_GivePlayerMoney(playerid, -150);
					BizInfo[BizEnter{playerid}][bPribil] += 150;
					BizInfo[BizEnter{playerid}][bBank] += 150;
				}
				case 5: {
					if(pData[playerid][pCash] < 110) 
						return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Ø√Æ√™√≥√Ø√™√® √Ω√≤√Æ√£√Æ √≤√Æ√¢√†√∞√†");
					if(pData[playerid][pMasks] && !pData[playerid][p_premium]) return SCM(playerid, COLOR_LIGHTGREY, "√å√†√™√±√®√¨√†√´√º√≠√Æ √Ç√ª √¨√Æ√¶√•√≤√• √Ø√∞√®√Æ√°√∞√•√±√≤√® √≤√Æ√´√º√™√Æ √Æ√§√≠√≥ √¨√†√±√™√≥");
					if(pData[playerid][p_premium] && pData[playerid][pMasks] >= 3) return SCM(playerid, COLOR_LIGHTGREY, "√å√†√™√±√®√¨√†√´√º√≠√Æ √Ç√ª √¨√Æ√¶√•√≤√• √Ø√∞√®√Æ√°√∞√•√±√≤√® 3 √¨√†√±√™√®");
					pData[playerid][pMasks] ++;
					AddItemToInventory(playerid, 1, 5);
					UpdatePlayerData(playerid, "pMasks", pData[playerid][pMasks]);
					SCMF(playerid,COLOR_BLUE, "√Ç√ª √™√≥√Ø√®√´√® √¨√†√±√™√≥. √í√•√™√≥√π√•√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √¨√†√±√Æ√™: {FFCC00}%d √∏√≤", pData[playerid][pMasks]);
					SCM(playerid, COLOR_BLUE, "√Ç√¢√•√§√®√≤√• √™√Æ√¨√†√≠√§√≥ {00CC00}/mask "CBLUE"√§√´√ø √≤√Æ√£√Æ, √∑√≤√Æ√°√ª √•√• √≠√†√§√•√≤√º");
					SCM(playerid,-1,"√Ç√±√• √±√¢√Æ√® √¢√•√π√® √Ç√ª √¨√Æ√¶√•√≤√• √Ø√Æ√±√¨√Æ√≤√∞√•√≤√º √¢ √®√≠√¢√•√≠√≤√†√∞√• "CMAIN"(/inv)");
					GameTextForPlayer(playerid, "~r~-110$", 3000, 1);
					Hook_GivePlayerMoney(playerid, -110);
					BizInfo[BizEnter{playerid}][bPribil] += 110;
					BizInfo[BizEnter{playerid}][bBank] += 110;
				}
				case 6: {
					if(pData[playerid][pCash] < 150) 
						return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Ø√Æ√™√≥√Ø√™√® √Ω√≤√Æ√£√Æ √≤√Æ√¢√†√∞√†");
					if(pData[playerid][pAptech] && !pData[playerid][p_premium]) return SCM(playerid, COLOR_LIGHTGREY, "√å√†√™√±√®√¨√†√´√º√≠√Æ √Ç√ª √¨√Æ√¶√•√≤√• √Ø√∞√®√Æ√°√∞√•√±√≤√® √≤√Æ√´√º√™√Æ √Æ√§√≠√≥ √†√Ø√≤√•√∑√™√≥");
					if(pData[playerid][p_premium] && pData[playerid][pAptech] >= 5) return SCM(playerid, COLOR_LIGHTGREY, "√å√†√™√±√®√¨√†√´√º√≠√Æ √Ç√ª √¨√Æ√¶√•√≤√• √Ø√∞√®√Æ√°√∞√•√±√≤√® 5 √†√Ø√≤√•√∑√•√™");
					pData[playerid][pAptech] ++;
					AddItemToInventory(playerid, 1, 4);
					SCMF(playerid,COLOR_BLUE,"√Ç√ª √™√≥√Ø√®√´√® √†√Ø√≤√•√∑√™√≥. √í√•√™√≥√π√•√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √†√Ø√≤√•√∑√•√™: {FFCC00}%d √∏√≤", pData[playerid][pAptech]);
					UpdatePlayerData(playerid, "pAptech", pData[playerid][pAptech]);
					SCM(playerid, COLOR_BLUE, "√Ç√¢√•√§√®√≤√• √™√Æ√¨√†√≠√§√≥ {00CC00}/healme "CBLUE"√§√´√ø √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√ø");
					SCM(playerid,-1,"√Ç√±√• √±√¢√Æ√® √¢√•√π√® √Ç√ª √¨√Æ√¶√•√≤√• √Ø√Æ√±√¨√Æ√≤√∞√•√≤√º √¢ √®√≠√¢√•√≠√≤√†√∞√• "CMAIN"(/inv)");
					GameTextForPlayer(playerid, "~r~-150$", 3000, 1);
					Hook_GivePlayerMoney(playerid, -150);
					BizInfo[BizEnter{playerid}][bPribil] += 150;
					BizInfo[BizEnter{playerid}][bBank] += 150;
				}
				case 7: {
					if(pData[playerid][pCash] < 600) 
						return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Ø√Æ√™√≥√Ø√™√® √Ω√≤√Æ√£√Æ √≤√Æ√¢√†√∞√†");
					if(pData[playerid][pSiga] > 0) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≥√¶√• √•√±√≤√º El comienzo comenzar√°");
					return SPD(playerid, 7485, 2, ""CMAIN"El comienzo comenzar√°", "Parlament\nKent\nWinston\nLucky Strike\nMarlboro", "Seleccione", "Cerrar");
				}
				case 8: {
					if(pData[playerid][pCash] < 450) 
						return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Ø√Æ√™√≥√Ø√™√® √Ω√≤√Æ√£√Æ √≤√Æ√¢√†√∞√†");
					if(pData[playerid][pSpal] > 0) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≥√¶√• √•√±√≤√º Hajigalk");
					SCM(playerid, 0x0099FFFF, "√Ç√ª √™√≥√Ø√®√´√® √ß√†√¶√®√£√†√´√™√≥");
					SCM(playerid,-1,"√Ç√±√• √±√¢√Æ√® √¢√•√π√® √Ç√ª √¨√Æ√¶√•√≤√• √Ø√Æ√±√¨√Æ√≤√∞√•√≤√º √¢ √®√≠√¢√•√≠√≤√†√∞√• "CMAIN"(/inv)");
					pData[playerid][pSpal] = 20;
					RemoveItemFromInventory(playerid, 0);
					AddItemToInventory(playerid, 20, 0);
					new query[90];
					mysql_format(mysql_Handle,query,sizeof(query),"UPDATE `accounts` SET `spal` = %d WHERE `Name` = '%s'",pData[playerid][pSpal],pData[playerid][pName]);
					mysql_tquery(mysql_Handle, query);
					GameTextForPlayer(playerid, "~r~-450$", 3000, 1);
					Hook_GivePlayerMoney(playerid, -450);
					BizInfo[BizEnter{playerid}][bPribil] += 450;
					BizInfo[BizEnter{playerid}][bBank] += 450;
				}
				case 9: {
					if(pData[playerid][pCash] < 600) 
						return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Ø√Æ√™√≥√Ø√™√® √Ω√≤√Æ√£√Æ √≤√Æ√¢√†√∞√†");
					Hook_GivePlayerMoney(playerid, -600);
					GameTextForPlayer(playerid, "~r~-600$", 3000, 1);
					GivePlayerWeapon(playerid, 15, 1);
					SCM(playerid, COLOR_BLUE, "√Ç√ª √™√≥√Ø√®√´√® √≤√∞√Æ√±√≤√º");
					SCM(playerid,-1,"√Ç√±√• √±√¢√Æ√® √¢√•√π√® √Ç√ª √¨√Æ√¶√•√≤√• √Ø√Æ√±√¨√Æ√≤√∞√•√≤√º √¢ √®√≠√¢√•√≠√≤√†√∞√• "CMAIN"(/inv)");
					BizInfo[BizEnter{playerid}][bPribil] += 600;
					BizInfo[BizEnter{playerid}][bBank] += 600;
				}
				case 10: {
					if(pData[playerid][pCash] < 800) 
						return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Ø√Æ√™√≥√Ø√™√® √Ω√≤√Æ√£√Æ √≤√Æ√¢√†√∞√†");
					GivePlayerWeapon(playerid, 46, 1);
					SCM(playerid, COLOR_MAIN, "√Ç√ª √Ø√∞√®√Æ√°√∞√•√´√® √Ø√†√∞√†√∏√æ√≤");
					SCM(playerid,-1,"√Ç√±√• √±√¢√Æ√® √¢√•√π√® √Ç√ª √¨√Æ√¶√•√≤√• √Ø√Æ√±√¨√Æ√≤√∞√•√≤√º √¢ √®√≠√¢√•√≠√≤√†√∞√• "CMAIN"(/inv)");
					GameTextForPlayer(playerid, "~r~-800$", 3000, 1);
					Hook_GivePlayerMoney(playerid, -800);
					BizInfo[BizEnter{playerid}][bPribil] += 800;
					BizInfo[BizEnter{playerid}][bBank] += 800;
				}
				case 11: {
					if(pData[playerid][pCash] < 500) 
						return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Ø√Æ√™√≥√Ø√™√® √Ω√≤√Æ√£√Æ √≤√Æ√¢√†√∞√†");
					if(pData[playerid][pRec]) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≥√¶√• √•√±√≤√º √¨√†√£√≠√®√≤√Æ√¥√Æ√≠");
					pData[playerid][pRec]=true;
					UpdatePlayerData(playerid,"pRec",1);
					RemoveItemFromInventory(playerid, 6);
					AddItemToInventory(playerid, 1, 6);
					SCM(playerid, COLOR_MAIN, "√Ç√ª √™√≥√Ø√®√´√® √¨√†√£√≠√®√≤√Æ√¥√Æ√≠");
					SCM(playerid, COLOR_MAIN, "Usar√≤√• "CLITEBLUE"/recorder "CMAIN"√§√´√ø √•√£√Æ √≥√±√≤√†√≠√Æ√¢√™√®");
					SCM(playerid,-1,"√Ç√±√• √±√¢√Æ√® √¢√•√π√® √Ç√ª √¨√Æ√¶√•√≤√• √Ø√Æ√±√¨√Æ√≤√∞√•√≤√º √¢ √®√≠√¢√•√≠√≤√†√∞√• "CMAIN"(/inv)");
					GameTextForPlayer(playerid, "~r~-500$", 3000, 1);
					Hook_GivePlayerMoney(playerid, -500);
					BizInfo[BizEnter{playerid}][bPribil] += 500;
					BizInfo[BizEnter{playerid}][bBank] += 500;
				}
				case 12: {
					if(pData[playerid][pCash] < 400) 
						return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Ø√Æ√™√≥√Ø√™√® √Ω√≤√Æ√£√Æ √≤√Æ√¢√†√∞√†");
					Hook_GivePlayerMoney(playerid, -400);
					GameTextForPlayer(playerid, "~r~-400$", 3000, 1);
					GivePlayerWeapon(playerid, 41, 300);
					SCM(playerid, COLOR_BLUE, "√Ç√ª √™√≥√Ø√®√´√® √°√†√´√´√Æ√≠√∑√®√™ √± √™√∞√†√±√™√Æ√©");
					SCM(playerid,-1,"√Ç√±√• √±√¢√Æ√® √¢√•√π√® √Ç√ª √¨√Æ√¶√•√≤√• √Ø√Æ√±√¨√Æ√≤√∞√•√≤√º √¢ √®√≠√¢√•√≠√≤√†√∞√• "CMAIN"(/inv)");
					BizInfo[BizEnter{playerid}][bPribil] += 400;
					BizInfo[BizEnter{playerid}][bBank] += 400;
				}
			}
			PlayerPlaySound(playerid, 17001, 0.0, 0.0, 0.0);
			BizInfo[BizEnter{playerid}][bProd] -= 10;
			UpdateBusinessData(BizEnter{playerid}, "bProd", BizInfo[BizEnter{playerid}][bProd]); 
			if(BizInfo[BizEnter{playerid}][bBank] > 10000000) BizInfo[BizEnter{playerid}][bBank] = 10000000;
			UpdateBusinessData(BizEnter{playerid}, "bPribil", BizInfo[BizEnter{playerid}][bPribil]);
			return UpdateBusinessData(BizEnter{playerid}, "bBank", BizInfo[BizEnter{playerid}][bBank]);
		}
	case 451: {
		if(!response) return 1;
		new org_number;
		switch(listitem) {
			case 4,9,13,17: return SPD(playerid, 451, DIALOG_STYLE_LIST, "√Ç√∞√•√¨√•√≠√≠√Æ√• √´√®√§√•√∞√±√≤√¢√Æ", 
								"{ccff00}Tyr Kos-Anthosa\n\
								{ccff00}Kyryo Pan-Hiero\n\
								{ccff00}Tyr Vas-Venturasa\n\
								{ccff00}Administraci√≥n residente\n \n\
								\
								{0000ff}√ì√Ø√∞. Por el favor de Ros-Anthos\n\
								{0000ff}√ì√Ø√∞. por orden de Pan-Riero\n\
								{0000ff}√ì√Ø√∞. Por el favor de Vas-Venturas\n\
								{0000ff}√î√Å√ê\n \n\
								\
								{ff6666}Columna de Ros-Anthos\n\
								{ff6666}Colinitza Pan-Riero\n\
								{ff6666}Columbia Vas-Venturasa\n \n\
								\
								{996633}Noticias de oficina\n\
								{996633}Fuerza a√©rea militar\n\
								{996633}Armada\n \n\
								\
								{FFCC66}El instalador\n\
								{ff6600}Instalaciones de informaci√≥n masiva\n\
								{009900}Grove Street\n\
								{cc00ff}The Ballas\n\
								{00CCFF}Varrios Los Aztecas\n\
								{FFCD00}Los Santos Vagos\n\
								{6666ff}The Rifa\n\
								{993366}La Cosa Nostra\n\
								{007575}ruso\n\
								{bb0000}Yakuza", 
							"Seleccione", "Cerrar");
			case 0: org_number = 7;
			case 1: org_number = 8;
			case 2: org_number = 9;
			case 3: org_number = 26;
			case 5: org_number = 1;
			case 6: org_number = 10;
			case 7: org_number = 21;
			case 8: org_number = 2;
			case 10: org_number = 4;
			case 11: org_number = 28;
			case 12: org_number = 29;
			case 14: org_number = 19;
			case 15: org_number = 20;
			case 16: org_number = 27;
			case 18: org_number = 11;
			case 19: org_number = 16;
			case 20: org_number = 15;
			case 21: org_number = 12;
			case 22: org_number = 17;
			case 23: org_number = 13;
			case 24: org_number = 18;
			case 25: org_number = 5;
			case 26: org_number = 14;
			case 27: org_number = 6;
		}
		check_badgevalid(playerid);
		if(pData[playerid][pSex] == 1) format(string, 144, "[A] %s[%d] √≠√†√ß√≠√†√∑√®√´ √±√•√°√ø √¢√∞√•√¨. √´√®√§√•√∞√Æ√¨ \"%s\"", pData[playerid][pName], playerid, GetMember[org_number - 1]);
		else format(string, 144, "[A] %s[%d] √≠√†√ß√≠√†√∑√®√´√† √±√•√°√ø √¢√∞√•√¨. √´√®√§√•√∞√Æ√¨ \"%s\"", pData[playerid][pName], playerid, GetMember[org_number - 1]);
		AdminMessage(COLOR_GREY, string);
		pData[playerid][pAdmMember] = org_number;
		UpdatePlayerData(playerid, "pAdmMember", org_number);
		if(GetPVarInt(playerid, "AdminMessages")) SCM(playerid, COLOR_GREY, string);
		SCM(playerid, COLOR_GREY, "√Ñ√´√ø √±√≠√ø√≤√®√ø √´√®√§√•√∞√±√≤√¢√† √¢√¢√•√§√®√≤√• "CBLUE"/templeader "CGREY"√•√π¬∏ √∞√†√ß");
		pData[playerid][pMember] = org_number;
		pData[playerid][pLeader] = org_number;
		pData[playerid][pModel] = pData[playerid][pChar];
		UpdatePlayerData(playerid,"pModel",pData[playerid][pModel]);
		pData[playerid][pRank] = 10;
		pData[playerid][pJob] = 0;
		return SetPlayerColor(playerid, FractionInfo[org_number][fColor]);
	}
	case 7485: {
			if(!response) return 1;
			if(BizEnter{playerid} == 255) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [015]");
			if(pData[playerid][pSiga] > 0) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≥√¶√• √•√±√≤√º El comienzo comenzar√°");
			if(BizInfo[BizEnter{playerid}][bProd] < 10) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√Æ√≤ √≤√Æ√¢√†√∞ √Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤ √¢ √¨√†√£√†√ß√®√≠√•");
			if(pData[playerid][pCash] < 600) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Ø√Æ√™√≥√Ø√™√® √Ω√≤√Æ√£√Æ √≤√Æ√¢√†√∞√†");
			SCM(playerid, 0x0099FFFF, "√Ç√ª √™√≥√Ø√®√´√® √Ø√†√∑√™√≥ √±√®√£√†√∞√•√≤");
			SCM(playerid, 0x0099FFFF, "√Ñ√´√ø √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√ø √¢√¢√•√§√®√≤√• {FFCD00}/smoke");
			SCM(playerid, 0x0099FFFF, "√ó√≤√Æ√°√ª √≥√ß√≠√†√≤√º √±√™√Æ√´√º√™√Æ √Æ√±√≤√†√´√Æ√±√º √±√®√£√†√∞√•√≤, √¢√¢√•√§√®√≤√• {FFCD00}/cigarettes");
			SCM(playerid,-1,"√Ç√±√• √±√¢√Æ√® √¢√•√π√® √Ç√ª √¨√Æ√¶√•√≤√• √Ø√Æ√±√¨√Æ√≤√∞√•√≤√º √¢ √®√≠√¢√•√≠√≤√†√∞√• "CMAIN"(/inv)");
			PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
			BizInfo[BizEnter{playerid}][bPribil] += 600;
			BizInfo[BizEnter{playerid}][bBank] += 650;
			pData[playerid][pSiga] += 20;
			RemoveItemFromInventory(playerid, 1);
			AddItemToInventory(playerid, 20, 1);
			pData[playerid][pSgf] = listitem + 1;
			Hook_GivePlayerMoney(playerid, -600);
			new query[140];
			mysql_format(mysql_Handle,query,sizeof(query),"UPDATE `accounts` SET `sigar` = %d, `sgf` = %d WHERE `Name` = '%s'",pData[playerid][pSiga],pData[playerid][pSgf],pData[playerid][pName]);
			mysql_tquery(mysql_Handle, query);
			BizInfo[BizEnter{playerid}][bProd] -= 10;
			UpdateBusinessData(BizEnter{playerid}, "bProd",BizInfo[BizEnter{playerid}][bProd]);
			if(BizInfo[BizEnter{playerid}][bBank] > 10000000) BizInfo[BizEnter{playerid}][bBank] = 10000000;
			UpdateBusinessData(BizEnter{playerid}, "bPribil",BizInfo[BizEnter{playerid}][bPribil]);
			return UpdateBusinessData(BizEnter{playerid}, "bBank",BizInfo[BizEnter{playerid}][bBank]);
		}
	case 1865: {
		if(!response) return 1;
		new kioskbank, str_kiosknum[12];
		if(IsPlayerInRangeOfPoint(playerid, 5, 1799.6619,-1862.2518,13.5765)) {
			kioskbank = kiosk1_bank;
			str_kiosknum = "kiosk1_bank";
		}
		else if(IsPlayerInRangeOfPoint(playerid, 5, 1298.2910,-1388.6902,13.4811)) {
			kioskbank = kiosk2_bank;
			str_kiosknum = "kiosk2_bank";
		}
		else if(IsPlayerInRangeOfPoint(playerid, 5, 2827.5046,1255.3038,10.7686)) {
			kioskbank = kiosk3_bank;
			str_kiosknum = "kiosk3_bank";
		}
		else if(IsPlayerInRangeOfPoint(playerid, 5, -1988.1997,201.2013,27.6799)) {
			kioskbank = kiosk4_bank;
			str_kiosknum = "kiosk4_bank";
		}
		else return SCM(playerid,COLOR_ERROR,"√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [093]");
		switch(listitem) {
			case 0: {
				if(pData[playerid][pCash] < 50) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Ø√Æ√™√≥√Ø√™√® √Ω√≤√Æ√£√Æ √≤√Æ√¢√†√∞√†");
				kioskbank += 50;
				Hook_GivePlayerMoney(playerid, -50);
				GameTextForPlayer(playerid, "~r~-50$", 3000, 1);
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
				new Float: health;
				GetPlayerHealth(playerid, health);
				SetPlayerHealth(playerid, (health + 10 > 100.0 ? (100.0) : (health + 10)));
				if(pData[playerid][pHungry] == 1) {
					pData[playerid][pHungry] = 0;
					UpdatePlayerData(playerid,"pHungry",0);
				}
				if(pData[playerid][pSex] == 1) MeAction(playerid, "√™√≥√Ø√®√´ √¢√Æ√§√≥");
				else MeAction(playerid, "√™√≥√Ø√®√´√† √¢√Æ√§√≥");
			}
			case 1: {
				if(pData[playerid][pCash] < 100) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Ø√Æ√™√≥√Ø√™√® √Ω√≤√Æ√£√Æ √≤√Æ√¢√†√∞√†");
				kioskbank += 100;
				Hook_GivePlayerMoney(playerid, -100);
				GameTextForPlayer(playerid, "~r~-100$", 3000, 1);
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
				new Float: health;
				GetPlayerHealth(playerid, health);
				SetPlayerHealth(playerid, (health + 25 > 100.0 ? (100.0) : (health + 25)));
				if(pData[playerid][pHungry] == 1) {
					pData[playerid][pHungry] = 0;
					UpdatePlayerData(playerid,"pHungry",0);
				}
				if(pData[playerid][pSex] == 1) MeAction(playerid, "√™√≥√Ø√®√´ √±√Æ√™");
				else MeAction(playerid, "√™√≥√Ø√®√´√† √±√Æ√™");
			}
			case 2: {
				if(pData[playerid][pCash] < 250) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Ø√Æ√™√≥√Ø√™√® √Ω√≤√Æ√£√Æ √≤√Æ√¢√†√∞√†");
				kioskbank += 250;
				Hook_GivePlayerMoney(playerid, -250);
				GameTextForPlayer(playerid, "~r~-250$", 3000, 1);
				GivePlayerWeapon(playerid, 15, 1);
				SCM(playerid, COLOR_BLUE, "√Ç√ª √™√≥√Ø√®√´√® √≤√∞√Æ√±√≤√º");
			}
			case 3: {
				if(pData[playerid][pCash] < 300) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Ø√Æ√™√≥√Ø√™√® √Ω√≤√Æ√£√Æ √≤√Æ√¢√†√∞√†");
				kioskbank += 300;
				Hook_GivePlayerMoney(playerid, -300);
				GameTextForPlayer(playerid, "~r~-300$", 3000, 1);
				GivePlayerWeapon(playerid, 14, 1);
				SCM(playerid, COLOR_BLUE, "√Ç√ª √™√≥√Ø√®√´√® √∂√¢√•√≤√ª. Usar√≤√• "CORANGE"/present "CBLUE"√∑√≤√Æ√°√ª √Ø√ÆS√≠√∞√®√≤√º √®√µ");
			}
			case 4: {
				if(pData[playerid][pCash] < 600) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Ø√Æ√™√≥√Ø√™√® √Ω√≤√Æ√£√Æ √≤√Æ√¢√†√∞√†");
				if(pData[playerid][pSiga] > 0) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≥√¶√• √•√±√≤√º El comienzo comenzar√°");
				SPD(playerid, 8456, 2, ""CMAIN"El comienzo comenzar√°", "Parlament\nKent\nWinston\nLucky Strike\nMarlboro", "Seleccione", "Cerrar");
			}
			case 5: {
				if(pData[playerid][pCash] < 450) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Ø√Æ√™√≥√Ø√™√® √Ω√≤√Æ√£√Æ √≤√Æ√¢√†√∞√†");
				kioskbank += 450;
				if(pData[playerid][pSpal] > 0) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≥√¶√• √•√±√≤√º Hajigalk");
				Hook_GivePlayerMoney(playerid, -450);
				GameTextForPlayer(playerid, "~r~-450$", 3000, 1);
				pData[playerid][pSpal] = 20;
				RemoveItemFromInventory(playerid, 0);
				AddItemToInventory(playerid, 20, 0);
				new query[90];
				mysql_format(mysql_Handle,query,sizeof(query),"UPDATE `accounts` SET `spal` = %d WHERE `Name` = '%s'",pData[playerid][pSpal],pData[playerid][pName]);
				mysql_tquery(mysql_Handle, query);
				SCM(playerid, 0x0099FFFF, "√Ç√ª √™√≥√Ø√®√´√® √ß√†√¶√®√£√†√´√™√≥");
			}
		}

		new strquery[64];
		format(strquery,sizeof(strquery),"UPDATE `otherfuncs` SET `%s` = %d",str_kiosknum,kioskbank);
		mysql_tquery(mysql_Handle, strquery);

		if(IsPlayerInRangeOfPoint(playerid, 5, 1799.6619,-1862.2518,13.5765)) 
			kiosk1_bank = kioskbank;
		else if(IsPlayerInRangeOfPoint(playerid, 5, 1298.2910,-1388.6902,13.4811)) 
			kiosk2_bank = kioskbank;
		else if(IsPlayerInRangeOfPoint(playerid, 5, 2827.5046,1255.3038,10.7686)) 
			kiosk3_bank = kioskbank;
		else if(IsPlayerInRangeOfPoint(playerid, 5, -1988.1997,201.2013,27.6799)) 
			kiosk4_bank = kioskbank;
	}
	case 8456: {
			if(!response) return 1;

			new kioskbank, str_kiosknum[12];
			if(IsPlayerInRangeOfPoint(playerid, 5, 1799.6619,-1862.2518,13.5765)) {
				kioskbank = kiosk1_bank;
				str_kiosknum = "kiosk1_bank";
			}
			else if(IsPlayerInRangeOfPoint(playerid, 5, 1298.2910,-1388.6902,13.4811)) {
				kioskbank = kiosk2_bank;
				str_kiosknum = "kiosk2_bank";
			}
			else if(IsPlayerInRangeOfPoint(playerid, 5, 2827.5046,1255.3038,10.7686)) {
				kioskbank = kiosk3_bank;
				str_kiosknum = "kiosk3_bank";
			}
			else if(IsPlayerInRangeOfPoint(playerid, 5, -1988.1997,201.2013,27.6799)) {
				kioskbank = kiosk4_bank;
				str_kiosknum = "kiosk4_bank";
			}
			else return SCM(playerid,COLOR_ERROR,"√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [093]");

			if(pData[playerid][pSiga] > 0) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≥√¶√• √•√±√≤√º el comienzo comenzar√°");
			if(pData[playerid][pCash] < 600) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Ø√Æ√™√≥√Ø√™√® √Ω√≤√Æ√£√Æ √≤√Æ√¢√†√∞√†");
			Hook_GivePlayerMoney(playerid, -600);
			GameTextForPlayer(playerid, "~r~-600$", 3000, 1);
			pData[playerid][pSiga] += 20;
			RemoveItemFromInventory(playerid, 1);
			AddItemToInventory(playerid, 20, 1);
			pData[playerid][pSgf] = listitem + 1;

			kioskbank += 600;
			new strquery[64];
			format(strquery,sizeof(strquery),"UPDATE `otherfuncs` SET `%s` = %d",str_kiosknum,kioskbank);
			mysql_tquery(mysql_Handle, strquery);

			if(IsPlayerInRangeOfPoint(playerid, 5, 1799.6619,-1862.2518,13.5765)) 
				kiosk1_bank = kioskbank;
			else if(IsPlayerInRangeOfPoint(playerid, 5, 1298.2910,-1388.6902,13.4811)) 
				kiosk2_bank = kioskbank;
			else if(IsPlayerInRangeOfPoint(playerid, 5, 2827.5046,1255.3038,10.7686)) 
				kiosk3_bank = kioskbank;
			else if(IsPlayerInRangeOfPoint(playerid, 5, -1988.1997,201.2013,27.6799)) 
				kiosk4_bank = kioskbank;

			new query[140];
			mysql_format(mysql_Handle,query,sizeof(query),"UPDATE `accounts` SET `sigar` = %d, `sgf` = %d WHERE `Name` = '%s'",pData[playerid][pSiga],pData[playerid][pSgf],pData[playerid][pName]);
			mysql_tquery(mysql_Handle, query);
			SCM(playerid, 0x0099FFFF, "√Ç√ª √™√≥√Ø√®√´√® √Ø√†√∑√™√≥ √±√®√£√†√∞√•√≤");
			SCM(playerid, 0x0099FFFF, "√Ñ√´√ø √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√ø √¢√¢√•√§√®√≤√• {FFCD00}/smoke");
			SCM(playerid, 0x0099FFFF, "√ó√≤√Æ√°√ª √≥√ß√≠√†√≤√º √±√™√Æ√´√º√™√Æ √Æ√±√≤√†√´√Æ√±√º √±√®√£√†√∞√•√≤, √¢√¢√•√§√®√≤√• {FFCD00}/cigarettes");
		}
	case 71: {
			if(!response) return callcmd::business(playerid);
			if(!listitem) return SPD(playerid,72,1, ""CMAIN"√ñ√•√≠√† √ß√† √¢√µ√Æ√§", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¢√≥√æ √∂√•√≠√≥ √ß√† √¢√µ√Æ√§ √¢ √Ç√†√∏ √°√®√ß√≠√•√±: "CMAIN"(0 - √≥√°√∞√†√≤√º)\n{ff9966}√ç√• √±√≤√†√¢√º√≤√• √±√´√®√∏√™√Æ√¨ √¢√ª√±√Æ√™√≥√æ √∂√•√≠√≥. √ù√≤√Æ √¨√Æ√¶√•√≤ √Æ√°√†√≠√™√∞√Æ√≤√®√≤√º √Ç√†√∏ √°√®√ß√≠√•√±.", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
			format(string,128,""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¢√≥√æ √∂√•√≠√≥ √ß√† √≤√Æ√¢√†√∞ "CMAIN"¬π%i"CWHITE":",listitem);
			return SPD(playerid, (listitem==1)?(73):(listitem==2)?(74):(listitem==3)?(75):(listitem==4)?(76):(listitem==5)?(77):(listitem==6)?(78):(listitem==7)?(79):(listitem==8)?(80):(81), DIALOG_STYLE_INPUT, ""CMAIN"√ñ√•√≠√ª",string, "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
		}
	case 72: {
			if(!response) 
				return 1;
			if(!strlen(inputtext)) 
				return SPD(playerid,72,1, ""CMAIN"√ñ√•√≠√† √ß√† √¢√µ√Æ√§", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¢√≥√æ √∂√•√≠√≥ √ß√† √¢√µ√Æ√§ √¢ √Ç√†√∏ √°√®√ß√≠√•√±: "CMAIN"(0 - √≥√°√∞√†√≤√º)\n{ff9966}√ç√• √±√≤√†√¢√º√≤√• √±√´√®√∏√™√Æ√¨ √¢√ª√±√Æ√™√≥√æ √∂√•√≠√≥. √ù√≤√Æ √¨√Æ√¶√•√≤ √Æ√°√†√≠√™√∞√Æ√≤√®√≤√º √Ç√†√∏ √°√®√ß√≠√•√±.", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
			if(strval(inputtext) > 6000 || strval(inputtext) < 0)
			{
				SCM(playerid, COLOR_LIGHTGREY, "√Ñ√Æ√Ø√≥√±√≤√®√¨√† √∂√•√≠√† √§√Æ 6000$");
				return SPD(playerid,72,1, ""CMAIN"√ñ√•√≠√† √ß√† √¢√µ√Æ√§", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¢√≥√æ √∂√•√≠√≥ √ß√† √¢√µ√Æ√§ √¢ √Ç√†√∏ √°√®√ß√≠√•√±: "CMAIN"(0 - √≥√°√∞√†√≤√º)\n{ff9966}√ç√• √±√≤√†√¢√º√≤√• √±√´√®√∏√™√Æ√¨ √¢√ª√±√Æ√™√≥√æ √∂√•√≠√≥. √ù√≤√Æ √¨√Æ√¶√•√≤ √Æ√°√†√≠√™√∞√Æ√≤√®√≤√º √Ç√†√∏ √°√®√ß√≠√•√±.", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
			}
			BizInfo[pData[playerid][pBusiness]][bVhod] = strval(inputtext);
			UpdateBizInfo(pData[playerid][pBusiness]);
			UpdateBusinessData(pData[playerid][pBusiness], "bVhod",BizInfo[pData[playerid][pBusiness]][bVhod]);
			return SCMF(playerid, COLOR_YELLOW, "√ç√Æ√¢√†√ø √∂√•√≠√† √ß√† √¢√µ√Æ√§ √¢ √°√®√ß√≠√•√±: %d$", strval(inputtext));
		}
	case 73: {
			if(!response) return 1;
			if(strval(inputtext) > 7000 || strval(inputtext) < 1) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√´√º√ß√ø √¨√•√≠√º√∏√• 1$ √® √°√Æ√´√º√∏√• 7000$");
			BizInfo[pData[playerid][pBusiness]][bCena][0] = strval(inputtext);
			SCMF(playerid,COLOR_MAIN,"√ç√Æ√¢√†√ø √∂√•√≠√† √≠√† 1 √≤√Æ√¢√†√∞: "CYELLOW"%d$",strval(inputtext));
			return UpdateBusinessData(pData[playerid][pBusiness], "bCena1",BizInfo[pData[playerid][pBusiness]][bCena][0]);
		}
	case 74: {
			if(!response) return 1;
			if(strval(inputtext) > 7000 || strval(inputtext) < 1) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√´√º√ß√ø √¨√•√≠√º√∏√• 1$ √® √°√Æ√´√º√∏√• 7000$");
			BizInfo[pData[playerid][pBusiness]][bCena][1] = strval(inputtext);
			SCMF(playerid,COLOR_MAIN,"√ç√Æ√¢√†√ø √∂√•√≠√† √≠√† 2 √≤√Æ√¢√†√∞: "CYELLOW"%d$",strval(inputtext));
			return UpdateBusinessData(pData[playerid][pBusiness], "bCena2",BizInfo[pData[playerid][pBusiness]][bCena][1]);
		}
	case 75: {
			if(!response) return 1;
			if(strval(inputtext) > 7000 || strval(inputtext) < 1) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√´√º√ß√ø √¨√•√≠√º√∏√• 1$ √® √°√Æ√´√º√∏√• 7000$");
			BizInfo[pData[playerid][pBusiness]][bCena][2] = strval(inputtext);
			SCMF(playerid,COLOR_MAIN,"√ç√Æ√¢√†√ø √∂√•√≠√† √≠√† 3 √≤√Æ√¢√†√∞: "CYELLOW"%d$",strval(inputtext));
			return UpdateBusinessData(pData[playerid][pBusiness], "bCena3",BizInfo[pData[playerid][pBusiness]][bCena][2]);
		}
	case 76: {
			if(!response) return 1;
			if(strval(inputtext) > 7000 || strval(inputtext) < 1) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√´√º√ß√ø √¨√•√≠√º√∏√• 1$ √® √°√Æ√´√º√∏√• 7000$");
			BizInfo[pData[playerid][pBusiness]][bCena][3] = strval(inputtext);
			SCMF(playerid,COLOR_MAIN,"√ç√Æ√¢√†√ø √∂√•√≠√† √≠√† 4 √≤√Æ√¢√†√∞: "CYELLOW"%d$",strval(inputtext));
			return UpdateBusinessData(pData[playerid][pBusiness], "bCena4",BizInfo[pData[playerid][pBusiness]][bCena][3]);
		}
	case 77: {
			if(!response) return 1;
			if(strval(inputtext) > 7000 || strval(inputtext) < 1) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√´√º√ß√ø √¨√•√≠√º√∏√• 1$ √® √°√Æ√´√º√∏√• 7000$");
			BizInfo[pData[playerid][pBusiness]][bCena][4] = strval(inputtext);
			SCMF(playerid,COLOR_MAIN,"√ç√Æ√¢√†√ø √∂√•√≠√† √≠√† 5 √≤√Æ√¢√†√∞: "CYELLOW"%d$",strval(inputtext));
			return UpdateBusinessData(pData[playerid][pBusiness], "bCena5",BizInfo[pData[playerid][pBusiness]][bCena][4]);
		}
	case 78: {
			if(!response) return 1;
			if(strval(inputtext) > 7000 || strval(inputtext) < 1) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√´√º√ß√ø √¨√•√≠√º√∏√• 1$ √® √°√Æ√´√º√∏√• 7000$");
			BizInfo[pData[playerid][pBusiness]][bCena][5] = strval(inputtext);
			SCMF(playerid,COLOR_MAIN,"√ç√Æ√¢√†√ø √∂√•√≠√† √≠√† 6 √≤√Æ√¢√†√∞: "CYELLOW"%d$",strval(inputtext));
			return UpdateBusinessData(pData[playerid][pBusiness], "bCena6",BizInfo[pData[playerid][pBusiness]][bCena][5]);
		}
	case 79: {
			if(!response) return 1;
			if(strval(inputtext) > 7000 || strval(inputtext) < 1) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√´√º√ß√ø √¨√•√≠√º√∏√• 1$ √® √°√Æ√´√º√∏√• 7000$");
			BizInfo[pData[playerid][pBusiness]][bCena][6] = strval(inputtext);
			SCMF(playerid,COLOR_MAIN,"√ç√Æ√¢√†√ø √∂√•√≠√† √≠√† 7 √≤√Æ√¢√†√∞: "CYELLOW"%d$",strval(inputtext));
			return UpdateBusinessData(pData[playerid][pBusiness], "bCena7",BizInfo[pData[playerid][pBusiness]][bCena][6]);
		}
	case 80: {
			if(!response) return 1;
			if(strval(inputtext) > 7000 || strval(inputtext) < 1) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√´√º√ß√ø √¨√•√≠√º√∏√• 1$ √® √°√Æ√´√º√∏√• 7000$");
			BizInfo[pData[playerid][pBusiness]][bCena][7] = strval(inputtext);
			SCMF(playerid,COLOR_MAIN,"√ç√Æ√¢√†√ø √∂√•√≠√† √≠√† 8 √≤√Æ√¢√†√∞: "CYELLOW"%d$",strval(inputtext));
			return UpdateBusinessData(pData[playerid][pBusiness], "bCena8",BizInfo[pData[playerid][pBusiness]][bCena][7]);
		}
	case 81: {
			if(!response) return 1;
			if(strval(inputtext) > 7000 || strval(inputtext) < 1) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√´√º√ß√ø √¨√•√≠√º√∏√• 1$ √® √°√Æ√´√º√∏√• 7000$");
			BizInfo[pData[playerid][pBusiness]][bCena][8] = strval(inputtext);
			SCMF(playerid,COLOR_MAIN,"√ç√Æ√¢√†√ø √∂√•√≠√† √≠√† 9 √≤√Æ√¢√†√∞: "CYELLOW"%d$",strval(inputtext));
			return UpdateBusinessData(pData[playerid][pBusiness], "bCena9",BizInfo[pData[playerid][pBusiness]][bCena][8]);
		}
	case 10092: {
			if(!response) return 1;
			return SPD(playerid, 10098, DIALOG_STYLE_LIST, "{FFCD00}√ë√Ø√®√±√Æ√™ √∞√†√°√Æ√≤", "[1] √Ç√Æ√§√®√≤√•√´√º √†√¢√≤√Æ√°√≥√±√†\t\t"CBLUE"2 √≥√∞√Æ√¢√•√≠√º\n"CWHITE"[2] √í√†√™√±√®√±√≤\t\t\t"CBLUE"3 √≥√∞√Æ√¢√•√≠√º\n"CWHITE"[3] √å√•√µ√†√≠√®√™\t\t\t"CBLUE"4 √≥√∞√Æ√¢√•√≠√º\n"CWHITE"[4] √ê√†√ß√¢√Æ√ß√∑√®√™ √Ø√∞√Æ√§√≥√™√≤√Æ√¢\t"CBLUE"5 √≥√∞√Æ√¢√•√≠√º", "Seleccione", "Cerrar");
		}
	case 70: {
			new h = GetPVarInt(playerid, "HouseID");
			if(!IsPlayerInRangeOfPoint(playerid, 3.0, HouseInfo[h][hExit][0], HouseInfo[h][hExit][1], HouseInfo[h][hExit][2]) && GetPlayerVirtualWorld(playerid) != h + 50) return 1;
			if(!h) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [017]");
			if(GetPVarInt(playerid, "homemove_delay") > gettime()) return SPD(playerid, 70, DIALOG_STYLE_MSGBOX, ""CERROR"√é√∏√®√°√™√†", ""CWHITE"√è√Æ√§√Æ√¶√§√®√≤√• 2 √±√•√™√≥√≠√§√ª...", "√ì√´√®√∂√†", "√Å√†√±√±√•√©√≠");
			if(!response) {
				if(pData[playerid][pHouse] == -1) return 1;
				if(HouseInfo[pData[playerid][pHouse]][hPool]) {
					load_mode(playerid);
					SetPlayerInterior(playerid, 1);
					SetPlayerVirtualWorld(playerid, h + 50);
					SetPlayerFacingAngle(playerid, 179.4019);
					SetPlayerPos(playerid,-1051.0314,453.9560,2.0479);
				}
				else return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [018]");
			}
			else {
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				SetPlayerPos(playerid,HouseInfo[h][hEnter][0],HouseInfo[h][hEnter][1],HouseInfo[h][hEnter][2]);
				DeletePVar(playerid, "HouseID");
				antiflood_move[playerid] = gettime() + 3;
			}
			SetPVarInt(playerid, "homemove_delay", gettime() + 2);
		}
	case 1194: {
		if(!response) return 1;
		SetPVarString(playerid, "name_allobj", inputtext);
		SPD(playerid,266,DIALOG_STYLE_LIST,"{FFCD00}√Ç√ª√°√•√∞√®√≤√• √§√•√©√±√≤√¢√®√•","√ì√±√≤√†√≠√Æ√¢√®√≤√º\n√Ç√ª√°√∞√Æ√±√®√≤√º","Seleccione","Siguiente");
	}
	case 266: {
		if(!response) {
			DeletePVar(playerid,"name_allobj");
			return callcmd::allobj(playerid);
		}
		new nameobj[40];
		GetPVarString(playerid, "name_allobj", nameobj, sizeof(nameobj));
		new query[128];
		switch(listitem) {
			case 0: {
				new h = pData[playerid][pHouse];
				if(h == -1) 
					return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± √§√Æ√´√¶√•√≠ √°√ª√≤√º √§√Æ√¨");
				if(GetPlayerVirtualWorld(playerid) != h + 50) 
					return SPD(playerid, 0,DIALOG_STYLE_MSGBOX,""CERROR"√é√∏√®√°√™√†",""CWHITE"√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √±√¢√Æ¬∏√¨ √§√Æ√¨√•","Cerrar","");
				mysql_format(mysql_Handle, query, sizeof(query), "SELECT * FROM `ownmebel` WHERE `homeOwn` = %i", h);
				mysql_tquery(mysql_Handle, query, "check_mebel_count", "i", playerid);
			}
			case 1: {
				format(query,sizeof(query), "DELETE FROM `buy_mebel` WHERE `obj_name` = '%s' AND `id_owner`=%d LIMIT 1",nameobj,pData[playerid][pID]);
				DeletePVar(playerid,"name_allobj");
				mysql_tquery(mysql_Handle, query);
				SCM(playerid,COLOR_ERROR,"√è√∞√•√§√¨√•√≤ √°√ª√´ √¢√ª√°√∞√Æ√∏√•√≠");
			}
		}
	}
	case 9900: {
			if(!response) return 1;
			switch(listitem) {
			case 0: {
					if(pData[playerid][pLicenses][0] == 1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≥√¶√• √•√±√≤√º √¢√Æ√§√®√≤√•√´√º√±√™√®√• √Ø√∞√†√¢√†");
					SPD(playerid, 1845, DIALOG_STYLE_MSGBOX, ""CMAIN"√à√≠√¥√Æ√∞√¨√†√∂√®√ø", ""CWHITE"√á√§√∞√†√¢√±√≤√¢√≥√©√≤√•! √Ñ√´√ø √Ø√Æ√´√≥√∑√•√≠√®√ø √¢√Æ√§√®√≤√•√´√º√±√™√®√µ √Ø√∞√†√¢ √Ç√†√¨ √≠√•√Æ√°√µ√Æ√§√®√¨√Æ\n√Ø√∞√Æ√©√≤√® √≠√•√°√Æ√´√º√∏√Æ√© √≤√•√±√≤ √®√ß 8 √¢√Æ√Ø√∞√Æ√±√Æ√¢ √® √±S√≠√≤√º √Ω√™√ß√†√¨√•√≠ √®√≠√±√≤√∞√≥√™√≤√Æ√∞√≥.\n√Ç√ª √¨√Æ√¶√•√≤√• √Æ√ß√≠√†√™√Æ√¨√®√≤√º√±√ø √±√Æ √¢√±√•√¨√® √Ø√∞√†√¢√®√´√†√¨√® √® √®√≠√¥√Æ√∞√¨√†√∂√®√•√© √¢\n√Ø√Æ√±√Æ√°√®√® √±√ß√†√§√® √Ç√†√±. √å√®√≠√®√¨√†√´√º√≠√ª√© √°√†√´√´ √§√´√ø √±S√≠√∑√®: 6 √¢√Æ√Ø√∞√Æ√±√Æ√¢,\n√±√≤√Æ√®√¨√Æ√±√≤√º √≤√•√±√≤√†: "CCYAN"500$"CWHITE". Quieres √≠√†√∑√†√≤√º √¢√ª√Ø√Æ√´√≠√•√≠√®√• √≤√•√±√≤√†?", "S√≠", "No");
				}
			case 1: {
					if(pData[playerid][pLicenses][1] == 1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≥√¶√• √•√±√≤√º √´√®√∂√•√≠√ß√®√ø √Ø√®√´√Æ√≤√†");
					SPD(playerid, 1945, DIALOG_STYLE_MSGBOX, ""CMAIN"√à√≠√¥√Æ√∞√¨√†√∂√®√ø", ""CWHITE"√á√§√∞√†√¢√±√≤√¢√≥√©√≤√•! √Ñ√´√ø √Ø√Æ√´√≥√∑√•√≠√®√ø √´√®√∂√•√≠√ß√®√® √Ø√®√´√Æ√≤√† √Ç√†√¨ √≠√•√Æ√°√µ√Æ√§√®√¨√Æ\n√Ø√∞√Æ√©√≤√® √≠√•√°√Æ√´√º√∏√Æ√© √≤√•√±√≤ √®√ß 8 √¢√Æ√Ø√∞√Æ√±√Æ√¢ √® √±S√≠√≤√º √Ω√™√ß√†√¨√•√≠ √®√≠√±√≤√∞√≥√™√≤√Æ√∞√≥.\n√Ç√ª √¨√Æ√¶√•√≤√• √Æ√ß√≠√†√™√Æ√¨√®√≤√º√±√ø √±√Æ √¢√±√•√¨√® √Ø√∞√†√¢√®√´√†√¨√® √® √®√≠√¥√Æ√∞√¨√†√∂√®√•√© √¢\n√Ø√Æ√±√Æ√°√®√® √±√ß√†√§√® √Ç√†√±. √å√®√≠√®√¨√†√´√º√≠√ª√© √°√†√´√´ √§√´√ø √±S√≠√∑√®: 6 √¢√Æ√Ø√∞√Æ√±√Æ√¢,\n√±√≤√Æ√®√¨√Æ√±√≤√º √≤√•√±√≤√†: "CCYAN"500$"CWHITE". Quieres √≠√†√∑√†√≤√º √¢√ª√Ø√Æ√´√≠√•√≠√®√• √≤√•√±√≤√†?", "S√≠", "No");
				}
			case 2: {
					if(pData[playerid][pLicenses][2] == 1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≥√¶√• √•√±√≤√º √´√®√∂√•√≠√ß√®√ø √≠√† √¢√Æ√§√≠√ª√© √≤√∞√†√≠√±√Ø√Æ√∞√≤");
					if(pData[playerid][pCash] < 25000) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Ø√∞√®√Æ√°√∞√•√≤√•√≠√®√ø S√≠√≠√≠√Æ√© √´√®√∂√•√≠√ß√®√®");
					pData[playerid][pLicenses][2] = 1;
					UpdatePlayerData(playerid, "pLic2", 1);
					Hook_GivePlayerMoney(playerid, -25000);
					GameTextForPlayer(playerid, "~r~-25000$", 3000, 1);
					SCM(playerid, COLOR_MAIN, "√Ç√ª √Ø√∞√®√Æ√°√∞√•√´√® √´√®√∂√•√≠√ß√®√æ √≠√† √¢√Æ√¶√§√•√≠√®√• √¢√Æ√§√≠√Æ√£√Æ √≤√∞√†√≠√±√Ø√Æ√∞√≤√†");
				}
			case 3: {
					if(pData[playerid][pLicenses][3] == 1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≥√¶√• √•√±√≤√º √´√®√∂√•√≠√ß√®√ø √≠√† √Æ√∞√≥√¶√®√•");
					if(pData[playerid][pCash] < 50000) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Ø√∞√®√Æ√°√∞√•√≤√•√≠√®√ø S√≠√≠√≠√Æ√© √´√®√∂√•√≠√ß√®√®");
					pData[playerid][pLicenses][3] = 1;
					UpdatePlayerData(playerid, "pLic3", 1);
					Hook_GivePlayerMoney(playerid, -50000);
					GameTextForPlayer(playerid, "~r~-50000$", 3000, 1);
					SCM(playerid, COLOR_MAIN, "√Ç√ª √Ø√∞√®√Æ√°√∞√•√´√® √´√®√∂√•√≠√ß√®√æ √≠√† √Æ√∞√≥√¶√®√•");
				}
			}
		}
	case 1845: {
		if(!response) return SPD(playerid,9900,2, "{FFCD00}√è√Æ√´√≥√∑√•√≠√®√• √´√®√∂√•√≠√ß√®√©", "√ç√†√ß√•√¨√≠√ª√© √≤√∞√†√≠√±√Ø√Æ√∞√≤\n√Ç√Æ√ß√§√≥√∏√≠√ª√© √≤√∞√†√≠√±√Ø√Æ√∞√≤\n√Ç√Æ√§√≠√ª√© √≤√∞√†√≠√±√Ø√Æ√∞√≤ "CCYAN"(25000$)\n"CWHITE"√é√∞√≥√¶√®√• "CCYAN"(50000$)", "Seleccione", "Cerrar");
		if(pData[playerid][pCash] < 500) return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Æ√Ø√´√†√≤√ª √≤√•√±√≤√†"), SPD(playerid,9900,2, "{FFCD00}√è√Æ√´√≥√∑√•√≠√®√• √´√®√∂√•√≠√ß√®√©", "√ç√†√ß√•√¨√≠√ª√© √≤√∞√†√≠√±√Ø√Æ√∞√≤\n√Ç√Æ√ß√§√≥√∏√≠√ª√© √≤√∞√†√≠√±√Ø√Æ√∞√≤\n√Ç√Æ√§√≠√ª√© √≤√∞√†√≠√±√Ø√Æ√∞√≤ "CCYAN"(25000$)\n"CWHITE"√é√∞√≥√¶√®√• "CCYAN"(50000$)", "Seleccione", "Cerrar");
		Hook_GivePlayerMoney(playerid, -500);
		GameTextForPlayer(playerid, "~r~-500$", 3000, 1);
		success_ans_vod[playerid] = 0;
		SCM(playerid, -1, "√è√∞√Æ√µ√Æ√¶√§√•√≠√®√• √≤√•√±√≤√† √≠√†√∑√†√≤√Æ. √é√≤√¢√•√≤√º√≤√• √Ø√∞√†√¢√®√´√º√≠√Æ "CLITEBLUE"√¨√®√≠√®√¨√≥√¨ √≠√† 6 √¢√Æ√Ø√∞√Æ√±√Æ√¢"CWHITE", √∑√≤√Æ√°√ª √±S√≠√≤√º √•√£√Æ");
		SPD(playerid, 1846, DIALOG_STYLE_TABLIST_HEADERS, "{cccc00}√Ç√Æ√Ø√∞√Æ√± ¬π1", "√Ç √™√†√™√Æ√¨ √±√´√≥√∑√†√• √∞√†√ß√∞√•√∏√•√≠√Æ √≠√•√Ø√Æ√§√∑√®√≠√•√≠√®√• √±√Æ√≤√∞√≥√§√≠√®√™√†√¨ √å√Ç√Ñ √® √å√é?\n[1] √Ö√±√´√® √±√Æ√≤√∞√≥√§√≠√®√™ √Ç√†√¨ √≠√• √Ø√Æ√≠√∞√†√¢√®√´√±√ø\n[2] √Ö√±√´√® √±√Æ√≤√∞√≥√§√≠√®√™ √≠√• √Æ√§√®√≠\n[3] √Ö√±√´√® √±√Æ√≤√∞√≥√§√≠√®√™ √≠√†√∞√≥√∏√†√•√≤ √ä√Æ√≠√±√≤√®√≤√≥√∂√®√æ √∏√≤√†√≤√†", "Seleccione", "√é√≤√¨. √¢√ª√Ø.");
	}
	case 1846: {
		if(!response) return SCM(playerid, 0xFF4D4DFF, "√Ç√ª √Æ√≤√¨√•√≠√®√´√® √¢√ª√Ø√Æ√´√≠√•√≠√®√• √≤√•√±√≤√†");
		if(listitem != 2) GameTextForPlayer(playerid, "~r~INCORRECT ANSWER", 3000, 6);
		else GameTextForPlayer(playerid, "~g~CORRECT ANSWER", 3000, 6), success_ans_vod[playerid] ++;
		SPD(playerid, 1847, DIALOG_STYLE_TABLIST_HEADERS, "{cccc00}√Ç√Æ√Ø√∞√Æ√± ¬π2", "√ê√†√ß√∞√•√∏√•√≠√Æ √´√® √≥√±√≤√∞√†√®√¢√†√≠√®√• √≠√•√´√•√£√†√´√º√≠√ª√µ √£√Æ√≠√Æ√™?\n[1] S√≠\n[2] No\n[3] √Å√ª√¢√†√æ√≤ √®√±√™√´√æ√∑√•√≠√®√ø", "Seleccione", "√é√≤√¨. √¢√ª√Ø.");
	}
	case 1847: {
		if(!response) return SCM(playerid, 0xFF4D4DFF, "√Ç√ª √Æ√≤√¨√•√≠√®√´√® √¢√ª√Ø√Æ√´√≠√•√≠√®√• √≤√•√±√≤√†");
		if(listitem != 1) GameTextForPlayer(playerid, "~r~INCORRECT ANSWER", 3000, 6);
		else GameTextForPlayer(playerid, "~g~CORRECT ANSWER", 3000, 6), success_ans_vod[playerid] ++;
		SPD(playerid, 1848, DIALOG_STYLE_TABLIST_HEADERS, "{cccc00}√Ç√Æ√Ø√∞√Æ√± ¬π3", "√É√§√• √∞√†√ß√∞√•√∏√•√≠√Æ √§√¢√®√¶√•√≠√®√• √†√¢√≤√Æ√¨√Æ√°√®√´√ø?\n[1] √è√Æ √´√•√¢√Æ√© √±√≤√Æ√∞√Æ√≠√• √§√Æ√∞√Æ√£√®\n[2] √è√Æ √Ø√∞√†√¢√Æ√© √±√≤√Æ√∞√Æ√£√• √§√Æ√∞√Æ√£√®\n[3] √è√Æ√±√•√∞√•√§√®√≠√• √§√Æ√∞√Æ√£√®\n[4] √è√Æ √Æ√°√Æ√∑√®√≠√•", "Seleccione", "√é√≤√¨. √¢√ª√Ø.");
	}
	case 1848: {
		if(!response) return SCM(playerid, 0xFF4D4DFF, "√Ç√ª √Æ√≤√¨√•√≠√®√´√® √¢√ª√Ø√Æ√´√≠√•√≠√®√• √≤√•√±√≤√†");
		if(listitem != 1) GameTextForPlayer(playerid, "~r~INCORRECT ANSWER", 3000, 6);
		else GameTextForPlayer(playerid, "~g~CORRECT ANSWER", 3000, 6), success_ans_vod[playerid] ++;
		SPD(playerid, 1849, DIALOG_STYLE_TABLIST_HEADERS, "{cccc00}√Ç√Æ√Ø√∞√Æ√± ¬π4", "√Ç √™√†√™√Æ√¨ √¨√•√±√≤√• √ß√†√Ø√∞√•√π√•√≠√† √Ø√†√∞√™√Æ√¢√™√† √†√¢√≤√Æ√¨√Æ√°√®√´√ø?\n[1] √ç√† √≤√∞√†√¢√•\n[2] √ç√† √Æ√°√Æ√∑√®√≠√• √§√Æ√∞√Æ√£√®\n[3] √ç√† √Ø√†√∞√™√Æ√¢√™√•", "Seleccione", "√é√≤√¨. √¢√ª√Ø.");
	}
	case 1849: {
		if(!response) return SCM(playerid, 0xFF4D4DFF, "√Ç√ª √Æ√≤√¨√•√≠√®√´√® √¢√ª√Ø√Æ√´√≠√•√≠√®√• √≤√•√±√≤√†");
		if(listitem != 0) GameTextForPlayer(playerid, "~r~INCORRECT ANSWER", 3000, 6);
		else GameTextForPlayer(playerid, "~g~CORRECT ANSWER", 3000, 6), success_ans_vod[playerid] ++;
		SPD(playerid, 1850, DIALOG_STYLE_TABLIST_HEADERS, "{cccc00}√Ç√Æ√Ø√∞√Æ√± ¬π5", "√ä√†√™√†√ø √™√´√†√¢√®√∏√† √Æ√≤√¢√•√∑√†√•√≤ √ß√† √ß√†√Ø√≥√±√™ √§√¢√®√£√†√≤√•√´√ø?\n[1] √ã√•√¢√ª√© CTRL\n[2] √è√∞√†√¢√ª√© ALT\n[3] √ã√•√¢√ª√© ALT\n[4] √è√∞√†√¢√ª√© CTRL\n[5] NUM 4", "Seleccione", "√é√≤√¨. √¢√ª√Ø.");
	}
	case 1850: {
		if(!response) return SCM(playerid, 0xFF4D4DFF, "√Ç√ª √Æ√≤√¨√•√≠√®√´√® √¢√ª√Ø√Æ√´√≠√•√≠√®√• √≤√•√±√≤√†");
		if(listitem != 0) GameTextForPlayer(playerid, "~r~INCORRECT ANSWER", 3000, 6);
		else GameTextForPlayer(playerid, "~g~CORRECT ANSWER", 3000, 6), success_ans_vod[playerid] ++;
		SPD(playerid, 1851, DIALOG_STYLE_TABLIST_HEADERS, "{cccc00}√Ç√Æ√Ø√∞√Æ√± ¬π6", "√ó√≤√Æ √Æ√ß√≠√†√∑√†√•√≤ √≠√†√§√Ø√®√±√º \"CAR HP 1000\" √≠√† √Ø√∞√®√°√Æ√∞√≠√Æ√© √Ø√†√≠√•√´√®?\n[1] √í√Æ√Ø√´√®√¢√≠√ª√© √°√†√™ √Ø√Æ√´√≠√Æ√±√≤√º√æ √ß√†√Ø√∞√†√¢√´√•√≠\n[2] √í√Æ√Ø√´√®√¢√≠√ª√© √°√†√™ √Ø√≥√±√≤\n[3] √Ä√¢√≤√Æ√¨√Æ√°√®√´√º √Ø√Æ√´√Æ√¨√†√≠\n[4] √Ä√¢√≤√Æ√¨√Æ√°√®√´√º √Ø√Æ√´√≠√Æ√±√≤√º√æ √∂√•√´\n[5] √ë√∞√•√§√® √Æ√≤√¢√•√≤√Æ√¢ No √Ø√∞√†√¢√®√´√º√≠√Æ√£√Æ √¢√†√∞√®√†√≠√≤√†", "Seleccione", "√é√≤√¨. √¢√ª√Ø.");
	}
	case 1851: {
		if(!response) return SCM(playerid, 0xFF4D4DFF, "√Ç√ª √Æ√≤√¨√•√≠√®√´√® √¢√ª√Ø√Æ√´√≠√•√≠√®√• √≤√•√±√≤√†");
		if(listitem != 3) GameTextForPlayer(playerid, "~r~INCORRECT ANSWER", 3000, 6);
		else GameTextForPlayer(playerid, "~g~CORRECT ANSWER", 3000, 6), success_ans_vod[playerid] ++;
		SPD(playerid, 1852, DIALOG_STYLE_TABLIST_HEADERS, "{cccc00}√Ç√Æ√Ø√∞√Æ√± ¬π7", "√ä√†√™ apagar √Æ√£√∞√†√≠√®√∑√®√≤√•√´√º √±√™√Æ√∞√Æ√±√≤√® √¢ √†√¢√≤√Æ√¨√Æ√°√®√´√•?\n[1] √ä√´√†√¢√®√∏√† NUM 4\n[2] √ä√Æ√¨√†√≠S√≠ /lock\n[3] √ä√´√†√¢√®√∏√† 2\n[4] √ä√´√†√¢√®√∏√† NUM 2", "Seleccione", "√é√≤√¨. √¢√ª√Ø.");
	}
	case 1852: {
		if(!response) return SCM(playerid, 0xFF4D4DFF, "√Ç√ª √Æ√≤√¨√•√≠√®√´√® √¢√ª√Ø√Æ√´√≠√•√≠√®√• √≤√•√±√≤√†");
		if(listitem != 0) GameTextForPlayer(playerid, "~r~INCORRECT ANSWER", 3000, 6);
		else GameTextForPlayer(playerid, "~g~CORRECT ANSWER", 3000, 6), success_ans_vod[playerid] ++;
		SPD(playerid, 1853, DIALOG_STYLE_TABLIST_HEADERS, "{cccc00}√Ç√Æ√Ø√∞√Æ√± ¬π8", "√ä√†√™ √¢√™√´√æ√∑√®√≤√º √¥√†√∞√ª √¢ √†√¢√≤√Æ√¨√Æ√°√®√´√•?\n[1] √è√∞√†√¢√ª√© ALT\n[2] √ã√•√¢√ª√© ALT\n[3] √ä√Æ√¨√†√≠S√≠ /fill\n[4] √è√∞√Æ√°√•√´", "Seleccione", "√é√≤√¨. √¢√ª√Ø.");
	}
	case 1853: {
		if(!response) return SCM(playerid, 0xFF4D4DFF, "√Ç√ª √Æ√≤√¨√•√≠√®√´√® √¢√ª√Ø√Æ√´√≠√•√≠√®√• √≤√•√±√≤√†");
		if(listitem == 1) success_ans_vod[playerid] ++;
		new str_ashtext[220];
		if(success_ans_vod[playerid] < 6) {
			format(str_ashtext, 220, ""CWHITE"√ä √±√Æ√¶√†√´√•√≠√®√æ, √≤√•√±√≤ √≠√• √°√ª√´ √±S√≠√≠\n\n√å√®√≠√®√¨√†√´√º√≠√Æ√• √™√Æ√´-√¢√Æ √Ø√∞√†√¢√®√´√º√≠√ª√µ √Æ√≤√¢√•√≤√Æ√¢: "CERROR"6\n"CWHITE"√ä√Æ√´-√¢√Æ √Ç√†√∏√®√µ √Ø√∞√†√¢√®√´√º√≠√ª√µ √Æ√≤√¢√•√≤√Æ√¢: {cccc66}%d", success_ans_vod[playerid]);
			SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CPALEGREEN"√à√≠√¥√Æ√∞√¨√†√∂√®√ø", str_ashtext, "Cerrar", "");
		}
		else {
			SCM(playerid,COLOR_MAIN,"√Ç√ª √Ø√Æ√´√≥√∑√®√´√® √¢√Æ√§√®√≤√•√´√º√±√™√®√• √Ø√∞√†√¢√†");
			PlayerPlaySound(playerid, 17001, 0.0, 0.0, 0.0);
			format(str_ashtext, 130, ""CWHITE"√è√Æ√ß√§√∞√†√¢√´√ø√•√¨! √Ç√ª √±S√≠√´√® √≤√•√±√≤ √® √Ø√Æ√´√≥√∑√®√´√® √Ø√∞√†√¢√†\n√ä√Æ√´√®√∑√•√±√≤√¢√Æ √Ø√∞√†√¢√®√´√º√≠√ª√µ √Æ√≤√¢√•√≤√Æ√¢: {cccc66}%d", success_ans_vod[playerid]);
			SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CPALEGREEN"√à√≠√¥√Æ√∞√¨√†√∂√®√ø", str_ashtext, "Cerrar", "");

			pData[playerid][pLicenses][0] = 1;
			UpdatePlayerData(playerid, "pLic0", 1);
			/*
			new instr = 0;
			foreach(new i:Player) {
				if(pData[i][pMember] != 11) continue;
				instr ++;
			}
			if(instr <= 0) {
				pData[playerid][pLicenses][0] = 1;
				UpdatePlayerData(playerid, "pLic0", 1);
				return SCM(playerid, COLOR_MAIN, "√Ç √±√¢√ø√ß√® √± √≤√•√¨, √∑√≤√Æ √¢ √±√•√≤√® No √®√≠√±√≤√∞√≥√™√≤√Æ√∞√Æ√¢, √¢√†√¨ √°√ª√´√† √¢√ªS√≠√≠√† √´√®√∂√•√≠√ß√®√ø");
			}
			else instr = 0;
			if(gDSTurn[19] != INVALID_PLAYER_ID) return SCM(playerid, COLOR_GREY, "√ä √±√Æ√¶√†√´√•√≠√®√æ, √¢√±√• √¨√•√±√≤√† √¢ √Æ√∑√•√∞√•√§√® √ß√†√≠√ø√≤√ª");
			for(new i=19;i>=0;i--) {
				if(gDSTurn[i] == playerid) return SCM(playerid, COLOR_GREY, "√Ç√ª √≥√¶√• √±√≤√Æ√®√≤√• √¢ √Æ√∑√•√∞√•√§√®");
				if(i && gDSTurn[i] == INVALID_PLAYER_ID) continue;
				gDSTurn[i + 1] = playerid;
				break;
			}
			pTemp[playerid][pExamType] = false;
			pTemp[playerid][pWaitingExam] = true;
			SCM(playerid, COLOR_MAIN, "√é√¶√®S√≠√©√≤√•, √Ç√†√± √¢√ª√ß√Æ√¢√≥√≤ √§√´√ø √Ø√∞√Æ√µ√Æ√¶√§√•√≠√®√ø √Ω√™√ß√†√¨√•√≠√†. √ç√• √¢√ª√µ√Æ√§√®√≤√• √®√ß √Ø√Æ√¨√•√π√•√≠√®√ø");
			*/
		}
	}
	case 256: {
		if(response) {
			new listit = GetPVarInt(playerid, "listSellcar");
			new priceat = pData[playerid][p_car_cash][listit - 1]/100*60;
			new strgmt[60];
			format(strgmt, sizeof(strgmt), "~g~+%d$ ~n~~g~ bank", priceat);
			GameTextForPlayer(playerid, strgmt, 3000, 1);
			Hook_GivePlayerMoney(playerid, priceat);
			SCMF(playerid, 0x6AB1FFFF, "√í√∞√†√≠√±√Ø√Æ√∞√≤ ¬π%d √≥√±√Ø√•√∏√≠√Æ √Ø√∞√ÆS√≠√≠ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥ √ß√† {00cc00}%i$", listit, priceat);

			new query[140];
			mysql_format(mysql_Handle, query, sizeof(query), "DELETE FROM `tuneobjects` WHERE `accountid`='%d' AND `numcar` = '%d'",
			pData[playerid][pID],listit - 1);
			mysql_tquery(mysql_Handle, query);

			pData[playerid][pCar][listit - 1] = 0;
			pData[playerid][p_car_cash][listit - 1] = 0;
			DestroyVehicle(house_carid[playerid][listit - 1]);
			house_carid[playerid][listit - 1] = 0;
			pData[playerid][Un_CarType][listit - 1] = 0;
			pData[playerid][t_wheel][listit - 1] = 0;
			pData[playerid][t_hydraulics][listit - 1] = 0;
			pData[playerid][t_neon_num][listit - 1] = -1;
			pData[playerid][t_stereo][listit - 1] = 0;
			pData[playerid][t_paintjob][listit - 1] = -1;
			pData[playerid][t_color_1][listit - 1] = -1;
			pData[playerid][t_color_2][listit - 1] = -1;
			strmid(num_plate[playerid][listit - 1], "None", 0, strlen("None"), 255);

			switch(listit) {
				case 1: {
					strmid(p_car_charact_1[playerid], "0, 0, 0, 0, 0, 0, 0", 0, 20, 255);
					UpdatePlayerDataEx(playerid, "p_car_charact_1", "0, 0, 0, 0, 0, 0, 0");
					UpdatePlayerData(playerid, "t_wheel_car_1", 0);
					UpdatePlayerData(playerid, "t_hydraulics_car_1", 0);
					UpdatePlayerData(playerid, "t_neon_num_1", -1);
					UpdatePlayerData(playerid, "t_stereo_car_1", 0);
					UpdatePlayerData(playerid, "t_paintjob_car_1", -1);
					UpdatePlayerData(playerid, "t_color_1_1", -1);
					UpdatePlayerData(playerid, "t_color_2_1", -1);
					UpdatePlayerData(playerid, "pCar",0);
					UpdatePlayerData(playerid, "Un_CarType_1", 0);
					UpdatePlayerData(playerid, "p_car_cash_1", 0);
					UpdatePlayerDataEx(playerid, "num_plate_1", "None");
				}
				case 2: {
					strmid(p_car_charact_2[playerid], "0, 0, 0, 0, 0, 0, 0", 0, 20, 255);
					UpdatePlayerDataEx(playerid, "p_car_charact_2", "0, 0, 0, 0, 0, 0, 0");
					UpdatePlayerData(playerid, "t_wheel_car_2", 0);
					UpdatePlayerData(playerid, "t_neon_num_2", -1);
					UpdatePlayerData(playerid, "t_hydraulics_car_2", 0);
					UpdatePlayerData(playerid, "t_stereo_car_2", 0);
					UpdatePlayerData(playerid, "t_paintjob_car_2", -1);
					UpdatePlayerData(playerid, "t_color_1_2", -1);
					UpdatePlayerData(playerid, "t_color_2_2", -1);
					UpdatePlayerData(playerid, "pCar2", 0);
					UpdatePlayerData(playerid, "Un_CarType_2", 0);
					UpdatePlayerData(playerid, "p_car_cash_2", 0);
					UpdatePlayerDataEx(playerid, "num_plate_2", "None");
				}
				case 3: {
					strmid(p_car_charact_3[playerid], "0, 0, 0, 0, 0, 0, 0", 0, 20, 255);
					UpdatePlayerDataEx(playerid, "p_car_charact_3", "0, 0, 0, 0, 0, 0, 0");
					UpdatePlayerData(playerid, "t_wheel_car_3", 0);
					UpdatePlayerData(playerid, "t_neon_num_3", -1);
					UpdatePlayerData(playerid, "t_hydraulics_car_3", 0);
					UpdatePlayerData(playerid, "t_stereo_car_3", 0);
					UpdatePlayerData(playerid, "t_paintjob_car_3", -1);
					UpdatePlayerData(playerid, "t_color_1_3", -1);
					UpdatePlayerData(playerid, "t_color_2_3", -1);
					UpdatePlayerData(playerid, "pCar3", 0);
					UpdatePlayerData(playerid, "Un_CarType_3", 0);
					UpdatePlayerData(playerid, "p_car_cash_3", 0);
					UpdatePlayerDataEx(playerid, "num_plate_3", "None");
				}
			}
		}
		DeletePVar(playerid, "listSellcar");
	}
	case 4938: {
		if(!response) return 1;
		if(!listitem) return callcmd::sellcar(playerid);
		if(pData[playerid][pCar][listitem - 1] == 0) return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± √Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤ √†√¢√≤√Æ√¨√Æ√°√®√´√º √Ø√Æ√§ S√≠√≠√≠√ª√¨ √≠√Æ√¨√•√∞√Æ√¨");
		SetPVarInt(playerid, "listSellcar", listitem);
		new autostr[150];
		format(autostr,sizeof(autostr),""CWHITE"Quieres √Ø√∞√ÆS√≠√≤√º √Ω√≤√Æ√≤ √≤√∞√†√≠√±√Ø√Æ√∞√≤ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥?\n√Ç√ª √Ø√Æ√´√≥√∑√®√≤√• 60%% √Æ√≤ √£√Æ√±. √±√≤√Æ√®√¨√Æ√±√≤√® {FFCD00}(%d$)",pData[playerid][p_car_cash][listitem - 1]/100*60);
		SPD(playerid,256,DIALOG_STYLE_MSGBOX,"√è√∞√ÆS√≠√¶√† √≤√∞√†√≠√±√Ø√Æ√∞√≤√†",autostr,"S√≠","No");
	}
	case 1945: {
		if(!response) return SPD(playerid,9900,2, "{FFCD00}√è√Æ√´√≥√∑√•√≠√®√• √´√®√∂√•√≠√ß√®√©", "√ç√†√ß√•√¨√≠√ª√© √≤√∞√†√≠√±√Ø√Æ√∞√≤\n√Ç√Æ√ß√§√≥√∏√≠√ª√© √≤√∞√†√≠√±√Ø√Æ√∞√≤\n√Ç√Æ√§√≠√ª√© √≤√∞√†√≠√±√Ø√Æ√∞√≤ "CCYAN"(25000$)\n"CWHITE"√é√∞√≥√¶√®√• "CCYAN"(50000$)", "Seleccione", "Cerrar");
		if(pData[playerid][pCash] < 500) return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Æ√Ø√´√†√≤√ª √≤√•√±√≤√†"), SPD(playerid,9900,2, "{FFCD00}√è√Æ√´√≥√∑√•√≠√®√• √´√®√∂√•√≠√ß√®√©", "√ç√†√ß√•√¨√≠√ª√© √≤√∞√†√≠√±√Ø√Æ√∞√≤\n√Ç√Æ√ß√§√≥√∏√≠√ª√© √≤√∞√†√≠√±√Ø√Æ√∞√≤\n√Ç√Æ√§√≠√ª√© √≤√∞√†√≠√±√Ø√Æ√∞√≤ "CCYAN"(25000$)\n"CWHITE"√é√∞√≥√¶√®√• "CCYAN"(50000$)", "Seleccione", "Cerrar");
		Hook_GivePlayerMoney(playerid, -500);
		GameTextForPlayer(playerid, "~r~-500$", 3000, 1);
		success_ans_vod[playerid] = 0;
		SCM(playerid, -1, "√è√∞√Æ√µ√Æ√¶√§√•√≠√®√• √≤√•√±√≤√† √≠√†√∑√†√≤√Æ. √é√≤√¢√•√≤√º√≤√• √Ø√∞√†√¢√®√´√º√≠√Æ "CLITEBLUE"√¨√®√≠√®√¨√≥√¨ √≠√† 6 √¢√Æ√Ø√∞√Æ√±√Æ√¢"CWHITE", √∑√≤√Æ√°√ª √±S√≠√≤√º √•√£√Æ");
		SPD(playerid, 1946, DIALOG_STYLE_TABLIST_HEADERS, "{cccc00}√Ç√Æ√Ø√∞√Æ√± ¬π1", "√ä√†√™ √∞√†√±√∏√®√¥√∞√Æ√¢√ª√¢√†√•√≤√±√ø √è√è√≠√Ç√í?\n[1] √è√∞√®√™√†√ß√≠√ª√• √è√†√≤√∞√≥√´√® √≠√† √Ç√Æ√•√≠√≠√Æ√© √í√•√µ√≠√®√™√•\n[2] √è√•√∞√¢√Æ√• √è√∞√†√¢√®√´√Æ √≠√† √Ç√±¬∏ √í√Æ√¢√†√∞√®√π√•√±√≤√¢√Æ\n[3] √è√∞√†√¢√®√´√† √è√Æ√´¬∏√≤√† √≠√† √Ç√Æ√ß√§√≥√∏√≠√Æ√¨ √í√∞√†√≠√±√Ø√Æ√∞√≤√•", "Seleccione", "√é√≤√¨. √¢√ª√Ø.");
	}
	case 1946: {
		if(!response) return SCM(playerid, 0xFF4D4DFF, "√Ç√ª √Æ√≤√¨√•√≠√®√´√® √¢√ª√Ø√Æ√´√≠√•√≠√®√• √≤√•√±√≤√†");
		if(listitem != 2) GameTextForPlayer(playerid, "~r~INCORRECT ANSWER", 3000, 6);
		else GameTextForPlayer(playerid, "~g~CORRECT ANSWER", 3000, 6), success_ans_vod[playerid] ++;
		SPD(playerid, 1947, DIALOG_STYLE_TABLIST_HEADERS, "{cccc00}√Ç√Æ√Ø√∞√Æ√± ¬π2", "√É√§√• √∞√†√ß√∞√•√∏√•√≠√Æ √Ø√∞√Æ√®√ß√¢√Æ√§√®√≤√º √Ø√Æ√±√†√§√™√≥ √® √¢√ß√´¬∏√≤?\n[1] √ç√† √¢√Æ√•√≠√≠√ª√µ √°√†√ß√†√µ\n[2] √ç√† √§√Æ√∞√Æ√£√•\n[3] √ç√† √≤√∞√Æ√≤√≥√†√∞√•\n[4] √ç√† √≤√∞√†√¢√•", "Seleccione", "√é√≤√¨. √¢√ª√Ø.");
	}
	case 1947: {
		if(!response) return SCM(playerid, 0xFF4D4DFF, "√Ç√ª √Æ√≤√¨√•√≠√®√´√® √¢√ª√Ø√Æ√´√≠√•√≠√®√• √≤√•√±√≤√†");
		if(listitem != 0) GameTextForPlayer(playerid, "~r~INCORRECT ANSWER", 3000, 6);
		else GameTextForPlayer(playerid, "~g~CORRECT ANSWER", 3000, 6), success_ans_vod[playerid] ++;
		SPD(playerid, 1948, DIALOG_STYLE_TABLIST_HEADERS, "{cccc00}√Ç√Æ√Ø√∞√Æ√± ¬π3", "√ó√≤√Æ √®√ß √Ω√≤√Æ√£√Æ √±√Ø√®√±√™√† √ß√†√Ø√∞√•√π√•√≠√Æ?\n[1] √ë√†√§√®√≤√º√±√ø √± √¢√ª√Ø√≥√π√•√≠√≠√ª√¨√® √∏√†√±√±√®\n[2] √ã√•√≤√†√≤√º √¢√ª√±√Æ√™√Æ √Æ√≤ √ß√•√¨√´√®\n[3] √ã√•√≤√†√≤√º √± √¢√ª√Ø√≥√π√•√≠√≠√ª√¨√® √∏√†√±√±√®", "Seleccione", "√é√≤√¨. √¢√ª√Ø.");
	}
	case 1948: {
		if(!response) return SCM(playerid, 0xFF4D4DFF, "√Ç√ª √Æ√≤√¨√•√≠√®√´√® √¢√ª√Ø√Æ√´√≠√•√≠√®√• √≤√•√±√≤√†");
		if(listitem != 2) GameTextForPlayer(playerid, "~r~INCORRECT ANSWER", 3000, 6);
		else GameTextForPlayer(playerid, "~g~CORRECT ANSWER", 3000, 6), success_ans_vod[playerid] ++;
		SPD(playerid, 1949, DIALOG_STYLE_TABLIST_HEADERS, "{cccc00}√Ç√Æ√Ø√∞√Æ√± ¬π4", "√ó√≤√Æ √®√ß √Ω√≤√Æ√£√Æ √±√Ø√®√±√™√† √∞√†√ß√∞√•√∏√•√≠√Æ?\n[1] √ã√•√≤√†√≤√º √°√´√®√ß√™√Æ √™ √ß√•√¨√´√• √≠√† √¢√ª√±√Æ√™√Æ√© √±√™√Æ√∞√Æ√±√≤√®\n[2] √Ç√ª√Ø√Æ√´√≠√ø√≤√º √≤√∞√æ√™√® √¢ √±√Ø√•√∂. √¨√•√±√≤√†√µ\n[3] √ã√•√≤√†√≤√º √± √¢√ª√Ø√≥√π√•√≠√≠√ª√¨√® √∏√†√±√±√®", "Seleccione", "√é√≤√¨. √¢√ª√Ø.");
	}
	case 1949: {
		if(!response) return SCM(playerid, 0xFF4D4DFF, "√Ç√ª √Æ√≤√¨√•√≠√®√´√® √¢√ª√Ø√Æ√´√≠√•√≠√®√• √≤√•√±√≤√†");
		if(listitem != 1) GameTextForPlayer(playerid, "~r~INCORRECT ANSWER", 3000, 6);
		else GameTextForPlayer(playerid, "~g~CORRECT ANSWER", 3000, 6), success_ans_vod[playerid] ++;
		SPD(playerid, 1950, DIALOG_STYLE_TABLIST_HEADERS, "{cccc00}√Ç√Æ√Ø√∞√Æ√± ¬π5", "√ä√†√™√†√ø √™√´√†√¢√®√∏√† √®√±√Ø√Æ√´√º√ß√≥√•√≤√±√ø √§√´√ø √¢√Ø√≥√±√™√†/√¢√ª√Ø√≥√±√™√† √∏√†√±√±√®?\n[1] √ä√´√†√¢√®√∏√† NUM +\n[2] √è√∞√†√¢√ª√© CTRL\n[3] √ä√´√†√¢√®√∏√† NUM 2\n[4] √ä√´√†√¢√®√∏√† 3", "Seleccione", "√é√≤√¨. √¢√ª√Ø.");
	}
	case 1950: {
		if(!response) return SCM(playerid, 0xFF4D4DFF, "√Ç√ª √Æ√≤√¨√•√≠√®√´√® √¢√ª√Ø√Æ√´√≠√•√≠√®√• √≤√•√±√≤√†");
		if(listitem != 0) GameTextForPlayer(playerid, "~r~INCORRECT ANSWER", 3000, 6);
		else GameTextForPlayer(playerid, "~g~CORRECT ANSWER", 3000, 6), success_ans_vod[playerid] ++;
		SPD(playerid, 1951, DIALOG_STYLE_TABLIST_HEADERS, "{cccc00}√Ç√Æ√Ø√∞√Æ√± ¬π6", "√ä√†√™√†√ø √™√´√†√¢√®√∏√† √Æ√≤√¢√•√∑√†√•√≤ √ß√† √ß√†√Ø√≥√±√™ √§√¢√®√£√†√≤√•√´√ø?\n[1] √ä√´√†√¢√®√∏√† NUM +\n[2] √ã√•√¢√ª√© CTRL\n[3] √ä√´√†√¢√®√∏√† NUM 3\n[4] √è√∞√†√¢√ª√© ALT", "Seleccione", "√é√≤√¨. √¢√ª√Ø.");
	}
	case 1951: {
		if(!response) return SCM(playerid, 0xFF4D4DFF, "√Ç√ª √Æ√≤√¨√•√≠√®√´√® √¢√ª√Ø√Æ√´√≠√•√≠√®√• √≤√•√±√≤√†");
		if(listitem != 1) GameTextForPlayer(playerid, "~r~INCORRECT ANSWER", 3000, 6);
		else GameTextForPlayer(playerid, "~g~CORRECT ANSWER", 3000, 6), success_ans_vod[playerid] ++;
		SPD(playerid, 1952, DIALOG_STYLE_TABLIST_HEADERS, "{cccc00}√Ç√Æ√Ø√∞√Æ√± ¬π7", "√ä√†√™√®√• √™√´√†√¢√®√∏√® √®√±√Ø√Æ√´√º√ß√≥√æ√≤√±√ø √§√´√ø √≥√Ø√∞√†√¢√´√•√≠√®√ø √∏√≤√≥√∞√¢√†√´√Æ√¨?\n[1] Q √® E\n[2] W √® S\n[3] A √® D\n[4] NUM 8 √® NUM 2\n[5] √ë√∞√•√§√® √Æ√≤√¢√•√≤√Æ√¢ No √Ø√∞√†√¢√®√´√º√≠√Æ√£√Æ √¢√†√∞√®√†√≠√≤√†", "Seleccione", "√é√≤√¨. √¢√ª√Ø.");
	}
	case 1952: {
		if(!response) return SCM(playerid, 0xFF4D4DFF, "√Ç√ª √Æ√≤√¨√•√≠√®√´√® √¢√ª√Ø√Æ√´√≠√•√≠√®√• √≤√•√±√≤√†");
		if(listitem != 0) GameTextForPlayer(playerid, "~r~INCORRECT ANSWER", 3000, 6);
		else GameTextForPlayer(playerid, "~g~CORRECT ANSWER", 3000, 6), success_ans_vod[playerid] ++;
		SPD(playerid, 1953, DIALOG_STYLE_TABLIST_HEADERS, "{cccc00}√Ç√Æ√Ø√∞√Æ√± ¬π8", "√ó√≤√Æ √Æ√ß√≠√†√∑√†√•√≤ √≠√†√§√Ø√®√±√º \"FUEL 50\" √≠√† √Ø√∞√®√°√Æ√∞√≠√Æ√© √Ø√†√≠√•√´√®?\n[1] √Ä√¢√≤√Æ√¨√Æ√°√®√´√º √Ø√Æ√´√Æ√¨√†√≠\n[2] √Ä√¢√≤√Æ√¨√Æ√°√®√´√º √Ø√Æ√´√≠√Æ√±√≤√º√æ √∂√•√´\n[3] √í√Æ√Ø√´√®√¢√≠√ª√© √°√†√™ √Ø√Æ√´√Æ√≠\n[4] √Ç √°√†√™√• √Æ√±√≤√†√´√Æ√±√º 50 √´√®√≤√∞√Æ√¢ √≤√Æ√Ø√´√®√¢√†", "Seleccione", "√é√≤√¨. √¢√ª√Ø.");
	}
	case 1953: {
		if(!response) return SCM(playerid, 0xFF4D4DFF, "√Ç√ª √Æ√≤√¨√•√≠√®√´√® √¢√ª√Ø√Æ√´√≠√•√≠√®√• √≤√•√±√≤√†");
		if(listitem == 3) success_ans_vod[playerid] ++;
		new str_ashtext[175];
		if(success_ans_vod[playerid] < 6) {
			format(str_ashtext, 175, ""CWHITE"√ä √±√Æ√¶√†√´√•√≠√®√æ, √≤√•√±√≤ √≠√• √°√ª√´ √±S√≠√≠\n\n√å√®√≠√®√¨√†√´√º√≠√Æ√• √™√Æ√´-√¢√Æ √Ø√∞√†√¢√®√´√º√≠√ª√µ √Æ√≤√¢√•√≤√Æ√¢: "CERROR"6\n"CWHITE"√ä√Æ√´-√¢√Æ √Ç√†√∏√®√µ √Ø√∞√†√¢√®√´√º√≠√ª√µ √Æ√≤√¢√•√≤√Æ√¢: {cccc66}%d", success_ans_vod[playerid]);
			SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CPALEGREEN"√à√≠√¥√Æ√∞√¨√†√∂√®√ø", str_ashtext, "Cerrar", "");
		}
		else {
			SCM(playerid,COLOR_MAIN,"√Ç√ª √Ø√Æ√´√≥√∑√®√´√® √´√®√∂√•√≠√ß√®√æ √Ø√®√´√Æ√≤√†");
			PlayerPlaySound(playerid, 17001, 0.0, 0.0, 0.0);
			format(str_ashtext, 115, ""CWHITE"√è√Æ√ß√§√∞√†√¢√´√ø√•√¨! √Ç√ª √±S√≠√´√® √≤√•√±√≤ √® √Ø√Æ√´√≥√∑√®√´√® √´√®√∂√•√≠√ß√®√æ\n√ä√Æ√´√®√∑√•√±√≤√¢√Æ √Ø√∞√†√¢√®√´√º√≠√ª√µ √Æ√≤√¢√•√≤√Æ√¢: {cccc66}%d", success_ans_vod[playerid]);
			SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CPALEGREEN"√à√≠√¥√Æ√∞√¨√†√∂√®√ø", str_ashtext, "Cerrar", "");

			pData[playerid][pLicenses][1] = 1;
			UpdatePlayerData(playerid, "pLic1", 1);
			/*
			new instr = 0;
			foreach(new i:Player) {
				if(pData[i][pMember] != 11) continue;
				instr ++;
			}
			if(instr <= 0) {
				pData[playerid][pLicenses][1] = 1;
				UpdatePlayerData(playerid, "pLic1", 1);
				return SCM(playerid, COLOR_MAIN, "√Ç √±√¢√ø√ß√® √± √≤√•√¨, √∑√≤√Æ √¢ √±√•√≤√® No √®√≠√±√≤√∞√≥√™√≤√Æ√∞√Æ√¢, √¢√†√¨ √°√ª√´√† √¢√ªS√≠√≠√† √´√®√∂√•√≠√ß√®√ø");
			}
			else instr = 0;
			if(gDSTurn[19] != INVALID_PLAYER_ID) return SCM(playerid, COLOR_GREY, "√ä √±√Æ√¶√†√´√•√≠√®√æ √¢√±√• √¨√•√±√≤√† √¢ √Æ√∑√•√∞√•√§√® √ß√†√≠√ø√≤√ª");
			for(new i=19;i>=0;i--) {
				if(gDSTurn[i] == playerid) return SCM(playerid, COLOR_GREY, "√Ç√ª √≥√¶√• √±√≤√Æ√®√≤√• √¢ √Æ√∑√•√∞√•√§√®");
				if(i && gDSTurn[i] == INVALID_PLAYER_ID) continue;
				gDSTurn[i + 1] = playerid;
				break;
			}
			pTemp[playerid][pWaitingExam] = true;
			pTemp[playerid][pExamType] = true;
			SCM(playerid, COLOR_MAIN, "√é√¶√®S√≠√©√≤√•, √Ç√†√± √¢√ª√ß√Æ√¢√≥√≤ √§√´√ø √Ø√∞√Æ√µ√Æ√¶√§√•√≠√®√ø √Ω√™√ß√†√¨√•√≠√†. √ç√• √¢√ª√µ√Æ√§√®√≤√• √®√ß √Ø√Æ√¨√•√π√•√≠√®√ø");
			*/
		}
	}
	case 9921: {
			if(!response) return 1;
			new actplayerid = pTemp[playerid][pExamCandidate];
			if(!IsPlayerConnected(actplayerid) || !pTemp[actplayerid][pOnExam]) return SCM(playerid, 0xFFFFFFFF,"√ù√™√ß√†√¨√•√≠√≥√•√¨√ª√© √¢√ª√∏√•√´. √ù√™√ß√†√¨√•√≠ √ß√†√¢√•√∞√∏√•√≠");
			if(!listitem) return 1;
			switch(listitem) {
				case 1: {
					if(pTemp[actplayerid][pExamType] == false) pData[actplayerid][pLicenses][0] = 1;
					if(pTemp[actplayerid][pExamType] == true) pData[actplayerid][pLicenses][1] = 1;
					UpdatePlayerData(playerid, "pLic0", pData[actplayerid][pLicenses][0]);
					UpdatePlayerData(playerid, "pLic1", pData[actplayerid][pLicenses][1]);
					SCM(actplayerid,COLOR_MAIN, "√ù√™√ß√†√¨√•√≠ √≥√±√Ø√•√∏√≠√Æ √±S√≠√≠. √è√Æ√ß√§√∞√†√¢√´√ø√•√¨");
				}
				case 2: SCM(actplayerid,COLOR_ERROR, "√à√≠√±√≤√∞√≥√™√≤√Æ√∞ √≥√™√†√ß√†√´, √∑√≤√Æ √Ç√ª √Ø√∞√Æ√¢√†√´√®√´√® √Ω√™√ß√†√¨√•√≠");
			}
			SCM(playerid, COLOR_MAIN, "√ù√™√ß√†√¨√•√≠ √ß√†√¢√•√∞√∏√•√≠");
			pTemp[playerid][pOnExam] = false;
			pTemp[playerid][pExamCandidate] = INVALID_PLAYER_ID;
			pTemp[actplayerid][pOnExam] = false;
		}
	case 6622: {
			if(response) {
				if(pData[playerid][pCash] < GetPVarInt(playerid, "FreePrice")) {
					SCM(GetPVarInt(playerid, "FreeOffer"), COLOR_GREY, "√ì √Ω√≤√Æ√£√Æ √®√£√∞√Æ√™√† No √±√≤√Æ√´√º√™√Æ √§√•√≠√•√£ √≠√†√´√®√∑√≠√ª√¨√®");
					return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± No √±√≤√Æ√´√º√™√Æ √§√•√≠√•√£");
				}
				new price_adv = GetPVarInt(playerid, "FreePrice")/10;
				GivePayDayMoney(playerid, price_adv);
				format(string, 50, "~w~FREE~n~~b~%s~n~~g~+%d$", GetName(playerid), price_adv);
				GameTextForPlayer(GetPVarInt(playerid, "FreeOffer"), string, 2000, 4);
				Hook_GivePlayerMoney(playerid, -GetPVarInt(playerid, "FreePrice"));
				SCMF(playerid,COLOR_BLUE,"√Ä√§√¢√Æ√™√†√≤ %s √¢√ª√Ø√≥√±√≤√®√´ √Ç√†√± √ß√† %d$", pData[GetPVarInt(playerid, "FreeOffer")][pName], GetPVarInt(playerid, "FreePrice"));
				SCMF(GetPVarInt(playerid, "FreeOffer"),COLOR_BLUE,"√Ç√ª √¢√ª√Ø√≥√±√≤√®√´√® %s √ß√† %d$",pData[playerid][pName], GetPVarInt(playerid, "FreePrice"));
				SCM(GetPVarInt(playerid, "FreeOffer"), -1, "√Ç√†√¨ √°√≥√§√•√≤ √¢√ª√Ø√´√†√∑√•√≠√Æ "CMAIN"10 √Ø√∞√Æ√∂√•√≠√≤√Æ√¢ "CWHITE"√Æ√≤ √±√≤√Æ√®√¨√Æ√±√≤√® √Æ√±√¢√Æ√°√Æ√¶√§√•√≠√®√ø √¢√Æ √¢√∞√•√¨√ø √ß√†√∞√Ø√´√†√≤√ª");
				pData[playerid][pJailTime] = 1;
				pData[playerid][pWanted] = 0;
				mysql_format(mysql_Handle, string, 144, "UPDATE `accounts` SET `pJailTime` = '1', `pWanted` = '0' WHERE `id` = %d", pData[playerid][pID]);
				mysql_tquery(mysql_Handle, string);
				SetPlayerWantedLevel(playerid, 0);
				format(string, 24, "~r~-%d$", GetPVarInt(playerid, "FreePrice"));
            	return GameTextForPlayer(playerid, string, 3000, 1);
			}
			else {
				if(pData[playerid][pBank] < GetPVarInt(playerid, "FreePrice") ) {
					SCM(GetPVarInt(playerid, "FreeOffer"), COLOR_GREY, "√ì √Ω√≤√Æ√£√Æ √®√£√∞√Æ√™√† No √±√≤√Æ√´√º√™√Æ √§√•√≠√•√£ √≠√† √°√†√≠√™. √±√∑√•√≤√≥");
					return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± No √±√≤√Æ√´√º√™√Æ √§√•√≠√•√£");
				}
				new price_adv = GetPVarInt(playerid, "FreePrice")/10;
				GivePayDayMoney(playerid, price_adv);
				format(string, 50, "~w~FREE~n~~b~%s~n~~g~+%d$", GetName(playerid), price_adv);
				GameTextForPlayer(GetPVarInt(playerid, "FreeOffer"), string, 2000, 4);
				pData[playerid][pBank] -= GetPVarInt(playerid, "FreePrice");
				UpdatePlayerData(playerid, "pBank", pData[playerid][pBank]);
				SCMF(playerid,COLOR_BLUE,"√Ä√§√¢√Æ√™√†√≤ %s √¢√ª√Ø√≥√±√≤√®√´ √Ç√†√± √ß√† %d$",pData[GetPVarInt(playerid, "FreeOffer")][pName], GetPVarInt(playerid, "FreePrice"));
				SCMF(GetPVarInt(playerid, "FreeOffer"),COLOR_BLUE,"√Ç√ª √¢√ª√Ø√≥√±√≤√®√´√® %s √ß√† %d$",pData[playerid][pName], GetPVarInt(playerid, "FreePrice"));
				SCM(GetPVarInt(playerid, "FreeOffer"), -1, "√Ç√†√¨ √°√≥√§√•√≤ √¢√ª√Ø√´√†√∑√•√≠√Æ "CMAIN"10 √Ø√∞√Æ√∂√•√≠√≤√Æ√¢ "CWHITE"√Æ√≤ √±√≤√Æ√®√¨√Æ√±√≤√® √Æ√±√¢√Æ√°√Æ√¶√§√•√≠√®√ø √¢√Æ √¢√∞√•√¨√ø √ß√†√∞√Ø√´√†√≤√ª");
				pData[playerid][pJailTime] = 1;
				pData[playerid][pWanted] = 0;
				mysql_format(mysql_Handle, string, 144, "UPDATE `accounts` SET `pJailTime` = '1', `pWanted` = '0' WHERE `id` = %d", pData[playerid][pID]);
				mysql_tquery(mysql_Handle, string);
				SetPlayerWantedLevel(playerid, 0);
				format(string, 24, "~r~-%d$", GetPVarInt(playerid, "FreePrice"));
            	return GameTextForPlayer(playerid, string, 3000, 1);
			}
		}
	case 662: PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0), SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CLITEBLUE"√à√≠√¥√Æ√∞√¨√†√∂√®√ø", ""CWHITE"√à√≠√Æ√£S√≠, √Ø√Æ√±√´√• √¢√ª√Ø√Æ√´√≠√•√≠√≠√Æ√£√Æ √ß√†S√≠√≠√®√ø,\n√™√¢√•√±√≤√Æ√¢√ª√© √Ø√•√∞√±√Æ√≠√†√¶ √¨√Æ√¶√•√≤ √≠√• √Æ√≤√Ø√∞√†√¢√®√≤√º\n√Ç√†√± √≠√† √¢√ª√Ø√Æ√´√≠√•√≠√®√• √±√´√•√§√≥√æ√π√•√£√Æ √ß√†S√≠√≠√®√ø.\n\n√Ç √≤√†√™√Æ√¨ √±√´√≥√∑√†√•, √§√´√ø √Ø√∞√®√±√≤√≥√Ø√´√•√≠√®√ø √™\n√±√´√•√§√≥√æ√π√•√¨√≥ √ß√†S√≠√≠√®√æ, √¢√ª√°√•√∞√®√≤√• √® √≠√†√∑√≠√®√≤√•\n√•√£√Æ √¢ √±√Ø√®√±√™√• √ß√†S√≠√≠√®√© "CCYAN"(/mn > √ë√Ø√®√±√Æ√™ √ß√†S√≠√≠√®√©).", "√é√™", "");
	case 7779: {
			if(response) {
                new idd = GetPVarInt(playerid, "player_takecmd");
                DeletePVar(playerid, "player_takecmd");
				switch(listitem) {
    				case 0: {
                        if(!IsPlayerConnected(idd)) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
                        if(!ProxDetectorS(8.0, playerid, idd)) return SCM(playerid, COLOR_GREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
                        if(!pData[idd][pLicenses][0]) {
                            SCM(playerid, COLOR_GREY, "√ì √®√£√∞√Æ√™√† No √¢√Æ√§√®√≤√•√´√º√±√™√®√µ √Ø√∞√†√¢");
                            return take_cmd(playerid, idd);
                        }
                        if(pData[playerid][pSex] == 1) SCMF(idd,COLOR_BLUE,"%s %s √®√ß√∫√ø√´ √≥ √Ç√†√± √¢√Æ√§√®√≤√•√´√º√±√™√®√• √Ø√∞√†√¢√†", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], pData[playerid][pName]);
                        else SCMF(idd,COLOR_BLUE,"%s %s √®√ß√∫√ø√´√† √≥ √Ç√†√± √¢√Æ√§√®√≤√•√´√º√±√™√®√• √Ø√∞√†√¢√†", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], pData[playerid][pName]);
                        pData[idd][pLicenses][0] = 0;
                        UpdatePlayerData(playerid, "pLic0", 0);
                        SCMF(playerid,COLOR_BLUE,"√Ç√ª √ß√†√°√∞√†√´√® √¢√Æ√§√®√≤√•√´√º√±√™√®√• √Ø√∞√†√¢√† √≥ %s",pData[idd][pName]);
                        take_cmd(playerid, idd);
    				}
                    case 1: {
                        if(!IsPlayerConnected(idd)) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
                        if(!ProxDetectorS(8.0, playerid, idd)) return SCM(playerid, COLOR_GREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
                        if(!pData[idd][pLicenses][1]) {
                            SCM(playerid, COLOR_GREY, "√ì √®√£√∞√Æ√™√† No √´√®√∂√•√≠√ß√®√® √Ø√®√´√Æ√≤√†");
                            return take_cmd(playerid, idd);
                        }
                        if(pData[playerid][pSex] == 1) SCMF(idd,COLOR_BLUE,"%s %s √®√ß√∫√ø√´ √≥ √Ç√†√± √´√®√∂√•√≠√ß√®√æ √Ø√®√´√Æ√≤√†", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], pData[playerid][pName]);
                        else SCMF(idd,COLOR_BLUE,"%s %s √®√ß√∫√ø√´√† √≥ √Ç√†√± √´√®√∂√•√≠√ß√®√æ √Ø√®√´√Æ√≤√†", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], pData[playerid][pName]);
                        pData[idd][pLicenses][1] = 0;
                        UpdatePlayerData(playerid, "pLic1", 0);
                        SCMF(playerid,COLOR_BLUE,"√Ç√ª √®√ß√∫√ø√´√® √´√®√∂√•√≠√ß√®√æ √Ø√®√´√Æ√≤√† √≥ %s",pData[idd][pName]);
                        take_cmd(playerid, idd);
    				}
                    case 2: {
                        if(!IsPlayerConnected(idd)) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
                        if(!ProxDetectorS(8.0, playerid, idd)) return SCM(playerid, COLOR_GREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
                        if(!pData[idd][pLicenses][2]) {
                            SCM(playerid, COLOR_GREY, "√ì √®√£√∞√Æ√™√† No √´√®√∂√•√≠√ß√®√® √≠√† √¢√Æ√§√≠√ª√© √≤√∞√†√≠√±√Ø√Æ√∞√≤");
                            return take_cmd(playerid, idd);
                        }
                        if(pData[playerid][pSex] == 1) SCMF(idd,COLOR_BLUE,"%s %s √®√ß√∫√ø√´ √≥ √Ç√†√± √´√®√∂√•√≠√ß√®√æ √≠√† √¢√Æ√§√≠√ª√© √≤√∞√†√≠√±√Ø√Æ√∞√≤", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], pData[playerid][pName]);
                        else SCMF(idd,COLOR_BLUE,"%s %s √®√ß√∫√ø√´√† √≥ √Ç√†√± √´√®√∂√•√≠√ß√®√æ √≠√† √¢√Æ√§√≠√ª√© √≤√∞√†√≠√±√Ø√Æ√∞√≤", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], pData[playerid][pName]);
                        pData[idd][pLicenses][2] = 0;
                        UpdatePlayerData(playerid, "pLic2", 0);
                        SCMF(playerid,COLOR_BLUE,"√Ç√ª √®√ß√∫√ø√´√® √´√®√∂√•√≠√ß√®√æ √≠√† √¢√Æ√§√≠√ª√© √≤√∞√†√≠√±√Ø√Æ√∞√≤ √≥ %s",pData[idd][pName]);
                        take_cmd(playerid, idd);
                    }
                    case 3: {
                        if(!IsPlayerConnected(idd)) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
                        if(!ProxDetectorS(8.0, playerid, idd)) return SCM(playerid, COLOR_GREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
                        if(!pData[idd][pLicenses][3]) {
                            SCM(playerid, COLOR_GREY, "√ì √®√£√∞√Æ√™√† No √´√®√∂√•√≠√ß√®√® √≠√† √Æ√∞√≥√¶√®√•");
                            return take_cmd(playerid, idd);
                        }
                        if(pData[playerid][pSex] == 1) SCMF(idd,COLOR_BLUE,"%s %s √®√ß√∫√ø√´ √≥ √Ç√†√± √´√®√∂√•√≠√ß√®√æ √≠√† √Æ√∞√≥√¶√®√•", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], pData[playerid][pName]);
                        else SCMF(idd,COLOR_BLUE,"%s %s √®√ß√∫√ø√´√† √≥ √Ç√†√± √´√®√∂√•√≠√ß√®√æ √≠√† √Æ√∞√≥√¶√®√•", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], pData[playerid][pName]);
                        pData[idd][pLicenses][3] = 0;
                        UpdatePlayerData(playerid, "pLic3", 0);
                        SCMF(playerid,COLOR_BLUE,"√Ç√ª √®√ß√∫√ø√´√® √´√®√∂√•√≠√ß√®√æ √≠√† √Æ√∞√≥√¶√®√• √≥ %s",pData[idd][pName]);
                        take_cmd(playerid, idd);
    				}
    				case 4: {
						if(!IsPlayerConnected(idd)) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
                        if(!ProxDetectorS(8.0, playerid, idd)) return SCM(playerid, COLOR_GREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
                        if(!pData[idd][pPatr]) {
                            SCM(playerid, COLOR_GREY, "√ì √®√£√∞√Æ√™√† No √Ø√†√≤√∞√Æ√≠√Æ√¢");
                            return take_cmd(playerid, idd);
                        }
                        SCM(idd, COLOR_ORANGE, "√ê√†√°√Æ√≤√≠√®√™ √å√Ç√Ñ √®√ß√∫√ø√´ √≥ √Ç√†√± √Ø√†√≤√∞√Æ√≠√ª");
                        pData[idd][pPatr] = 0;
                        UpdatePlayerData(idd, "pPatr", pData[idd][pPatr]);
                        SCMF(playerid,COLOR_BLUE,"√Ç√ª √®√ß√∫√ø√´√® √Ø√†√≤√∞√Æ√≠√ª √≥ %s",pData[idd][pName]);
                        take_cmd(playerid, idd);
    				}
                    case 5: {
                        if(!IsPlayerConnected(idd)) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
                        if(!ProxDetectorS(8.0, playerid, idd)) return SCM(playerid, COLOR_GREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
                        if(!pData[idd][pDrugs]) {
                            SCM(playerid, COLOR_GREY, "√ì √®√£√∞√Æ√™√† No √≠√†√∞√™√Æ√≤√®√™√Æ√¢");
                            return take_cmd(playerid, idd);
                        }
                        SCM(idd, COLOR_ORANGE, "√ê√†√°√Æ√≤√≠√®√™ √å√Ç√Ñ √®√ß√∫√ø√´ √≥ √Ç√†√± √≠√†√∞√™√Æ√≤√®√™√®");
                        pData[idd][pDrugs] = 0;
                        UpdatePlayerData(idd, "pDrugs", pData[idd][pDrugs]);
                        SCMF(playerid,COLOR_BLUE,"√Ç√ª √®√ß√∫√ø√´√® √≠√†√∞√™√Æ√≤√®√™√® √≥ %s",pData[idd][pName]);
                        take_cmd(playerid, idd);
    				}
                    case 6: {
                        if(!IsPlayerConnected(idd)) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
                        if(!ProxDetectorS(10.0, playerid, idd)) return SCM(playerid, COLOR_GREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
                        if(!pData[idd][pMetal]) {
                            SCM(playerid, COLOR_GREY, "√ì √®√£√∞√Æ√™√† No √¨√•√≤√†√´√´√†");
                            return take_cmd(playerid, idd);
                        }
                        SCM(idd, COLOR_ORANGE, "√ê√†√°√Æ√≤√≠√®√™ √å√Ç√Ñ √®√ß√∫√ø√´ √≥ √Ç√†√± √¨√•√≤√†√´√´");
                        pData[idd][pMetal] = 0;
                        UpdatePlayerData(idd, "pMats", pData[idd][pMetal]);
                        SCMF(playerid,COLOR_BLUE,"√Ç√ª √®√ß√∫√ø√´√® √¨√•√≤√†√´√´ √≥ %s",pData[idd][pName]);
                        take_cmd(playerid, idd);
    				}
    				case 7: {
                        if(!IsPlayerConnected(idd)) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
                        if(!ProxDetectorS(10.0, playerid, idd)) return SCM(playerid, COLOR_GREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
                        new bool: weap_status, weaponid, ammo;
                        for(new i = 0; i <= 12; i ++) {
                            GetPlayerWeaponData(idd, i, weaponid, ammo);
                            if(weaponid == 0 || ammo == 0) continue;
                            weap_status = true;
                        }
                        if(!weap_status) {
                            SCM(playerid, COLOR_LIGHTGREY, "√ì √®√£√∞√Æ√™√† No √Æ√∞√≥√¶√®√ø");
                            return take_cmd(playerid, idd);
                        }
                        SCM(idd, COLOR_ORANGE, "√ê√†√°√Æ√≤√≠√®√™ √å√Ç√Ñ √®√ß√∫√ø√´ √≥ √Ç√†√± √Æ√∞√≥√¶√®√•");
                        ResetPlayerWeapons(idd);
                        SCMF(playerid,COLOR_BLUE,"√Ç√ª √®√ß√∫√ø√´√® √Æ√∞√≥√¶√®√• √≥ %s",pData[idd][pName]);
                        take_cmd(playerid, idd);
                    }
                }
			}
			else return DeletePVar(playerid, "player_takecmd");
		}
	case 10098: {
			if(!response) return 1;
			if(pData[playerid][pMember]) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √±√Æ√±√≤√Æ√®√≤√• √¢ √Æ√∞√£√†√≠√®√ß√†√∂√®√®. √Ñ√´√ø √≥√±√≤√∞√Æ√©√±√≤√¢√† √≠√† √∞√†√°√Æ√≤√≥ √Ç√ª √§√Æ√´√¶√≠√ª √•√• √Ø√Æ√™√®√≠√≥√≤√º");
			switch(listitem) {
				case 0: {
					if(pData[playerid][pLevel] < 2) return SCM(playerid, COLOR_LIGHTGREY, "√Ñ√´√ø √≥√±√≤√∞√Æ√©√±√≤√¢√† √≠√† S√≠√≠√≠√≥√æ √∞√†√°√Æ√≤√≥ √¢√†√¨ √≠√•√Æ√°√µ√Æ√§√®√¨ "CBLUE"2 √≥√∞√Æ√¢√•√≠√º");
					SCM(playerid, COLOR_LITEBLUE, "√Ç√ª √≥√±√≤√∞√Æ√®√´√®√±√º √≠√† √∞√†√°√Æ√≤√≥ "CPALEGREEN"√¢√Æ√§√®√≤√•√´√ø √†√¢√≤√Æ√°√≥√±√†");
					SCM(playerid, -1, "√í√•√Ø√•√∞√º √Ç√ª √¨√Æ√¶√•√≤√• √†√∞√•√≠√§√Æ√¢√†√≤√º √†√¢√≤√Æ√°√≥√± √® √≠√†√∑√†√≤√º √Ø√•√∞√•√¢√Æ√ß√™√≥ √´√æ√§√•√©");
					SCM(playerid, -1, "Usar√≤√• "CCYAN"/gps > √è√Æ √∞√†√°√Æ√≤√• > √Ä√∞√•√≠S√≠ √†√¢√≤√Æ√°√≥√±√Æ√¢ √® √≤√†√™√±√® "CWHITE"√§√´√ø √Ø√Æ√´√≥√∑√•√≠√®√ø √¨√•√±√≤√Æ√Ø√Æ√´√Æ√¶√•√≠√®√ø √†√¢√≤√Æ√°√≥√±√Æ√¢");
					pData[playerid][pJob] = 5;
				}
				case 1: {
					if(pData[playerid][pLevel] < 3) return SCM(playerid, COLOR_LIGHTGREY, "√Ñ√´√ø √≥√±√≤√∞√Æ√©√±√≤√¢√† √≠√† S√≠√≠√≠√≥√æ √∞√†√°√Æ√≤√≥ √¢√†√¨ √≠√•√Æ√°√µ√Æ√§√®√¨ "CBLUE"3 √≥√∞√Æ√¢√•√≠√º");
					SCM(playerid, COLOR_LITEBLUE, "√Ç√ª √≥√±√≤√∞√Æ√®√´√®√±√º √≠√† √∞√†√°√Æ√≤√≥ "CPALEGREEN"√≤√†√™√±√®√±√≤√†");
					SCM(playerid, -1, "√í√•√Ø√•√∞√º √Ç√ª √¨√Æ√¶√•√≤√• √†√∞√•√≠√§√Æ√¢√†√≤√º √≤√∞√†√≠√±√Ø√Æ√∞√≤ √≤√†√™√±√® √® √≠√†√∑√†√≤√º √Ø√•√∞√•√¢√Æ√ß√™√≥ √´√æ√§√•√©");
					SCM(playerid, -1, "√Ç√¢√•√§√®√≤√• "CCYAN"/gps > √è√Æ √∞√†√°√Æ√≤√• > √Ä√∞√•√≠S√≠ √†√¢√≤√Æ√°√≥√±√Æ√¢ √® √≤√†√™√±√® "CWHITE"√§√´√ø √Ø√Æ√´√≥√∑√•√≠√®√ø √¨√•√±√≤√Æ√Ø√Æ√´√Æ√¶√•√≠√®√ø √Ø√†√∞√™√†");
					pData[playerid][pJob] = 6;
				}
				case 2: {
					if(pData[playerid][pLevel] < 4) return SCM(playerid, COLOR_LIGHTGREY, "√Ñ√´√ø √≥√±√≤√∞√Æ√©√±√≤√¢√† √≠√† S√≠√≠√≠√≥√æ √∞√†√°√Æ√≤√≥ √¢√†√¨ √≠√•√Æ√°√µ√Æ√§√®√¨ "CBLUE"4 √≥√∞√Æ√¢√•√≠√º");
					SCM(playerid, COLOR_LITEBLUE, "√Ç√ª √≥√±√≤√∞√Æ√®√´√®√±√º √≠√† √∞√†√°√Æ√≤√≥ "CPALEGREEN"√¨√•√µ√†√≠√®√™√†");
					SCM(playerid, -1, "√Ç√¢√•√§√®√≤√• "CCYAN"/menu > √ë√Ø√®√±√Æ√™ √™√Æ√¨√†√≠√§ "CWHITE"√∑√≤√Æ√°√ª √Ø√Æ√±√¨√Æ√≤√∞√•√≤√º √±√Ø√®√±√Æ√™ √§√Æ√±√≤√≥√Ø√≠√ª√µ √™√Æ√¨√†√≠√§");
					pData[playerid][pJob] = 1;
				}
				case 3: {
					if(pData[playerid][pLevel] < 5) return SCM(playerid, COLOR_LIGHTGREY, "√Ñ√´√ø √≥√±√≤√∞√Æ√©√±√≤√¢√† √≠√† S√≠√≠√≠√≥√æ √∞√†√°√Æ√≤√≥ √¢√†√¨ √≠√•√Æ√°√µ√Æ√§√®√¨ "CBLUE"5 √≥√∞√Æ√¢√•√≠√º");
					SCM(playerid, COLOR_LITEBLUE, "√Ç√ª √≥√±√≤√∞√Æ√®√´√®√±√º √≠√† √∞√†√°√Æ√≤√≥ "CPALEGREEN"√∞√†√ß√¢√Æ√ß√∑√®√™√† √Ø√∞√Æ√§√≥√™√≤√Æ√¢");
					SCM(playerid, -1, "√Ç√¢√•√§√®√≤√• "CCYAN"/menu > √ë√Ø√®√±√Æ√™ √™√Æ√¨√†√≠√§ "CWHITE"√∑√≤√Æ√°√ª √Ø√Æ√±√¨√Æ√≤√∞√•√≤√º √±√Ø√®√±√Æ√™ √§√Æ√±√≤√≥√Ø√≠√ª√µ √™√Æ√¨√†√≠√§");
					pData[playerid][pJob] = 2;
				}
			}
			SCM(playerid, -1, "√Ñ√´√ø √≥√¢√Æ√´√º√≠√•√≠√®√ø √± √∞√†√°√Æ√≤√ª Usar√≤√• "CLIGHTBLUE"/leave");
			PlayerPlaySound(playerid, 17001, 0.0, 0.0, 0.0);		
			UpdatePlayerData(playerid, "pJob", pData[playerid][pJob]);
		}
	case 7777: {
			if(!response) return 1;
			new cplayer = GetPVarInt(playerid, "ChosenPlayer");
			switch(listitem) {
			case 0: {
					if(!ProxDetectorS(10.0, playerid, cplayer)) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
					if(pData[cplayer][pLicenses][0] == 1) return SCM(playerid, COLOR_LIGHTGREY, "√ì S√≠√≠√≠√Æ√£√Æ √®√£√∞√Æ√™√† √≥√¶√• √•√±√≤√º √¢√Æ√§. √Ø√∞√†√¢√†");
					SCMF(playerid,COLOR_BLUE,"√Ç√ª √¢√ªS√≠√´√® √¢√Æ√§√®√≤√•√´√º√±√™√®√• √Ø√∞√†√¢√† %s",pData[cplayer][pName]);
					pData[cplayer][pLicenses][0] = 1;
                    UpdatePlayerData(cplayer, "pLic0", 1);
					return SCM(cplayer, COLOR_BLUE, "√à√≠√±√≤√∞√≥√™√≤√Æ√∞ √¢√ªS√≠√´ √¢√†√¨ √¢√Æ√§√®√≤√•√´√º√±√™√®√• √Ø√∞√†√¢√†");
				}
			case 1: {
					if(!ProxDetectorS(10.0, playerid, cplayer)) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
					if(pData[cplayer][pLicenses][1] == 1) return SCM(playerid, COLOR_LIGHTGREY, "√ì S√≠√≠√≠√Æ√£√Æ √®√£√∞√Æ√™√† √≥√¶√• √•√±√≤√º √Ω√≤√† √´√®√∂√•√≠√ß√®√ø");
					SCMF(playerid,COLOR_BLUE,"√Ç√ª √¢√ªS√≠√´√® √´√®√∂√•√≠√ß√®√æ √Ø√®√´√Æ√≤√† %s",pData[cplayer][pName]);
					pData[cplayer][pLicenses][1] = 1;
                    UpdatePlayerData(cplayer, "pLic1", 1);
					return SCM(cplayer, COLOR_BLUE, "√à√≠√±√≤√∞√≥√™√≤√Æ√∞ √¢√ªS√≠√´ √¢√†√¨ √´√®√∂√•√≠√ß√®√æ √Ø√®√´√Æ√≤√†");
				}
			case 2: {
					if(!ProxDetectorS(10.0, playerid, cplayer)) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
					if(pData[cplayer][pLicenses][2] == 1) return SCM(playerid, COLOR_LIGHTGREY, "√ì S√≠√≠√≠√Æ√£√Æ √®√£√∞√Æ√™√† √≥√¶√• √•√±√≤√º √Ω√≤√† √´√®√∂√•√≠√ß√®√ø");
					SCMF(playerid,COLOR_BLUE,"√Ç√ª √¢√ªS√≠√´√® √´√®√∂√•√≠√ß√®√æ √≠√† √¢√Æ√§√≠√ª√© √≤√∞√†√≠√±√Ø√Æ√∞√≤ %s",pData[cplayer][pName]);
					pData[cplayer][pLicenses][2] = 1;
                    UpdatePlayerData(cplayer, "pLic2", 1);
                    return SCM(cplayer, COLOR_BLUE, "√à√≠√±√≤√∞√≥√™√≤√Æ√∞ √¢√ªS√≠√´ √¢√†√¨ √´√®√∂√•√≠√ß√®√æ √≠√† √¢√Æ√§√≠√ª√© √≤√∞√†√≠√±√Ø√Æ√∞√≤");
				}
			case 3: {
					if(!ProxDetectorS(10.0, playerid, cplayer)) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
					if(pData[cplayer][pLicenses][3] == 1) return SCM(playerid, COLOR_LIGHTGREY, "√ì S√≠√≠√≠√Æ√£√Æ √®√£√∞√Æ√™√† √≥√¶√• √•√±√≤√º √Ω√≤√† √´√®√∂√•√≠√ß√®√ø");
					SCMF(playerid,COLOR_BLUE,"√Ç√ª √¢√ªS√≠√´√® √´√®√∂√•√≠√ß√®√æ √≠√† √Æ√∞√≥√¶√®√• %s",pData[cplayer][pName]);
					pData[cplayer][pLicenses][3] = 1;
                    UpdatePlayerData(cplayer, "pLic3", 1);
					return SCM(cplayer, COLOR_BLUE, "√à√≠√±√≤√∞√≥√™√≤√Æ√∞ √¢√ªS√≠√´ √¢√†√¨ √´√®√∂√•√≠√ß√®√æ √≠√† √Æ√∞√≥√¶√®√•");
				}
			}
		}
	case 2224: {
			if(!response) return 1;
			switch(listitem) {
				case 0: {
					if(GetPVarInt(playerid, "PEfir") != 999 && GetPVarInt(playerid, #type_efir) == 2) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≥√¶√• √¢ √∞√†√§√®√Æ√Ω√¥√®√∞√•");
					SetPVarInt(playerid, #type_efir, 2);
					SetPVarInt(playerid, "PEfir", 1);
					if(pData[playerid][pSex] == 1) format(string,100, "[√ë√å√à] %s %s √¢√Æ√∏¬∏√´ √¢ √∞√†√§√®√Æ√Ω√¥√®√∞", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], pData[playerid][pName]);
					else format(string,100, "[√ë√å√à] %s %s √¢√Æ√∏√´√† √¢ √∞√†√§√®√Æ√Ω√¥√®√∞", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], pData[playerid][pName]);
					SFFM(16,COLOR_BLUE, string);
				}
				case 1: {
					if(GetPVarInt(playerid, "PEfir") != 999 && GetPVarInt(playerid, #type_efir) == 2) {
						DeletePVar(playerid, #type_efir);
						SetPVarInt(playerid, "PEfir", 999);
						if(pData[playerid][pSex] == 1) format(string,105, "[√ë√å√à] %s %s √¢√ª√∏√•√´ √®√ß √∞√†√§√®√Æ√Ω√¥√®√∞√†", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1],pData[playerid][pName]);
						else format(string,105, "[√ë√å√à] %s %s √¢√ª√∏√´√† √®√ß √∞√†√§√®√Æ√Ω√¥√®√∞√†", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1],pData[playerid][pName]);
						return SFFM(16,COLOR_BLUE, string);
					}
					else return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √≠√†√∑√®√≠√†√´√® √∞√†√§√®√Æ√Ω√¥√®√∞");
				}
				case 2: {
					if(GetPVarInt(playerid, "PEfir") != 999 && GetPVarInt(playerid, #type_efir) == 2) {
						if(smsls) {
							if(pData[playerid][pSex] == 1) format(string,105, "[√ë√å√à] %s %s √ß√†√¢√•√∞√∏√®√´ √Ø√∞√®¬∏√¨ √ß√¢√Æ√≠√™√Æ√¢ √Æ√≤ √±√´√≥√∏√†√≤√•√´√•√©", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1],pData[playerid][pName]);
							else format(string,105, "[√ë√å√à] %s %s √ß√†√¢√•√∞√∏√®√´√† √Ø√∞√®¬∏√¨ √ß√¢√Æ√≠√™√Æ√¢ √Æ√≤ √±√´√≥√∏√†√≤√•√´√•√©", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1],pData[playerid][pName]);
							smsls = false; return SFFM(16,COLOR_BLUE, string);
						}
						else {
							if(pData[playerid][pSex] == 1) format(string,105, "[√ë√å√à] %s %s √≠√†√∑√†√´ √Ø√∞√®¬∏√¨ √ß√¢√Æ√≠√™√Æ√¢ √Æ√≤ √±√´√≥√∏√†√≤√•√´√•√©", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1],pData[playerid][pName]);
							else format(string,105, "[√ë√å√à] %s %s √≠√†√∑√†√´√† √Ø√∞√®¬∏√¨ √ß√¢√Æ√≠√™√Æ√¢ √Æ√≤ √±√´√≥√∏√†√≤√•√´√•√©", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1],pData[playerid][pName]);
							smsls = true; return SFFM(16,COLOR_BLUE, string);
						}
					}
					else return SCM(playerid, COLOR_GREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √∞√†√§√®√Æ√Ω√¥√®√∞√•");
				}
			}
		}
    case 797: {
            if(!response) return 1;
            new TOTAL = 0;
            foreach(new i:Player) {
                if(pData[i][pFilling] == -1) continue;
                pData[i][pFilling] = -1;
            }
            for(new i = 1; i != FILLING_TOTAL + 1; i ++) {
                if(!strcmp(Filling[i][fOwner], "None", true)) continue;
                strmid(Filling[i][fOwner],"None",0,strlen("None"),255);
                new f_str[70];
                mysql_format(mysql_Handle,f_str,sizeof(f_str),"UPDATE `filling` SET `fOwner` = 'None' WHERE `fID` = %i",i);
                mysql_tquery(mysql_Handle, f_str);
                Filling[i][fLock] = false;
                update_3dtext_fill(i);
                TOTAL ++;
                update_text_fill(i);
            }
            mysql_tquery(mysql_Handle, "UPDATE `filling` SET `fOwner` = 'None', `fLock` = '0'");
            mysql_tquery(mysql_Handle, "UPDATE `accounts` SET `pPsbiskey` = '-1'");
            format(string, 92, ""CWHITE"√Ç√±√• √™√≥√Ø√´√•√≠√≠√ª√• √Ä√á√ë √°√ª√´√® √≥√±√Ø√•√∏√≠√Æ √Ø√∞√ÆS√≠√≠√ª √£√Æ√±√≥S√≠√∞√±√≤√¢√≥ "CORANGE"(%d √∏√≤.)", TOTAL);
            SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{40bf80}√à√≠√¥√Æ√∞√¨√†√∂√®√ø", string, "Cerrar", "");
        }
    case 792: {
            if(!response) return 1;
            new TOTAL = 0;
            foreach(new i:Player) 
            	if(pData[i][have_garage] != -1) pData[i][have_garage] = -1;
            for(new i = 1; i != 13; i ++) {
            	if(!garage[i][gbuyed]) continue;
            	garage[i][gbuyed]=false;
				garage[i][ownerID] = 0;
				garage[i][gdays] = 0;
				format(garage[i][ownerNAME],24," ");
                TOTAL ++;
            }
            mysql_tquery(mysql_Handle, "UPDATE `garage` SET `days`='0',`buyed`='0', `ownerID`='0', `ownerNAME`=' '");
            mysql_tquery(mysql_Handle, "UPDATE `accounts` SET `have_garage` = '-1'");
            format(string, 92, ""CWHITE"√Ç√±√• √™√≥√Ø√´√•√≠√≠√ª√• √£√†√∞√†√¶√® √°√ª√´√® √≥√±√Ø√•√∏√≠√Æ √Ø√∞√ÆS√≠√≠√ª √£√Æ√±√≥S√≠√∞√±√≤√¢√≥ "CORANGE"(%d √∏√≤.)", TOTAL);
            SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{40bf80}√à√≠√¥√Æ√∞√¨√†√∂√®√ø", string, "Cerrar", "");
        }
    case 799: {
            if(!response) return 1;
            new TOTAL = 0;
            foreach(new i:Player) {
                if(pData[i][pFlat] != -1) pData[i][pFlat] = -1;
                if(pData[i][p_rent_flat] != -1) pData[i][p_rent_flat] = -1;
            }
            for(new i = 1; i != 49; i ++) {
                if(!flat_info[i][fl_owned]) continue;
				flat_info[i][fl_lock] = false;
				flat_info[i][fl_rentstatus] = false;
				flat_info[i][fl_rentprice] = 0;
				strmid(flat_info[i][fl_renter], "None", 0, strlen("None"), 255);
				flat_info[i][fl_owned] = false;
				strmid(flat_info[i][fl_owner], "None", 0, strlen("None"), 255);
				if(IsValidDynamicPickup(flat_info[i][fl_pickupID])) 
					DestroyDynamicPickup(flat_info[i][fl_pickupID]);
				flat_info[i][fl_pickupID] = CreateDynamicPickup(19524, 23, flat_info[i][fl_enterposX], flat_info[i][fl_enterposY], flat_info[i][fl_enterposZ], 1);
				TOTAL ++;
            }
            check_icon_flats();
            mysql_tquery(mysql_Handle, "UPDATE `flats` SET `_fl_lock` = '0', `_fl_rentstatus` = '0', `_fl_rentprice` = '0', `_fl_renter` = 'None', `_fl_owned` = '0', `_fl_owner` = 'None'");
            mysql_tquery(mysql_Handle, "UPDATE `accounts` SET `pFlat` = '-1', `p_rent_flat` = '-1'");
            format(string, 92, ""CWHITE"√Ç√±√• √™√≥√Ø√´√•√≠√≠√ª√• √™√¢√†√∞√≤√®√∞√ª √°√ª√´√® √≥√±√Ø√•√∏√≠√Æ √Ø√∞√ÆS√≠√≠√ª √£√Æ√±√≥S√≠√∞√±√≤√¢√≥ "CORANGE"(%d √∏√≤.)", TOTAL);
            SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{40bf80}√à√≠√¥√Æ√∞√¨√†√∂√®√ø", string, "Cerrar", "");
        }
	case 796: {
			if(!response) return 1;
			new TOTAL = 0;
            foreach(new i:Player) {
                if(pData[i][pBusiness] != -1) pData[i][pBusiness] = -1;
                if(pData[i][prok_have] != 0) pData[i][prok_have] = 0;
                if(pData[i][food_have] != 0) pData[i][food_have] = 0;
                if(pData[i][kiosk_have] != 0) pData[i][kiosk_have] = 0;
                if(pData[i][autoHave] != 0) pData[i][autoHave] = 0;
                if(pData[i][unikauto_Have] != 0) pData[i][unikauto_Have] = 0;
            }
			for(new i = 1; i != BIZES + 1; i ++) {
				if(!strcmp(BizInfo[i][bOwner], "None", true)) continue;
				strmid(BizInfo[i][bOwner], "None", 0, strlen("None"), 255);
				BizInfo[i][bLock] = 0;
                BizInfo[i][bVhod] = 0;
				BizInfo[i][bPribil] = 0;
				UpdateBizInfo (i), SaveBusiness(i);
				TOTAL ++;
			}

			if(autoworkOwner != -1) {
                autoworkOwner = -1;
                TOTAL ++;
            }

            if(unikautoOwner != -1) {
                unikautoOwner = -1;
                TOTAL ++;
            }

            if(food1OwnerID != -1) {
                food1OwnerID = -1;
                TOTAL ++;
            }
            if(food2OwnerID != -1) {
                food2OwnerID = -1;
                TOTAL ++;
            }

            if(kiosk1_owner != -1) {
                kiosk1_owner = -1;
                TOTAL ++;
            }
            if(kiosk2_owner != -1) {
                kiosk2_owner = -1;
                TOTAL ++;
            }
            if(kiosk3_owner != -1) {
                kiosk3_owner = -1;
                TOTAL ++;
            }
            if(kiosk4_owner != -1) {
                kiosk4_owner = -1;
                TOTAL ++;
            }

            if(prok1_owner != -1) {
                prok1_owner = -1;
                TOTAL ++;
            }
            if(prok2_owner != -1) {
                prok2_owner = -1;
                TOTAL ++;
            }
            if(prok3_owner != -1) {
                prok3_owner = -1;
                TOTAL ++;
            }
            if(prok4_owner != -1) {
                prok4_owner = -1;
                TOTAL ++;
            }
            if(prok5_owner != -1) {
                prok5_owner = -1;
                TOTAL ++;
            }
            if(prok6_owner != -1) {
                prok6_owner = -1;
                TOTAL ++;
            }
            if(prok7_owner != -1) {
                prok7_owner = -1;
                TOTAL ++;
            }

            mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `kiosk1_owner` = '-1', `kiosk2_owner` = '-1', `kiosk3_owner` = '-1', `kiosk4_owner` = '-1', `autowork_ownerid` = '-1',`food_owneracc` = '-1', `food_owneracc_2` = '-1', `prok1_owner` = '-1', `prok2_owner` = '-1', `prok3_owner` = '-1', `prok4_owner` = '-1', `prok5_owner` = '-1', `prok6_owner` = '-1', `prok7_owner` = '-1'");
            static const fmt_str[] = "√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"2000000$";
            UpdateDynamic3DTextLabelText(prok_info_1, 0x4682B4FF, fmt_str);
            UpdateDynamic3DTextLabelText(prok_info_2, 0x4682B4FF, fmt_str);
            UpdateDynamic3DTextLabelText(prok_info_3, 0x4682B4FF, fmt_str);
            UpdateDynamic3DTextLabelText(prok_info_4, 0x4682B4FF, fmt_str);
            UpdateDynamic3DTextLabelText(prok_info_5, 0x4682B4FF, fmt_str);
            UpdateDynamic3DTextLabelText(prok_info_6, 0x4682B4FF, fmt_str);
            UpdateDynamic3DTextLabelText(prok_info_7, 0x4682B4FF, fmt_str);
            UpdateDynamic3DTextLabelText(food_bomj3d, 0x33AA33FF, "√ã√†√∞√•√™ √± √•√§√Æ√©\n\n{4682b4}√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"350000$\n{4682b4}/buybiz √§√´√ø √Ø√Æ√™√≥√Ø√™√®");
            UpdateDynamic3DTextLabelText(food_bomj3d_2, 0x33AA33FF, "√ã√†√∞√•√™ √± √•√§√Æ√©\n\n{4682b4}√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"350000$\n{4682b4}/buybiz √§√´√ø √Ø√Æ√™√≥√Ø√™√®");
            UpdateDynamic3DTextLabelText(autoworkbiz3D, 0x33AA33FF, "√Ä√¢√≤√Æ√¨√Æ√°√®√´√º√≠√†√ø √¥√†√°√∞√®√™√†\n\n{4682b4}√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"13000000$\n{4682b4}/buybiz √§√´√ø √Ø√Æ√™√≥√Ø√™√®");
            UpdateDynamic3DTextLabelText(unik3dtext, 0x33AA33FF, "√Ä√¢√≤√Æ√±√†√´√Æ√≠ √Ω√™√±√™√´√æ√ß√®√¢√≠√ª√µ √†√¢√≤√Æ\n\n{4682b4}√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"36000000$");

            static const f_str[] = "√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"500000$";
            UpdateDynamic3DTextLabelText(kiosk_info_1, 0x4682B4FF, f_str);
            UpdateDynamic3DTextLabelText(kiosk_info_2, 0x4682B4FF, f_str);
            UpdateDynamic3DTextLabelText(kiosk_info_3, 0x4682B4FF, f_str);
            UpdateDynamic3DTextLabelText(kiosk_info_4, 0x4682B4FF, f_str);

			mysql_tquery(mysql_Handle, "UPDATE `business` SET `bOwner` = 'None', `bLock` = '0', `bVhod` = '0', `bPribil` = '0'");
			mysql_tquery(mysql_Handle, "UPDATE `accounts` SET `unikauto_Have` = '0',`kiosk_have` = '0',`pPbiskey` = '-1', `prok_have` = '0', `food_have` = '0', `autoHave` = '0'");
			format(string, 92, ""CWHITE"√Ç√±√• √ß√†√≠√ø√≤√ª√• √°√®√ß√≠√•√±√ª √°√ª√´√® √≥√±√Ø√•√∏√≠√Æ √Ø√∞√ÆS√≠√≠√ª √£√Æ√±√≥S√≠√∞√±√≤√¢√≥ "CORANGE"(%d √∏√≤.)", TOTAL);
			SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{40bf80}√à√≠√¥√Æ√∞√¨√†√∂√®√ø", string, "Cerrar", "");
		}
	case 795: {
			if(!response) return 1;
			new i = 0;
            foreach(new id:Player) {
                if(pData[id][pHouse] == -1) continue;
                if(house_carid[id][0] != 0) {
                    DestroyVehicle(house_carid[id][0]);
                    house_carid[id][0] = 0;
                }
                if(house_carid[id][1] != 0) {
                    DestroyVehicle(house_carid[id][1]);
                    house_carid[id][1] = 0;
                }
                if(house_carid[id][2] != 0) {
                    DestroyVehicle(house_carid[id][2]);
                    house_carid[id][2] = 0;
                }
                pData[id][pHouse] = -1;
            }
			for(new h = 0; h != TOTAL_HOUSE + 1; h ++) {
				if(HouseInfo[h][hOwned]) {
					strmid(HouseInfo[h][hOwner], "The State", 0, strlen("The State"), 255);
					HouseInfo[h][hLock] = 1;
					HouseInfo[h][hOwned] = 0;
					HouseInfo[h][hPool] = 0;
					HouseInfo[h][hADoor] = 0;
					HouseInfo[h][hSub] = 0;
					for(new d = 0; d != 5; d++) HouseInfo[h][hGun][d] = 0, HouseInfo[h][hGunAmmo][d] = 0;
					HouseInfo[h][hSafe] = 0;
					SaveHouse(h);
					i ++;
				}
				UpdateIconHouse(h);
			}
			mysql_tquery(mysql_Handle, "UPDATE `accounts` SET `pPhousekey` = '-1'");
			mysql_tquery(mysql_Handle, "UPDATE `house` SET `hOwner` = 'The State', `hOwned` = '0'");
			format(string, 92, ""CWHITE"√Ç√±√• √ß√†√≠√ø√≤√ª√• √§√Æ√¨√† √°√ª√´√® √≥√±√Ø√•√∏√≠√Æ √Ø√∞√ÆS√≠√≠√ª √£√Æ√±√≥S√≠√∞√±√≤√¢√≥ "CORANGE"(%d √∏√≤.)", i);
			SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{cccc00}√à√≠√¥√Æ√∞√¨√†√∂√®√ø", string, "Cerrar", "");
		}
	case 3725: {
			if(!response) return 1;
			switch(listitem) {
				case 0: SPD(playerid, 775, DIALOG_STYLE_INPUT, ""CERROR"√è√Æ√§√≤√¢√•√∞√¶√§√•√≠√®√•", ""CWHITE"√Ñ√´√ø √Ø√Æ√´√≥√∑√•√≠√®√ø √§√Æ√±√≤√≥√Ø√† √™ √Ω√≤√Æ√© √¥√≥√≠√™√∂√®√®,\n√¢√¢√•√§√®√≤√• √Ø√†√∞√Æ√´√º √∞√†√ß√∞√†√°√Æ√≤√∑√®√™√†:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
				case 1: SPD(playerid, 781, DIALOG_STYLE_INPUT, ""CERROR"√è√Æ√§√≤√¢√•√∞√¶√§√•√≠√®√•", ""CWHITE"√Ñ√´√ø √Ø√Æ√´√≥√∑√•√≠√®√ø √§√Æ√±√≤√≥√Ø√† √™ √Ω√≤√Æ√© √¥√≥√≠√™√∂√®√®,\n√¢√¢√•√§√®√≤√• √Ø√†√∞√Æ√´√º √∞√†√ß√∞√†√°√Æ√≤√∑√®√™√†:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
				case 2: SPD(playerid, 780, DIALOG_STYLE_INPUT, ""CERROR"√è√Æ√§√≤√¢√•√∞√¶√§√•√≠√®√•", ""CWHITE"√Ñ√´√ø √Ø√Æ√´√≥√∑√•√≠√®√ø √§√Æ√±√≤√≥√Ø√† √™ √Ω√≤√Æ√© √¥√≥√≠√™√∂√®√®,\n√¢√¢√•√§√®√≤√• √Ø√†√∞√Æ√´√º √∞√†√ß√∞√†√°√Æ√≤√∑√®√™√†:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
				case 3: SPD(playerid, 776, DIALOG_STYLE_INPUT, ""CERROR"√è√Æ√§√≤√¢√•√∞√¶√§√•√≠√®√•", ""CWHITE"√Ñ√´√ø √Ø√Æ√´√≥√∑√•√≠√®√ø √§√Æ√±√≤√≥√Ø√† √™ √Ω√≤√Æ√© √¥√≥√≠√™√∂√®√®,\n√¢√¢√•√§√®√≤√• √Ø√†√∞√Æ√´√º √∞√†√ß√∞√†√°√Æ√≤√∑√®√™√†:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
		        case 4: SPD(playerid, 777, DIALOG_STYLE_INPUT, ""CERROR"√è√Æ√§√≤√¢√•√∞√¶√§√•√≠√®√•", ""CWHITE"√Ñ√´√ø √Ø√Æ√´√≥√∑√•√≠√®√ø √§√Æ√±√≤√≥√Ø√† √™ √Ω√≤√Æ√© √¥√≥√≠√™√∂√®√®,\n√¢√¢√•√§√®√≤√• √Ø√†√∞√Æ√´√º √∞√†√ß√∞√†√°√Æ√≤√∑√®√™√†:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
            }
		}
	case 775: {
			if(!response) return 1;
			if(!strlen(inputtext)) return SPD(playerid, 775, DIALOG_STYLE_INPUT, ""CERROR"√è√Æ√§√≤√¢√•√∞√¶√§√•√≠√®√•", ""CWHITE"√Ñ√´√ø √Ø√Æ√´√≥√∑√•√≠√®√ø √§√Æ√±√≤√≥√Ø√† √™ √Ω√≤√Æ√© √¥√≥√≠√™√∂√®√®,\n√¢√¢√•√§√®√≤√• √Ø√†√∞√Æ√´√º √∞√†√ß√∞√†√°√Æ√≤√∑√®√™√†:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
			if(!strcmp(inputtext, "446488", true)) SPD(playerid, 795, DIALOG_STYLE_MSGBOX, ""CERROR"√è√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√•", ""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √Ø√∞√ÆS√≠√≤√º √£√Æ√±√≥S√≠√∞√±√≤√¢√≥ √¢√±√• √§√Æ√¨√†?\n\n"CRED"√Ç√≠√®√¨√†√≠√®√•! √è√∞√® √Ø√∞√®√±√≥√≤√±√≤√¢√®√® √®√£√∞√Æ√™√Æ√¢ √Æ√≠√´√†√©√≠ √± √§√Æ√¨√†√¨√®,\n√¨√Æ√£√≥√≤ √¢√Æ√ß√≠√®√™√≠√≥√≤√º √Ø√∞√Æ√°√´√•√¨√ª. √è√Æ√Ω√≤√Æ√¨√≥, √Ø√Æ√±√´√• √Ø√∞√ÆS√≠√¶√®\n√§√Æ√¨√Æ√¢ √¶√•√´√†√≤√•√´√º√≠√Æ √Ø√•√∞√•√ß√†√Ø√≥√±√≤√®√≤√º √±√•√∞√¢√•√∞.", "S√≠", "No");
			else SCM(playerid, COLOR_ERROR, "√è√†√∞√Æ√´√º √¢√¢√•√§¬∏√≠ √≠√•√¢√•√∞√≠√Æ");
		}
	case 776: {
			if(!response) return 1;
			if(!strlen(inputtext)) return SPD(playerid, 776, DIALOG_STYLE_INPUT, ""CERROR"√è√Æ√§√≤√¢√•√∞√¶√§√•√≠√®√•", ""CWHITE"√Ñ√´√ø √Ø√Æ√´√≥√∑√•√≠√®√ø √§√Æ√±√≤√≥√Ø√† √™ √Ω√≤√Æ√© √¥√≥√≠√™√∂√®√®,\n√¢√¢√•√§√®√≤√• √Ø√†√∞√Æ√´√º √∞√†√ß√∞√†√°√Æ√≤√∑√®√™√†:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
			if(!strcmp(inputtext, "446488", true)) SPD(playerid, 796, DIALOG_STYLE_MSGBOX, ""CERROR"√è√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√•", ""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √Ø√∞√ÆS√≠√≤√º √£√Æ√±√≥S√≠√∞√±√≤√¢√≥ √¢√±√• √°√®√ß√≠√•√±√ª?\n\n"CRED"√Ç√≠√®√¨√†√≠√®√•! √è√∞√® √Ø√∞√®√±√≥√≤√±√≤√¢√®√® √®√£√∞√Æ√™√Æ√¢ √Æ√≠√´√†√©√≠ √± √°√®√ß√≠√•√±√†√¨√®,\n√¨√Æ√£√≥√≤ √¢√Æ√ß√≠√®√™√≠√≥√≤√º √Ø√∞√Æ√°√´√•√¨√ª. √è√Æ√Ω√≤√Æ√¨√≥, √Ø√Æ√±√´√• √Ø√∞√ÆS√≠√¶√®\n√°√®√ß√≠√•√±√Æ√¢ √¶√•√´√†√≤√•√´√º√≠√Æ √Ø√•√∞√•√ß√†√Ø√≥√±√≤√®√≤√º √±√•√∞√¢√•√∞.", "S√≠", "No");
			else SCM(playerid, COLOR_ERROR, "√è√†√∞√Æ√´√º √¢√¢√•√§¬∏√≠ √≠√•√¢√•√∞√≠√Æ");
		}
    case 777: {
            if(!response) return 1;
            if(!strlen(inputtext)) return SPD(playerid, 777, DIALOG_STYLE_INPUT, ""CERROR"√è√Æ√§√≤√¢√•√∞√¶√§√•√≠√®√•", ""CWHITE"√Ñ√´√ø √Ø√Æ√´√≥√∑√•√≠√®√ø √§√Æ√±√≤√≥√Ø√† √™ √Ω√≤√Æ√© √¥√≥√≠√™√∂√®√®,\n√¢√¢√•√§√®√≤√• √Ø√†√∞√Æ√´√º √∞√†√ß√∞√†√°√Æ√≤√∑√®√™√†:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
            if(!strcmp(inputtext, "446488", true)) SPD(playerid, 797, DIALOG_STYLE_MSGBOX, ""CERROR"√è√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√•", ""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √Ø√∞√ÆS√≠√≤√º √£√Æ√±√≥S√≠√∞√±√≤√¢√≥ √¢√±√• √ß√†√Ø√∞√†√¢√Æ√∑√≠√ª√• √±√≤√†√≠√∂√®√®?\n\n"CRED"√Ç√≠√®√¨√†√≠√®√•! √è√∞√® √Ø√∞√®√±√≥√≤√±√≤√¢√®√® √®√£√∞√Æ√™√Æ√¢ √Æ√≠√´√†√©√≠ √± √ß√†√Ø√∞√†√¢√™√†√¨√®,\n√¨√Æ√£√≥√≤ √¢√Æ√ß√≠√®√™√≠√≥√≤√º √Ø√∞√Æ√°√´√•√¨√ª. √è√Æ√Ω√≤√Æ√¨√≥, √Ø√Æ√±√´√• √Ø√∞√ÆS√≠√¶√®\n√Ä√á√ë √¶√•√´√†√≤√•√´√º√≠√Æ √Ø√•√∞√•√ß√†√Ø√≥√±√≤√®√≤√º √±√•√∞√¢√•√∞.", "S√≠", "No");
            else SCM(playerid, COLOR_ERROR, "√è√†√∞√Æ√´√º √¢√¢√•√§¬∏√≠ √≠√•√¢√•√∞√≠√Æ");
        }
    case 780: {
            if(!response) return 1;
            if(!strlen(inputtext)) return SPD(playerid, 780, DIALOG_STYLE_INPUT, ""CERROR"√è√Æ√§√≤√¢√•√∞√¶√§√•√≠√®√•", ""CWHITE"√Ñ√´√ø √Ø√Æ√´√≥√∑√•√≠√®√ø √§√Æ√±√≤√≥√Ø√† √™ √Ω√≤√Æ√© √¥√≥√≠√™√∂√®√®,\n√¢√¢√•√§√®√≤√• √Ø√†√∞√Æ√´√º √∞√†√ß√∞√†√°√Æ√≤√∑√®√™√†:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
            if(!strcmp(inputtext, "446488", true)) SPD(playerid, 799, DIALOG_STYLE_MSGBOX, ""CERROR"√è√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√•", ""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √Ø√∞√ÆS√≠√≤√º √£√Æ√±√≥S√≠√∞√±√≤√¢√≥ √¢√±√• √™√¢√†√∞√≤√®√∞√ª?\n\n"CRED"√Ç√≠√®√¨√†√≠√®√•! √è√∞√® √Ø√∞√®√±√≥√≤√±√≤√¢√®√® √®√£√∞√Æ√™√Æ√¢ √Æ√≠√´√†√©√≠ √± √™√¢√†√∞√≤√®√∞√†√¨√®,\n√¨√Æ√£√≥√≤ √¢√Æ√ß√≠√®√™√≠√≥√≤√º √Ø√∞√Æ√°√´√•√¨√ª. √è√Æ√Ω√≤√Æ√¨√≥, √Ø√Æ√±√´√• √Ø√∞√ÆS√≠√¶√®\n√™√¢√†√∞√≤√®√∞ √¶√•√´√†√≤√•√´√º√≠√Æ √Ø√•√∞√•√ß√†√Ø√≥√±√≤√®√≤√º √±√•√∞√¢√•√∞.", "S√≠", "No");
            else SCM(playerid, COLOR_ERROR, "√è√†√∞√Æ√´√º √¢√¢√•√§¬∏√≠ √≠√•√¢√•√∞√≠√Æ");
        }
    case 781: {
        if(!response) return 1;
        if(!strlen(inputtext)) return SPD(playerid, 781, DIALOG_STYLE_INPUT, ""CERROR"√è√Æ√§√≤√¢√•√∞√¶√§√•√≠√®√•", ""CWHITE"√Ñ√´√ø √Ø√Æ√´√≥√∑√•√≠√®√ø √§√Æ√±√≤√≥√Ø√† √™ √Ω√≤√Æ√© √¥√≥√≠√™√∂√®√®,\n√¢√¢√•√§√®√≤√• √Ø√†√∞√Æ√´√º √∞√†√ß√∞√†√°√Æ√≤√∑√®√™√†:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
        if(!strcmp(inputtext, "446488", true)) SPD(playerid, 792, DIALOG_STYLE_MSGBOX, ""CERROR"√è√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√•", ""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √Ø√∞√ÆS√≠√≤√º √¢√±√• √£√†√∞√†√¶√®?\n\n"CRED"√Ç√≠√®√¨√†√≠√®√•! √è√∞√® √Ø√∞√®√±√≥√≤√±√≤√¢√®√® √®√£√∞√Æ√™√Æ√¢ √Æ√≠√´√†√©√≠ √± √£√†√∞√†√¶√†√¨√®,\n√¨√Æ√£√≥√≤ √¢√Æ√ß√≠√®√™√≠√≥√≤√º √Ø√∞√Æ√°√´√•√¨√ª. √è√Æ√Ω√≤√Æ√¨√≥, √Ø√Æ√±√´√• √Ø√∞√ÆS√≠√¶√®\n√£√†√∞√†√¶√•√© √¶√•√´√†√≤√•√´√º√≠√Æ √Ø√•√∞√•√ß√†√Ø√≥√±√≤√®√≤√º √±√•√∞√¢√•√∞.", "S√≠", "No");
        else SCM(playerid, COLOR_ERROR, "√è√†√∞√Æ√´√º √¢√¢√•√§¬∏√≠ √≠√•√¢√•√∞√≠√Æ");
    }
	case 8900: {
			if(!response) return 1;
			switch(listitem) {
				case 0: SPD(playerid,8903, DIALOG_STYLE_INPUT,"{cccc66}√Å√†√≠√™√Æ√¨√†√≤", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ √µ√Æ√≤√®√≤√• √Ø√Æ√´√Æ√¶√®√≤√º √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√è√Æ√´√Æ√¶√®√≤√º", "Siguiente");
				case 1: SPD(playerid,8904, DIALOG_STYLE_INPUT,"{cccc66}√Å√†√≠√™√Æ√¨√†√≤", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ √µ√Æ√≤√®√≤√• √±√≠√ø√≤√º √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√ë√≠√ø√≤√º", "Siguiente");
				case 2: {
					format(string, 128, ""CWHITE"√ç√† S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤ √°√†√´√†√≠√± √Ç√†√∏√•√£√Æ √°√†√≠√™√Æ√¢√±√™√Æ√£√Æ √±√∑√•√≤√† √±√Æ√±√≤√†√¢√´√ø√•√≤ "CPALEGREEN"%d$", pData[playerid][pBank]);
					SPD(playerid, 8905, DIALOG_STYLE_MSGBOX, "{cccc66}√Å√†√≠√™√Æ√¨√†√≤", string, "Siguiente", "");
				}
				case 3: {
					if(GetPVarInt(playerid, "takephone")) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√•√´√•√¥√Æ√≠√†");
					if(pData[playerid][pPnumber] == -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√•√´√•√¥√Æ√≠√†. √ä√≥√Ø√®√≤√º √•√£√Æ √¨√Æ√¶√≠√Æ √¢ 24-7");
					format(string, 144, ""CWHITE"√ç√† S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤ √°√†√´√†√≠√± √Ç√†√∏√•√£√Æ √¨√Æ√°√®√´√º√≠√Æ√£√Æ √≤√•√´√•√¥√Æ√≠√† √±√Æ√±√≤√†√¢√´√ø√•√≤ "CPALEGREEN"%d$\n"CWHITE"√Ñ√´√ø √Ø√Æ√Ø√Æ√´√≠√•√≠√®√ø √±√∑¬∏√≤√†, √¢√¢√•√§√®√≤√• √±√≥√¨√¨√≥ √¢ √Ø√Æ√´√• √≠√®√¶√•:", pData[playerid][pCashNumber]);
					SPD(playerid, 8906, DIALOG_STYLE_INPUT, "{cccc66}√Å√†√≠√™√Æ√¨√†√≤", string, "√è√Æ√Ø√Æ√´√≠√®√≤√º", "Siguiente");
				}
				case 4: {
					if(pData[playerid][pLevel] < 3) return SCM(playerid, COLOR_LIGHTGREY, "√ë√Æ√¢√•√∞√∏√†√≤√º √°√•√ß√≠√†√´√®√∑√≠√ª√• √Ø√•√∞√•√¢√Æ√§√ª √¨√Æ√¶√≠√Æ √± 3-√£√Æ √≥√∞√Æ√¢√≠√ø");
					SPD(playerid, 3499, DIALOG_STYLE_INPUT,"{40bf80}√Å√•√ß√≠√†√´√®√∑√≠√ª√© √Ø√•√∞√•√¢√Æ√§",""CWHITE"√É√Æ√±√≥S√≠√∞√±√≤√¢√•√≠√≠√†√ø √™√Æ√¨√®√±√±√®√ø √Ø√•√∞√•√¢√ÆS√≠: {99ff66}1%\n\n"CWHITE"√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø, √¢√¢√•√§√®√≤√• √≠√Æ√¨√•√∞ √°√†√≠√™√Æ√¢√±√™√Æ√£√Æ √±√∑¬∏√≤√†, √≠√† √™√Æ√≤√Æ√∞√ª√©\n√µ√Æ√≤√®√≤√• √Æ√±√≥√π√•√±√≤√¢√®√≤√º √Ø√•√∞√•√¢√Æ√§ √±√∞√•√§√±√≤√¢ √¢ √Ø√Æ√´√• √≠√®√¶√•:","√É√Æ√≤√Æ√¢√Æ","Siguiente");
				}
			}
			ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch", 4.0,0,0,0,0,0, 1);
			PlayerPlaySound(playerid, 4203, 0.0, 0.0, 0.0);
		}
	case 115: {
		if(!response) return 1;
		if(!strlen(inputtext)) return SPD(playerid, 115, DIALOG_STYLE_INPUT, "{40bf80}√Å√´√†√£√Æ√≤√¢√Æ√∞√®√≤√•√´√º√≠√Æ√±√≤√º", ""CWHITE"√è√∞√•√§√´√†√£√†√•√¨ √Ç√†√¨ √Ø√•√∞√•√∑√®√±√´√®√≤√º √´√æ√°√≥√æ √±√≥√¨√¨√≥ √¢ √°√´√†√£√Æ√≤√¢√Æ√∞√®√≤√•√´√º√≠√ª√©\n√¥√Æ√≠√§ √∏√≤√†√≤√†. √Ç√±√• √Ø√Æ√´√≥√∑√•√≠√≠√ª√• √±√∞√•√§√±√≤√¢√† √Ø√Æ√©√§√≥√≤ √≠√† √≥√´√≥√∑√∏√•√≠√®√•\n√Ω√™√Æ√≠√Æ√¨√®√™√® √® √±√Æ√±√≤√Æ√ø√≠√®√ø √∏√≤√†√≤√†. √è√Æ√¨√®√¨√Æ √Ω√≤√Æ√£√Æ, √Ç√ª √±√¨√Æ√¶√•√≤√• √Ø√Æ√Ø√†√±√≤√º\n√¢ √±√Ø√®√±√Æ√™ √´√≥√∑√∏√®√µ √°√´√†√£√Æ√≤√¢√Æ√∞√®√≤√•√´√•√©, √±√§√•√´√†√¢√∏√®√µ √≠√†√®√°√Æ√´√º√∏√®√• √¢√ß√≠√Æ√±√ª.\n\n√è√Æ√±√¨√Æ√≤√∞√•√≤√º √Ω√≤√Æ√≤ √±√Ø√®√±√Æ√™ √¨√Æ√¶√≠√Æ √®√±√Ø√Æ√´√º√ß√≥√ø /charity.\n√í√†√¨ √¶√• √Ç√ª √±√¨√Æ√¶√•√≤√• √Ø√Æ√±√¨√Æ√≤√∞√•√≤√º √Æ√°√π√≥√æ √±√≥√¨√¨√≥ √Ç√†√∏√®√µ √Ø√Æ√¶√•√∞√≤√¢√Æ√¢√†√≠√®√©.", "√Ç√≠√•√±√≤√®", "Cerrar");
		new count = strval(inputtext), gmt_s[40];
		if(count < 1) {
			SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§√•√≠√† √≠√•√¢√•√∞√≠√†√ø √±√≥√¨√¨√† √Ø√Æ√¶√•√∞√≤√¢√Æ√¢√†√≠√®√ø");
			return SPD(playerid, 115, DIALOG_STYLE_INPUT, "{40bf80}√Å√´√†√£√Æ√≤√¢√Æ√∞√®√≤√•√´√º√≠√Æ√±√≤√º", ""CWHITE"√è√∞√•√§√´√†√£√†√•√¨ √Ç√†√¨ √Ø√•√∞√•√∑√®√±√´√®√≤√º √´√æ√°√≥√æ √±√≥√¨√¨√≥ √¢ √°√´√†√£√Æ√≤√¢√Æ√∞√®√≤√•√´√º√≠√ª√©\n√¥√Æ√≠√§ √∏√≤√†√≤√†. √Ç√±√• √Ø√Æ√´√≥√∑√•√≠√≠√ª√• √±√∞√•√§√±√≤√¢√† √Ø√Æ√©√§√≥√≤ √≠√† √≥√´√≥√∑√∏√•√≠√®√•\n√Ω√™√Æ√≠√Æ√¨√®√™√® √® √±√Æ√±√≤√Æ√ø√≠√®√ø √∏√≤√†√≤√†. √è√Æ√¨√®√¨√Æ √Ω√≤√Æ√£√Æ, √Ç√ª √±√¨√Æ√¶√•√≤√• √Ø√Æ√Ø√†√±√≤√º\n√¢ √±√Ø√®√±√Æ√™ √´√≥√∑√∏√®√µ √°√´√†√£√Æ√≤√¢√Æ√∞√®√≤√•√´√•√©, √±√§√•√´√†√¢√∏√®√µ √≠√†√®√°√Æ√´√º√∏√®√• √¢√ß√≠√Æ√±√ª.\n\n√è√Æ√±√¨√Æ√≤√∞√•√≤√º √Ω√≤√Æ√≤ √±√Ø√®√±√Æ√™ √¨√Æ√¶√≠√Æ √®√±√Ø√Æ√´√º√ß√≥√ø /charity.\n√í√†√¨ √¶√• √Ç√ª √±√¨√Æ√¶√•√≤√• √Ø√Æ√±√¨√Æ√≤√∞√•√≤√º √Æ√°√π√≥√æ √±√≥√¨√¨√≥ √Ç√†√∏√®√µ √Ø√Æ√¶√•√∞√≤√¢√Æ√¢√†√≠√®√©.", "√Ç√≠√•√±√≤√®", "Cerrar");
		}
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return SPD(playerid, 115, DIALOG_STYLE_INPUT, "{40bf80}√Å√´√†√£√Æ√≤√¢√Æ√∞√®√≤√•√´√º√≠√Æ√±√≤√º", ""CWHITE"√è√∞√•√§√´√†√£√†√•√¨ √Ç√†√¨ √Ø√•√∞√•√∑√®√±√´√®√≤√º √´√æ√°√≥√æ √±√≥√¨√¨√≥ √¢ √°√´√†√£√Æ√≤√¢√Æ√∞√®√≤√•√´√º√≠√ª√©\n√¥√Æ√≠√§ √∏√≤√†√≤√†. √Ç√±√• √Ø√Æ√´√≥√∑√•√≠√≠√ª√• √±√∞√•√§√±√≤√¢√† √Ø√Æ√©√§√≥√≤ √≠√† √≥√´√≥√∑√∏√•√≠√®√•\n√Ω√™√Æ√≠√Æ√¨√®√™√® √® √±√Æ√±√≤√Æ√ø√≠√®√ø √∏√≤√†√≤√†. √è√Æ√¨√®√¨√Æ √Ω√≤√Æ√£√Æ, √Ç√ª √±√¨√Æ√¶√•√≤√• √Ø√Æ√Ø√†√±√≤√º\n√¢ √±√Ø√®√±√Æ√™ √´√≥√∑√∏√®√µ √°√´√†√£√Æ√≤√¢√Æ√∞√®√≤√•√´√•√©, √±√§√•√´√†√¢√∏√®√µ √≠√†√®√°√Æ√´√º√∏√®√• √¢√ß√≠√Æ√±√ª.\n\n√è√Æ√±√¨√Æ√≤√∞√•√≤√º √Ω√≤√Æ√≤ √±√Ø√®√±√Æ√™ √¨√Æ√¶√≠√Æ √®√±√Ø√Æ√´√º√ß√≥√ø /charity.\n√í√†√¨ √¶√• √Ç√ª √±√¨√Æ√¶√•√≤√• √Ø√Æ√±√¨√Æ√≤√∞√•√≤√º √Æ√°√π√≥√æ √±√≥√¨√¨√≥ √Ç√†√∏√®√µ √Ø√Æ√¶√•√∞√≤√¢√Æ√¢√†√≠√®√©.", "√Ç√≠√•√±√≤√®", "Cerrar");
			}
		}
		if(count > pData[playerid][pCash]) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Ø√Æ√¶√•√∞√≤√¢√Æ√¢√†√≠√®√ø √≤√†√™√Æ√© √±√≥√¨√¨√ª");

		Hook_GivePlayerMoney(playerid, -count);
		Gos_Nalog[1] += count;
		SaveInstrument();
        format(gmt_s, sizeof(gmt_s), "~r~-%d$", count);
        GameTextForPlayer(playerid, gmt_s, 3000, 1);
		new str_act[100];
		mysql_format(mysql_Handle, str_act, sizeof(str_act), "UPDATE `accounts` SET `p_charity` = `p_charity` + %d WHERE `id` = %d", count, pData[playerid][pID]);
		mysql_tquery(mysql_Handle, str_act);
		SCMF(playerid, COLOR_LITEBLUE, "√è√Æ√¶√•√∞√≤√¢√Æ√¢√†√≠√®√• √¢ √∞√†√ß√¨√•√∞√• "CPALEGREEN"%d$ "CLITEBLUE"√≥√±√Ø√•√∏√≠√Æ √¢√≠√•√±√•√≠√Æ. √ë√Ø√†√±√®√°√Æ", count);
	}

	case 8903: {
			if(!response) return ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch", 4.0,0,0,0,0,0, 1), PlayerPlaySound(playerid, 4203, 0.0, 0.0, 0.0), SPD(playerid, 8900, DIALOG_STYLE_LIST, "{cccc66}√Å√†√≠√™√Æ√¨√†√≤", "{ff9945}[1] "CWHITE"√è√Æ√´√Æ√¶√®√≤√º √±√∞√•√§√±√≤√¢√† √≠√† √°√†√≠√™. √±√∑¬∏√≤\n{ff9945}[2] "CWHITE"√ë√≠√ø√≤√º √±√∞√•√§√±√≤√¢√† √± √°√†√≠√™. √±√∑¬∏√≤√†\n{ff9945}[3] "CWHITE"√ì√ß√≠√†√≤√º √°√†√´√†√≠√± √°√†√≠√™. √±√∑¬∏√≤√†\n{ff9945}[4] "CWHITE"√è√Æ√Ø√Æ√´√≠√®√≤√º √±√∑¬∏√≤ √≤√•√´√•√¥√Æ√≠√†\n{ff9945}[5] "CWHITE"√Å√•√ß√≠√†√´√®√∑√≠√ª√© √Ø√•√∞√•√¢√Æ√§", "Seleccione", "√Ç√ª√©√≤√®");
			new money = strval(inputtext);
			if(!strlen(inputtext)) return SPD(playerid,8903, DIALOG_STYLE_INPUT,"{cccc66}√Å√†√≠√™√Æ√¨√†√≤", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ √µ√Æ√≤√®√≤√• √Ø√Æ√´√Æ√¶√®√≤√º √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√è√Æ√´√Æ√¶√®√≤√º", "Siguiente");
			if(strval(inputtext) < 1) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§√•√≠√† √≠√•√¢√•√∞√≠√†√ø √±√≥√¨√¨√† √Ø√Æ√Ø√Æ√´√≠√•√≠√®√ø"), SPD(playerid,8903, DIALOG_STYLE_INPUT,"{cccc66}√Å√†√≠√™√Æ√¨√†√≤", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ √µ√Æ√≤√®√≤√• √Ø√Æ√´√Æ√¶√®√≤√º √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√è√Æ√´√Æ√¶√®√≤√º", "Siguiente");
			if(strval(inputtext) > pData[playerid][pCash]) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √≠√†√´√®√∑√≠√ª√µ √±√∞√•√§√±√≤√¢");
			for(new i = strlen(inputtext) - 1; i != -1; i --) {
				switch(inputtext[i]) {
					case '0'..'9': continue;
					default: return SPD(playerid,8903, DIALOG_STYLE_INPUT,"{cccc66}√Å√†√≠√™√Æ√¨√†√≤", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ √µ√Æ√≤√®√≤√• √Ø√Æ√´√Æ√¶√®√≤√º √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√è√Æ√´√Æ√¶√®√≤√º", "Siguiente");
				}
			}
			Hook_GivePlayerMoney(playerid, -money);
			pData[playerid][pBank]+=money;
			UpdatePlayerData(playerid, "pBank", pData[playerid][pBank]); UpdatePlayerData(playerid, "pCash", pData[playerid][pCash]);
			format(string,22, "~r~-%d$", money);
			GameTextForPlayer(playerid, string, 3000, 1);
			return SCMF(playerid,COLOR_BLUE,"√Ç√ª √Ø√Æ√´√Æ√¶√®√´√® √≠√† √°√†√≠√™√Æ√¢√±√™√®√© √±√∑¬∏√≤ %d$. √Ç√†√∏ √°√†√´√†√≠√±: %d$", money, pData[playerid][pBank]);
		}
	case 8904: {
			if(!response) return ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch", 4.0,0,0,0,0,0, 1), PlayerPlaySound(playerid, 4203, 0.0, 0.0, 0.0), SPD(playerid, 8900, DIALOG_STYLE_LIST, "{cccc66}√Å√†√≠√™√Æ√¨√†√≤", "{ff9945}[1] "CWHITE"√è√Æ√´√Æ√¶√®√≤√º √±√∞√•√§√±√≤√¢√† √≠√† √°√†√≠√™. √±√∑¬∏√≤\n{ff9945}[2] "CWHITE"√ë√≠√ø√≤√º √±√∞√•√§√±√≤√¢√† √± √°√†√≠√™. √±√∑¬∏√≤√†\n{ff9945}[3] "CWHITE"√ì√ß√≠√†√≤√º √°√†√´√†√≠√± √°√†√≠√™. √±√∑¬∏√≤√†\n{ff9945}[4] "CWHITE"√è√Æ√Ø√Æ√´√≠√®√≤√º √±√∑¬∏√≤ √≤√•√´√•√¥√Æ√≠√†\n{ff9945}[5] "CWHITE"√Å√•√ß√≠√†√´√®√∑√≠√ª√© √Ø√•√∞√•√¢√Æ√§", "Seleccione", "√Ç√ª√©√≤√®");
			if(!strlen(inputtext)) return SPD(playerid,8904, DIALOG_STYLE_INPUT,"{cccc66}√Å√†√≠√™√Æ√¨√†√≤", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ √µ√Æ√≤√®√≤√• √±√≠√ø√≤√º √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√ë√≠√ø√≤√º", "Siguiente");
			if(strval(inputtext) < 1) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§√•√≠√† √≠√•√¢√•√∞√≠√†√ø √±√≥√¨√¨√†"), SPD(playerid,8904, DIALOG_STYLE_INPUT,"{cccc66}√Å√†√≠√™√Æ√¨√†√≤", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ √µ√Æ√≤√®√≤√• √±√≠√ø√≤√º √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√ë√≠√ø√≤√º", "Siguiente");
			if(strval(inputtext) > pData[playerid][pBank]) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √≠√† √°√†√≠√™√Æ√¢√±√™√Æ√¨ √±√∑√•√≤√≥");
			for(new i = strlen(inputtext) - 1; i != -1; i --) {
				switch(inputtext[i]) {
					case '0'..'9': continue;
					default: return SPD(playerid,8904, DIALOG_STYLE_INPUT,"{cccc66}√Å√†√≠√™√Æ√¨√†√≤", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ √µ√Æ√≤√®√≤√• √±√≠√ø√≤√º √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√ë√≠√ø√≤√º", "Siguiente");
				}
			}
			new money = strval(inputtext);
			Hook_GivePlayerMoney(playerid, money);
			pData[playerid][pBank]-=money;
			UpdatePlayerData(playerid, "pBank", pData[playerid][pBank]);
			format(string,40, "~g~+%d$", money);
			GameTextForPlayer(playerid, string, 3000, 1);
			return SCMF(playerid,COLOR_BLUE,"√Ç√ª √±√≠√ø√´√® √± √°√†√≠√™√Æ√¢√±√™√Æ√£√Æ √±√∑√•√≤√† %d$. √Ç√†√∏ √°√†√´√†√≠√±: %d$", money, pData[playerid][pBank]);
		}
	case 8905: ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch", 4.0,0,0,0,0,0, 1), PlayerPlaySound(playerid, 4203, 0.0, 0.0, 0.0), SPD(playerid, 8900, DIALOG_STYLE_LIST, "{cccc66}√Å√†√≠√™√Æ√¨√†√≤", "{ff9945}[1] "CWHITE"√è√Æ√´√Æ√¶√®√≤√º √±√∞√•√§√±√≤√¢√† √≠√† √°√†√≠√™. √±√∑¬∏√≤\n{ff9945}[2] "CWHITE"√ë√≠√ø√≤√º √±√∞√•√§√±√≤√¢√† √± √°√†√≠√™. √±√∑¬∏√≤√†\n{ff9945}[3] "CWHITE"√ì√ß√≠√†√≤√º √°√†√´√†√≠√± √°√†√≠√™. √±√∑¬∏√≤√†\n{ff9945}[4] "CWHITE"√è√Æ√Ø√Æ√´√≠√®√≤√º √±√∑¬∏√≤ √≤√•√´√•√¥√Æ√≠√†\n{ff9945}[5] "CWHITE"√Å√•√ß√≠√†√´√®√∑√≠√ª√© √Ø√•√∞√•√¢√Æ√§", "Seleccione", "√Ç√ª√©√≤√®");
	case 8906: {
			if(!response) return ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch", 4.0,0,0,0,0,0, 1), PlayerPlaySound(playerid, 4203, 0.0, 0.0, 0.0), SPD(playerid, 8900, DIALOG_STYLE_LIST, "{cccc66}√Å√†√≠√™√Æ√¨√†√≤", "{ff9945}[1] "CWHITE"√è√Æ√´√Æ√¶√®√≤√º √±√∞√•√§√±√≤√¢√† √≠√† √°√†√≠√™. √±√∑¬∏√≤\n{ff9945}[2] "CWHITE"√ë√≠√ø√≤√º √±√∞√•√§√±√≤√¢√† √± √°√†√≠√™. √±√∑¬∏√≤√†\n{ff9945}[3] "CWHITE"√ì√ß√≠√†√≤√º √°√†√´√†√≠√± √°√†√≠√™. √±√∑¬∏√≤√†\n{ff9945}[4] "CWHITE"√è√Æ√Ø√Æ√´√≠√®√≤√º √±√∑¬∏√≤ √≤√•√´√•√¥√Æ√≠√†\n{ff9945}[5] "CWHITE"√Å√•√ß√≠√†√´√®√∑√≠√ª√© √Ø√•√∞√•√¢√Æ√§", "Seleccione", "√Ç√ª√©√≤√®");
			if(!strlen(inputtext)) {
				format(string, 144, ""CWHITE"√ç√† S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤ √°√†√´√†√≠√± √Ç√†√∏√•√£√Æ √¨√Æ√°√®√´√º√≠√Æ√£√Æ √≤√•√´√•√¥√Æ√≠√† √±√Æ√±√≤√†√¢√´√ø√•√≤ "CPALEGREEN"%d$\n"CWHITE"√Ñ√´√ø √Ø√Æ√Ø√Æ√´√≠√•√≠√®√ø √±√∑¬∏√≤√†, √¢√¢√•√§√®√≤√• √±√≥√¨√¨√≥ √¢ √Ø√Æ√´√• √≠√®√¶√•:", pData[playerid][pCashNumber]);
				return SPD(playerid, 8906, DIALOG_STYLE_INPUT, "{cccc66}√Å√†√≠√™√Æ√¨√†√≤", string, "√è√Æ√Ø√Æ√´√≠√®√≤√º", "Siguiente");
			}
			if(strval(inputtext) > pData[playerid][pCash]) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢");
			for(new i = strlen(inputtext) - 1; i != -1; i --) {
				switch(inputtext[i]) {
					case '0'..'9': continue;
					default: {
						format(string, 144, ""CWHITE"√ç√† S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤ √°√†√´√†√≠√± √Ç√†√∏√•√£√Æ √¨√Æ√°√®√´√º√≠√Æ√£√Æ √≤√•√´√•√¥√Æ√≠√† √±√Æ√±√≤√†√¢√´√ø√•√≤ "CPALEGREEN"%d$\n"CWHITE"√Ñ√´√ø √Ø√Æ√Ø√Æ√´√≠√•√≠√®√ø √±√∑¬∏√≤√†, √¢√¢√•√§√®√≤√• √±√≥√¨√¨√≥ √¢ √Ø√Æ√´√• √≠√®√¶√•:", pData[playerid][pCashNumber]);
						return SPD(playerid, 8906, DIALOG_STYLE_INPUT, "{cccc66}√Å√†√≠√™√Æ√¨√†√≤", string, "√è√Æ√Ø√Æ√´√≠√®√≤√º", "Siguiente");
					}
				}
			}
			new priceatmphone = strval(inputtext);
			Hook_GivePlayerMoney(playerid, -strval(inputtext));
			SCMF(playerid,COLOR_BLUE,"√Ç√ª √Ø√Æ√´√Æ√¶√®√´√® √≠√† √±√∑¬∏√≤ √¨√Æ√°√®√´√º√≠√Æ√£√Æ √≤√•√´√•√¥√Æ√≠√† %d$", priceatmphone);
			SCMF(playerid,COLOR_BLUE,"√Å√†√´√†√≠√± √Ç√†√∏√•√£√Æ √≤√•√´√•√¥√Æ√≠√†: %d$", pData[playerid][pCashNumber]+=priceatmphone);
			format(string,40, "~r~-%d$", priceatmphone);
			UpdatePlayerData(playerid, "pCashNumber", pData[playerid][pCashNumber]);
			return GameTextForPlayer(playerid, string, 3000, 1);
		}
	case 9955: {
		if(!response) return 1;
		new house = pData[playerid][pHouse];
		for(new i =0;i<total_count_mebel;i++) {
        	if(mebel_info[i][mHouseID] != house) continue;
        	format(mebel_info[i][mObjName],5,"None");
	
			mebel_info[i][mHouseID] = -1;
			mebel_info[i][mObjModel] = 0;
			mebel_info[i][mPX] = 
			mebel_info[i][mPY] = 
			mebel_info[i][mPZ] = 
			mebel_info[i][mRX] = 
			mebel_info[i][mRY] = 
			mebel_info[i][mRZ] = 0.0;
        	DestroyDynamicObject(mebel_info[i][mObjectID]);
        }

		new query[60];
		mysql_format(mysql_Handle, query, sizeof(query), "DELETE FROM `ownmebel` WHERE `homeOwn`=%i", house);
		mysql_tquery(mysql_Handle, query);
		PlayerPlaySound(playerid, 40403, 0.0, 0.0, 0.0);
		SCM(playerid, 0xFF6640FF,"√Ç√ª √¢√ª√°√∞√Æ√±√®√´√® √¢√±√æ √¨√•√°√•√´√º √®√ß √±√¢√Æ√•√£√Æ √§√Æ√¨√†");
	}
	case 918: {
		if(!response) return callcmd::home(playerid);
		new house = pData[playerid][pHouse];
		if(!listitem) return SPD(playerid,9955,DIALOG_STYLE_MSGBOX,"{ff6666}√è√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√•",""CWHITE"Quieres √¢√ª√°√∞√Æ√±√®√≤√º √¢√±√æ √¨√•√°√•√´√º √®√ß √±√¢√Æ√•√£√Æ √§√Æ√¨√†?","S√≠","No");
		new p_listitem = -1;
		for(new i =0;i<total_count_mebel;i++) {
			if(mebel_info[i][mHouseID] == house) p_listitem ++;
			if(p_listitem != listitem - 1) continue;
			SetPVarInt(playerid, "inedit_ownedobj", i+1);
			EditDynamicObject(playerid, mebel_info[i][mObjectID]);
			break;
		}
	}
	case 5301: callcmd::home(playerid);
	case 5300: {
			new house = pData[playerid][pHouse];
			if(response) {
				switch(listitem) {
					case 0: {
						new text_car1[70], text_car2[70], text_car3[70];

						new ids = GetCityName (HouseInfo[house][hEnter][0], HouseInfo[house][hEnter][1]), home_str[420];
						if(pData[playerid][pCar][0] != 0) format(text_car1, 70, VehicleNames[pData[playerid][pCar][0] - 400]);
						else strcat(text_car1, "{ff4d4d}√é√≤√±√≥√≤√±√≤√¢√≥√•√≤");
						if(pData[playerid][pCar][1] != 0) format(text_car2, 70, VehicleNames[pData[playerid][pCar][1] - 400]);
						else strcat(text_car2, "{ff4d4d}√é√≤√±√≥√≤√±√≤√¢√≥√•√≤");
						if(pData[playerid][pCar][2] != 0) format(text_car3, 70, VehicleNames[pData[playerid][pCar][2] - 400]);
						else strcat(text_car3, "{ff4d4d}√é√≤√±√≥√≤√±√≤√¢√≥√•√≤");
						format(home_str, sizeof(home_str), 
							"\n\
							"CWHITE"√ç√Æ√¨√•√∞ √§√Æ√¨√†:\t\t%d\n\
							√ä√´√†√±√±:\t\t\t{40bf40}%s\n\
							"CWHITE"√å√•√±√≤√Æ√Ø√Æ√´√Æ√¶√•√≠√®√•:\t%s\n\
							\n\
							√ë√≤√Æ√®√¨√Æ√±√≤√º:\t\t%d$\n\
							√ì√∞√Æ√¢√•√≠√º √≥√´√≥√∑√∏√•√≠√®√©:\t%d\n\
							√é√Ø√´√†√≤√† √§√Æ√¨√†:\t\t"CORANGE"%d √®√ß 30 √§√≠√•√©\n\
							"CWHITE"√å√Æ√§√•√´√º √†√¢√≤√Æ ¬π1:\t"CBLUE"%s\n\
							"CWHITE"√å√Æ√§√•√´√º √†√¢√≤√Æ ¬π2:\t"CBLUE"%s\n\
							"CWHITE"√å√Æ√§√•√´√º √†√¢√≤√Æ ¬π3:\t"CBLUE"%s\n\
							"CWHITE"√ë√≤√†√≤√≥√±:\t\t\t%s",
						house, classhome_names[HouseInfo[house][hKlass]], gSAZonesCity[ids][SAZONE_NAME], 
						HouseInfo[house][hValue], HouseInfo[house][hADoor] + HouseInfo[house][hSafe] + HouseInfo[house][hSub] + HouseInfo[house][hPool], 
						HouseInfo[house][hPay], 
						text_car1, text_car2, text_car3, (HouseInfo[house][hLock] ? (""CERROR"√Ñ√Æ√¨ √ß√†√™√∞√ª√≤") : (""CMAIN"√Ñ√Æ√¨ √Æ√≤√™√∞√ª√≤")));
						SPD(playerid, 5301, DIALOG_STYLE_MSGBOX, "{FFCD00}√à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ √§√Æ√¨√•", home_str, "Siguiente", "");
					}
					case 1: {
						if(!IsPlayerInRangeOfPoint(playerid, 4.0,HouseInfo[house][hEnter][0], HouseInfo[house][hEnter][1], HouseInfo[house][hEnter][2])) 
							return SPD(playerid, 633, DIALOG_STYLE_MSGBOX, ""CERROR"√é√∏√®√°√™√†", ""CWHITE"√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √Æ√™√Æ√´√Æ √¢√µ√ÆS√≠ √¢ √±√¢√Æ√© √§√Æ√¨", "Siguiente", "Cerrar");
						if(!HouseInfo[house][hLock]) {
							SCM(playerid, COLOR_ERROR, "√Ñ√Æ√¨ √ß√†√™√∞√ª√≤");
							HouseInfo[house][hLock] = 1;
						}
						else {
							SCM(playerid, COLOR_MAIN, "√Ñ√Æ√¨ √Æ√≤√™√∞√ª√≤");
							HouseInfo[house][hLock] = 0;
						}
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						new str_lact[70];
						mysql_format(mysql_Handle, str_lact, sizeof(str_lact), "UPDATE `house` SET `hLock` = %d WHERE `hID` = %d", HouseInfo[house][hLock], house);
						mysql_tquery(mysql_Handle, str_lact);
						callcmd::home(playerid);
					}
					case 2: callcmd::sellhome(playerid);
					case 3: SPD(playerid, 5566, DIALOG_STYLE_INPUT,"{FFCD00}√è√∞√ÆS√≠√¶√†",""CWHITE"√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø √¢√¢√•√§√®√≤√• √∑√•√∞√•√ß √Ø√∞√Æ√°√•√´\n√Ø√†√∞√†√¨√•√≤√∞√ª √§√´√ø √Ø√∞√ÆS√≠√¶√® √§√Æ√¨√†\n\n"CLITEBLUE"[id √®√£√∞√Æ√™√†] [√∂√•√≠√†]","S√≠√´√•√•","Cerrar");
					case 4: callcmd::fixcar(playerid);
					case 5: {
						if(GetPlayerVirtualWorld(playerid) != pData[playerid][pHouse] + 50) 
							return SPD(playerid, 633, DIALOG_STYLE_MSGBOX, ""CERROR"√é√∏√®√°√™√†", ""CWHITE"√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √±√¢√Æ¬∏√¨ √§√Æ√¨√•", "Siguiente", "Cerrar");
						string="{ff6666}√Ç√ª√°√∞√Æ√±√®√≤√º √¢√±√æ √¨√•√°√•√´√º\t \n"CWHITE"";
						new bool:status;
						for(new i =0;i<total_count_mebel;i++) {
			            	if(mebel_info[i][mHouseID] != house) continue;
			            	status=true;
			            	format(string,sizeof(string),"%s%s\t√≤√Æ√¢. √≠√Æ√¨√•√∞ %i\n",string,mebel_info[i][mObjName],mebel_info[i][mObjModel]);
			            }
			            if(!status) return SPD(playerid, 633, DIALOG_STYLE_MSGBOX, ""CERROR"√é√∏√®√°√™√†", ""CWHITE"√ì √Ç√†√± No √¨√•√°√•√´√® √¢ √§√Æ√¨√•\n√Ç√ª √¨√Æ√¶√•√≤√• √Ø√∞√®√Æ√°√∞√•√±√≤√® √•¬∏ √¢ √¨√•√°√•√´√º√≠√Æ√¨ √±√†√´√Æ√≠√•", "Siguiente", "Cerrar");
						SPD(playerid,918,DIALOG_STYLE_TABLIST,"{FFCD00}√ê√†√±√±√≤√†√≠√Æ√¢√™√† √¨√•√°√•√´√®",string,"Cambio","Siguiente");
					}
					case 6: {
						if(GetPlayerVirtualWorld(playerid) != pData[playerid][pHouse] + 50) return SPD(playerid, 633, DIALOG_STYLE_MSGBOX, ""CERROR"√é√∏√®√°√™√†", ""CWHITE"√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √±√¢√Æ¬∏√¨ √§√Æ√¨√•", "Siguiente", "Cerrar");
						switch(HouseInfo[house][hADoor] + HouseInfo[house][hSafe] + HouseInfo[house][hSub] + HouseInfo[house][hPool])
						{
							case 0: {
								SPD(playerid, 2938, DIALOG_STYLE_TABLIST, ""CLITEBLUE"√ì√´√≥√∑√∏√•√≠√®√ø √§√´√ø √§√Æ√¨√†",
									"1 √≥√∞√Æ√¢√•√≠√º\t√Ä√¢√≤√Æ√¨√†√≤√®√∑√•√±√™√®√• √§√¢√•√∞√®\t{99ff66}20000$\n\
									{b50a03}2 √≥√∞√Æ√¢√•√≠√º\t{b50a03}√ë√•√©√¥\t{b50a03}30000$\n\
									{b50a03}3 √≥√∞√Æ√¢√•√≠√º\t{b50a03}√ë√≥√°√±√®√§√®√®\t{b50a03}40000$\n\
									{b50a03}4 √≥√∞√Æ√¢√•√≠√º\t{b50a03}√Å√†√±√±√•√©√≠\t{b50a03}110000$",
								"√ä√≥√Ø√®√≤√º", "Siguiente");
							}
							case 1: {
								SPD(playerid, 2938, DIALOG_STYLE_TABLIST, ""CLITEBLUE"√ì√´√≥√∑√∏√•√≠√®√ø √§√´√ø √§√Æ√¨√†",
									"{025ddb}1 √≥√∞√Æ√¢√•√≠√º\t{025ddb}√Ä√¢√≤√Æ√¨√†√≤√®√∑√•√±√™√®√• √§√¢√•√∞√®\t{025ddb}√ä√≥√Ø√´√•√≠√Æ\n\
									2 √≥√∞√Æ√¢√•√≠√º\t√ë√•√©√¥\t{99ff66}30000$\n\
									{b50a03}3 √≥√∞√Æ√¢√•√≠√º\t{b50a03}√ë√≥√°√±√®√§√®√®\t{b50a03}40000$\n\
									{b50a03}4 √≥√∞√Æ√¢√•√≠√º\t{b50a03}√Å√†√±√±√•√©√≠\t{b50a03}110000$",
								"√ä√≥√Ø√®√≤√º", "Siguiente");
							}
							case 2: {
								SPD(playerid, 2938, DIALOG_STYLE_TABLIST, ""CLITEBLUE"√ì√´√≥√∑√∏√•√≠√®√ø √§√´√ø √§√Æ√¨√†",
									"{025ddb}1 √≥√∞√Æ√¢√•√≠√º\t{025ddb}√Ä√¢√≤√Æ√¨√†√≤√®√∑√•√±√™√®√• √§√¢√•√∞√®\t{025ddb}√ä√≥√Ø√´√•√≠√Æ\n\
									{025ddb}2 √≥√∞√Æ√¢√•√≠√º\t{025ddb}√ë√•√©√¥\t{025ddb}√ä√≥√Ø√´√•√≠√Æ\n\
									3 √≥√∞√Æ√¢√•√≠√º\t√ë√≥√°√±√®√§√®√®\t{99ff66}40000$\n\
									{b50a03}4 √≥√∞√Æ√¢√•√≠√º\t{b50a03}√Å√†√±√±√•√©√≠\t{b50a03}110000$",
								"√ä√≥√Ø√®√≤√º", "Siguiente");
							}
							case 3: {
								SPD(playerid, 2938, DIALOG_STYLE_TABLIST, ""CLITEBLUE"√ì√´√≥√∑√∏√•√≠√®√ø √§√´√ø √§√Æ√¨√†",
									"{025ddb}1 √≥√∞√Æ√¢√•√≠√º\t{025ddb}√Ä√¢√≤√Æ√¨√†√≤√®√∑√•√±√™√®√• √§√¢√•√∞√®\t{025ddb}√ä√≥√Ø√´√•√≠√Æ\n\
									{025ddb}2 √≥√∞√Æ√¢√•√≠√º\t{025ddb}√ë√•√©√¥\t{025ddb}√ä√≥√Ø√´√•√≠√Æ\n\
									{025ddb}3 √≥√∞√Æ√¢√•√≠√º\t{025ddb}√ë√≥√°√±√®√§√®√®\t{025ddb}√ä√≥√Ø√´√•√≠√Æ\n\
									4 √≥√∞√Æ√¢√•√≠√º\t√Å√†√±√±√•√©√≠\t{99ff66}110000$",
								"√ä√≥√Ø√®√≤√º", "Siguiente");
							}
							case 4: {
								SPD(playerid, 2938, DIALOG_STYLE_TABLIST, ""CLITEBLUE"√ì√´√≥√∑√∏√•√≠√®√ø √§√´√ø √§√Æ√¨√†",
									"{025ddb}1 √≥√∞√Æ√¢√•√≠√º\t{025ddb}√Ä√¢√≤√Æ√¨√†√≤√®√∑√•√±√™√®√• √§√¢√•√∞√®\t{025ddb}√ä√≥√Ø√´√•√≠√Æ\n\
									{025ddb}2 √≥√∞√Æ√¢√•√≠√º\t{025ddb}√ë√•√©√¥\t{025ddb}√ä√≥√Ø√´√•√≠√Æ\n\
									{025ddb}3 √≥√∞√Æ√¢√•√≠√º\t{025ddb}√ë√≥√°√±√®√§√®√®\t{025ddb}√ä√≥√Ø√´√•√≠√Æ\n\
									{025ddb}4 √≥√∞√Æ√¢√•√≠√º\t{025ddb}√Å√†√±√±√•√©√≠\t{025ddb}√ä√≥√Ø√´√•√≠√Æ",
								"√ä√≥√Ø√®√≤√º", "Siguiente");
							}
						}
					}
					case 7: callcmd::sellcar(playerid);
					case 8: SPD(playerid, 5565, DIALOG_STYLE_INPUT,"{FFCD00}√è√∞√ÆS√≠√¶√†",""CWHITE"√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø √¢√¢√•√§√®√≤√• √∑√•√∞√•√ß √Ø√∞√Æ√°√•√´\n√Ø√†√∞√†√¨√•√≤√∞√ª √§√´√ø √Ø√∞√ÆS√≠√¶√® √†√¢√≤√Æ√¨√Æ√°√®√´√ø\n\n"CLITEBLUE"[id √®√£√∞√Æ√™√†] [√∂√•√≠√†]","S√≠√´√•√•","Cerrar");
					case 9: {
						if(GetPlayerVirtualWorld(playerid) != pData[playerid][pHouse] + 50) return SPD(playerid, 633, DIALOG_STYLE_MSGBOX, ""CERROR"√é√∏√®√°√™√†", ""CWHITE"√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √±√¢√Æ¬∏√¨ √§√Æ√¨√•", "Siguiente", "Cerrar");
						new texts[650], deagle[50], shot4[50], ak[20], m4[20], mp[20];
						new colordeagle[7], colorshot4[7], colorak[7], colorm4[7], colormp[7];
						if(HouseInfo[house][hGun][0] == 24 && HouseInfo[house][hGunAmmo][0] > 0) { colordeagle="2BE01B",deagle = "Desert Eagle"; } else { colordeagle="F23030",deagle = "Desert Eagle"; }
						if(HouseInfo[house][hGun][1] == 25 && HouseInfo[house][hGunAmmo][1] > 0) { colorshot4="2BE01B",shot4 = "Shotgun"; } else { colorshot4="F23030",shot4 = "Shotgun"; }
						if(HouseInfo[house][hGun][2] == 30 && HouseInfo[house][hGunAmmo][2] > 0) { colorak="2BE01B",ak = "AK47"; } else { colorak="F23030",ak = "AK47"; }
						if(HouseInfo[house][hGun][3] == 31 && HouseInfo[house][hGunAmmo][3] > 0) { colorm4="2BE01B",m4 = "M4"; } else { colorm4="F23030",m4 = "M4"; }
						if(HouseInfo[house][hGun][4] == 29 && HouseInfo[house][hGunAmmo][4] > 0) { colormp="2BE01B",mp = "MP5"; } else { colormp="F23030",mp = "MP5"; }
						format(texts,650,"{%s}%s\t{%s}%d √Ø√†√≤√∞.\n{%s}%s\t{%s}%d √Ø√†√≤√∞.\n{%s}%s\t{%s}%d √Ø√†√≤√∞.\n{%s}%s\t{%s}%d √Ø√†√≤√∞.\n{%s}%s\t{%s}%d √Ø√†√≤√∞.\n{888888}√è√Æ√´√Æ√¶√®√≤√º √¢√±¬∏ √Æ√∞√≥√¶√®√• √¢ √±√•√©√¥\t ",colordeagle,deagle,colordeagle,HouseInfo[house][hGunAmmo][0],colorshot4,shot4,colorshot4,HouseInfo[house][hGunAmmo][1],colorak,ak,colorak,HouseInfo[house][hGunAmmo][2],colorm4,m4,colorm4,HouseInfo[house][hGunAmmo][3],colormp,mp,colormp,HouseInfo[house][hGunAmmo][4]);
						SPD(playerid, 5320, DIALOG_STYLE_TABLIST,""CMAIN"√ë√•√©√¥", texts, "Seleccione", "Siguiente");
					}
				}
			}
		}
	case 5565: {
		if(!response) return 1;
		new player_to, price;
		if(sscanf(inputtext, "dd", player_to, price)) {
			SCM(playerid,COLOR_LIGHTGREY,"√Ç√¢√•√§√®√≤√• √≠√•√Æ√°√µ√Æ√§√®√¨√ª√• √Ø√†√∞√†√¨√•√≤√∞√ª √¢ √Ø√Æ√´√• √§√®√†√´√Æ√£√†");
			return SPD(playerid, 5565, DIALOG_STYLE_INPUT,"{FFCD00}√è√∞√ÆS√≠√¶√†",""CWHITE"√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø √¢√¢√•√§√®√≤√• √∑√•√∞√•√ß √Ø√∞√Æ√°√•√´\n√Ø√†√∞√†√¨√•√≤√∞√ª √§√´√ø √Ø√∞√ÆS√≠√¶√® √†√¢√≤√Æ√¨√Æ√°√®√´√ø\n\n"CLITEBLUE"[id √®√£√∞√Æ√™√†] [√∂√•√≠√†]","S√≠√´√•√•","Cerrar");
		}

		sellmycar_function(playerid, player_to, price);
	}
	case 5566: {
		if(!response) return 1;
		new player_to, price;
		if(sscanf(inputtext, "dd", player_to, price)) {
			SCM(playerid,COLOR_LIGHTGREY,"√Ç√¢√•√§√®√≤√• √≠√•√Æ√°√µ√Æ√§√®√¨√ª√• √Ø√†√∞√†√¨√•√≤√∞√ª √¢ √Ø√Æ√´√• √§√®√†√´√Æ√£√†");
			return SPD(playerid, 5566, DIALOG_STYLE_INPUT,"{FFCD00}√è√∞√ÆS√≠√¶√†",""CWHITE"√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø √¢√¢√•√§√®√≤√• √∑√•√∞√•√ß √Ø√∞√Æ√°√•√´\n√Ø√†√∞√†√¨√•√≤√∞√ª √§√´√ø √Ø√∞√ÆS√≠√¶√® √§√Æ√¨√†\n\n"CLITEBLUE"[id √®√£√∞√Æ√™√†] [√∂√•√≠√†]","S√≠√´√•√•","Cerrar");
		}

		sellmyhome_function(playerid, player_to, price);
	}
	case 5567: {
		if(!response) return 1;
		new player_to, price;
		if(sscanf(inputtext, "dd", player_to, price)) {
			SCM(playerid,COLOR_LIGHTGREY,"√Ç√¢√•√§√®√≤√• √≠√•√Æ√°√µ√Æ√§√®√¨√ª√• √Ø√†√∞√†√¨√•√≤√∞√ª √¢ √Ø√Æ√´√• √§√®√†√´√Æ√£√†");
			return SPD(playerid, 5567, DIALOG_STYLE_INPUT,"{FFCD00}√è√∞√ÆS√≠√¶√†",""CWHITE"√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø √¢√¢√•√§√®√≤√• √∑√•√∞√•√ß √Ø√∞√Æ√°√•√´\n√Ø√†√∞√†√¨√•√≤√∞√ª √§√´√ø √Ø√∞√ÆS√≠√¶√® √™√¢√†√∞√≤√®√∞√ª\n\n"CLITEBLUE"[id √®√£√∞√Æ√™√†] [√∂√•√≠√†]","S√≠√´√•√•","Cerrar");
		}

		sellmyflat_function(playerid, player_to, price);
	}
	case 633: {
		if(!response) return 1;
		callcmd::home(playerid);
	}
	case 2938: {
			if(!response) return callcmd::home(playerid);
			if(pData[playerid][pHouse] == -1) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [020]");
			new house_id = pData[playerid][pHouse];
			new ul_count = HouseInfo[house_id][hADoor] + HouseInfo[house_id][hSafe] + HouseInfo[house_id][hSub] + HouseInfo[house_id][hPool];
			if(ul_count >= 4) {
				callcmd::home(playerid);
				return SCM(playerid, COLOR_GREY, "√Ç√ª √≥√¶√• √™√≥√Ø√®√´√® √¢√±√• √¢√Æ√ß√¨√Æ√¶√≠√ª√• √≥√´√≥√∑√∏√•√≠√®√ø √§√´√ø √§√Æ√¨√†");
			}
			if(ul_count >= listitem + 1) {
				callcmd::home(playerid);
				return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≥√¶√• √™√≥√Ø√®√´√® √Ω√≤√Æ√≤ √≥√∞√Æ√¢√•√≠√º √≥√´√≥√∑√∏√•√≠√®√©");
			}
			if(ul_count != listitem) {
				callcmd::home(playerid);
				return SCM(playerid, COLOR_LIGHTGREY, "√ë√≠√†√∑√†√´√† √™√≥√Ø√®√≤√• √Ø√∞√•√§√ª√§√≥√π√®√© √≥√∞√Æ√¢√•√≠√º √≥√´√≥√∑√∏√•√≠√®√©");
			}
			switch(listitem) {
				case 0: {
					if(pData[playerid][pCash] < 20000) {
						callcmd::home(playerid);
						return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√• √µ√¢√†√≤√†√•√≤ √§√•√≠√•√£ √§√´√ø √Ø√Æ√™√≥√Ø√™√® √Ω√≤√Æ√£√Æ √≥√´√≥√∑√∏√•√≠√®√ø");
					}
					Hook_GivePlayerMoney(playerid, -20000);
					HouseInfo[house_id][hADoor] = 1;
					SCM(playerid, COLOR_BLUE, "√Ç√ª √≥√´√≥√∑√∏√®√´√® √±√¢√Æ√© √§√Æ√¨ √§√Æ {ffcc00}√Ø√•√∞√¢√Æ√£√Æ "CBLUE"√≥√∞√Æ√¢√≠√ø!");
					SCM(playerid, COLOR_MAIN, "√í√•√Ø√•√∞√º √∑√≤√Æ√°√ª √¢√ª√©√≤√® √®√ß √§√Æ√¨√† √§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √≠√†√¶√†√≤√º {ff9933}√´√•√¢√ª√© ALT"CMAIN", √±√≤√Æ√ø √≥ √§√¢√•√∞√®");
					SCM(playerid, COLOR_LIGHTGREY, "√Ä√¢√≤√Æ√¨√†√≤√®√∑√•√±√™√®√• √§√¢√•√∞√® √Æ√°√´√•√£√∑√†√≤ √¶√®√ß√≠√º √¢ √Ç√†√∏√•√¨ √§√Æ√¨√•");
					PlayerPlaySound(playerid, 17001, 0.0, 0.0, 0.0);
					updatetex_home(house_id);
					GameTextForPlayer(playerid, "~r~-20000$", 3000, 1);
				}
				case 1: {
					if(pData[playerid][pCash] < 30000) {
						callcmd::home(playerid);
						return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√• √µ√¢√†√≤√†√•√≤ √§√•√≠√•√£ √§√´√ø √Ø√Æ√™√≥√Ø√™√® √Ω√≤√Æ√£√Æ √≥√´√≥√∑√∏√•√≠√®√ø");
					}
					Hook_GivePlayerMoney(playerid, -30000);
					HouseInfo[house_id][hSafe] = 1;
					SCM(playerid, COLOR_BLUE, "√Ç√ª √≥√´√≥√∑√∏√®√´√® √±√¢√Æ√© √§√Æ√¨ √§√Æ {ffcc00}√¢√≤√Æ√∞√Æ√£√Æ "CBLUE"√≥√∞√Æ√¢√≠√ø!");
					SCM(playerid, COLOR_MAIN, "√Ç √Ç√†√∏√•√¨ √§√Æ√¨√• √°√ª√´ √≥√±√≤√†√≠√Æ√¢√´√•√≠ √±√•√©√¥");
					SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √¨√Æ√¶√•√≤√• √≥√Ø√∞√†√¢√´√ø√≤√º √®√¨ √∑√•√∞√•√ß √¨√•√≠√æ √≥√Ø√∞√†√¢√´√•√≠√®√ø √§√Æ√¨√Æ√¨ (/home > √Ñ√Æ√¨√†√∏√≠√®√© √±√•√©√¥)");
					PlayerPlaySound(playerid, 17001, 0.0, 0.0, 0.0);
					GameTextForPlayer(playerid, "~r~-30000$", 3000, 1);
				}
				case 2: {
					if(pData[playerid][pCash] < 40000) {
						callcmd::home(playerid);
						return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√• √µ√¢√†√≤√†√•√≤ √§√•√≠√•√£ √§√´√ø √Ø√Æ√™√≥√Ø√™√® √Ω√≤√Æ√£√Æ √≥√´√≥√∑√∏√•√≠√®√ø");
					}
					Hook_GivePlayerMoney(playerid, -40000);
					HouseInfo[house_id][hSub] = 1;
					SCM(playerid, COLOR_BLUE, "√Ç√ª √≥√´√≥√∑√∏√®√´√® √±√¢√Æ√© √§√Æ√¨ √§√Æ {ffcc00}√≤√∞√•√≤√º√•√£√Æ "CBLUE"√≥√∞√Æ√¢√≠√ø!");
					SCM(playerid, COLOR_MAIN, "√ç√† √Ç√†√∏√• √®√¨√ø √°√ª√´√† √Æ√¥√Æ√∞√¨√´√•√≠√† √±√≥√°√±√®√§√®√ø");
					SCM(playerid, COLOR_LIGHTGREY, "√Å√´√†√£√ÆS√≠√∞√ø √•√© √•√¶√•√§√≠√•√¢√≠√†√ø √±√≤√Æ√®√¨√Æ√±√≤√º √§√≠√•√¢√≠√Æ√© √Æ√Ø√´√†√≤√ª √§√Æ√¨√† √≥√¨√•√≠√º√∏√•√≠√† √¢ 2 √∞√†√ß√†");
					PlayerPlaySound(playerid, 17001, 0.0, 0.0, 0.0);
					GameTextForPlayer(playerid, "~r~-40000$", 3000, 1);
				}
				case 3: {
					if(pData[playerid][pCash] < 110000) {
						callcmd::home(playerid);
						return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√• √µ√¢√†√≤√†√•√≤ √§√•√≠√•√£ √§√´√ø √Ø√Æ√™√≥√Ø√™√® √Ω√≤√Æ√£√Æ √≥√´√≥√∑√∏√•√≠√®√ø");
					}
					Hook_GivePlayerMoney(playerid, -110000);
					HouseInfo[house_id][hPool] = 1;
					SCM(playerid, COLOR_BLUE, "√Ç√ª √≥√´√≥√∑√∏√®√´√® √±√¢√Æ√© √§√Æ√¨ √§√Æ {ffcc00}√∑√•√≤√¢¬∏√∞√≤√Æ√£√Æ "CBLUE"√≥√∞√Æ√¢√≠√ø!");
					SCM(playerid, COLOR_MAIN, "√è√Æ√§ √Ç√†√∏√®√¨ √§√Æ√¨√Æ√¨ √°√ª√´ √Ø√Æ√±√≤√∞√Æ√•√≠ √°√†√±√±√•√©√≠");
					SCM(playerid, COLOR_LIGHTGREY, "√è√Æ√Ø√†√±√≤√º √¢ √≠√•√£√Æ √Ç√ª √¨√Æ√¶√•√≤√• √∑√•√∞√•√ß √¨√•√≠√æ √¢√ª√µ√ÆS√≠ √®√ß √§√Æ√¨√†");
					PlayerPlaySound(playerid, 17001, 0.0, 0.0, 0.0);
					GameTextForPlayer(playerid, "~r~-110000$", 3000, 1);
				}
			}
			SaveHouse(house_id);
		}
	case 5033: {
			new house = pData[playerid][pHouse];
			if(!response) return 1;
			if(pData[playerid][pCar][0] != 0 || pData[playerid][pCar][1] != 0 || pData[playerid][pCar][2] != 0)
				return SCM(playerid, COLOR_GREY, "√è√∞√•√¶√§√• √∑√•√¨ √Ø√∞√ÆS√≠√≤√º √§√Æ√¨, √Ç√ª √§√Æ√´√¶√≠√ª √Ø√∞√ÆS√≠√≤√º √§√Æ√¨√†√∏√≠√®√© √≤√∞√†√≠√±√Ø√Æ√∞√≤ "CLITEBLUE"(/sellcar)");
			if(pData[playerid][pHouse] == -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √§√Æ√¨√†");
			HouseInfo[house][hLock] = 1;
			HouseInfo[house][hOwned] = 0;
			for(new i = 0; i != 5; i ++) HouseInfo[house][hGun][i] = 0, HouseInfo[house][hGunAmmo][i] = 0;
			DestroyVehicle(house_carid[playerid][0]),house_carid[playerid][0] = 0,DestroyVehicle(house_carid[playerid][1]),house_carid[playerid][1] = 0,DestroyVehicle(house_carid[playerid][2]),house_carid[playerid][2]=0;
			strmid(HouseInfo[house][hOwner], "The State", 0, strlen("The State"), 255);
			new return_moneyul, gmt_sellh[60];
			if(HouseInfo[house][hSafe]) return_moneyul += 30000;
			if(HouseInfo[house][hADoor]) return_moneyul += 20000;
			if(HouseInfo[house][hPool]) return_moneyul += 110000;
			if(HouseInfo[house][hSub]) return_moneyul += 40000;

            for(new i =0;i<total_count_mebel;i++) {
            	if(mebel_info[i][mHouseID] != house) continue;
            	DestroyDynamicObject(mebel_info[i][mObjectID]);
            }
			new query[60];
			mysql_format(mysql_Handle, query, sizeof(query), "DELETE FROM `ownmebel` WHERE `homeOwn`=%i", house);
			mysql_tquery(mysql_Handle, query);

			new grg = return_moneyul / 100 * 60, ppr, nalog = HouseInfo[house][hValue] * Business_Nalog / 100;
			new price_sell = HouseInfo[house][hValue] - nalog;
			SCMF(playerid, COLOR_MAIN, "√Ñ√Æ√¨ √≥√±√Ø√•√∏√≠√Æ √Ø√∞√ÆS√≠√≠ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥ √ß√† "CLITEBLUE"%d$ "CMAIN"√± √≥√∑√•√≤√Æ√¨ √≠√†√´√Æ√£√† √¢ √∞√†√ß√¨√•√∞√• "CYELLOW"%i √Ø√∞√Æ√∂√•√≠√≤√†(√Æ√¢)", price_sell, Business_Nalog);
			if(return_moneyul > 0) ppr = price_sell + grg, SCMF(playerid, COLOR_LITEBLUE, "√Ç√†√¨ √°√ª√´√Æ √¢√Æ√ß√¢√∞√†√π√•√≠√Æ "CMAIN"60 √Ø√∞√Æ√∂√•√≠√≤√Æ√¢ "CLITEBLUE"√±√Æ √±√≤√Æ√®√¨√Æ√±√≤√® √™√≥√Ø√´√•√≠√≠√ª√µ √¢ √§√Æ√¨√• √≥√´√≥√∑√∏√•√≠√®√© (%d$)", grg);
			else ppr = price_sell;
			pData[playerid][pBank] += ppr;
			Gos_Nalog[1] += (Gos_Nalog[1] < 800000000 ? (nalog) : (0));
			new mar_string[144];
			format(mar_string,144,"[√è√∞√ÆS√≠√¶√† √§√Æ√¨√†] √á√†√∑√®√±√´√•√≠ √≠√†√´√Æ√£ √± √Ø√∞√ÆS√≠√¶√® √¢ √∞√†√ß√¨√•√∞√• "CBLUE"%i$", (Gos_Nalog[1] < 800000000 ? (nalog) : (0)));
			SFFM(26,0x339900FF,mar_string);
			UpdatePlayerData(playerid, "pBank", pData[playerid][pBank]);
			format(gmt_sellh, 60, "~g~+%d$ ~n~~g~ bank", ppr);
			GameTextForPlayer(playerid, gmt_sellh, 3000, 1);
			pData[playerid][pHouse] = -1;
			HouseInfo[house][hSafe] = 0;
			HouseInfo[house][hSub] = 0;
			HouseInfo[house][hADoor] = 0;
			HouseInfo[house][hPool] = 0;
			UpdatePlayerData (playerid, "pPhousekey", -1);
			UpdateIconHouse(house);
			return SaveHouse(house);
		}
	case 10075: {
			if(!response) return 1;
			for(new i = 0; i != TOTAL_HOUSE + 1; i ++) {
				if(!IsPlayerInRangeOfPoint(playerid, 3.0,HouseInfo[i][hEnter][0], HouseInfo[i][hEnter][1], HouseInfo[i][hEnter][2])) continue;
				if(pData[playerid][pHouse] == i || HouseInfo[i][hLock] == 0) {
					SetPlayerInterior(playerid,HouseInfo[i][hInt]);
					SetPlayerVirtualWorld(playerid,i+50);
					SetPlayerPos(playerid,HouseInfo[i][hExit][0],HouseInfo[i][hExit][1],HouseInfo[i][hExit][2]+0.25);
					SetPlayerFacingAngle(playerid,0);
					SetCameraBehindPlayer(playerid);
					return SetPVarInt(playerid, "HouseID", i);
				}
				else GameTextForPlayer(playerid, "~r~Locked", 5000, 1);
			}
			return 1;
		}
	case 10026: {
			if(!response) return 1;
			for(new h = 0; h != TOTAL_HOUSE + 1; h ++) {
				if(!IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[h][hEnter][0], HouseInfo[h][hEnter][1], HouseInfo[h][hEnter][2]) || HouseInfo[h][hOwned]) continue;
				if(pData[playerid][have_garage] != -1) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √™√≥√Ø√®√≤√º √§√Æ√¨ √®√¨√•√ø √£√†√∞√†√¶");
				if(pData[playerid][p_rent_flat] != -1) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √†√∞√•√≠√§√≥√•√≤√• √™√¢√†√∞√≤√®√∞√≥. Usar√≤√• "CORANGE"/liveout {cecece}√∑√≤√Æ√°√ª √∞√†√±√≤√Æ√∞√£√≠√≥√≤√º √§√Æ√£√Æ√¢√Æ√∞ √†√∞√•√≠√§√ª");
				if(pData[playerid][pFlat] != -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √•√±√≤√º √™√¢√†√∞√≤√®√∞√†. √è√∞√ÆS√≠√©√≤√• √•¬∏, √Ø√∞√•√¶√§√• √∑√•√¨ √™√≥√Ø√®√≤√º √§√Æ√¨");
				if(pData[playerid][pHotel] != -1) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √Ø√∞√Æ√¶√®√¢√†√•√≤√• √¢ √Æ√≤√•√´√•. √ç√•√Æ√°√µ√Æ√§√®√¨√Æ √¢√ª√±√•√´√®√≤√º√±√ø √Ø√•√∞√•√§ √Ø√Æ√™√≥√Ø√™√Æ√© √§√Æ√¨√†");
				if(pData[playerid][pHouse] != -1) 
					return SCMF(playerid, -1, "√ì √Ç√†√± √≥√¶√• √•√±√≤√º √§√Æ√¨ ¬π%d. √ç√•√Æ√°√µ√Æ√§√®√¨√Æ √Ø√∞√ÆS√≠√≤√º √•√£√Æ, √Ø√•√∞√•√§ √Ø√Æ√™√≥√Ø√™√Æ√© √≠√Æ√¢√Æ√£√Æ √§√Æ√¨√†", pData[playerid][pHouse]);
				if(pData[playerid][pCash] < HouseInfo[h][hValue]) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √±√≤√Æ√´√º√™√Æ √§√•√≠√•√£ √≠√†√´√®√∑√≠√ª√¨√®");
				pData[playerid][pHouse] = h;
				UpdatePlayerData (playerid, "pPhousekey", h);
				HouseInfo[h][hOwned] = 1;
				HouseInfo[h][hSafe] = 0;
				HouseInfo[h][hPay] = 3;
				HouseInfo[h][hSafe] = 0;
				HouseInfo[h][hADoor] = 0;
				HouseInfo[h][hSub] = 0;
				HouseInfo[h][hPool] = 0;

				new string_query[160];
				for(new i = 0; i < 4; i++) 
					HouseInfo[h][hCar][i] = HouseInfo[h][hOrigCar][i];
				mysql_format(mysql_Handle, string_query, sizeof(string_query), "UPDATE `house` SET `hCarx` = `hOrigCarx`, `hCary` = `hOrigCary`, `hCarz` = `hOrigCarz`, `hCarc` = `hOrigCarc` WHERE `hID` = %d", h);
				mysql_tquery(mysql_Handle, string_query);

				strmid(HouseInfo[h][hOwner], pData[playerid][pName], 0, strlen(pData[playerid][pName]), 255);
				Hook_GivePlayerMoney(playerid, -HouseInfo[h][hValue]);
				SetPlayerInterior(playerid,HouseInfo[h][hInt]);
				SetPlayerPos(playerid,HouseInfo[h][hExit][0],HouseInfo[h][hExit][1],HouseInfo[h][hExit][2]+0.25);
				SetPlayerVirtualWorld(playerid, h + 50);
				SetPlayerFacingAngle(playerid,0);
				SetCameraBehindPlayer(playerid);
				SetPVarInt(playerid, "HouseID", h);
				updatetex_home(pData[playerid][pHouse]);
				SCM(playerid, COLOR_MAIN, "√è√Æ√ß√§√∞√†√¢√´√ø√•√¨ √Ç√†√± √± √Ø√Æ√™√≥√Ø√™√Æ√© √§√Æ√¨√†");
				SCM(playerid, -1, "Usar√≤√• "CBLUE"/home "CWHITE"√∑√≤√Æ√°√ª √Æ√≤√™√∞√ª√≤√º √¨√•√≠√æ √≥√Ø√∞√†√¢√´√•√≠√®√ø √§√Æ√¨√Æ√¨");
				SCM(playerid, COLOR_ORANGE, "√ç√• √ß√†√°√≥√§√º√≤√• √Æ√Ø√´√†√≤√®√≤√º √•√£√Æ √¢ √±√Ø√•√∂√®√†√´√º√≠√Æ√¨ √∞√†√ß√§√•√´√• √°√†√≠√™√†");
				GameTextForPlayer(playerid, "~b~WELCOME TO ~n~~w~ NEW HOME", 3000, 1);
				pData[playerid][pSpawn] = 1;
				UpdatePlayerData(playerid, "pSpawn", 1);
				if(!pData[playerid][pCar][0]) pData[playerid][pCar][0] = 0, UpdatePlayerData(playerid, "pCar", 0);
				if(!pData[playerid][pCar][1]) pData[playerid][pCar][1] = 0, UpdatePlayerData(playerid, "pCar2", 0);
				if(!pData[playerid][pCar][2]) pData[playerid][pCar][2] = 0, UpdatePlayerData(playerid, "pCar3", 0);
				LoadCarPlayer(playerid, 1),LoadCarPlayer(playerid, 2),LoadCarPlayer(playerid, 3);
				SaveHouse(h);
				UpdateIconHouse(pData[playerid][pHouse]);
				break;
			}
		}

	case 1958: {
			if(!response) return show_donate_menu(playerid);
			if(!strlen(inputtext)) return SPD(playerid, 1958, DIALOG_STYLE_INPUT, ""CMAIN"√ä√Æ√≠√¢√•√∞√≤√†√∂√®√ø √∞√≥√°√´√•√©", ""CWHITE"√ë√™√Æ√´√º√™√Æ √∞√≥√°√´√•√© Quieres √™√Æ√≠√¢√•√∞√≤√®√∞√Æ√¢√†√≤√º?\n"CLITEBLUE"1 √∞√≥√° = 1200$", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
			for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
					case '0'..'9': continue;
					default: return SPD(playerid, 1958, DIALOG_STYLE_INPUT, ""CMAIN"√ä√Æ√≠√¢√•√∞√≤√†√∂√®√ø √∞√≥√°√´√•√©", ""CWHITE"√ë√™√Æ√´√º√™√Æ √∞√≥√°√´√•√© Quieres √™√Æ√≠√¢√•√∞√≤√®√∞√Æ√¢√†√≤√º?\n"CLITEBLUE"1 √∞√≥√° = 1200$", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
				}
			}
			new num = strval(inputtext);

			if(num < 1) {
				SPD(playerid, 1958, DIALOG_STYLE_INPUT, ""CMAIN"√ä√Æ√≠√¢√•√∞√≤√†√∂√®√ø √∞√≥√°√´√•√©", ""CWHITE"√ë√™√Æ√´√º√™√Æ √∞√≥√°√´√•√© Quieres √™√Æ√≠√¢√•√∞√≤√®√∞√Æ√¢√†√≤√º?\n"CLITEBLUE"1 √∞√≥√° = 1200$", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
				return SCM(playerid, COLOR_GREY, "√Ç√¢√•√§√•√≠√† √≠√•√¢√•√∞√≠√†√ø √±√≥√¨√¨√†");
			}
			if(num > pData[playerid][pRub]) {
				SPD(playerid, 1958, DIALOG_STYLE_INPUT, ""CMAIN"√ä√Æ√≠√¢√•√∞√≤√†√∂√®√ø √∞√≥√°√´√•√©", ""CWHITE"√ë√™√Æ√´√º√™√Æ √∞√≥√°√´√•√© Quieres √™√Æ√≠√¢√•√∞√≤√®√∞√Æ√¢√†√≤√º?\n"CLITEBLUE"1 √∞√≥√° = 1200$", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
				return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± No √±√≤√Æ√´√º√™√Æ √∞√≥√°√´√•√© √≠√† √±√∑√•√≤√•");
			}
			
			new sum = 1200 * num;

			SetPVarInt(playerid, "sum", sum);
			SetPVarInt(playerid, "rub", num);
			new mes[100];
			format(mes, sizeof(mes), ""CWHITE"√Å√≥√§√•√≤ √±√≠√ø√≤√Æ: {FFCD00}%d √∞√≥√°.\n"CWHITE"√Å√≥√§√•√≤ √ß√†√∑√®√±√´√•√≠√Æ: {ff9900}%d$", num, sum);
			return SPD(playerid, 1959, 0, ""CMAIN"√ä√Æ√≠√¢√•√∞√≤√•√∞", mes, "√ä√≥√Ø√®√≤√º", "Cerrar");
		}
	case 1959: {
			if(!response) return 1;
			new money = GetPVarInt(playerid, "sum"), rub = GetPVarInt(playerid, "rub");
			DeletePVar(playerid, "sum");
			DeletePVar(playerid, "rub");
			if(rub > pData[playerid][pRub]) return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± No √±√≤√Æ√´√º√™√Æ √∞√≥√°√´√•√© √≠√† √±√∑√•√≤√•");
			Hook_GivePlayerMoney(playerid, money);
			withdraw_donate(playerid, rub, "√ä√Æ√≠√¢√•√∞√≤√†√∂√®√ø √∞√≥√°√´√•√© √¢ √®√£√∞. √¢√†√´√æ√≤√≥");
			PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
			return SCMF(playerid, COLOR_MAIN, "%d √∞√≥√°√´√•√© √≥√±√Ø√•√∏√≠√Æ √™√Æ√≠√¢√•√∞√≤√®√∞√Æ√¢√†√≠√Æ √¢ "CLITEBLUE"%d$", rub, money);
		}
	case 4881: {
		if(!response) return 1;
		switch(listitem) {
			case 0: SPD(playerid, 4882, DIALOG_STYLE_MSGBOX, "{b22222}√è√∞√•√¨√®√≥√¨-√±√≤√†√≤√≥√±. √ä√Æ√¨√†√≠√§√ª", 
						"{dc143c}/togphone "CWHITE"- {ff8f6a}apagar "CWHITE"√®√´√® {9df49e}√¢√™√´√æ√∑√®√≤√º "CWHITE"√±√¢√Æ√© √≤√•√´√•√¥√Æ√≠\n\
						{dc143c}/prc "CWHITE"- √≠√†√Ø√®√±√†√≤√º √±√Æ√Æ√°√π√•√≠√®√• √¢ √Ø√∞√•√¨√®√≥√¨ √∑√†√≤\n\
						{dc143c}/leave "CWHITE"- √¢√ª√©√≤√® √®√ß √Æ√∞√£√†√≠√®√ß√†√∂√®√® √Ø√Æ √±√Æ√°√±√≤√¢√•√≠√≠√Æ√¨√≥ √¶√•√´√†√≠√®√æ\n\
						{dc143c}/strobe "CWHITE"- √¢√™√´√æ√∑√®√≤√º √®√´√® √¢√ª√™√´√æ√∑√®√≤√º √±√≤√∞√Æ√°√Æ√±√™√Æ√Ø√ª\n\
						{dc143c}/prhelp "CWHITE"- √Ø√Æ√¨√Æ√π√º √Ø√Æ √¢√Æ√ß√¨√Æ√¶√≠√Æ√±√≤√ø√¨ √Ø√∞√•√¨√®√≥√¨-√±√≤√†√≤√≥√±√†", 
					"Siguiente", "");
			case 1: SPD(playerid, 4882, DIALOG_STYLE_MSGBOX, "{b22222}√è√∞√•√¨√®√≥√¨-√±√≤√†√≤√≥√±. √è√∞√•√®√¨√≥√π√•√±√≤√¢√†", 
						"{dc143c}1. "CWHITE"√Å√•√±√™√Æ√≠√•√∑√≠√†√ø √†√™√∂√®√ø "CPALEGREEN"¬´X2 √Æ√Ø√ª√≤¬ª "CWHITE"(√®√±√™√´√æ√∑√•√≠√®√•: √§√•√©√±√≤√¢√≥√•√≤ √†√™√∂√®√ø √¢√ª√∏√•, √∑√•√¨ X2)\n\
						{dc143c}2. "CWHITE"√Ç√†√∏√† √ß√†√∞√Ø√´√†√≤√† √≥√¢√•√´√®√∑√•√≠√† √≠√† "CLITEBLUE"20 √Ø√∞√Æ√∂√•√≠√≤√Æ√¢\n\
						{dc143c}3. "CWHITE"√Ç√ª √¨√Æ√¶√•√≤√• √±√†√¨√Æ√±√≤√Æ√ø√≤√•√´√º√≠√Æ √≥√¢√Æ√´√®√≤√º√±√ø √®√ß √Æ√∞√£√†√≠√®√ß√†√∂√®√® {40bf80}(√™√Æ√¨√†√≠S√≠ /leave)\n\
						{dc143c}4. "CWHITE"√Ç√ª √¨√Æ√¶√•√≤√• √≠√Æ√±√®√≤√º √± √±√Æ√°√Æ√© √£√Æ√∞√†√ß√§√Æ √°√Æ√´√º√∏√• √†√Ø√≤√•√∑√•√™, √¨√•√≤√†√´√´√† √® √Ø√∞.\n\
						{dc143c}5. "CWHITE"√Ç√†√∏√• √Æ√∞√≥√¶√®√• √≠√• √Ø√∞√Æ√Ø√†SNo, √™√Æ√£S√≠ √Ç√ª √¢√ª√µ√Æ√§√®√≤√• √®√ß √®√£√∞√ª\n\
						{dc143c}6. "CWHITE"√Ç√ª √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √±√≤√∞√Æ√°√Æ√±√™√Æ√Ø√ª √≠√† √´√æ√°√Æ√© √¨√†√∏√®√≠√•", 
					"Siguiente", "");
		}
	}
	case 4882: callcmd::prhelp(playerid);
	case 8953: {
		if(pData[playerid][p_premium]) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [023]");
		SPD(playerid, 923, DIALOG_STYLE_TABLIST, "{FFCD00}√è√∞√•√¨√®√≥√¨-√±√≤√†√≤√≥√±", "√ä√≥√Ø√®√≤√º √≠√† 7 √§√≠√•√©\t{66ff66}300 √∞√≥√°.\n"CWHITE"√ä√≥√Ø√®√≤√º √≠√† 14 √§√≠√•√©\t{66ff66}500 √∞√≥√°.\n"CWHITE"√ä√≥√Ø√®√≤√º √≠√†√¢√±√•√£S√≠\t{66ff66}1000 √∞√≥√°.\n"CLIGHTBLUE"√à√≠√¥√Æ√∞√¨√†√∂√®√ø", "Seleccione", "Siguiente");
	}
	case 923: {
		if(!response) return show_donate_menu(playerid);
		switch(listitem) {
			case 0: {
				if(pData[playerid][pRub] < 300) return SPD(playerid, 8418, DIALOG_STYLE_MSGBOX, ""CERROR"√é√∏√®√°√™√†", ""CWHITE"√Ñ√´√ø √Ø√Æ√™√≥√Ø√™√® √Ø√∞√•√¨√®√≥√¨-√±√≤√†√≤√≥√±√† √≠√† 7 √§√≠√•√©\n√≠√•√Æ√°√µ√Æ√§√®√¨√Æ √®√¨√•√≤√º 300 √∞√≥√°. √≠√† √†√™√™√†√≥√≠√≤√•", "Siguiente", "");
				withdraw_donate(playerid, 300, "√è√Æ√™√≥√Ø√™√† √Ø√∞√•√¨√®√≥√¨-√±√≤√†√≤√≥√±√† √≠√† 7 √§√≠√•√©");
				SCM(playerid, COLOR_YELLOW, "√è√∞√•√¨√®√≥√¨-√±√≤√†√≤√≥√± √≥√±√Ø√•√∏√≠√Æ √Ø√∞√®√Æ√°√∞√•√≤¬∏√≠ √≠√† {997020}7 √§√≠√•√©");
				pData[playerid][p_premium_days] = 7;
			}
			case 1: {
				if(pData[playerid][pRub] < 500) return SPD(playerid, 8418, DIALOG_STYLE_MSGBOX, ""CERROR"√é√∏√®√°√™√†", ""CWHITE"√Ñ√´√ø √Ø√Æ√™√≥√Ø√™√® √Ø√∞√•√¨√®√≥√¨-√±√≤√†√≤√≥√±√† √≠√† 14 √§√≠√•√©\n√≠√•√Æ√°√µ√Æ√§√®√¨√Æ √®√¨√•√≤√º 500 √∞√≥√°. √≠√† √†√™√™√†√≥√≠√≤√•", "Siguiente", "");
				withdraw_donate(playerid, 500, "√è√Æ√™√≥√Ø√™√† √Ø√∞√•√¨√®√≥√¨-√±√≤√†√≤√≥√±√† √≠√† 14 √§√≠√•√©");
				SCM(playerid, COLOR_YELLOW, "√è√∞√•√¨√®√≥√¨-√±√≤√†√≤√≥√± √≥√±√Ø√•√∏√≠√Æ √Ø√∞√®√Æ√°√∞√•√≤¬∏√≠ √≠√† {997020}14 √§√≠√•√©");
				pData[playerid][p_premium_days] = 14;
			}
			case 2: {
				if(pData[playerid][pRub] < 1000) return SPD(playerid, 8418, DIALOG_STYLE_MSGBOX, ""CERROR"√é√∏√®√°√™√†", ""CWHITE"√Ñ√´√ø √Ø√Æ√™√≥√Ø√™√® √Ø√∞√•√¨√®√≥√¨-√±√≤√†√≤√≥√±√† √≠√†√¢√±√•√£S√≠\n√≠√•√Æ√°√µ√Æ√§√®√¨√Æ √®√¨√•√≤√º 1000 √∞√≥√°. √≠√† √†√™√™√†√≥√≠√≤√•", "Siguiente", "");
				withdraw_donate(playerid, 1000, "√è√Æ√™√≥√Ø√™√† √Ø√∞√•√¨√®√≥√¨-√±√≤√†√≤√≥√±√† √≠√†√¢√±√•√£S√≠");
				SCM(playerid, COLOR_YELLOW, "√è√∞√•√¨√®√≥√¨-√±√≤√†√≤√≥√± √≥√±√Ø√•√∏√≠√Æ √Ø√∞√®√Æ√°√∞√•√≤¬∏√≠");
				pData[playerid][p_premium_days] = -1;
			}
			case 3: {
				return SPD(playerid, 8953, DIALOG_STYLE_MSGBOX, "{ffa64d}√Ç√Æ√ß√¨√Æ√¶√≠√Æ√±√≤√® √Ø√∞√•√¨√®√≥√¨-√±√≤√†√≤√≥√±√†", 
					""CWHITE"√ä√Æ√¨√†√≠√§√ª:\n\n\
					{256d7b}/togphone "CWHITE"- {ff8f6a}apagar "CWHITE"√®√´√® {9df49e}√¢√™√´√æ√∑√®√≤√º "CWHITE"√±√¢√Æ√© √≤√•√´√•√¥√Æ√≠\n\
					{256d7b}/prc "CWHITE"- √≠√†√Ø√®√±√†√≤√º √±√Æ√Æ√°√π√•√≠√®√• √¢ √Ø√∞√•√¨√®√≥√¨ √∑√†√≤\n\
					{256d7b}/leave "CWHITE"- √¢√ª√©√≤√® √®√ß √Æ√∞√£√†√≠√®√ß√†√∂√®√® √Ø√Æ √±√Æ√°√±√≤√¢√•√≠√≠√Æ√¨√≥ √¶√•√´√†√≠√®√æ\n\
					{256d7b}/strobe "CWHITE"- √¢√™√´√æ√∑√®√≤√º √®√´√® √¢√ª√™√´√æ√∑√®√≤√º √±√≤√∞√Æ√°√Æ√±√™√Æ√Ø√ª\n\
					{256d7b}/prhelp "CWHITE"- √Ø√Æ√¨√Æ√π√º √Ø√Æ √¢√Æ√ß√¨√Æ√¶√≠√Æ√±√≤√ø√¨ √Ø√∞√•√¨√®√≥√¨-√±√≤√†√≤√≥√±√†\n\n\
					"CWHITE"√è√∞√•√®√¨√≥√π√•√±√≤√¢√† √® √¢√Æ√ß√¨√Æ√¶√≠√Æ√±√≤√®:\n\n\
					{d1e231}1. "CWHITE"√Å√•√±√™√Æ√≠√•√∑√≠√†√ø √†√™√∂√®√ø "CPALEGREEN"¬´X2 √Æ√Ø√ª√≤¬ª "CWHITE"(√®√±√™√´√æ√∑√•√≠√®√•: √§√•√©√±√≤√¢√≥√•√≤ √†√™√∂√®√ø √¢√ª√∏√•, √∑√•√¨ X2)\n\
					{d1e231}2. "CWHITE"√Ç√†√∏√† √ß√†√∞√Ø√´√†√≤√† √≥√¢√•√´√®√∑√®√≤√±√ø √≠√† "CLITEBLUE"20 √Ø√∞√Æ√∂√•√≠√≤√Æ√¢\n\
					{d1e231}3. "CWHITE"√Ç√ª √±√¨√Æ√¶√•√≤√• √±√†√¨√Æ√±√≤√Æ√ø√≤√•√´√º√≠√Æ √≥√¢√Æ√´√®√≤√º√±√ø √®√ß √Æ√∞√£√†√≠√®√ß√†√∂√®√® {40bf80}(√™√Æ√¨√†√≠S√≠ /leave)\n\
					{d1e231}4. "CWHITE"√Ç√ª √±√¨√Æ√¶√•√≤√• √≠√Æ√±√®√≤√º √± √±√Æ√°√Æ√© √£√Æ√∞√†√ß√§√Æ √°√Æ√´√º√∏√• √†√Ø√≤√•√∑√•√™, √¨√•√≤√†√´√´√† √® √Ø√∞.\n\
					{d1e231}5. "CWHITE"√Ç√†√∏√• √Æ√∞√≥√¶√®√• √≠√• √°√≥√§√•√≤ √Ø√∞√Æ√Ø√†S√≠√≤√º, √™√Æ√£S√≠ √Ç√ª √¢√ª√µ√Æ√§√®√≤√• √®√ß √®√£√∞√ª\n\
					{d1e231}6. "CWHITE"√Ç√ª √±√¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √±√≤√∞√Æ√°√Æ√±√™√Æ√Ø√ª √≠√† √´√æ√°√Æ√© √¨√†√∏√®√≠√•", 
				"Siguiente", "");
			}
		}
		PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
		pData[playerid][p_premium] = 1;
		UpdatePlayerData(playerid, "p_premium", 1);
		UpdatePlayerData(playerid, "p_premium_days", pData[playerid][p_premium_days]);
		SCM(playerid, COLOR_YELLOW, "√Ñ√´√ø √Ø√Æ√´√≥√∑√•√≠√®√ø √Ø√Æ√§√∞√Æ√°√≠√Æ√© √®√≠√¥√Æ√∞√¨√†√∂√®√® √Æ √¢√Æ√ß√¨√Æ√¶√≠√Æ√±√≤√ø√µ Usar√≤√• {dc143c}/prhelp");
	}
	case 664: {
		if(!response) return show_donate_menu(playerid);
		if(!pData[playerid][p_premium]) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [025]");
		switch(listitem) {
			case 0: {
				if(pData[playerid][pRub] < 500) return SPD(playerid, 926, DIALOG_STYLE_MSGBOX, ""CERROR"√é√∏√®√°√™√†", ""CWHITE"√Ñ√´√ø √Ø√∞√Æ√§√´√•√≠√®√ø √Ø√∞√•√¨√®√≥√¨-√±√≤√†√≤√≥√±√† √•√π¬∏ √≠√† 7 √§√≠√•√©\n√≠√•√Æ√°√µ√Æ√§√®√¨√Æ √®√¨√•√≤√º 500 √∞√≥√°. √≠√† √†√™√™√†√≥√≠√≤√•", "Siguiente", "");
				if((pData[playerid][p_premium_days] + 7) > 30) return SPD(playerid, 926, DIALOG_STYLE_MSGBOX, ""CERROR"√é√∏√®√°√™√†", ""CWHITE"√ë√∞√Æ√™ √§√•√©√±√≤√¢√®√ø √Ø√∞√•√¨√®√≥√¨-√±√≤√†√≤√≥√±√† √≠√• √¨√Æ√¶√•√≤ √°√ª√≤√º √°√Æ√´√•√• 30 √§√≠√•√©", "Siguiente", "");
				withdraw_donate(playerid, 500, "√è√∞√Æ√§√´√•√≠√®√• √Ø√∞√•√¨√®√≥√¨-√±√≤√†√≤√≥√±√† √•√π¬∏ √≠√† 7 √§√≠√•√©");
				pData[playerid][p_premium_days] += 7;
				SCM(playerid, COLOR_MAIN, "√ë√∞√Æ√™ √§√•√©√±√≤√¢√®√ø √Ø√∞√•√¨√®√≥√¨-√±√≤√†√≤√≥√±√† √≥√±√Ø√•√∏√≠√Æ √Ø√∞√Æ√§√´¬∏√≠ √•√π√• √≠√† "CORANGE"7 √§√≠√•√©");
			}
			case 1: {
				if(pData[playerid][pRub] < 1000) return SPD(playerid, 926, DIALOG_STYLE_MSGBOX, ""CERROR"√é√∏√®√°√™√†", ""CWHITE"√Ñ√´√ø √Ø√∞√Æ√§√´√•√≠√®√ø √Ø√∞√•√¨√®√≥√¨-√±√≤√†√≤√≥√±√† √•√π¬∏ √≠√† 14 √§√≠√•√©\n√≠√•√Æ√°√µ√Æ√§√®√¨√Æ √®√¨√•√≤√º 1000 √∞√≥√°. √≠√† √†√™√™√†√≥√≠√≤√•", "Siguiente", "");
				if((pData[playerid][p_premium_days] + 14) > 30) return SPD(playerid, 926, DIALOG_STYLE_MSGBOX, ""CERROR"√é√∏√®√°√™√†", ""CWHITE"√ë√∞√Æ√™ √§√•√©√±√≤√¢√®√ø √Ø√∞√•√¨√®√≥√¨-√±√≤√†√≤√≥√±√† √≠√• √¨√Æ√¶√•√≤ √°√ª√≤√º √°√Æ√´√•√• 30 √§√≠√•√©", "Siguiente", "");
				withdraw_donate(playerid, 1000, "√è√∞√Æ√§√´√•√≠√®√• √Ø√∞√•√¨√®√≥√¨-√±√≤√†√≤√≥√±√† √•√π¬∏ √≠√† 14 √§√≠√•√©");
				pData[playerid][p_premium_days] += 14;
				SCM(playerid, COLOR_MAIN, "√ë√∞√Æ√™ √§√•√©√±√≤√¢√®√ø √Ø√∞√•√¨√®√≥√¨-√±√≤√†√≤√≥√±√† √≥√±√Ø√•√∏√≠√Æ √Ø√∞√Æ√§√´¬∏√≠ √•√π√• √≠√† "CORANGE"14 √§√≠√•√©");
			}
			case 2: {
				if(pData[playerid][pRub] < 1500) return SPD(playerid, 926, DIALOG_STYLE_MSGBOX, ""CERROR"√é√∏√®√°√™√†", ""CWHITE"√Ñ√´√ø √Ø√∞√Æ√§√´√•√≠√®√ø √Ø√∞√•√¨√®√≥√¨-√±√≤√†√≤√≥√±√† √•√π¬∏ √≠√† 21 √§√•√≠√º\n√≠√•√Æ√°√µ√Æ√§√®√¨√Æ √®√¨√•√≤√º 1500 √∞√≥√°. √≠√† √†√™√™√†√≥√≠√≤√•", "Siguiente", "");
				if((pData[playerid][p_premium_days] + 21) > 30) return SPD(playerid, 926, DIALOG_STYLE_MSGBOX, ""CERROR"√é√∏√®√°√™√†", ""CWHITE"√ë√∞√Æ√™ √§√•√©√±√≤√¢√®√ø √Ø√∞√•√¨√®√≥√¨-√±√≤√†√≤√≥√±√† √≠√• √¨√Æ√¶√•√≤ √°√ª√≤√º √°√Æ√´√•√• 30 √§√≠√•√©", "Siguiente", "");
				withdraw_donate(playerid, 1500, "√è√∞√Æ√§√´√•√≠√®√• √Ø√∞√•√¨√®√≥√¨-√±√≤√†√≤√≥√±√† √•√π¬∏ √≠√† 21 √§√•√≠√º");
				pData[playerid][p_premium_days] += 21;
				SCM(playerid, COLOR_MAIN, "√ë√∞√Æ√™ √§√•√©√±√≤√¢√®√ø √Ø√∞√•√¨√®√≥√¨-√±√≤√†√≤√≥√±√† √≥√±√Ø√•√∏√≠√Æ √Ø√∞√Æ√§√´¬∏√≠ √•√π√• √≠√† "CORANGE"21 √§√•√≠√º");
			}
		}
		PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
		UpdatePlayerData(playerid, "p_premium_days", pData[playerid][p_premium_days]);
	}
	case 667: {
		new mm_id = GetPVarInt(playerid, "pd_tart_id");
		DeletePVar(playerid, "pd_tart_id");

		if(!response || !IsACop(playerid) || !IsPlayerConnected(mm_id)) return 1;

		new mes[144];
		new params[3];
		valstr(params, mm_id);

		switch(listitem) {
			case 0: {
				new hour, hi_text[13], org_text[31], name[16], surname[16], org_id = pData[playerid][pMember];
				gettime(hour);
				switch(hour) {
					case 0..4: hi_text = "√Ñ√Æ√°√∞√Æ√© √≠√Æ√∑√®";
					case 5..11: hi_text = "√Ñ√Æ√°√∞√Æ√• √≥√≤√∞√Æ";
					case 12..17: hi_text = "√Ñ√Æ√°√∞√ª√© √§√•√≠√º";
					case 18..23: hi_text = "√Ñ√Æ√°√∞√ª√© √¢√•√∑√•√∞";
				}
				sscanf(pData[playerid][pName], "p<_>s[16]s[16]", name, surname);
				switch(org_id) {
					case 1: org_text = "√ì√Ø√∞√†√¢√´√•√≠√®√• √Ø√Æ√´√®√∂√®√•√© √ã√ë";
					case 2: org_text = "√î√•√§√•√∞√†√´√º√≠√Æ√• √°√æ√∞√Æ √∞√†√±√±√´√•√§√Æ√¢√†√≠√®√©";
					case 10: org_text = "√ì√Ø√∞√†√¢√´√•√≠√®√• √Ø√Æ√´√®√∂√®√•√© √ë√î";
					case 21: org_text = "√ì√Ø√∞√†√¢√´√•√≠√®√• √Ø√Æ√´√®√∂√®√•√© √ã√Ç";
					default: org_text = "[No S√≠√≠√≠√ª√µ]";
				}
				if(org_id == 26 && pData[playerid][pRank] == 7) 
					org_text = "√å√®√≠√®√±√≤√•√∞√±√≤√¢√Æ √¢√≠√≥√≤√∞√•√≠√≠√®√µ √§√•√´";
				format(mes, sizeof(mes), "%s, √Ç√†√± √°√•√±√Ø√Æ√™√Æ√®√≤ %s %s, %s", hi_text, new_rank_name[org_id - 1][pData[playerid][pRank] - 1], surname, org_text);
				OnPlayerText(playerid, mes);
				switch(org_id) {
					case 1: org_text = "LSPD";
					case 2: org_text = "FBI";
					case 10: org_text = "SFPD";
					case 21: org_text = "LVPD";
					default: org_text = "[No S√≠√≠√≠√ª√µ]";
				}
				if(org_id == 26 && pData[playerid][pRank] == 7) 
					org_text = "√å√Ç√Ñ";
				format(mes, sizeof(mes), "√ç√† √≠√†√£√∞√≥√§√≠√Æ√¨ √™√†√∞√¨√†√≠√• √¢√®√±√®√≤ √¶√•√≤√Æ√≠ √±√Æ√≤√∞√≥√§√≠√®√™√† %s ¬π%d (%s)", org_text, playerid, pData[playerid][pName]);
				ProxDetector(30.0, playerid, mes, COLOR_PURPLE);
				MeAction(playerid, "√Ø√∞√®√´√Æ√¶√®√´ √∞√≥√™√≥ √™ √£√Æ√´√Æ√¢√• √® √Æ√≤S√≠√´ √∑√•√±√≤√º");
				ApplyAnimation(playerid, "VENDING", "VEND_DRINK2_P", 25.5, 0, 1, 0, 1, 1);
				SetTimerEx("rp_show_pass", 1300, 0, "i", playerid);
			}
			case 1: {
				if(pData[mm_id][pWanted] == 0) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√Æ√≤ √®√£√∞√Æ√™ √≠√• √¢ √∞√Æ√ß√ª√±√™√•. Usar√≤√• /su √§√´√ø √¢√ªS√≠√∑√® √∞√Æ√ß√ª√±√™√†");
				pData[mm_id][pWanted] ++;
				if(pData[mm_id][pWanted] > 6) pData[mm_id][pWanted] = 6;
				SetPlayerWantedLevel(mm_id, pData[mm_id][pWanted]);
				UpdatePlayerData(mm_id, "pWanted", pData[mm_id][pWanted]);
				SCMF(playerid, COLOR_BLUE, "√ì√∞√Æ√¢√•√≠√º √∞√Æ√ß√ª√±√™√† %s √≥√¢√•√´√®√∑√•√≠ √≠√† 1. √í√•√™√≥√π√®√© √≥√∞√Æ√¢√•√≠√º √∞√Æ√ß√ª√±√™√†: %d", pData[mm_id][pName], pData[mm_id][pWanted]);
				SCMF(mm_id, 0xffcd00FF, "%s %s √≥√¢√•√´√®√∑√®√´ √Ç√†√∏ √≥√∞√Æ√¢√•√≠√º √∞√Æ√ß√ª√±√™√† √≠√† 1. √í√•√™√≥√π√®√© √≥√∞√Æ√¢√•√≠√º √∞√Æ√ß√ª√±√™√†: %d", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], pData[playerid][pName], pData[mm_id][pWanted]);
				format(mes, sizeof(mes), "%s %s[%d] √≥√¢√•√´√®√∑√®√´ √≥√∞√Æ√¢√•√≠√º √∞√Æ√ß√ª√±√™√† %s[%d] √± %d √≠√† %d", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], pData[playerid][pName], playerid, pData[mm_id][pName], mm_id, pData[mm_id][pWanted] - 1, pData[mm_id][pWanted]);
				SFFM(1, 0xffcd00FF, mes); SFFM(2, 0xffcd00FF, mes); SFFM(10, 0xffcd00FF, mes); SFFM(21, 0xffcd00FF, mes); SFFM(22, 0xffcd00FF, mes);
			}
			case 2: {
				if(pData[mm_id][pWanted] == 0) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√Æ√≤ √®√£√∞√Æ√™ √≠√• √¢ √∞√Æ√ß√ª√±√™√•");
				pData[mm_id][pWanted] --;
				SetPlayerWantedLevel(mm_id, pData[mm_id][pWanted]);
				UpdatePlayerData(mm_id, "pWanted", pData[mm_id][pWanted]);
				SCMF(playerid, COLOR_BLUE, "√ì√∞√Æ√¢√•√≠√º √∞√Æ√ß√ª√±√™√† %s √≥√¨√•√≠√º√∏√•√≠ √≠√† 1. √í√•√™√≥√π√®√© √≥√∞√Æ√¢√•√≠√º √∞√Æ√ß√ª√±√™√†: %d", pData[mm_id][pName], pData[mm_id][pWanted]);
				SCMF(mm_id, 0xffcd00FF, "%s %s √≥√¨√•√≠√º√∏√®√´ √Ç√†√∏ √≥√∞√Æ√¢√•√≠√º √∞√Æ√ß√ª√±√™√† √≠√† 1. √í√•√™√≥√π√®√© √≥√∞√Æ√¢√•√≠√º √∞√Æ√ß√ª√±√™√†: %d", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], pData[playerid][pName], pData[mm_id][pWanted]);
				format(mes, sizeof(mes), "%s %s[%d] √≥√¨√•√≠√º√∏√®√´ √≥√∞√Æ√¢√•√≠√º √∞√Æ√ß√ª√±√™√† %s[%d] √± %d √≠√† %d", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], pData[playerid][pName], playerid, pData[mm_id][pName], mm_id, pData[mm_id][pWanted] + 1, pData[mm_id][pWanted]);
				SFFM(1, 0xffcd00FF, mes); SFFM(2, 0xffcd00FF, mes); SFFM(10, 0xffcd00FF, mes); SFFM(21, 0xffcd00FF, mes); SFFM(22, 0xffcd00FF, mes);
			}
			case 3: {
				callcmd::cuff(playerid, params);
			}
			case 4: {
				callcmd::pullmask(playerid, params);
			}
			case 5: {
			    callcmd::search(playerid, params);
			}
			case 6: {
				SetPVarInt(playerid, "From_PolicePanel", 1);
				callcmd::hold(playerid, params);
			}
		}
	}
	case 926: SPD(playerid, 664, DIALOG_STYLE_TABLIST, "{d2691e}√è√∞√•√¨√®√≥√¨-√±√≤√†√≤√≥√±", "√è√∞√Æ√§√´√®√≤√º √•√π¬∏ √≠√† 7 √§√≠√•√©\t{ffcc66}500 √∞√≥√°.\n"CWHITE"√è√∞√Æ√§√´√®√≤√º √•√π¬∏ √≠√† 14 √§√≠√•√©\t{ffcc66}1000 √∞√≥√°.\n"CWHITE"√è√∞√Æ√§√´√®√≤√º √•√π¬∏ √≠√† 21 √§√•√≠√º\t{ffcc66}1500 √∞√≥√°.", "Seleccione", "Siguiente");
	case 9771: {
			if(!response) return 1;
			switch(listitem) {
				case 0: callcmd::checkpay(playerid);
				case 1: {
					new pa_query[60];
					mysql_format(mysql_Handle, pa_query,sizeof(pa_query), "SELECT * FROM `packs` WHERE `account_id` = %d", pData[playerid][pID]);
					mysql_tquery(mysql_Handle, pa_query, "packcheck", "d", playerid);
				}
				case 2: {
					if(pData[playerid][p_premium_days] == -1) 
						return SPD(playerid, 8418, DIALOG_STYLE_MSGBOX, ""CERROR"√é√∏√®√°√™√†", ""CWHITE"√ç√† √Ç√†√∏√•√¨ √†√™√™√†√≥√≠√≤√• √≥√¶√• √Ø√∞√®√Æ√°√∞√•√≤¬∏√≠ √Ø√∞√•√¨√®√≥√¨-√±√≤√†√≤√≥√±", "Siguiente", "");
					if(pData[playerid][p_premium]) 
						return SPD(playerid, 664, DIALOG_STYLE_TABLIST, "{d2691e}√è√∞√•√¨√®√≥√¨-√±√≤√†√≤√≥√±", "√è√∞√Æ√§√´√®√≤√º √•√π¬∏ √≠√† 7 √§√≠√•√©\t{ffcc66}500 √∞√≥√°.\n"CWHITE"√è√∞√Æ√§√´√®√≤√º √•√π¬∏ √≠√† 14 √§√≠√•√©\t{ffcc66}1000 √∞√≥√°.\n"CWHITE"√è√∞√Æ√§√´√®√≤√º √•√π¬∏ √≠√† 21 √§√•√≠√º\t{ffcc66}1500 √∞√≥√°.", "Seleccione", "Siguiente");
					SPD(playerid, 923, DIALOG_STYLE_TABLIST, "{FFCD00}√è√∞√•√¨√®√≥√¨-√±√≤√†√≤√≥√±", "√ä√≥√Ø√®√≤√º √≠√† 7 √§√≠√•√©\t{66ff66}300 √∞√≥√°.\n"CWHITE"√ä√≥√Ø√®√≤√º √≠√† 14 √§√≠√•√©\t{66ff66}500 √∞√≥√°.\n"CWHITE"√ä√≥√Ø√®√≤√º √≠√†√¢√±√•√£S√≠\t{66ff66}1000 √∞√≥√°.\n"CLIGHTBLUE"√à√≠√¥√Æ√∞√¨√†√∂√®√ø", "Seleccione", "Siguiente");
				}
				case 3: SPD(playerid, 1958, DIALOG_STYLE_INPUT, ""CMAIN"√ä√Æ√≠√¢√•√∞√≤√†√∂√®√ø √∞√≥√°√´√•√©", ""CWHITE"√ë√™√Æ√´√º√™√Æ √∞√≥√°√´√•√© Quieres √™√Æ√≠√¢√•√∞√≤√®√∞√Æ√¢√†√≤√º?\n"CLITEBLUE"1 √∞√≥√° = 1200$", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
				case 4: {
					if(pData[playerid][pWarns] <= 0) return SPD(playerid, 8418, DIALOG_STYLE_MSGBOX, ""CERROR"√é√∏√®√°√™√†", ""CWHITE"√ì √Ç√†√± No √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√© √≠√† √†√™√™√†√≥√≠√≤√•", "Siguiente", "");
					format(string, 200, ""CWHITE"√ä√Æ√´√®√∑√•√±√≤√¢√Æ √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√©: %d\n\n√Ñ√´√ø √®√µ √±√≠√ø√≤√®√ø √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √®√¨√•√≤√º √≠√† √±√∑√•√≤√≥ %i √∞√≥√°√´√•√©\n\n√ç√†√¶√¨√®√≤√• √™√´√†√¢√®√∏√≥ {00cc66}√Ø√∞√Æ√§√Æ√´√¶√®√≤√º"CWHITE", √•√±√´√® √µ√Æ√≤√®√≤√• √±√≠√ø√≤√º √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√•",pData[playerid][pWarns],pData[playerid][pWarns]*100);
					SPD(playerid, 3938, DIALOG_STYLE_MSGBOX, ""CMAIN"√ë√≠√ø√≤√®√• √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√ø", string, "√è√∞√Æ√§√Æ√´√¶√®√≤√º", "Siguiente");
				}
				case 5: {
					if(pData[playerid][pRub] < 25) return SPD(playerid, 8418, DIALOG_STYLE_MSGBOX, ""CERROR"√é√∏√®√°√™√†", ""CWHITE"√Ñ√´√ø √®√ß√¨√•√≠√•√≠√®√ø √®√¨√•√≠√®\n√≠√•√Æ√°√µ√Æ√§√®√¨√Æ √®√¨√•√≤√º 25 √∞√≥√°. √≠√† √†√™√™√†√≥√≠√≤√•", "Siguiente", "");
					SPD(playerid, 9943, DIALOG_STYLE_INPUT, ""CMAIN"√à√ß√¨√•√≠√•√≠√®√• √®√¨√•√≠√®", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¢√Æ√• √®√¨√ø √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
				}
				case 6: {
					if(pData[playerid][pLicenses][0] && pData[playerid][pLicenses][1] && pData[playerid][pLicenses][2] && pData[playerid][pLicenses][3]) 
						return SPD(playerid, 8418, DIALOG_STYLE_MSGBOX, ""CERROR"√é√∏√®√°√™√†", ""CWHITE"√ç√† √Ç√†√∏√•√¨ √†√™√™√†√≥√≠√≤√• √≥√¶√• √™√≥√Ø√´√•√≠√ª √¢√±√• √´√®√∂√•√≠√ß√®√®", "Siguiente", "");
					SPD(playerid, 8481, DIALOG_STYLE_MSGBOX, ""CMAIN"√ä√Æ√¨√Ø√´√•√™√≤ √´√®√∂√•√≠√ß√®√©", ""CWHITE"√ä√≥√Ø√®√¢ √Ω√≤√≥ √≥√±√´√≥√£√≥, √Ç√ª √Ø√Æ√´√≥√∑√®√≤√• √¢√±√• √´√®√∂√•√≠√ß√®√® (√¢√Æ√§. √Ø√∞√†√¢√†, √´√®√∂. √Ø√®√´√Æ√≤√†\n√® √≤. √Ø.). √ë√≤√Æ√®√¨√Æ√±√≤√º √≥√±√´√≥√£√®: "CBLUE"500 "CWHITE"√∞√≥√°√´√•√©.", "√ä√≥√Ø√®√≤√º", "Siguiente");
				}
				case 7: {
					new str_buyskill[650] = "{aa80ff}√é√∞√≥√¶√®√•\t{aa80ff}√è√∞√Æ√™√†√∑√†√≠√Æ\t{aa80ff}√é√±√≤√†√´√Æ√±√º\t{aa80ff}√ë√≤√Æ√®√¨√Æ√±√≤√º\n";
					new points[12] = {100,...}, Float: dd_price_skill, price_skill;

					points[0] -= pData[playerid][p_strengh];
					dd_price_skill = points[0] * 1;
					price_skill = floatround(dd_price_skill, floatround_ceil);
					format(str_buyskill, sizeof(str_buyskill), "%s"CLITEBLUE"√ë√®√´√†\t%d%%\t%d%%\t"CORANGE"%d √∞√≥√°.\n", str_buyskill, pData[playerid][p_strengh], points[0], price_skill);
					
					new skillweap_name[11][13] = {
						"Colt 45",
						"SD Pistol",
						"Desert Eagle",
						"Shotgun",
						"MP5",
						"AK47",
						"M4",
						"Sniper Rifle",
						"Sawnoff",
						"Combat SG",
						"Micro UZI"
					};
					for(new i = 0; i < 11; i ++) {
						points[i+1] -= pData[playerid][pSkill][i];
						dd_price_skill = points[i+1] * 1;
						price_skill = floatround(dd_price_skill, floatround_ceil);
						format(str_buyskill, sizeof(str_buyskill), "%s"CLITEBLUE"%s\t%d%%\t%d%%\t"CORANGE"%d √∞√≥√°.\n", str_buyskill, skillweap_name[i], pData[playerid][pSkill][i], points[i+1], price_skill);
					}
					SPD(playerid, 8412, DIALOG_STYLE_TABLIST_HEADERS, ""CMAIN"√è√∞√Æ√™√†√∑√™√† √≠√†√¢√ª√™√Æ√¢ √¢√´√†√§√•√≠√®√ø √Æ√∞√≥√¶√®√•√¨", str_buyskill, "√è√∞√Æ√™√†√∑√†√≤√º", "Siguiente");
				}
				case 8: {
					if(!pData[playerid][pMember]) return SPD(playerid, 8418, DIALOG_STYLE_MSGBOX, ""CERROR"√é√∏√®√°√™√†", ""CWHITE"√Ç√ª √≠√• √±√Æ√±√≤√Æ√®√≤√• √¢ √Æ√∞√£√†√≠√®√ß√†√∂√®√®", "Siguiente", "");
					if(pData[playerid][pRub] < 50) return SPD(playerid, 8418, DIALOG_STYLE_MSGBOX, ""CERROR"√é√∏√®√°√™√†", ""CWHITE"√Ñ√´√ø √Ø√Æ√™√≥√Ø√™√® S√≠√≠√≠√Æ√© √≥√±√´√≥√£√®\n√≠√•√Æ√°√µ√Æ√§√®√¨√Æ √®√¨√•√≤√º 50 √∞√≥√°. √≠√† √†√™√™√†√≥√≠√≤√•", "Siguiente", "");
					if(pData[playerid][p_premium]) return SPD(playerid, 8418, DIALOG_STYLE_MSGBOX, ""CERROR"√é√∏√®√°√™√†", ""CWHITE"√ì √Ç√†√± √Ø√∞√®√Æ√°√∞√•√≤¬∏√≠ √Ø√∞√•√¨√®√≥√¨-√±√≤√†√≤√≥√± √≠√† √†√™√™√†√≥√≠√≤√•.\n√ó√≤√Æ√°√ª √≥√¢√Æ√´√®√≤√º√±√ø √®√ß √Æ√∞√£√†√≠√®√ß√†√∂√®√®, Usar√≤√•\n√™√Æ√¨√†√≠√§√≥ "CCYAN"/leave", "Siguiente", "");
					format(string, 234, ""CWHITE"√Ç√ª √±√Æ√±√≤√Æ√®√≤√• √¢ √Æ√∞√£√†√≠√®√ß√†√∂√®√® \"%s\".\n√Ö√±√´√® √Ç√ª √≥√¢√Æ√´√®√≤√•√±√º, √≤√Æ √Ø√Æ√≤√•√∞√ø√•√≤√• √¢√±√• √±√¢√Æ√® √§√Æ√±√≤√®√¶√•√≠√®√ø √¢ √≠√•√©, √≤√†√™√®√• √™√†√™ √∞√†√≠√£.\n√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √Ø√Æ√™√®√≠√≥√≤√º √Æ√∞√£√†√≠√®√ß√†√∂√®√æ? √ë√≤√Æ√®√¨√Æ√±√≤√º √≥√±√´√≥√£√®: "CBLUE"50 "CWHITE"√∞√≥√°√´√•√©.",
					GetMember[pData[playerid][pMember] - 1]);
					return SPD(playerid, 8147, DIALOG_STYLE_MSGBOX, ""CERROR"√è√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√•", string, "S√≠", "Siguiente");
				}
				case 9: {
					if(pData[playerid][pRub] < 100) return SPD(playerid, 8418, DIALOG_STYLE_MSGBOX, ""CERROR"√é√∏√®√°√™√†", ""CWHITE"√Ñ√´√ø √Ø√Æ√™√≥√Ø√™√® S√≠√≠√≠√Æ√© √≥√±√´√≥√£√®\n√≠√•√Æ√°√µ√Æ√§√®√¨√Æ √®√¨√•√≤√º 100 √∞√≥√°. √≠√† √†√™√™√†√≥√≠√≤√•", "Siguiente", "");
					if(pData[playerid][pSex] == 1) SPD(playerid, 8148, DIALOG_STYLE_MSGBOX, ""CMAIN"√ë√¨√•√≠√† √Ø√Æ√´√†", ""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª √∑√≤√Æ √µ√Æ√≤√®√≤√• √±√¨√•√≠√®√≤√º √±√¢√Æ√© √Ø√Æ√´ √≠√† {009900}√¶√•√≠√±√™√®√©"CWHITE"?\n√ë√≤√Æ√®√¨√Æ√±√≤√º √≥√±√´√≥√£√®: "CBLUE"100 "CWHITE"√∞√≥√°√´√•√©.", "S√≠", "Siguiente");
					else SPD(playerid, 8148, DIALOG_STYLE_MSGBOX, ""CMAIN"√ë√¨√•√≠√† √Ø√Æ√´√†", ""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª √∑√≤√Æ √µ√Æ√≤√®√≤√• √±√¨√•√≠√®√≤√º √±√¢√Æ√© √Ø√Æ√´ √≠√† {009900}√¨√≥√¶√±√™√Æ√©"CWHITE"?\n√ë√≤√Æ√®√¨√Æ√±√≤√º √≥√±√´√≥√£√®: "CBLUE"100 "CWHITE"√∞√≥√°√´√•√©.", "S√≠", "Siguiente");
				}
				case 10: {
					new str_status_1[20] = "", str_status_2[20] = "", str_status_3[20] = "", str_dialogstylespl[200];
					if(pData[playerid][p_style][0]) str_status_1 = "{99cc33}(√™√≥√Ø√´√•√≠)";
					if(pData[playerid][p_style][1]) str_status_2 = "{99cc33}(√™√≥√Ø√´√•√≠)";
					if(pData[playerid][p_style][2]) str_status_3 = "{99cc33}(√™√≥√Ø√´√•√≠)";
					format(str_dialogstylespl, sizeof(str_dialogstylespl), "√Ä√¨√•√∞√®√™√†√≠√±√™√®√© %s\n"CWHITE"√ü√Ø√Æ√≠√±√™√®√© %s\n"CWHITE"√ê√≥√±√±√™√®√© %s", str_status_1, str_status_2, str_status_3);
					SPD(playerid, 8149, DIALOG_STYLE_LIST, ""CMAIN"√ä√†√™√Æ√© √±√≤√®√´√º √°√Æ√ø Quieres √™√≥√Ø√®√≤√º?", str_dialogstylespl, "Seleccione", "Siguiente");
				}
			}
		}
	case 8412: {
		if(!response) return show_donate_menu(playerid);
		if(listitem == 0) {
			if(pData[playerid][p_strengh] >= 100) return SPD(playerid, 8418, DIALOG_STYLE_MSGBOX, ""CERROR"√é√∏√®√°√™√†", ""CWHITE"√Ç√†√∏√† √±√®√´√† √≥√¶√• √Ø√Æ√´√≠√Æ√±√≤√º√æ √Ø√∞√Æ√™√†√∑√•√≠√†", "Siguiente", "");
			new point = 100 - pData[playerid][p_strengh], Float: adi_price, price;
			adi_price = point * 1;
			price = floatround(adi_price, floatround_ceil);
			if(pData[playerid][pRub] < price) {
				new str[110];
				format(str, sizeof(str), ""CWHITE"√Ñ√´√ø √Ø√∞√Æ√™√†√∑√™√® √±√®√´√ª\n√≠√•√Æ√°√µ√Æ√§√®√¨√Æ √®√¨√•√≤√º {00cc99}%d √∞√≥√°. "CWHITE"√≠√† √†√™√™√†√≥√≠√≤√•", price);
				return SPD(playerid, 8418, DIALOG_STYLE_MSGBOX, ""CERROR"√é√∏√®√°√™√†", str, "Siguiente", "");
			}
			PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
			pData[playerid][p_strengh] = 100;
			withdraw_donate(playerid, price, "√è√∞√Æ√™√†√∑√™√† √±√®√´√ª");
			UpdatePlayerData(playerid, "strengh", 100);
			SCM(playerid, COLOR_MAIN, "√Ç√†√∏√† √±√®√´√† √≥√±√Ø√•√∏√≠√Æ √Ø√∞√Æ√™√†√∑√†√≠√† √§√Æ {00cc00}100 √Ø√∞√Æ√∂√•√≠√≤√Æ√¢");

			return 1;
		}
		new list = listitem - 1;
		if(pData[playerid][pSkill][list] >= 100) return SPD(playerid, 8418, DIALOG_STYLE_MSGBOX, ""CERROR"√é√∏√®√°√™√†", ""CWHITE"√Ç√ª√°√∞√†√≠√≠√Æ√• √Ç√†√¨√® √Æ√∞√≥√¶√®√• √≥√¶√• √Ø√Æ√´√≠√Æ√±√≤√º√æ √Ø√∞√Æ√™√†√∑√•√≠√Æ", "Siguiente", "");
		new points = 100 - pData[playerid][pSkill][list], Float: dd_price_skill, price_skill;
		dd_price_skill = points * 1;
		price_skill = floatround(dd_price_skill, floatround_ceil);
		if(pData[playerid][pRub] < price_skill) {
			new str_donate_skill[110];
			format(str_donate_skill, sizeof(str_donate_skill), ""CWHITE"√Ñ√´√ø √Ø√∞√Æ√™√†√∑√™√® √Ω√≤√Æ√£√Æ √Æ√∞√≥√¶√®√ø\n√≠√•√Æ√°√µ√Æ√§√®√¨√Æ √®√¨√•√≤√º {00cc99}%d √∞√≥√°. "CWHITE"√≠√† √†√™√™√†√≥√≠√≤√•", price_skill);
			return SPD(playerid, 8418, DIALOG_STYLE_MSGBOX, ""CERROR"√é√∏√®√°√™√†", str_donate_skill, "Siguiente", "");
		}
		PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
		pData[playerid][pSkill][list] = 100;
		switch(list) {
			case 0: {
				withdraw_donate(playerid, price_skill, "√è√∞√Æ√™√†√∑√™√† √≠√†√¢√ª√™√† √¢√´√†√§√•√≠√®√•√¨ Colt 45");
				UpdatePlayerData(playerid, "COLT45", 100);
				SCM(playerid, COLOR_MAIN, "√ç√†√¢√ª√™ √¢√´√†√§√•√≠√®√ø "CORANGE"Colt 45 "CMAIN"√≥√±√Ø√•√∏√≠√Æ √Ø√∞√Æ√™√†√∑√†√≠");
			}
			case 1: {
				withdraw_donate(playerid, price_skill, "√è√∞√Æ√™√†√∑√™√† √≠√†√¢√ª√™√† √¢√´√†√§√•√≠√®√•√¨ SD Pistol");
				UpdatePlayerData(playerid, "SDPISTOL", 100);
				SCM(playerid, COLOR_MAIN, "√ç√†√¢√ª√™ √¢√´√†√§√•√≠√®√ø "CORANGE"SD Pistol "CMAIN"√≥√±√Ø√•√∏√≠√Æ √Ø√∞√Æ√™√†√∑√†√≠");
			}
			case 2: {
				withdraw_donate(playerid, price_skill, "√è√∞√Æ√™√†√∑√™√† √≠√†√¢√ª√™√† √¢√´√†√§√•√≠√®√•√¨ Desert Eagle");
				UpdatePlayerData(playerid, "DEAGLE", 100);
				SCM(playerid, COLOR_MAIN, "√ç√†√¢√ª√™ √¢√´√†√§√•√≠√®√ø "CORANGE"Desert Eagle "CMAIN"√≥√±√Ø√•√∏√≠√Æ √Ø√∞√Æ√™√†√∑√†√≠");
			}
			case 3: {
				withdraw_donate(playerid, price_skill, "√è√∞√Æ√™√†√∑√™√† √≠√†√¢√ª√™√† √¢√´√†√§√•√≠√®√•√¨ Shotgun");
				UpdatePlayerData(playerid, "SHOTGUN", 100);
				SCM(playerid, COLOR_MAIN, "√ç√†√¢√ª√™ √¢√´√†√§√•√≠√®√ø "CORANGE"Shotgun "CMAIN"√≥√±√Ø√•√∏√≠√Æ √Ø√∞√Æ√™√†√∑√†√≠");
			}
			case 4: {
				withdraw_donate(playerid, price_skill, "√è√∞√Æ√™√†√∑√™√† √≠√†√¢√ª√™√† √¢√´√†√§√•√≠√®√•√¨ MP5");
				UpdatePlayerData(playerid, "MP5", 100);
				SCM(playerid, COLOR_MAIN, "√ç√†√¢√ª√™ √¢√´√†√§√•√≠√®√ø "CORANGE"MP5 "CMAIN"√≥√±√Ø√•√∏√≠√Æ √Ø√∞√Æ√™√†√∑√†√≠");
			}
			case 5: {
				withdraw_donate(playerid, price_skill, "√è√∞√Æ√™√†√∑√™√† √≠√†√¢√ª√™√† √¢√´√†√§√•√≠√®√•√¨ AK47");
				UpdatePlayerData(playerid, "AK47", 100);
				SCM(playerid, COLOR_MAIN, "√ç√†√¢√ª√™ √¢√´√†√§√•√≠√®√ø "CORANGE"AK47 "CMAIN"√≥√±√Ø√•√∏√≠√Æ √Ø√∞√Æ√™√†√∑√†√≠");
			}
			case 6: {
				withdraw_donate(playerid, price_skill, "√è√∞√Æ√™√†√∑√™√† √≠√†√¢√ª√™√† √¢√´√†√§√•√≠√®√•√¨ M4");
				UpdatePlayerData(playerid, "M4", 100);
				SCM(playerid, COLOR_MAIN, "√ç√†√¢√ª√™ √¢√´√†√§√•√≠√®√ø "CORANGE"M4 "CMAIN"√≥√±√Ø√•√∏√≠√Æ √Ø√∞√Æ√™√†√∑√†√≠");
			}
			case 7: {
				withdraw_donate(playerid, price_skill, "√è√∞√Æ√™√†√∑√™√† √≠√†√¢√ª√™√† √¢√´√†√§√•√≠√®√•√¨ Sniper Rifle");
				UpdatePlayerData(playerid, "SNIPER", 100);
				SCM(playerid, COLOR_MAIN, "√ç√†√¢√ª√™ √¢√´√†√§√•√≠√®√ø "CORANGE"Sniper Rifle "CMAIN"√≥√±√Ø√•√∏√≠√Æ √Ø√∞√Æ√™√†√∑√†√≠");
			}
			case 8: {
				withdraw_donate(playerid, price_skill, "√è√∞√Æ√™√†√∑√™√† √≠√†√¢√ª√™√† √¢√´√†√§√•√≠√®√•√¨ Sawnoff");
				UpdatePlayerData(playerid, "SAWNOFF", 100);
				SCM(playerid, COLOR_MAIN, "√ç√†√¢√ª√™ √¢√´√†√§√•√≠√®√ø "CORANGE"Sawnoff "CMAIN"√≥√±√Ø√•√∏√≠√Æ √Ø√∞√Æ√™√†√∑√†√≠");
			}
			case 9: {
				withdraw_donate(playerid, price_skill, "√è√∞√Æ√™√†√∑√™√† √≠√†√¢√ª√™√† √¢√´√†√§√•√≠√®√•√¨ Combat SG");
				UpdatePlayerData(playerid, "COMBAT_SG", 100);
				SCM(playerid, COLOR_MAIN, "√ç√†√¢√ª√™ √¢√´√†√§√•√≠√®√ø "CORANGE"Combat SG "CMAIN"√≥√±√Ø√•√∏√≠√Æ √Ø√∞√Æ√™√†√∑√†√≠");
			}
			case 10: {
				withdraw_donate(playerid, price_skill, "√è√∞√Æ√™√†√∑√™√† √≠√†√¢√ª√™√† √¢√´√†√§√•√≠√®√•√¨ Micro UZI");
				UpdatePlayerData(playerid, "MICRO_UZI", 100);
				SCM(playerid, COLOR_MAIN, "√ç√†√¢√ª√™ √¢√´√†√§√•√≠√®√ø "CORANGE"Micro UZI "CMAIN"√≥√±√Ø√•√∏√≠√Æ √Ø√∞√Æ√™√†√∑√†√≠");
			}
		}
		SetPlayerSkills(playerid);
	}
	case 8147: {
		if(!response) return show_donate_menu(playerid);
		if(!pData[playerid][pMember]) return SPD(playerid, 8418, DIALOG_STYLE_MSGBOX, ""CERROR"√é√∏√®√°√™√†", ""CWHITE"√Ç√ª √≠√• √±√Æ√±√≤√Æ√®√≤√• √¢ √Æ√∞√£√†√≠√®√ß√†√∂√®√®", "Siguiente", "");
		if(pData[playerid][pRub] < 50) return SPD(playerid, 8418, DIALOG_STYLE_MSGBOX, ""CERROR"√é√∏√®√°√™√†", ""CWHITE"√Ñ√´√ø √Ø√Æ√™√≥√Ø√™√® S√≠√≠√≠√Æ√© √≥√±√´√≥√£√®\n√≠√•√Æ√°√µ√Æ√§√®√¨√Æ √®√¨√•√≤√º 50 √∞√≥√°. √≠√† √†√™√™√†√≥√≠√≤√•", "Siguiente", "");
		if(pData[playerid][pAdmMember] != 0) return SCM(playerid, COLOR_ERROR, "√Ç√ª √¢√∞√•√¨√•√≠√≠√ª√© √´√®√§√•√∞. √Ç√¢√•√§√®√≤√• "CCYAN"/templeader "CERROR"√∑√≤√Æ√°√ª √±√≠√ø√≤√º √¢√∞√•√¨√•√≠√≠√Æ√• √´√®√§√•√∞√±√≤√¢√Æ");
		withdraw_donate(playerid, 50, "√Å√ª√±√≤√∞√ª√© √¢√ª√µ√Æ√§ √®√ß √Æ√∞√£√†√≠√®√ß√†√∂√®√®");
		PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
		SCMF(playerid, COLOR_YELLOW, "√ì√±√´√≥√£√† √≥√±√Ø√•√∏√≠√Æ √Ø√∞√®√Æ√°√∞√•√≤√•√≠√†. √Ç√ª √Ø√Æ√™√®√≠√≥√´√® √Æ√∞√£√†√≠√®√ß√†√∂√®√æ \"%s\"", FractionInfo[pData[playerid][pMember]][fName]);
		check_badgevalid(playerid);
		new oldmemberid = pData[playerid][pMember];
		pData[playerid][pMember] = 0;
		pData[playerid][pRank] = 0;
		pData[playerid][pLeader] = 0;
		pData[playerid][pJob] = 0;
		mysql_format(mysql_Handle, string, 164, "UPDATE `accounts` SET `pMember` = '0', `pRank` = '0', `pLeader` = '0', `pJob` = '0' WHERE `id` = %d", pData[playerid][pID]);
		mysql_tquery(mysql_Handle, string);
		SpawnPlayer(playerid);
		format(string, 80, "%s √Ø√Æ√™√®√≠√≥√´ √Ç√†√∏√≥ √Æ√∞√£√†√≠√®√ß√†√∂√®√æ √Ø√Æ √±√Æ√°√±√≤√¢√•√≠√≠√Æ√¨√≥ √¶√•√´√†√≠√®√æ", pData[playerid][pName]);
		return SFFM(oldmemberid, COLOR_ERROR, string);
	}
	case 8148: {
		if(!response) return show_donate_menu(playerid);
		if(pData[playerid][pRub] < 100) return SPD(playerid, 8418, DIALOG_STYLE_MSGBOX, ""CERROR"√é√∏√®√°√™√†", ""CWHITE"√Ñ√´√ø √Ø√Æ√™√≥√Ø√™√® S√≠√≠√≠√Æ√© √≥√±√´√≥√£√®\n√≠√•√Æ√°√µ√Æ√§√®√¨√Æ √®√¨√•√≤√º 100 √∞√≥√°. √≠√† √†√™√™√†√≥√≠√≤√•", "Siguiente", "");
		withdraw_donate(playerid, 100, "√ë√¨√•√≠√† √Ø√Æ√´√†");
		PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
		if(pData[playerid][pSex] == 1) pData[playerid][pSex] = 2;
		else pData[playerid][pSex] = 1;
		UpdatePlayerData(playerid, "pSex", pData[playerid][pSex]);
		SCM(playerid, COLOR_MAIN, "√ì√±√´√≥√£√† √≥√±√Ø√•√∏√≠√Æ √Ø√∞√®√Æ√°√∞√•√≤√•√≠√†. √Ç√†√∏ √Ø√Æ√´ √≥√±√Ø√•√∏√≠√Æ √®√ß√¨√•√≠¬∏√≠");
	}
	case 8418: show_donate_menu(playerid);
	case 8481: {
		if(!response) return show_donate_menu(playerid);
		if(pData[playerid][pRub] < 500) return SPD(playerid, 8418, DIALOG_STYLE_MSGBOX, ""CERROR"√é√∏√®√°√™√†", ""CWHITE"√Ñ√´√ø √Ø√Æ√™√≥√Ø√™√® S√≠√≠√≠√Æ√© √≥√±√´√≥√£√®\n√≠√•√Æ√°√µ√Æ√§√®√¨√Æ √®√¨√•√≤√º 500 √∞√≥√°. √≠√† √†√™√™√†√≥√≠√≤√•", "Siguiente", "");
		if(pData[playerid][pLicenses][0] && pData[playerid][pLicenses][1] && pData[playerid][pLicenses][2] && pData[playerid][pLicenses][3]) 
			return SPD(playerid, 8418, DIALOG_STYLE_MSGBOX, ""CERROR"√é√∏√®√°√™√†", ""CWHITE"√ç√† √Ç√†√∏√•√¨ √†√™√™√†√≥√≠√≤√• √≥√¶√• √™√≥√Ø√´√•√≠√ª √¢√±√• √´√®√∂√•√≠√ß√®√®", "Siguiente", "");
		withdraw_donate(playerid, 500, "√è√Æ√™√≥√Ø√™√† √¢√±√•√µ √´√®√∂√•√≠√ß√®√©");
		PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
		for(new i; i < 4; i ++) pData[playerid][pLicenses][i] = 1;
		UpdatePlayerData(playerid, "pLic0", 1);
		UpdatePlayerData(playerid, "pLic1", 1);
		UpdatePlayerData(playerid, "pLic2", 1);
		UpdatePlayerData(playerid, "pLic3", 1);
		SCM(playerid, COLOR_BLUE, "√ì√±√´√≥√£√† √≥√±√Ø√•√∏√≠√Æ √Ø√∞√®√Æ√°√∞√•√≤√•√≠√†. √Ç√†√¨ √°√ª√´ √¢√ªS√≠√≠ "CORANGE"√™√Æ√¨√Ø√´√•√™√≤ √¢√±√•√µ √´√®√∂√•√≠√ß√®√©");
	}
	case 8149: {
		if(!response) return show_donate_menu(playerid);
		if(pData[playerid][p_style][listitem]) return SPD(playerid, 8419, DIALOG_STYLE_MSGBOX, ""CERROR"√é√∏√®√°√™√†", ""CWHITE"√ù√≤√Æ√≤ √±√≤√®√´√º √°√Æ√ø √≥√¶√• √™√≥√Ø√´√•√≠ √≠√† √Ç√†√∏√•√¨ √†√™√™√†√≥√≠√≤√•", "Siguiente", "");
		if(pData[playerid][pRub] < 100) return SPD(playerid, 8419, DIALOG_STYLE_MSGBOX, ""CERROR"√é√∏√®√°√™√†", ""CWHITE"√Ñ√´√ø √Ø√Æ√™√≥√Ø√™√® √±√≤√®√´√ø\n√≠√•√Æ√°√µ√Æ√§√®√¨√Æ √®√¨√•√≤√º 100 √∞√≥√°. √≠√† √†√™√™√†√≥√≠√≤√•", "Siguiente", "");
		switch(listitem) {
			case 0: {
				withdraw_donate(playerid, 100, "√è√Æ√™√≥√Ø√™√† √±√≤√®√´√ø √°√Æ√ø \"√Ä√¨√•√∞√®√™√†√≠√±√™√®√©\"");
				UpdatePlayerData(playerid, "p_style_0", 1);
			}
			case 1: {
				withdraw_donate(playerid, 100, "√è√Æ√™√≥√Ø√™√† √±√≤√®√´√ø √°√Æ√ø \"√ü√Ø√Æ√≠√±√™√®√©\"");
				UpdatePlayerData(playerid, "p_style_1", 1);
			}
			case 2: {
				withdraw_donate(playerid, 100, "√è√Æ√™√≥√Ø√™√† √±√≤√®√´√ø √°√Æ√ø \"√ê√≥√±√±√™√®√©\"");
				UpdatePlayerData(playerid, "p_style_2", 1);
			}
		}
		PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
		pData[playerid][p_style][listitem] = 1;
		SCM(playerid, COLOR_PALEGREEN, "√ë√≤√®√´√º √°√Æ√ø √≥√±√Ø√•√∏√≠√Æ √™√≥√Ø√´√•√≠. Usar√≤√• {008800}/style "CPALEGREEN"√§√´√ø √±√¨√•√≠√ª");
	}
	case 8419: {
		new str_status_1[20] = "", str_status_2[20] = "", str_status_3[20] = "", str_dialogstylespl[200];
		if(pData[playerid][p_style][0]) str_status_1 = "{99cc33}(√™√≥√Ø√´√•√≠)";
		if(pData[playerid][p_style][1]) str_status_2 = "{99cc33}(√™√≥√Ø√´√•√≠)";
		if(pData[playerid][p_style][2]) str_status_3 = "{99cc33}(√™√≥√Ø√´√•√≠)";
		format(str_dialogstylespl, sizeof(str_dialogstylespl), "√Ä√¨√•√∞√®√™√†√≠√±√™√®√© %s\n"CWHITE"√ü√Ø√Æ√≠√±√™√®√© %s\n"CWHITE"√ê√≥√±√±√™√®√© %s", str_status_1, str_status_2, str_status_3);
		SPD(playerid, 8149, DIALOG_STYLE_LIST, ""CMAIN"√ä√†√™√Æ√© √±√≤√®√´√º √°√Æ√ø Quieres √™√≥√Ø√®√≤√º?", str_dialogstylespl, "Seleccione", "Siguiente");
	}
	case 452: {
		if(!response) return DeletePVar(playerid, "id_setleader");
		new org_number, orgen_number, prm_unit;
		switch(listitem) {
			case 4,9,13,17: return SPD(playerid, 452, DIALOG_STYLE_LIST, "√ç√†√ß√≠√†√∑√•√≠√®√• √´√®√§√•√∞√†", 
								"{ccff00}Tyr Kos-Anthosa\n\
								{ccff00}Kyryo Pan-Hiero\n\
								{ccff00}Tyr Vas-Venturasa\n\
								{ccff00}Administraci√≥n residente\n \n\
								\
								{0000ff}√ì√Ø√∞. Por el favor de Ros-Anthos\n\
								{0000ff}√ì√Ø√∞. por orden de Pan-Riero\n\
								{0000ff}√ì√Ø√∞. Por el favor de Vas-Venturas\n\
								{0000ff}√î√Å√ê\n \n\
								\
								{ff6666}Columna de Ros-Anthos\n\
								{ff6666}Colinitza Pan-Riero\n\
								{ff6666}Columbia Vas-Venturasa\n \n\
								\
								{996633}Noticias de oficina\n\
								{996633}Fuerza a√©rea militar\n\
								{996633}Armada\n \n\
								\
								{FFCC66}El instalador\n\
								{ff6600}Instalaciones de informaci√≥n masiva\n\
								{009900}Grove Street\n\
								{cc00ff}The Ballas\n\
								{00CCFF}Varrios Los Aztecas\n\
								{FFCD00}Los Santos Vagos\n\
								{6666ff}The Rifa\n\
								{993366}La Cosa Nostra\n\
								{007575}ruso\n\
								{bb0000}Yakuza", 
							"Seleccione", "Cerrar");
			case 0: org_number = 7, orgen_number = 26, prm_unit = 1;
			case 1: org_number = 8, orgen_number = 26, prm_unit = 2;
			case 2: org_number = 9, orgen_number = 26, prm_unit = 3;
			case 3: org_number = 26, orgen_number = 26, prm_unit = 0;
			case 5: org_number = 1, orgen_number = 22, prm_unit = 1;
			case 6: org_number = 10, orgen_number = 22, prm_unit = 2;
			case 7: org_number = 21, orgen_number = 22, prm_unit = 3;
			case 8: org_number = 2, orgen_number = 22, prm_unit = 4;
			case 10: org_number = 4, orgen_number = 23, prm_unit = 1;
			case 11: org_number = 28, orgen_number = 23, prm_unit = 2;
			case 12: org_number = 29, orgen_number = 23, prm_unit = 3;
			case 14: org_number = 19, orgen_number = 24, prm_unit = 1;
			case 15: org_number = 20, orgen_number = 24, prm_unit = 2;
			case 16: org_number = 27, orgen_number = 24, prm_unit = 3;
			case 18: org_number = 11, orgen_number = 11, prm_unit = 0;
			case 19: org_number = 16, orgen_number = 16, prm_unit = 0;
			case 20: org_number = 15, orgen_number = 15, prm_unit = 0;
			case 21: org_number = 12, orgen_number = 12, prm_unit = 0;
			case 22: org_number = 17, orgen_number = 17, prm_unit = 0;
			case 23: org_number = 13, orgen_number = 13, prm_unit = 0;
			case 24: org_number = 18, orgen_number = 18, prm_unit = 0;
			case 25: org_number = 5, orgen_number = 5, prm_unit = 0;
			case 26: org_number = 14, orgen_number = 14, prm_unit = 0;
			case 27: org_number = 6, orgen_number = 6, prm_unit = 0;
		}
		TextDrawShowForPlayer(playerid, chskin_box);
		SelectTextDraw(playerid, 0x3399FFAA);

		SetPVarInt(playerid, "org_number__setleader", org_number);
		SetPVarInt(playerid, "orgen_number__setleader", orgen_number);
		SetPVarInt(playerid, "prm_unit__setleader", prm_unit);
		SetPVarInt(playerid, "changed_skin_mode", 4);

		new name_pvar[16];
		for(new i = 0, skinid = 0; i < 16; i ++) {
			skinid = ChangeSkin[org_number - 1][i];
			if(!skinid) break;
			format(name_pvar, sizeof(name_pvar), "chskin_%d", i);
			SetPVarInt(playerid, name_pvar, skinid);
			PlayerTextDrawSetPreviewModel(playerid, chskin_td[playerid][i], skinid);
			PlayerTextDrawShow(playerid, chskin_td[playerid][i]);
		}
		return SCM(playerid, COLOR_BLUE, "√Ç√ª√°√•√∞√®√≤√• √¢√≠√•√∏√≠√Æ√±√≤√º √¢ √Æ√∞√£√†√≠√®√ß√†√∂√®√® √§√´√ø √®√£√∞√Æ√™√†");
	}
	case 3938: {
			if(!response) return show_donate_menu(playerid);
			if(pData[playerid][pRub] < (pData[playerid][pWarns]*100)) return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢");
			if(pData[playerid][pWarns] == 2) SCM(playerid, COLOR_BLUE, "√Ç√ª √≥√±√Ø√•√∏√≠√Æ √±√≠√ø√´√® "CORANGE"2 √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√ø "CBLUE"√±√Æ √±√¢√Æ√•√£√Æ √†√™√™√†√≥√≠√≤√†");
			else SCM(playerid, COLOR_BLUE, "√Ç√ª √≥√±√Ø√•√∏√≠√Æ √±√≠√ø√´√® √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√• √±√Æ √±√¢√Æ√•√£√Æ √†√™√™√†√≥√≠√≤√†");
			withdraw_donate(playerid, (pData[playerid][pWarns]*100), "√ë√≠√ø√≤√®√• √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√ø(√©)");
			pData[playerid][pWarns] = 0;
			PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
			return UpdatePlayerData(playerid, "pWarns", pData[playerid][pWarns]);
		}
	case 9943:
	{
		if(!response) return show_donate_menu(playerid);
		if(pData[playerid][pRub] < 25) return SCM(playerid, COLOR_ERROR, "√ç√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √∞√≥√°√´√•√©");
		new len = strlen(inputtext);
		if(len < 4 || len > 19)
			return SCM(playerid, COLOR_ERROR, "√ç√•√§√Æ√Ø√≥√±√≤√®√¨√ª√© √¥√Æ√∞√¨√†√≤ √¢√¢√ÆS√≠");

		while(--len != -1)
		{
			switch(inputtext[len])
			{
				case 'A'..'Z', 'a'..'z', '_': continue;
				default:
				{
					SCM(playerid, COLOR_ERROR, "√Ç√¢√•√§¬∏√≠√≠√Æ√• √®√¨√ø √±√Æ√§√•√∞√¶√®√≤ √≠√•√§√Æ√Ø√≥√±√≤√®√¨√ª√• √±√®√¨√¢√Æ√´√ª");
					return SCM(playerid, -1, "√å√Æ√¶√≠√Æ √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √´√†√≤√®√≠√±√™√®√• √°√≥√™√¢√ª a-z A-Z, √† √≤√†√™√¶√• √±√®√¨√¢√Æ√´ _");
				}
			}
		}
        format(WantNickChange[playerid],19, "%s",inputtext);
		mysql_format(mysql_Handle, string,128, "SELECT `Name` FROM `accounts` WHERE `Name` = '%e'", WantNickChange[playerid]);
		return mysql_tquery(mysql_Handle, string, "CookTawersName", "d", playerid);
	}
	case 625: {
			if(response) {
				SCM(playerid, COLOR_MAIN, "√Ç√ª √≥√±√≤√∞√Æ√®√´√®√±√º √≠√† √∞√†√°√Æ√≤√≥ {FFCD00}√Æ√°√ª√∑√≠√ª√¨"CMAIN" √∏√†√µ√≤¬∏√∞√Æ√¨. √Ç√Æ√ß√º√¨√®√≤√• √®√≠√±√≤√∞√≥√¨√•√≠√≤ √Ø√Æ√ß√†√§√® √Ç√†√±");
				if(pData[playerid][pSex] == 1) SetPlayerSkin(playerid, 260);
				else SetPlayerSkin(playerid, 191);
				pData[playerid][pHighSkill] = 0;
				pData[playerid][pLowSkill] = 1;
				pData[playerid][pMinePr] = 0;
				pData[playerid][pMineNumber] = 0;

				CreatePlayerMineTD(playerid);
				
				PlayerTextDrawShow(playerid, MineMoneyPTD[playerid]);
				PlayerTextDrawShow(playerid, MineAmountPTD[playerid]);

				for(new i = 0; i < 4; i ++) TextDrawShowForPlayer(playerid, MineGlText[i]);
			}
		}
	case 627: {
			if(response) {
				SCM(playerid, COLOR_BLUE, "√Ç√ª √≥√±√≤√∞√Æ√®√´√®√±√º √≠√† √∞√†√°√Æ√≤√≥ {FFCD00}√Ø√∞√Æ√¢√•√∞√•√≠√≠√ª√¨"CBLUE" √∏√†√µ√≤¬∏√∞√Æ√¨. √Ç√Æ√ß√º√¨√®√≤√• √®√≠√±√≤√∞√≥√¨√•√≠√≤ √Ø√Æ√ß√†√§√® √Ç√†√±");
				if(pData[playerid][pSex] == 1) SetPlayerSkin(playerid, 260);
				else SetPlayerSkin(playerid, 191);
				pData[playerid][pHighSkill] = 1;
				pData[playerid][pLowSkill] = 0;
				pData[playerid][pMinePr] = 0;
				pData[playerid][pMineNumber] = 0;

				CreatePlayerMineTD(playerid);
				PlayerTextDrawShow(playerid, MineMoneyPTD[playerid]);
				PlayerTextDrawShow(playerid, MineAmountPTD[playerid]);
				for(new i = 0; i < 3; i ++) TextDrawShowForPlayer(playerid, MineGlText[i]);
				TextDrawShowForPlayer(playerid, MineGlText[4]);
			}
		}
	case 624: {
			if(response) {
				SCM(playerid, COLOR_MAIN, "√ê√†√°√Æ√≤√† √∏√†√µ√≤¬∏√∞√† √ß√†√¢√•√∞√∏√•√≠√†");
				RemovePlayerAttachedObject(playerid, 0), RemovePlayerAttachedObject(playerid, 8);
				TogglePlayerControllable(playerid, 1);
				pData[playerid][pMinePr] = 0;
				if(pData[playerid][pMember] == 0) SetPlayerSkin(playerid, pData[playerid][pChar]);
				else SetPlayerSkin(playerid, pData[playerid][pModel]);
				new UU_oneprod_mine = oneprod_mine / 8;
				if(pData[playerid][pMineNumber] > 0) {
					SCMF(playerid, COLOR_MAIN, "√Ç√ª √Ø√•√∞√•√≠√•√±√´√® {FFCD00}%d √™√£ "CMAIN"√∞√≥√§√ª √® √ß√†√∞√†√°√Æ√≤√†√´√® {00cc66}%d$",pData[playerid][pMineNumber],pData[playerid][pMineNumber]*UU_oneprod_mine);
					Hook_GivePlayerMoney(playerid, pData[playerid][pMineNumber]*UU_oneprod_mine);
					pData[playerid][pWorkSkill][0]+=pData[playerid][pMineNumber];
					format(string, 30, "~b~+%d$", pData[playerid][pMineNumber]*UU_oneprod_mine);
					GameTextForPlayer(playerid, string, 3000, 1);
				}	
				UpdatePlayerData(playerid, "pWorkSkill", pData[playerid][pWorkSkill][0]);
				pData[playerid][pLowSkill] = 0;
				pData[playerid][pHighSkill] = 0;
				pData[playerid][pMineNumber] = 0;
				for(new i = 0; i < 5; i ++) TextDrawHideForPlayer(playerid, MineGlText[i]);
				PlayerTextDrawDestroy(playerid, MineAmountPTD[playerid]);
				PlayerTextDrawDestroy(playerid, MineMoneyPTD[playerid]);
			}
		}
	case 626: {
			if(response) {
				SCM(playerid, COLOR_MAIN, "√ê√†√°√Æ√≤√† √∏√†√µ√≤¬∏√∞√† √ß√†√¢√•√∞√∏√•√≠√†");
				RemovePlayerAttachedObject(playerid, 0), RemovePlayerAttachedObject(playerid, 8);
				pData[playerid][pMinePr] = 0;
				if(pData[playerid][pMember] == 0) SetPlayerSkin(playerid, pData[playerid][pChar]);
				else SetPlayerSkin(playerid, pData[playerid][pModel]);
				new UU_oneprod_mine = oneprod_mine / 8;
				new BB_oneprod_mine = UU_oneprod_mine / 2;
				new UUB_oneprod_mine = UU_oneprod_mine + BB_oneprod_mine;
				if(pData[playerid][pMineNumber] > 0) {
					SCMF(playerid, COLOR_MAIN, "√Ç√ª √Ø√•√∞√•√≠√•√±√´√® {FFCD00}%d √™√£ "CMAIN"√∞√≥√§√ª √® √ß√†√∞√†√°√Æ√≤√†√´√® {00cc66}%d$",pData[playerid][pMineNumber],pData[playerid][pMineNumber]*UU_oneprod_mine);
					pData[playerid][pWorkSkill][0]+=pData[playerid][pMineNumber];
					UpdatePlayerData(playerid, "pWorkSkill", pData[playerid][pWorkSkill][0]);
					SCMF(playerid, COLOR_PURPLE, "√Å√Æ√≠√≥√± +%d$ √ß√† √§√Æ√°√ª√∑√≥ √¢ √∏√†√µ√≤√• √£√´√≥√°√Æ√™√Æ√£√Æ √ß√†√´√Æ√¶√•√≠√®√ø",pData[playerid][pMineNumber]*BB_oneprod_mine);
					Hook_GivePlayerMoney(playerid, pData[playerid][pMineNumber]*UUB_oneprod_mine);
					format(string, 30, "~b~+%d$", pData[playerid][pMineNumber]*UUB_oneprod_mine);
					GameTextForPlayer(playerid, string, 3000, 1);
				}
				pData[playerid][pLowSkill] = 0;
				pData[playerid][pHighSkill] = 0;
				pData[playerid][pMineNumber] = 0;
				for(new i = 0; i < 5; i ++) TextDrawHideForPlayer(playerid, MineGlText[i]);
				PlayerTextDrawDestroy(playerid, MineAmountPTD[playerid]);
				PlayerTextDrawDestroy(playerid, MineMoneyPTD[playerid]);
			}
		}
	case 251: {
		if(!response) return 1;
		switch(listitem) {
			case 0: SPD(playerid, 945, DIALOG_STYLE_MSGBOX, "{cccc00}√è√∞√†√¢√®√´√† √Ñ√Æ√∞√Æ√¶√≠√Æ√£√Æ √Ñ√¢√®√¶√•√≠√®√ø (√è√Ñ√Ñ)", 
						"{ff2200}√ó√≤√Æ √ß√†√Ø√∞√•√π√•√≠√Æ:\n\n\
						"CWHITE"√á√†√Ø√∞√•√π√•√≠√Æ √§√¢√®√£√†√≤√º√±√ø √≠√• √Ø√Æ √Ø√∞√†√¢√Æ√© √±√≤√Æ√∞√Æ√≠√• √§√Æ√∞√Æ√£√®\n\
						√á√†√Ø√∞√•√π√•√≠√Æ √±√°√®√¢√†√≤√º √´√æ√§√•√©\n\
						√á√†√Ø√∞√•√π√•√≠√Æ √•√ß√§√®√≤√º √± √Æ√∞√≥√¶√®√•√¨ √¢ √∞√≥√™√†√µ √® √≤√•√¨ √°√Æ√´√•√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √•√£√Æ\n\
						√á√†√Ø√∞√•√π√•√≠√Æ √±√°√®√¢√†√≤√º √±√Æ√Æ√∞√≥√¶√•√≠√®√ø (√±√≤√Æ√´√°√ª, √¨√≥√±√Æ√∞√≠√ª√• √°√†√™√® √® √§√∞.)\n\
						√á√†√Ø√∞√•√π√•√≠√Æ √±√∫√•√ß√¶√†√≤√º √± √£√Æ√∞ √≠√• √Ø√Æ √§√Æ√∞√Æ√£√•\n\
						√á√†√Ø√∞√•√π√•√≠√Æ √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √≤√∞√†√¨√Ø√´√®√≠√ª √§√´√ø √¨√†√∏√®√≠, √≠√†√µ√Æ√§√ø√π√®√•√±√ø √¢ √£√Æ√∞√Æ√§√±√™√Æ√© √¨√•√±√≤√≠√Æ√±√≤√®\n\
						√á√†√Ø√∞√•√π√•√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √ß√† √∞√≥√´¬∏√¨ √¢ √±√Æ√±√≤√Æ√ø√≠√®√® √†√´√™√Æ√£√Æ√´√º√≠√Æ√£√Æ √Æ√Ø√º√ø√≠√•√≠√®√ø\n\
						√á√†√Ø√∞√•√π√•√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √ß√† √∞√≥√´¬∏√¨ √¢ √±√Æ√±√≤√Æ√ø√≠√®√® √≠√†√∞√™√Æ√≤√®√∑√•√±√™√Æ√£√Æ √¢√Æ√ß√§√•√©√±√≤√¢√®√ø\n\
						√á√†√Ø√∞√•√π√•√≠√Æ √±√¢√Æ√∞√†√∑√®√¢√†√≤√º √¢ √≠√•√Ø√Æ√´√Æ√¶√•√≠√≠√ª√µ √¨√•√±√≤√†√µ\n\
						√á√†√Ø√∞√•√π√•√≠√Æ √Ø√†√∞√™√Æ√¢√†√≤√º√±√ø √¢ √≠√•√Ø√Æ√´√Æ√¶√•√≠√≠√ª√µ √¨√•√±√≤√†√µ (√≠√† √≤√∞√†√¢√• √≥ √¨√Ω√∞√®√®, √≠√† √±√≤√≥√Ø√•√≠√º√™√†√µ √® √§√∞.)\n\
						√á√†√Ø√∞√•√π√•√≠√Æ √≥√±√≤√∞√†√®√¢√†√≤√º √≠√•√´√•√£√†√´√º√≠√ª√• √£√Æ√≠√™√®\n\
						√á√†√Ø√∞√•√π√•√≠√Æ √≤√Æ√´√™√†√≤√º √∑√º√æ-√´√®√°√Æ √¨√†√∏√®√≠√≥ √± √Ø√Æ√¨√Æ√π√º√æ √±√¢√Æ√•√© √¨√†√∏√®√≠√ª\n\
						√á√†√Ø√∞√•√π√•√≠√Æ √≠√•√Ø√Æ√§√∑√®√≠√•√≠√®√• √Ø√∞√Æ√±√º√°√†√¨ √å√Ç√Ñ √® √å√é (√®√±√™√´√æ√∑√•√≠√®√•: √≠√†√∞√≥√∏√•√≠√®√• √±√Æ√≤√∞√≥√§√≠√®√™√Æ√¨ √ä√Æ√≠√±√≤√®√≤√≥√∂√®√® √∏√≤√†√≤√†)\n\
						√á√†√Ø√∞√•√π√•√≠√Æ √≠√•√†√§√•√™√¢√†√≤√≠√Æ √¢√•√±√≤√® √±√•√°√ø √≠√† √§√Æ√∞√Æ√£√• (√Æ√±√≤√†√≠√†√¢√´√®√¢√†√≤√º√±√ø √°√•√ß √Ø√∞√®√∑√®√≠√ª, √§√Æ√´√£√Æ √±√®√£√≠√†√´√®√≤√º √® √§√∞.)\n\
						√á√†√Ø√∞√•√π√•√≠√Æ √≥√•√ß√¶√†√≤√º √± √¨√•√±√≤√† √†√¢√†√∞√®√®, √•√±√´√® √¢√ª √¢ √≠√•√© √±√Æ√≥√∑√†√¢√±√≤√¢√Æ√¢√†√´√®\n\
						√á√†√Ø√∞√•√π√•√≠√Æ √•√µ√†√≤√º √≠√† √¢√•√´√Æ√±√®√Ø√•√§√• √≠√• √Ø√Æ √Æ√°√Æ√∑√®√≠√• √Ø√∞√†√¢√Æ√© √±√≤√Æ√∞√Æ√≠√ª √§√Æ√∞√Æ√£√®\n\
						√á√†√Ø√∞√•√π√•√≠√Æ √§√•√´√†√≤√º √≤√∞√æ√™√® √≠√† √¢√•√´√Æ√±√®√Ø√•√§√• √≠√• √¢ √±√Ø√•√∂√®√†√´√º√≠√ª√µ √¨√•√±√≤√†√µ (√Ø√∞√ª√¶√™√® √® √§√∞.)\n\
						√á√†√Ø√∞√•√π√•√≠√Æ √≠√†√¨√•√∞√•√≠√≠√Æ √≥√±√≤√∞√†√®√¢√†√≤√º √†√¢√†√∞√®√® √® √Ø√Æ√§√∞√•√ß√†√≤√º Otro √¨√†√∏√®√≠√ª\n\
						√á√†√Ø√∞√•√π√•√≠√Æ √≠√†√¨√•√∞√•√≠√≠√Æ √∞√†√ß√°√®√¢√†√≤√º √±√¢√Æ√æ √¨√†√∏√®√≠√≥\n\
						√á√†√Ø√∞√•√π√•√≠√Æ √≠√†√¨√•√∞√•√≠√≠√Æ √≠√†√∞√≥√∏√†√≤√º √è√Ñ√Ñ\n\n\
						{00FF00}√ó√≤√Æ √∞√†√ß√∞√•√∏√•√≠√Æ:\n\n\
						"CWHITE"√ê√†√ß√∞√•√∏√•√≠√Æ √†√™√™√≥√∞√†√≤√≠√Æ √•√ß√§√®√≤√º √Ø√Æ √§√Æ√∞√Æ√£√†√¨\n\
						√ê√†√ß√∞√•√∏√•√≠√Æ √•√ß√§√®√≤√º √± √¢√™√´√æ√∑¬∏√≠√≠√ª√¨ √Æ√£√∞√†√≠√®√∑√®√≤√•√´√•√¨ √±√™√Æ√∞√Æ√±√≤√®\n\
						√ê√†√ß√∞√•√∏√•√≠√Æ √†√§√•√™√¢√†√≤√≠√Æ √∞√•√†√£√®√∞√Æ√¢√†√≤√º √≠√† √Ø√Æ√´√®√∂√•√©√±√™√®√• √¨√†√∏√®√≠√ª √® √å√Ç√Ñ √¢ √∂√•√´√Æ√¨\n\
						√ê√†√ß√∞√•√∏√•√≠√Æ √¨√®√∞√≠√Æ √§√Æ√£√Æ√¢√†√∞√®√¢√†√≤√º√±√ø √≠√† √¨√•√±√≤√• √†√¢√†√∞√®√®\n\
						√ê√†√ß√∞√•√∏√•√≠√Æ √§√•√´√†√≤√º √≤√∞√æ√™√® √≠√† √¨√†√∏√®√≠√†√µ, √®√±√Ø√Æ√´√º√ß√≥√ø √≤√∞√†√¨√Ø√´√®√≠√ª √¢ √±√Ø√•√∂√®√†√´√º√≠√ª√µ √¨√•√±√≤√†√µ", 
					"√Ç√•√∞√≠√≥√≤√º√±√ø", "");
			case 1: SPD(playerid, 945, DIALOG_STYLE_MSGBOX, "{cccc00}√è√∞√†√¢√®√´√† √è√Æ√´¬∏√≤√† √≠√† √Ç√Æ√ß√§√≥√∏√≠√Æ√¨ √í√∞√†√≠√±√Ø√Æ√∞√≤√• (√è√è√≠√Ç√í)", 
						"{ff2200}√ó√≤√Æ √ß√†√Ø√∞√•√π√•√≠√Æ:\n\n\
						"CWHITE"√á√†√Ø√∞√•√π√•√≠√Æ √Ø√∞√Æ√®√ß√¢√Æ√§√®√≤√º √¢√ß√´¬∏√≤ √® √Ø√Æ√±√†√§√™√≥ √£√§√•-√´√®√°√Æ √™√∞√Æ√¨√• √±√Ø√•√∂. √¨√•√±√≤ (√†√Ω√∞√Æ√Ø√Æ√∞√≤, √¢√ß√´¬∏√≤√≠√ª√• √Ø√´√Æ√π√†√§√™√®, √¢√Æ√•√≠√≠√ª√• √°√†√ß√ª)\n\
						√á√†√Ø√∞√•√π√•√≠√Æ √´√•√≤√†√≤√º √± √¢√ª√Ø√≥√π√•√≠√≠√ª√¨√® √∏√†√±√±√®\n\
						√á√†√Ø√∞√•√π√•√≠√Æ √±√†√§√®√≤√º√±√ø √± √≥√°√∞√†√≠√≠√ª√¨√® √∏√†√±√±√®\n\
						√á√†√Ø√∞√•√π√•√≠√Æ √§√•√´√†√≤√º √∞√†√ß√´√®√∑√≠√ª√• √≤√∞√æ√™√® √£√§√•-√´√®√°√Æ √™√∞√Æ√¨√• √±√Ø√•√∂. √¨√•√±√≤\n\
						√á√†√Ø√∞√•√π√•√≠√Æ √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Æ√∞√≥√§√®√ø √≠√† √¢√Æ√•√≠√≠√Æ√¨ √¢√Æ√ß√§√≥√∏√≠√Æ√¨ √≤√∞√†√≠√±√Ø√Æ√∞√≤√•\n\
						√á√†√Ø√∞√•√π√•√≠√Æ √Ø√Æ√™√®S√≠√≤√º √∏√≤√≥√∞√¢√†√´ √¢√Æ √¢√∞√•√¨√ø √Ø√Æ√´¬∏√≤√†\n\
						√á√†√Ø√∞√•√π√•√≠√Æ √≠√†√¨√•√∞√•√≠√≠√Æ √¢√∞√•√ß√†√≤√º√±√ø √¢ √§√∞√≥√£√Æ√© √¢√Æ√ß√§√≥√∏√≠√ª√© √≤√∞√†√≠√±√Ø√Æ√∞√≤\n\
						√á√†√Ø√∞√•√π√•√≠√Æ √≠√†√¨√•√∞√•√≠√≠√Æ √¢√∞√•√ß√†√≤√º√±√ø √™√≥S√≠-√´√®√°√Æ\n\
						√á√†√Ø√∞√•√π√•√≠√Æ √≠√†√¨√•√∞√•√≠√≠√Æ √≥√≠√®√∑√≤√Æ√¶√†√≤√º √±√¢√Æ√© √¢√Æ√ß√§√≥√∏√≠√ª√© √≤√∞√†√≠√±√Ø√Æ√∞√≤\n\
						√á√†√Ø√∞√•√π√•√≠√Æ √´√•√≤√†√≤√º √°√´√®√ß√™√Æ √™ √ß√•√¨√´√• √≠√† √¢√ª√±√Æ√™√Æ√© √±√™√Æ√∞√Æ√±√≤√®\n\
						√á√†√Ø√∞√•√π√•√≠√Æ √®√£√≠√Æ√∞√®√∞√Æ√¢√†√≤√º √±√®√£√≠√†√´√ª √¢√Æ√•√≠√≠√Æ√£√Æ √®√´√® √Ø√Æ√´√®√∂√•√©√±√™√Æ√£√Æ √¢√Æ√ß√§√≥√∏√≠√Æ√£√Æ √≤√∞√†√≠√±√Ø√Æ√∞√≤√†\n\
						√á√†√Ø√∞√•√π√•√≠√Æ √≠√†√∞√≥√∏√†√≤√º √Ø√∞√†√¢√®√´√† √Ø√Æ√´¬∏√≤√† √≠√† √¢√Æ√ß√§√≥√∏√≠√Æ√¨ √≤√∞√†√≠√±√Ø√Æ√∞√≤√•\n\n\
						{00FF00}√ó√≤√Æ √∞√†√ß√∞√•√∏√•√≠√Æ:\n\n\
						"CWHITE"√ê√†√ß√∞√•√∏√•√≠√Æ √Ø√∞√Æ√®√ß√¢√Æ√§√®√≤√º √¢√ß√´¬∏√≤ √® √Ø√Æ√±√†√§√™√≥ √¢ √±√Ø√•√∂. √¨√•√±√≤√†√µ\n\
						√ê√†√ß√∞√•√∏√•√≠√Æ √±√Æ√°√´√æS√≠√≤√º √¢√±√• √Ø√∞√†√¢√®√´√† √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√®\n\
						√ê√†√ß√∞√•√∏√•√≠√Æ √´√•√≤√†√≤√º √≠√† √Ø√∞√®√•√¨√´√•√¨√Æ√© √±√™√Æ√∞√Æ√±√≤√® √¢√ª√±√Æ√™√Æ √Æ√≤ √ß√•√¨√´√®\n\
						√ê√†√ß√∞√•√∏√•√≠√Æ √§√•√´√†√≤√º √≤√∞√æ√™√® √¢ √±√Ø√•√∂. √¨√•√±√≤√†√µ\n\
						√ê√†√ß√∞√•√∏√•√≠√Æ √§√•√´√†√≤√º √≤√∞√æ√™√® √≠√• √¢ √±√Ø√•√∂. √¨√•√±√≤√†√µ, √®√¨√•√ø √∞√†√ß√∞√•√∏√•√≠√®√ø √Æ√≤ √Ø√∞√†√¢√®√≤√•√´√º√±√≤√¢√† (√≠√† √Ø√†√∞√†S√≠√µ √® √§√∞.)\n\
						√ê√†√ß√∞√•√∏√•√≠√Æ √Ø√∞√Æ√®√ß√¢√Æ√§√®√≤√º √Ø√Æ√±√†√§√™√≥ √≠√• √¢ √±√Ø√•√∂. √¨√•√±√≤√†√µ √Ø√∞√® √™√∞√®√≤√®√∑√•√±√™√Æ√© √±√®√≤√≥√†√∂√®√®\n\
						√ê√†√ß√∞√•√∏√•√≠√Æ √Ø√Æ√™√®S√≠√≤√º √∏√≤√≥√∞√¢√†√´ √¢√Æ √¢√∞√•√¨√ø √Ø√Æ√´¬∏√≤√† √Ø√∞√® √™√∞√®√≤√®√∑√•√±√™√Æ√© √±√®√≤√≥√†√∂√®√®",
					"√Ç√•√∞√≠√≥√≤√º√±√ø", "");
			case 2: {
				PlayerTextDrawColor(playerid, speed_playertd[playerid][1], 0xFF4400FF);
				PlayerTextDrawColor(playerid, speed_playertd[playerid][2], 0xFF4400FF);
				PlayerTextDrawColor(playerid, speed_playertd[playerid][3], 0xFF4400FF);
				PlayerTextDrawColor(playerid, speed_playertd[playerid][4], -65281);
				PlayerTextDrawColor(playerid, al_indichome[playerid], 0xFFFFFFFF);
				PlayerTextDrawSetString(playerid, speed_playertd[playerid][4], "100");
				PlayerTextDrawSetString(playerid, speed_playertd[playerid][5], "1000");
				PlayerTextDrawSetString(playerid, speed_playertd[playerid][0], "0 km/h");
				for(new i = 0; i < 7; i ++) {
					if(i < 6) PlayerTextDrawShow(playerid, speed_playertd[playerid][i]);
					TextDrawShowForPlayer(playerid, speed_global[i]);
				}
				PlayerTextDrawShow(playerid, al_indichome[playerid]);
				SPD(playerid, 947, DIALOG_STYLE_MSGBOX, "{cccc00}√ì√Ø√∞√†√¢√´√•√≠√®√• √≤√∞√†√≠√±√Ø√Æ√∞√≤√Æ√¨", 
					""CLITEBLUE"√ä√´√†√¢√®√∏√® √® √™√Æ√¨√†√≠√§√ª √§√´√ø √≥√Ø√∞√†√¢√´√•√≠√®√ø √≤√∞√†√≠√±√Ø√Æ√∞√≤√Æ√¨:\n\n\
					"CCYAN"√ã√•√¢√ª√© CTRL √®√´√® /e "CWHITE"- √ß√†√¢√•√±√≤√® √®√´√® √ß√†√£√´√≥√∏√®√≤√º √§√¢√®√£√†√≤√•√´√º √≤√∞√†√≠√±√Ø√Æ√∞√≤√†\n\
					"CCYAN"H √®√´√® Caps Lock "CWHITE"- √Ø√Æ√±√®√£√≠√†√´√®√≤√º √£√≥√§√™√Æ√¨\n\
					"CCYAN"A D "CWHITE"- √≥√Ø√∞√†√¢√´√•√≠√®√• √∞√≥√´¬∏√¨ √≤√∞√†√≠√±√Ø√Æ√∞√≤√†\n\
					"CCYAN"W S "CWHITE"- √§√¢√®√¶√•√≠√®√• √Ø√∞√ø√¨√Æ √®√´√® Siguiente\n\
					"CCYAN"√è√∞√Æ√°√•√´ "CWHITE"- √±√≠√®√ß√®√≤√º √±√™√Æ√∞√Æ√±√≤√º √®√´√® √Æ√±√≤√†√≠√Æ√¢√®√≤√º √≤√∞√†√≠√±√Ø√Æ√∞√≤\n\
					"CCYAN"√ã√•√¢√ª√© ALT √®√´√® /l "CWHITE"- √¢√™√´√æ√∑√®√≤√º √®√´√® apagar √¥√†√∞√ª (√•√±√´√® √Æ√≠√® √•√±√≤√º)\n\
					"CCYAN"/addit "CWHITE"- √≥√Ø√∞√†√¢√´√•√≠√®√• √§√¢√•√∞√ø√¨√®, √Æ√™√≠√†√¨√®, √°√†√£√†√¶√≠√®√™√Æ√¨ √® √™√†√Ø√Æ√≤√Æ√¨ √¨√†√∏√®√≠√ª\n\
					"CCYAN"NUM 6 √®√´√® /alarm"CWHITE"- √¢√™√´√æ√∑√®√≤√º √®√´√® apagar √±√®√£√≠√†√´√®√ß√†√∂√®√æ. √Ñ√Æ√±√≤√≥√Ø√≠√Æ √≤√Æ√´√º√™√Æ √¢ √§√Æ√¨√†√∏√≠√•√¨ √≤√∞√†√≠√±√Ø√Æ√∞√≤√•\n\
					"CCYAN"/fill "CWHITE"- √ß√†√Ø√∞√†√¢√®√≤√º √≤√∞√†√≠√±√Ø√Æ√∞√≤ √≤√Æ√Ø√´√®√¢√Æ√¨ (√§√Æ√±√≤√≥√Ø√≠√Æ √≤√Æ√´√º√™√Æ √≠√† √Ä√á√ë)\n\
					"CCYAN"/lock "CWHITE"- √≥√Ø√∞√†√¢√´√•√≠√®√• √§√¢√•√∞√≠√ª√¨√® √ß√†√¨√™√†√¨√® √¢ √≤√∞√†√≠√±√Ø√Æ√∞√≤√•\n\
					{008800}Q E "CWHITE"- √≥√Ø√∞√†√¢√´√•√≠√®√• √∏√≤√≥√∞√¢√†√´√Æ√¨ √±√†√¨√Æ√´¬∏√≤√† √®√´√® √¢√•√∞√≤√Æ√´¬∏√≤√†\n\
					{008800}NUM + √®√´√® 2 "CWHITE"- √¢√ª√Ø√≥√±√≤√®√≤√º √®√´√® √≥√°√∞√†√≤√º √∏√†√±√±√®\n\n\
					"CLITEBLUE"√é√Ø√®√±√†√≠√®√• √Ø√∞√®√°√Æ√∞√≠√Æ√© √Ø√†√≠√•√´√® √≤√∞√†√≠√±√Ø√Æ√∞√≤√†:\n\n\
					{99cc33}HEADLIGHTS ({00cc00}‚Ä¢{99cc33}/"CERROR"‚Ä¢{99cc33}) "CWHITE"- √±√Æ√±√≤√Æ√ø√≠√®√• √¥√†√∞ √≤√∞√†√≠√±√Ø√Æ√∞√≤√† (√¢√™√´√æ√∑√•√≠√ª √®√´√® √¢√ª√™√´√æ√∑√•√≠√ª)\n\
					{99cc33}LOCKED ({00cc00}‚Ä¢{99cc33}/"CERROR"‚Ä¢{99cc33}) "CWHITE"- √ß√†√¨√™√® √≤√∞√†√≠√±√Ø√Æ√∞√≤√† (√ß√†√™√∞√ª√≤√ª √®√´√® √Æ√≤√™√∞√ª√≤√ª)\n\
					{99cc33}ENGINE ({00cc00}‚Ä¢{99cc33}/"CERROR"‚Ä¢{99cc33}) "CWHITE"- √±√≤√†√≤√≥√± √§√¢√®√£√†√≤√•√´√ø (√¢√™√´√æ√∑√•√≠ √®√´√® √¢√ª√™√´√æ√∑√•√≠)\n\
					{99cc33}0 KM/H "CWHITE"- √≤√•√™√≥√π√†√ø √±√™√Æ√∞√Æ√±√≤√º √≤√∞√†√≠√±√Ø√Æ√∞√≤√† √¢ √™√®√´√Æ√¨√•√≤√∞√†√µ √¢ √∑√†√±\n\
					{99cc33}FUEL "CYELLOW"100 "CWHITE"- √™√Æ√´√®√∑√•√±√≤√¢√Æ √´√®√≤√∞√Æ√¢ √≤√Æ√Ø√´√®√¢√† √¢ √°√†√™√•\n\
					{99cc33}CAR HP "CYELLOW"1000 "CWHITE"- √±√Æ√±√≤√Æ√ø√≠√®√• (√ß√§√Æ√∞√Æ√¢√º√•) √≤√∞√†√≠√±√Ø√Æ√∞√≤√† √® √•√£√Æ √§√•√≤√†√´√•√©\n\
					{99cc33}S "CWHITE"- √®√≠√§√®√™√†√≤√Æ√∞ √±√®√£√≠√†√´√®√ß√†√∂√®√® (√¥√®√Æ√´√•√≤√Æ√¢√ª√©/√°√•√´√ª√©). √Ñ√Æ√±√≤√≥√Ø√≠√Æ √≤√Æ√´√º√™√Æ √¢ √§√Æ√¨√†√∏√≠√•√¨ √≤√∞√†√≠√±√Ø√Æ√∞√≤√•", 
				"√Ç√•√∞√≠√≥√≤√º√±√ø", "");
			}
		}
	}
	case 945: SPD(playerid, 251, DIALOG_STYLE_TABLIST_HEADERS, "{cccc00}√Ä√¢√≤√Æ√∏√™√Æ√´√†", "{aa80ff}√Ç√ª√°√•√∞√®√≤√• √≠√•√Æ√°√µ√Æ√§√®√¨√Æ√• √Ç√†√¨ √Ø√Æ√±√Æ√°√®√•:\n"CWHITE"√è√∞√†√¢√®√´√† √Ñ√Æ√∞√Æ√¶√≠√Æ√£√Æ √Ñ√¢√®√¶√•√≠√®√ø (√è√Ñ√Ñ)\n√è√∞√†√¢√®√´√† √è√Æ√´¬∏√≤√† √≠√† √Ç√Æ√ß√§√≥√∏√≠√Æ√¨ √í√∞√†√≠√±√Ø√Æ√∞√≤√• (√è√è√≠√Ç√í)\n√ì√Ø√∞√†√¢√´√•√≠√®√• √≤√∞√†√≠√±√Ø√Æ√∞√≤√Æ√¨", "Seleccione", "Cerrar");
	case 947: {
		for(new i = 0; i < 7; i ++) {
			if(i < 6) PlayerTextDrawHide(playerid, speed_playertd[playerid][i]);
			TextDrawHideForPlayer(playerid, speed_global[i]);
		}
		PlayerTextDrawHide(playerid, al_indichome[playerid]);
		SPD(playerid, 251, DIALOG_STYLE_TABLIST_HEADERS, "{cccc00}√Ä√¢√≤√Æ√∏√™√Æ√´√†", "{aa80ff}√Ç√ª√°√•√∞√®√≤√• √≠√•√Æ√°√µ√Æ√§√®√¨√Æ√• √Ç√†√¨ √Ø√Æ√±√Æ√°√®√•:\n"CWHITE"√è√∞√†√¢√®√´√† √Ñ√Æ√∞√Æ√¶√≠√Æ√£√Æ √Ñ√¢√®√¶√•√≠√®√ø (√è√Ñ√Ñ)\n√è√∞√†√¢√®√´√† √è√Æ√´¬∏√≤√† √≠√† √Ç√Æ√ß√§√≥√∏√≠√Æ√¨ √í√∞√†√≠√±√Ø√Æ√∞√≤√• (√è√è√≠√Ç√í)\n√ì√Ø√∞√†√¢√´√•√≠√®√• √≤√∞√†√≠√±√Ø√Æ√∞√≤√Æ√¨", "Seleccione", "Cerrar");
	}
	case 1926: {
		if(!response) return 1;
		new str_rating[110],
			num_org;
		switch(GetPlayerVirtualWorld(playerid)) {
			case 1: num_org = 7;
			case 2: num_org = 9;
			case 3: num_org = 8;
			default: return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [090]");
		}
		switch(listitem) {
			case 0: mysql_format(mysql_Handle, str_rating, sizeof(str_rating), "UPDATE `accounts` SET `good_rate_meria` = `good_rate_meria` + '1' WHERE `pLeader` = %i LIMIT 1", num_org);
			case 1: mysql_format(mysql_Handle, str_rating, sizeof(str_rating), "UPDATE `accounts` SET `bad_rate_meria` = `bad_rate_meria` + '1' WHERE `pLeader` = %i LIMIT 1", num_org);
		}
		mysql_tquery(mysql_Handle, str_rating);
		SetPVarInt(playerid, "rate_meria_delay", gettime() + 300);
		SCM(playerid, COLOR_PALEGREEN, "√Ç√†√∏√† √Æ√∂√•√≠√™√† √Ø√∞√®√≠√ø√≤√†. √ë√Ø√†√±√®√°√Æ");
	}
	case 7628: {
			if(!response) return callcmd::gps(playerid);
			switch(listitem) {
				case 0: EnableGPS(playerid, 1024.6786,2425.6152,10.8503);
				case 1: EnableGPS(playerid, 1264.7610,-1271.7831,13.5475);
				case 2: EnableGPS(playerid, 559.3081,-1263.0269,17.2422);
				case 3: EnableGPS(playerid, -1971.1808,293.8529,35.1719);
				case 4: EnableGPS(playerid, 2202.0095,1380.9631,10.8203);
				case 5: EnableGPS(playerid, 323.2394,-1798.7316,4.6925);
				case 6: EnableGPS(playerid, 2133.0903,-1146.0798,24.6485);
				case 7: EnableGPS(playerid, 1804.5406,-1934.8248,13.3853);
				case 8: EnableGPS(playerid, 1183.7162,-1364.3342,14.2218);
				case 9: EnableGPS(playerid, -1998.1152,98.9961,27.5391);
				case 10: EnableGPS(playerid, -2603.3433,589.5858,14.4531);
				case 11: EnableGPS(playerid, 2826.2507,1292.0820,10.7668);
				case 12: EnableGPS(playerid, 1624.2697,1850.6942,10.8203);
				case 13: EnableGPS(playerid, 1157.8455,-1735.0267,13.7734);
				case 14: EnableGPS(playerid, -1526.8564,738.4719,7.1875);
				case 15: EnableGPS(playerid, -1103.8624,-1028.5061,129.3781);
			}
			SCM(playerid, COLOR_YELLOW, "√å√•√±√≤√Æ √Æ√≤√¨√•√∑√•√≠√Æ √≥ √Ç√†√± √≠√† GPS");
		}
	case 7627: {
			if(!response) return callcmd::gps(playerid);
			switch(listitem) {
				case 0: EnableGPS(playerid, 289.9686,-1630.1335,33.3382);
				case 1: EnableGPS(playerid, 1335.4952,-1429.9457,13.5346);
				case 2: EnableGPS(playerid, 1478.8784,-1739.4149,13.5469);
				case 3: EnableGPS(playerid, -2755.8694,375.9488,4.3337);
				case 4: EnableGPS(playerid, 2382.6187,2468.6013,10.8203);
				case 5: EnableGPS(playerid, 1634.1368,-2245.8489,13.4985);
				case 6: EnableGPS(playerid, -1412.9434,-301.9650,14.1411);
				case 7: EnableGPS(playerid, 1696.3429,1447.5647,10.7620);
				case 8: EnableGPS(playerid, 1327.59,-1560.72,13.5397);
				case 9: EnableGPS(playerid, -2228.81,252.147,35.3203);
				case 10: EnableGPS(playerid, 1704.35,1025.78,10.8203);
				case 11: EnableGPS(playerid, 1809.8372,-1889.6656,13.4074);
				case 12: EnableGPS(playerid, 1166.7079,-1725.8365,13.8567);
				case 13: EnableGPS(playerid, -1991.1814,143.1078,27.5391);
				case 14: EnableGPS(playerid, 2829.0325,1289.8748,10.7709);
				case 15: EnableGPS(playerid, -2673.1704,-5.9960,6.1328);
				case 16: EnableGPS(playerid, -2048.5999,-74.6558,35.1654);
				case 17: EnableGPS(playerid, 1166.9209,1369.8365,10.8203);
				case 18: EnableGPS(playerid, 301.0305,-1890.5969,1.6997);
				case 19: EnableGPS(playerid, -1974.5748,1119.5345,53.0851);
				case 20: EnableGPS(playerid, 1381.3822,-1753.1305,13.5469);
				case 21: EnableGPS(playerid, 2688.6619,-1695.6516,9.9198);
				case 22: EnableGPS(playerid, -2136.8779,-441.1505,35.3359);
			}
			SCM(playerid, COLOR_YELLOW, "√å√•√±√≤√Æ √Æ√≤√¨√•√∑√•√≠√Æ √≥ √Ç√†√± √≠√† GPS");
		}
    case 7629: {
            if(!response) return callcmd::gps(playerid);
            switch(listitem) {
                case 0: EnableGPS(playerid, 1542.0269,-1674.9254,13.5537);
                case 1: EnableGPS(playerid, -1617.3304,721.0270,14.0971);
                case 2: EnableGPS(playerid, 2289.0579,2420.4976,10.8203);
                case 3: EnableGPS(playerid, -2423.5073,496.9707,30.0703);
                case 4: EnableGPS(playerid, 1191.0197,-1337.0874,13.3982);
                case 5: EnableGPS(playerid, -2659.9734,623.3040,14.4531);
                case 6: EnableGPS(playerid, 1636.6337,1833.1252,10.8203);
                case 7: EnableGPS(playerid, 345.2217,1794.2367,18.1416);
                case 8: EnableGPS(playerid, 440.1250,2562.8916,16.3672);
                case 9: EnableGPS(playerid, -2307.9368,2370.7478,5.5217);
                case 10: EnableGPS(playerid, 1191.2305,-2036.7141,69.0078);
                case 11: EnableGPS(playerid, 1652.2924,-1661.1483,22.5156);
            }
            SCM(playerid, COLOR_YELLOW, "√å√•√±√≤√Æ√Ø√Æ√´√Æ√¶√•√≠√®√• √Æ√∞√£√†√≠√®√ß√†√∂√®√® √Æ√≤√¨√•√∑√•√≠√Æ √≥ √Ç√†√± √≠√† GPS");
        }
	case 7630: {
			if(!response) return callcmd::gps(playerid);
			switch(listitem) {
				case 0: EnableGPS(playerid, 1873.7753,-1077.7612,23.8281);
				case 1: EnableGPS(playerid, 2490.0139,-1669.9242,13.3359);
				case 2: EnableGPS(playerid, 2768.9893,-1947.7357,13.3682);
				case 3: EnableGPS(playerid, 2178.8835,-1796.6198,13.3682);
				case 4: EnableGPS(playerid, 2774.3550,-1622.1465,10.9219);
				case 5: EnableGPS(playerid, 1446.1321,748.9786,10.8203);
				case 6: EnableGPS(playerid, 953.8283,1734.3771,8.6484);
				case 7: EnableGPS(playerid, 1467.4531,2773.3977,10.6719);
			}
			SCM(playerid, COLOR_YELLOW, "√å√•√±√≤√Æ √Æ√≤√¨√•√∑√•√≠√Æ √≥ √Ç√†√± √≠√† GPS");
		}
	case 424: {
			if(!response) return 1;
			if(pData[playerid][pCar][listitem] == 0) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤ √†√¢√≤√Æ√¨√Æ√°√®√´√º √Ø√Æ√§ S√≠√≠√≠√ª√¨ √≠√Æ√¨√•√∞√Æ√¨");
			new param_id = GetPVarInt(playerid, "prm_id"), param_price = GetPVarInt(playerid, "prm_price");
            if(param_price < pData[playerid][p_car_cash][listitem]) 
            	return SCMF(playerid, COLOR_ERROR, "√ñ√•√≠√† √≠√• √§√Æ√´√¶√≠√† √°√ª√≤√º √¨√•√≠√º√∏√• √£√Æ√±. √∂√•√≠√ª √≤√∞√†√≠√±√Ø√Æ√∞√≤√† (%d$)", pData[playerid][p_car_cash][listitem]);
            if(!ProxDetectorS(8.0, playerid, param_id)) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
            if(pData[param_id][pCash] < param_price) return SCM(playerid, COLOR_LIGHTGREY, "√ì √®√£√∞√Æ√™√† No √±√≤√Æ√´√º√™√Æ √§√•√≠√•√£ √≠√†√´√®√∑√≠√ª√¨√®");
            if(GetPVarInt(playerid, "cancel_act")) return SCM(playerid, COLOR_GREY, "√Ç√ª √≥√¶√• √±√§√•√´√†√´√® √™√†√™√Æ√•-√≤√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √Ç√¢√•√§√®√≤√• "CBLUE"/revoke"CGREY", √∑√≤√Æ√°√ª √Æ√≤√Æ√ß√¢√†√≤√º √•√£√Æ");
            if(GetPVarInt(param_id, "offer") != 9999) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™√≥ √≥√¶√• √±√§√•√´√†√´√® √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √é√≠ √§√Æ√´√¶√•√≠ {00cc00}√Ø√∞√®√≠√ø√≤√º "CLIGHTGREY"√®√´√® "CERROR"√Æ√≤√¨√•√≠√®√≤√º "CLIGHTGREY"√•√£√Æ");
			DeletePVar(playerid, "prm_id"); DeletePVar(playerid, "prm_price");
			format(string,128, "√Ç√ª √Ø√∞√•√§√´√Æ√¶√®√´√® %s √™√≥√Ø√®√≤√º %s √ß√† %d$", GetName(param_id),VehicleNames[pData[playerid][pCar][listitem] - 400],param_price);
			SCM(playerid, COLOR_BLUE, string);
			format(string,128, "%s √Ø√∞√•√§√´√†√£√†√•√≤ √Ç√†√¨ √™√≥√Ø√®√≤√º %s √ß√† %d$",pData[playerid][pName],VehicleNames[pData[playerid][pCar][listitem] - 400],param_price);
			SCM(param_id, COLOR_BLUE, string);
            SCM(param_id, -1, "√ç√†√¶√¨√®√≤√• "CMAIN"Y "CWHITE"√∑√≤√Æ√°√ª √±√Æ√£√´√†√±√®√≤√º√±√ø √®√´√® "CERROR"N "CWHITE"√§√´√ø √Æ√≤√™√†√ß√†");
            SCM(param_id, COLOR_ERROR, "√Ç√≠√®√¨√†√≠√®√•! √Ö√±√´√® √≠√† √≤√∞√†√≠√±√Ø√Æ√∞√≤√• √≥√±√≤√†√≠√Æ√¢√´√•√≠ √™√†√™√Æ√©-√´√®√°√Æ √≤√æ√≠√®√≠√£, √Æ√≠ √°√≥√§√•√≤ √≥S√≠√´¬∏√≠");
			SetPVarInt(param_id, "CarOffer", playerid);
            SetPVarInt(playerid, "cancel_act", 1); SetPVarInt(playerid, "cancel_act_id", param_id);
			SetPVarInt(param_id, "CarNum", listitem);
            SetPVarInt(param_id, "offer", 1);
			SetPVarInt(param_id, "CarPrice", param_price);
		}
	case 479: {
		if(!response) return 1;
		switch(listitem) {
			case 0: show_dialog_exppan(playerid);
			case 1: show_dialog_donpan(playerid);
		}
	}
	case 841: {
		if(!response) return SPD(playerid, 479, DIALOG_STYLE_LIST, "{99cc33}√Ä√™√∂√®√® X-", "√é√Ø√ª√≤\n√Ñ√Æ√≠√†√≤", "Seleccione", "Cerrar");
		multiply_exp = listitem + 1; string[0] = EOS;
		mysql_format(mysql_Handle, string, 50, "UPDATE `otherfuncs` SET `multiply_exp` = %d", multiply_exp);
		mysql_tquery(mysql_Handle, string);
		if(!listitem) SCM(playerid, COLOR_MAIN, "√Ä√™√∂√®√ø √≠√† √Æ√Ø√ª√≤ √Æ√≤√™√´√æ√∑√•√≠√†");
		else SCMF(playerid, COLOR_MAIN, "√ì√±√≤√†√≠√Æ√¢√´√•√≠√† √†√™√∂√®√ø: {aa80ff}x%d √Æ√Ø√ª√≤", multiply_exp);
	}
	case 917: {
		if(!response) return 1;
		if(!strlen(inputtext)) return SPD(playerid, 917, DIALOG_STYLE_INPUT, "{99cc33}√ë√¨√•√≠√† √≠√†√ß√¢√†√≠√®√ø √±√•√∞√¢√•√∞√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¢√Æ√• √≠√†√ß√¢√†√≠√®√• √§√´√ø √±√•√∞√¢√•√∞√† √¢ √Ø√Æ√´√• √≠√®√¶√•:\n√é√≠√Æ √°√≥√§√•√≤ √≥√±√≤√†√≠√Æ√¢√´√•√≠√Æ √¢ 'hostname' √Ø√Æ√´√• √±√•√∞√¢√•√∞√†", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
	    if(strlen(inputtext) > 64) {
	        SCM(playerid, COLOR_GREY, "√Ñ√Æ√Ø√≥√±√≤√®√¨√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √±√®√¨√¢√Æ√´√Æ√¢: 64"); 
	        return SPD(playerid, 917, DIALOG_STYLE_INPUT, "{99cc33}√ë√¨√•√≠√† √≠√†√ß√¢√†√≠√®√ø √±√•√∞√¢√•√∞√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¢√Æ√• √≠√†√ß√¢√†√≠√®√• √§√´√ø √±√•√∞√¢√•√∞√† √¢ √Ø√Æ√´√• √≠√®√¶√•:\n√é√≠√Æ √°√≥√§√•√≤ √≥√±√≤√†√≠√Æ√¢√´√•√≠√Æ √¢ 'hostname' √Ø√Æ√´√• √±√•√∞√¢√•√∞√†", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
	    }
	    strmid(servername, inputtext, 0, strlen(inputtext), 255);
	    mysql_format(mysql_Handle, string, 130, "UPDATE `otherfuncs` SET `servername` = '%s'", inputtext);
	    mysql_tquery(mysql_Handle, string);
	    format(string, 140, "hostname %s", inputtext); SendRconCommand(string);
	    SCMF(playerid, COLOR_BLUE, "√ç√†√ß√¢√†√≠√®√• √±√•√∞√¢√•√∞√†: "CMAIN"%s", inputtext);
	}
	case 842: {
		if(!response) return SPD(playerid, 479, DIALOG_STYLE_LIST, "{99cc33}√Ä√™√∂√®√® X-", "√é√Ø√ª√≤\n√Ñ√Æ√≠√†√≤", "Seleccione", "Cerrar");
		multiply_don = listitem + 1; string[0] = EOS;
		mysql_format(mysql_Handle, string, 50, "UPDATE `otherfuncs` SET `multiply_don` = %d", multiply_don);
		mysql_tquery(mysql_Handle, string);
		if(!listitem) SCM(playerid, COLOR_MAIN, "√Ä√™√∂√®√ø √≠√† √§√Æ√≠√†√≤ √Æ√≤√™√´√æ√∑√•√≠√†");
		else SCMF(playerid, COLOR_MAIN, "√ì√±√≤√†√≠√Æ√¢√´√•√≠√† √†√™√∂√®√ø: {aa80ff}x%d √§√Æ√≠√†√≤", multiply_don);
	}
	case 396: {
		if(response) {
			if(listitem == 50 && !GetPVarInt(playerid, "bizes_button")) 
				return show_gps_bizes(playerid, GetPVarInt(playerid, "gps_bizes_page") + 1, 50);
			new p_listitem = -1;
			new value = (GetPVarInt(playerid, "gps_bizes_page")-1) * 50;
			DeletePVar(playerid, "gps_bizes_page");
			for(new i = value + 1; i != BIZES + value + 1; i ++) {
				p_listitem ++;
				if(p_listitem != listitem) continue;
				EnableGPS(playerid, BizInfo[i][EntBizVh][0], BizInfo[i][EntBizVh][1], BizInfo[i][EntBizVh][2]);
				SCM(playerid, COLOR_YELLOW, "√Å√®√ß√≠√•√± √Æ√≤√¨√•√∑√•√≠ √≥ √Ç√†√± √≠√† GPS");
				break;
			}
		}
		else callcmd::gps(playerid);
	}
    case 296: {
        if(!response) return 1;
        new dial_title[55], countmember = 0, teamnumber, dop_info[40] = "‚Äî";
        string[0]=EOS;
        switch(listitem) {
        	case 0: teamnumber = 26;
            case 1: teamnumber = 1;
            case 2: teamnumber = 10;
            case 3: teamnumber = 21;
            case 4: teamnumber = 2;
        }
        strcat(string, "√à√¨√ø\t√ì√∞√Æ√¢√•√≠√º\t√Ñ√Æ√´√¶√≠√Æ√±√≤√º\t√Ñ√Æ√Ø. √®√≠√¥√Æ√∞√¨√†√∂√®√ø\n");
        foreach(new i:Player) {
            if(pData[i][pMember] != teamnumber || !IsPlayerConnected(i)) continue; 
            dop_info = "‚Äî";
            if(pTemp[i][pAFK] + 2 > AFK_SECOND) {
				if(pTemp[i][pAFK] >= 3600) format(dop_info, 26, "AFK {00cc99}(√°√Æ√´√•√• √∑√†√±√†)");
				else format(dop_info, 40, "AFK {00cc99}(%s)", TimeConverter(pTemp[i][pAFK]));
			}
            if(pData[i][pMuteTime] > 0) format(dop_info, 40, "√Å√´√Æ√™√®√∞√Æ√¢√™√† √∑√†√≤√† "CERROR"(%s)", TimeConverter(pData[i][pMuteTime]));
            else if(pData[i][pPrisonTime] > 0) format(dop_info, 40, "√í√æ√∞√º√¨√† "CERROR"(%s)", TimeConverter(pData[i][pPrisonTime]));
            else if(pData[i][pJailTime] > 0) format(dop_info, 40, "√í√æ√∞√º√¨√† "CERROR"(%s)", TimeConverter(pData[i][pJailTime]));
            format(string,1500, "%s%d. %s[%d]\t%d\t%d √∞√†√≠√£. %s\t{cccc66}%s\n", string, countmember + 1, GetName(i), i, pData[i][pLevel], pData[i][pRank], new_rank_name[pData[i][pMember] - 1][pData[i][pRank] - 1], dop_info);
            countmember ++;
        }
        if(countmember == 0) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{ff9945}√é√∏√®√°√™√†", ""CWHITE"√é√≠√´√†√©√≠ √®√£√∞√Æ√™√® √Ω√≤√Æ√© √Æ√∞√£√†√≠√®√ß√†√∂√®√® (√Ø√Æ√§√∞√†√ß√§√•√´√•√≠√®√ø) √≠√• √≠√†√©√§√•√≠√ª", "Cerrar", "");
        SetPVarInt(playerid, "team_number", teamnumber);
        if(teamnumber == 26 || teamnumber == 5 || teamnumber == 6 || 
        teamnumber == 11 || teamnumber == 12 || teamnumber == 13 || teamnumber == 14 || teamnumber == 15 || teamnumber == 16 || teamnumber == 17 || teamnumber == 18) 
            format(dial_title, 55, ""CCYAN"√ó√´√•√≠√ª √Æ√∞√£√†√≠√®√ß√†√∂√®√® √Æ√≠√´√†√©√≠ {bfbb41}(%d √∑√•√´.)", countmember);
        else format(dial_title, 55, ""CCYAN"√ó√´√•√≠√ª √Ø√Æ√§√∞√†√ß√§√•√´√•√≠√®√ø √Æ√≠√´√†√©√≠ {bfbb41}(%d √∑√•√´.)", countmember);
        SPD(playerid, 8417, DIALOG_STYLE_TABLIST_HEADERS, dial_title, string, "√Ñ√•√≤√†√´√®", "Cerrar");
    }
    case 297: {
        if(!response) return 1;
        new dial_title[55], countmember = 0, teamnumber, dop_info[40] = "‚Äî";
        string[0]=EOS;
        switch(listitem) {
        	case 0: teamnumber = 26;
            case 1: teamnumber = 4;
            case 2: teamnumber = 28;
            case 3: teamnumber = 29;
        }
        strcat(string, "√à√¨√ø\t√ì√∞√Æ√¢√•√≠√º\t√Ñ√Æ√´√¶√≠√Æ√±√≤√º\t√Ñ√Æ√Ø. √®√≠√¥√Æ√∞√¨√†√∂√®√ø\n");
        foreach(new i:Player) {
            if(pData[i][pMember] != teamnumber || !IsPlayerConnected(i)) continue; 
            dop_info = "‚Äî";
            if(pTemp[i][pAFK] + 2 > AFK_SECOND) {
				if(pTemp[i][pAFK] >= 3600) format(dop_info, 26, "AFK {00cc99}(√°√Æ√´√•√• √∑√†√±√†)");
				else format(dop_info, 40, "AFK {00cc99}(%s)", TimeConverter(pTemp[i][pAFK]));
			}
            if(pData[i][pMuteTime] > 0) format(dop_info, 40, "√Å√´√Æ√™√®√∞√Æ√¢√™√† √∑√†√≤√† "CERROR"(%s)", TimeConverter(pData[i][pMuteTime]));
            else if(pData[i][pPrisonTime] > 0) format(dop_info, 40, "√í√æ√∞√º√¨√† "CERROR"(%s)", TimeConverter(pData[i][pPrisonTime]));
            else if(pData[i][pJailTime] > 0) format(dop_info, 40, "√í√æ√∞√º√¨√† "CERROR"(%s)", TimeConverter(pData[i][pJailTime]));
            format(string, 1500, "%s%d. %s[%d]\t%d\t%d √∞√†√≠√£. %s\t{cccc66}%s\n", string, countmember + 1, GetName(i), i, pData[i][pLevel], pData[i][pRank], new_rank_name[pData[i][pMember] - 1][pData[i][pRank] - 1], dop_info);
            countmember ++;
        }
        if(countmember == 0) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{ff9945}√é√∏√®√°√™√†", ""CWHITE"√é√≠√´√†√©√≠ √®√£√∞√Æ√™√® √Ω√≤√Æ√© √Æ√∞√£√†√≠√®√ß√†√∂√®√® (√Ø√Æ√§√∞√†√ß√§√•√´√•√≠√®√ø) √≠√• √≠√†√©√§√•√≠√ª", "Cerrar", "");
        SetPVarInt(playerid, "team_number", teamnumber);
        if(teamnumber == 26 || teamnumber == 5 || teamnumber == 6 || 
        teamnumber == 11 || teamnumber == 12 || teamnumber == 13 || teamnumber == 14 || teamnumber == 15 || teamnumber == 16 || teamnumber == 17 || teamnumber == 18) 
            format(dial_title, 55, ""CCYAN"√ó√´√•√≠√ª √Æ√∞√£√†√≠√®√ß√†√∂√®√® √Æ√≠√´√†√©√≠ {bfbb41}(%d √∑√•√´.)", countmember);
        else format(dial_title, 55, ""CCYAN"√ó√´√•√≠√ª √Ø√Æ√§√∞√†√ß√§√•√´√•√≠√®√ø √Æ√≠√´√†√©√≠ {bfbb41}(%d √∑√•√´.)", countmember);
        SPD(playerid, 8417, DIALOG_STYLE_TABLIST_HEADERS, dial_title, string, "√Ñ√•√≤√†√´√®", "Cerrar");
    }
    case 291: {
        if(!response) return 1;
        new dial_title[55], countmember = 0, teamnumber, dop_info[40] = "‚Äî";
        string[0]=EOS;
        switch(listitem) {
        	case 0: teamnumber = 26;
            case 1: teamnumber = 19;
            case 2: teamnumber = 20;
            case 3: teamnumber = 27;
        }
        strcat(string, "√à√¨√ø\t√ì√∞√Æ√¢√•√≠√º\t√Ñ√Æ√´√¶√≠√Æ√±√≤√º\t√Ñ√Æ√Ø. √®√≠√¥√Æ√∞√¨√†√∂√®√ø\n");
        foreach(new i:Player) {
            if(pData[i][pMember] != teamnumber || !IsPlayerConnected(i)) continue; 
            dop_info = "‚Äî";
            if(pTemp[i][pAFK] + 2 > AFK_SECOND) {
				if(pTemp[i][pAFK] >= 3600) format(dop_info, 26, "AFK {00cc99}(√°√Æ√´√•√• √∑√†√±√†)");
				else format(dop_info, 40, "AFK {00cc99}(%s)", TimeConverter(pTemp[i][pAFK]));
			}
            if(pData[i][pMuteTime] > 0) format(dop_info, 40, "√Å√´√Æ√™√®√∞√Æ√¢√™√† √∑√†√≤√† "CERROR"(%s)", TimeConverter(pData[i][pMuteTime]));
            else if(pData[i][pPrisonTime] > 0) format(dop_info, 40, "√í√æ√∞√º√¨√† "CERROR"(%s)", TimeConverter(pData[i][pPrisonTime]));
            else if(pData[i][pJailTime] > 0) format(dop_info, 40, "√í√æ√∞√º√¨√† "CERROR"(%s)", TimeConverter(pData[i][pJailTime]));
            format(string, 1500, "%s%d. %s[%d]\t%d\t%d √∞√†√≠√£. %s\t{cccc66}%s\n", string, countmember + 1, GetName(i), i, pData[i][pLevel], pData[i][pRank], new_rank_name[pData[i][pMember] - 1][pData[i][pRank] - 1], dop_info);
            countmember ++;
        }
        if(countmember == 0) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{ff9945}√é√∏√®√°√™√†", ""CWHITE"√é√≠√´√†√©√≠ √®√£√∞√Æ√™√® √Ω√≤√Æ√© √Æ√∞√£√†√≠√®√ß√†√∂√®√® (√Ø√Æ√§√∞√†√ß√§√•√´√•√≠√®√ø) √≠√• √≠√†√©√§√•√≠√ª", "Cerrar", "");
        SetPVarInt(playerid, "team_number", teamnumber);
        if(teamnumber == 26 || teamnumber == 5 || teamnumber == 6 || 
        teamnumber == 11 || teamnumber == 12 || teamnumber == 13 || teamnumber == 14 || teamnumber == 15 || teamnumber == 16 || teamnumber == 17 || teamnumber == 18) 
            format(dial_title, 55, ""CCYAN"√ó√´√•√≠√ª √Æ√∞√£√†√≠√®√ß√†√∂√®√® √Æ√≠√´√†√©√≠ {bfbb41}(%d √∑√•√´.)", countmember);
        else format(dial_title, 55, ""CCYAN"√ó√´√•√≠√ª √Ø√Æ√§√∞√†√ß√§√•√´√•√≠√®√ø √Æ√≠√´√†√©√≠ {bfbb41}(%d √∑√•√´.)", countmember);
        SPD(playerid, 8417, DIALOG_STYLE_TABLIST_HEADERS, dial_title, string, "√Ñ√•√≤√†√´√®", "Cerrar");
    }
    case 2188: {
        if(!response) return 1;
        new dial_title[55], countmember = 0, teamnumber, dop_info[40] = "‚Äî";
        string[0]=EOS;
        switch(listitem) {
            case 0: teamnumber = 26;
            case 1: teamnumber = 7;
            case 2: teamnumber = 8;
            case 3: teamnumber = 9;
        }
        strcat(string, "√à√¨√ø\t√ì√∞√Æ√¢√•√≠√º\t√Ñ√Æ√´√¶√≠√Æ√±√≤√º\t√Ñ√Æ√Ø. √®√≠√¥√Æ√∞√¨√†√∂√®√ø\n");
        foreach(new i:Player) {
            if(pData[i][pMember] != teamnumber || !IsPlayerConnected(i)) continue; 
            dop_info = "‚Äî";
            if(pTemp[i][pAFK] + 2 > AFK_SECOND) {
				if(pTemp[i][pAFK] >= 3600) format(dop_info, 26, "AFK {00cc99}(√°√Æ√´√•√• √∑√†√±√†)");
				else format(dop_info, 40, "AFK {00cc99}(%s)", TimeConverter(pTemp[i][pAFK]));
			}
            if(pData[i][pMuteTime] > 0) format(dop_info, 40, "√Å√´√Æ√™√®√∞√Æ√¢√™√† √∑√†√≤√† "CERROR"(%s)", TimeConverter(pData[i][pMuteTime]));
            else if(pData[i][pPrisonTime] > 0) format(dop_info, 40, "√í√æ√∞√º√¨√† "CERROR"(%s)", TimeConverter(pData[i][pPrisonTime]));
            else if(pData[i][pJailTime] > 0) format(dop_info, 40, "√í√æ√∞√º√¨√† "CERROR"(%s)", TimeConverter(pData[i][pJailTime]));
            format(string, 1500, "%s%d. %s[%d]\t%d\t%d √∞√†√≠√£. %s\t{cccc66}%s\n", string, countmember + 1, GetName(i), i, pData[i][pLevel], pData[i][pRank], new_rank_name[pData[i][pMember] - 1][pData[i][pRank] - 1], dop_info);
            countmember ++;
        }
        if(countmember == 0) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{ff9945}√é√∏√®√°√™√†", ""CWHITE"√é√≠√´√†√©√≠ √®√£√∞√Æ√™√® √Ω√≤√Æ√© √Æ√∞√£√†√≠√®√ß√†√∂√®√® (√Ø√Æ√§√∞√†√ß√§√•√´√•√≠√®√ø) √≠√• √≠√†√©√§√•√≠√ª", "Cerrar", "");
        SetPVarInt(playerid, "team_number", teamnumber);
        if(teamnumber == 26 || teamnumber == 5 || teamnumber == 6 || 
        teamnumber == 11 || teamnumber == 12 || teamnumber == 13 || teamnumber == 14 || teamnumber == 15 || teamnumber == 16 || teamnumber == 17 || teamnumber == 18) 
            format(dial_title, 55, ""CCYAN"√ó√´√•√≠√ª √Æ√∞√£√†√≠√®√ß√†√∂√®√® √Æ√≠√´√†√©√≠ {bfbb41}(%d √∑√•√´.)", countmember);
        else format(dial_title, 55, ""CCYAN"√ó√´√•√≠√ª √Ø√Æ√§√∞√†√ß√§√•√´√•√≠√®√ø √Æ√≠√´√†√©√≠ {bfbb41}(%d √∑√•√´.)", countmember);
        SPD(playerid, 8417, DIALOG_STYLE_TABLIST_HEADERS, dial_title, string, "√Ñ√•√≤√†√´√®", "Cerrar");
    }
    case 2296: {
        if(!response) return 1;
        new teamnumber;
        switch(listitem) {
        	case 0: teamnumber = 26;
            case 1: teamnumber = 1;
            case 2: teamnumber = 10;
            case 3: teamnumber = 21;
            case 4: teamnumber = 2;
        }
        mysql_format(mysql_Handle, string, 164, "SELECT `Name`, `pRank`, `id`, `pLevel` FROM `accounts` WHERE `pMember` = %d", teamnumber);
        return mysql_tquery(mysql_Handle, string, "Fraction_CallBack_pp", "ddd", playerid, 1, teamnumber);
    }
    case 2297: {
        if(!response) return 1;
        new teamnumber;
        switch(listitem) {
        	case 0: teamnumber = 26;
            case 1: teamnumber = 4;
            case 2: teamnumber = 28;
            case 3: teamnumber = 29;
        }
        mysql_format(mysql_Handle, string, 164, "SELECT `Name`, `pRank`, `id`, `pLevel` FROM `accounts` WHERE `pMember` = %d", teamnumber);
        return mysql_tquery(mysql_Handle, string, "Fraction_CallBack_pp", "ddd", playerid, 1, teamnumber);
    }
    case 2291: {
        if(!response) return 1;
        new teamnumber;
        switch(listitem) {
        	case 0: teamnumber = 26;
            case 1: teamnumber = 19;
            case 2: teamnumber = 20;
            case 3: teamnumber = 27;
        }
        mysql_format(mysql_Handle, string, 164, "SELECT `Name`, `pRank`, `id`, `pLevel` FROM `accounts` WHERE `pMember` = %d", teamnumber);
        return mysql_tquery(mysql_Handle, string, "Fraction_CallBack_pp", "ddd", playerid, 1, teamnumber);
    }
    case 22188: {
        if(!response) return 1;
        new teamnumber;
        switch(listitem) {
            case 0: teamnumber = 26;
            case 1: teamnumber = 7;
            case 2: teamnumber = 8;
            case 3: teamnumber = 9;
        }
        mysql_format(mysql_Handle, string, 164, "SELECT `Name`, `pRank`, `id`, `pLevel` FROM `accounts` WHERE `pMember` = %d", teamnumber);
        return mysql_tquery(mysql_Handle, string, "Fraction_CallBack_pp", "ddd", playerid, 1, teamnumber);
    }
    case 1118: {
		if(!response) return 1;
		if(!listitem) SPD(playerid, 1119, DIALOG_STYLE_INPUT, "√à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ √§√Æ√¨√•", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¨√•√∞ √§√Æ√¨√†, √Æ √™√Æ√≤√Æ√∞√Æ√¨ √µ√Æ√≤√®√≤√• √Ø√Æ√´√≥√∑√®√≤√º √®√≠√¥√Æ√∞√¨√†√∂√®√æ:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
		else SPD(playerid, 1121, DIALOG_STYLE_INPUT, "√à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ √°√®√ß√≠√•√±√•", ""CWHITE"√Ç√¢√•√§√®√≤√• La cantidad de dinero, √Æ √™√Æ√≤√Æ√∞√Æ√¨ √µ√Æ√≤√®√≤√• √Ø√Æ√´√≥√∑√®√≤√º √®√≠√¥√Æ√∞√¨√†√∂√®√æ:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
	}
	case 1119: {
		if(!response) return 1;
		if(BizEnter{playerid} == 255) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [015]");
		if(!strlen(inputtext)) return SPD(playerid, 1119, DIALOG_STYLE_INPUT, "√à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ √§√Æ√¨√•", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¨√•√∞ √§√Æ√¨√†, √Æ √™√Æ√≤√Æ√∞√Æ√¨ √µ√Æ√≤√®√≤√• √Ø√Æ√´√≥√∑√®√≤√º √®√≠√¥√Æ√∞√¨√†√∂√®√æ:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return SPD(playerid, 1119, DIALOG_STYLE_INPUT, "√à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ √§√Æ√¨√•", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¨√•√∞ √§√Æ√¨√†, √Æ √™√Æ√≤√Æ√∞√Æ√¨ √µ√Æ√≤√®√≤√• √Ø√Æ√´√≥√∑√®√≤√º √®√≠√¥√Æ√∞√¨√†√∂√®√æ:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
			}
		}
		new id = strval(inputtext);
		if(id == 0 || id > TOTAL_HOUSE) {
			SPD(playerid, 1119, DIALOG_STYLE_INPUT, "√à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ √§√Æ√¨√•", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¨√•√∞ √§√Æ√¨√†, √Æ √™√Æ√≤√Æ√∞√Æ√¨ √µ√Æ√≤√®√≤√• √Ø√Æ√´√≥√∑√®√≤√º √®√≠√¥√Æ√∞√¨√†√∂√®√æ:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
			return SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§¬∏√≠ √≠√•√™√Æ√∞√∞√•√™√≤√≠√ª√© √≠√Æ√¨√•√∞ √§√Æ√¨√†");
		}
		if(pData[playerid][pCash] < 400) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √§√•√≠√•√£ √§√´√ø √Æ√Ø√´√†√≤√ª √≥√±√´√≥√£√®");
		Hook_GivePlayerMoney(playerid, -400);
		GameTextForPlayer(playerid, "~r~-400$", 3000, 1);

		BizInfo[BizEnter{playerid}][bPribil] += 400;
		BizInfo[BizEnter{playerid}][bBank] += 400;
		if(BizInfo[BizEnter{playerid}][bBank] > 10000000) BizInfo[BizEnter{playerid}][bBank] = 10000000;
		UpdateBusinessData(BizEnter{playerid}, "bPribil",BizInfo[BizEnter{playerid}][bPribil]);
		UpdateBusinessData(BizEnter{playerid}, "bBank",BizInfo[BizEnter{playerid}][bBank]);

		new fmt[230];
		SetPVarInt(playerid, "info_prop_id", id);
		if(HouseInfo[id][hOwned]) format(fmt, sizeof(fmt), ""CWHITE"S√≠√≠√≠√ª√• √Æ √§√Æ√¨√• ¬π%d:\n\n√Ñ√Æ√¨ √ß√†√≠√ø√≤. √Ç√´√†√§√•√´√•√∂: "CMAIN"%s\n"CWHITE"√ä√´√†√±√±: "CMAIN"%s\n"CWHITE"√ñ√•√≠√†: "CMAIN"%d$", id, HouseInfo[id][hOwner], classhome_names[HouseInfo[id][hKlass]], HouseInfo[id][hValue]);
		else format(fmt, sizeof(fmt), ""CWHITE"S√≠√≠√≠√ª√• √Æ √§√Æ√¨√• ¬π%d:\n\n√Ñ√Æ√¨ √±√¢√Æ√°√Æ√§√•√≠\n√ä√´√†√±√±: "CMAIN"%s\n"CWHITE"√ñ√•√≠√†: "CMAIN"%d$", id, classhome_names[HouseInfo[id][hKlass]], HouseInfo[id][hValue]);
		SPD(playerid, 1120, DIALOG_STYLE_MSGBOX, "√à√≠√¥√Æ√∞√¨√†√∂√®√ø", fmt, "√î√Æ√≤√Æ", "Cerrar");
	}
	case 1120: {
		if(!response) return DeletePVar(playerid, "info_prop_id");
		new houseid = GetPVarInt(playerid, "info_prop_id");
		DeletePVar(playerid, "info_prop_id");
		prop_see[playerid] = true;
		prop_int[playerid] = GetPlayerInterior(playerid);
		prop_vw[playerid] = GetPlayerVirtualWorld(playerid);
		GetPlayerPos(playerid, prop_posX[playerid], prop_posY[playerid], prop_posZ[playerid]);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 1);
		SetPlayerPos(playerid, HouseInfo[houseid][hEnter][0] + 17.5, HouseInfo[houseid][hEnter][1] + 17.5, HouseInfo[houseid][hEnter][2] + 40);
		SetPlayerCameraPos(playerid, HouseInfo[houseid][hEnter][0] + 17.5, HouseInfo[houseid][hEnter][1] + 17.5, HouseInfo[houseid][hEnter][2] + 30);
		SetPlayerCameraLookAt(playerid, HouseInfo[houseid][hEnter][0], HouseInfo[houseid][hEnter][1], HouseInfo[houseid][hEnter][2]);
		SCM(playerid, -1, "√ç√†√¶√¨√®√≤√• {40bf80}√´√•√¢√ª√© ALT "CWHITE"√∑√≤√Æ√°√ª √¢√ª√©√≤√® √®√ß √∞√•√¶√®√¨√† √Ø√∞√Æ√±√¨√†√≤√∞√®√¢√†√≠√®√ø");
		TogglePlayerControllable(playerid, 0);
	}
	case 1121: {
		if(!response) return 1;
		if(BizEnter{playerid} == 255) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [015]");
		if(!strlen(inputtext)) return SPD(playerid, 1121, DIALOG_STYLE_INPUT, "√à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ √°√®√ß√≠√•√±√•", ""CWHITE"√Ç√¢√•√§√®√≤√• La cantidad de dinero, √Æ √™√Æ√≤√Æ√∞√Æ√¨ √µ√Æ√≤√®√≤√• √Ø√Æ√´√≥√∑√®√≤√º √®√≠√¥√Æ√∞√¨√†√∂√®√æ:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return SPD(playerid, 1121, DIALOG_STYLE_INPUT, "√à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ √°√®√ß√≠√•√±√•", ""CWHITE"√Ç√¢√•√§√®√≤√• La cantidad de dinero, √Æ √™√Æ√≤√Æ√∞√Æ√¨ √µ√Æ√≤√®√≤√• √Ø√Æ√´√≥√∑√®√≤√º √®√≠√¥√Æ√∞√¨√†√∂√®√æ:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
			}
		}
		new id = strval(inputtext);
		if(id == 0 || id > BIZES) {
			SPD(playerid, 1121, DIALOG_STYLE_INPUT, "√à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ √°√®√ß√≠√•√±√•", ""CWHITE"√Ç√¢√•√§√®√≤√• La cantidad de dinero, √Æ √™√Æ√≤√Æ√∞√Æ√¨ √µ√Æ√≤√®√≤√• √Ø√Æ√´√≥√∑√®√≤√º √®√≠√¥√Æ√∞√¨√†√∂√®√æ:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
			return SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§¬∏√≠ √≠√•√™√Æ√∞√∞√•√™√≤√≠√ª√© La cantidad de dinero");
		}
		if(pData[playerid][pCash] < 400) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √§√•√≠√•√£ √§√´√ø √Æ√Ø√´√†√≤√ª √≥√±√´√≥√£√®");
		Hook_GivePlayerMoney(playerid, -400);
		GameTextForPlayer(playerid, "~r~-400$", 3000, 1);

		BizInfo[BizEnter{playerid}][bPribil] += 400;
		BizInfo[BizEnter{playerid}][bBank] += 400;
		if(BizInfo[BizEnter{playerid}][bBank] > 10000000) BizInfo[BizEnter{playerid}][bBank] = 10000000;
		UpdateBusinessData(BizEnter{playerid}, "bPribil",BizInfo[BizEnter{playerid}][bPribil]);
		UpdateBusinessData(BizEnter{playerid}, "bBank",BizInfo[BizEnter{playerid}][bBank]);

		new fmt[230];
		SetPVarInt(playerid, "info_prop_id", id);
		if(!strcmp(BizInfo[id][bOwner], "None", true)) format(fmt, sizeof(fmt), ""CWHITE"S√≠√≠√≠√ª√• √Æ √°√®√ß√≠√•√±√• ¬π%d:\n\n√ç√†√ß√¢√†√≠√®√•: "CMAIN"%s\n"CWHITE"√Å√®√ß√≠√•√± √±√¢√Æ√°√Æ√§√•√≠\n"CWHITE"√ñ√•√≠√†: "CMAIN"%d$", id, BizInfo[id][bName], BizInfo[id][bPrice]);
		else format(fmt, sizeof(fmt), ""CWHITE"S√≠√≠√≠√ª√• √Æ √°√®√ß√≠√•√±√• ¬π%d:\n\n√ç√†√ß√¢√†√≠√®√•: "CMAIN"%s\n"CWHITE"√Å√®√ß√≠√•√± √ß√†√≠√ø√≤. √Ç√´√†√§√•√´√•√∂: "CMAIN"%s\n"CWHITE"√ñ√•√≠√†: "CMAIN"%d$", id, BizInfo[id][bName], BizInfo[id][bOwner], BizInfo[id][bPrice]);
		SPD(playerid, 1122, DIALOG_STYLE_MSGBOX, "√à√≠√¥√Æ√∞√¨√†√∂√®√ø", fmt, "√î√Æ√≤√Æ", "Cerrar");
	}
	case 1122: {
		if(!response) return DeletePVar(playerid, "info_prop_id");
		new bizid = GetPVarInt(playerid, "info_prop_id");
		DeletePVar(playerid, "info_prop_id");
		prop_see[playerid] = true;
		prop_int[playerid] = GetPlayerInterior(playerid);
		prop_vw[playerid] = GetPlayerVirtualWorld(playerid);
		GetPlayerPos(playerid, prop_posX[playerid], prop_posY[playerid], prop_posZ[playerid]);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 1);
		SetPlayerPos(playerid, BizInfo[bizid][EntBizVh][0] + 10, BizInfo[bizid][EntBizVh][1] + 10, BizInfo[bizid][EntBizVh][2] + 20);
		SetPlayerCameraPos(playerid, BizInfo[bizid][EntBizVh][0] + 10, BizInfo[bizid][EntBizVh][1] + 10, BizInfo[bizid][EntBizVh][2] + 10);
		SetPlayerCameraLookAt(playerid, BizInfo[bizid][EntBizVh][0], BizInfo[bizid][EntBizVh][1], BizInfo[bizid][EntBizVh][2]);
		SCM(playerid, -1, "√ç√†√¶√¨√®√≤√• {40bf80}√´√•√¢√ª√© ALT "CWHITE"√∑√≤√Æ√°√ª √¢√ª√©√≤√® √®√ß √∞√•√¶√®√¨√† √Ø√∞√Æ√±√¨√†√≤√∞√®√¢√†√≠√®√ø");
		TogglePlayerControllable(playerid, 0);
	}
	case 7626: {
			if(!response) return 1;
			switch(listitem) {
				case 0: SPD(playerid, 7627, DIALOG_STYLE_LIST, "{FFCD00}Espacio libre",
							"[1] Complejo privado\n\
							{99bbff}[2] MERCADO POS-PANTOS\n\
							"CWHITE"[3] Tyr Kos-Anthosa(no sabemos)\n\
							[4] Kyryo Pan-Hiero(no sabemos)\n\
							[5] Tyr Vas-Venturasa(no sabemos)\n\
							[6] Aeropuerto - Los santos\n\
							[7] Aeropuerto - San fierro\n\
							[8] Aeropuerto - Las venturas\n\
							{d9b38c}[9] El centro de desnutrici√≥n de Los santos\n\
							{d9b38c}[10] Pobre centro de San fierro\n\
							{d9b38c}[11] Centro nutricional de Las venturas\n\
							"CWHITE"[12] (no traducio xd)\n\
							[13] Estaci√≥n autom√°tica Boss-Banthos(xdddddddd)\n\
							[14] (no traduce)\n\
							[15] (no traduce)x2\n\
							[16] √í√®√∞(no traduce) x3\n\
							[17] Concesionaria\n\
							[18] Viajero militar\n\
							[19] SIRS SAN-GARINO(ni idea)\n\
							[20] El nivel del San fierro\n\
							[21] Balon m√≥vil\n\
							[22] Stadion Ros-Anthosa(no sabemos)\n\
							[23] Tadion Pan-Rieero",
						"Atras", "Siguiente");
				case 1: SPD(playerid, 7629, DIALOG_STYLE_LIST, "{FFCD00}Organizaciones sostenibles",
							"[1] Departamento de Los Santos\n\
							[2] Departamento de San fierro\n\
							[3] Departamento de Las Venturas\n\
							[4] Oficina del FBI\n\
							[5] Columna de Los santos\n\
							[6] Colinitza Pan-Riero\n\
							[7] Columbia Vas-Venturasa\n\
							[8] Servicio seco\n\
							[9] Fuerzas aire-aire\n\
							[10] Orden de la flota de la Armada\n\
							[11] √áS√≠√≠√®√• √Ä√§√¨√®√≠√®√±√≤√∞√†√∂√®√® √è√∞√•√ß√®√§√•√≠√≤√†\n\
							[12] √ñ√•√≠√≤√∞ √ë√å√à", 
						"√é√≤√¨√•√≤√®√≤√º", "Siguiente");
				case 2: SPD(playerid, 7630, DIALOG_STYLE_LIST, "{FFCD00}√Å√†√ß√ª √°√†√≠√§ √® √¨√†√¥√®√©", "[1] The Ballas\n[2] Grove Street\n[3] The Rifa\n[4] Varrios Los Aztecas\n[5] Los Santos Vagos\n{cccc66}[6] La Cosa Nostra\n{cccc66}[7] ruso\n{cccc66}[8] Yakuza", "√é√≤√¨√•√≤√®√≤√º", "Siguiente");
				case 3: SPD(playerid, 8601, DIALOG_STYLE_LIST, "{FFCD00}√Å√†√≠√™√®", "[1] √ñ√•√≠√≤√∞√†√´√º√≠√ª√© √°√†√≠√™\n[2] √Å√†√≠√™ √ã√Æ√±-√ë√†√≠√≤√Æ√±√†\n[3] √Å√†√≠√™ √ë√†√≠-√î√®√•√∞√∞√Æ\n[4] √Å√†√≠√™ √ã√†√±-√Ç√•√≠√≤√≥√∞√†√±√†", "√é√≤√¨√•√≤√®√≤√º", "Siguiente");
				case 4: SPD(playerid, 8609, DIALOG_STYLE_LIST, "{FFCD00}√é√≤√•√´√®", "[1] Central Hotel LS", "√é√≤√¨√•√≤√®√≤√º", "Siguiente");
				case 5: SPD(playerid, 8603, DIALOG_STYLE_LIST, "{FFCD00}√ê√†√ß√¢√´√•√∑√•√≠√®√ø", "[1] √ä√†√ß√®√≠√Æ ¬´4 √§√∞√†√™√Æ√≠√†¬ª\n[2] √ê√•√£√®√±√≤√∞√†√∂√®√ø √≠√† √®√£√∞√≥ {84223B}¬´√ä√∞√Æ√¢√†√¢√Æ√• √™√Æ√´√º√∂√Æ¬ª", "√é√≤√¨√•√≤√®√≤√º", "Siguiente");
				case 6: SPD(playerid, 7631, DIALOG_STYLE_LIST, "{FFCD00}√è√Æ √∞√†√°√Æ√≤√•", "[1] √ë√°√Æ√∞√™√† √†√¢√≤√Æ√¨√Æ√°√®√´√•√©\n[2] √á√†√¢√Æ√§\n[3] √É√∞√≥√ß√∑√®√™√® (√±√™√´√†√§)\n[4] √ò√†√µ√≤√†\n[5] √ã√•√±√Æ√Ø√®√´√™√†\n"CPALEGREEN"[6] √Ä√∞√•√≠S√≠ √†√¢√≤√Æ√°√≥√±√Æ√¢ √® √≤√†√™√±√®\n"CPALEGREEN"[7] √å√•√µ√†√≠√®√™√®\n"CPALEGREEN"[8] √ê√†√ß√¢√Æ√ß√∑√®√™√® √Ø√∞√Æ√§√≥√™√≤√Æ√¢", "√é√≤√¨√•√≤√®√≤√º", "Siguiente");
				case 7: show_gps_bizes(playerid, 1, 50);
				case 8: {
					string[0] = EOS;
					for(new b = 1; b != FILLING_TOTAL+1; b++) 
						format(string,1100,"%s[¬π%d] %s\n",string,b,Filling[b][ffName]);

					SPD(playerid,812,DIALOG_STYLE_LIST,"{FFCD00}√á√†√Ø√∞√†√¢√Æ√∑√≠√ª√• √±√≤√†√≠√∂√®√®",string,"√é√≤√¨√•√≤√®√≤√º","Siguiente");
				}
				case 9: SPD(playerid, 7628, DIALOG_STYLE_LIST, "{FFCD00}√Ñ√Æ√Ø√Æ√´√≠√®√≤√•√´√º√≠√ª√• √¨√•√±√≤√†",
							"[1] √í√æ√∞√º√¨√†\n\
							{99bbff}[2] √í√æ√≠√®√≠√£-√†√≤√•√´√º√• {ff5400}(Perfomance Tuning)\n\
							"CWHITE"[3] √Ä√¢√≤√Æ√±√†√´√Æ√≠ √ã√Æ√±-√ë√†√≠√≤√Æ√±√† (√ù√™√Æ√≠√Æ√¨ √™√´√†√±√±)\n\
							[4] √Ä√¢√≤√Æ√±√†√´√Æ√≠ √ë√†√≠-√î√®√•√∞√∞√Æ (√ë√∞√•√§√≠√®√© √™√´√†√±√±)\n\
							[5] √Ä√¢√≤√Æ√±√†√´√Æ√≠ √ã√†√±-√Ç√•√≠√≤√≥√∞√†√±√† (√Ç√ª√±√Æ√™√®√© √™√´√†√±√±)\n\
							{aa80ff}[6] √Ä√¢√≤√Æ√±√†√´√Æ√≠ √Ω√™√±√™√´√æ√ß√®√¢√≠√ª√µ √†√¢√≤√Æ (√è√∞√•√¨√®√≥√¨ √™√´√†√±√±)\n\
							"CWHITE"[7] √å√Æ√≤√Æ√±√†√´√Æ√≠\n\
							"CPALEGREEN"[8] √è√∞√Æ√™√†√≤ √†√¢√≤√Æ (√Ü√Ñ √ã√ë)\n\
							"CPALEGREEN"[9] √è√∞√Æ√™√†√≤ √†√¢√≤√Æ (√°√Æ√´√º√≠√®√∂√† √ã√ë)\n\
							"CPALEGREEN"[10] √è√∞√Æ√™√†√≤ √†√¢√≤√Æ (√Ü√Ñ √ë√î)\n\
							"CPALEGREEN"[11] √è√∞√Æ√™√†√≤ √†√¢√≤√Æ (√°√Æ√´√º√≠√®√∂√† √ë√î)\n\
							"CPALEGREEN"[12] √è√∞√Æ√™√†√≤ √†√¢√≤√Æ (√Ü√Ñ √ã√Ç)\n\
							"CPALEGREEN"[13] √è√∞√Æ√™√†√≤ √†√¢√≤√Æ (√°√Æ√´√º√≠√®√∂√† √ã√Ç)\n\
							"CPALEGREEN"[14] √è√∞√Æ√™√†√≤ √†√¢√≤√Æ (√†√¢√≤√Æ√±√≤√†√≠√∂√®√ø √ã√ë)\n\
							"CWHITE"[15] √É√†√∞√†√¶√® √ë√î\n\
							[16] √è√•√∞√•√£√Æ√¢√Æ√∞√≠√†√ø √§√´√ø √¨√†√¥√®√©",
						"√é√≤√¨√•√≤√®√≤√º", "Siguiente");
				case 10: {
					new max_distance = 100000, id_fill = -1;
					for(new i = 1; i != FILLING_TOTAL + 1; i ++) {
						new here_distance = (!IsPlayerInAnyVehicle(playerid)) ? floatround(GetPlayerDistanceFromPoint(playerid, Filling[i][fPos][0], Filling[i][fPos][1], Filling[i][fPos][2])) : floatround(GetVehicleDistanceFromPoint(GetPlayerVehicleID(playerid), Filling[i][fPos][0], Filling[i][fPos][1], Filling[i][fPos][2]));
						if(here_distance < max_distance) {
							id_fill = i;
							max_distance = here_distance;
						}
					}
					if(max_distance == -1 || id_fill == -1) return 1;
					EnableGPS(playerid, Filling[id_fill][fPos][0], Filling[id_fill][fPos][1], Filling[id_fill][fPos][2]);
					SCMF(playerid, COLOR_YELLOW, "√Å√´√®√¶√• √¢√±√•√µ √™ √Ç√†√¨ √≠√†√µ√Æ√§√®√≤√±√ø √Ä√á√ë ¬π%i \"%s\" (√∞√†√±√±√≤√Æ√ø√≠√®√• %d √¨)", id_fill, Filling[id_fill][ffName], max_distance);
					SCM(playerid, COLOR_YELLOW, "√é√≠√† √Æ√≤√¨√•√∑√•√≠√† √≥ √Ç√†√± √≠√† GPS");
				}
				case 11: {
					new max_distance = 100000, id_atm = -1;
					for(new i = 0x0; i != sizeof(atm_position); i ++) {
						new here_distance = (!IsPlayerInAnyVehicle(playerid)) ? floatround(GetPlayerDistanceFromPoint(playerid, atm_position[i][0], atm_position[i][1], atm_position[i][2])) : floatround(GetVehicleDistanceFromPoint(GetPlayerVehicleID(playerid), atm_position[i][0], atm_position[i][1], atm_position[i][2]));
						if(here_distance < max_distance) {
							id_atm = i;
							max_distance = here_distance;
						}
					}
					if(max_distance == -1 || id_atm == -1) return 1;
					EnableGPS(playerid, atm_position[id_atm][0], atm_position[id_atm][1], atm_position[id_atm][2]-0.5);
					SCMF(playerid, COLOR_YELLOW, "√Å√´√®√¶√†√©√∏√®√© √°√†√≠√™√Æ√¨√†√≤ √≠√†√µ√Æ√§√®√≤√±√ø √¢ {80CCFF}%d √¨ "CYELLOW"√Æ√≤ √Ç√†√±", max_distance);
					SCM(playerid, COLOR_YELLOW, "√å√•√±√≤√Æ√Ø√Æ√´√Æ√¶√•√≠√®√• √Æ√≤√¨√•√∑√•√≠√Æ √≥ √Ç√†√± √≠√† GPS");
				}
				case 12: {
					new max_distance = 100000, id_food = -1;
					for(new i = 1; i != BIZES + 1; i ++) {
						if(BizInfo[i][bTypeBiz] != 3) continue;
						new here_distance = (!IsPlayerInAnyVehicle(playerid)) ? floatround(GetPlayerDistanceFromPoint(playerid, BizInfo[i][EnterBiz][0], BizInfo[i][EnterBiz][1], BizInfo[i][EnterBiz][2])) : floatround(GetVehicleDistanceFromPoint(GetPlayerVehicleID(playerid), BizInfo[i][EnterBiz][0], BizInfo[i][EnterBiz][1], BizInfo[i][EnterBiz][2]));
						if(here_distance < max_distance) {
							id_food = i;
							max_distance = here_distance;
						}
					}
					if(max_distance == -1 || id_food == -1) return 1;
					EnableGPS(playerid, BizInfo[id_food][EnterBiz][0], BizInfo[id_food][EnterBiz][1], BizInfo[id_food][EnterBiz][2]);
					SCMF(playerid, COLOR_YELLOW, "√Å√´√®√¶√• √¢√±√•√£√Æ √¨√Æ√¶√≠√Æ √Ø√Æ√•√±√≤√º √¢ √°√®√ß√≠√•√±√• ¬π%i \"%s\" (√∞√†√±√±√≤√Æ√ø√≠√®√• %d √¨)", id_food, BizInfo[id_food][bName], max_distance);
					SCM(playerid, COLOR_YELLOW, "√é√≠ √Æ√≤√¨√•√∑√•√≠ √≥ √Ç√†√± √≠√† GPS");
				}
			}
		}
	case 812: {
		if(!response) return callcmd::gps(playerid);
		new p_listitem = -1;
		for(new b = 1; b != FILLING_TOTAL+1; b++) {
			p_listitem ++;
			if(p_listitem == listitem) {
				EnableGPS(playerid, Filling[b][fPos][0], Filling[b][fPos][1], Filling[b][fPos][2]);
				SCM(playerid, COLOR_YELLOW, "√Ä√á√ë √Æ√≤√¨√•√∑√•√≠√† √≥ √Ç√†√± √≠√† GPS");
				break;
			}
		}
	}
	case 8609: {
		if(!response) return callcmd::gps(playerid);
		switch(listitem) {
			case 0: EnableGPS(playerid, 1310.109985, -1370.439941, 13.575475);
		}
		SCM(playerid, COLOR_YELLOW, "√å√•√±√≤√Æ √Æ√≤√¨√•√∑√•√≠√Æ √≥ √Ç√†√± √≠√† GPS");
	}
	case 399: callcmd::gps(playerid);
	case 8601: {
			if(!response) return callcmd::gps(playerid);
			switch(listitem) {
				case 0: EnableGPS(playerid, 1457.3875,-1028.1899,23.8281);
				case 1: EnableGPS(playerid, 1419.3478,-1623.7922,13.5469);
				case 2: EnableGPS(playerid, -1500.0441,920.0583,7.1875);
				case 3: EnableGPS(playerid, 2174.9663,2291.3005,10.8203);
			}
			SCM(playerid, COLOR_YELLOW, "√Å√†√≠√™ √Æ√≤√¨√•√∑√•√≠ √≥ √Ç√†√± √≠√† GPS");
		}
	case 8603: {
			if(!response) return callcmd::gps(playerid);
			switch(listitem)
			{
				case 0: EnableGPS(playerid, 2035.4930,1004.0303,10.8203);
				case 1: EnableGPS(playerid, 2688.6619,-1695.6516,9.9198);
			}
			SCM(playerid, COLOR_YELLOW, "√å√•√±√≤√Æ √Æ√≤√¨√•√∑√•√≠√Æ √≥ √Ç√†√± √≠√† GPS");
		}
	case 7631: {
			if(!response) return callcmd::gps(playerid);
			switch(listitem) {
				case 0: EnableGPS(playerid, 2153.5920,-2295.6228,13.4134);
				case 1: EnableGPS(playerid, -88.0388,-307.7446,1.4297);
				case 2: EnableGPS(playerid, 2134.6272,-2277.1389,20.6719);
				case 3: EnableGPS(playerid, -777.3646,-1856.5082,11.8649);
				case 4: EnableGPS(playerid, -2010.0453,-2424.5784,30.6250);
				case 5: EnableGPS(playerid, 1104.8073,-1749.2367,13.5683);
				case 6: EnableGPS(playerid, 1273.5073,-1273.2495,13.5359);
				case 7: EnableGPS(playerid, -6.7320,-352.2810,5.4297);
			}
			SCM(playerid, COLOR_YELLOW, "√å√•√±√≤√Æ √Æ√≤√¨√•√∑√•√≠√Æ √≥ √Ç√†√± √≠√† GPS");
		}
	case 7216: {
			if(!response) return 1;
			string[0] = EOS;
			mysql_format(mysql_Handle, string, 128, "SELECT `pRubDonate`, `pRub` FROM `accounts` WHERE `Name` = '%s'", pData[playerid][pName]);
			return mysql_tquery(mysql_Handle, string, "check_payments", "d",playerid);
		}
	case 1844: {
		if(!response) return 1;
		if(!strlen(inputtext)) return SPD(playerid, 1844, DIALOG_STYLE_INPUT, "{FFCD00}√è√Æ√™√≥√Ø√™√† √¨√•√≤√†√´√´√†", ""CWHITE"√ë√™√Æ√´√º√™√Æ √™√®√´√Æ√£√∞√†√¨√¨ √¨√•√≤√†√´√´√† Quieres √™√≥√Ø√®√≤√º?\n{99bbff}1 √™√£ √±√≤√Æ√®√≤ 15$", "√Ç√¢√•√±√≤√®", "Cerrar");
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return SPD(playerid, 1844, DIALOG_STYLE_INPUT, "{FFCD00}√è√Æ√™√≥√Ø√™√† √¨√•√≤√†√´√´√†", ""CWHITE"√ë√™√Æ√´√º√™√Æ √™√®√´√Æ√£√∞√†√¨√¨ √¨√•√≤√†√´√´√† Quieres √™√≥√Ø√®√≤√º?\n{99bbff}1 √™√£ √±√≤√Æ√®√≤ 15$", "√Ç√¢√•√±√≤√®", "Cerrar");
			}
		}
		if(strval(inputtext) < 1) return SCM(playerid, COLOR_GREY, "√Ç√¢√•√§√•√≠√Æ √≠√•√¢√•√∞√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √™√®√´√Æ√£√∞√†√¨√¨");
		if(!pData[playerid][p_premium] && pData[playerid][pMetal] >= 20) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √¨√†√™√±√®√¨√†√´√º√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √¨√•√≤√†√´√´√† √± √±√Æ√°√Æ√©");
		if(pData[playerid][p_premium] && pData[playerid][pMetal] >= 40) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √¨√†√™√±√®√¨√†√´√º√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √¨√•√≤√†√´√´√† √± √±√Æ√°√Æ√©");
		if(!pData[playerid][p_premium] && pData[playerid][pMetal] + strval(inputtext) > 20) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √±√¨√Æ√¶√•√≤√• √≥√≠√•√±√≤√® √± √±√Æ√°√Æ√© √°√Æ√´√•√• "CLITEBLUE"20 √™√£ "CLIGHTGREY"√¨√•√≤√†√´√´√†");
		if(pData[playerid][p_premium] && pData[playerid][pMetal] + strval(inputtext) > 40) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √±√¨√Æ√¶√•√≤√• √≥√≠√•√±√≤√® √± √±√Æ√°√Æ√© √°√Æ√´√•√• "CLITEBLUE"40 √™√£ "CLIGHTGREY"√¨√•√≤√†√´√´√†");
		new met_query[90], price_met = strval(inputtext) * 15;
		new gmtext[30], minestore_met = storage_mine[StLowReady] / 2;
		if(minestore_met < strval(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "√ç√† √±√™√´√†√§√• No √±√≤√Æ√´√º√™√Æ √¨√•√≤√†√´√´√†");
		if(pData[playerid][pCash] < price_met) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Ø√Æ√™√≥√Ø√™√® √≤√†√™√Æ√£√Æ √™√Æ√´√®√∑√•√±√≤√¢√† √¨√•√≤√†√´√´√†");
		Hook_GivePlayerMoney(playerid, -price_met); PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
		pData[playerid][pMetal] += strval(inputtext);
		storage_mine[StLowReady] -= strval(inputtext) * 2;
		UpdatePlayerData(playerid, "pMats", pData[playerid][pMetal]);
		mysql_format(mysql_Handle, met_query, 90, "UPDATE `storages` SET `minelowready` = %d", storage_mine[StLowReady]);
		mysql_tquery(mysql_Handle, met_query); UpdateStorages(2);
		format(gmtext, 30, "~r~-%d$", price_met);
		GameTextForPlayer(playerid, gmtext, 3000, 1);
		SCMF(playerid, COLOR_MAIN, "√Ç√ª √≥√±√Ø√•√∏√≠√Æ √Ø√∞√®√Æ√°√∞√•√´√® %d √™√£ √¨√•√≤√†√´√´√† √ß√† "CORANGE"%d$", strval(inputtext), price_met);
	}

	case 690: {
		if(!response) return 1;
		show_help_info(playerid, listitem);
	}
	case 7900: {
		if(response) callcmd::help(playerid);
		else show_help_info(playerid, 1);
	}
	case 7901: {
		if(response) callcmd::help(playerid);
		else show_help_info(playerid, 2);
	}
	case 7902: {
		if(response) callcmd::help(playerid);
		else show_help_info(playerid, 3);
	}
	case 7903: {
		if(response) callcmd::help(playerid);
		else show_help_info(playerid, 4);
	}
	case 7904: {
		if(response) callcmd::help(playerid);
		else show_help_info(playerid, 5);
	}
	case 7905: {
		if(response) callcmd::help(playerid);
		else show_help_info(playerid, 6);
	}
	case 7906: {
		if(response) callcmd::help(playerid);
		else show_help_info(playerid, 7);
	}
	case 7907: {
		if(response) callcmd::help(playerid);
		else show_help_info(playerid, 8);
	}
	case 7908: {
		if(response) callcmd::help(playerid);
		else show_help_info(playerid, 9);
	}
	case 7909: {
		if(response) callcmd::help(playerid);
		else show_help_info(playerid, 10);
	}
	case 7910: {
		if(response) callcmd::help(playerid);
		else show_help_info(playerid, 11);
	}
	case 7911: {
		if(response) callcmd::help(playerid);
		else show_help_info(playerid, 12);
	}
	case 7912: {
		if(response) callcmd::help(playerid);
		else show_help_info(playerid, 13);
	}
	case 7913: callcmd::help(playerid);

	case 24623: {
			if(!response) return 1;
			switch(listitem) {
				case 0: {
					if(GetPVarInt(playerid, "AdminMessages")) {
						SetPVarInt(playerid, "AdminMessages", false);
						SCM(playerid, COLOR_MAIN, "√Ä√§√¨√®√≠-√±√Æ√Æ√°√π√•√≠√®√ø √¢ √∑√†√≤√• √¢√™√´√æ√∑√•√≠√ª");
					}
					else {
						SetPVarInt(playerid, "AdminMessages", true);
						SCM(playerid, COLOR_ERROR, "√Ä√§√¨√®√≠-√±√Æ√Æ√°√π√•√≠√®√ø √¢ √∑√†√≤√• √Æ√≤√™√´√æ√∑√•√≠√ª");
					}
					PlayerPlaySound(playerid, 5202, 0.0, 0.0, 0.0);
					callcmd::apanel(playerid);
				}
				case 1: {
					if(GetPVarInt(playerid, "AntiCheatShow")) {
						SetPVarInt(playerid, "AntiCheatShow", false);
						TextDrawShowForPlayer(playerid, cheatpanelTD[0]);
						TextDrawShowForPlayer(playerid, cheatpanelTD[1]);
						SCM(playerid, COLOR_MAIN, "√è√Æ√´√Æ√±√™√® √†√≠√≤√®√∑√®√≤√Æ√¢ √Ø√Æ√™√†√ß√†√≠√ª");
					}
					else {
						SetPVarInt(playerid, "AntiCheatShow", true);
						TextDrawHideForPlayer(playerid, cheatpanelTD[0]);
						TextDrawHideForPlayer(playerid, cheatpanelTD[1]);
						SCM(playerid, COLOR_ERROR, "√è√Æ√´√Æ√±√™√® √†√≠√≤√®√∑√®√≤√Æ√¢ √±√™√∞√ª√≤√ª");
					}
					PlayerPlaySound(playerid, 5202, 0.0, 0.0, 0.0);
					callcmd::apanel(playerid);
				}
				case 2: {
					if(GetPVarInt(playerid, "HelpersShow")) {
						SetPVarInt(playerid, "HelpersShow", false);
						SCM(playerid, COLOR_MAIN, "√ë√Æ√Æ√°√π√•√≠√®√ø √µ√•√´√Ø√•√∞√Æ√¢ √¢√™√´√æ√∑√•√≠√ª");
					}
					else {
						SetPVarInt(playerid, "HelpersShow", true);
						SCM(playerid, COLOR_ERROR, "√ë√Æ√Æ√°√π√•√≠√®√ø √µ√•√´√Ø√•√∞√Æ√¢ √Æ√≤√™√´√æ√∑√•√≠√ª");
					}
					PlayerPlaySound(playerid, 5202, 0.0, 0.0, 0.0);
					callcmd::apanel(playerid);
				}
				case 3: {
					load_mode(playerid);
					SetPlayerPos(playerid, -122.0479,-502.8817,2999.3940);
					SetPlayerFacingAngle(playerid, 0);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 5);
					SetPlayerVirtualWorld(playerid, 128);
					SCM(playerid, COLOR_BLUE, "√Ç√ª √°√ª√´√® √≤√•√´√•√Ø√Æ√∞√≤√®√∞√Æ√¢√†√≠√ª √¢ {99cc33}√†√§√¨√®√≠-√™√¢√†√∞√≤√®√∞√≥");
				}
			}
			return 1;
		}
	case 15518: mysql_tquery(mysql_Handle, "SELECT * FROM `promo`", "promo_stats", "i", playerid);
	case 15402: {
			if(!response) return 1;
			SetPVarString(playerid, "CodeTemps", inputtext);
			if(!listitem) return SPD(playerid, 15403, DIALOG_STYLE_INPUT, "{00cc66}√ç√Æ√¢√ª√© √Ø√∞√Æ√¨√Æ√™√Æ√§", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√†√ß√¢√†√≠√®√• √§√´√ø √≠√Æ√¢√Æ√£√Æ √Ø√∞√Æ√¨√Æ√™√ÆS√≠:","√É√Æ√≤√Æ√¢√Æ", "Cerrar");
			return SPD(playerid, 14211, DIALOG_STYLE_LIST,""CPALEGREEN"√Ñ√•√©√±√≤√¢√®√ø √± √Ø√∞√Æ√¨√Æ√™√Æ√§√Æ√¨","{23cd23}√Ä√™√≤√®√¢√®√∞√Æ√¢√†√≤√º √Ø√∞√Æ√¨√Æ√™√Æ√§\n{accd23}√Ñ√•√†√™√≤√®√¢√®√∞√Æ√¢√†√≤√º √Ø√∞√Æ√¨√Æ√™√Æ√§\n{f33333}√ìS√≠√´√®√≤√º √Ø√∞√Æ√¨√Æ√™√Æ√§", "Seleccione", "Siguiente");
		}
	case 14211: {
			if(!response) return callcmd::promost(playerid);
			string[0] = EOS;
			new nameproma[62];
			GetPVarString(playerid, "CodeTemps", nameproma, sizeof(nameproma));
			DeletePVar(playerid, "CodeTemps");
			switch(listitem) {
				case 0: {
					mysql_format(mysql_Handle, string, 164, "SELECT * FROM `promo` WHERE `code` = '%s'", nameproma);
					mysql_tquery(mysql_Handle, string, "promoactive", "ds", playerid, nameproma);
				}
				case 1: {
					mysql_format(mysql_Handle, string, 164, "SELECT * FROM `promo` WHERE `code` = '%s'", nameproma);
					mysql_tquery(mysql_Handle, string, "promodeactive", "ds", playerid, nameproma);
				}
				case 2: {
					mysql_format(mysql_Handle, string, 80, "DELETE FROM `promo` WHERE `code` = '%s'", nameproma);
					mysql_tquery(mysql_Handle, string);
					SCM(playerid, 0xF33333FF, "√è√∞√Æ√¨√Æ√™√Æ√§ √°√ª√´ √≥S√≠√´¬∏√≠");
				}
			}
		}
	case 15403: {
			if(!response) return callcmd::promost(playerid);

			if(!strlen(inputtext)) return SPD(playerid, 15403, DIALOG_STYLE_INPUT, "{00cc66}√ç√Æ√¢√ª√© √Ø√∞√Æ√¨√Æ√™√Æ√§", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√†√ß√¢√†√≠√®√• √§√´√ø √≠√Æ√¢√Æ√£√Æ √Ø√∞√Æ√¨√Æ√™√ÆS√≠:","√É√Æ√≤√Æ√¢√Æ", "Cerrar");
			for(new i = strlen(inputtext); i != 0; --i) {
				switch(inputtext[i]) {
					case '√Ä'..'√ü', '√†'..'√ø', ' ': {
						SCM(playerid, COLOR_LIGHTGREY, "√ç√†√ß√¢√†√≠√®√• √Ø√∞√Æ√¨√Æ√™√ÆS√≠ √¨√Æ√¶√•√≤ √±√Æ√±√≤√Æ√ø√≤√º √≤√Æ√´√º√™√Æ √®√ß √´√†√≤√®√≠√±√™√®√µ √°√≥√™√¢");
						return SPD(playerid, 15403, DIALOG_STYLE_INPUT, "{00cc66}√ç√Æ√¢√ª√© √Ø√∞√Æ√¨√Æ√™√Æ√§", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√†√ß√¢√†√≠√®√• √§√´√ø √≠√Æ√¢√Æ√£√Æ √Ø√∞√Æ√¨√Æ√™√ÆS√≠:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
					}
				}
			}
			if(!(3 <= strlen(inputtext) <= 16)) {
				SCM(playerid, COLOR_LIGHTGREY, "√Ñ√Æ√Ø√≥√±√≤√®√¨√Æ √Æ√≤ 3 √§√Æ 16 √±√®√¨√¢√Æ√´√Æ√¢");
				return SPD(playerid, 15403, DIALOG_STYLE_INPUT, "{00cc66}√ç√Æ√¢√ª√© √Ø√∞√Æ√¨√Æ√™√Æ√§", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√†√ß√¢√†√≠√®√• √§√´√ø √≠√Æ√¢√Æ√£√Æ √Ø√∞√Æ√¨√Æ√™√ÆS√≠:","√É√Æ√≤√Æ√¢√Æ", "Cerrar");
			}
			strmid(pData[playerid][createPromoName], inputtext, 0, strlen(inputtext), 255);
			format(string, 210, ""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √±√Æ√ßS√≠√≤√º √Ø√∞√Æ√¨√Æ√™√Æ√§?\n√ç√†√ß√¢√†√≠√®√• √±√Æ√ßS√≠√¢√†√•√¨√Æ√£√Æ √Ø√∞√Æ√¨√Æ√™√ÆS√≠: {FFCD00}%s", pData[playerid][createPromoName]);
			SPD(playerid, 15408, DIALOG_STYLE_MSGBOX, "{00cc66}√ç√Æ√¢√ª√© √Ø√∞√Æ√¨√Æ√™√Æ√§", string, "√ë√Æ√ßS√≠√≤√º", "Cerrar");
		}
	case 7456:
	{
		if(!response) return callcmd::menu(playerid);
		if(GetPVarInt(playerid, "setname")) 
			return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≥√¶√• √Ø√ÆS√≠√¢√†√´√® √ß√†√ø√¢√™√≥ √≠√† √®√ß√¨√•√≠√•√≠√®√• √®√¨√•√≠√®");
		new len = strlen(inputtext);

		if(len < 4 || len > 19) 
			return SCM(playerid, COLOR_ERROR, "√ç√•√§√Æ√Ø√≥√±√≤√®√¨√ª√© √¥√Æ√∞√¨√†√≤ √¢√¢√ÆS√≠");

		while(--len != -1)
		{
			switch(inputtext[len])
			{
				case 'A'..'Z', 'a'..'z', '_': continue;
				default:
				{
					SCM(playerid, COLOR_ERROR, "√Ç√¢√•√§¬∏√≠√≠√Æ√• √®√¨√ø √±√Æ√§√•√∞√¶√®√≤ √≠√•√§√Æ√Ø√≥√±√≤√®√¨√ª√• √±√®√¨√¢√Æ√´√ª");
					return SCM(playerid, -1, "√å√Æ√¶√≠√Æ √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √´√†√≤√®√≠√±√™√®√• √°√≥√™√¢√ª a-z A-Z, √† √≤√†√™√¶√• √±√®√¨√¢√Æ√´ _");
				}
			}
		}
		format(changename[playerid],MAX_PLAYER_NAME, "%s",inputtext);

		mysql_format(mysql_Handle, string, 70, "SELECT * FROM `accounts` WHERE `Name` = '%s'", inputtext);
		mysql_tquery(mysql_Handle, string, "namechangecheck", "d", playerid);
	}
	case 15408: {
			if(!response) return 1;
			mysql_tquery(mysql_Handle, "SELECT * FROM `promo`", "promoCreate", "is", playerid, pData[playerid][createPromoName]);
		}
	case 458: {
			if(!response) return 1;
			if(!IsPlayerConnected(pTemp[playerid][pSpectateID])) {
				SCM(playerid,COLOR_ERROR,"√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [092]");
				return SCM(playerid,COLOR_ERROR,"√à√£√∞√Æ√™ √≠√• √Ø√Æ√§√™√´√æ√∑√•√≠ √™ √±√•√∞√¢√•√∞√≥");
			}
			pData[pTemp[playerid][pSpectateID]][pMuteTime] = GetPVarInt(playerid, "TimeMutesP")*60;
			UpdatePlayerData(pTemp[playerid][pSpectateID], "pMuteTime", pData[pTemp[playerid][pSpectateID]][pMuteTime]);

			new day, month, year, hour, minuite, second;
			getdate(year, month, day);
			gettime(hour, minuite, second);
			FixHour(hour);
			hour = shifthour;
			new data2[22];
			format(data2, 22, "%02d.%02d.%d √¢ %02d:%02d",day, month, year, hour, minuite);

			string[0] = EOS;
			if(!strlen(inputtext)) {
				if(pData[playerid][pSex] == 1) format(string, 128, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√´ √∑√†√≤ √®√£√∞√Æ√™√≥ %s √≠√† %d √¨√®√≠",pData[playerid][pName],pData[pTemp[playerid][pSpectateID]][pName],GetPVarInt(playerid, "TimeMutesP"));
				else format(string, 128, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√´√† √∑√†√≤ √®√£√∞√Æ√™√≥ %s √≠√† %d √¨√®√≠",pData[playerid][pName],pData[pTemp[playerid][pSpectateID]][pName],GetPVarInt(playerid, "TimeMutesP"));
			}
			else {
				if(pData[playerid][pSex] == 1) format(string, 128, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√´ √∑√†√≤ √®√£√∞√Æ√™√≥ %s √≠√† %d √¨√®√≠. √è√∞√®√∑√®√≠√†: %s",pData[playerid][pName],pData[pTemp[playerid][pSpectateID]][pName],GetPVarInt(playerid, "TimeMutesP"),inputtext);
				else format(string, 128, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√´√† √∑√†√≤ √®√£√∞√Æ√™√≥ %s √≠√† %d √¨√®√≠. √è√∞√®√∑√®√≠√†: %s",pData[playerid][pName],pData[pTemp[playerid][pSpectateID]][pName],GetPVarInt(playerid, "TimeMutesP"),inputtext);
			}
			SCMTA_setting(COLOR_LIGHTRED, string); if(!pData[pTemp[playerid][pSpectateID]][p_setting][2]) SCM(pTemp[playerid][pSpectateID], COLOR_LIGHTRED, string);
			SCM(pTemp[playerid][pSpectateID], COLOR_LIGHTGREY, "√Ç√∞√•√¨√ø √§√Æ √Æ√™√Æ√≠√∑√†√≠√®√ø √°√´√Æ√™√®√∞√Æ√¢√™√® √∑√†√≤√†: {cccc00}/time");
			gAdmin[playerid][ADMIN_MUTE] ++;
			mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('%s',%d,'%s')", string,pData[pTemp[playerid][pSpectateID]][pID], data2);
			mysql_tquery(mysql_Handle, string);
			SetPVarInt(playerid,"counting_punish",gettime() + 5);
			return 1;
		}
	case 459: {
			if(!response) return 1;
			if(!strlen(inputtext)) return 1;
			if(strval(inputtext) < 5 || strval(inputtext) > 300) 
				return SCM(playerid, COLOR_LIGHTGREY, "√Ñ√Æ√±√≤√≥√Ø√≠√Æ√• √¢√∞√•√¨√ø √Æ√≤ 5 √§√Æ 300 √¨√®√≠√≥√≤");
			SetPVarInt(playerid, "TimeMutesP", strval(inputtext));
			return SPD(playerid, 458, DIALOG_STYLE_INPUT, "√Å√ª√±√≤√∞√†√ø √°√´√Æ√™√®√∞√Æ√¢√™√† √∑√†√≤√†", "√Ç√¢√•√§√®√≤√• √Ø√∞√®√∑√®√≠√≥: (√§√´√ø √Ø√∞√Æ√Ø√≥√±√™√†, √≠√†√¶√¨√®√≤√• \"√Ç√ªS√≠√≤√º\")", "√Ç√ªS√≠√≤√º", "Cerrar");
		}
	case 4974: {
			if(!response) return 1;
			SetPVarInt(playerid, "ZaprosLeader", true);
			format(string, 128, "[A] √ã√®√§√•√∞ %s %s √µ√Æ√∑√•√≤ √≥√¢√Æ√´√®√≤√º √¢√±√•√µ √Æ√¥√¥√´√†√©√≠ √®√£√∞√Æ√™√Æ√¢ {acd358}| /off %d √§√´√ø √Æ√§√Æ√°√∞√•√≠√®√ø", FractionInfo[pData[playerid][pMember]][fName], pData[playerid][pName], playerid);
			AdminMessage(0xAB002CFF, string);
			SCM(playerid, COLOR_YELLOW, "√á√†√ø√¢√™√† √≠√† √≥√¢√Æ√´√º√≠√•√≠√®√• √¢√±√•√µ √Æ√¥√¥√´√†√©√≠ √®√£√∞√Æ√™√Æ√¢ √≥√±√Ø√•√∏√≠√Æ √±√Æ√ßS√≠√≠√†");
			return SCM(playerid, -1, "√Ñ√Æ√¶√§√®√≤√•√±√º √•¬∏ √Æ√§√Æ√°√∞√•√≠√®√ø √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√Æ√¨");
		}
	case 4584: {
			if(!response) return DeletePVar(playerid, "for_del");
			string[0] = EOS;
            new query_1[120];
            new query_2[250];
            new NAMEDEL[24];
            GetPVarString(playerid, "for_del", NAMEDEL, sizeof(NAMEDEL));
            DeletePVar(playerid, "for_del");
            mysql_format(mysql_Handle, query_2, sizeof(query_2), "SELECT * FROM `accounts` WHERE `Name` = '%s'", NAMEDEL);
            mysql_tquery(mysql_Handle, query_2, "acc_prop_remove", "");
			mysql_format(mysql_Handle, query_1, sizeof(query_1), "UPDATE `accounts` SET `Name` = 'DELETED_%s' WHERE `Name` = '%s'", NAMEDEL,NAMEDEL);
			mysql_tquery(mysql_Handle, query_1);
            new iddel = GetPlayerID(NAMEDEL);
			if(IsPlayerConnected(iddel)) 
                Kick(iddel);
			return SCMF(playerid, 0xFA1010FF, "√Ä√™√™√†√≥√≠√≤ %s √≥√±√Ø√•√∏√≠√Æ √≥S√≠√´¬∏√≠ √®√ß √°√†√ß√ª S√≠√≠√≠√ª√µ", NAMEDEL);
		}
	case 221: {
			if(!response) return 1;
			static const str[] = "";
			new i = 100;
			emit push.c str; emit push.c COLOR_LIGHTGREY; emit push.c 8;
			do emit sysreq.c SCMTA;
			while(--i); emit stack 12;
			SCMTA(COLOR_LIGHTGREY, "√ó√†√≤ √Æ√∑√®√π√•√≠");
			format(string, 96, "[A] √ó√†√≤ √Æ√∑√®√π√•√≠ √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√Æ√¨ %s[%d]", pData[playerid][pName], playerid);
			if(GetPVarInt(playerid, "AdminMessages")) SCM(playerid, COLOR_GREY, string);
			return AdminMessage(COLOR_GREY, string);
		}
	case 772: {
			if(!response) return callcmd::menu(playerid);
			if(!strlen(inputtext)) return SPD(playerid, 772, DIALOG_STYLE_INPUT, ""CMAIN"√ë√¢√ø√ß√º √± √†√§√¨√®√≠√®√±√≤√∞√†√∂√®√•√©", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√¢√Æ¬∏ √Æ√°√∞√†√π√•√≠√®√• √§√´√ø √†√§√¨√®√≠√®√±√≤√∞√†√∂√®√® √¢ √Ø√Æ√´√• √≠√®√¶√•\n\n√Ç√ª √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √™√Æ√¨√†√≠√§√≥ "CLITEBLUE"/report "CWHITE"√§√´√ø √°√Æ√´√•√• √°√ª√±√≤√∞√Æ√£√Æ √Æ√≤√Ø√∞√†√¢√´√•√≠√®√ø\n√è√Æ√¨√≠√®√≤√•, √∑√≤√Æ √¢√†√∏√• √Æ√°√∞√†√π√•√≠√®√• √≠√• √•√§√®√≠√±√≤√¢√•√≠√≠√Æ√• √® √†√§√¨√®√≠√®√±√≤√∞√†√∂√®√® √≠√≥√¶√≠√Æ\n√¢√∞√•√¨√ø √≠√† √Æ√°√∞√†√°√Æ√≤√™√≥ √¢√±√•√µ √Ø√Æ√±√≤√≥√Ø√†√æ√π√®√µ √¢√Æ√Ø√∞√Æ√±√Æ√¢ √® √¶√†√´√Æ√°", "√é√≤√Ø√∞√†√¢√®√≤√º", "Siguiente");
			if(strfind(inputtext, "{", true) != -1 || strfind(inputtext, "}", true) != -1) 
				return SPD(playerid, 772, DIALOG_STYLE_INPUT, ""CMAIN"√ë√¢√ø√ß√º √± √†√§√¨√®√≠√®√±√≤√∞√†√∂√®√•√©", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√¢√Æ¬∏ √Æ√°√∞√†√π√•√≠√®√• √§√´√ø √†√§√¨√®√≠√®√±√≤√∞√†√∂√®√® √¢ √Ø√Æ√´√• √≠√®√¶√•\n\n√Ç√ª √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √™√Æ√¨√†√≠√§√≥ "CLITEBLUE"/report "CWHITE"√§√´√ø √°√Æ√´√•√• √°√ª√±√≤√∞√Æ√£√Æ √Æ√≤√Ø√∞√†√¢√´√•√≠√®√ø\n√è√Æ√¨√≠√®√≤√•, √∑√≤√Æ √¢√†√∏√• √Æ√°√∞√†√π√•√≠√®√• √≠√• √•√§√®√≠√±√≤√¢√•√≠√≠√Æ√• √® √†√§√¨√®√≠√®√±√≤√∞√†√∂√®√® √≠√≥√¶√≠√Æ\n√¢√∞√•√¨√ø √≠√† √Æ√°√∞√†√°√Æ√≤√™√≥ √¢√±√•√µ √Ø√Æ√±√≤√≥√Ø√†√æ√π√®√µ √¢√Æ√Ø√∞√Æ√±√Æ√¢ √® √¶√†√´√Æ√°", "√é√≤√Ø√∞√†√¢√®√≤√º", "Siguiente");
			if(Iter_Contains(Reports, playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≥√¶√• √Æ√±√≤√†√¢√®√´√® √Æ√°√∞√†√π√•√≠√®√• √†√§√¨√®√≠√®√±√≤√∞√†√∂√®√®. √Ñ√Æ√¶√§√®√≤√•√±√º √Æ√≤√¢√•√≤√†");
			if(Iter_Count(Reports) >= 50) return SCM(playerid, COLOR_GREY, "√é√∑√•√∞√•√§√º √Æ√°√∞√†√π√•√≠√®√© √Ø√•√∞√•√Ø√Æ√´√≠√•√≠√†");
			if(pData[playerid][pMuteTime_R]) return SCM(playerid, COLOR_ERROR, "√Ñ√Æ√±√≤√≥√Ø √¢ √∞√•√Ø√Æ√∞√≤ √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√≠");
			if(time_admdelay[playerid] > 0) return SCMF(playerid, COLOR_LIGHTGREY, "√Ç√ª √±√¨√Æ√¶√•√≤√• √±√¢√ø√ß√†√≤√º√±√ø √± √†√§√¨√®√≠√®√±√≤√∞√†√∂√®√•√© √∑√•√∞√•√ß "CORANGE"%d √±√•√™", time_admdelay[playerid]);
			string[0] = EOS;
			format(string, 144, "[/pm] √é√°√∞√†√π√•√≠√®√• ¬π%d √Æ√≤ %s[%d]: {FFCD00}%s", Iter_Count(Reports) + 1, pData[playerid][pName], playerid, (inputtext));
			SendRepMes(0x35AA50FF, string);
			if(pData[playerid][pAdmin] < 1 && !pData[playerid][pHelper]) SCMF(playerid, 0x35AA50FF, "√é√°√∞√†√π√•√≠√®√• √Æ√≤ %s[%d]: {FFCD00}%s", pData[playerid][pName], playerid, (inputtext));
			else if(GetPVarInt(playerid, "AdminMessages")) SCMF(playerid, 0x35AA50FF, "√é√°√∞√†√π√•√≠√®√• √Æ√≤ %s[%d]: {FFCD00}%s", pData[playerid][pName], playerid, (inputtext));

			Iter_Add(Reports, playerid);
			SCM(playerid, -1, "√é√°√∞√†√π√•√≠√®√• √Ø√∞√®√≠√ø√≤√Æ. √é√¶√®S√≠√©√≤√• √Æ√≤√¢√•√≤√† √Æ√≤ √†√§√¨√®√≠√®√±√≤√∞√†√∂√®√®");
			strmid(pTemp[playerid][rep_rport], inputtext, 0, strlen(inputtext), 97);

			new hour, minuite, second;
			gettime(hour, minuite, second);
			format(report_date[playerid], 20, "%02d:%02d",hour, minuite);
			return time_admdelay[playerid] = 15;
		}
	case 142: {
			if(!response) return 1;
			new numberleader[30], id_leader = GetPlayerID(inputtext);
			if(IsPlayerConnected(id_leader)) {
				if(pData[id_leader][pPnumber] == -1) numberleader = "{ff242b}√ç√•√§√Æ√±√≤√≥√Ø√≠√Æ";
				else format(numberleader, 30, "{40bf40}%d", pData[id_leader][pPnumber]);
				string[0] = EOS;
				format(string, 300, ""CWHITE"√ç√®√™: {40bf40}%s\n"CWHITE"√ë√≤√†√≤√≥√±: "CCYAN"√é√≠√´√†√©√≠\n"CWHITE"ID √¢ √®√£√∞√•: {aa80ff}%d\n"CWHITE"√ì√∞√Æ√¢√•√≠√º: {40bf40}%d\n"CWHITE"√é√∞√£√†√≠√®√ß√†√∂√®√ø: "CPALEGREEN"%s\n"CWHITE"√Ñ√Æ√´√¶√≠√Æ√±√≤√º: "CPALEGREEN"%s\n"CWHITE"√í√•√´√•√¥√Æ√≠: %s", inputtext, id_leader, pData[id_leader][pLevel], FractionInfo[pData[id_leader][pMember]][fName], new_rank_name[pData[id_leader][pMember] - 1][pData[id_leader][pRank] - 1], numberleader);
				SPD(playerid, 143, DIALOG_STYLE_MSGBOX, "{FFCD00}√à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ √´√®√§√•√∞√•", string, "Siguiente", "Cerrar");
			}
			else {
				new tmp_query[100];
				mysql_format(mysql_Handle, tmp_query, sizeof(tmp_query), "SELECT `pPnumber`, `pLevel`, `pMember` FROM `accounts` WHERE `Name` = '%s'", inputtext);
				mysql_tquery(mysql_Handle, tmp_query, "off_leader_info", "ds", playerid, inputtext);
			}
		}
	case 143: {
		if(!response) return 1;
		callcmd::leaders(playerid);
	}
	case 124: {
			if(!response) return 1;
			new tempstr[64];
			format(tempstr, 64,""CPALEGREEN"√Ñ√•√©√±√≤√¢√®√ø √± √™√Æ√≠√≤√†√™√≤√Æ√¨ %s", inputtext);
			SPD(playerid, 125, DIALOG_STYLE_LIST, tempstr, ""CWHITE"[1] √è√Æ√ß√¢√Æ√≠√®√≤√º\n[2] √é√≤√Ø√∞√†√¢√®√≤√º √±√Æ√Æ√°√π√•√≠√®√•\n"CERROR"[3] √ìS√≠√´√®√≤√º √™√Æ√≠√≤√†√™√≤", "Seleccione" ,"Siguiente");
			SetPVarString(playerid, "NameListItem", inputtext);
		}
	case 125: {   
			if(!response) return callcmd::book(playerid);
			new name_listitem[24];
			GetPVarString(playerid, "NameListitem", name_listitem, 24);
			string[0] = EOS;
			mysql_format(mysql_Handle, string, 128, "SELECT `id`, `pPnumber` FROM `accounts` WHERE `Name` = '%s'", name_listitem);
			mysql_tquery(mysql_Handle, string, "ActionPlayerPhone", "ii", playerid, listitem);
			return 1;
		}
	case 126: {   
			if(!response) return DeletePVar(playerid, "Temp_ID_Book_Tab");
			string[0] = EOS;

			if(GetPVarInt(playerid, "takephone")) return SCM(playerid, COLOR_ERROR, "√ì √Ç√†√± No √≤√•√´√•√¥√Æ√≠√†. √à√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√• √Ω√≤√Æ√© √¥√≥√≠√™√∂√®√® √≠√•√§√Æ√±√≤√≥√Ø√≠√Æ");
			if(pData[playerid][pPnumber] == -1) return SCM(playerid, COLOR_ERROR, "√ì √Ç√†√± No √≤√•√´√•√¥√Æ√≠√†. √à√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√• √Ω√≤√Æ√© √¥√≥√≠√™√∂√®√® √≠√•√§√Æ√±√≤√≥√Ø√≠√Æ");
			new temp_tid = GetPVarInt(playerid, "Temp_ID_Book_Tab");
			if(!IsPlayerConnected(temp_tid)) return SCM(playerid,COLOR_ERROR,"√é√∏√®√°√™√†: √®√£√∞√Æ√™ √¢√ª√∏√•√´ √®√ß √®√£√∞√ª");

			mysql_format(mysql_Handle, string, 128, "SELECT * FROM `phone_book` WHERE `ownerid_acc` = %d AND `ownerid_acc_add` = %d", pData[playerid][pID], pData[temp_tid][pID]);
			mysql_tquery(mysql_Handle, string, "CheckValidContactTAB", "i", playerid);

			if(!IsPlayerConnected(temp_tid)) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [027]");
			mysql_format(mysql_Handle, string, 128, "INSERT INTO `phone_book` (`ownerid_acc`, `ownerid_acc_add`) VALUES (%d, %d)", pData[playerid][pID], pData[temp_tid][pID]);
			mysql_tquery(mysql_Handle, string);
			SCMF(playerid, 0x55DCEAFF, "√Ç√ª √§√Æ√°√†√¢√®√´√® "CBLUE"%s {55dcea}√¢ √±√¢√Æ√æ √≤√•√´√•√¥√Æ√≠√≠√≥√æ √™√≠√®√£√≥", pData[temp_tid][pName]);
		}
	case 127: {   
			if(!response) return DeletePVar(playerid, "Temp_ID_Book_Cmd");
			string[0] = EOS;
			new temp_tid = GetPVarInt(playerid, "Temp_ID_Book_Cmd");
			if(!IsPlayerConnected(temp_tid)) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [028]");
			mysql_format(mysql_Handle, string, 128, "INSERT INTO `phone_book` (`ownerid_acc`, `ownerid_acc_add`) VALUES (%d, %d)", pData[playerid][pID], pData[temp_tid][pID]);
			mysql_tquery(mysql_Handle, string);
			SCMF(playerid, 0x55DCEAFF, "√Ç√ª √§√Æ√°√†√¢√®√´√® "CBLUE"%s {55dcea}√¢ √±√¢√Æ√æ √≤√•√´√•√¥√Æ√≠√≠√≥√æ √™√≠√®√£√≥", pData[temp_tid][pName]);
		}
	case 661: {
			if(!response) return 1;
			new give_sms_id = -1, sms_number = GetPVarInt(playerid, "SmsText");
			
			if(pData[playerid][pCashNumber] < 5) return SCM(playerid, COLOR_LIGHTGREY, "√Ñ√´√ø √Æ√≤√Ø√∞√†√¢√´√•√≠√®√ø √±√Æ√Æ√°√π√•√≠√®√ø √≤√∞√•√°√≥√•√≤√±√ø 5$ √≠√† √±√∑√•√≤√≥ √¨√Æ√°√®√´√º√≠√Æ√£√Æ √≤√•√´√•√¥√Æ√≠√†");
			if(strlen(inputtext) > 64) return SCM(playerid, COLOR_LIGHTGREY, "√ë√´√®√∏√™√Æ√¨ √§√´√®√≠√≠√Æ√• √±√Æ√Æ√°√π√•√≠√®√•");
			foreach(new i:Player) {
                if(pData[i][pPnumber] != sms_number) continue;
                give_sms_id = i;
            }
			if(give_sms_id == -1 || PhoneOnline{give_sms_id}) {
				PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
				return SCM(playerid, COLOR_LIGHTGREY, "√í√•√´√•√¥√Æ√≠ √†√°√Æ√≠√•√≠√≤√† √≠√†√µ√Æ√§√®√≤√±√ø √¢√≠√• √ß√Æ√≠√ª √§√Æ√±√≤√≥√Ø√†");
			}
			if(pData[give_sms_id][pMuteTime]) return SCM(playerid, COLOR_ERROR, "√ç√† S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤ √Æ√≤√Ø√∞√†√¢√´√•√≠√®√• √±√Æ√Æ√°√π√•√≠√®√ø √Ω√≤√Æ√¨√≥ √®√£√∞√Æ√™√≥ √≠√•√¢√Æ√ß√¨√Æ√¶√≠√Æ"), PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
			
			pData[playerid][pCashNumber] -= 5;
			UpdatePlayerData(playerid, "pCashNumber", pData[playerid][pCashNumber]);
			GameTextForPlayer(playerid, "-5$~n~~w~SMS", 2000, 1);
			
			SCMF(give_sms_id, 0xFEBC41AA, "SMS: "CYELLOW"%s {febc41}| "CYELLOW"√é√≤√Ø√∞√†√¢√®√≤√•√´√º: %s[%d] [√≤.%i]", inputtext, pData[playerid][pName], playerid, pData[playerid][pPnumber]);
			SCMF(playerid,  0xFEBC41AA, "SMS: "CYELLOW"%s {febc41}| "CYELLOW"√è√Æ√´√≥√∑√†√≤√•√´√º: %s[%d] [√≤.%i]", inputtext, pData[give_sms_id][pName], give_sms_id, sms_number);
			
			SetPlayerChatBubble(playerid, "SMS >>>", 0xFEBC41AA, 15.0, 2000);
			SetPlayerChatBubble(give_sms_id, "SMS <<<", 0xFEBC41AA, 15.0, 2000);
			foreach(new d:Player) if(GetPVarInt(d, "ears")) return SCMF(d, 0xFEBC41AA, "SMS: "CYELLOW"%s {febc41}| "CYELLOW"√é√≤√Ø√∞√†√¢√®√´ %s[%d] √§√´√ø %s[%d]", inputtext, pData[playerid][pName], playerid, pData[give_sms_id][pName], give_sms_id);
		}
	case 741: {
			if(!response) return DeletePVar(playerid, "biz_vhod");
			new i = GetPVarInt(playerid, "biz_vhod");
			DeletePVar(playerid, "biz_vhod");
			if(pData[playerid][pCash]-BizInfo[i][bVhod] >= 0) {
				new ec_str[20], str_vhodbiz[30];
				Hook_GivePlayerMoney(playerid, -BizInfo[i][bVhod]);
				BizInfo[i][bPribil] += BizInfo[i][bVhod];
				BizInfo[i][bBank] += BizInfo[i][bVhod];
				format(ec_str, 20, "~r~-%d$", BizInfo[i][bVhod]);
				GameTextForPlayer(playerid, ec_str, 3000, 1);
				if(BizInfo[i][bBank] > 10000000) BizInfo[i][bBank] = 10000000;
				UpdateBusinessData(i, "bPribil",BizInfo[i][bPribil]);
				UpdateBusinessData(i, "bBank",BizInfo[i][bBank]);
				format(str_vhodbiz, sizeof(str_vhodbiz), "biz_vhodda_%d", i);
				SetPVarInt(playerid, str_vhodbiz, 1);
				BizEnter{playerid} = i;
                new type = BizInfo[i][bTypeBiz];
                if(type == 40 || type == 2 || type == 4 || type == 21 || i == 76 || i == 70 || type == 59) 
                	load_mode(playerid);
                if(i == 94) {
                	if(GetPVarInt(playerid, "binco")) 
                		DeletePVar(playerid, "binco");
                	SetPVarInt(playerid, "victim", 1);
                }
                if(i == 95) {
                	if(GetPVarInt(playerid, "victim")) 
                		DeletePVar(playerid, "victim");
                	if(GetPVarInt(playerid, "binco")) 
                		DeletePVar(playerid, "binco");
                }
                if(i == 96) {
                	if(GetPVarInt(playerid, "victim")) 
                		DeletePVar(playerid, "victim");
                	SetPVarInt(playerid, "binco", 1);
                }
                if(type == 33) {
		        	load_mode(playerid);
		        	SCM(playerid, -1, "√Ñ√Æ√°√∞√Æ √Ø√Æ√¶√†√´√Æ√¢√†√≤√º √¢ √å√•√°√•√´√º√≠√ª√© √±√†√´√Æ√≠! Usar√≤√• "CCYAN"/buyobj "CWHITE"√§√´√ø √Ø√Æ√™√≥√Ø√Æ√™");
		        }
				if(type == 31) {
					load_mode(playerid);
					SetPlayerPos( playerid, 1417.6107,-22.4425,1004.3643 );
					SetPlayerFacingAngle(playerid, 90.0);
				}
				else {
					SetPlayerPos( playerid, BizInfo[ i ][IntExitBiz][0], BizInfo[ i ][IntExitBiz][1], BizInfo[ i ][IntExitBiz][2] );
					SetPlayerFacingAngle(playerid, BizInfo[ i ][IntExitBiz][3]);
				}
				SetPlayerInterior( playerid, BizInfo[ i ][ bInt ] );
				SetPlayerVirtualWorld( playerid, BizInfo[ i ][ bVW ]);
				
				antiflood_move[playerid] = gettime() + 3;
				SetCameraBehindPlayer(playerid);
			}
			else return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √¢√µ√ÆS√≠ √¢ √Ω√≤√Æ√≤ √°√®√ß√≠√•√±");
		}
	case 231: {
			if(!response) return 1;
			if(pData[playerid][pCash] < 500) return SCM(playerid, COLOR_LIGHTGREY, "√í√•√´√•√¥√Æ√≠ √±√≤√Æ√®√≤ 500$");
			new randomize = 100000 + random(799999) + playerid;
			pData[playerid][pPnumber] = randomize;
			UpdatePlayerData(playerid, "pPnumber", randomize);
			RemoveItemFromInventory(playerid, 3);
			AddItemToInventory(playerid, 1, 3);
			Hook_GivePlayerMoney(playerid, -500);
			GameTextForPlayer(playerid, "~r~-500$", 3000, 1);
			PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
			SCMF(playerid,COLOR_PALEGREEN,"√í√•√´√•√¥√Æ√≠ √Ø√∞√®√Æ√°√∞√•√≤¬∏√≠. √Ç√†√∏ √≠√Æ√¢√ª√© √≠√Æ√¨√•√∞ √≤√•√´√•√¥√Æ√≠√†: {008800}%i", randomize);
		}
	case 261: {
			if(!response) return 1;
			switch(listitem) {
				case 0: {
					if(GetPVarInt(playerid, "takephone")) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√•√´√•√¥√Æ√≠√†");
					if(pData[playerid][pPnumber] == -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√•√´√•√¥√Æ√≠√†. √ä√≥√Ø√®√≤√º √•√£√Æ √¨√Æ√¶√≠√Æ √¢ 24-7");
					SPD(playerid, 894, DIALOG_STYLE_INPUT, ""CPALEGREEN"√è√Æ√Ø√Æ√´√≠√•√≠√®√•", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ √µ√Æ√≤√®√≤√• √Ø√Æ√´√Æ√¶√®√≤√º √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√è√Æ√Ø√Æ√´√≠√®√≤√º", "Cerrar");
				}
				case 1: SPD(playerid, 485, DIALOG_STYLE_TABLIST_HEADERS, ""CMAIN"√Ç√ª√°√•√∞√®√≤√• √∂√¢√•√≤", "{aa80ff}√ë√≤√Æ√®√¨√Æ√±√≤√º √±√¨√•√≠√ª √∂√¢√•√≤√†: 300$\n"CWHITE"√Å√•√´√ª√©\n"CRED"√ä√∞√†√±√≠√ª√©\n"CORANGE"√é√∞√†√≠√¶√•√¢√ª√©\n{00cc00}√á√•√´¬∏√≠√ª√©\n{2641fe}√ë√®√≠√®√©\n{cc00ff}√î√®√Æ√´√•√≤√Æ√¢√ª√©", "Seleccione", "Cerrar");
				case 2: SPD(playerid, 481, DIALOG_STYLE_INPUT, ""CPALEGREEN"√à√ß√¨√•√≠√•√≠√®√• √≠√Æ√¨√•√∞√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¨√•√∞ √§√´√ø √Ç√†√∏√•√© SIM-√™√†√∞√≤√ª\n√é√≠ √§√Æ√´√¶√•√≠ √±√Æ√±√≤√Æ√ø√≤√º √®√ß 6-√≤√® √∂√®√¥√∞\n\n"CLITEBLUE"√ë√≤√Æ√®√¨√Æ√±√≤√º: 300$", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
			}
		}
	case 481: {
		if(!response) return 1;
		if(!strlen(inputtext)) return SPD(playerid, 481, DIALOG_STYLE_INPUT, ""CPALEGREEN"√à√ß√¨√•√≠√•√≠√®√• √≠√Æ√¨√•√∞√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¨√•√∞ √§√´√ø √Ç√†√∏√•√© SIM-√™√†√∞√≤√ª\n√é√≠ √§√Æ√´√¶√•√≠ √±√Æ√±√≤√Æ√ø√≤√º √®√ß 6-√≤√® √∂√®√¥√∞\n\n"CLITEBLUE"√ë√≤√Æ√®√¨√Æ√±√≤√º: 300$", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return SPD(playerid, 481, DIALOG_STYLE_INPUT, ""CPALEGREEN"√à√ß√¨√•√≠√•√≠√®√• √≠√Æ√¨√•√∞√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¨√•√∞ √§√´√ø √Ç√†√∏√•√© SIM-√™√†√∞√≤√ª\n√é√≠ √§√Æ√´√¶√•√≠ √±√Æ√±√≤√Æ√ø√≤√º √®√ß 6-√≤√® √∂√®√¥√∞\n\n"CLITEBLUE"√ë√≤√Æ√®√¨√Æ√±√≤√º: 300$", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
			}
		}
		new number = strval(inputtext);
		if(inputtext[0] == '0') {
			SPD(playerid, 481, DIALOG_STYLE_INPUT, ""CPALEGREEN"√à√ß√¨√•√≠√•√≠√®√• √≠√Æ√¨√•√∞√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¨√•√∞ √§√´√ø √Ç√†√∏√•√© SIM-√™√†√∞√≤√ª\n√é√≠ √§√Æ√´√¶√•√≠ √±√Æ√±√≤√Æ√ø√≤√º √®√ß 6-√≤√® √∂√®√¥√∞\n\n"CLITEBLUE"√ë√≤√Æ√®√¨√Æ√±√≤√º: 300$", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
			return SCM(playerid, COLOR_ERROR, "√Ç√¢√•√§¬∏√≠ √≠√•√§√Æ√Ø√≥√±√≤√®√¨√ª√© √≠√Æ√¨√•√∞");
		}
		if(number == 02 || number == 03 || number == 05 || number == 333 || number == 111 || number == 060) {
			SPD(playerid, 481, DIALOG_STYLE_INPUT, ""CPALEGREEN"√à√ß√¨√•√≠√•√≠√®√• √≠√Æ√¨√•√∞√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¨√•√∞ √§√´√ø √Ç√†√∏√•√© SIM-√™√†√∞√≤√ª\n√é√≠ √§√Æ√´√¶√•√≠ √±√Æ√±√≤√Æ√ø√≤√º √®√ß 6-√≤√® √∂√®√¥√∞\n\n"CLITEBLUE"√ë√≤√Æ√®√¨√Æ√±√≤√º: 300$", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
			return SCM(playerid, COLOR_ERROR, "√Ç√¢√•√§¬∏√≠√≠√ª√© √Ç√†√¨√® √≠√Æ√¨√•√∞ √ß√†√≠√ø√≤");
		}
		if(strlen(inputtext) != 6) {
			SPD(playerid, 481, DIALOG_STYLE_INPUT, ""CPALEGREEN"√à√ß√¨√•√≠√•√≠√®√• √≠√Æ√¨√•√∞√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¨√•√∞ √§√´√ø √Ç√†√∏√•√© SIM-√™√†√∞√≤√ª\n√é√≠ √§√Æ√´√¶√•√≠ √±√Æ√±√≤√Æ√ø√≤√º √®√ß 6-√≤√® √∂√®√¥√∞\n\n"CLITEBLUE"√ë√≤√Æ√®√¨√Æ√±√≤√º: 300$", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
			return SCM(playerid, COLOR_ERROR, "√ç√Æ√¨√•√∞ √§√Æ√´√¶√•√≠ √±√Æ√±√≤√Æ√ø√≤√º √®√ß 6-√≤√® √∂√®√¥√∞");
		}
		mysql_format(mysql_Handle, string, 96, "SELECT `id` FROM `accounts` WHERE `pPnumber` = %d", number);
		if(GetPlayerInterior(playerid) == 8) mysql_tquery(mysql_Handle, string, "salon_check_validnumber", "ii", playerid, number);
		else mysql_tquery(mysql_Handle, string, "check_validnumber", "ii", playerid, number);
	}
	case 406: {
		if(!response) return DeletePVar(playerid, "list_colorphone");
		if(pData[playerid][pCash] < 300) 
			return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢");
		switch(GetPVarInt(playerid, "list_colorphone")) {
			case 0: pData[playerid][pColorPhone] = 0; case 1: pData[playerid][pColorPhone] = 1; case 2: pData[playerid][pColorPhone] = 2;
			case 3: pData[playerid][pColorPhone] = 3; case 4: pData[playerid][pColorPhone] = 4; case 5: pData[playerid][pColorPhone] = 5;
		}
		PlayerPlaySound(playerid, 17001, 0.0, 0.0, 0.0);
		Hook_GivePlayerMoney(playerid, -300);

		UpdatePlayerData(playerid, "pColorPhone", pData[playerid][pColorPhone]);
		SCM(playerid, COLOR_BLUE, "√ñ√¢√•√≤ √≤√•√´√•√¥√Æ√≠√† √≥√±√Ø√•√∏√≠√Æ √®√ß√¨√•√≠¬∏√≠");
		DeletePVar(playerid, "list_colorphone");
	}
	case 486: {
		if(!response) return DeletePVar(playerid, "list_colorphone");
		if(BizEnter{playerid} == 255) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [015]");
		if(pData[playerid][pCash] < 200) 
			return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢");

		pData[playerid][pColorPhone] = GetPVarInt(playerid, "list_colorphone");
		DeletePVar(playerid, "list_colorphone");
	
		PlayerPlaySound(playerid, 17001, 0.0, 0.0, 0.0);

		Hook_GivePlayerMoney(playerid, -200);
		BizInfo[BizEnter{playerid}][bPribil] += 200;
		BizInfo[BizEnter{playerid}][bBank] += 200;
		BizInfo[BizEnter{playerid}][bProd] -= 10;
		UpdateBusinessData(BizEnter{playerid}, "bProd",BizInfo[BizEnter{playerid}][bProd]);
		if(BizInfo[BizEnter{playerid}][bBank] > 10000000) BizInfo[BizEnter{playerid}][bBank] = 10000000;
		UpdateBusinessData(BizEnter{playerid}, "bPribil",BizInfo[BizEnter{playerid}][bPribil]);
		UpdateBusinessData(BizEnter{playerid}, "bBank",BizInfo[BizEnter{playerid}][bBank]);

		UpdatePlayerData(playerid, "pColorPhone", pData[playerid][pColorPhone]);
		SCM(playerid, COLOR_BLUE, "√ñ√¢√•√≤ √≤√•√´√•√¥√Æ√≠√† √≥√±√Ø√•√∏√≠√Æ √®√ß√¨√•√≠¬∏√≠");
	}
	case 485: {
		if(!response) return 1;
		SetPVarInt(playerid, "list_colorphone", listitem);
		new iddial;
		if(GetPlayerInterior(playerid) == 8) iddial=406;
		else iddial=486;
		SPD(playerid, iddial, DIALOG_STYLE_MSGBOX, ""CORANGE"√è√Æ√§√≤√¢√•√∞√¶√§√•√≠√®√•", ""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª √∑√≤√Æ √µ√Æ√≤√®√≤√• √±√¨√•√≠√®√≤√º √∂√¢√•√≤ √±√¢√Æ√•√£√Æ √≤√•√´√•√¥√Æ√≠√†?", "S√≠", "No");
	}
	case 894: {
			if(!response) return 1;
			if(!strlen(inputtext)) return SPD(playerid, 894, DIALOG_STYLE_INPUT, ""CPALEGREEN"√è√Æ√Ø√Æ√´√≠√•√≠√®√•", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ √µ√Æ√≤√®√≤√• √Ø√Æ√´√Æ√¶√®√≤√º √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√è√Æ√Ø√Æ√´√≠√®√≤√º", "Cerrar");
			for(new i = strlen(inputtext) - 1; i != -1; i --) {
				switch(inputtext[i]) {
					case '0'..'9': continue;
					default: return SPD(playerid, 894, DIALOG_STYLE_INPUT, ""CPALEGREEN"√è√Æ√Ø√Æ√´√≠√•√≠√®√•", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ √µ√Æ√≤√®√≤√• √Ø√Æ√´√Æ√¶√®√≤√º √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√è√Æ√Ø√Æ√´√≠√®√≤√º", "Cerrar");
				}
			}
			if(strval(inputtext) < 1) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§¬∏√≠√† √≠√•√¢√•√∞√≠√†√ø √±√≥√¨√¨√†"), SPD(playerid, 894, DIALOG_STYLE_INPUT, ""CPALEGREEN"√è√Æ√Ø√Æ√´√≠√•√≠√®√•", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ √µ√Æ√≤√®√≤√• √Ø√Æ√´√Æ√¶√®√≤√º √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√è√Æ√Ø√Æ√´√≠√®√≤√º", "Cerrar");
			if(strval(inputtext) > pData[playerid][pCash]) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢");
			new priceatmphone = strval(inputtext);
			Hook_GivePlayerMoney(playerid, -strval(inputtext));
			SCMF(playerid, COLOR_BLUE, "√Ç√ª √Ø√Æ√´√Æ√¶√®√´√® √≠√† √±√∑¬∏√≤ √¨√Æ√°√®√´√º√≠√Æ√£√Æ √≤√•√´√•√¥√Æ√≠√† %d$", priceatmphone);
			SCMF(playerid, COLOR_BLUE, "√Å√†√´√†√≠√± √Ç√†√∏√•√£√Æ √≤√•√´√•√¥√Æ√≠√†: %d$", pData[playerid][pCashNumber]+=priceatmphone);
			format(string,40, "~r~-%d$", priceatmphone);
			UpdatePlayerData(playerid, "pCashNumber", pData[playerid][pCashNumber]);
			return GameTextForPlayer(playerid, string, 3000, 1);
		}
	case 3000:
	{
		if(!response) return 1;

		NPCTrains(false);
		SCM(playerid, COLOR_ERROR, "NPC √°√ª√´√® √Æ√≤√™√´√æ√∑√•√≠√ª");
	}
	case 3001:
	{
		if(!response) return 1;

		NPCTrains(true);
		SCM(playerid, COLOR_MAIN, "NPC √°√ª√´√® √Ø√Æ√§√™√´√æ√∑√•√≠√ª");
	}
	case 944: {
			if(!response) return 1;
			GetPlayerPos(playerid, TeleportDest[playerid][0], TeleportDest[playerid][1], TeleportDest[playerid][2]);
			intback[playerid] = GetPlayerInterior(playerid);
			vwback[playerid] = GetPlayerVirtualWorld(playerid);
			SetPlayerPos(playerid, TeleportFloat[0], TeleportFloat[1], TeleportFloat[2]);
			SetPlayerInterior(playerid, TeleportInfo[0]);
			SetPlayerVirtualWorld(playerid, TeleportInfo[1]);
			ResetPlayerWeapons(playerid);
			back_tp[playerid] = true;
			SCM(playerid, COLOR_MAIN, "√Ç√ª √°√ª√´√® √§√Æ√±√≤√†√¢√´√•√≠√ª √≠√† √¨√•√±√≤√Æ √Ø√∞√Æ√¢√•√§√•√≠√®√ø √¨√•√∞√Æ√Ø√∞√®√ø√≤√®√ø");
			SCM(playerid, COLOR_MAIN, "√ó√≤√Æ√°√ª √¢√•√∞√≠√≥√≤√º√±√ø √Æ√°√∞√†√≤√≠√Æ, √¢√¢√•√§√®√≤√• "CLITEBLUE"/back");
		}
	case 1458:
	    {
	    	if(!response) return 1;
			if(GetPVarInt(playerid, "loader_job") < 1) {
				SetPVarInt(playerid, "loader_job", 1);
				if(pData[playerid][pSex] == 1) SetPlayerSkin(playerid, 27);
				else SetPlayerSkin(playerid, 191);
				SetPlayerCheckpoint(playerid, 2222.4976,-2278.0466,13.5469, 2.0);
				SCM(playerid, COLOR_LITEBLUE, "√ê√†√°√Æ√∑√®√© √§√•√≠√º √£√∞√≥√ß√∑√®√™√† √≥√±√Ø√•√∏√≠√Æ √≠√†√∑√†√≤");
				return SCM(playerid, COLOR_LITEBLUE, "√í√Æ√∑√™√® √§√Æ√±√≤√†√¢√™√® √≤√Æ√¢√†√∞√Æ√¢ √Ø√Æ√¨√•√∑√•√≠√ª "CRED"√™√∞√†√±√≠√ª√¨√® "CLITEBLUE"√¨√†√∞√™√•√∞√†√¨√®");
			}
	        else
	        {
				SCM(playerid, COLOR_BLUE, "√ê√†√°√Æ√∑√®√© √§√•√≠√º √£√∞√≥√ß√∑√®√™√† √ß√†√¢√•√∞√∏¬∏√≠");
				DisablePlayerCheckpoint(playerid);
           	 	SetPlayerSpecialAction(playerid, 0);
				TogglePlayerControllable(playerid, 1);
				if(pData[playerid][pMember] == 0) SetPlayerSkin(playerid, pData[playerid][pChar]);
				else SetPlayerSkin(playerid, pData[playerid][pModel]);
				if(GetPVarInt(playerid, "loader_bags") > 0) {
					format(string, 30, "~b~+%d$", GetPVarInt(playerid, "loader_money"));
					GameTextForPlayer(playerid, string, 3000, 1);
					SCMF(playerid, COLOR_BLUE, "√Ç√ª √Ø√•√∞√•√≠√•√±√´√® {FFCD00}%d √∏√≤. "CBLUE"√ø√π√®√™√Æ√¢ √£√∞√≥√ß√† √® √ß√†√∞√†√°√Æ√≤√†√´√® {00cc00}%d$", GetPVarInt(playerid, "loader_bags"), GetPVarInt(playerid, "loader_money"));
					Hook_GivePlayerMoney(playerid, GetPVarInt(playerid, "loader_money"));
				}
				DeletePVar(playerid, "loader_job"), DeletePVar(playerid, "loader_bags"), DeletePVar(playerid, "loader_money");
	        }
	    }  
	case 1244: {
			new vrach = GetPVarInt(playerid, "heal_vrach_id");
			if(!response) return DeletePVar(playerid, "heal_vrach_id"), DeletePVar(playerid, "heal_price"), SCM(vrach, COLOR_ERROR, "√à√£√∞√Æ√™ √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √´√•√∑√•√≠√®√ø");
			if(vrach == INVALID_PLAYER_ID) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [029]");
			SetPlayerHealth(playerid, 100.0);
			PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0); PlayerPlaySound(vrach, 17000, 0.0, 0.0, 0.0);
			Hook_GivePlayerMoney(vrach, 100);
			Hook_GivePlayerMoney(playerid, -GetPVarInt(playerid, "heal_price"));
			format(string, 32, "~w~~y~+%d$", GetPVarInt(playerid, "heal_price"));
			GameTextForPlayer(vrach, string, 3000, 3);
			format(string, 32, "~r~-%d$", GetPVarInt(playerid, "heal_price"));
			GameTextForPlayer(playerid, string, 3000, 1);
			if(GetPVarInt(playerid, "heal_price") != 150) {
				format(string, 128, "%s %s[%d] √¢√ª√´√•√∑√®√´ √Ø√†√∂√®√•√≠√≤√† %s √ß√† √≠√•√±√≤√†√≠S√≠√∞√≤√≠√≥√æ √±√≤√Æ√®√¨√Æ√±√≤√º "CCYAN"(%d$)", new_rank_name[pData[vrach][pMember] - 1][pData[vrach][pRank] - 1], GetName(vrach), vrach, GetName(playerid), GetPVarInt(playerid, "heal_price"));
				SFFM(pData[playerid][pMember], COLOR_LITEBLUE, string);
			}
			mysql_format(mysql_Handle, string, 128, "UPDATE `accounts` SET `healths_count` = `healths_count` + '1' WHERE `Name` = '%s'", GetName(vrach));
			mysql_tquery(mysql_Handle, string);
			SCM(playerid, COLOR_MAIN, "√ä√≥√∞√± √´√•√∑√•√≠√®√ø √Ø√∞√Æ√©√§√•√≠");
			SCMF(vrach, COLOR_MAIN, "√ä√≥√∞√± √´√•√∑√•√≠√®√ø √± %s √≥√±√Ø√•√∏√≠√Æ √Ø√∞√Æ√¢√•√§¬∏√≠", pData[playerid][pName]);
			DeletePVar(playerid, "heal_vrach_id"), DeletePVar(playerid, "heal_price");
		}
	case 477: SetCameraBehindPlayer(playerid);
	case 243: {
			if(!response) return SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
			new total_arounds = 0;
			foreach(new i:Player) {
				if(!IsACop(i)) continue;
				if(GetVehicleModel(GetPlayerVehicleID(i)) != 596) continue;
				if(ProxDetectorS(275.0, playerid, i)) total_arounds ++;
			}
			if(!strlen(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "[√Ñ√®√±√Ø√•√≤√∑√•√∞] √ü √≠√• √¨√Æ√£√≥ √Æ√°√∞√†√°√Æ√≤√†√≤√º √Ç√†√∏√• √±√Æ√Æ√°√π√•√≠√®√•"), SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
			if(GetPlayerInterior(playerid) != 0) return SCM(playerid, COLOR_GREY, "√Ç √Ç√†√∏√•√¨ √∞√†√©√Æ√≠√• √Æ√≤√±√≥√≤√±√≤√¢√≥√æ√≤ √§√•√¶√≥√∞√≠√ª√• √±√Æ√≤√∞√≥√§√≠√®√™√® √å√Ç√Ñ"), SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
			if(total_arounds == 0) return SCM(playerid, COLOR_GREY, "√Ç √Ç√†√∏√•√¨ √∞√†√©√Æ√≠√• √Æ√≤√±√≥√≤√±√≤√¢√≥√æ√≤ √§√•√¶√≥√∞√≠√ª√• √±√Æ√≤√∞√≥√§√≠√®√™√® √å√Ç√Ñ"), SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
			format(string, 128, "[√Ñ√®√±√Ø√•√≤√∑√•√∞] %s √Ø√Æ√ß√¢√Æ√≠√®√´ √¢ √Ø√Æ√´√®√∂√®√æ | √ë√Æ√Æ√°√π√•√≠√®√•: "CPALEGREEN"%s", GetName(playerid), inputtext);
			SFFM_Call_PD(1, COLOR_LITEBLUE, string); SFFM_Call_PD(2, COLOR_LITEBLUE, string); SFFM_Call_PD(21, COLOR_LITEBLUE, string); SFFM_Call_PD(22, COLOR_LITEBLUE, string); SFFM_Call_PD(10, COLOR_LITEBLUE, string);
			format(string, 128, "√Ç√¢√•√§√®√≤√• "CCYAN"/takecall %d"CLITEBLUE", √∑√≤√Æ√°√ª √Ø√∞√®√≠√ø√≤√º √¢√ª√ß√Æ√¢", playerid);
			SFFM_Call_PD(1, COLOR_LITEBLUE, string); SFFM_Call_PD(2, COLOR_LITEBLUE, string); SFFM_Call_PD(21, COLOR_LITEBLUE, string); SFFM_Call_PD(22, COLOR_LITEBLUE, string); SFFM_Call_PD(10, COLOR_LITEBLUE, string);
			SCM(playerid, 0x00CCFFFF, "[√Ñ√®√±√Ø√•√≤√∑√•√∞] √Ç√±√• √§√•√¶√≥√∞√≠√ª√• √±√Æ√≤√∞√≥√§√≠√®√™√® √å√Ç√Ñ √¢ √Ç√†√∏√•√¨ √∞√†√©√Æ√≠√• √°√ª√´√® √Æ√Ø√Æ√¢√•√π√•√≠√ª. √é√¶√®S√≠√©√≤√• √Ø√∞√®¬∏√¨√† √¢√ª√ß√Æ√¢√†");
			SetPVarInt(playerid, "ring_mvd", true);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
		}
	case 247: {
			if(!response) return SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
			new total_arounds = 0;
			foreach(new i:Player) {
				if(!player_is_taxi[i]) continue;
				if(ProxDetectorS(275.0, playerid, i)) total_arounds ++;
			}
			if(!strlen(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "[√Ñ√®√±√Ø√•√≤√∑√•√∞] √ü √≠√• √¨√Æ√£√≥ √Æ√°√∞√†√°√Æ√≤√†√≤√º √Ç√†√∏√• √±√Æ√Æ√°√π√•√≠√®√•"), SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
			if(GetPlayerInterior(playerid) != 0) return SCM(playerid, COLOR_GREY, "√Ç √Ç√†√∏√•√¨ √∞√†√©√Æ√≠√• √Æ√≤√±√≥√≤√±√≤√¢√≥√æ√≤ √≤√†√™√±√®√±√≤√ª"), SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
			if(total_arounds == 0) return SCM(playerid, COLOR_GREY, "√Ç √Ç√†√∏√•√¨ √∞√†√©√Æ√≠√• √Æ√≤√±√≥√≤√±√≤√¢√≥√æ√≤ √≤√†√™√±√®√±√≤√ª"), SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
			format(string, 128, "[√Ñ√®√±√Ø√•√≤√∑√•√∞] %s √¢√ª√ß√ª√¢√†√•√≤ √≤√†√™√±√® | √ë√Æ√Æ√°√π√•√≠√®√•: "CPALEGREEN"%s", GetName(playerid), inputtext); message_taxi_around(playerid, 0x009933FF, string);
			format(string, 128, "√Ç√¢√•√§√®√≤√• "CCYAN"/to %d{009933}, √∑√≤√Æ√°√ª √Ø√∞√®√≠√ø√≤√º √¢√ª√ß√Æ√¢", playerid); message_taxi_around(playerid, 0x009933FF, string);
			SCMF(playerid, 0x009933FF, "[√Ñ√®√±√Ø√•√≤√∑√•√∞] √Ç√±√• √≤√†√™√±√®√±√≤√ª √¢ √Ç√†√∏√•√¨ √∞√†√©√Æ√≠√• √°√ª√´√® √Æ√Ø√Æ√¢√•√π√•√≠√ª "CLITEBLUE"(%d √∑√•√´.){009933}. √é√¶√®S√≠√©√≤√• √Ø√∞√®¬∏√¨√† √¢√ª√ß√Æ√¢√†", total_arounds);
			SetPVarInt(playerid, "ring_taxi", true);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
		}
	case 246: {
			if(!response) return SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
			new total_arounds = 0;
			foreach(new i:Player) {
				if(!IsAMedic(i)) continue;
				if(GetVehicleModel(GetPlayerVehicleID(i)) != 416) continue;
				if(ProxDetectorS(275.0, playerid, i)) total_arounds ++;
			}
			if(!strlen(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "[√Ñ√®√±√Ø√•√≤√∑√•√∞] √ü √≠√• √¨√Æ√£√≥ √Æ√°√∞√†√°√Æ√≤√†√≤√º √Ç√†√∏√• √±√Æ√Æ√°√π√•√≠√®√•"), SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
			if(GetPlayerInterior(playerid) != 0) return SCM(playerid, COLOR_GREY, "√Ç √Ç√†√∏√•√¨ √∞√†√©√Æ√≠√• √Æ√≤√±√≥√≤√±√≤√¢√≥√æ√≤ √°√∞√®√£√†√§√ª √±√™√Æ√∞√Æ√© √Ø√Æ√¨√Æ√π√®"), SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
			if(total_arounds == 0) return SCM(playerid, COLOR_GREY, "√Ç √Ç√†√∏√•√¨ √∞√†√©√Æ√≠√• √Æ√≤√±√≥√≤√±√≤√¢√≥√æ√≤ √°√∞√®√£√†√§√ª √±√™√Æ√∞√Æ√© √Ø√Æ√¨√Æ√π√®"), SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
			format(string, 128, "[√Ñ√®√±√Ø√•√≤√∑√•√∞] %s √¢√ª√ß√ª√¢√†√•√≤ √±√™√Æ√∞√≥√æ √Ø√Æ√¨√Æ√π√º | √ë√Æ√Æ√°√π√•√≠√®√•: "CPALEGREEN"%s", GetName(playerid), inputtext);
			SFFM_Call_MZ(4, 0xFF6666FF, string); SFFM_Call_MZ(28, 0xFF6666FF, string); SFFM_Call_MZ(29, 0xFF6666FF, string); SFFM_Call_MZ(23, 0xFF6666FF, string);
			format(string, 128, "√Ç√¢√•√§√®√≤√• "CCYAN"/callto %d{ff6666}, √∑√≤√Æ√°√ª √Ø√∞√®√≠√ø√≤√º √¢√ª√ß√Æ√¢", playerid);
			SFFM_Call_MZ(4, 0xFF6666FF, string); SFFM_Call_MZ(28, 0xFF6666FF, string); SFFM_Call_MZ(29, 0xFF6666FF, string); SFFM_Call_MZ(23, 0xFF6666FF, string);
			SCM(playerid, 0xFF6666FF, "[√Ñ√®√±√Ø√•√≤√∑√•√∞] √Ç√±√• √§√•√¶√≥√∞√≠√ª√• √°√∞√®√£√†√§√ª √±√™√Æ√∞√Æ√© √Ø√Æ√¨√Æ√π√® √¢ √Ç√†√∏√•√¨ √∞√†√©√Æ√≠√• √°√ª√´√® √Æ√Ø√Æ√¢√•√π√•√≠√ª. √é√¶√®S√≠√©√≤√• √Ø√∞√®¬∏√¨√† √¢√ª√ß√Æ√¢√†");
			SetPVarInt(playerid, "ring_mz", true);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
		}
	case 7495: {
			if(!response) return 1;
			if(!strlen(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "√ç√†√°√∞√†√≠ √≠√•√¢√•√∞√≠√ª√© √≠√Æ√¨√•√∞"), PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
			for(new i = strlen(inputtext) - 1; i != -1; i --) {
				switch(inputtext[i]) {
					case '0'..'9': continue;
					default: return SCM(playerid, COLOR_LIGHTGREY, "√ç√†√°√∞√†√≠ √≠√•√¢√•√∞√≠√ª√© √≠√Æ√¨√•√∞"), PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
				}
			}
			if(GetPVarInt(playerid, "gag")) return SCM(playerid, COLOR_LIGHTRED, "√ì √Ç√†√± √™√´√ø√Ø, √Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Æ√≤√Ø√∞√†√¢√®√≤√º √±√Æ√Æ√°√π√•√≠√®√•");
			if(PhoneOnline{playerid}) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√†√∏ √≤√•√´√•√¥√Æ√≠ "CERROR"√Æ√≤√™√´√æ√∑¬∏√≠"CLIGHTGREY". √Ñ√´√ø √Æ√≤√Ø√∞√†√¢√´√•√≠√®√ø √±√Æ√Æ√°√π√•√≠√®√ø √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √•√£√Æ {00cc66}√¢√™√´√æ√∑√®√≤√º");
			if(pData[playerid][pPnumber] == strval(inputtext)) return SCM(playerid, COLOR_GREY, "√ç√†√°√∞√†√≠√≠√ª√© √Ç√†√¨√® √≠√Æ√¨√•√∞ √≠√• √Æ√°√±√´√≥√¶√®√¢√†√•√≤√±√ø"), PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
			if(pData[playerid][pMuteTime]) return SCM(playerid, COLOR_ERROR, "√ù√≤√† √¥√≥√≠√™√∂√®√ø √≠√•√§√Æ√±√≤√≥√Ø√≠√† √¢√Æ √¢√∞√•√¨√ø √°√´√Æ√™√®√∞√Æ√¢√™√® √∑√†√≤√†");
			SPD(playerid, 661, DIALOG_STYLE_INPUT, ""CPALEGREEN"√é√≤√Ø√∞√†√¢√´√•√≠√®√• √±√Æ√Æ√°√π√•√≠√®√ø", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√Æ√Æ√°√π√•√≠√®√• √§√´√ø √†√°√Æ√≠√•√≠√≤√† √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√é√≤√Ø√∞√†√¢√®√≤√º", "Cerrar");
			SetPVarInt(playerid, "SmsText", strval(inputtext));
		}
	case 415: {
		if(!response) return 1;
		SPD(playerid, 437, DIALOG_STYLE_INPUT, ""CPALEGREEN"√Ä√¢√≤√Æ√∞√®√ß√†√∂√®√ø √†√™√™√†√≥√≠√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √Ø√†√∞√Æ√´√º √Æ√≤ √†√™√™√†√≥√≠√≤√† √¢ √Ø√∞√®√´√Æ√¶√•√≠√®√® √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
	}
	case 471: {
		if(!response) return 1;
		if(!strlen(inputtext)) return SPD(playerid, 471, DIALOG_STYLE_INPUT, "{cc3344}√ë√Æ√ßS√≠√≠√®√• √†√™√™√†√≥√≠√≤√†", ""CWHITE"√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø, √¢√¢√•√§√®√≤√• √Ø√†√∞√Æ√´√º √§√´√ø √Ç√†√∏√•√£√Æ\n√†√™√™√†√≥√≠√≤√† √¢ √Ø√∞√®√´√Æ√¶√•√≠√®√® √¢ √Ø√Æ√´√• √≠√®√¶√•\n\n"CORANGE"√è√∞√®√¨√•√∑√†√≠√®√•: √ó√≤√Æ√°√ª √≠√• √ß√†√°√ª√≤√º √Ø√†√∞√Æ√´√º, √∞√•√™√Æ√¨√•√≠√§√≥√•√¨\n√ß√†√Ø√®√±√†√≤√º √•√£√Æ √™√≥S√≠-√≠√®√°√≥√§√º", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
		pData[playerid][pPayAcc] = true;
		UpdatePlayerData(playerid, "pPayAcc", 1);
		strmid(pData[playerid][pPayKey], inputtext, 0, strlen(inputtext), 255);
		UpdatePlayerDataEx(playerid, "pPayKey", pData[playerid][pPayKey]);
		PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
		SPD(playerid, 415, DIALOG_STYLE_MSGBOX, "{40bf80}√à√≠√¥√Æ√∞√¨√†√∂√®√ø", ""CWHITE"√Ä√™√™√†√≥√≠√≤ √±√Æ√ßS√≠√≠. √ó√≤√Æ√°√ª √Ø√•√∞√•√©√≤√® √¢ √¨√•√≠√æ √†√™√™√†√≥√≠√≤√†, √≠√†√¶√¨√®√≤√• "CCYAN"\"√è√•√∞√•√©√≤√®\""CWHITE".", "√è√•√∞√•√©√≤√®", "Cerrar");
	}
	case 722: {
		if(!response) return SCM(playerid, 0xAA3333AA, "√Ç√ª √¢√ª√∏√´√® √®√ß √Ø√∞√®√´√Æ√¶√•√≠√®√ø");
		switch(listitem) {
			case 0: show_menu_bank(playerid);
			case 1: SPD(playerid, 726, DIALOG_STYLE_INPUT, ""CPALEGREEN"√è√Æ√Ø√Æ√´√≠√•√≠√®√• √≤√•√´√•√¥√Æ√≠√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¨√•√∞ √≤√•√´√•√¥√Æ√≠√†, √™√Æ√≤√Æ√∞√ª√©\n√µ√Æ√≤√®√≤√• √Ø√Æ√Ø√Æ√´√≠√®√≤√º √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
		}
	}
	case 726: {
		if(!response) return 1;
		if(!strlen(inputtext)) return SPD(playerid, 726, DIALOG_STYLE_INPUT, ""CPALEGREEN"√è√Æ√Ø√Æ√´√≠√•√≠√®√• √≤√•√´√•√¥√Æ√≠√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¨√•√∞ √≤√•√´√•√¥√Æ√≠√†, √™√Æ√≤√Æ√∞√ª√©\n√µ√Æ√≤√®√≤√• √Ø√Æ√Ø√Æ√´√≠√®√≤√º √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
	  	for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return SPD(playerid, 726, DIALOG_STYLE_INPUT, ""CPALEGREEN"√è√Æ√Ø√Æ√´√≠√•√≠√®√• √≤√•√´√•√¥√Æ√≠√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¨√•√∞ √≤√•√´√•√¥√Æ√≠√†, √™√Æ√≤√Æ√∞√ª√©\n√µ√Æ√≤√®√≤√• √Ø√Æ√Ø√Æ√´√≠√®√≤√º √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
			}
		}
		SetPVarInt(playerid, "nmr_perevod", strval(inputtext));
		SPD(playerid, 727, DIALOG_STYLE_INPUT, ""CPALEGREEN"√è√Æ√Ø√Æ√´√≠√•√≠√®√• √≤√•√´√•√¥√Æ√≠√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥ √Ø√Æ√Ø√Æ√´√≠√•√≠√®√ø:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
	}
	case 727: {
		if(!response) return SPD(playerid, 726, DIALOG_STYLE_INPUT, ""CPALEGREEN"√è√Æ√Ø√Æ√´√≠√•√≠√®√• √≤√•√´√•√¥√Æ√≠√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¨√•√∞ √≤√•√´√•√¥√Æ√≠√†, √™√Æ√≤√Æ√∞√ª√©\n√µ√Æ√≤√®√≤√• √Ø√Æ√Ø√Æ√´√≠√®√≤√º √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar"), DeletePVar(playerid, "nmr_perevod");
		if(!strlen(inputtext)) return SPD(playerid, 727, DIALOG_STYLE_INPUT, ""CPALEGREEN"√è√Æ√Ø√Æ√´√≠√•√≠√®√• √≤√•√´√•√¥√Æ√≠√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥ √Ø√Æ√Ø√Æ√´√≠√•√≠√®√ø:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
	  	for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return SPD(playerid, 727, DIALOG_STYLE_INPUT, ""CPALEGREEN"√è√Æ√Ø√Æ√´√≠√•√≠√®√• √≤√•√´√•√¥√Æ√≠√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥ √Ø√Æ√Ø√Æ√´√≠√•√≠√®√ø:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
			}
		}
        new val = strval(inputtext);
        if(val < 1 || val > 10000) return SCM(playerid, COLOR_LIGHTGREY, "√Ñ√Æ√Ø√≥√±√≤√®√¨√Æ √Æ√≤ 1$ √§√Æ 10000$");
		mysql_format(mysql_Handle, string, 96, "SELECT `pCashNumber`, `Name` FROM `accounts` WHERE `pPnumber` = %d", GetPVarInt(playerid, "nmr_perevod"));
		mysql_tquery(mysql_Handle, string, "perevod_phone", "iii", playerid, val, GetPVarInt(playerid, "nmr_perevod"));
		DeletePVar(playerid, "nmr_perevod");
	}
	case 476: {
		if(!response) return 1;
		if(pData[playerid][pLevel] < 6) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CERROR"√é√∏√®√°√™√†", ""CWHITE"√Ñ√´√ø √±√Æ√ßS√≠√≠√®√ø √†√™√™√†√≥√≠√≤√† √¢ √Ø√∞√®√´√Æ√¶√•√≠√®√® \"PayMents\"\n√≠√•√Æ√°√µ√Æ√§√®√¨√Æ √Ø√∞√Æ√¶√®√¢√†√≤√º √¢ √∏√≤√†√≤√• √≠√• √¨√•√≠√•√• 6-√≤√® √´√•√≤\n(√®√¨√•√≤√º 6 √®√£√∞√Æ√¢√Æ√© √≥√∞√Æ√¢√•√≠√º).", "Cerrar", "");
		SPD(playerid, 471, DIALOG_STYLE_INPUT, "{cc3344}√ë√Æ√ßS√≠√≠√®√• √†√™√™√†√≥√≠√≤√†", ""CWHITE"√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø, √¢√¢√•√§√®√≤√• √Ø√†√∞√Æ√´√º √§√´√ø √Ç√†√∏√•√£√Æ\n√†√™√™√†√≥√≠√≤√† √¢ √Ø√∞√®√´√Æ√¶√•√≠√®√® √¢ √Ø√Æ√´√• √≠√®√¶√•\n\n"CORANGE"√è√∞√®√¨√•√∑√†√≠√®√•: √ó√≤√Æ√°√ª √≠√• √ß√†√°√ª√≤√º √Ø√†√∞√Æ√´√º, √∞√•√™√Æ√¨√•√≠√§√≥√•√¨\n√ß√†√Ø√®√±√†√≤√º √•√£√Æ √™√≥S√≠-√≠√®√°√≥√§√º", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
	}
	case 437: {
		if(!response) return 1;
		if(!strlen(inputtext)) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CERROR"√é√∏√®√°√™√†", ""CWHITE"√Ç√ª √§√Æ√Ø√≥√±√≤√®√´√® √Æ√∏√®√°√™√≥ √Ø√∞√® √¢√¢√Æ√§√• √Ø√†√∞√Æ√´√ø.\n√è√Æ√Ø√∞√Æ√°√≥√©√≤√• √•√π¬∏ √∞√†√ß.", "Cerrar", "");
		if(!strcmp(inputtext, pData[playerid][pPayKey], false)) SPD(playerid, 722, DIALOG_STYLE_LIST, "{ff9966}√å√•√≠√æ \"PayMents\"", "{cc3344}[1] "CWHITE"√å√Æ√® √±√∑√•√≤√†\n{cc3344}[2] "CWHITE"√è√Æ√Ø√Æ√´√≠√®√≤√º √§√∞√≥√£√Æ√© √≠√Æ√¨√•√∞ √≤√•√´√•√¥√Æ√≠√†", "Seleccione", "√Ç√ª√©√≤√®");
		else SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CERROR"√é√∏√®√°√™√†", ""CWHITE"√Ç√ª √§√Æ√Ø√≥√±√≤√®√´√® √Æ√∏√®√°√™√≥ √Ø√∞√® √¢√¢√Æ√§√• √Ø√†√∞√Æ√´√ø.\n√è√Æ√Ø√∞√Æ√°√≥√©√≤√• √•√π¬∏ √∞√†√ß.", "Cerrar", "");
	}
	case 950: {
		if(!response) return 1;
		JobL[playerid] = false;
		JobLCheck[playerid] = false;
		Hook_GivePlayerMoney(playerid, JobLCash[playerid]);
		if(pData[playerid][pMember]) SetPlayerSkin(playerid, pData[playerid][pModel]);
		else SetPlayerSkin(playerid, pData[playerid][pChar]);
		lable_matr[playerid] = false;
		ClearAnimations(playerid);
		SetPlayerSpecialAction(playerid, 0);
		format(string, 22, "~b~+%d$", JobLCash[playerid]);
		GameTextForPlayer(playerid, string, 3000, 1);
		DisablePlayerCheckpoint(playerid);
		format(string, 64, "√Ç√†√∏ √∞√†√°√Æ√∑√®√© √§√•√≠√º √ß√†√¢√•√∞√∏¬∏√≠. √á√†√∞√Ø√´√†√≤√†: {00cc00}%d$", JobLCash[playerid]);
		JobLCash[playerid] = 0;
		SCM(playerid, COLOR_BLUE, string);
	}
	case 578: {
		if(!response) return 1;
		SetPlayerSkin(playerid, 8);
		JobL[playerid] = true;
		new rand = random(sizeof(Drova));
		SetPlayerCheckpoint(playerid,Drova[rand][0],Drova[rand][1],Drova[rand][2], 4.0);
		SCM(playerid,0xCCCC66FF,"√ê√†√°√Æ√≤√† √≠√† √´√•√±√Æ√Ø√®√´√™√• √≠√†√∑√†√≤√†");
		SCM(playerid,0xCCCC66FF,"√é√≤√Ø√∞√†√¢√´√ø√©√≤√•√±√º √™ √§√•√∞√•√¢√≥, √Ø√Æ√¨√•√∑√•√≠√≠√Æ√¨√≥ √≠√† √Ç√†√∏√•√¨ GPS √® √Ø√∞√®√±√≤√≥√Ø√†√©√≤√• √™ √∞√≥√°√™√•");
	}
	case 294: {
		TogglePlayerControllable(playerid, 1);
		if(!response) return RemovePlayerFromVehicle(playerid);
		if(pData[playerid][pCash] < 100) {
			RemovePlayerFromVehicle(playerid);
			return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Æ√Ø√´√†√≤√ª √†√∞√•√≠√§√ª");
		}
		new vehicleid = GetPlayerVehicleID(playerid);
		af_carID[playerid] = vehicleid;
		rentID[vehicleid] = playerid;
	    SetPVarInt(playerid, "veh_rent", vehicleid);
	    Hook_GivePlayerMoney(playerid, -100);
	    SCM(playerid,COLOR_YELLOW,"√Ç√ª √≥√±√Ø√•√∏√≠√Æ √¢√ß√ø√´√® √£√∞√≥√ß√Æ√¢√®√™ √¢ √†√∞√•√≠√§√≥");
		SCM(playerid,COLOR_YELLOW,"√è√Æ√§√∫√•√§√º√≤√• √™ √Æ√§√≠√Æ√© √®√ß √ß√†√£√∞√≥√ß√Æ√∑√≠√ª√µ √ß√Æ√≠ √® √Ø√Æ√£√∞√≥√ß√®√≤√• √†√¢√≤√Æ√¨√Æ√°√®√´√º √™√Æ√¨√†√≠√§√Æ√© "CORANGE"/loadcar");
		SCM(playerid, COLOR_MAIN, "Usar√≤√• "CLITEBLUE"/lock 2 "CMAIN"√§√´√ø √°√´√Æ√™√®√∞√Æ√¢√™√® √ß√†√¨√™√Æ√¢");
	    SCM(playerid, COLOR_GREY, "√ó√≤√Æ√°√ª √∞√†√ß√Æ√∞√¢√†√≤√º √§√Æ√£√Æ√¢√Æ√∞ √†√∞√•√≠√§√ª, Usar√≤√• "CPALEGREEN"/unrent");
	}
	case 779: {
		TogglePlayerControllable(playerid, 1);
		if(!response) return RemovePlayerFromVehicle(playerid);
		if(pData[playerid][pCash] < 150) {
			RemovePlayerFromVehicle(playerid);
			return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Æ√Ø√´√†√≤√ª √†√∞√•√≠√§√ª");
		}
		SCM(playerid, COLOR_LITEBLUE, "√Ñ√´√ø √≠√†√∑√†√´√† √®√´√® √ß√†√¢√•√∞√∏√•√≠√®√ø √∞√†√°√Æ√≤√ª √¢√Æ√§√®√≤√•√´√ø √†√¢√≤√Æ√°√≥√±√† Usar√≤√• "CCYAN"√™√´√†√¢√®√∏√≥ 2");
		Hook_GivePlayerMoney(playerid, -150);
		arenda_bus[playerid] = true;
		arenda_bus_id[playerid] = GetPlayerVehicleID(playerid);
		GameTextForPlayer(playerid, "~r~-150$", 3000, 1);
	}
	case 778: {
		TogglePlayerControllable(playerid, 1);
		if(!response) return RemovePlayerFromVehicle(playerid);
		if(pData[playerid][pCash] < 400) {
			RemovePlayerFromVehicle(playerid);
			return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Æ√Ø√´√†√≤√ª √†√∞√•√≠√§√ª");
		}
		SCM(playerid, COLOR_LITEBLUE, "√Ñ√´√ø √≠√†√∑√†√´√† √®√´√® √ß√†√¢√•√∞√∏√•√≠√®√ø √∞√†√°√Æ√≤√ª √≤√†√™√±√®√±√≤√† Usar√≤√• "CCYAN"√™√´√†√¢√®√∏√≥ 2");
		Hook_GivePlayerMoney(playerid, -400);
		arenda_taxi[playerid] = true;
		arenda_taxi_id[playerid] = GetPlayerVehicleID(playerid);
		GameTextForPlayer(playerid, "~r~-400$", 3000, 1);
	}
	case 788: {
		if(!response) return 1;
		switch(listitem) {
			case 0: SPD(playerid, 798, DIALOG_STYLE_INPUT, "{FFCD00}√è√Æ √≤√†√∞√®√¥√≥", ""CWHITE"√à√±√Ø√Æ√´√º√ß√≥√ø √Ω√≤√Æ√≤ √≤√®√Ø, √™√Æ√£S√≠ √¢ √Ç√†√∏√• √≤√†√™√±√®\n√±√ø√§√•√≤ √Ø√†√±√±√†√¶√®√∞, √∞√†√ß √¢ 30 √±√•√™√≥√≠√§ √≥ √≠√•√£√Æ\n√°√≥√§√•√≤ √¢√ß√®√¨√†√≤√º√±√ø √Æ√Ø√∞√•√§√•√´¬∏√≠√≠√†√ø √Ç√†√¨√® √±√≥√¨√¨√†.\n\n√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√†√ø √°√≥√§√•√≤ √¢√ß√®√¨√†√≤√º√±√ø √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
			case 1: {
				if(pData[playerid][pSex] == 1) MeAction(playerid, "√≠√†√∑√†√´ √∞√†√°√Æ√∑√®√© √§√•√≠√º √≤√†√™√±√®√±√≤√†"), SetPlayerChatBubble(playerid, "√ç√†√∑√†√´ √∞√†√°√Æ√∑√®√© √§√•√≠√º", COLOR_PURPLE, 4.0, 5000);
				else MeAction(playerid, "√≠√†√∑√†√´√† √∞√†√°√Æ√∑√®√© √§√•√≠√º √≤√†√™√±√®√±√≤√†"), SetPlayerChatBubble(playerid, "√ç√†√∑√†√´√† √∞√†√°√Æ√∑√®√© √§√•√≠√º", COLOR_PURPLE, 4.0, 5000);
				SCM(playerid, COLOR_MAIN, "√Ç√ª √≠√†√∑√†√´√® √∞√†√°√Æ√≤√≥ √≤√†√™√±√®√±√≤√†. √í√®√Ø √Ç√†√∏√•√£√Æ √≤√†√™√±√®: {cc3344}c √§√Æ√£√Æ√¢√Æ√∞√≠√Æ√© √∂√•√≠√Æ√©");
				SCM(playerid, -1, "√Ç√ª √°√≥√§√•√≤√• √±√†√¨√Æ√±√≤√Æ√ø√≤√•√´√º√≠√Æ √§√Æ√£√Æ√¢√†√∞√®√¢√†√≤√º√±√ø √± √Ø√†√±√±√†√¶√®√∞√Æ√¨ √Æ √∂√•√≠√• La carretera√™√®");
				player_is_taxi[playerid] = true;
				taxi_type[playerid] = 2;
				last_vehiclejob[playerid] = GetPlayerVehicleID(playerid);
				PlayerPlaySound(playerid, 5205, 0.0, 0.0, 0.0);
				taxi3d[GetPlayerVehicleID(playerid)] = Create3DTextLabel("√í√†√™√±√®\n{cc3344}√Ñ√Æ√£√Æ√¢√Æ√∞√≠√†√ø √∂√•√≠√†", 0x66CC00FF, 0.0, 0.0, 0.0, 15.0, 0);
				Attach3DTextLabelToVehicle(taxi3d[GetPlayerVehicleID(playerid)], GetPlayerVehicleID(playerid), 0.0, 0.0, 1.5);
				ChangeVehicleColor(GetPlayerVehicleID(playerid), 1, 0);
			}
		}
	}
	case 899: {
		if(!response) return 1;
		player_is_drivebus[playerid] = false;
		DisablePlayerRaceCheckpoint(playerid); KillTimer(timer_bus[playerid]);
		new Float: car_floathp; GetVehicleHealth(GetPlayerVehicleID(playerid), car_floathp); new car_hp = floatround(car_floathp, floatround_ceil), repair_price = (1000-car_hp)/3;
		SCM(playerid, COLOR_LITEBLUE, "√ê√†√°√Æ√≤√† √¢√Æ√§√®√≤√•√´√ø √†√¢√≤√Æ√°√≥√±√† √ß√†√¢√•√∞√∏√•√≠√†");
		SCMF(playerid, COLOR_LITEBLUE, "√Ç√ª √ß√†√∞√†√°√Æ√≤√†√´√®: {009966}%d$"CLITEBLUE". √á√† √∞√•√¨√Æ√≠√≤ √†√¢√≤√Æ√°√≥√±√†: "CERROR"-%d$", bus_payday[playerid], repair_price);
		SCMF(playerid, COLOR_LITEBLUE, "√Ç√±√•√£√Æ √Ø√•√∞√•√¢√•√ß√•√≠√Æ √Ø√†√±√±√†√¶√®√∞√Æ√¢: {FFCD00}%d", bus_passengers[GetPlayerVehicleID(playerid)]);
		SCM(playerid, 0x009900FF, "√Ñ√•√≠√º√£√® √°√≥√§√≥√≤ √Ø√•√∞√•√∑√®√±√´√•√≠√ª √¢√†√¨ √¢√Æ √¢√∞√•√¨√ø √¢√ªS√≠√∑√® √ß√†√∞√Ø√´√†√≤√ª");
		bus_passengers[GetPlayerVehicleID(playerid)] = 0, bus_driverid[GetPlayerVehicleID(playerid)] = INVALID_PLAYER_ID;
		if(repair_price != 0) {
			format(string, 32, "~r~-%d$ ~n~~r~ repair bus", repair_price);
			GameTextForPlayer(playerid, string, 3000, 1);
			Hook_GivePlayerMoney(playerid, -repair_price);
		}
		GivePayDayMoney(playerid, bus_payday[playerid]);
		last_vehiclejob[playerid] = -1;
		arenda_bus[playerid] = false;
		DeletePVar(playerid, "time_busexit");
		arenda_bus_id[playerid] = -1;
		SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	}
	case 898: {
		if(!response) return 1;
		DisablePlayerRaceCheckpoint(playerid);
		checkpoint_bus[playerid] = 999; checkpoint_bus_mine[playerid] = 999; checkpoint_bus_fores[playerid] = 999;
		if(pData[playerid][pSex] == 1) SetPlayerChatBubble(playerid, "√ç√†√∑√†√´ √∞√†√°√Æ√∑√®√© √§√•√≠√º", COLOR_PURPLE, 4.0, 5000);
		else SetPlayerChatBubble(playerid, "√ç√†√∑√†√´√† √∞√†√°√Æ√∑√®√© √§√•√≠√º", COLOR_PURPLE, 4.0, 5000);
		new m_TEXT[30];
		switch(listitem) {
			case 0: {
				if(pData[playerid][pSex] == 1) MeAction(playerid, "√≠√†√∑√†√´ √∞√†√°√Æ√∑√®√© √§√•√≠√º √¢√Æ√§√®√≤√•√´√ø √†√¢√≤√Æ√°√≥√±√† √Ø√Æ √¨√†√∞√∏√∞√≥√≤√≥ ¬´√ã√ë ‚Äî √ë√°√Æ√∞√™√† √†√¢√≤√Æ¬ª");
				else MeAction(playerid, "√≠√†√∑√†√´√† √∞√†√°√Æ√∑√®√© √§√•√≠√º √¢√Æ√§√®√≤√•√´√ø √†√¢√≤√Æ√°√≥√±√† √Ø√Æ √¨√†√∞√∏√∞√≥√≤√≥ ¬´√ã√ë ‚Äî √ë√°√Æ√∞√™√† √†√¢√≤√Æ¬ª");
				SetPlayerRaceCheckpoint(playerid, 1, 1121.1616, -1743.5818, 13.5320, 0.0, 0.0, 0.0, 4.0);
				checkpoint_bus[playerid] = 0;
				m_TEXT="√ã√ë ‚Äî √ë√°√Æ√∞√™√† √†√¢√≤√Æ";
			}
			case 1: {
				if(pData[playerid][pSex] == 1) MeAction(playerid, "√≠√†√∑√†√´ √∞√†√°√Æ√∑√®√© √§√•√≠√º √¢√Æ√§√®√≤√•√´√ø √†√¢√≤√Æ√°√≥√±√† √Ø√Æ √¨√†√∞√∏√∞√≥√≤√≥ ¬´√ã√ë ‚Äî √ã√•√±√Æ√Ø√®√´√™√†¬ª");
				else MeAction(playerid, "√≠√†√∑√†√´√† √∞√†√°√Æ√∑√®√© √§√•√≠√º √¢√Æ√§√®√≤√•√´√ø √†√¢√≤√Æ√°√≥√±√† √Ø√Æ √¨√†√∞√∏√∞√≥√≤√≥ ¬´√ã√ë ‚Äî √ã√•√±√Æ√Ø√®√´√™√†¬ª");
				SetPlayerRaceCheckpoint(playerid, 1, 1121.8436,-1743.6327,13.5318, 0.0,0.0,0.0, 4.0);
				checkpoint_bus_fores[playerid] = 0;
				m_TEXT="√ã√ë ‚Äî √ã√•√±√Æ√Ø√®√´√™√†";
			}
			case 2: {
				if(pData[playerid][pSex] == 1) MeAction(playerid, "√≠√†√∑√†√´ √∞√†√°√Æ√∑√®√© √§√•√≠√º √¢√Æ√§√®√≤√•√´√ø √†√¢√≤√Æ√°√≥√±√† √Ø√Æ √¨√†√∞√∏√∞√≥√≤√≥ ¬´√ã√ë ‚Äî √ò√†√µ√≤√† ‚Äî √Ä√¢√≤√Æ√∏√™√Æ√´√†¬ª");
				else MeAction(playerid, "√≠√†√∑√†√´√† √∞√†√°√Æ√∑√®√© √§√•√≠√º √¢√Æ√§√®√≤√•√´√ø √†√¢√≤√Æ√°√≥√±√† √Ø√Æ √¨√†√∞√∏√∞√≥√≤√≥ ¬´√ã√ë ‚Äî √ò√†√µ√≤√† ‚Äî √Ä√¢√≤√Æ√∏√™√Æ√´√†¬ª");
				SetPlayerRaceCheckpoint(playerid, 1, 1122.4507,-1744.0195,13.5317, 0.0, 0.0, 0.0, 4.0);
				checkpoint_bus_mine[playerid] = 0;
				m_TEXT="√ã√ë ‚Äî √ò√†√µ√≤√† ‚Äî √Ä√¢√≤√Æ√∏√™√Æ√´√†";
			}
		}

		new car = GetPlayerVehicleID(playerid);
		new numobj;
		if(car==veh_bus[0]) numobj=0;
		if(car==veh_bus[0]+1) numobj=1;
		if(car==veh_bus[0]+2) numobj=2;
		if(car==veh_bus[0]+3) numobj=3;
		if(car==veh_bus[0]+4) numobj=4;
		if(car==veh_bus[0]+5) numobj=5;
		if(car==veh_bus[0]+6) numobj=6;
		if(car==veh_bus[0]+7) numobj=7;
		if(car==veh_bus[0]+8) numobj=8;
		if(car==veh_bus[0]+9) numobj=9;
		if(car==veh_bus[0]+10) numobj=10;
		if(car==veh_bus[0]+11) numobj=11;
		if(car==veh_bus[0]+12) numobj=12;
		if(car==veh_bus[1]) numobj=13;

		DestroyObject(bus_text1[numobj]);
		DestroyObject(bus_text2[numobj]);

		bus_text1[numobj] = CreateObject(19482, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 300.000000);
   		bus_text2[numobj] = CreateObject(19482, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 300.000000);
	    SetObjectMaterialText(bus_text1[numobj], m_TEXT, 0, 130, "TUNGA", 50, 1, -1, 0, 0);
	    SetObjectMaterialText(bus_text2[numobj], m_TEXT, 0, 130, "TUNGA", 50, 1, -1, 0, 2);
	    AttachObjectToVehicle(bus_text1[numobj], car, -1.310000, 0.440000, -0.600000, 0.000000, 0.000000, -180.000000);
    	AttachObjectToVehicle(bus_text2[numobj], car, 1.310000, 0.440000, -0.600000, 0.000000, 0.000000, 0.000000);

		PlayerPlaySound(playerid, 5201, 0.0, 0.0, 0.0);
		bus_payday[playerid] = 0, bus_passengers[GetPlayerVehicleID(playerid)] = 0, bus_driverid[GetPlayerVehicleID(playerid)] = playerid;
		player_is_drivebus[playerid] = true;
		last_vehiclejob[playerid] = GetPlayerVehicleID(playerid);
		SCM(playerid, -1, "√ë√´√•√§√≥√©√≤√• √Ø√Æ √¨√†√∞√™√•√∞√†√¨ √≠√† √™√†√∞√≤√• √® √Æ√±√≤√†√≠√†√¢√´√®√¢√†√©√≤√•√±√º √≠√† √Æ√±√≤√†√≠√Æ√¢√Æ√∑√≠√ª√µ √Ø√≥√≠√™√≤√†√µ");
	}
	case 798: {
		if(!response) return 1;
		if(!strlen(inputtext)) return SPD(playerid, 798, DIALOG_STYLE_INPUT, "{FFCD00}√è√Æ √≤√†√∞√®√¥√≥", ""CWHITE"√à√±√Ø√Æ√´√º√ß√≥√ø √Ω√≤√Æ√≤ √≤√®√Ø, √™√Æ√£S√≠ √¢ √Ç√†√∏√• √≤√†√™√±√®\n√±√ø√§√•√≤ √Ø√†√±√±√†√¶√®√∞, √∞√†√ß √¢ 30 √±√•√™√≥√≠√§ √≥ √≠√•√£√Æ\n√°√≥√§√•√≤ √¢√ß√®√¨√†√≤√º√±√ø √Æ√Ø√∞√•√§√•√´¬∏√≠√≠√†√ø √Ç√†√¨√® √±√≥√¨√¨√†.\n\n√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√†√ø √°√≥√§√•√≤ √¢√ß√®√¨√†√≤√º√±√ø √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
       	for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return SPD(playerid, 798, DIALOG_STYLE_INPUT, "{FFCD00}√è√Æ √≤√†√∞√®√¥√≥", ""CWHITE"√à√±√Ø√Æ√´√º√ß√≥√ø √Ω√≤√Æ√≤ √≤√®√Ø, √™√Æ√£S√≠ √¢ √Ç√†√∏√• √≤√†√™√±√®\n√±√ø√§√•√≤ √Ø√†√±√±√†√¶√®√∞, √∞√†√ß √¢ 30 √±√•√™√≥√≠√§ √≥ √≠√•√£√Æ\n√°√≥√§√•√≤ √¢√ß√®√¨√†√≤√º√±√ø √Æ√Ø√∞√•√§√•√´¬∏√≠√≠√†√ø √Ç√†√¨√® √±√≥√¨√¨√†.\n\n√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√†√ø √°√≥√§√•√≤ √¢√ß√®√¨√†√≤√º√±√ø √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
			}
		}
        if(strval(inputtext) < 10 || strval(inputtext) > 300) return SCM(playerid, COLOR_GREY, "√Ç√¢√•√§√•√≠√† √≠√•√¢√•√∞√≠√†√ø √±√≥√¨√¨√†. √Ñ√Æ√Ø√≥√±√≤√®√¨√Æ √Æ√≤ 10$ √§√Æ 300$"), SPD(playerid, 798, DIALOG_STYLE_INPUT, "{FFCD00}√è√Æ √≤√†√∞√®√¥√≥", ""CWHITE"√à√±√Ø√Æ√´√º√ß√≥√ø √Ω√≤√Æ√≤ √≤√®√Ø, √™√Æ√£S√≠ √¢ √Ç√†√∏√• √≤√†√™√±√®\n√±√ø√§√•√≤ √Ø√†√±√±√†√¶√®√∞, √∞√†√ß √¢ 30 √±√•√™√≥√≠√§ √≥ √≠√•√£√Æ\n√°√≥√§√•√≤ √¢√ß√®√¨√†√≤√º√±√ø √Æ√Ø√∞√•√§√•√´¬∏√≠√≠√†√ø √Ç√†√¨√® √±√≥√¨√¨√†.\n\n√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√†√ø √°√≥√§√•√≤ √¢√ß√®√¨√†√≤√º√±√ø √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
		if(pData[playerid][pSex] == 1) MeAction(playerid, "√≠√†√∑√†√´ √∞√†√°√Æ√∑√®√© √§√•√≠√º √≤√†√™√±√®√±√≤√†"), SetPlayerChatBubble(playerid, "√ç√†√∑√†√´ √∞√†√°√Æ√∑√®√© √§√•√≠√º", COLOR_PURPLE, 4.0, 5000);
		else MeAction(playerid, "√≠√†√∑√†√´√† √∞√†√°√Æ√∑√®√© √§√•√≠√º √≤√†√™√±√®√±√≤√†"), SetPlayerChatBubble(playerid, "√ç√†√∑√†√´√† √∞√†√°√Æ√∑√®√© √§√•√≠√º", COLOR_PURPLE, 4.0, 5000);
		player_is_taxi[playerid] = true;
		taxi_type[playerid] = 1;
		PlayerPlaySound(playerid, 5205, 0.0, 0.0, 0.0);
		taxi_tarif[playerid] = strval(inputtext);
		last_vehiclejob[playerid] = GetPlayerVehicleID(playerid);
		format(string, 45, "√í√†√™√±√®\n"CYELLOW"√è√Æ √≤√†√∞√®√¥√≥ (%d$)", strval(inputtext));
		taxi3d[GetPlayerVehicleID(playerid)] = Create3DTextLabel(string, 0x66CC00FF, 0.0, 0.0, 0.0, 15.0, 0);
		Attach3DTextLabelToVehicle(taxi3d[GetPlayerVehicleID(playerid)], GetPlayerVehicleID(playerid), 0.0, 0.0, 1.5);
		SCMF(playerid, COLOR_MAIN, "√Ç√ª √≠√†√∑√†√´√® √∞√†√°√Æ√≤√≥ √≤√†√™√±√®√±√≤√†. √í√®√Ø √Ç√†√∏√•√£√Æ √≤√†√™√±√®: "CYELLOW"√Ø√Æ √≤√†√∞√®√¥√≥ (%d$ √¢ 30 √±√•√™.)", strval(inputtext));
	}
	case 789: {
			if(!response) return 1;
			new Float: car_floathp; GetVehicleHealth(GetPlayerVehicleID(playerid), car_floathp); new car_hp = floatround(car_floathp, floatround_ceil), repair_price = (1000-car_hp)/3;
			if(repair_price == 333) repair_price = 0;
			SCMF(playerid, COLOR_MAIN, "√ê√†√°√Æ√≤√† √≤√†√™√±√®√±√≤√† √ß√†√¢√•√∞√∏√•√≠√†. √Ç√ª √ß√†√∞√†√°√Æ√≤√†√´√®: {009966}%d$"CMAIN". √á√† √∞√•√¨√Æ√≠√≤ √≤√†√™√±√®: "CERROR"-%d$", taxi_payday[playerid], repair_price);
			SCMF(playerid, COLOR_MAIN, "√Ç√±√•√£√Æ √Ø√•√∞√•√¢√•√ß√•√≠√Æ √Ø√†√±√±√†√¶√®√∞√Æ√¢: {FFCD00}%d", taxi_passengers[playerid]);
			SCM(playerid, 0x009900FF, "√Ñ√•√≠√º√£√® √°√≥√§√≥√≤ √Ø√•√∞√•√∑√®√±√´√•√≠√ª √¢√†√¨ √¢√Æ √¢√∞√•√¨√ø √¢√ªS√≠√∑√® √ß√†√∞√Ø√´√†√≤√ª");
			Delete3DTextLabel(taxi3d[GetPlayerVehicleID(playerid)]);
			GivePayDayMoney(playerid, taxi_payday[playerid]);
			if(repair_price != 0) {
				format(string, 32, "~r~-%d$ ~n~~r~ repair taxi", repair_price);
				GameTextForPlayer(playerid, string, 3000, 1);
				Hook_GivePlayerMoney(playerid, -repair_price);
			}
			foreach(new i:Player) {
				if(!passenger_taxien[i] && GetPVarInt(i, "driver_taxi") != playerid) continue;
				KillTimer(timer_taxipas[i]); DeletePVar(i, "driver_taxi"); passenger_taxien[i] = false;
			}
			last_vehiclejob[playerid] = -1;
			SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			DeletePVar(playerid, "time_taxiexit");
			arenda_taxi[playerid] = false;
			arenda_taxi_id[playerid] = -1;
			player_is_taxi[playerid] = false, taxi_type[playerid] = -1, taxi_passengers[playerid] = 0, taxi_payday[playerid] = 0, taxi_tarif[playerid] = -1;
		}
	case 159: {
		if(!response) return 1;
		if(!strlen(inputtext)) return show_paydialog_biz(playerid);
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return show_paydialog_biz(playerid);
			}
		}
		new price_pay, delt = 30-BizInfo[pData[playerid][pBusiness]][bPay], b = pData[playerid][pBusiness];
		switch(BizInfo[b][bTypeBiz]) {
			case 0: price_pay = 1*405;
			case 1: price_pay = 2*405;
			case 2: price_pay = 3*405;
			case 3: price_pay = 4*405;
			case 4: price_pay = 5*405;
			case 5: price_pay = 6*405;
			default: price_pay = 1*405;
		}
		price_pay = price_pay*strval(inputtext);
		if(delt < strval(inputtext)) return SCM(playerid, 0xE5B090FF, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Æ√Ø√´√†√≤√®√≤√º √°√®√ß√≠√•√± √°√Æ√´√•√• √∑√•√¨ √≠√† 30 √§√≠√•√©");
		if(pData[playerid][pBank] < price_pay) return SCMF(playerid, 0xE5B090FF, "√Ñ√´√ø √Æ√Ø√´√†√≤√ª √°√®√ß√≠√•√±√† √≠√† √¢√¢√•√§¬∏√≠√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √§√≠√•√© √≤√∞√•√°√≥√•√≤√±√ø %d$", price_pay);
		BizInfo[b][bPay] += strval(inputtext);
		new strgmt[26];
		format(strgmt, sizeof strgmt, "~r~-%d$ ~n~~r~ bank", price_pay);
		GameTextForPlayer(playerid, strgmt, 3000, 1);
		pData[playerid][pBank] -= price_pay;
		UpdatePlayerData(playerid, "pBank", pData[playerid][pBank]);
        PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		SCMF(playerid, COLOR_PALEGREEN, "√Ç√ª √Æ√Ø√´√†√≤√®√´√® √±√¢√Æ√© √°√®√ß√≠√•√± √•√π¬∏ √≠√† {FFCD00}%d √§√≠√•√©"CPALEGREEN". √ë √Ç√†√∏√•√£√Æ √±√∑¬∏√≤√† √°√ª√´√Æ √±√≠√ø√≤√Æ {009900}%d$", strval(inputtext), price_pay);
		UpdateBusinessData(b, "bPay", BizInfo[b][bPay]);
	}
	case 158: {
		if(!response) return 1;
		if(!strlen(inputtext)) return show_paydialog_home(playerid);
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return show_paydialog_home(playerid);
			}
		}
		new price_pay, delt = 30-HouseInfo[pData[playerid][pHouse]][hPay], h = pData[playerid][pHouse];
		switch(HouseInfo[h][hKlass]) {
			case 1: price_pay = 1*640;
			case 2: price_pay = 2*640;
			case 3: price_pay = 3*640;
			case 4: price_pay = 4*640;
			case 5: price_pay = 5*640;
			default: price_pay = 1*640;
		}
		price_pay = price_pay*strval(inputtext);
		if(HouseInfo[h][hSub]) price_pay = price_pay / 2;
		if(delt < strval(inputtext)) return SCM(playerid, 0xE5B090FF, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Æ√Ø√´√†√≤√®√≤√º √§√Æ√¨ √°√Æ√´√•√• √∑√•√¨ √≠√† 30 √§√≠√•√©");
		if(pData[playerid][pBank] < price_pay) return SCMF(playerid, 0xE5B090FF, "√Ñ√´√ø √Æ√Ø√´√†√≤√ª √§√Æ√¨√† √≠√† √¢√¢√•√§¬∏√≠√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √§√≠√•√© √≤√∞√•√°√≥√•√≤√±√ø %d$", price_pay);
		HouseInfo[h][hPay] += strval(inputtext);
		new strgmt[26];
		format(strgmt, sizeof strgmt, "~r~-%d$ ~n~~r~ bank", price_pay);
		GameTextForPlayer(playerid, strgmt, 3000, 1);
		pData[playerid][pBank] -= price_pay;
		UpdatePlayerData(playerid, "pBank", pData[playerid][pBank]);
        PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		SCMF(playerid, COLOR_PALEGREEN, "√Ç√ª √Æ√Ø√´√†√≤√®√´√® √±√¢√Æ√© √§√Æ√¨ √•√π¬∏ √≠√† {FFCD00}%d √§√≠√•√©"CPALEGREEN". √ë √Ç√†√∏√•√£√Æ √±√∑¬∏√≤√† √°√ª√´√Æ √±√≠√ø√≤√Æ {009900}%d$", strval(inputtext), price_pay);
		SaveHouse(h);
	}
	case 1195: {
		if(!response) return 1;
		if(!strlen(inputtext)) return show_paydialog_garage(playerid);
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return show_paydialog_garage(playerid);
			}
		}
		new val = strval(inputtext);
		new id_garage = pData[playerid][have_garage];
		new price_pay = val * 145, delt = 15 - garage[id_garage][gdays];
		if(delt < val) return SCM(playerid, 0xE5B090FF, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Æ√Ø√´√†√≤√®√≤√º √£√†√∞√†√¶ √°√Æ√´√•√• √∑√•√¨ √≠√† 15 √§√≠√•√©");
		if(pData[playerid][pBank] < price_pay) return SCMF(playerid, 0xE5B090FF, "√Ñ√´√ø √Æ√Ø√´√†√≤√ª √£√†√∞√†√¶√† √≠√† √¢√¢√•√§¬∏√≠√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √§√≠√•√© √≤√∞√•√°√≥√•√≤√±√ø %d$", price_pay);
		garage[id_garage][gdays] += val;
		new query[70];
		mysql_format(mysql_Handle, query, sizeof(query), "UPDATE `garage` SET `days` = %d WHERE `id` = %d", garage[id_garage][gdays], id_garage);
		mysql_tquery(mysql_Handle, query);
		new str_text[26];
		format(str_text, sizeof str_text, "~r~-%d$ ~n~~r~ bank", price_pay);
		GameTextForPlayer(playerid, str_text, 3000, 1);
		pData[playerid][pBank] -= price_pay;
		UpdatePlayerData(playerid, "pBank", pData[playerid][pBank]);
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		SCMF(playerid, COLOR_PALEGREEN, "√Ç√ª √Æ√Ø√´√†√≤√®√´√® √±√¢√Æ√© √£√†√∞√†√¶ √•√π¬∏ √≠√† {FFCD00}%d √§√≠√•√©"CPALEGREEN". √ë √Ç√†√∏√•√£√Æ √±√∑¬∏√≤√† √°√ª√´√Æ √±√≠√ø√≤√Æ {009900}%d$", val, price_pay);
	}
	case 162: {
		if(!response) return 1;
		if(!strlen(inputtext)) return show_paydialog_flat(playerid);
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return show_paydialog_flat(playerid);
			}
		}
		new val = strval(inputtext);
		new id_flat = pData[playerid][pFlat];
		new price_pay = val * 420, delt = 30 - flat_info[id_flat][fl_days];
		if(delt < val) return SCM(playerid, 0xE5B090FF, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Æ√Ø√´√†√≤√®√≤√º √™√¢√†√∞√≤√®√∞√≥ √°√Æ√´√•√• √∑√•√¨ √≠√† 30 √§√≠√•√©");
		if(pData[playerid][pBank] < price_pay) return SCMF(playerid, 0xE5B090FF, "√Ñ√´√ø √Æ√Ø√´√†√≤√ª √™√¢√†√∞√≤√®√∞√ª √≠√† √¢√¢√•√§¬∏√≠√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √§√≠√•√© √≤√∞√•√°√≥√•√≤√±√ø %d$", price_pay);
		flat_info[id_flat][fl_days] += val;
		new fl_query[75];
		mysql_format(mysql_Handle, fl_query, sizeof(fl_query), "UPDATE `flats` SET `_fl_days` = %d WHERE `_fl_id` = %d", flat_info[id_flat][fl_days], id_flat);
		mysql_tquery(mysql_Handle, fl_query);
		new str_text[26];
		format(str_text, sizeof str_text, "~r~-%d$ ~n~~r~ bank", price_pay);
		GameTextForPlayer(playerid, str_text, 3000, 1);
		pData[playerid][pBank] -= price_pay;
		UpdatePlayerData(playerid, "pBank", pData[playerid][pBank]);
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		SCMF(playerid, COLOR_PALEGREEN, "√Ç√ª √Æ√Ø√´√†√≤√®√´√® √±√¢√Æ√æ √™√¢√†√∞√≤√®√∞√≥ √•√π¬∏ √≠√† {FFCD00}%d √§√≠√•√©"CPALEGREEN". √ë √Ç√†√∏√•√£√Æ √±√∑¬∏√≤√† √°√ª√´√Æ √±√≠√ø√≤√Æ {009900}%d$", val, price_pay);
	}
	case 189: {
		if(!response) return 1;
		if(!strlen(inputtext)) return show_paydialog_fuel(playerid);
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return show_paydialog_fuel(playerid);
			}
		}
		new price_pay, price_lastpay, delt = 30-Filling[pData[playerid][pFilling]][fPay], f = pData[playerid][pFilling];
		price_lastpay = Filling[f][fPrice]/10000;
		price_lastpay = price_lastpay*3;
		price_pay = price_lastpay*strval(inputtext);
		if(delt < strval(inputtext)) return SCM(playerid, 0xE5B090FF, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Æ√Ø√´√†√≤√®√≤√º √Ä√á√ë √°√Æ√´√•√• √∑√•√¨ √≠√† 30 √§√≠√•√©");
		if(pData[playerid][pBank] < price_pay) return SCMF(playerid, 0xE5B090FF, "√Ñ√´√ø √Æ√Ø√´√†√≤√ª √Ä√á√ë √≠√† √¢√¢√•√§¬∏√≠√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √§√≠√•√© √≤√∞√•√°√≥√•√≤√±√ø %d$", price_pay);
		Filling[f][fPay] += strval(inputtext);
		new strgmt[26];
		format(strgmt, sizeof strgmt, "~r~-%d$ ~n~~r~ bank", price_pay);
		GameTextForPlayer(playerid, strgmt, 3000, 1);
		pData[playerid][pBank] -= price_pay;
		UpdatePlayerData(playerid, "pBank", pData[playerid][pBank]);
        PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		SCMF(playerid, COLOR_PALEGREEN, "√Ç√ª √Æ√Ø√´√†√≤√®√´√® √±√¢√Æ√æ √Ä√á√ë √•√π¬∏ √≠√† {FFCD00}%d √§√≠√•√©"CPALEGREEN". √ë √Ç√†√∏√•√£√Æ √±√∑¬∏√≤√† √°√ª√´√Æ √±√≠√ø√≤√Æ {009900}%d$", strval(inputtext), price_pay);
		UpdateFuelInfo(playerid, "fPay", Filling[f][fPay]);
	}
	case 157: {
		if(!response) return 1;
		switch(listitem) {
			case 0: {
				if(pData[playerid][pHouse] == -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √§√Æ√¨√†");
				show_paydialog_home(playerid);
			}
			case 1: {
				if(pData[playerid][have_garage] == -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √£√†√∞√†√¶√†");
				show_paydialog_garage(playerid);
			}
			case 2: {
				if(pData[playerid][pFlat] == -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √™√¢√†√∞√≤√®√∞√ª");
				show_paydialog_flat(playerid);
			}
			case 3: show_paydialog_biz(playerid);
			case 4: {
				if(pData[playerid][pFilling] == -1 || strcmp(pData[playerid][pName], Filling[pData[playerid][pFilling]][fOwner], true) == -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √Ä√á√ë");
				show_paydialog_fuel(playerid);
			}
		}
	}
	case 412: {
		if(!response) return 1;
		switch(listitem) {
			case 0: {
				SetPlayerFightingStyle(playerid, FIGHT_STYLE_GRABKICK);
				pData[playerid][pStyle] = 0;
				SCM(playerid, 0x9999FFFF, "√Ç√†√∏ √±√≤√®√´√º √°√Æ√ø √®√ß√¨√•√≠¬∏√≠ √≠√† "CCYAN"√Æ√°√ª√∑√≠√ª√©");
			}
			case 1: {
				if(!pData[playerid][p_style][0]) {
					SCM(playerid, 0xE5B090FF, "√Ç√†√¨ √≠√•√§√Æ√±√≤√≥√Ø√•√≠ √Ω√≤√Æ√≤ √±√≤√®√´√º");
					return SCM(playerid, 0xE5B090FF, "√Ç√ª √¨√Æ√¶√•√≤√• √™√≥√Ø√®√≤√º √•√£√Æ √¢ √∞√†√ß√§√•√´√• √¨√†√£√†√ß√®√≠√† "CCYAN"(/mn > √å√†√£√†√ß√®√≠)");
				}
				SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);
				pData[playerid][pStyle] = 1;
				SCM(playerid, 0x9999FFFF, "√Ç√†√∏ √±√≤√®√´√º √°√Æ√ø √®√ß√¨√•√≠¬∏√≠ √≠√† "CCYAN"√†√¨√•√∞√®√™√†√≠√±√™√®√©");
			}
			case 2: {
				if(!pData[playerid][p_style][1]) {
					SCM(playerid, 0xE5B090FF, "√Ç√†√¨ √≠√•√§√Æ√±√≤√≥√Ø√•√≠ √Ω√≤√Æ√≤ √±√≤√®√´√º");
					return SCM(playerid, 0xE5B090FF, "√Ç√ª √¨√Æ√¶√•√≤√• √™√≥√Ø√®√≤√º √•√£√Æ √¢ √∞√†√ß√§√•√´√• √¨√†√£√†√ß√®√≠√† "CCYAN"(/mn > √å√†√£√†√ß√®√≠)");
				}
				SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU);
				pData[playerid][pStyle] = 2;
				SCM(playerid, 0x9999FFFF, "√Ç√†√∏ √±√≤√®√´√º √°√Æ√ø √®√ß√¨√•√≠¬∏√≠ √≠√† "CCYAN"√ø√Ø√Æ√≠√±√™√®√©");
			}
			case 3: {
				if(!pData[playerid][p_style][2]) {
					SCM(playerid, 0xE5B090FF, "√Ç√†√¨ √≠√•√§√Æ√±√≤√≥√Ø√•√≠ √Ω√≤√Æ√≤ √±√≤√®√´√º");
					return SCM(playerid, 0xE5B090FF, "√Ç√ª √¨√Æ√¶√•√≤√• √™√≥√Ø√®√≤√º √•√£√Æ √¢ √∞√†√ß√§√•√´√• √¨√†√£√†√ß√®√≠√† "CCYAN"(/mn > √å√†√£√†√ß√®√≠)");
				}
				SetPlayerFightingStyle(playerid, FIGHT_STYLE_KNEEHEAD);
				pData[playerid][pStyle] = 3;
				SCM(playerid, 0x9999FFFF, "√Ç√†√∏ √±√≤√®√´√º √°√Æ√ø √®√ß√¨√•√≠¬∏√≠ √≠√† "CCYAN"√∞√≥√±√±√™√®√©");
			}
		}
		UpdatePlayerData(playerid, "pStyle", pData[playerid][pStyle]);
		PlayerPlaySound(playerid, 20803, 0.0, 0.0, 0.0);
	}
	case 698: {
		if(!response) {
			player_is_drivebus[playerid] = false;
			DisablePlayerRaceCheckpoint(playerid); KillTimer(timer_bus[playerid]);
			new Float: car_floathp; GetVehicleHealth(GetPlayerVehicleID(playerid), car_floathp); new car_hp = floatround(car_floathp, floatround_ceil), repair_price = (1000-car_hp)/3;
			SCM(playerid, COLOR_LITEBLUE, "√ê√†√°√Æ√≤√† √¢√Æ√§√®√≤√•√´√ø √†√¢√≤√Æ√°√≥√±√† √ß√†√¢√•√∞√∏√•√≠√†");
			SCMF(playerid, COLOR_LITEBLUE, "√Ç√ª √ß√†√∞√†√°√Æ√≤√†√´√®: {009966}%d$"CLITEBLUE". √á√† √∞√•√¨√Æ√≠√≤ √†√¢√≤√Æ√°√≥√±√†: "CERROR"-%d$", bus_payday[playerid], repair_price);
			SCMF(playerid, COLOR_LITEBLUE, "√Ç√±√•√£√Æ √Ø√•√∞√•√¢√•√ß√•√≠√Æ √Ø√†√±√±√†√¶√®√∞√Æ√¢: {FFCD00}%d", bus_passengers[GetPlayerVehicleID(playerid)]);
			last_vehiclejob[playerid] = -1; checkpoint_bus[playerid] = 0;
			if(repair_price != 0) {
				format(string, 32, "~r~-%d$ ~n~~r~ repair bus", repair_price);
				GameTextForPlayer(playerid, string, 3000, 1);
				Hook_GivePlayerMoney(playerid, -repair_price);
			}
			GivePayDayMoney(playerid, bus_payday[playerid]);
			bus_passengers[GetPlayerVehicleID(playerid)] = 0, bus_driverid[GetPlayerVehicleID(playerid)] = INVALID_PLAYER_ID;
			arenda_bus[playerid] = false;
			DeletePVar(playerid, "time_busexit");
			arenda_bus_id[playerid] = -1;
			SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			return SCM(playerid, 0x009900FF, "√Ñ√•√≠√º√£√® √°√≥√§√≥√≤ √Ø√•√∞√•√∑√®√±√´√•√≠√ª √¢√†√¨ √¢√Æ √¢√∞√•√¨√ø √¢√ªS√≠√∑√® √ß√†√∞√Ø√´√†√≤√ª");
		}
		SetPlayerRaceCheckpoint(playerid, 1, 1122.4507,-1744.0195,13.5317, 0.0, 0.0, 0.0, 4.0);
		PlayerPlaySound(playerid, 5201, 0.0, 0.0, 0.0);
	}
	case 298: {
		if(!response) {
			player_is_drivebus[playerid] = false;
			DisablePlayerRaceCheckpoint(playerid); KillTimer(timer_bus[playerid]);
			new Float: car_floathp; GetVehicleHealth(GetPlayerVehicleID(playerid), car_floathp); new car_hp = floatround(car_floathp, floatround_ceil), repair_price = (1000-car_hp)/3;
			SCM(playerid, COLOR_LITEBLUE, "√ê√†√°√Æ√≤√† √¢√Æ√§√®√≤√•√´√ø √†√¢√≤√Æ√°√≥√±√† √ß√†√¢√•√∞√∏√•√≠√†");
			SCMF(playerid, COLOR_LITEBLUE, "√Ç√ª √ß√†√∞√†√°√Æ√≤√†√´√®: {009966}%d$"CLITEBLUE". √á√† √∞√•√¨√Æ√≠√≤ √†√¢√≤√Æ√°√≥√±√†: "CERROR"-%d$", bus_payday[playerid], repair_price);
			SCMF(playerid, COLOR_LITEBLUE, "√Ç√±√•√£√Æ √Ø√•√∞√•√¢√•√ß√•√≠√Æ √Ø√†√±√±√†√¶√®√∞√Æ√¢: {FFCD00}%d", bus_passengers[GetPlayerVehicleID(playerid)]);
			bus_passengers[GetPlayerVehicleID(playerid)] = 0, bus_driverid[GetPlayerVehicleID(playerid)] = INVALID_PLAYER_ID;
			if(repair_price != 0) {
				format(string, 32, "~r~-%d$ ~n~~r~ repair bus", repair_price);
				GameTextForPlayer(playerid, string, 3000, 1);
				Hook_GivePlayerMoney(playerid, -repair_price);
			}
			GivePayDayMoney(playerid, bus_payday[playerid]);
			last_vehiclejob[playerid] = -1;
			DeletePVar(playerid, "time_busexit");
			arenda_bus[playerid] = false;
			arenda_bus_id[playerid] = -1;
			SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			return SCM(playerid, 0x009900FF, "√Ñ√•√≠√º√£√® √°√≥√§√≥√≤ √Ø√•√∞√•√∑√®√±√´√•√≠√ª √¢√†√¨ √¢√Æ √¢√∞√•√¨√ø √¢√ªS√≠√∑√® √ß√†√∞√Ø√´√†√≤√ª");
		}
		SetPlayerRaceCheckpoint(playerid, 1, 1121.8436,-1743.6327,13.5318, 0.0,0.0,0.0, 4.0);
		PlayerPlaySound(playerid, 5201, 0.0, 0.0, 0.0);
	}
	case 498: {
		if(!response) {
			player_is_drivebus[playerid] = false;
			DisablePlayerRaceCheckpoint(playerid); KillTimer(timer_bus[playerid]);
			new Float: car_floathp; GetVehicleHealth(GetPlayerVehicleID(playerid), car_floathp); new car_hp = floatround(car_floathp, floatround_ceil), repair_price = (1000-car_hp)/3;
			SCM(playerid, COLOR_LITEBLUE, "√ê√†√°√Æ√≤√† √¢√Æ√§√®√≤√•√´√ø √†√¢√≤√Æ√°√≥√±√† √ß√†√¢√•√∞√∏√•√≠√†");
			SCMF(playerid, COLOR_LITEBLUE, "√Ç√ª √ß√†√∞√†√°√Æ√≤√†√´√®: {009966}%d$"CLITEBLUE". √á√† √∞√•√¨√Æ√≠√≤ √†√¢√≤√Æ√°√≥√±√†: "CERROR"-%d$", bus_payday[playerid], repair_price);
			SCMF(playerid, COLOR_LITEBLUE, "√Ç√±√•√£√Æ √Ø√•√∞√•√¢√•√ß√•√≠√Æ √Ø√†√±√±√†√¶√®√∞√Æ√¢: {FFCD00}%d", bus_passengers[GetPlayerVehicleID(playerid)]);
			if(repair_price != 0) {
				format(string, 32, "~r~-%d$ ~n~~r~ repair bus", repair_price);
				GameTextForPlayer(playerid, string, 3000, 1);
				Hook_GivePlayerMoney(playerid, -repair_price);
			}
			bus_passengers[GetPlayerVehicleID(playerid)] = 0, bus_driverid[GetPlayerVehicleID(playerid)] = INVALID_PLAYER_ID;
			last_vehiclejob[playerid] = -1;
			GivePayDayMoney(playerid, bus_payday[playerid]);
			DeletePVar(playerid, "time_busexit");
			arenda_bus[playerid] = false;
			arenda_bus_id[playerid] = -1;
			SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			return SCM(playerid, 0x009900FF, "√Ñ√•√≠√º√£√® √°√≥√§√≥√≤ √Ø√•√∞√•√∑√®√±√´√•√≠√ª √¢√†√¨ √¢√Æ √¢√∞√•√¨√ø √¢√ªS√≠√∑√® √ß√†√∞√Ø√´√†√≤√ª");
		}
		SetPlayerRaceCheckpoint(playerid, 1, 1121.1616, -1743.5818, 13.5320, 0.0, 0.0, 0.0, 4.0);
		PlayerPlaySound(playerid, 5201, 0.0, 0.0, 0.0);
	}
	case 454: {
		if(!response) return 1;
        SPD(playerid, 454, DIALOG_STYLE_TABLIST_HEADERS, "{40bf40}√é√∞√≥√¶√•√©√≠√†√ø", 
            "√ç√Æ√¨√•√∞\t√é√∞√≥√¶√®√•\t\t√è√†√≤√∞√Æ√≠√ª\n\
            "CWHITE"1\t\t{cccc66}√Ñ√≥√°√®√≠√™√†\t\t\t"CLITEBLUE"‚Äî\n\
            "CWHITE"2\t\t{cccc66}√Å√∞√Æ√≠√•√¶√®√´√•√≤\t\t"CLITEBLUE"‚Äî\n\
            "CWHITE"3\t\t{cccc66}SD pistol\t\t"CLITEBLUE"40\n\
            "CWHITE"4\t\t{cccc66}Desert Eagle\t"CLITEBLUE"40\n\
            "CWHITE"5\t\t{cccc66}Shotgun\t\t"CLITEBLUE"40\n\
            "CWHITE"6\t\t{cccc66}MP5\t\t\t"CLITEBLUE"60\n\
            "CWHITE"7\t\t{cccc66}AK47\t\t\t"CLITEBLUE"60\n\
            "CWHITE"8\t\t{cccc66}M4\t\t\t"CLITEBLUE"60\n\
			"CWHITE"9\t\t{cccc66}√ô√®√≤\t\t\t"CLITEBLUE"‚Äî\n\
			"CWHITE"10\t\t{cccc66}√å√†√±√™√†\t\t"CLITEBLUE"1 √∏√≤.",
        "√Ç√ß√ø√≤√º", "Cerrar");
		switch(listitem) {
			case 0: {
				SCM(playerid, COLOR_BLUE, "√Ç√ª √¢√ß√ø√´√® "CYELLOW"√§√≥√°√®√≠√™√≥ "CBLUE"√®√ß √Æ√∞√≥√¶√•√©√≠√Æ√©");
				GivePlayerWeapon(playerid, 3, 1);
			}
			case 1: {
				SCM(playerid, COLOR_BLUE, "√Ç√ª √¢√ß√ø√´√® "CYELLOW"√°√∞√Æ√≠√•√¶√®√´√•√≤ "CBLUE"√®√ß √Æ√∞√≥√¶√•√©√≠√Æ√©");
				SCM(playerid, COLOR_ORANGE, "√ó√≤√Æ√°√ª √±√≠√ø√≤√º √•√£√Æ, √¢√¢√•√§√®√≤√• "CBLUE"/armoff");
				SetPlayerArmour(playerid, 100);
			}
			case 2: {
				if(GetPVarInt(playerid, "gun_sd") > gettime()) 
					return SCM(playerid, COLOR_ERROR, "√Ç√ª √±√¨√Æ√¶√•√≤√• √¢√ß√ø√≤√º √Ω√≤√Æ √Æ√∞√≥√¶√®√• √∑√•√∞√•√ß 5 √¨√®√≠√≥√≤");
				SCM(playerid, COLOR_BLUE, "√Ç√ª √¢√ß√ø√´√® "CYELLOW"SD pistol "CBLUE"√® "CORANGE"40 √Ø√†√≤√∞√Æ√≠√Æ√¢ "CBLUE"√®√ß √Æ√∞√≥√¶√•√©√≠√Æ√©");
				GivePlayerWeapon(playerid, 22, 40);
				SetPVarInt(playerid, "gun_sd", gettime() + 300);
			}
			case 3: {
				if(GetPVarInt(playerid, "gun_deagle") > gettime()) 
					return SCM(playerid, COLOR_ERROR, "√Ç√ª √±√¨√Æ√¶√•√≤√• √¢√ß√ø√≤√º √Ω√≤√Æ √Æ√∞√≥√¶√®√• √∑√•√∞√•√ß 5 √¨√®√≠√≥√≤");
				SCM(playerid, COLOR_BLUE, "√Ç√ª √¢√ß√ø√´√® "CYELLOW"Desert Eagle "CBLUE"√® "CORANGE"40 √Ø√†√≤√∞√Æ√≠√Æ√¢ "CBLUE"√®√ß √Æ√∞√≥√¶√•√©√≠√Æ√©");
				GivePlayerWeapon(playerid, 24, 40);
				SetPVarInt(playerid, "gun_deagle", gettime() + 300);
			}
			case 4: {
				if(GetPVarInt(playerid, "gun_shotgun") > gettime()) 
					return SCM(playerid, COLOR_ERROR, "√Ç√ª √±√¨√Æ√¶√•√≤√• √¢√ß√ø√≤√º √Ω√≤√Æ √Æ√∞√≥√¶√®√• √∑√•√∞√•√ß 5 √¨√®√≠√≥√≤");
				SCM(playerid, COLOR_BLUE, "√Ç√ª √¢√ß√ø√´√® "CYELLOW"Shotgun "CBLUE"√® "CORANGE"40 √Ø√†√≤√∞√Æ√≠√Æ√¢ "CBLUE"√®√ß √Æ√∞√≥√¶√•√©√≠√Æ√©");
				GivePlayerWeapon(playerid, 25, 40);
				SetPVarInt(playerid, "gun_shotgun", gettime() + 300);
			}
			case 5: {
				if(GetPVarInt(playerid, "gun_mp5") > gettime()) 
					return SCM(playerid, COLOR_ERROR, "√Ç√ª √±√¨√Æ√¶√•√≤√• √¢√ß√ø√≤√º √Ω√≤√Æ √Æ√∞√≥√¶√®√• √∑√•√∞√•√ß 5 √¨√®√≠√≥√≤");
				SCM(playerid, COLOR_BLUE, "√Ç√ª √¢√ß√ø√´√® "CYELLOW"MP5 "CBLUE"√® "CORANGE"60 √Ø√†√≤√∞√Æ√≠√Æ√¢ "CBLUE"√®√ß √Æ√∞√≥√¶√•√©√≠√Æ√©");
				GivePlayerWeapon(playerid, 29, 60);
				SetPVarInt(playerid, "gun_mp5", gettime() + 300);
			}
			case 6: {
				if(GetPVarInt(playerid, "gun_ak47") > gettime()) 
					return SCM(playerid, COLOR_ERROR, "√Ç√ª √±√¨√Æ√¶√•√≤√• √¢√ß√ø√≤√º √Ω√≤√Æ √Æ√∞√≥√¶√®√• √∑√•√∞√•√ß 5 √¨√®√≠√≥√≤");
				SCM(playerid, COLOR_BLUE, "√Ç√ª √¢√ß√ø√´√® "CYELLOW"AK47 "CBLUE"√® "CORANGE"60 √Ø√†√≤√∞√Æ√≠√Æ√¢ "CBLUE"√®√ß √Æ√∞√≥√¶√•√©√≠√Æ√©");
				GivePlayerWeapon(playerid, 30, 60);
				SetPVarInt(playerid, "gun_ak47", gettime() + 300);
			}
			case 7: {
				if(GetPVarInt(playerid, "gun_m4") > gettime()) 
					return SCM(playerid, COLOR_ERROR, "√Ç√ª √±√¨√Æ√¶√•√≤√• √¢√ß√ø√≤√º √Ω√≤√Æ √Æ√∞√≥√¶√®√• √∑√•√∞√•√ß 5 √¨√®√≠√≥√≤");
				SCM(playerid, COLOR_BLUE, "√Ç√ª √¢√ß√ø√´√® "CYELLOW"M4 "CBLUE"√® "CORANGE"60 √Ø√†√≤√∞√Æ√≠√Æ√¢ "CBLUE"√®√ß √Æ√∞√≥√¶√•√©√≠√Æ√©");
				GivePlayerWeapon(playerid, 31, 60);
				SetPVarInt(playerid, "gun_m4", gettime() + 300);
			}
			case 8: {
				if(GetPVarInt(playerid, "shield")) return SCM(playerid, COLOR_GREY, "√Ç√ª √≥√¶√• √¢√ß√ø√´√® √π√®√≤");
				SetPlayerAttachedObject(playerid, 1, 18637, 14, 0.0, 0.0, 0.0, 0.0, 180.0, 180.0);
				SetPVarInt(playerid, "shield", 1);
				SCM(playerid, COLOR_BLUE, "√Ç√ª √¢√ß√ø√´√® "CYELLOW"√π√®√≤ "CBLUE"√®√ß √Æ√∞√≥√¶√•√©√≠√Æ√©");
				SCM(playerid, COLOR_ORANGE, "√ó√≤√Æ√°√ª √≥√°√∞√†√≤√º √•√£√Æ, √¢√¢√•√§√®√≤√• "CBLUE"/reset");
			}
			case 9: {
				if(pData[playerid][pMasks] && !pData[playerid][p_premium]) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √¢√ß√ø√≤√º √°√Æ√´√º√∏√• √Æ√§√≠√Æ√© √¨√†√±√™√®");
				if(pData[playerid][p_premium] && pData[playerid][pMasks] >= 3) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √¢√ß√ø√≤√º √°√Æ√´√º√∏√• 3 √¨√†√±√Æ√™");
				pData[playerid][pMasks] ++;
				AddItemToInventory(playerid, 1, 5);
				UpdatePlayerData(playerid, "pMasks", pData[playerid][pMasks]);
				SCM(playerid, COLOR_BLUE, "√Ç√ª √¢√ß√ø√´√® "CYELLOW"√¨√†√±√™√≥ "CBLUE"√®√ß √Æ√∞√≥√¶√•√©√≠√Æ√©");
				SCM(playerid, COLOR_ORANGE, "√ó√≤√Æ√°√ª √≠√†√§√•√≤√º √•¬∏, √¢√¢√•√§√®√≤√• "CBLUE"/mask");
			}
		}
	}
	case 491: {
		if(!response) return 1;
		if(pData[playerid][pCash] < 1500) return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Æ√Ø√´√†√≤√ª √±√≤√Æ√®√¨√Æ√±√≤√® √≥√±√´√≥√£√®");
		switch(pData[playerid][pLeader]) {
			case 1: {
				for(new i = 0, ps = GetVehiclePoolSize(); i <= ps; i++) 
					if(!IsVehicleOccupied(i) && (i >= sapdpatrul[0] && i <= sapdpatrul[1]) || (i >= sapdcar[0] && i <= sapdcar[1])) 
						SetVehicleToRespawn(i);
			}
			case 2: {
				for(new i = 0, ps = GetVehiclePoolSize(); i <= ps; i++) 
					if(!IsVehicleOccupied(i) && i >= fbicar[0] && i <= fbicar[1]) 
						SetVehicleToRespawn(i);
			}
			case 4: {
				for(new i = 0, ps = GetVehiclePoolSize(); i <= ps; i++) 
					if(!IsVehicleOccupied(i) && i >= bolkals[0] && i <= bolkals[1]) 
						SetVehicleToRespawn(i);
			}
			case 5: {
				for(new i = 0, ps = GetVehiclePoolSize(); i <= ps; i++) 
					if(!IsVehicleOccupied(i) && i >= lcncar[0] && i <= lcncar[1]) 
						SetVehicleToRespawn(i);
			}
			case 6: {
				for(new i = 0, ps = GetVehiclePoolSize(); i <= ps; i++) 
					if(!IsVehicleOccupied(i) && i >= yakcar[0] && i <= yakcar[1]) 
						SetVehicleToRespawn(i);
			}
			case 7: {
				for(new i = 0, ps = GetVehiclePoolSize(); i <= ps; i++) 
					if(!IsVehicleOccupied(i) && i >= meriyalscar[0] && i <= meriyalscar[1]) 
						SetVehicleToRespawn(i);
			}
			case 8: {
				for(new i = 0, ps = GetVehiclePoolSize(); i <= ps; i++) 
					if(!IsVehicleOccupied(i) && i >= meriyasfcar[0] && i <= meriyasfcar[1]) 
						SetVehicleToRespawn(i);
			}
			case 9: {
				for(new i = 0, ps = GetVehiclePoolSize(); i <= ps; i++) 
					if(!IsVehicleOccupied(i) && i >= meriyalvcar[0] && i <= meriyalvcar[1]) 
						SetVehicleToRespawn(i);
			}
			case 10: {
				for(new i = 0, ps = GetVehiclePoolSize(); i <= ps; i++) 
					if(!IsVehicleOccupied(i) && i >= sfpdcar[0] && i <= sfpdcar[1]) 
						SetVehicleToRespawn(i);
			}
			case 11: {
				for(new i = 0, ps = GetVehiclePoolSize(); i <= ps; i++) 
					if(!IsVehicleOccupied(i) && i >= liccar[0] && i <= liccar[1]) 
						SetVehicleToRespawn(i);
			}
			case 12: {
				for(new i = 0, ps = GetVehiclePoolSize(); i <= ps; i++) {
					if(!IsVehicleOccupied(i) && i >= ballascar[0] && i <= ballascar[1]) SetVehicleToRespawn(i);
					else if(!IsVehicleOccupied(i) && i == matsfuraballas) SetVehicleToRespawn(i);
				}
			}
			case 13: {
				for(new i = 0, ps = GetVehiclePoolSize(); i <= ps; i++) {
					if(!IsVehicleOccupied(i) && i >= vagoscar[0] && i <= vagoscar[1]) SetVehicleToRespawn(i);
					else if(!IsVehicleOccupied(i) && i == matsfuravagos) SetVehicleToRespawn(i);
				}
			}
			case 14: {
				for(new i = 0, ps = GetVehiclePoolSize(); i <= ps; i++) 
					if(!IsVehicleOccupied(i) && i >= ruscar[0] && i <= ruscar[1]) 
						SetVehicleToRespawn(i);
			}
			case 15: {
				for(new i = 0, ps = GetVehiclePoolSize(); i <= ps; i++) {
					if(!IsVehicleOccupied(i) && i >= grovecar[0] && i <= grovecar[1]) SetVehicleToRespawn(i);
					else if(!IsVehicleOccupied(i) && i == matsfuragrove) SetVehicleToRespawn(i);
				}
			}
			case 16: {
				for(new i = 0, ps = GetVehiclePoolSize(); i <= ps; i++) 
					if(!IsVehicleOccupied(i) && i >= massmediacar[0] && i <= massmediacar[1]) 
						SetVehicleToRespawn(i);
			}
			case 17: {
				for(new i = 0, ps = GetVehiclePoolSize(); i <= ps; i++) {
					if(!IsVehicleOccupied(i) && i >= coronoscar[0] && i <= coronoscar[1]) SetVehicleToRespawn(i);
					else if(!IsVehicleOccupied(i) && i == matsfuraactek) SetVehicleToRespawn(i);
				}
			}
			case 18: {
				for(new i = 0, ps = GetVehiclePoolSize(); i <= ps; i++) {
					if(!IsVehicleOccupied(i) && i >= rifacar[0] && i <= rifacar[1]) SetVehicleToRespawn(i);
					else if(!IsVehicleOccupied(i) && i == matsfurarifa) SetVehicleToRespawn(i);
				}
			}
			case 19: {
				for(new i = 0, ps = GetVehiclePoolSize(); i <= ps; i++) 
					if(!IsVehicleOccupied(i) && i >= armcar[0] && i <= armcar[1]) 
						SetVehicleToRespawn(i);
			}
			case 20: {
				for(new i = 0, ps = GetVehiclePoolSize(); i <= ps; i++) 
					if(!IsVehicleOccupied(i) && i >= vvcveh[0] && i <= vvcveh[1]) 
						SetVehicleToRespawn(i);
			}
			case 21: {
				for(new i = 0, ps = GetVehiclePoolSize(); i <= ps; i++) 
					if(!IsVehicleOccupied(i) && i >= lvpdcar[0] && i <= lvpdcar[1]) 
						SetVehicleToRespawn(i);
			}
			case 26: {
				for(new i = 0, ps = GetVehiclePoolSize(); i <= ps; i++) 
					if(!IsVehicleOccupied(i) && i >= ministrcar[0] && i <= ministrcar[1]) 
						SetVehicleToRespawn(i);
			}
			case 27: {
				for(new i = 0, ps = GetVehiclePoolSize(); i <= ps; i++) 
					if(!IsVehicleOccupied(i) && i >= vmfcar[0] && i <= vmfcar[1]) 
						SetVehicleToRespawn(i);
			}
			case 28: {
				for(new i = 0, ps = GetVehiclePoolSize(); i <= ps; i++) 
					if(!IsVehicleOccupied(i) && i >= bolkasf_veh[0] && i <= bolkasf_veh[1]) 
						SetVehicleToRespawn(i);
			}
			case 29: {
				for(new i = 0, ps = GetVehiclePoolSize(); i <= ps; i++) 
					if(!IsVehicleOccupied(i) && i >= bolkalv_veh[0] && i <= bolkalv_veh[1]) 
						SetVehicleToRespawn(i);
			}
			default: return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [030]");
		}
		Hook_GivePlayerMoney(playerid, -1500);
		GameTextForPlayer(playerid, "~r~-1500$", 3000, 1);
		SCM(playerid, COLOR_MAIN, "√ë√¢√Æ√°√Æ√§√≠√ª√© √≤√∞√†√≠√±√Ø√Æ√∞√≤ √Ç√†√∏√•√© √Æ√∞√£√†√≠√®√ß√†√∂√®√® √°√ª√´ √≥√±√Ø√•√∏√≠√Æ √§√Æ√±√≤√†√¢√´√•√≠ √™ √°√†√ß√•");
	}
	case 7451: {
		if(!response) return 1;
		if(!strlen(inputtext)) return SCM(playerid, 0xE5B090FF, "√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥ √±√¢√Æ√•√© √±√≤√†√¢√™√® √¢ √Ø√Æ√´√• √§√®√†√´√Æ√£√†"), show_bloodyring_dialog(playerid);
	   	for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) { case '0'..'9': continue; default: return show_bloodyring_dialog(playerid); }
		}
		if(bloody_en[playerid]) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [031]");
	    if(strval(inputtext) < 3000 || strval(inputtext) > 100000) return SCM(playerid, 0xE5B090FF, "√Ç√¢√•√§√•√≠√† √≠√•√§√Æ√Ø√≥√±√≤√®√¨√†√ø √±√≥√¨√¨√† √±√≤√†√¢√™√®. √Ñ√Æ√±√≤√≥√Ø√≠√Æ √Æ√≤ 3000$ √§√Æ 100000$"), show_bloodyring_dialog(playerid);
	    if(pData[playerid][pCash] < strval(inputtext)) return SCM(playerid, 0xE5B090FF, "√ì √Ç√†√± No √≤√†√™√Æ√© √±√≥√¨√¨√ª √≠√†√´√®√∑√≠√ª√¨√®"), show_bloodyring_dialog(playerid);
	    if(bloody_players >= 20) return SCM(playerid, COLOR_ERROR, "√Ç √®√£√∞√• √≥√¶√• √ß√†√∞√•√£√®√±√≤√∞√®√∞√Æ√¢√†√≠√Æ √¨√†√™√±√®√¨√†√´√º√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √∑√•√´√Æ√¢√•√™");
		if(start_bloodyring) return SCM(playerid, COLOR_ERROR, "√à√£√∞√† √≥√¶√• √Ø√∞√Æ√¢√Æ√§√®√≤√±√ø. √é√¶√®S√≠√©√≤√• √Æ√™√Æ√≠√∑√†√≠√®√ø");
		if(!pData[playerid][pLicenses][0]) return SCM(playerid, 0xE5B090FF, "√Ñ√´√ø √≥√∑√†√±√≤√®√ø √¢ √®√£√∞√• √≥ √Ç√†√± √§√Æ√´√¶√≠√ª √°√ª√≤√º √¢√Æ√§√®√≤√•√´√º√±√™√®√• √Ø√∞√†√¢√†");
	    Hook_GivePlayerMoney(playerid, -strval(inputtext));
	    format(string, 40, "~r~-%d$ ~n~~r~ game bet", strval(inputtext));
	    bet_bloody[playerid] = strval(inputtext);
	    GameTextForPlayer(playerid, string, 3000, 1);
	    SCM(playerid, COLOR_MAIN, "√Ç√ª √≥√±√Ø√•√∏√≠√Æ √ß√†√∞√•√£√®√±√≤√∞√®√∞√Æ√¢√†√´√®√±√º √¢ √®√£√∞√•");
	    bloody_en[playerid] = true;
	   	bloody_players ++; new name_car[10], id_car;
		switch(random(5)) {
			case 0: name_car = "Bullet", id_car = 541;
			case 1: name_car = "Infernus", id_car = 411;
			case 2: name_car = "Sultan", id_car = 560;
			case 3: name_car = "Turismo", id_car = 451;
			case 4: name_car = "Buffalo", id_car = 402;
		}
		PlayerPlaySound(playerid, 17001, 0.0, 0.0, 0.0);
		SCM(playerid, -1, "√é√¶√®S√≠√©√≤√• √∞√•√£√®√±√≤√∞√†√∂√®√® √§√∞√≥√£√®√µ √≥√∑√†√±√≤√≠√®√™√Æ√¢");
		SCM(playerid, -1, "√ó√≤√Æ√°√ª √Ø√Æ√™√®√≠√≥√≤√º √®√£√∞√≥, √¢√¢√•√§√®√≤√• {ff9945}/brleave "CWHITE"(√±√≥√¨√¨√† √±√≤√†√¢√™√® √¢√Æ√ß√¢√∞√†√π√•√≠√† √≠√• √°√≥√§√•√≤)");
		TextDrawSetString(wait_bloodyst, "start in:~y~~n~30 sec");
		format(string, 128, "[√ä√∞√Æ√¢√†√¢√Æ√• √™√Æ√´√º√∂√Æ] "CBLUE"%s √Ø√∞√®√±√Æ√•√§√®√≠√®√´√±√ø √™ √®√£√∞√• "CORANGE"(√≥√∑√†√±√≤√≠√®√™√Æ√¢: %d √®√ß 20)", GetName(playerid), bloody_players);
		send_bloodring_mes(COLOR_MAIN, string);
		SetPlayerColor(playerid, 0x66FF99FF);
		TextDrawShowForPlayer(playerid, wait_bloodyst);
		if(bloody_players == 1) create_carsbloody(id_car), teleport_player_to_bloody(playerid), timer_bloody = 30;
		else if(bloody_players >= 2) teleport_player_to_bloody(playerid);
	}
	case 494: {
		if(!response) return 1;
		SetPlayerInterior(playerid, 0); SetPlayerVirtualWorld(playerid, 0);
		TogglePlayerControllable(playerid, 1);
		SetPlayerPos(playerid, 2690.8135, -1704.8428, 11.2370);
		SetPlayerFacingAngle(playerid, 45);
		DisablePlayerRaceCheckpoint(playerid);
		bloody_players --;
		bloody_en[playerid] = false;
        format(string, 128, "[√ä√∞√Æ√¢√†√¢√Æ√• √™√Æ√´√º√∂√Æ] "CBLUE"%s √Ø√Æ√™√®√≠√≥√´ √®√£√∞√≥ (/brleave)", GetName(playerid));
        send_bloodring_mes(COLOR_MAIN, string);
        if(bloody_players == 1) {
            new id_bloodywinner = -1;
            foreach(new i:Player) {
            	if(!bloody_en[i]) continue;
            	id_bloodywinner = i;
            	break;
            }
            if(id_bloodywinner != -1 && timer_bloody == 0) {
            	bloody_players --;
            	new bloody_winmoney;
                foreach(new i:Player) {
                	if(!bet_bloody[i]) continue;
                	bloody_winmoney += bet_bloody[i];
                }
                bloody_winmoney = bloody_winmoney/50;
                SCM(id_bloodywinner, COLOR_MAIN, "[√ä√∞√Æ√¢√†√¢√Æ√• √™√Æ√´√º√∂√Æ] "CBLUE"√è√Æ√ß√§√∞√†√¢√´√ø√•√¨ √Ç√†√± √± √Ø√Æ√°√•√§√Æ√©");
                SCMF(id_bloodywinner, COLOR_MAIN, "[√ä√∞√Æ√¢√†√¢√Æ√• √™√Æ√´√º√∂√Æ] "CBLUE"√Ç√†√∏ √Ø√∞√®√ß: {00cc00}%d$", bloody_winmoney);
                Hook_GivePlayerMoney(id_bloodywinner, bloody_winmoney);
                new gametext_hook[50]; format(gametext_hook, 50, "~g~+%d$", bloody_winmoney);
				GameTextForPlayer(id_bloodywinner, gametext_hook, 3000, 1);
                SetPlayerInterior(id_bloodywinner, 0); SetPlayerVirtualWorld(id_bloodywinner, 0);
                TogglePlayerControllable(id_bloodywinner, 1);
                SetPlayerPos(id_bloodywinner, 2690.8135, -1704.8428, 11.2370);
                SetPlayerFacingAngle(id_bloodywinner, 45);
                DisablePlayerRaceCheckpoint(id_bloodywinner);
                TextDrawHideForPlayer(id_bloodywinner, wait_bloodyst);
                bet_bloody[id_bloodywinner] = 0;
                SetCameraBehindPlayer(id_bloodywinner);
                PlayerTextDrawHide(id_bloodywinner, td_playerbloody[id_bloodywinner]);
                timer_plbloody[id_bloodywinner] = -1;
                SetPlayerColor(id_bloodywinner, FractionInfo[pData[id_bloodywinner][pMember]][fColor]);
                bloody_en[id_bloodywinner] = false;
                if(GetPlayerVehicleID(id_bloodywinner) >= bloody_car[1] && GetPlayerVehicleID(id_bloodywinner) <= bloody_car[60]) DestroyVehicle(GetPlayerVehicleID(id_bloodywinner));
                TextDrawHideForPlayer(id_bloodywinner, usebox_playerbloody);
            }
        }
		if(bloody_players <= 1 && timer_bloody == 0) {
			start_bloodyring = false, bloody_players = 0;
			foreach(new i:Player) {
				if(!bloody_en[i]) continue;
				DisablePlayerRaceCheckpoint(i);
				bloody_en[i] = false; 
			}
			foreach(new i:Player) bet_bloody[i] = 0;
			DestroyPickup(repair_bloody_1); DestroyDynamicArea(repair_bloody);
			KillTimer(reppictime); timer_bloody = 0; timebreakc_bloody = 0; breakblood_time = 0;
			for(new i = 0, ps = GetVehiclePoolSize(); i <= ps; i++) if(i >= bloody_car[1] && i <= bloody_car[60]) DestroyVehicle(i);
		}
		TextDrawHideForPlayer(playerid, wait_bloodyst);
		SetCameraBehindPlayer(playerid);
		PlayerTextDrawHide(playerid, td_playerbloody[playerid]);
		timer_plbloody[playerid] = -1;
		SetPlayerColor(playerid, FractionInfo[pData[playerid][pMember]][fColor]);
		if(GetPlayerVehicleID(playerid) >= bloody_car[1] && GetPlayerVehicleID(playerid) <= bloody_car[60]) DestroyVehicle(GetPlayerVehicleID(playerid));
		TextDrawHideForPlayer(playerid, usebox_playerbloody);
		return SCM(playerid, 0x00CC99FF, "√Ç√ª √Ø√Æ√™√®√≠√≥√´√® √®√£√∞√≥");
	}
	case 9526: {
		if(!response) return 1;
		if(BizEnter{playerid} == 255) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [015]");
		if(BizInfo[BizEnter{playerid}][bProd] < 15) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√Æ√≤ √≤√Æ√¢√†√∞ √Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤ √¢ √¨√†√£√†√ß√®√≠√•");
		new idveh_game, price;
		switch(listitem) {
			case 0: idveh_game = 441, price = 1000;
			case 1: idveh_game = 464, price = 2800;
			case 2: idveh_game = 465, price = 2500;
			case 3: idveh_game = 501, price = 2600;
			case 4: idveh_game = 564, price = 6200;
			case 5: idveh_game = 594, price = 800;
		}
		if(pData[playerid][pCash] < price) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Ø√Æ√™√≥√Ø√™√® √Ω√≤√Æ√£√Æ √≤√Æ√¢√†√∞√†");
		Hook_GivePlayerMoney(playerid, -price);
		BizInfo[BizEnter{playerid}][bPribil] += price;
		BizInfo[BizEnter{playerid}][bBank] += price;
		new str_gmt[16];
		format(str_gmt, 16, "~r~-%d$", price);
		GameTextForPlayer(playerid, str_gmt, 3000, 1);
		PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerFacingAngle(playerid, 90);
		SetCameraBehindPlayer(playerid);
		player_gameveh[playerid] = CreateVehicleEx(idveh_game, 1847.1755,-1863.2455,13.5781, 90, 1, 3, CAR_SPAWN);
		SetPVarInt(playerid, "unik_not_send", 1);
		PutPlayerInVehicle(playerid, player_gameveh[playerid], 0);
		SCMF(playerid, COLOR_BLUE, "√Ç√ª √™√≥√Ø√®√´√® √®√£√∞√≥√∏√™√≥ {FFCD00}%s "CBLUE"√ß√† {00cc00}%d$", VehicleNames[idveh_game - 400], price);
		SCM(playerid, COLOR_MAIN, "√ó√≤√Æ√°√ª √¢√•√∞√≠√≥√≤√º√±√ø √¢ √Æ√°√ª√∑√≠√ª√© √∞√•√¶√®√¨, √≠√†√¶√¨√®√≤√• "CYELLOW"H");
		BizInfo[BizEnter{playerid}][bProd] -= 15;
		UpdateBusinessData(BizEnter{playerid}, "bProd",BizInfo[BizEnter{playerid}][bProd]);
		if(BizInfo[BizEnter{playerid}][bBank] > 10000000) BizInfo[BizEnter{playerid}][bBank] = 10000000;
		UpdateBusinessData(BizEnter{playerid}, "bPribil",BizInfo[BizEnter{playerid}][bPribil]);
		UpdateBusinessData(BizEnter{playerid}, "bBank",BizInfo[BizEnter{playerid}][bBank]);
	}
	case 649: {
		if(!response) return 1;
		SetPVarInt(playerid, "list_billb", listitem + 21);
		mysql_tquery(mysql_Handle, "SELECT * FROM `billboards`", "billboardsinfo_showshow", "i", playerid);
	}
	case 549: {
		if(!response) return 1;
		SetPVarInt(playerid, "list_billb", listitem + 11);
		mysql_tquery(mysql_Handle, "SELECT * FROM `billboards`", "billboardsinfo_showshow", "i", playerid);
	}
	case 449: {
		if(!response) return 1;
		SetPVarInt(playerid, "list_billb", listitem + 1);
		mysql_tquery(mysql_Handle, "SELECT * FROM `billboards`", "billboardsinfo_showshow", "i", playerid);
	}
	case 361: {
		if(!response) return 1;
		ResetPlayerWeapons(playerid);
		SetPlayerPos(playerid, 285.7182,-84.4868,1001.5156);
		SetPlayerVirtualWorld(playerid, 40); SetPlayerInterior(playerid, 4);
		SetPlayerFacingAngle(playerid, 0.0);
		SetCameraBehindPlayer(playerid);
		SCM(playerid, COLOR_MAIN, "√Ç√ª √≠√†√µ√Æ√§√®√≤√•√±√º √¢ √≤√®√∞√•. √á√§√•√±√º √Ç√ª √¨√Æ√¶√•√≤√• √≤√∞√•√≠√®√∞√Æ√¢√†√≤√º √±√¢√Æ√® √≠√†√¢√ª√™√® √¢√´√†√§√•√≠√®√ø √Æ√∞√≥√¶√®√•√¨");
		SCM(playerid, COLOR_YELLOW, "√è√∞√®√Æ√°√∞√•√≤√®√≤√• √≠√•√Æ√°√µ√Æ√§√®√¨√Æ√• √Ç√†√¨ √Æ√∞√≥√¶√®√• √® √Ø√∞√®√±√≤√≥√Ø√†√©√≤√• √™ √≤√∞√•√≠√®√∞√Æ√¢√™√• √¢ √±√Ø√•√∂√®√†√´√º√≠√Æ√© √™√Æ√¨√≠√†√≤√•");
		player_in_tir[playerid] = true;
		antiflood_move[playerid] = gettime() + 3;
	}
	case 487: {
		if(!response) {
			switch(GetPlayerVirtualWorld(playerid)) {
				case 3: mysql_tquery(mysql_Handle, "SELECT * FROM `billboards`", "billboardsinfo_show", "ii", playerid, 1);
				case 4: mysql_tquery(mysql_Handle, "SELECT * FROM `billboards`", "billboardsinfo_show", "ii", playerid, 3);
				case 5: mysql_tquery(mysql_Handle, "SELECT * FROM `billboards`", "billboardsinfo_show", "ii", playerid, 2);
				default: SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [032]");
			}
			return DeletePVar(playerid, "billboard_selected");
		}
		show_osnbill(playerid);
	}
	case 541: {
		if(!response) return DeletePVar(playerid, "billboard_selected");
		if(!strlen(inputtext)) return show_osnbill(playerid);
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return SCM(playerid, COLOR_GREY, "√Ç√¢√•√§√•√≠√Æ √≠√•√¢√•√∞√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √§√≠√•√©"), show_osnbill(playerid);
			}
		}
		if(strval(inputtext) < 1 || strval(inputtext) > 10) return SCM(playerid, COLOR_GREY, "√Ç√¢√•√§√•√≠√Æ √≠√•√¢√•√∞√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √§√≠√•√©"), show_osnbill(playerid);
		new price_arbillb = strval(inputtext) * BizInfo[BizEnter{playerid}][bCena][0], num_billboard = GetPVarInt(playerid, "billboard_selected");
		if(pData[playerid][pCash] < price_arbillb) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √†√∞√•√≠√§√ª √°√®√´√°√Æ√∞S√≠ √≠√† √±√≤√Æ√´√º√™√Æ √§√≠√•√©");
		SCM(playerid, COLOR_MAIN, "√Å√®√´√°√Æ√∞√§ √≥√±√Ø√•√∏√≠√Æ √†√∞√•√≠√§√Æ√¢√†√≠. √ç√†√±√≤√∞√Æ√©√≤√• √•√£√Æ √¢ √Ø√Æ√ø√¢√®√¢√∏√•√¨√±√ø √¨√•√≠√æ");
		Hook_GivePlayerMoney(playerid, -price_arbillb);
		update_billboard_str(num_billboard, "bs_renter", pData[playerid][pName]);
		update_billboard_int(num_billboard, "bs_rental_days", strval(inputtext));
		BizInfo[BizEnter{playerid}][bPribil] += price_arbillb;
		BizInfo[BizEnter{playerid}][bBank] += price_arbillb;
		pData[playerid][p_bill_id] = num_billboard;
		UpdatePlayerData(playerid, "p_bill_id", num_billboard);
		UpdateBusinessData(BizEnter{playerid}, "bPribil", BizInfo[BizEnter{playerid}][bPribil]);
		if(BizInfo[BizEnter{playerid}][bBank] > 10000000) BizInfo[BizEnter{playerid}][bBank] = 10000000;
		UpdateBusinessData(BizEnter{playerid}, "bBank", BizInfo[BizEnter{playerid}][bBank]);
		PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
		billboard_info[num_billboard][bs_rental_days] = strval(inputtext);
		strmid(billboard_info[num_billboard][bs_renter], pData[playerid][pName], 0, strlen(pData[playerid][pName]), 255); 
		format(string, 30, "~r~-%d$~n~~y~+%d days", price_arbillb, strval(inputtext)); GameTextForPlayer(playerid, string, 3000, 1);
		DeletePVar(playerid, "billboard_selected");

		strmid(billboard_info[num_billboard][bs_text], ""CWHITE" ", 0, strlen(""CWHITE" "), 255);
		new str_r[175]; mysql_format(mysql_Handle, str_r, 175, "UPDATE `billboards` SET `bs_text` = '"CWHITE" ' WHERE `bs_id` = %d", num_billboard);
		mysql_tquery(mysql_Handle, str_r);

		show_setting_billboard(playerid, num_billboard);
	}
	case 429: {
		if(GetPlayerVirtualWorld(playerid) == 3) mysql_tquery(mysql_Handle, "SELECT * FROM `billboards`", "billboardsinfo_show", "ii", playerid, 1);
		else if(GetPlayerVirtualWorld(playerid) == 4) mysql_tquery(mysql_Handle, "SELECT * FROM `billboards`", "billboardsinfo_show", "ii", playerid, 3);
		else if(GetPlayerVirtualWorld(playerid) == 5) mysql_tquery(mysql_Handle, "SELECT * FROM `billboards`", "billboardsinfo_show", "ii", playerid, 2);
		else SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [033]");
	}
	case 484: {
		if(!response) {
			SetPlayerPos(playerid, 2308.7976, -14.8497, 26.7422);
			SetCameraBehindPlayer(playerid);
			SetPlayerVirtualWorld(playerid, GetPVarInt(playerid, "billb_vw"));
			DeletePVar(playerid, "billb_vw");
			TogglePlayerControllable(playerid, 1);
			return SCM(playerid, 0xAA3333AA, "√Ç√ª √¢√ª√∏√´√® √®√ß √¨√•√≠√æ √≠√†√±√≤√∞√Æ√©√™√® √°√®√´√°√Æ√∞S√≠");
		}
		switch(listitem) {
			case 0: SPD(playerid, 4254, DIALOG_STYLE_INPUT, "{99cc33}√í√•√™√±√≤ √°√®√´√°√Æ√∞S√≠", ""CWHITE"√Ç√¢√•√§√®√≤√• √≤√•√™√±√≤ √§√´√ø √°√®√´√°√Æ√∞S√≠ √¢ √Ø√Æ√´√• √≠√®√¶√•.\n√å√†√™√±√®√¨√†√´√º√≠√†√ø √§√´√®√≠√† √≤√•√™√±√≤√†: 100 √±√®√¨√¢√Æ√´√Æ√¢ (√¢√™√´√æ√∑√†√ø √±√Ø√•√∂√®√†√´√º√≠√ª√•):", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
			case 1: show_dopbill(playerid);
			case 2: SPD(playerid, 421, DIALOG_STYLE_MSGBOX, ""CERROR"√ê√†√±√≤√Æ√∞√¶√•√≠√®√• √§√Æ√£√Æ√¢√Æ√∞√† √†√∞√•√≠√§√ª", ""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √∞√†√ß√Æ√∞√¢√†√≤√º √§√Æ√£√Æ√¢√Æ√∞ √†√∞√•√≠√§√ª √°√®√´√°√Æ√∞S√≠?\n√è√Æ√≤√∞√†√∑√•√≠√≠√ª√• √≠√† √†√∞√•√≠√§√≥ √±√∞√•√§√±√≤√¢√† √¢√Æ√ß√¢√∞√†√π√•√≠√ª "CORANGE"√≠√• √°√≥√§√≥√≤"CWHITE".", "S√≠", "Siguiente");
		}
	}
	case 422: {
		if(!response) return show_setting_billboard(playerid, pData[playerid][p_bill_id]);
		if(!strlen(inputtext)) return show_dopbill(playerid);
       	for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§√•√≠√Æ √≠√•√§√Æ√Ø√≥√±√≤√®√¨√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √§√≠√•√©"), show_dopbill(playerid);
			}
		}
		new bill_idd = pData[playerid][p_bill_id], bill_remainder = 10 - billboard_info[bill_idd][bs_rental_days];
		if(strval(inputtext) > bill_remainder) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √†√∞√•√≠√§√Æ√¢√†√≤√º √°√®√´√°√Æ√∞√§ √°√Æ√´√•√• √∑√•√¨ √≠√† "CLITEBLUE"10 √§√≠√•√©"), show_dopbill(playerid);
		if(strval(inputtext) < 1 || strval(inputtext) > 10) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§√•√≠√Æ √≠√•√§√Æ√Ø√≥√±√≤√®√¨√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √§√≠√•√©"), show_dopbill(playerid);
		new price_arbillb = strval(inputtext) * BizInfo[BizEnter{playerid}][bCena][0];
		if(pData[playerid][pCash] < price_arbillb) return SCMF(playerid, COLOR_LIGHTGREY, "√Ñ√´√ø √Ø√∞√Æ√§√´√•√≠√®√ø √†√∞√•√≠√§√ª √≠√† √±√≤√Æ√´√º√™√Æ √§√≠√•√© √≤√∞√•√°√≥√•√≤√±√ø {b5b500}%d$", price_arbillb), show_dopbill(playerid);
		billboard_info[bill_idd][bs_rental_days] += strval(inputtext);
		Hook_GivePlayerMoney(playerid, -price_arbillb);
		BizInfo[BizEnter{playerid}][bPribil] += price_arbillb;
		BizInfo[BizEnter{playerid}][bBank] += price_arbillb;
		UpdateBusinessData(BizEnter{playerid}, "bPribil", BizInfo[BizEnter{playerid}][bPribil]);
		if(BizInfo[BizEnter{playerid}][bBank] > 10000000) BizInfo[BizEnter{playerid}][bBank] = 10000000;
		UpdateBusinessData(BizEnter{playerid}, "bBank", BizInfo[BizEnter{playerid}][bBank]);
		update_billboard_int(bill_idd, "bs_rental_days", billboard_info[bill_idd][bs_rental_days]);
		PlayerPlaySound(playerid, 17001, 0.0, 0.0, 0.0);
		format(string, 30, "~r~-%d$~n~~y~+%d days", price_arbillb, strval(inputtext)); GameTextForPlayer(playerid, string, 3000, 1);
		SCMF(playerid, COLOR_MAIN, "√Ä√∞√•√≠S√≠ √∞√•√™√´√†√¨√≠√Æ√£√Æ √°√®√´√°√Æ√∞S√≠ √Ø√∞√Æ√§√´√•√≠√† √•√π¬∏ √≠√† "CYELLOW"%d √§√≠√•√©", strval(inputtext));
		show_setting_billboard(playerid, pData[playerid][p_bill_id]);
	}
	case 421: {
		if(!response) return show_setting_billboard(playerid, pData[playerid][p_bill_id]);
		new bill_idd = pData[playerid][p_bill_id], b_num_str[100] = "√ê√•√™√´√†√¨√≠√ª√© √°√†√≠√≠√•√∞\n√Ä√∞√•√≠S√≠ - GPS 8-62",
		b_num_str_LV[100] = "√ê√•√™√´√†√¨√≠√ª√© √°√†√≠√≠√•√∞\n√Ä√∞√•√≠S√≠ - GPS 8-63",
		b_num_str_SF[100] = "√ê√•√™√´√†√¨√≠√ª√© √°√†√≠√≠√•√∞\n√Ä√∞√•√≠S√≠ - GPS 8-64";
		billboard_info[bill_idd][bs_rental_days] = 0;
		strmid(billboard_info[bill_idd][bs_renter], "None", 0, strlen("None"), 255); 
		new str_r[240]; mysql_format(mysql_Handle, str_r, 240, "UPDATE `billboards` SET `bs_renter` = 'None', `bs_rental_days` = '0', `bs_text` = 'None' WHERE `bs_id` = %d", bill_idd);
		mysql_tquery(mysql_Handle, str_r); DestroyObject(billboard_obj[bill_idd]);
		billboard_obj[bill_idd] = CreateObject(7606, billboard_info[bill_idd][bs_cord][0], billboard_info[bill_idd][bs_cord][1], billboard_info[bill_idd][bs_cord][2], 0.0, 0.0, billboard_info[bill_idd][bs_cord][3]);
		if(billboard_info[bill_idd][bs_id] <= 10) SetObjectMaterialText(billboard_obj[bill_idd], b_num_str, 0, 130, "Arial", 48, 0, 0xFFFFFFFF, 0x131114, 1);
		else if(billboard_info[bill_idd][bs_id] <= 20) SetObjectMaterialText(billboard_obj[bill_idd], b_num_str_LV, 0, 130, "Arial", 48, 0, 0xFFFFFFFF, 0x131114, 1);
		else if(billboard_info[bill_idd][bs_id] <= 30) SetObjectMaterialText(billboard_obj[bill_idd], b_num_str_SF, 0, 130, "Arial", 48, 0, 0xFFFFFFFF, 0x131114, 1);
		PlayerPlaySound(playerid, 6603, 0.0, 0.0, 0.0);
		pData[playerid][p_bill_id] = 0;
		UpdatePlayerData(playerid, "p_bill_id", 0);
		SetPlayerPos(playerid, 2308.7976, -14.8497, 26.7422);
		SetCameraBehindPlayer(playerid); SetPlayerVirtualWorld(playerid, 3); TogglePlayerControllable(playerid, 1);
		SCM(playerid, 0xFF4D4DFF, "√Ñ√Æ√£√Æ√¢√Æ√∞ √†√∞√•√≠√§√ª √∞√•√™√´√†√¨√≠√Æ√£√Æ √°√®√´√°√Æ√∞S√≠ √∞√†√±√≤√Æ√∞√£√≠√≥√≤");
	}
	case 4254: {
		if(!response) return show_setting_billboard(playerid, pData[playerid][p_bill_id]);
		if(!strlen(inputtext)) return SPD(playerid, 4254, DIALOG_STYLE_INPUT, "{99cc33}√í√•√™√±√≤ √°√®√´√°√Æ√∞S√≠", ""CWHITE"√Ç√¢√•√§√®√≤√• √≤√•√™√±√≤ √§√´√ø √°√®√´√°√Æ√∞S√≠ √¢ √Ø√Æ√´√• √≠√®√¶√•.\n√å√†√™√±√®√¨√†√´√º√≠√†√ø √§√´√®√≠√† √≤√•√™√±√≤√†: 100 √±√®√¨√¢√Æ√´√Æ√¢ (√¢√™√´√æ√∑√†√ø √±√Ø√•√∂√®√†√´√º√≠√ª√•):", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
		if(strlen(inputtext) > 100) return SCM(playerid, COLOR_LIGHTGREY, "√å√†√™√±√®√¨√†√´√º√≠√†√ø √§√´√®√≠√† √≤√•√™√±√≤√†: 100 √±√®√¨√¢√Æ√´√Æ√¢ (√¢√™√´√æ√∑√†√ø √™√Æ√§√ª √∂√¢√•√≤√Æ√¢ √® √±√®√¨√¢√Æ√´√ª √Ø√•√∞√•√≠√Æ√±√†)"), SPD(playerid, 4254, DIALOG_STYLE_INPUT, "{99cc33}√í√•√™√±√≤ √°√®√´√°√Æ√∞S√≠", ""CWHITE"√Ç√¢√•√§√®√≤√• √≤√•√™√±√≤ √§√´√ø √°√®√´√°√Æ√∞S√≠ √¢ √Ø√Æ√´√• √≠√®√¶√•.\n√å√†√™√±√®√¨√†√´√º√≠√†√ø √§√´√®√≠√† √≤√•√™√±√≤√†: 100 √±√®√¨√¢√Æ√´√Æ√¢ (√¢√™√´√æ√∑√†√ø √±√Ø√•√∂√®√†√´√º√≠√ª√•):", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
		new bill_id = pData[playerid][p_bill_id], str_r[144], br_str[120];
		strmid(br_str, inputtext, 0, 120);
		for(new i = 0; i < 4; i ++) {
			new find = strfind(br_str, "/", true);
			if(find != -1) strdel(br_str, find, find + 1), strins(br_str, "\n", find, find + 2);
		}
		new delother = strfind(br_str, "/", true);
		if(delother != -1) strdel(br_str, delother, 120);
		format(billboard_info[bill_id][bs_text], 120, ""CWHITE"%s", br_str);
		SCM(playerid, 0x009966FF, "√í√•√™√±√≤ √°√®√´√°√Æ√∞S√≠ √≥√±√Ø√•√∏√≠√Æ √®√ß√¨√•√≠¬∏√≠");
		mysql_format(mysql_Handle, str_r, 144, "UPDATE `billboards` SET `bs_text` = '"CWHITE"%s' WHERE `bs_id` = %d", inputtext, bill_id);
		mysql_tquery(mysql_Handle, str_r); updatebillboards_info(playerid); show_setting_billboard(playerid, pData[playerid][p_bill_id]);
	}
	case 2044: {
	    if(!response) return 1;
		if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √≤√∞√†√≠√±√Ø√Æ√∞√≤√•");
	    if(GetPlayerInterior(playerid) != 0 || GetPlayerVirtualWorld(playerid) != 0) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √Ø√Æ√¨√•√π√•√≠√®√ø√µ");
	    new Float: px, Float: py, Float: pz, Float: angle;
	    GetPlayerPos(playerid, px, py, pz);
	    GetPlayerFacingAngle(playerid, angle);
		px += floatsin(-angle, degrees); py += floatcos(-angle, degrees);
	    ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.2, 0, 0, 0, 0, 0, 1);
		new str_r[4]; valstr(str_r, playerid);
	    pdobject3DText[playerid] = CreateDynamic3DTextLabel(str_r, 0xBB995580, px, py, pz - 1.0, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0, -1, 5.0);
	    switch(listitem) {
		    case 0: pdobject[playerid] = CreateDynamicObject(1237, px, py, pz - 1.0, 0.0, 0.0, angle - 180.0);
		    case 1: pdobject[playerid] = CreateDynamicObject(1427, px, py, pz - 0.5, 0.0, 0.0, angle - 180.0);
		    case 2: pdobject[playerid] = CreateDynamicObject(967, px, py, pz - 1.0, 0.0, 0.0, angle - 180.0);
		    case 3: pdobject[playerid] = CreateDynamicObject(997, px, py, pz - 1.0, 0.0, 0.0, angle);
		    case 4: pdobject[playerid] = CreateDynamicObject(979, px, py, pz - 0.35, 0.0, 0.0, angle);
		    case 5: pdobject[playerid] = CreateDynamicObject(2773, px, py, pz - 0.5, 0.0, 0.0, angle - 90.0);
		    case 6: pdobject[playerid] = CreateDynamicObject(19425, px, py, pz - 1.0, 0.0, 0.0, angle - 180.0);
		    case 7: pdobject[playerid] = CreateDynamicObject(3350, px, py, pz - 1.0, 0.0, 0.0, angle - 180.0);
		    case 8: pdobject[playerid] = CreateDynamicObject(18880, px, py, pz - 2.0, 0.0, 0.0, angle - 180.0);
		    case 9: {
			    pdobject[playerid] = CreateDynamicObject(19981, px, py, pz - 1.0, 0.0, 0.0, angle);
				SetTimerEx("EditObjectTable", 2000, false, "ii", playerid, 1);
			}
		    case 10: {
			    pdobject[playerid] = CreateDynamicObject(19980, px, py, pz - 1.0, 0.0, 0.0, angle);
				SetTimerEx("EditObjectTable", 2000, false, "ii", playerid, 2);
			}
		    case 11: pdobject[playerid] = CreateDynamicObject(19952, px, py, pz - 1.0, 0.0, 0.0, angle);
		    case 12: pdobject[playerid] = CreateDynamicObject(19951, px, py, pz - 1.0, 0.0, 0.0, angle);
		    case 13: pdobject[playerid] = CreateDynamicObject(19950, px, py, pz - 1.0, 0.0, 0.0, angle);
			case 14: pdobject[playerid] = CreateDynamicObject(19949, px, py, pz - 1.0, 0.0, 0.0, angle);
		    case 15: pdobject[playerid] = CreateDynamicObject(19948, px, py, pz - 1.0, 0.0, 0.0, angle);
		    case 16: pdobject[playerid] = CreateDynamicObject(19957, px, py, pz - 1.0, 0.0, 0.0, angle);
		    case 17: pdobject[playerid] = CreateDynamicObject(19967, px, py, pz - 1.0, 0.0, 0.0, angle);
		    case 18: pdobject[playerid] = CreateDynamicObject(19966, px, py, pz - 1.0, 0.0, 0.0, angle);
		    case 19: pdobject[playerid] = CreateDynamicObject(19979, px, py, pz - 1.0, 0.0, 0.0, angle);
		    case 20: pdobject[playerid] = CreateDynamicObject(19978, px, py, pz - 1.0, 0.0, 0.0, angle);
		    case 21: pdobject[playerid] = CreateDynamicObject(19976, px, py, pz - 1.0, 0.0, 0.0, angle);
		    case 22: pdobject[playerid] = CreateDynamicObject(19974, px, py, pz - 1.0, 0.0, 0.0, angle);
		} Streamer_Update(playerid);
	}
	case 2051: {
	    if(!response) return 1;
	    if(!strlen(inputtext)) return SPD(playerid, 2051, DIALOG_STYLE_INPUT, ""CPALEGREEN"√ì√±√≤√†√≠√Æ√¢√™√† √¢√ª√¢√•√±√™√®", ""CWHITE"√Ç√¢√•√§√®√≤√• √≤√•√™√±√≤, √™√Æ√≤√Æ√∞√ª√© √µ√Æ√≤√®√≤√• √∞√†√ß√¨√•√±√≤√®√≤√º √≠√† √¢√ª√¢√•√±√™√•\n\n- Usar√≤√• √∂√¢√•√≤√Æ√¢√ª√• √™√Æ√§√ª √¢ √¢√®√§√• "CLIGHTGREY"{------} "CWHITE"√§√´√ø √¢√ª√¢√ÆS√≠ √∂√¢√•√≤√≠√Æ√£√Æ √≤√•√™√±√≤√†\n- √å√†√™√±√®√¨√†√´√º√≠√†√ø √Æ√°√π√†√ø √§√´√®√≠√† √≤√•√™√±√≤√†: 30 √±√®√¨√¢√Æ√´√Æ√¢", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
	    if(strlen(inputtext) > 30) return SCM(playerid, COLOR_LIGHTGREY, "√Ñ√´√®√≠√† √≤√•√™√±√≤√† √≠√• √¨√Æ√¶√•√≤ √°√ª√≤√º √°√Æ√´√•√• 30 √±√®√¨√¢√Æ√´√Æ√¢");
		SetDynamicObjectMaterialText(pdobject[playerid], 2, inputtext, 80, "Arial", 52, 1, -1, -16776961, 1);
	}
	case 2052: {
	    if(!response) return 1;
	    if(!strlen(inputtext)) return SPD(playerid, 2052, DIALOG_STYLE_INPUT, ""CPALEGREEN"√ì√±√≤√†√≠√Æ√¢√™√† √¢√ª√¢√•√±√™√®", ""CWHITE"√Ç√¢√•√§√®√≤√• √≤√•√™√±√≤, √™√Æ√≤√Æ√∞√ª√© √µ√Æ√≤√®√≤√• √∞√†√ß√¨√•√±√≤√®√≤√º √≠√† √¢√ª√¢√•√±√™√•\n\n- Usar√≤√• √±√®√¨√¢√Æ√´ / √§√´√ø √Ø√•√∞√•√µ√ÆS√≠ √≠√† √≠√Æ√¢√≥√æ √±√≤√∞√Æ√™√≥\n- Usar√≤√• √∂√¢√•√≤√Æ√¢√ª√• √™√Æ√§√ª √¢ √¢√®√§√• "CLIGHTGREY"{------} "CWHITE"√§√´√ø √¢√ª√¢√ÆS√≠ √∂√¢√•√≤√≠√Æ√£√Æ √≤√•√™√±√≤√†\n- √å√†√™√±√®√¨√†√´√º√≠√†√ø √Æ√°√π√†√ø √§√´√®√≠√† √≤√•√™√±√≤√†: 60 √±√®√¨√¢√Æ√´√Æ√¢", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
	    if(strlen(inputtext) > 60) return SCM(playerid, COLOR_LIGHTGREY, "√Ñ√´√®√≠√† √≤√•√™√±√≤√† √≠√• √¨√Æ√¶√•√≤ √°√ª√≤√º √°√Æ√´√•√• 60 √±√®√¨√¢√Æ√´√Æ√¢");
		new br_str[64]; strmid(br_str, inputtext, 0, 60);
		for(new i = 0; i < 2; i ++) {
			new find = strfind(br_str, "/", true);
			if(find != -1) strdel(br_str, find, find + 1), strins(br_str, "\n", find, find + 2);
		}
		new delother = strfind(br_str, "/", true);
		if(delother != -1) strdel(br_str, delother, 104);
		SetDynamicObjectMaterialText(pdobject[playerid], 2, br_str, 90, "Arial", 48, 1, -1, -16776961, 1);
	}
	case 184: {
		if(!response) return 1;
		pData[playerid][cancellation_bill] = false;
		UpdatePlayerData(playerid, "cancellation_bill", false);
		strmid(pData[playerid][cancellation_bill_reason], "None", 0, strlen("None"), 255);
		UpdatePlayerDataEx(playerid, "cancellation_bill_reason", "None");
		SCM(playerid, COLOR_ORANGE, "√à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ√° √†√≠√≠√≥√´√®√∞√Æ√¢√†√≠√≠√Æ√¨ √°√®√´√°√Æ√∞√§√• √≥S√≠√´√•√≠√†");
	}
	case 1515: {
		if(!response) return 1;
		SetPVarInt(playerid, "type_admbill", listitem + 1);
		mysql_tquery(mysql_Handle, "SELECT * FROM `billboards`", "billboardsinfo_adm", "ii", playerid, listitem + 1);
	}
	case 1514: {
		if(!response) return callcmd::billboard(playerid);
		if(!strcmp(billboard_info[listitem + 1][bs_renter], "None")) return SCM(playerid, COLOR_GREY, "√ù√≤√Æ√≤ √°√®√´√°√Æ√∞√§ √≠√• √†√∞√•√≠√§√Æ√¢√†√≠");
		SetPVarInt(playerid, "list_billb_adm", listitem + 1);
		SPD(playerid, 1513, DIALOG_STYLE_INPUT, "{ff4d4d}√Ä√≠√≠√≥√´√®√∞√Æ√¢√†√≠√®√• √°√®√´√°√Æ√∞S√≠", "{ff9999}√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø, √¢√¢√•√§√®√≤√• √Ø√∞√®√∑√®√≠√≥\n{ff9999}√†√≠√≠√≥√´√®√∞√Æ√¢√†√≠√®√ø √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√é√∑√®√±√≤√®√≤√º", "Cerrar");
	}
	case 1714: {
		if(!response) return callcmd::billboard(playerid);
		if(!strcmp(billboard_info[listitem + 21][bs_renter], "None")) return SCM(playerid, COLOR_GREY, "√ù√≤√Æ√≤ √°√®√´√°√Æ√∞√§ √≠√• √†√∞√•√≠√§√Æ√¢√†√≠");
		SetPVarInt(playerid, "list_billb_adm", listitem + 21);
		SPD(playerid, 1513, DIALOG_STYLE_INPUT, "{ff4d4d}√Ä√≠√≠√≥√´√®√∞√Æ√¢√†√≠√®√• √°√®√´√°√Æ√∞S√≠", "{ff9999}√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø, √¢√¢√•√§√®√≤√• √Ø√∞√®√∑√®√≠√≥\n{ff9999}√†√≠√≠√≥√´√®√∞√Æ√¢√†√≠√®√ø √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√é√∑√®√±√≤√®√≤√º", "Cerrar");
	}
	case 1614: {
		if(!response) return callcmd::billboard(playerid);
		if(!strcmp(billboard_info[listitem + 11][bs_renter], "None")) return SCM(playerid, COLOR_GREY, "√ù√≤√Æ√≤ √°√®√´√°√Æ√∞√§ √≠√• √†√∞√•√≠√§√Æ√¢√†√≠");
		SetPVarInt(playerid, "list_billb_adm", listitem + 11);
		SPD(playerid, 1513, DIALOG_STYLE_INPUT, "{ff4d4d}√Ä√≠√≠√≥√´√®√∞√Æ√¢√†√≠√®√• √°√®√´√°√Æ√∞S√≠", "{ff9999}√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø, √¢√¢√•√§√®√≤√• √Ø√∞√®√∑√®√≠√≥\n{ff9999}√†√≠√≠√≥√´√®√∞√Æ√¢√†√≠√®√ø √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√é√∑√®√±√≤√®√≤√º", "Cerrar");
	}
	case 1513: {
		if(!response) return DeletePVar(playerid, "list_billb_adm");
		if(!strlen(inputtext)) return SPD(playerid, 1513, DIALOG_STYLE_INPUT, "{ff4d4d}√Ä√≠√≠√≥√´√®√∞√Æ√¢√†√≠√®√• √°√®√´√°√Æ√∞S√≠", "{ff9999}√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø, √¢√¢√•√§√®√≤√• √Ø√∞√®√∑√®√≠√≥\n{ff9999}√†√≠√≠√≥√´√®√∞√Æ√¢√†√≠√®√ø √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√é√∑√®√±√≤√®√≤√º", "Cerrar");
		if(strlen(inputtext) > 50) return SCM(playerid, COLOR_GREY, "√å√†√™√±√®√¨√†√´√º√≠√†√ø √§√´√®√≠√† √Ø√∞√®√∑√®√≠√ª: 50 √ß√≠√†√™√Æ√¢"), SPD(playerid, 1513, DIALOG_STYLE_INPUT, "{ff4d4d}√Ä√≠√≠√≥√´√®√∞√Æ√¢√†√≠√®√• √°√®√´√°√Æ√∞S√≠", "{ff9999}√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø, √¢√¢√•√§√®√≤√• √Ø√∞√®√∑√®√≠√≥\n{ff9999}√†√≠√≠√≥√´√®√∞√Æ√¢√†√≠√®√ø √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√é√∑√®√±√≤√®√≤√º", "Cerrar");
		new bill_idd = GetPVarInt(playerid, "list_billb_adm"), b_num_str[100] = "√ê√•√™√´√†√¨√≠√ª√© √°√†√≠√≠√•√∞\n√Ä√∞√•√≠S√≠ - GPS 8-62",
		b_num_str_LV[100] = "√ê√•√™√´√†√¨√≠√ª√© √°√†√≠√≠√•√∞\n√Ä√∞√•√≠S√≠ - GPS 8-63",
		b_num_str_SF[100] = "√ê√•√™√´√†√¨√≠√ª√© √°√†√≠√≠√•√∞\n√Ä√∞√•√≠S√≠ - GPS 8-64";
		billboard_info[bill_idd][bs_rental_days] = 0;
		new str_r[240]; mysql_format(mysql_Handle, str_r, 240, "UPDATE `billboards` SET `bs_renter` = 'None', `bs_rental_days` = '0', `bs_text` = 'None' WHERE `bs_id` = %d", bill_idd);
		mysql_tquery(mysql_Handle, str_r); DestroyObject(billboard_obj[bill_idd]);
		billboard_obj[bill_idd] = CreateObject(7606, billboard_info[bill_idd][bs_cord][0], billboard_info[bill_idd][bs_cord][1], billboard_info[bill_idd][bs_cord][2], 0.0, 0.0, billboard_info[bill_idd][bs_cord][3]);
		if(billboard_info[bill_idd][bs_id] <= 10) SetObjectMaterialText(billboard_obj[bill_idd], b_num_str, 0, 130, "Arial", 48, 0, 0xFFFFFFFF, 0x131114, 1);
		else if(billboard_info[bill_idd][bs_id] <= 20) SetObjectMaterialText(billboard_obj[bill_idd], b_num_str_LV, 0, 130, "Arial", 48, 0, 0xFFFFFFFF, 0x131114, 1);
		else if(billboard_info[bill_idd][bs_id] <= 30) SetObjectMaterialText(billboard_obj[bill_idd], b_num_str_SF, 0, 130, "Arial", 48, 0, 0xFFFFFFFF, 0x131114, 1);
		if(IsPlayerConnected(GetPlayerID(billboard_info[bill_idd][bs_renter]))) {
			new id_billrenter = GetPlayerID(billboard_info[bill_idd][bs_renter]);
			PlayerPlaySound(id_billrenter, 6603, 0.0, 0.0, 0.0);
			SCM(id_billrenter, 0xFF4D4DFF, "√Ç√†√∏ √∞√•√™√´√†√¨√≠√ª√© √°√®√´√°√Æ√∞√§ √°√ª√´ √†√≠√≠√≥√´√®√∞√Æ√¢√†√≠ √†√§√¨√®√≠√®√±√≤√∞√†√∂√®√•√©");
			SCM(id_billrenter, 0xFF4D4DFF, "√è√Æ√§√∞√Æ√°√≠√•√•: "CCYAN"/billcancel");
			pData[id_billrenter][cancellation_bill] = true;
			pData[id_billrenter][p_bill_id] = 0;
			UpdatePlayerData(id_billrenter, "p_bill_id", 0);
			strmid(pData[id_billrenter][cancellation_bill_reason], inputtext, 0, strlen(inputtext), 255);
			UpdatePlayerData(id_billrenter, "cancellation_bill", true);
			UpdatePlayerDataEx(id_billrenter, "cancellation_bill_reason", inputtext);
		}
		else {
			mysql_format(mysql_Handle, string, 155, "UPDATE `accounts` SET `p_bill_id` = '0', `cancellation_bill` = '1', `cancellation_bill_reason` = '%s' WHERE `Name` = '%s'", inputtext, billboard_info[bill_idd][bs_renter]);
			mysql_tquery(mysql_Handle, string);
		}
		strmid(billboard_info[bill_idd][bs_renter], "None", 0, strlen("None"), 255); 
		SCM(playerid, 0xBFBB41FF, "√Å√®√´√°√Æ√∞√§ √≥√±√Ø√•√∏√≠√Æ √†√≠√≠√≥√´√®√∞√Æ√¢√†√≠");
		DeletePVar(playerid, "list_billb_adm");
	}
	case 1919: {
		if(!response) return clear_crhomeprocess(playerid);
		GetPlayerPos(playerid, createhome_posenter[playerid][0], createhome_posenter[playerid][1], createhome_posenter[playerid][2]);
		SPD(playerid, 1911, DIALOG_STYLE_INPUT, ""CLITEBLUE"√ë√Æ√ßS√≠√≠√®√• √§√Æ√¨√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √¢ √Ø√Æ√´√• √≠√®√¶√• √Æ√≤√§√•√´√ø√ø √Ø√∞√Æ√°√•√´√†√¨√® ID √®√≠√≤√•√∞√º√•√∞√† √® √™√Æ√Æ√∞√§√®√≠√†√≤√ª (XYZ)\n√¢√ª√µ√ÆS√≠ √®√ß √§√Æ√¨√†. √è√∞√®√¨√•√∞: {abcdef}5 318.6 1114.4 1083.8", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
	}
	case 1911: {
		if(!response) return clear_crhomeprocess(playerid);
		new int_id, Float: pos_x, Float: pos_y, Float: pos_z;
		if(sscanf(inputtext, "dfff", int_id, pos_x, pos_y, pos_z)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √∑√≤√Æ-√≤√Æ √≠√• √¢√¢√•√´√®. √è√Æ√Ø√∞√Æ√°√≥√©√≤√• √•√π¬∏ √∞√†√ß"), SPD(playerid, 1911, DIALOG_STYLE_INPUT, ""CLITEBLUE"√ë√Æ√ßS√≠√≠√®√• √§√Æ√¨√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √¢ √Ø√Æ√´√• √≠√®√¶√• √Æ√≤√§√•√´√ø√ø √Ø√∞√Æ√°√•√´√†√¨√® ID √®√≠√≤√•√∞√º√•√∞√† √® √™√Æ√Æ√∞√§√®√≠√†√≤√ª (XYZ)\n√¢√ª√µ√ÆS√≠ √®√ß √§√Æ√¨√†. √è√∞√®√¨√•√∞: 4 1210.0 1411.0 940.0", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
		createhome_interiorid[playerid] = int_id;
		createhome_posexit[playerid][0] = pos_x;
		createhome_posexit[playerid][1] = pos_y;
		createhome_posexit[playerid][2] = pos_z;
		SPD(playerid, 1912, DIALOG_STYLE_TABLIST_HEADERS, ""CLITEBLUE"√ë√Æ√ßS√≠√≠√®√• √§√Æ√¨√†", "{888888}√í√•√Ø√•√∞√º √¢√ª√°√•√∞√®√≤√• √™√´√†√±√± √§√´√ø √§√Æ√¨√† √®√ß √±√Ø√®√±√™√†:\n"CWHITE"√Å√æ√§√¶√•√≤√≠√ª√©\n√ù√™√Æ√≠√Æ√¨\n√ë√∞√•√§√≠√®√©\n√Ç√ª√±√Æ√™√®√©\n√ù√´√®√≤√≠√ª√©", "Seleccione", "Cerrar");
	}
	case 1912: {
		if(!response) return clear_crhomeprocess(playerid);
		switch(listitem) {
			case 0: createhome_classid[playerid] = 1;
			case 1: createhome_classid[playerid] = 2;
			case 2: createhome_classid[playerid] = 3;
			case 3: createhome_classid[playerid] = 4;
			case 4: createhome_classid[playerid] = 5;
		}
		SPD(playerid, 1913, DIALOG_STYLE_INPUT, ""CLITEBLUE"√ë√Æ√ßS√≠√≠√®√• √§√Æ√¨√†", ""CWHITE"√è√∞√Æ√∂√•√±√± √±√Æ√ßS√≠√≠√®√ø √Ø√Æ√∑√≤√® √ß√†√¢√•√∞√∏¬∏√≠. √Ç√¢√•√§√®√≤√• √∂√•√≠√≥ √§√´√ø √§√Æ√¨√†:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
	}
	case 1913: {
		if(!response) return clear_crhomeprocess(playerid);
		if(!strlen(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§√®√≤√• √∂√•√≠√≥ √§√´√ø √§√Æ√¨√†"), SPD(playerid, 1913, DIALOG_STYLE_INPUT, ""CLITEBLUE"√ë√Æ√ßS√≠√≠√®√• √§√Æ√¨√†", ""CWHITE"√è√∞√Æ√∂√•√±√± √±√Æ√ßS√≠√≠√®√ø √Ø√Æ√∑√≤√® √ß√†√¢√•√∞√∏¬∏√≠. √Ç√¢√•√§√®√≤√• √∂√•√≠√≥ √§√´√ø √§√Æ√¨√†:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
       	for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return SPD(playerid, 1913, DIALOG_STYLE_INPUT, ""CLITEBLUE"√ë√Æ√ßS√≠√≠√®√• √§√Æ√¨√†", ""CWHITE"√è√∞√Æ√∂√•√±√± √±√Æ√ßS√≠√≠√®√ø √Ø√Æ√∑√≤√® √ß√†√¢√•√∞√∏¬∏√≠. √Ç√¢√•√§√®√≤√• √∂√•√≠√≥ √§√´√ø √§√Æ√¨√†:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
			}
		}
		createhome_price[playerid] = strval(inputtext);
		SPD(playerid, 1915, DIALOG_STYLE_INPUT, ""CLITEBLUE"√ë√Æ√ßS√≠√≠√®√• √§√Æ√¨√†", ""CWHITE"√é√±√≤√†√´√Æ√±√º √≥√™√†√ß√†√≤√º √¨√•√±√≤√Æ √∞√•√±√Ø√†√¢√≠√† √§√´√ø √†√¢√≤√Æ√¨√Æ√°√®√´√ø.\n√Ç√¢√•√§√®√≤√• √™√Æ√Æ√∞√§√®√≠√†√≤√ª √Ø√Æ√ß√®√∂√®√® √® √Ø√Æ√¢√Æ√∞√Æ√≤√† (XYZA):", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
	}
	case 1915: {
		if(!response) return clear_crhomeprocess(playerid);
		new Float: pos_x, Float: pos_y, Float: pos_z, Float: pos_a;
		if(sscanf(inputtext, "ffff", pos_x, pos_y, pos_z, pos_a)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √∑√≤√Æ-√≤√Æ √≠√• √¢√¢√•√´√®. √è√Æ√Ø√∞√Æ√°√≥√©√≤√• √•√π¬∏ √∞√†√ß"), SPD(playerid, 1915, DIALOG_STYLE_INPUT, ""CLITEBLUE"√ë√Æ√ßS√≠√≠√®√• √§√Æ√¨√†", ""CWHITE"√é√±√≤√†√´√Æ√±√º √≥√™√†√ß√†√≤√º √¨√•√±√≤√Æ √∞√•√±√Ø√†√¢√≠√† √§√´√ø √†√¢√≤√Æ√¨√Æ√°√®√´√ø.\n√Ç√¢√•√§√®√≤√• √™√Æ√Æ√∞√§√®√≠√†√≤√ª √Ø√Æ√ß√®√∂√®√® √® √Ø√Æ√¢√Æ√∞√Æ√≤√† (XYZA):", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
		createhome_carpos[playerid][0] = pos_x;
		createhome_carpos[playerid][1] = pos_y;
		createhome_carpos[playerid][2] = pos_z;
		createhome_carpos[playerid][3] = pos_a;
		new crprop_str[500];
		format(crprop_str, 500, ""CWHITE"√Ç√±√ø √≠√•√Æ√°√µ√Æ√§√®√¨√†√ø √®√≠√¥√Æ√∞√¨√†√∂√®√ø √¢√¢√•√§√•√≠√†. √è√∞√Æ√¢√•√∞√º√≤√• √•¬∏:\n\n\
			"CPALEGREEN"√à√≠√≤√•√∞√º√•√∞, √™√Æ√Æ√∞√§√®√≠√†√≤√ª (XYZ) √¢√µ√ÆS√≠ √¢ √§√Æ√¨: %d %f %f %f\n\
			√à√≠√≤√•√∞√º√•√∞, √™√Æ√Æ√∞√§√®√≠√†√≤√ª (XYZ) √¢√ª√µ√ÆS√≠ √®√ß √§√Æ√¨√†: %d %f %f %f\n\
			√ä√Æ√Æ√∞√§√®√≠√†√≤√ª √∞√•√±√Ø√†√¢√≠√† √†√¢√≤√Æ√¨√Æ√°√®√´√ø: %f %f %f %f\n\
			√ä√´√†√±√± √§√Æ√¨√†: %s\n\
			√É√Æ√±. √∂√•√≠√† √§√Æ√¨√†: %d$\n\n\
		"CWHITE"√Ö√±√´√® √¢√±¬∏ √¢√¢√•√§√•√≠√Æ √¢√•√∞√≠√Æ, √≠√†√¶√¨√®√≤√• √™√≠√Æ√Ø√™√≥ \"√ë√Æ√ßS√≠√≤√º\".",
		GetPlayerInterior(playerid), createhome_posenter[playerid][0], createhome_posenter[playerid][1], createhome_posenter[playerid][2], createhome_interiorid[playerid], createhome_posexit[playerid][0], createhome_posexit[playerid][1], createhome_posexit[playerid][2],
		pos_x, pos_y, pos_z, pos_a, classhome_names[createhome_classid[playerid]], createhome_price[playerid]);
		SPD(playerid, 1914, DIALOG_STYLE_MSGBOX, ""CLITEBLUE"√ë√Æ√ßS√≠√≠√®√• √§√Æ√¨√†", crprop_str, "√ë√Æ√ßS√≠√≤√º", "Cerrar");
	}
	case 1914: {
		if(!response) return clear_crhomeprocess(playerid);
		TOTAL_HOUSE ++;
		new id_home = TOTAL_HOUSE;
		HouseInfo[id_home][hID] = id_home;
		HouseInfo[id_home][hEnter][0] = createhome_posenter[playerid][0];
		HouseInfo[id_home][hEnter][1] = createhome_posenter[playerid][1];
		HouseInfo[id_home][hEnter][2] = createhome_posenter[playerid][2];
		HouseInfo[id_home][hCar][0] = createhome_carpos[playerid][0];
		HouseInfo[id_home][hCar][1] = createhome_carpos[playerid][1];
		HouseInfo[id_home][hCar][2] = createhome_carpos[playerid][2];
		HouseInfo[id_home][hCar][3] = createhome_carpos[playerid][3];
		HouseInfo[id_home][hInt] = createhome_interiorid[playerid];
		HouseInfo[id_home][hExit][0] = createhome_posexit[playerid][0];
		HouseInfo[id_home][hExit][1] = createhome_posexit[playerid][1];
		HouseInfo[id_home][hExit][2] = createhome_posexit[playerid][2];
		HouseInfo[id_home][hKlass] = createhome_classid[playerid];
		HouseInfo[id_home][hValue] = createhome_price[playerid];
		
		strmid(HouseInfo[id_home][hOwner], "The State", 0, strlen("The State"), 255);
		for(new i = 0; i != 5; i ++) HouseInfo[id_home][hGun][i] = 0, HouseInfo[id_home][hGunAmmo][i] = 0;
		HouseInfo[id_home][hPay] = 5;
		HouseInfo[id_home][hLock] = 1;
		HouseInfo[id_home][hOwned] = 0;
		HouseInfo[id_home][hSafe] = 0;
		HouseInfo[id_home][hADoor] = 0;
		HouseInfo[id_home][hSub] = 0;
		HouseInfo[id_home][hPool] = 0;
		CreateDynamic3DTextLabel("√Ç√ª√µ√Æ√§ √®√ß √°√†√±√±√•√©√≠√†\n"CMAIN"(√™√´√†√¢√®√∏√† ALT)", COLOR_WHITE, -1051.0314,453.9560,2.0479,9.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,id_home + 50);
		HouseInfo[id_home][LabelText] = CreateDynamic3DTextLabel("√Ç√ª√µ√Æ√§ √®√ß √§√Æ√¨√†\n"CMAIN"(√™√´√†√¢√®√∏√† ALT)", COLOR_WHITE,HouseInfo[id_home][hExit][0],HouseInfo[id_home][hExit][1],HouseInfo[id_home][hExit][2]-0.5,9.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,id_home + 50,HouseInfo[id_home][hInt]);
		new query_prop[1370];
		mysql_format(mysql_Handle, query_prop, 1370, "INSERT INTO `house` (`hADoor`, `hSub`, `hCarx`, `hCary`, `hCarz`, `hCarc`, `hEntrancex`, `hInt`, `hEntrancey`, `hEntrancez`, `hExitx`, `hExity`, `hExitz`, `hOwner`, `hValue`, `hKlass`, `hPay`, `hLock`, `hOwned`, `hSafe`, `hGun1`, `hGun2`, `hGun3`, `hGun4`, `hGun5`, `hGunAmmo1`, `hGunAmmo2`, `hGunAmmo3`, `hGunAmmo4`, `hGunAmmo5`, `hPool`) VALUES (%d,%d, %f, %f, %f, %f, %f, %d, %f, %f, %f, %f, %f, 'The State', %d, %d, '5', %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d)",
			HouseInfo[id_home][hADoor], HouseInfo[id_home][hSub], HouseInfo[id_home][hCar][0], HouseInfo[id_home][hCar][1], HouseInfo[id_home][hCar][2], HouseInfo[id_home][hCar][3], HouseInfo[id_home][hEnter][0], HouseInfo[id_home][hInt], HouseInfo[id_home][hEnter][1], HouseInfo[id_home][hEnter][2], HouseInfo[id_home][hExit][0], HouseInfo[id_home][hExit][1], HouseInfo[id_home][hExit][2], HouseInfo[id_home][hOwner], HouseInfo[id_home][hValue], HouseInfo[id_home][hKlass], HouseInfo[id_home][hLock],
			HouseInfo[id_home][hOwned], HouseInfo[id_home][hSafe], HouseInfo[id_home][hGun][0], HouseInfo[id_home][hGun][1], HouseInfo[id_home][hGun][2], HouseInfo[id_home][hGun][3], HouseInfo[id_home][hGun][4], HouseInfo[id_home][hGunAmmo][0], HouseInfo[id_home][hGunAmmo][1], HouseInfo[id_home][hGunAmmo][2], HouseInfo[id_home][hGunAmmo][3], HouseInfo[id_home][hGunAmmo][4], HouseInfo[id_home][hPool]);
		mysql_tquery(mysql_Handle, query_prop);

		UpdateIconHouse(id_home);
		SaveHouse(id_home);

		PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
		SCMF(playerid, COLOR_YELLOW, "√Ñ√Æ√¨ √≥√±√Ø√•√∏√≠√Æ √±√Æ√ßS√≠√≠ √Ø√Æ√§ √≠√Æ√¨√•√∞√Æ√¨ "CLITEBLUE"%d", id_home);
	}
	case 594: {
		if(!response) return 1;

		new org = pData[playerid][pMember];
		if(!IsPlayerInRangeOfPoint(playerid, 100, FractionInfo[org][fPosX],FractionInfo[org][fPosY],FractionInfo[org][fPosZ]) || 
			GetPlayerVirtualWorld(playerid) != FractionInfo[org][fractionVirt] || 
			GetPlayerInterior(playerid) != FractionInfo[org][fractionInt]) 
			return SCM(playerid,COLOR_LIGHTGREY,"√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √Ø√Æ√¨√•√π√•√≠√®√® √±√¢√Æ√•√© √Æ√∞√£√†√≠√®√ß√†√∂√®√®");

		switch(listitem) {
			case 0: SPD(playerid, 595, DIALOG_STYLE_INPUT, ""CPALEGREEN"√è√Æ√Ø√Æ√´√≠√•√≠√®√• √°√†√≠√™√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ √µ√Æ√≤√®√≤√• √Ø√Æ√´√Æ√¶√®√≤√º\n√¢ √Ø√Æ√´√• √≠√®√¶√•:", "√è√Æ√´√Æ√¶√®√≤√º", "Siguiente");
			case 1: SPD(playerid, 596, DIALOG_STYLE_INPUT, ""CPALEGREEN"√ë√≠√ø√≤√®√• √±√∞√•√§√±√≤√¢ √± √°√†√≠√™√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ √µ√Æ√≤√®√≤√• √±√≠√ø√≤√º\n√¢ √Ø√Æ√´√• √≠√®√¶√•:", "√ë√≠√ø√≤√º", "Siguiente");
		}
	}
	case 595: {
		if(!response) return callcmd::orgbank(playerid);
		if(!strlen(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¢√¢√•√´√® √±√≥√¨√¨√≥ √Ø√Æ√Ø√Æ√´√≠√•√≠√®√ø"), SPD(playerid, 595, DIALOG_STYLE_INPUT, ""CPALEGREEN"√è√Æ√Ø√Æ√´√≠√•√≠√®√• √°√†√≠√™√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ √µ√Æ√≤√®√≤√• √Ø√Æ√´√Æ√¶√®√≤√º\n√¢ √Ø√Æ√´√• √≠√®√¶√•:", "√è√Æ√´√Æ√¶√®√≤√º", "Siguiente");
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§√•√≠√† √≠√•√¢√•√∞√≠√†√ø √±√≥√¨√¨√† √Ø√Æ√Ø√Æ√´√≠√•√≠√®√ø"), SPD(playerid, 595, DIALOG_STYLE_INPUT, ""CPALEGREEN"√è√Æ√Ø√Æ√´√≠√•√≠√®√• √°√†√≠√™√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ √µ√Æ√≤√®√≤√• √Ø√Æ√´√Æ√¶√®√≤√º\n√¢ √Ø√Æ√´√• √≠√®√¶√•:", "√è√Æ√´√Æ√¶√®√≤√º", "Siguiente");
			}
		} new summa_org = strval(inputtext), orgid = pData[playerid][pMember];
		if(summa_org > 10000) return SCM(playerid, COLOR_LIGHTGREY, "√å√†√™√±√®√¨√†√´√º√≠√†√ø √±√≥√¨√¨√† √Ø√Æ√Ø√Æ√´√≠√•√≠√®√ø √ß√† √Æ√§√≠√≥ √Æ√Ø√•√∞√†√∂√®√æ: 10000$"), SPD(playerid, 595, DIALOG_STYLE_INPUT, ""CPALEGREEN"√è√Æ√Ø√Æ√´√≠√•√≠√®√• √°√†√≠√™√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ √µ√Æ√≤√®√≤√• √Ø√Æ√´√Æ√¶√®√≤√º\n√¢ √Ø√Æ√´√• √≠√®√¶√•:", "√è√Æ√´√Æ√¶√®√≤√º", "Siguiente");
		if(pData[playerid][pCash] < summa_org) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Ø√Æ√Ø√Æ√´√≠√•√≠√®√ø"), SPD(playerid, 595, DIALOG_STYLE_INPUT, ""CPALEGREEN"√è√Æ√Ø√Æ√´√≠√•√≠√®√• √°√†√≠√™√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ √µ√Æ√≤√®√≤√• √Ø√Æ√´√Æ√¶√®√≤√º\n√¢ √Ø√Æ√´√• √≠√®√¶√•:", "√è√Æ√´√Æ√¶√®√≤√º", "Siguiente");
		if(!orgid) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [034]");
		org_bank[orgid][o_money] += summa_org;
		new query[120];
		mysql_format(mysql_Handle, query, 120, "UPDATE `bank_orgs` SET `balance` = `balance` + %d WHERE `orgid` = %d", summa_org, orgid);
		mysql_tquery(mysql_Handle, query);
		Hook_GivePlayerMoney(playerid, -summa_org);
		new gametext_hook[60]; format(gametext_hook, 60, "~r~-%d$", summa_org);
		GameTextForPlayer(playerid, gametext_hook, 3000, 1);
		format(string, 128, "%s %s[%d] √Ø√Æ√Ø√Æ√´√≠√®√´ √°√†√≠√™ √Æ√∞√£√†√≠√®√ß√†√∂√®√® √≠√† "CCYAN"%d$", new_rank_name[orgid - 1][pData[playerid][pRank] - 1], GetName(playerid), playerid, summa_org);
		SFFM(orgid, COLOR_LITEBLUE, string);
	}
	case 596: {
		if(!response) return callcmd::orgbank(playerid);
		if(!strlen(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¢√¢√•√´√® √±√≥√¨√¨√≥ √±√≠√ø√≤√®√ø"), SPD(playerid, 596, DIALOG_STYLE_INPUT, ""CPALEGREEN"√ë√≠√ø√≤√®√• √±√∞√•√§√±√≤√¢ √± √°√†√≠√™√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ √µ√Æ√≤√®√≤√• √±√≠√ø√≤√º\n√¢ √Ø√Æ√´√• √≠√®√¶√•:", "√ë√≠√ø√≤√º", "Siguiente");
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§√•√≠√† √≠√•√¢√•√∞√≠√†√ø √±√≥√¨√¨√† √±√≠√ø√≤√®√ø"), SPD(playerid, 596, DIALOG_STYLE_INPUT, ""CPALEGREEN"√ë√≠√ø√≤√®√• √±√∞√•√§√±√≤√¢ √± √°√†√≠√™√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ √µ√Æ√≤√®√≤√• √±√≠√ø√≤√º\n√¢ √Ø√Æ√´√• √≠√®√¶√•:", "√ë√≠√ø√≤√º", "Siguiente");
			}
		} new summa_org = strval(inputtext), orgid = pData[playerid][pMember];
		if(summa_org > 10000) return SCM(playerid, COLOR_LIGHTGREY, "√å√†√™√±√®√¨√†√´√º√≠√†√ø √±√≥√¨√¨√† √±√≠√ø√≤√®√ø √ß√† √Æ√§√≠√≥ √Æ√Ø√•√∞√†√∂√®√æ: 10000$"), SPD(playerid, 596, DIALOG_STYLE_INPUT, ""CPALEGREEN"√ë√≠√ø√≤√®√• √±√∞√•√§√±√≤√¢ √± √°√†√≠√™√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ √µ√Æ√≤√®√≤√• √±√≠√ø√≤√º\n√¢ √Ø√Æ√´√• √≠√®√¶√•:", "√ë√≠√ø√≤√º", "Siguiente");
		if(org_bank[orgid][o_money] < summa_org) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √°√†√≠√™√• √Æ√∞√£√†√≠√®√ß√†√∂√®√® No √±√≤√Æ√´√º√™√Æ √±√∞√•√§√±√≤√¢"), SPD(playerid, 596, DIALOG_STYLE_INPUT, ""CPALEGREEN"√ë√≠√ø√≤√®√• √±√∞√•√§√±√≤√¢ √± √°√†√≠√™√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ √µ√Æ√≤√®√≤√• √±√≠√ø√≤√º\n√¢ √Ø√Æ√´√• √≠√®√¶√•:", "√ë√≠√ø√≤√º", "Siguiente");
		if(!orgid) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [035]");
		org_bank[orgid][o_money] -= summa_org;
		new query[120];
		mysql_format(mysql_Handle, query, 120, "UPDATE `bank_orgs` SET `balance` = `balance` - %d WHERE `orgid` = %d", summa_org, orgid);
		mysql_tquery(mysql_Handle, query);
		Hook_GivePlayerMoney(playerid, summa_org);
		new gametext_hook[60]; format(gametext_hook, 60, "~g~+%d$", summa_org);
		GameTextForPlayer(playerid, gametext_hook, 3000, 1);
		format(string, 128, "%s %s[%d] √±√≠√ø√´ "CERROR"%d$ "CLITEBLUE"c √°√†√≠√™√† √Æ√∞√£√†√≠√®√ß√†√∂√®√®", new_rank_name[orgid - 1][pData[playerid][pRank] - 1], GetName(playerid), playerid, summa_org);
		SFFM(orgid, COLOR_LITEBLUE, string);
	}
	case 1955: {
		if(!response) return DeletePVar(playerid, "give_targetplayer");
		new str_dial[100];
		switch(listitem) {
			case 0: {
				format(str_dial, sizeof(str_dial), ""CWHITE"√ë√™√Æ√´√º√™√Æ √Ø√†√≤√∞√Æ√≠√Æ√¢ √≠√≥√¶√≠√Æ √Ø√•√∞√•S√≠√≤√º?\n√ë√•√©√∑√†√± √≥ √Ç√†√± {997020}%d √∏√≤.", pData[playerid][pPatr]);
				SPD(playerid, 2850, DIALOG_STYLE_INPUT, "{bf8040}√è√•√∞√•S√≠√∑√† √Ø√†√≤√∞√Æ√≠√Æ√¢", str_dial, "√è√•√∞√•S√≠√≤√º", "Cerrar");
			}
			case 1: {
				format(str_dial, sizeof(str_dial), ""CWHITE"√ë√™√Æ√´√º√™√Æ √£√∞√†√¨√¨ √≠√†√∞√™√Æ√≤√®√™√Æ√¢ √≠√≥√¶√≠√Æ √Ø√•√∞√•S√≠√≤√º?\n√ë√•√©√∑√†√± √≥ √Ç√†√± {997020}%d √£", pData[playerid][pDrugs]);
				SPD(playerid, 1956, DIALOG_STYLE_INPUT, "{bf8040}√è√•√∞√•S√≠√∑√† √≠√†√∞√™√Æ√≤√®√™√Æ√¢", str_dial, "√è√•√∞√•S√≠√≤√º", "Cerrar");
			}
			case 2: {
				format(str_dial, sizeof(str_dial), ""CWHITE"√ë√™√Æ√´√º√™√Æ √™√®√´√Æ√£√∞√†√¨√¨ √¨√•√≤√†√´√´√† √≠√≥√¶√≠√Æ √Ø√•√∞√•S√≠√≤√º?\n√ë√•√©√∑√†√± √≥ √Ç√†√± {997020}%d √™√£", pData[playerid][pMetal]);
				SPD(playerid, 1957, DIALOG_STYLE_INPUT, "{bf8040}√è√•√∞√•S√≠√∑√† √¨√•√≤√†√´√´√†", str_dial, "√è√•√∞√•S√≠√≤√º", "Cerrar");
			}
			case 3: {
				format(str_dial, sizeof(str_dial), ""CWHITE"√ë√™√Æ√´√º√™√Æ √†√Ø√≤√•√∑√•√™ √≠√≥√¶√≠√Æ √Ø√•√∞√•S√≠√≤√º?\n√ë√•√©√∑√†√± √≥ √Ç√†√± {997020}%d √∏√≤.", pData[playerid][pAptech]);
				SPD(playerid, 2848, DIALOG_STYLE_INPUT, "{bf8040}√è√•√∞√•S√≠√∑√† √†√Ø√≤√•√∑√•√™", str_dial, "√è√•√∞√•S√≠√≤√º", "Cerrar");
			}
			case 4: {
				format(str_dial, sizeof(str_dial), ""CWHITE"√ë√™√Æ√´√º√™√Æ √¨√†√±√Æ√™ √≠√≥√¶√≠√Æ √Ø√•√∞√•S√≠√≤√º?\n√ë√•√©√∑√†√± √≥ √Ç√†√± {997020}%d √∏√≤.", pData[playerid][pMasks]);
				SPD(playerid, 2849, DIALOG_STYLE_INPUT, "{bf8040}√è√•√∞√•S√≠√∑√† √¨√†√±√Æ√™", str_dial, "√è√•√∞√•S√≠√≤√º", "Cerrar");
			}
		}
	}
	case 1956: {
		if(!response) return DeletePVar(playerid, "give_targetplayer");
		if(!strlen(inputtext)) {
			format(string, 100, ""CWHITE"√ë√™√Æ√´√º√™√Æ √£√∞√†√¨√¨ √≠√†√∞√™√Æ√≤√®√™√Æ√¢ √≠√≥√¶√≠√Æ √Ø√•√∞√•S√≠√≤√º?\n√ë√•√©√∑√†√± √≥ √Ç√†√± {997020}%d √£", pData[playerid][pDrugs]);
			return SPD(playerid, 1956, DIALOG_STYLE_INPUT, "{bf8040}√è√•√∞√•S√≠√∑√† √≠√†√∞√™√Æ√≤√®√™√Æ√¢", string, "√è√•√∞√•S√≠√≤√º", "Cerrar");
		}
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: {
					format(string, 100, ""CWHITE"√ë√™√Æ√´√º√™√Æ √£√∞√†√¨√¨ √≠√†√∞√™√Æ√≤√®√™√Æ√¢ √≠√≥√¶√≠√Æ √Ø√•√∞√•S√≠√≤√º?\n√ë√•√©√∑√†√± √≥ √Ç√†√± {997020}%d √£", pData[playerid][pDrugs]);
					return SPD(playerid, 1956, DIALOG_STYLE_INPUT, "{bf8040}√è√•√∞√•S√≠√∑√† √≠√†√∞√™√Æ√≤√®√™√Æ√¢", string, "√è√•√∞√•S√≠√≤√º", "Cerrar");
				}
			}
		}
		if(pData[playerid][pDrugs] < strval(inputtext)) return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± No √±√≤√Æ√´√º√™√Æ √£√∞√†√¨√¨ √≠√†√∞√™√Æ√≤√®√™√Æ√¢");
		new give_tid = GetPVarInt(playerid, "give_targetplayer"); DeletePVar(playerid, "give_targetplayer");
		if(!ProxDetectorS(3.5, playerid, give_tid)) return SCM(playerid, COLOR_GREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
		if(pTemp[give_tid][pAFK] >= AFK_SECOND) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√Æ√≤ √®√£√∞√Æ√™ √≠√†√µ√Æ√§√®√≤√±√ø √¢ AFK");
		if(!pData[give_tid][p_premium] && pData[give_tid][pDrugs] >= 1000) return SCM(playerid, COLOR_GREY, "√ì √®√£√∞√Æ√™√† √¨√†√™√±√®√¨√†√´√º√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √≠√†√∞√™√Æ√≤√®√™√Æ√¢");
		if(pData[give_tid][p_premium] && pData[give_tid][pDrugs] >= 1000) return SCM(playerid, COLOR_GREY, "√ì √®√£√∞√Æ√™√† √¨√†√™√±√®√¨√†√´√º√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √≠√†√∞√™√Æ√≤√®√™√Æ√¢");
		if(!pData[give_tid][p_premium] && pData[give_tid][pDrugs] + strval(inputtext) >= 1000) return SCM(playerid, COLOR_GREY, "√à√£√∞√Æ√™ √≠√• √±√¨√Æ√¶√•√≤ √≥√≠√•√±√≤√® √± √±√Æ√°√Æ√© √±√≤√Æ√´√º√™√Æ √≠√†√∞√™√Æ√≤√®√™√Æ√¢");
		if(pData[give_tid][p_premium] && pData[give_tid][pDrugs] + strval(inputtext) >= 2000) return SCM(playerid, COLOR_GREY, "√à√£√∞√Æ√™ √≠√• √±√¨√Æ√¶√•√≤ √≥√≠√•√±√≤√® √± √±√Æ√°√Æ√© √±√≤√Æ√´√º√™√Æ √≠√†√∞√™√Æ√≤√®√™√Æ√¢");
		if(pData[playerid][pSex] == 1) format(string, 128, "%s √§√Æ√±√≤√†√´ √≠√†√∞√™√Æ√≤√®√™√® √® √Ø√•√∞√•S√≠√´ √®√µ %s", GetName(playerid), GetName(give_tid));
		else format(string, 128, "%s √§√Æ√±√≤√†√´√† √≠√†√∞√™√Æ√≤√®√™√® √® √Ø√•√∞√•S√≠√´√† √®√µ %s", GetName(playerid), GetName(give_tid));
		ProxDetector(12.0, playerid, string, COLOR_PURPLE);
		SCMF(give_tid, COLOR_BLUE, "%s[%d] √Ø√•√∞√•S√≠√´ √Ç√†√¨ √≠√†√∞√™√Æ√≤√®√™√® "CORANGE"(%d √£)", GetName(playerid), playerid, strval(inputtext));
		PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0);
		pData[playerid][pDrugs] -= strval(inputtext);
		pData[give_tid][pDrugs] += strval(inputtext);
		UpdatePlayerData(playerid, "pDrugs", pData[playerid][pDrugs]);
		UpdatePlayerData(give_tid, "pDrugs", pData[give_tid][pDrugs]);
	}
	case 1957: {
		if(!response) return DeletePVar(playerid, "give_targetplayer");
		if(!strlen(inputtext)) {
			format(string, 100, ""CWHITE"√ë√™√Æ√´√º√™√Æ √™√®√´√Æ√£√∞√†√¨√¨ √¨√•√≤√†√´√´√† √≠√≥√¶√≠√Æ √Ø√•√∞√•S√≠√≤√º?\n√ë√•√©√∑√†√± √≥ √Ç√†√± {997020}%d √™√£", pData[playerid][pMetal]);
			return SPD(playerid, 1957, DIALOG_STYLE_INPUT, "{bf8040}√è√•√∞√•S√≠√∑√† √¨√•√≤√†√´√´√†", string, "√è√•√∞√•S√≠√≤√º", "Cerrar");
		}
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: {
					format(string, 100, ""CWHITE"√ë√™√Æ√´√º√™√Æ √™√®√´√Æ√£√∞√†√¨√¨ √¨√•√≤√†√´√´√† √≠√≥√¶√≠√Æ √Ø√•√∞√•S√≠√≤√º?\n√ë√•√©√∑√†√± √≥ √Ç√†√± {997020}%d √™√£", pData[playerid][pMetal]);
					return SPD(playerid, 1957, DIALOG_STYLE_INPUT, "{bf8040}√è√•√∞√•S√≠√∑√† √¨√•√≤√†√´√´√†", string, "√è√•√∞√•S√≠√≤√º", "Cerrar");
				}
			}
		}
		if(pData[playerid][pMetal] < strval(inputtext)) return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± No √±√≤√Æ√´√º√™√Æ √™√®√´√Æ√£√∞√†√¨√¨ √¨√•√≤√†√´√´√†");
		new give_tid = GetPVarInt(playerid, "give_targetplayer"); DeletePVar(playerid, "give_targetplayer");
		if(!ProxDetectorS(3.5, playerid, give_tid)) return SCM(playerid, COLOR_GREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
		if(pTemp[give_tid][pAFK] >= AFK_SECOND) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√Æ√≤ √®√£√∞√Æ√™ √≠√†√µ√Æ√§√®√≤√±√ø √¢ AFK");
		if(!pData[give_tid][p_premium] && pData[give_tid][pMetal] >= 20) return SCM(playerid, COLOR_GREY, "√ì √®√£√∞√Æ√™√† √¨√†√™√±√®√¨√†√´√º√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √¨√•√≤√†√´√´√†");
		if(pData[give_tid][p_premium] && pData[give_tid][pMetal] >= 40) return SCM(playerid, COLOR_GREY, "√ì √®√£√∞√Æ√™√† √¨√†√™√±√®√¨√†√´√º√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √¨√•√≤√†√´√´√†");
		if(!pData[give_tid][p_premium] && pData[give_tid][pMetal] + strval(inputtext) >= 20) return SCM(playerid, COLOR_GREY, "√à√£√∞√Æ√™ √≠√• √±√¨√Æ√¶√•√≤ √≥√≠√•√±√≤√® √± √±√Æ√°√Æ√© √±√≤√Æ√´√º√™√Æ √¨√•√≤√†√´√´√†");
		if(pData[give_tid][p_premium] && pData[give_tid][pMetal] + strval(inputtext) >= 40) return SCM(playerid, COLOR_GREY, "√à√£√∞√Æ√™ √≠√• √±√¨√Æ√¶√•√≤ √≥√≠√•√±√≤√® √± √±√Æ√°√Æ√© √±√≤√Æ√´√º√™√Æ √¨√•√≤√†√´√´√†");
		if(pData[playerid][pSex] == 1) format(string, 128, "%s √§√Æ√±√≤√†√´ √°√∞√≥√±√™√® √¨√•√≤√†√´√´√† √® √Ø√•√∞√•S√≠√´ √®√µ %s", GetName(playerid), GetName(give_tid));
		else format(string, 128, "%s √§√Æ√±√≤√†√´√† √°√∞√≥√±√™√® √¨√•√≤√†√´√´√† √® √Ø√•√∞√•S√≠√´√† √®√µ %s", GetName(playerid), GetName(give_tid));
		ProxDetector(12.0, playerid, string, COLOR_PURPLE);
		SCMF(give_tid, COLOR_BLUE, "%s[%d] √Ø√•√∞√•S√≠√´ √Ç√†√¨ √¨√•√≤√†√´√´ "CORANGE"(%d √™√£.)", GetName(playerid), playerid, strval(inputtext));
		PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0);
		pData[playerid][pMetal] -= strval(inputtext);
		pData[give_tid][pMetal] += strval(inputtext);
		UpdatePlayerData(playerid, "pMats", pData[playerid][pMetal]);
		UpdatePlayerData(give_tid, "pMats", pData[give_tid][pMetal]);
	}
	case 2848: {
		if(!response) return DeletePVar(playerid, "give_targetplayer");
		if(!strlen(inputtext)) {
			format(string, 100, ""CWHITE"√ë√™√Æ√´√º√™√Æ √†√Ø√≤√•√∑√•√™ √≠√≥√¶√≠√Æ √Ø√•√∞√•S√≠√≤√º?\n√ë√•√©√∑√†√± √≥ √Ç√†√± {997020}%d √∏√≤.", pData[playerid][pAptech]);
			return SPD(playerid, 2848, DIALOG_STYLE_INPUT, "{bf8040}√è√•√∞√•S√≠√∑√† √†√Ø√≤√•√∑√•√™", string, "√è√•√∞√•S√≠√≤√º", "Cerrar");
		}
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: {
					format(string, 100, ""CWHITE"√ë√™√Æ√´√º√™√Æ √†√Ø√≤√•√∑√•√™ √≠√≥√¶√≠√Æ √Ø√•√∞√•S√≠√≤√º?\n√ë√•√©√∑√†√± √≥ √Ç√†√± {997020}%d √∏√≤.", pData[playerid][pAptech]);
					return SPD(playerid, 2848, DIALOG_STYLE_INPUT, "{bf8040}√è√•√∞√•S√≠√∑√† √†√Ø√≤√•√∑√•√™", string, "√è√•√∞√•S√≠√≤√º", "Cerrar");
				}
			}
		}
		if(pData[playerid][pAptech] < strval(inputtext)) return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± No √±√≤√Æ√´√º√™√Æ √†√Ø√≤√•√∑√•√™");
		new give_tid = GetPVarInt(playerid, "give_targetplayer"); DeletePVar(playerid, "give_targetplayer");
		if(!ProxDetectorS(3.5, playerid, give_tid)) return SCM(playerid, COLOR_GREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
		if(pTemp[give_tid][pAFK] >= AFK_SECOND) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√Æ√≤ √®√£√∞√Æ√™ √≠√†√µ√Æ√§√®√≤√±√ø √¢ AFK");
		if(!pData[give_tid][p_premium] && pData[give_tid][pAptech] >= 1) return SCM(playerid, COLOR_GREY, "√ì √®√£√∞√Æ√™√† √¨√†√™√±√®√¨√†√´√º√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √†√Ø√≤√•√∑√•√™");
		if(pData[give_tid][p_premium] && pData[give_tid][pAptech] >= 5) return SCM(playerid, COLOR_GREY, "√ì √®√£√∞√Æ√™√† √¨√†√™√±√®√¨√†√´√º√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √†√Ø√≤√•√∑√•√™");
		if(!pData[give_tid][p_premium] && pData[give_tid][pAptech] + strval(inputtext) >= 1) return SCM(playerid, COLOR_GREY, "√à√£√∞√Æ√™ √≠√• √±√¨√Æ√¶√•√≤ √≥√≠√•√±√≤√® √± √±√Æ√°√Æ√© √±√≤√Æ√´√º√™√Æ √†√Ø√≤√•√∑√•√™");
		if(pData[give_tid][p_premium] && pData[give_tid][pAptech] + strval(inputtext) >= 5) return SCM(playerid, COLOR_GREY, "√à√£√∞√Æ√™ √≠√• √±√¨√Æ√¶√•√≤ √≥√≠√•√±√≤√® √± √±√Æ√°√Æ√© √±√≤√Æ√´√º√™√Æ √†√Ø√≤√•√∑√•√™");
		if(pData[playerid][pSex] == 1) format(string, 128, "%s √§√Æ√±√≤√†√´ √†√Ø√≤√•√∑√™√® √® √Ø√•√∞√•S√≠√´ √®√µ %s", GetName(playerid), GetName(give_tid));
		else format(string, 128, "%s √§√Æ√±√≤√†√´√† √†√Ø√≤√•√∑√™√® √® √Ø√•√∞√•S√≠√´√† √®√µ %s", GetName(playerid), GetName(give_tid));
		ProxDetector(12.0, playerid, string, COLOR_PURPLE);
		SCMF(give_tid, COLOR_BLUE, "%s[%d] √Ø√•√∞√•S√≠√´ √Ç√†√¨ √†√Ø√≤√•√∑√™√® "CORANGE"(%d √∏√≤.)", GetName(playerid), playerid, strval(inputtext));
		PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0);
		pData[playerid][pAptech] -= strval(inputtext);
		pData[give_tid][pAptech] += strval(inputtext);
		RemoveItemFromInventory(playerid, 4, strval(inputtext));
		AddItemToInventory(give_tid, strval(inputtext), 4);
		UpdatePlayerData(playerid, "pAptech", pData[playerid][pAptech]);
		UpdatePlayerData(give_tid, "pAptech", pData[give_tid][pAptech]);
	}
	case 2849: {
		if(!response) return DeletePVar(playerid, "give_targetplayer");
		if(!strlen(inputtext)) {
			format(string, 100, ""CWHITE"√ë√™√Æ√´√º√™√Æ √¨√†√±√Æ√™ √≠√≥√¶√≠√Æ √Ø√•√∞√•S√≠√≤√º?\n√ë√•√©√∑√†√± √≥ √Ç√†√± {997020}%d √∏√≤.", pData[playerid][pMasks]);
			return SPD(playerid, 2849, DIALOG_STYLE_INPUT, "{bf8040}√è√•√∞√•S√≠√∑√† √¨√†√±√Æ√™", string, "√è√•√∞√•S√≠√≤√º", "Cerrar");
		}
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: {
					format(string, 100, ""CWHITE"√ë√™√Æ√´√º√™√Æ √¨√†√±√Æ√™ √≠√≥√¶√≠√Æ √Ø√•√∞√•S√≠√≤√º?\n√ë√•√©√∑√†√± √≥ √Ç√†√± {997020}%d √∏√≤.", pData[playerid][pMasks]);
					return SPD(playerid, 2849, DIALOG_STYLE_INPUT, "{bf8040}√è√•√∞√•S√≠√∑√† √¨√†√±√Æ√™", string, "√è√•√∞√•S√≠√≤√º", "Cerrar");
				}
			}
		}
		if(pData[playerid][pMasks] < strval(inputtext)) return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± No √±√≤√Æ√´√º√™√Æ √¨√†√±√Æ√™");
		new give_tid = GetPVarInt(playerid, "give_targetplayer"); DeletePVar(playerid, "give_targetplayer");
		if(!ProxDetectorS(3.5, playerid, give_tid)) return SCM(playerid, COLOR_GREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
		if(pTemp[give_tid][pAFK] >= AFK_SECOND) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√Æ√≤ √®√£√∞√Æ√™ √≠√†√µ√Æ√§√®√≤√±√ø √¢ AFK");
		if(!pData[give_tid][p_premium] && pData[give_tid][pMasks] >= 1) return SCM(playerid, COLOR_GREY, "√ì √®√£√∞√Æ√™√† √¨√†√™√±√®√¨√†√´√º√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √¨√†√±√Æ√™");
		if(pData[give_tid][p_premium] && pData[give_tid][pMasks] >= 3) return SCM(playerid, COLOR_GREY, "√ì √®√£√∞√Æ√™√† √¨√†√™√±√®√¨√†√´√º√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √¨√†√±√Æ√™");
		if(!pData[give_tid][p_premium] && pData[give_tid][pMasks] + strval(inputtext) >= 1) return SCM(playerid, COLOR_GREY, "√à√£√∞√Æ√™ √≠√• √±√¨√Æ√¶√•√≤ √≥√≠√•√±√≤√® √± √±√Æ√°√Æ√© √±√≤√Æ√´√º√™√Æ √¨√†√±√Æ√™");
		if(pData[give_tid][p_premium] && pData[give_tid][pMasks] + strval(inputtext) >= 3) return SCM(playerid, COLOR_GREY, "√à√£√∞√Æ√™ √≠√• √±√¨√Æ√¶√•√≤ √≥√≠√•√±√≤√® √± √±√Æ√°√Æ√© √±√≤√Æ√´√º√™√Æ √¨√†√±√Æ√™");
		if(pData[playerid][pSex] == 1) format(string, 128, "%s √§√Æ√±√≤√†√´ √¨√†√±√™√® √® √Ø√•√∞√•S√≠√´ √®√µ %s", GetName(playerid), GetName(give_tid));
		else format(string, 128, "%s √§√Æ√±√≤√†√´√† √¨√†√±√™√® √® √Ø√•√∞√•S√≠√´√† √®√µ %s", GetName(playerid), GetName(give_tid));
		ProxDetector(12.0, playerid, string, COLOR_PURPLE);
		SCMF(give_tid, COLOR_BLUE, "%s[%d] √Ø√•√∞√•S√≠√´ √Ç√†√¨ √¨√†√±√™√® "CORANGE"(%d √∏√≤.)", GetName(playerid), playerid, strval(inputtext));
		PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0);
		pData[playerid][pMasks] -= strval(inputtext);
		pData[give_tid][pMasks] += strval(inputtext);
		RemoveItemFromInventory(playerid, 5, strval(inputtext));
		AddItemToInventory(give_tid, strval(inputtext), 5);
		UpdatePlayerData(playerid, "pMasks", pData[playerid][pMasks]);
		UpdatePlayerData(give_tid, "pMasks", pData[give_tid][pMasks]);
	}
	case 2850: {
		if(!response) return DeletePVar(playerid, "give_targetplayer");
		if(!strlen(inputtext)) {
			format(string, 100, ""CWHITE"√ë√™√Æ√´√º√™√Æ √Ø√†√≤√∞√Æ√≠√Æ√¢ √≠√≥√¶√≠√Æ √Ø√•√∞√•S√≠√≤√º?\n√ë√•√©√∑√†√± √≥ √Ç√†√± {997020}%d √∏√≤.", pData[playerid][pPatr]);
			return SPD(playerid, 2850, DIALOG_STYLE_INPUT, "{bf8040}√è√•√∞√•S√≠√∑√† √Ø√†√≤√∞√Æ√≠√Æ√¢", string, "√è√•√∞√•S√≠√≤√º", "Cerrar");
		}
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: {
					format(string, 100, ""CWHITE"√ë√™√Æ√´√º√™√Æ √Ø√†√≤√∞√Æ√≠√Æ√¢ √≠√≥√¶√≠√Æ √Ø√•√∞√•S√≠√≤√º?\n√ë√•√©√∑√†√± √≥ √Ç√†√± {997020}%d √∏√≤.", pData[playerid][pPatr]);
					return SPD(playerid, 2850, DIALOG_STYLE_INPUT, "{bf8040}√è√•√∞√•S√≠√∑√† √Ø√†√≤√∞√Æ√≠√Æ√¢", string, "√è√•√∞√•S√≠√≤√º", "Cerrar");
				}
			}
		}
		if(pData[playerid][pPatr] < strval(inputtext)) return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± No √±√≤√Æ√´√º√™√Æ √Ø√†√≤√∞√Æ√≠√Æ√¢");
		new give_tid = GetPVarInt(playerid, "give_targetplayer"); DeletePVar(playerid, "give_targetplayer");
		if(!ProxDetectorS(3.5, playerid, give_tid)) return SCM(playerid, COLOR_GREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
		if(pTemp[give_tid][pAFK] >= AFK_SECOND) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√Æ√≤ √®√£√∞√Æ√™ √≠√†√µ√Æ√§√®√≤√±√ø √¢ AFK");
		if(!pData[give_tid][p_premium] && pData[give_tid][pPatr] >= 300) return SCM(playerid, COLOR_GREY, "√ì √®√£√∞√Æ√™√† √¨√†√™√±√®√¨√†√´√º√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √Ø√†√≤√∞√Æ√≠√Æ√¢");
		if(pData[give_tid][p_premium] && pData[give_tid][pPatr] >= 600) return SCM(playerid, COLOR_GREY, "√ì √®√£√∞√Æ√™√† √¨√†√™√±√®√¨√†√´√º√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √Ø√†√≤√∞√Æ√≠√Æ√¢");
		if(!pData[give_tid][p_premium] && pData[give_tid][pPatr] + strval(inputtext) >= 300) return SCM(playerid, COLOR_GREY, "√à√£√∞√Æ√™ √≠√• √±√¨√Æ√¶√•√≤ √≥√≠√•√±√≤√® √± √±√Æ√°√Æ√© √±√≤√Æ√´√º√™√Æ √Ø√†√≤√∞√Æ√≠√Æ√¢");
		if(pData[give_tid][p_premium] && pData[give_tid][pPatr] + strval(inputtext) >= 600) return SCM(playerid, COLOR_GREY, "√à√£√∞√Æ√™ √≠√• √±√¨√Æ√¶√•√≤ √≥√≠√•√±√≤√® √± √±√Æ√°√Æ√© √±√≤√Æ√´√º√™√Æ √Ø√†√≤√∞√Æ√≠√Æ√¢");
		if(pData[playerid][pSex] == 1) format(string, 128, "%s √§√Æ√±√≤√†√´ √Ø√†√≤√∞√Æ√≠√ª √® √Ø√•√∞√•S√≠√´ √®√µ %s", GetName(playerid), GetName(give_tid));
		else format(string, 128, "%s √§√Æ√±√≤√†√´√† √Ø√†√≤√∞√Æ√≠√ª √® √Ø√•√∞√•S√≠√´√† √®√µ %s", GetName(playerid), GetName(give_tid));
		ProxDetector(12.0, playerid, string, COLOR_PURPLE);
		SCMF(give_tid, COLOR_BLUE, "%s[%d] √Ø√•√∞√•S√≠√´ √Ç√†√¨ √Ø√†√≤√∞√Æ√≠√ª "CORANGE"(%d √∏√≤.)", GetName(playerid), playerid, strval(inputtext));
		PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0);
		pData[playerid][pPatr] -= strval(inputtext);
		pData[give_tid][pPatr] += strval(inputtext);
		UpdatePlayerData(playerid, "pPatr", pData[playerid][pPatr]);
		UpdatePlayerData(give_tid, "pPatr", pData[give_tid][pPatr]);
	}
	case 2448: {
		if(!response) return DeletePVar(playerid, "fillnum_buy");
		new br_str[50], b = GetPVarInt(playerid, "fillnum_buy");
		if(pData[playerid][pCash] < Filling[b][fPrice]) return SCM(playerid, COLOR_ERROR, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢. √è√Æ√™√≥√Ø√™√† √Æ√≤√¨√•√≠√•√≠√†");
		pData[playerid][pFilling] = b;
		pData[playerid][pJob] = 0;
		UpdatePlayerData(playerid, "pJob", 0);
		UpdatePlayerData(playerid, "pPsbiskey", pData[playerid][pFilling]);
		Hook_GivePlayerMoney(playerid, -Filling[b][fPrice]);
		strmid(Filling[b][fOwner], pData[playerid][pName], 0, strlen(pData[playerid][pName]), 255);
		UpdateFuelInfoEx(playerid, "fOwner", Filling[b][fOwner]);
		Filling[b][fBankMoney] = 100;
		Filling[b][fPay] = 3;
		UpdateFuelInfo(playerid, "fPay", 3);
		UpdateFuelInfo(playerid, "fBankMoney", 100);
		Filling[b][fLock] = false;
		UpdateFuelInfo(playerid, "fLock", false);
		Filling[b][fPriceBenz] = 100;
		format(br_str, 50, "~r~-%d$", Filling[b][fPrice]);
		GameTextForPlayer(playerid, br_str, 2000, 1);
		UpdateFuelInfo(playerid, "fPriceBenz", 100);
		SCMF(playerid, -1, "√è√Æ√ß√§√∞√†√¢√´√ø√•√¨! √Ç√ª √Ø√∞√®√Æ√°√∞√•√´√® √Ä√á√ë "CPALEGREEN"(%s)", Filling[b][ffName]);
		SCM(playerid, COLOR_ORANGE, "√ç√• √ß√†√°√≥√§√º√≤√• √Æ√Ø√´√†√≤√®√≤√º √•¬∏ √¢ √±√Ø√•√∂√®√†√´√º√≠√Æ√¨ √∞√†√ß√§√•√´√• √°√†√≠√™√†");
		PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
		SCM(playerid, -1, "√Ñ√´√ø √≥√Ø√∞√†√¢√´√•√≠√®√ø √ß√†√Ø√∞√†√¢√Æ√∑√≠√Æ√© √±√≤√†√≠√∂√®√•√© Usar√≤√• √™√Æ√¨√†√≠√§√≥ "CMAIN"/fpanel");
		update_3dtext_fill(b);
		return 1;
	}
	case 9484: {
		if(!response) return DeletePVar(playerid, "drugs_count_PP"), DeletePVar(playerid, "drugs_price_PP");
		new str_drugs[144], PP_query[90], price_drugs = GetPVarInt(playerid, "drugs_price_PP"), drugs_count = GetPVarInt(playerid, "drugs_count_PP");
		DeletePVar(playerid, "drugs_count_PP"), DeletePVar(playerid, "drugs_price_PP");
		pData[playerid][pDrugs] += drugs_count;
		drugs_factorygang -= drugs_count;
		mysql_format(mysql_Handle, PP_query, 90, "UPDATE `otherfuncs` SET `drugs_gang` = %d", drugs_factorygang);
		mysql_tquery(mysql_Handle, PP_query);
		format(str_drugs, 144, "√ç√†√∞√™√Æ√ß√†√¢√Æ√§\n"CWHITE"√ç√†√∞√™√Æ√≤√®√™√Æ√¢ √≠√† √ß√†√¢√Æ√§√•: "CLITEBLUE"%d √£√∞\n"CLITEBLUE"/buydrugs "CWHITE"- √™√≥√Ø√®√≤√º √≠√†√∞√™√Æ√≤√®√™√®", drugs_factorygang);
		UpdateDynamic3DTextLabelText(text_drugsgang, 0x77AA55FF, str_drugs);
		UpdatePlayerData(playerid, "pDrugs", pData[playerid][pDrugs]);
		Hook_GivePlayerMoney(playerid, -price_drugs);
		PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
		SCMF(playerid, COLOR_BLUE, "√Ç√ª √≥√±√Ø√•√∏√≠√Æ √Ø√∞√®√Æ√°√∞√•√´√® %d √£ √≠√†√∞√™√Æ√≤√®√™√Æ√¢ √ß√† {40bf40}%d$", drugs_count, price_drugs);
	}
	case 635: {
		if(!response) return 1;
		new Float: a_hpplayer; GetPlayerHealth(playerid, a_hpplayer);
		switch(listitem) {
			case 0: {
				GameTextForPlayer(playerid, "~b~+ 30 hp", 2000, 6);
				SetPlayerHealth(playerid, (a_hpplayer + 30 > 100.0 ? (100.0) : (a_hpplayer + 30)));
				MeAction(playerid, "√±√∫√•√´ √°√≥√≤√•√∞√°√∞√Æ√§ √± √¨√†√±√´√Æ√¨");
			}
			case 1: {
				GameTextForPlayer(playerid, "~b~+ 50 hp", 2000, 6);
				SetPlayerHealth(playerid, (a_hpplayer + 50 > 100.0 ? (100.0) : (a_hpplayer + 50)));
				MeAction(playerid, "√±√∫√•√´ √Ø√Æ√∞√∂√®√æ √∞√®√±√Æ√¢√Æ√© √™√†√∏√®");
			}
			case 2: {
				GameTextForPlayer(playerid, "~b~+ 50 hp", 2000, 6);
				SetPlayerHealth(playerid, (a_hpplayer + 50 > 100.0 ? (100.0) : (a_hpplayer + 50)));
				MeAction(playerid, "√±√∫√•√´ √Ø√Æ√∞√∂√®√æ √£√∞√•√∑√≠√•√¢√Æ√© √™√†√∏√®");
			}
			case 3: {
				GameTextForPlayer(playerid, "~b~+ 70 hp", 2000, 6);
				SetPlayerHealth(playerid, (a_hpplayer + 70 > 100.0 ? (100.0) : (a_hpplayer + 70)));
				MeAction(playerid, "√±√∫√•√´ √Ø√Æ√∞√∂√®√æ √™√∞√†√±√≠√Æ√£√Æ √°√Æ√∞√π√†");
			}
			case 4: {
				GameTextForPlayer(playerid, "~b~+ 70 hp", 2000, 6);
				SetPlayerHealth(playerid, (a_hpplayer + 70 > 100.0 ? (100.0) : (a_hpplayer + 70)));
				MeAction(playerid, "√±√∫√•√´ √Ø√Æ√∞√∂√®√æ √ß√•√´¬∏√≠√Æ√£√Æ √°√Æ√∞√π√†");
			}
		}
		if(pData[playerid][pHungry] == 1) {
			pData[playerid][pHungry] = 0;
			UpdatePlayerData(playerid,"pHungry",0);
		}
		ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0, 1);
		PlayerPlaySound(playerid, 32200, 0.0, 0.0, 0.0);
	}
	case 4847: {
		if(!response) return 1;
		new bizid = pData[playerid][pBusiness];
		new type = BizInfo[bizid][bTypeBiz];
		if(bizid == -1) return 1;
		switch(listitem) {
			case 0: ShowBusinessInformation(playerid, bizid);
			case 1: {
				if(type == 31) return SCM(playerid, COLOR_LIGHTGREY, "√á√†√™√∞√ª√¢√†√≤√º √Æ√≤√•√´√º √§√´√ø √Ø√Æ√±√•√≤√®√≤√•√´√•√© √≠√•√´√º√ß√ø");
				if(!BizInfo[bizid][bLock]) {
					SCM(playerid, COLOR_ERROR, "√Å√®√ß√≠√•√± √ß√†√™√∞√ª√≤");
					BizInfo[bizid][bLock] = 1;
				}
				else {
					SCM(playerid, COLOR_MAIN, "√Å√®√ß√≠√•√± √Æ√≤√™√∞√ª√≤");
					BizInfo[bizid][bLock] = 0;
				}
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
				UpdateBusinessData(bizid, "bLock", BizInfo[bizid][bLock]);
				UpdateBizInfo(bizid);
				callcmd::business(playerid);
			}
			case 2: callcmd::sellbiz(playerid);
			case 3: SPD(playerid, 4895, DIALOG_STYLE_INPUT,"{FFCD00}√è√∞√ÆS√≠√¶√†",""CWHITE"√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø √¢√¢√•√§√®√≤√• √∑√•√∞√•√ß √Ø√∞√Æ√°√•√´\n√Ø√†√∞√†√¨√•√≤√∞√ª √§√´√ø √Ø√∞√ÆS√≠√¶√® √°√®√ß√≠√•√±√†\n\n"CLITEBLUE"[id √®√£√∞√Æ√™√†] [√∂√•√≠√†]","S√≠√´√•√•","Cerrar");
			case 4:
			{
				switch(type)
				{
					case 12: SPD(playerid,2424,2, ""CMAIN"√à√ß√¨√•√≠√•√≠√®√• √∂√•√≠", "√ñ√•√≠√† √ß√† √¢√µ√Æ√§ √¢ √°√®√ß√≠√•√±\n√ë√≤√Æ√®√¨√Æ√±√≤√º √†√∞√•√≠√§√ª √°√®√´√°√Æ√∞S√≠ √ß√† √§√•√≠√º", "Seleccione", "Siguiente");
					case 2,4,39: SPD(playerid,71,2, ""CMAIN"√à√ß√¨√•√≠√•√≠√®√• √∂√•√≠", "√ñ√•√≠√† √ß√† √¢√µ√Æ√§ √¢ √°√®√ß√≠√•√±\n√í√Æ√¢√†√∞ 1 (√è√®√¢√Æ)\n√í√Æ√¢√†√∞ 2 (√Ç√Æ√§√™√†)\n√í√Æ√¢√†√∞ 3 (Brandy)\n√í√Æ√¢√†√∞ 4 (√Ç√®√≠√Æ)\n√í√Æ√¢√†√∞ 5 (√ò√†√≥√∞√¨√†)\n√í√Æ√¢√†√∞ 6 (√ë√®√£√†√∞√†)", "Seleccione", "Siguiente");
					default: SPD(playerid,2424,2, ""CMAIN"√à√ß√¨√•√≠√•√≠√®√• √∂√•√≠", "√ñ√•√≠√† √ß√† √¢√µ√Æ√§ √¢ √°√®√ß√≠√•√±", "Seleccione", "Siguiente");
				}
			}
			case 5: {
				EnableGPS(playerid, BizInfo[bizid][EntBizVh][0], BizInfo[bizid][EntBizVh][1], BizInfo[bizid][EntBizVh][2]);
				SCM(playerid, COLOR_YELLOW, "√Å√®√ß√≠√•√± √Æ√≤√¨√•√∑√•√≠ √≥ √Ç√†√± √≠√† GPS");
			}
			case 6:
			{
				if(!IsPlayerInRangeOfPoint(playerid, 100.0, BizInfo[bizid][ExitBiz][0],BizInfo[bizid][ExitBiz][1],BizInfo[bizid][ExitBiz][2])) 
					return SCM(playerid, COLOR_ERROR, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √±√¢√Æ¬∏√¨ √°√®√ß√≠√•√±√•");
				SPD(playerid, 9927, DIALOG_STYLE_INPUT, "{FFCD00}√è√Æ√Ø√Æ√´√≠√•√≠√®√•", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
			}
			case 7:
			{
				if(!IsPlayerInRangeOfPoint(playerid, 100.0, BizInfo[bizid][ExitBiz][0],BizInfo[bizid][ExitBiz][1],BizInfo[bizid][ExitBiz][2])) 
					return SCM(playerid, COLOR_ERROR, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √±√¢√Æ¬∏√¨ √°√®√ß√≠√•√±√•");
				SPD(playerid, 9928, DIALOG_STYLE_INPUT, "{FFCD00}√ë√≠√ø√≤√®√•", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
			}
		}
		return 1;
	}
	case 4953: {
		if(!response) return 1;
		new bizid = pData[playerid][pBusiness];
		if(bizid == -1) return 1;
		switch(listitem) {
			case 0: ShowBusinessInformation(playerid, bizid);
			case 1: callcmd::sellbiz(playerid);
			case 2: SPD(playerid, 4895, DIALOG_STYLE_INPUT,"{FFCD00}√è√∞√ÆS√≠√¶√†",""CWHITE"√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø √¢√¢√•√§√®√≤√• √∑√•√∞√•√ß √Ø√∞√Æ√°√•√´\n√Ø√†√∞√†√¨√•√≤√∞√ª √§√´√ø √Ø√∞√ÆS√≠√¶√® √°√®√ß√≠√•√±√†\n\n"CLITEBLUE"[id √®√£√∞√Æ√™√†] [√∂√•√≠√†]","S√≠√´√•√•","Cerrar");
			case 3: SPD(playerid,2425,2, ""CMAIN"√à√ß√¨√•√≠√•√≠√®√• √∂√•√≠", "√ñ√•√≠√† √ß√† √¢√µ√Æ√§ √¢ √°√®√ß√≠√•√±\n√ñ√•√≠√† √ß√† √≠√Æ√¨√•√∞ (√¢ √§√•√≠√º)", "Seleccione", "Siguiente");
			case 4: {
				EnableGPS(playerid, BizInfo[bizid][EntBizVh][0], BizInfo[bizid][EntBizVh][1], BizInfo[bizid][EntBizVh][2]);
				SCM(playerid, COLOR_YELLOW, "√Å√®√ß√≠√•√± √Æ√≤√¨√•√∑√•√≠ √≥ √Ç√†√± √≠√† GPS");
			}
			case 5: SPD(playerid, 9927, DIALOG_STYLE_INPUT, "{FFCD00}√è√Æ√Ø√Æ√´√≠√•√≠√®√•", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
			case 6: SPD(playerid, 9928, DIALOG_STYLE_INPUT, "{FFCD00}√ë√≠√ø√≤√®√•", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
		}
		return 1;
	}
case 2424: {
		if(!response) return callcmd::business(playerid);
		switch(listitem) {
			case 0: SPD(playerid,72,1, ""CMAIN"√ñ√•√≠√† √ß√† √¢√µ√Æ√§", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¢√≥√æ √∂√•√≠√≥ √ß√† √¢√µ√Æ√§ √¢ √Ç√†√∏ √°√®√ß√≠√•√±: "CMAIN"(0 - √≥√°√∞√†√≤√º)\n{ff9966}√ç√• √±√≤√†√¢√º√≤√• √±√´√®√∏√™√Æ√¨ √¢√ª√±√Æ√™√≥√æ √∂√•√≠√≥. √ù√≤√Æ √¨√Æ√¶√•√≤ √Æ√°√†√≠√™√∞√Æ√≤√®√≤√º √Ç√†√∏ √°√®√ß√≠√•√±.", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
			case 1: SPD(playerid,2426,1, ""CLITEBLUE"√ë√≤√Æ√®√¨√Æ√±√≤√º √†√∞√•√≠√§√ª", ""CWHITE"√Ç√¢√•√§√®√≤√• √∂√•√≠√≥ √ß√† 1 √§√•√≠√º √†√∞√•√≠√§√ª\n√°√®√´√°√Æ√∞S√≠ √¢ √Ç√†√∏√•√¨ √†√£√•√≠√≤√±√≤√¢√• √¢ √Ø√Æ√´√• √≠√®√¶√• "CPALEGREEN"(√Æ√≤ 2000$ √§√Æ 8000$)"CWHITE":", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
		}
	}
case 2425: {
		if(!response) return callcmd::business(playerid);
		switch(listitem) {
			case 0: SPD(playerid,72,1, ""CMAIN"√ñ√•√≠√† √ß√† √¢√µ√Æ√§", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¢√≥√æ √∂√•√≠√≥ √ß√† √¢√µ√Æ√§ √¢ √Ç√†√∏ √°√®√ß√≠√•√±: "CMAIN"(0 - √≥√°√∞√†√≤√º)\n{ff9966}√ç√• √±√≤√†√¢√º√≤√• √±√´√®√∏√™√Æ√¨ √¢√ª√±√Æ√™√≥√æ √∂√•√≠√≥. √ù√≤√Æ √¨√Æ√¶√•√≤ √Æ√°√†√≠√™√∞√Æ√≤√®√≤√º √Ç√†√∏ √°√®√ß√≠√•√±.", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
			case 1: SPD(playerid,2429,1, ""CLITEBLUE"√ñ√•√≠√† √ß√† √≠√Æ√¨√•√∞", ""CWHITE"√Ç√¢√•√§√®√≤√• √∂√•√≠√≥ √ß√† 1 √§√•√≠√º √†√∞√•√≠√§√ª √£√Æ√±√≤√®√≠√®√∑√≠√Æ√£√Æ\n√≠√Æ√¨√•√∞√† √¢ √Ç√†√∏√•√¨ √Æ√≤√•√´√• √¢ √Ø√Æ√´√• √≠√®√¶√• "CPALEGREEN"(√Æ√≤ 300$ √§√Æ 3000$)"CWHITE":", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
		}
	}
case 2426: {
		if(!response) return 1;
		if(!strlen(inputtext)) return SPD(playerid,2426,1, ""CLITEBLUE"√ë√≤√Æ√®√¨√Æ√±√≤√º √†√∞√•√≠√§√ª", ""CWHITE"√Ç√¢√•√§√®√≤√• √∂√•√≠√≥ √ß√† 1 √§√•√≠√º √†√∞√•√≠√§√ª\n√°√®√´√°√Æ√∞S√≠ √¢ √Ç√†√∏√•√¨ √†√£√•√≠√≤√±√≤√¢√• √¢ √Ø√Æ√´√• √≠√®√¶√• "CPALEGREEN"(√Æ√≤ 2000$ √§√Æ 8000$)"CWHITE":", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
	    for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return SPD(playerid,2426,1, ""CLITEBLUE"√ë√≤√Æ√®√¨√Æ√±√≤√º √†√∞√•√≠√§√ª", ""CWHITE"√Ç√¢√•√§√®√≤√• √∂√•√≠√≥ √ß√† 1 √§√•√≠√º √†√∞√•√≠√§√ª\n√°√®√´√°√Æ√∞S√≠ √¢ √Ç√†√∏√•√¨ √†√£√•√≠√≤√±√≤√¢√• √¢ √Ø√Æ√´√• √≠√®√¶√• "CPALEGREEN"(√Æ√≤ 2000$ √§√Æ 8000$)"CWHITE":", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
			}
		}
		if(strval(inputtext) < 2000 || strval(inputtext) > 8000) return SCM(playerid, COLOR_GREY, "√Ñ√Æ√Ø√≥√±√≤√®√¨√†√ø √∂√•√≠√†: √Æ√≤ 2000$ √§√Æ 8000$"), SPD(playerid,2426,1, ""CLITEBLUE"√ë√≤√Æ√®√¨√Æ√±√≤√º √†√∞√•√≠√§√ª", ""CWHITE"√Ç√¢√•√§√®√≤√• √∂√•√≠√≥ √ß√† 1 √§√•√≠√º √†√∞√•√≠√§√ª\n√°√®√´√°√Æ√∞S√≠ √¢ √Ç√†√∏√•√¨ √†√£√•√≠√≤√±√≤√¢√• √¢ √Ø√Æ√´√• √≠√®√¶√• "CPALEGREEN"(√Æ√≤ 2000$ √§√Æ 8000$)"CWHITE":", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
		BizInfo[pData[playerid][pBusiness]][bCena][0] = strval(inputtext);
		SCMF(playerid,COLOR_BLUE,"√ç√Æ√¢√†√ø √∂√•√≠√† √ß√† 1 √§√•√≠√º √†√∞√•√≠√§√ª √°√®√´√°√Æ√∞S√≠: "CYELLOW"%d$",strval(inputtext));
		return UpdateBusinessData(pData[playerid][pBusiness], "bCena1",BizInfo[pData[playerid][pBusiness]][bCena][0]);
	}
case 2429: {
		if(!response) return 1;
		if(!strlen(inputtext)) return SPD(playerid,2429,1, ""CLITEBLUE"√ñ√•√≠√† √ß√† √≠√Æ√¨√•√∞", ""CWHITE"√Ç√¢√•√§√®√≤√• √∂√•√≠√≥ √ß√† 1 √§√•√≠√º √†√∞√•√≠√§√ª √£√Æ√±√≤√®√≠√®√∑√≠√Æ√£√Æ\n√≠√Æ√¨√•√∞√† √¢ √Ç√†√∏√•√¨ √Æ√≤√•√´√• √¢ √Ø√Æ√´√• √≠√®√¶√• "CPALEGREEN"(√Æ√≤ 300$ √§√Æ 3000$)"CWHITE":", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
	    for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return SPD(playerid,2429,1, ""CLITEBLUE"√ñ√•√≠√† √ß√† √≠√Æ√¨√•√∞", ""CWHITE"√Ç√¢√•√§√®√≤√• √∂√•√≠√≥ √ß√† 1 √§√•√≠√º √†√∞√•√≠√§√ª √£√Æ√±√≤√®√≠√®√∑√≠√Æ√£√Æ\n√≠√Æ√¨√•√∞√† √¢ √Ç√†√∏√•√¨ √Æ√≤√•√´√• √¢ √Ø√Æ√´√• √≠√®√¶√• "CPALEGREEN"(√Æ√≤ 300$ √§√Æ 3000$)"CWHITE":", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
			}
		}
		if(strval(inputtext) < 200 || strval(inputtext) > 2000) {
			SPD(playerid,2429,1, ""CLITEBLUE"√ñ√•√≠√† √ß√† √≠√Æ√¨√•√∞", ""CWHITE"√Ç√¢√•√§√®√≤√• √∂√•√≠√≥ √ß√† 1 √§√•√≠√º √†√∞√•√≠√§√ª √£√Æ√±√≤√®√≠√®√∑√≠√Æ√£√Æ\n√≠√Æ√¨√•√∞√† √¢ √Ç√†√∏√•√¨ √Æ√≤√•√´√• √¢ √Ø√Æ√´√• √≠√®√¶√• "CPALEGREEN"(√Æ√≤ 300$ √§√Æ 3000$)"CWHITE":", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
			return SCM(playerid, COLOR_GREY, "√Ñ√Æ√Ø√≥√±√≤√®√¨√†√ø √∂√•√≠√†: √Æ√≤ 200$ √§√Æ 2000$");
		}
		BizInfo[pData[playerid][pBusiness]][bCena][0] = strval(inputtext);
		SCMF(playerid,COLOR_BLUE,"√ç√Æ√¢√†√ø √∂√•√≠√† √ß√† √≠√Æ√¨√•√∞ √¢ √±√≥√≤√™√®: "CYELLOW"%d$",strval(inputtext));
		UpdateBizInfo(pData[playerid][pBusiness]);
		return UpdateBusinessData(pData[playerid][pBusiness], "bCena1",BizInfo[pData[playerid][pBusiness]][bCena][0]);
	}
	case 2841: {
		if(!response) return 1;
		if(!IsPlayerInRangeOfPoint(playerid, 3.0, 2603.7129,-1298.4945,1008.1899) && GetPlayerVirtualWorld(playerid) != 1)
			return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [036]");
		if(pData[playerid][pMember] != 19) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [037]");
		switch(listitem) {
			case 0: {
				if(deaglesv_status < 1) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√Æ√£√Æ √Æ√∞√≥√¶√®√ø No √≠√† √±√™√´√†√§√•");
				if(GetPVarInt(playerid, "armygun_deagle") > gettime()) return SCM(playerid, COLOR_GREY, "√Ç√ª √±√¨√Æ√¶√•√≤√• √¢√ß√ø√≤√º √Ω√≤√Æ √Æ√∞√≥√¶√®√• √∑√•√∞√•√ß 5 √¨√®√≠√≥√≤");
				GivePlayerWeapon(playerid, 24, 50); deaglesv_status --;
				format(string, 128, "%s %s[%d] √¢√ß√ø√´ "CMAIN"Desert Eagle "CLITEBLUE"√±√Æ √±√™√´√†S√≠ √Æ√∞√≥√¶√®√ø", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], GetName(playerid), playerid);
				SFFM(pData[playerid][pMember], COLOR_LITEBLUE, string);
				SCM(playerid, COLOR_MAIN, "√Ç√ª √¢√ß√ø√´√® "CLITEBLUE"Desert Eagle "CMAIN"√±√Æ √±√™√´√†S√≠ √Æ√∞√≥√¶√®√ø");
				SetPVarInt(playerid, "armygun_deagle", gettime() + 300);
			}
			case 1: {
				if(pData[playerid][pRank] < 2) return SCM(playerid, COLOR_GREY, "√Å√∞√†√≤√º √Ω√≤√Æ √Æ√∞√≥√¶√®√• √∞√†√ß√∞√•√∏√•√≠√Æ √±√Æ 2-√£√Æ √∞√†√≠√£√†");
				if(mp5sv_status < 1) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√Æ√£√Æ √Æ√∞√≥√¶√®√ø No √≠√† √±√™√´√†√§√•");
				if(GetPVarInt(playerid, "armygun_mp5") > gettime()) return SCM(playerid, COLOR_GREY, "√Ç√ª √±√¨√Æ√¶√•√≤√• √¢√ß√ø√≤√º √Ω√≤√Æ √Æ√∞√≥√¶√®√• √∑√•√∞√•√ß 5 √¨√®√≠√≥√≤");
				GivePlayerWeapon(playerid, 29, 50); mp5sv_status --;
				format(string, 128, "%s %s[%d] √¢√ß√ø√´ "CMAIN"MP5 "CLITEBLUE"√±√Æ √±√™√´√†S√≠ √Æ√∞√≥√¶√®√ø", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], GetName(playerid), playerid);
				SFFM(pData[playerid][pMember], COLOR_LITEBLUE, string);
				SCM(playerid, COLOR_MAIN, "√Ç√ª √¢√ß√ø√´√® "CLITEBLUE"MP5 "CMAIN"√±√Æ √±√™√´√†S√≠ √Æ√∞√≥√¶√®√ø");
				SetPVarInt(playerid, "armygun_mp5", gettime() + 300);
			}
			case 2: {
				if(pData[playerid][pRank] < 3) return SCM(playerid, COLOR_GREY, "√Å√∞√†√≤√º √Ω√≤√Æ √Æ√∞√≥√¶√®√• √∞√†√ß√∞√•√∏√•√≠√Æ √± 3-√£√Æ √∞√†√≠√£√†");
				if(m4sv_status < 1) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√Æ√£√Æ √Æ√∞√≥√¶√®√ø No √≠√† √±√™√´√†√§√•");
				if(GetPVarInt(playerid, "armygun_m4") > gettime()) return SCM(playerid, COLOR_GREY, "√Ç√ª √±√¨√Æ√¶√•√≤√• √¢√ß√ø√≤√º √Ω√≤√Æ √Æ√∞√≥√¶√®√• √∑√•√∞√•√ß 5 √¨√®√≠√≥√≤");
				GivePlayerWeapon(playerid, 31, 50); m4sv_status --;
				format(string, 128, "%s %s[%d] √¢√ß√ø√´ "CMAIN"M4 "CLITEBLUE"√±√Æ √±√™√´√†S√≠ √Æ√∞√≥√¶√®√ø", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], GetName(playerid), playerid);
				SFFM(pData[playerid][pMember], COLOR_LITEBLUE, string);
				SCM(playerid, COLOR_MAIN, "√Ç√ª √¢√ß√ø√´√® "CLITEBLUE"M4 "CMAIN"√±√Æ √±√™√´√†S√≠ √Æ√∞√≥√¶√®√ø");
				SetPVarInt(playerid, "armygun_m4", gettime() + 300);
			}
			case 3: {
				if(pData[playerid][pRank] < 7) return SCM(playerid, COLOR_GREY, "√Å√∞√†√≤√º √Ω√≤√Æ √Æ√∞√≥√¶√®√• √∞√†√ß√∞√•√∏√•√≠√Æ √± 7-√£√Æ √∞√†√≠√£√†");
				if(snipersv_status < 1) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√Æ√£√Æ √Æ√∞√≥√¶√®√ø No √≠√† √±√™√´√†√§√•");
				if(GetPVarInt(playerid, "armygun_sniprifle") > gettime()) return SCM(playerid, COLOR_GREY, "√Ç√ª √±√¨√Æ√¶√•√≤√• √¢√ß√ø√≤√º √Ω√≤√Æ √Æ√∞√≥√¶√®√• √∑√•√∞√•√ß 5 √¨√®√≠√≥√≤");
				GivePlayerWeapon(playerid, 34, 50); snipersv_status --;
				format(string, 128, "%s %s[%d] √¢√ß√ø√´ "CMAIN"Sniper Rifle "CLITEBLUE"√±√Æ √±√™√´√†S√≠ √Æ√∞√≥√¶√®√ø", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], GetName(playerid), playerid);
				SFFM(pData[playerid][pMember], COLOR_LITEBLUE, string);
				SCM(playerid, COLOR_MAIN, "√Ç√ª √¢√ß√ø√´√® "CLITEBLUE"Sniper Rifle "CMAIN"√±√Æ √±√™√´√†S√≠ √Æ√∞√≥√¶√®√ø");
				SetPVarInt(playerid, "armygun_sniprifle", gettime() + 300);
			}
		}
		update_storesarmy();
	}
	case 2842: {
		if(!response) return 1;
		if(!IsPlayerInRangeOfPoint(playerid, 3.0, 2603.7129,-1298.4945,1008.1899) && GetPlayerVirtualWorld(playerid) != 2)
			return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [038]");
		if(pData[playerid][pMember] != 20) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [039]");
		switch(listitem) {
			case 0: {
				if(deaglevvc_status < 1) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√Æ√£√Æ √Æ√∞√≥√¶√®√ø No √≠√† √±√™√´√†√§√•");
				if(GetPVarInt(playerid, "armygun_deagle") > gettime()) return SCM(playerid, COLOR_GREY, "√Ç√ª √±√¨√Æ√¶√•√≤√• √¢√ß√ø√≤√º √Ω√≤√Æ √Æ√∞√≥√¶√®√• √∑√•√∞√•√ß 5 √¨√®√≠√≥√≤");
				GivePlayerWeapon(playerid, 24, 300); deaglevvc_status --;
				format(string, 128, "%s %s[%d] √¢√ß√ø√´ "CMAIN"Desert Eagle "CLITEBLUE"√±√Æ √±√™√´√†S√≠ √Æ√∞√≥√¶√®√ø", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], GetName(playerid), playerid);
				SFFM(pData[playerid][pMember], COLOR_LITEBLUE, string);
				SCM(playerid, COLOR_MAIN, "√Ç√ª √¢√ß√ø√´√® "CLITEBLUE"Desert Eagle "CMAIN"√±√Æ √±√™√´√†S√≠ √Æ√∞√≥√¶√®√ø");
				SetPVarInt(playerid, "armygun_deagle", gettime() + 300);
			}
			case 1: {
				if(pData[playerid][pRank] < 2) return SCM(playerid, COLOR_GREY, "√Å√∞√†√≤√º √Ω√≤√Æ √Æ√∞√≥√¶√®√• √∞√†√ß√∞√•√∏√•√≠√Æ √±√Æ 2-√£√Æ √∞√†√≠√£√†");
				if(mp5vvc_status < 1) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√Æ√£√Æ √Æ√∞√≥√¶√®√ø No √≠√† √±√™√´√†√§√•");
				if(GetPVarInt(playerid, "armygun_mp5") > gettime()) return SCM(playerid, COLOR_GREY, "√Ç√ª √±√¨√Æ√¶√•√≤√• √¢√ß√ø√≤√º √Ω√≤√Æ √Æ√∞√≥√¶√®√• √∑√•√∞√•√ß 5 √¨√®√≠√≥√≤");
				GivePlayerWeapon(playerid, 29, 300); mp5vvc_status --;
				format(string, 128, "%s %s[%d] √¢√ß√ø√´ "CMAIN"MP5 "CLITEBLUE"√±√Æ √±√™√´√†S√≠ √Æ√∞√≥√¶√®√ø", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], GetName(playerid), playerid);
				SFFM(pData[playerid][pMember], COLOR_LITEBLUE, string);
				SCM(playerid, COLOR_MAIN, "√Ç√ª √¢√ß√ø√´√® "CLITEBLUE"MP5 "CMAIN"√±√Æ √±√™√´√†S√≠ √Æ√∞√≥√¶√®√ø");
				SetPVarInt(playerid, "armygun_mp5", gettime() + 300);
			}
			case 2: {
				if(pData[playerid][pRank] < 3) return SCM(playerid, COLOR_GREY, "√Å√∞√†√≤√º √Ω√≤√Æ √Æ√∞√≥√¶√®√• √∞√†√ß√∞√•√∏√•√≠√Æ √± 3-√£√Æ √∞√†√≠√£√†");
				if(m4vvc_status < 1) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√Æ√£√Æ √Æ√∞√≥√¶√®√ø No √≠√† √±√™√´√†√§√•");
				if(GetPVarInt(playerid, "armygun_m4") > gettime()) return SCM(playerid, COLOR_GREY, "√Ç√ª √±√¨√Æ√¶√•√≤√• √¢√ß√ø√≤√º √Ω√≤√Æ √Æ√∞√≥√¶√®√• √∑√•√∞√•√ß 5 √¨√®√≠√≥√≤");
				GivePlayerWeapon(playerid, 31, 300); m4vvc_status --;
				format(string, 128, "%s %s[%d] √¢√ß√ø√´ "CMAIN"M4 "CLITEBLUE"√±√Æ √±√™√´√†S√≠ √Æ√∞√≥√¶√®√ø", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], GetName(playerid), playerid);
				SFFM(pData[playerid][pMember], COLOR_LITEBLUE, string);
				SCM(playerid, COLOR_MAIN, "√Ç√ª √¢√ß√ø√´√® "CLITEBLUE"M4 "CMAIN"√±√Æ √±√™√´√†S√≠ √Æ√∞√≥√¶√®√ø");
				SetPVarInt(playerid, "armygun_m4", gettime() + 300);
			}
			case 3: {
				if(pData[playerid][pRank] < 7) return SCM(playerid, COLOR_GREY, "√Å√∞√†√≤√º √Ω√≤√Æ √Æ√∞√≥√¶√®√• √∞√†√ß√∞√•√∏√•√≠√Æ √± 7-√£√Æ √∞√†√≠√£√†");
				if(snipervvc_status < 1) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√Æ√£√Æ √Æ√∞√≥√¶√®√ø No √≠√† √±√™√´√†√§√•");
				if(GetPVarInt(playerid, "armygun_sniprifle") > gettime()) return SCM(playerid, COLOR_GREY, "√Ç√ª √±√¨√Æ√¶√•√≤√• √¢√ß√ø√≤√º √Ω√≤√Æ √Æ√∞√≥√¶√®√• √∑√•√∞√•√ß 5 √¨√®√≠√≥√≤");
				GivePlayerWeapon(playerid, 34, 300); snipervvc_status --;
				format(string, 128, "%s %s[%d] √¢√ß√ø√´ "CMAIN"Sniper Rifle "CLITEBLUE"√±√Æ √±√™√´√†S√≠ √Æ√∞√≥√¶√®√ø", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], GetName(playerid), playerid);
				SFFM(pData[playerid][pMember], COLOR_LITEBLUE, string);
				SCM(playerid, COLOR_MAIN, "√Ç√ª √¢√ß√ø√´√® "CLITEBLUE"Sniper Rifle "CMAIN"√±√Æ √±√™√´√†S√≠ √Æ√∞√≥√¶√®√ø");
				SetPVarInt(playerid, "armygun_sniprifle", gettime() + 300);
			}
		}
		update_storesarmy();
		PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
	}
	case 2843: {
		if(!response) return 1;
		if(!IsPlayerInRangeOfPoint(playerid, 3.0, 2603.7129,-1298.4945,1008.1899) && GetPlayerVirtualWorld(playerid) != 3)
			return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [040]");
		if(pData[playerid][pMember] != 27) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [041]");
		switch(listitem) {
			case 0: {
				if(deaglevmf_status < 1) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√Æ√£√Æ √Æ√∞√≥√¶√®√ø No √≠√† √±√™√´√†√§√•");
				if(GetPVarInt(playerid, "armygun_deagle") > gettime()) return SCM(playerid, COLOR_GREY, "√Ç√ª √±√¨√Æ√¶√•√≤√• √¢√ß√ø√≤√º √Ω√≤√Æ √Æ√∞√≥√¶√®√• √∑√•√∞√•√ß 5 √¨√®√≠√≥√≤");
				GivePlayerWeapon(playerid, 24, 300); deaglevmf_status --;
				format(string, 128, "%s %s[%d] √¢√ß√ø√´ "CMAIN"Desert Eagle "CLITEBLUE"√±√Æ √±√™√´√†S√≠ √Æ√∞√≥√¶√®√ø", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], GetName(playerid), playerid);
				SFFM(pData[playerid][pMember], COLOR_LITEBLUE, string);
				SCM(playerid, COLOR_MAIN, "√Ç√ª √¢√ß√ø√´√® "CLITEBLUE"Desert Eagle "CMAIN"√±√Æ √±√™√´√†S√≠ √Æ√∞√≥√¶√®√ø");
				SetPVarInt(playerid, "armygun_deagle", gettime() + 300);
			}
			case 1: {
				if(pData[playerid][pRank] < 2) return SCM(playerid, COLOR_GREY, "√Å√∞√†√≤√º √Ω√≤√Æ √Æ√∞√≥√¶√®√• √∞√†√ß√∞√•√∏√•√≠√Æ √±√Æ 2-√£√Æ √∞√†√≠√£√†");
				if(mp5vmf_status < 1) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√Æ√£√Æ √Æ√∞√≥√¶√®√ø No √≠√† √±√™√´√†√§√•");
				if(GetPVarInt(playerid, "armygun_mp5") > gettime()) return SCM(playerid, COLOR_GREY, "√Ç√ª √±√¨√Æ√¶√•√≤√• √¢√ß√ø√≤√º √Ω√≤√Æ √Æ√∞√≥√¶√®√• √∑√•√∞√•√ß 5 √¨√®√≠√≥√≤");
				GivePlayerWeapon(playerid, 29, 300); mp5vmf_status --;
				format(string, 128, "%s %s[%d] √¢√ß√ø√´ "CMAIN"MP5 "CLITEBLUE"√±√Æ √±√™√´√†S√≠ √Æ√∞√≥√¶√®√ø", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], GetName(playerid), playerid);
				SFFM(pData[playerid][pMember], COLOR_LITEBLUE, string);
				SCM(playerid, COLOR_MAIN, "√Ç√ª √¢√ß√ø√´√® "CLITEBLUE"MP5 "CMAIN"√±√Æ √±√™√´√†S√≠ √Æ√∞√≥√¶√®√ø");
				SetPVarInt(playerid, "armygun_mp5", gettime() + 300);
			}
			case 2: {
				if(pData[playerid][pRank] < 3) return SCM(playerid, COLOR_GREY, "√Å√∞√†√≤√º √Ω√≤√Æ √Æ√∞√≥√¶√®√• √∞√†√ß√∞√•√∏√•√≠√Æ √± 3-√£√Æ √∞√†√≠√£√†");
				if(m4vmf_status < 1) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√Æ√£√Æ √Æ√∞√≥√¶√®√ø No √≠√† √±√™√´√†√§√•");
				if(GetPVarInt(playerid, "armygun_m4") > gettime()) return SCM(playerid, COLOR_GREY, "√Ç√ª √±√¨√Æ√¶√•√≤√• √¢√ß√ø√≤√º √Ω√≤√Æ √Æ√∞√≥√¶√®√• √∑√•√∞√•√ß 5 √¨√®√≠√≥√≤");
				GivePlayerWeapon(playerid, 31, 300); m4vmf_status --;
				format(string, 128, "%s %s[%d] √¢√ß√ø√´ "CMAIN"M4 "CLITEBLUE"√±√Æ √±√™√´√†S√≠ √Æ√∞√≥√¶√®√ø", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], GetName(playerid), playerid);
				SFFM(pData[playerid][pMember], COLOR_LITEBLUE, string);
				SCM(playerid, COLOR_MAIN, "√Ç√ª √¢√ß√ø√´√® "CLITEBLUE"M4 "CMAIN"√±√Æ √±√™√´√†S√≠ √Æ√∞√≥√¶√®√ø");
				SetPVarInt(playerid, "armygun_m4", gettime() + 300);
			}
			case 3: {
				if(pData[playerid][pRank] < 7) return SCM(playerid, COLOR_GREY, "√Å√∞√†√≤√º √Ω√≤√Æ √Æ√∞√≥√¶√®√• √∞√†√ß√∞√•√∏√•√≠√Æ √± 7-√£√Æ √∞√†√≠√£√†");
				if(snipervmf_status < 1) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√Æ√£√Æ √Æ√∞√≥√¶√®√ø No √≠√† √±√™√´√†√§√•");
				if(GetPVarInt(playerid, "armygun_sniprifle") > gettime()) return SCM(playerid, COLOR_GREY, "√Ç√ª √±√¨√Æ√¶√•√≤√• √¢√ß√ø√≤√º √Ω√≤√Æ √Æ√∞√≥√¶√®√• √∑√•√∞√•√ß 5 √¨√®√≠√≥√≤");
				GivePlayerWeapon(playerid, 34, 300); snipervmf_status --;
				format(string, 128, "%s %s[%d] √¢√ß√ø√´ "CMAIN"Sniper Rifle "CLITEBLUE"√±√Æ √±√™√´√†S√≠ √Æ√∞√≥√¶√®√ø", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], GetName(playerid), playerid);
				SFFM(pData[playerid][pMember], COLOR_LITEBLUE, string);
				SCM(playerid, COLOR_MAIN, "√Ç√ª √¢√ß√ø√´√® "CLITEBLUE"Sniper Rifle "CMAIN"√±√Æ √±√™√´√†S√≠ √Æ√∞√≥√¶√®√ø");
				SetPVarInt(playerid, "armygun_sniprifle", gettime() + 300);
			}
		}
		update_storesarmy();
		PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
	}
	case 714: {
		if(!response) return 1;
		if(!prodworker_status[playerid]) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [042]");
		prodwork_bizid[playerid] = 0;
		prodworker_status[playerid] = false;
		new prk_idveh = prodworker_vehicle[playerid];
		prodworker_vehicle[playerid] = -1;
		SetVehicleToRespawn(prk_idveh);
		DestroyDynamic3DTextLabel(prodwork_3d[prk_idveh]);
		DisablePlayerCheckpoint(playerid);
		SCM(playerid, COLOR_YELLOW, "√ê√†√°√Æ√∑√®√© √§√•√≠√º √∞√†√ß√¢√Æ√ß√∑√®√™√† √Ø√∞√Æ√§√≥√™√≤√Æ√¢ √ß√†√¢√•√∞√∏√•√≠");
		if(prodwork_prods[playerid] > 0) {
			new oplate = prodwork_prods[playerid] * 25;
			Hook_GivePlayerMoney(playerid, oplate);
			new gametext_hook[30];
			format(gametext_hook, 30, "~g~+%d$", oplate);
			GameTextForPlayer(playerid, gametext_hook, 3000, 1);
			SCMF(playerid, COLOR_LITEBLUE, "√Ç√†√¨ √°√ª√´√† √¢√Æ√ß√¢√∞√†√π√•√≠√† √±√≤√Æ√®√¨√Æ√±√≤√º √™√≥√Ø√´√•√≠√≠√ª√µ √Ø√∞√Æ√§√≥√™√≤√Æ√¢: "CMAIN"%d$", oplate);
		}
		prodwork_prods[playerid] = 0;
	}
	case 712: {
		if(!response) return 1;
		new p_listitem = -1; for(new i = 1; i != BIZES + 1; i ++) {
			if(BizInfo[i][bProdOrder] > 0) p_listitem ++;
			if(p_listitem == listitem) {
				SetPVarInt(playerid, "prodworker_bizid", i);
				SPD(playerid, 713, DIALOG_STYLE_MSGBOX, ""CMAIN"√á√†√™√†√ß", ""CWHITE"Quieres √≠√†√∑√†√≤√º √¢√ª√Ø√Æ√´√≠√•√≠√®√• √Ω√≤√Æ√£√Æ √ß√†√™√†√ß√†?", "S√≠", "Siguiente");
				break;
			}
		}
	}
	case 713: {
		if(!response) {
			new bool: status_prd, str_prod[700] = ""CORANGE"√ç√†√ß√¢√†√≠√®√• √°√®√ß√≠√•√±√†\t\t"CORANGE"√í√∞√•√°√≥√•√≤√±√ø √Ø√∞√Æ√§.\t\t"CORANGE"√ñ√•√≠√† √ß√† √Ø√∞√Æ√§√≥√™√≤\n";
			for(new i = 1; i != BIZES + 1; i ++) 
				if(BizInfo[i][bProdOrder] > 0) status_prd = true, format(str_prod, 700, "%s"CWHITE"%s\t\t%d\t\t%d$\n", str_prod, BizInfo[i][bName], BizInfo[i][bProdOrder], BizInfo[i][bProdOrderPrice]);
			if(!status_prd) SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CPALEGREEN"√á√†√™√†√ß√ª √Ø√∞√Æ√§√≥√™√≤√Æ√¢", ""CWHITE"√Ç S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤ No √≠√® √Æ√§√≠√Æ√£√Æ √ß√†√™√†√ß√†\n√Ø√∞√Æ√§√≥√™√≤√Æ√¢ √§√´√ø √°√®√ß√≠√•√±√†", "Cerrar", "");
			else SPD(playerid, 712, DIALOG_STYLE_TABLIST_HEADERS, ""CPALEGREEN"√á√†√™√†√ß√ª √Ø√∞√Æ√§√≥√™√≤√Æ√¢", str_prod, "Seleccione", "Cerrar");
			return DeletePVar(playerid, "prodworker_bizid");
		}
		PlayerPlaySound(playerid, 5205, 0.0, 0.0, 0.0);
		SetPlayerCheckpoint(playerid, -118.7, -320.2, 1.4, 4.5);
		prodworker_status[playerid] = true;
		prodworker_vehicle[playerid] = GetPlayerVehicleID(playerid);
		prodwork_bizid[playerid] = GetPVarInt(playerid, "prodworker_bizid");
		prodwork_3d[prodworker_vehicle[playerid]] = CreateDynamic3DTextLabel("√Ñ√Æ√±√≤√†√¢√™√† √Ø√∞√Æ√§√≥√™√≤√Æ√¢\n"CYELLOW"√á√†√£√∞√≥√¶√•√≠√Æ: 0/2000", 0xFF9900FF, 0.0, 0.0, 2.5, 10.0, INVALID_PLAYER_ID, GetPlayerVehicleID(playerid));
		SCMF(playerid, COLOR_MAIN, "√Ç√ª√Ø√Æ√´√≠√•√≠√®√• √ß√†√™√†√ß√† √Æ√≤ √°√®√ß√≠√•√±√† "CYELLOW"%s "CMAIN"√≥√±√Ø√•√∏√≠√Æ √≠√†√∑√†√≤√Æ", BizInfo[prodwork_bizid[playerid]][bName]);
		SCM(playerid, COLOR_MAIN, "√é√≤√Ø√∞√†√¢√´√ø√©√≤√•√±√º √™ √¨√•√≤√™√• √≠√† √Ç√†√∏√•√¨ GPS √® √™√≥√Ø√®√≤√• √Ø√∞√Æ√§√≥√™√≤√ª "CGREY"(√™√Æ√¨√†√≠S√≠ /prodbuy)");
	}
    case 8417: {
        if(!response) return DeletePVar(playerid, "team_number");
        new str_title[50], str_fd[340], team_number = GetPVarInt(playerid, "team_number"), p_listitem = -1; foreach(new i:Player) {
            if(pData[i][pMember] == team_number) p_listitem ++;
            if(p_listitem != listitem) continue;
            format(str_fd, 340, 
                ""CWHITE"ID √¢ √®√£√∞√•: {cccc00}%d\n\
                "CWHITE"√ì√∞√Æ√¢√•√≠√º: {ff9945}%d\n\
                "CWHITE"√ç√Æ√¨√•√∞ √≤√•√´√•√¥√Æ√≠√†: {aa80ff}%d\n\
                "CWHITE"√ê√†√≠√£: {40bf80}%d\n\
                "CWHITE"√Ñ√Æ√´√¶√≠√Æ√±√≤√º: {40bf40}%s\n\
                "CWHITE"√Ç √®√£√∞√• √ß√† √±√•√£√Æ√§√≠√ø: {00cc99}%s\n\
                "CWHITE"√Ç √®√£√∞√• √ß√† √¢√∑√•√∞√†: {00cc99}%s", 
            i, pData[i][pLevel], pData[i][pPnumber], pData[i][pRank], new_rank_name[pData[i][pMember] - 1][pData[i][pRank] - 1], ConvertTime(pData[i][p_time1][0]), ConvertTime(pData[i][p_time2][0]));
            format(str_title, 50, ""CPALEGREEN"√à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ %s", GetName(i));
            SPD(playerid, 8416, DIALOG_STYLE_MSGBOX, str_title, str_fd, "Siguiente", "Cerrar");
            break;
        }
    }
	case 8415: {
		if(!response) return 1;
		new str_title[50], str_fd[340], p_listitem = -1; foreach(new i:Player) {
			if(pData[i][pMember] == pData[playerid][pMember]) p_listitem ++;
			if(p_listitem != listitem) continue;
            new str_phone[30];
            format(str_phone, 30, "%d", pData[i][pPnumber]);
			format(str_fd, 340, 
				""CWHITE"ID √¢ √®√£√∞√•: {cccc00}%d\n\
				"CWHITE"√ì√∞√Æ√¢√•√≠√º: {ff9945}%d\n\
				"CWHITE"√ç√Æ√¨√•√∞ √≤√•√´√•√¥√Æ√≠√†: {aa80ff}%s\n\
				"CWHITE"√ê√†√≠√£: {40bf80}%d\n\
				"CWHITE"√Ñ√Æ√´√¶√≠√Æ√±√≤√º: {40bf40}%s\n\
				"CWHITE"√Ç √®√£√∞√• √ß√† √±√•√£√Æ√§√≠√ø: {00cc99}%s\n\
				"CWHITE"√Ç √®√£√∞√• √ß√† √¢√∑√•√∞√†: {00cc99}%s", 
			i, pData[i][pLevel], (pData[i][pPnumber] == -1) ? ("{ff4d4d}No") : (str_phone), pData[i][pRank], new_rank_name[pData[i][pMember] - 1][pData[i][pRank] - 1],
            ConvertTime(pData[i][p_time1][0]), ConvertTime(pData[i][p_time2][0]));
			format(str_title, 50, ""CPALEGREEN"√à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ %s", GetName(i));
			SPD(playerid, 8416, DIALOG_STYLE_MSGBOX, str_title, str_fd, "Siguiente", "Cerrar");
			break;
		}
	}
	case 8416: {
		if(!response) return 1;
		callcmd::find(playerid);
	}
	case 510: {
	    if(!response) return 1;
	    switch(listitem) {
	        case 0: {
	            SPD(playerid, 511, DIALOG_STYLE_LIST, "{ffd770}√ë√≤√Æ√©√™√®", 
	                ""CMAIN"[1] "CWHITE"√ë√≤√Æ√©√™√† 1\n\
	                "CMAIN"[2] "CWHITE"√ë√≤√Æ√©√™√† 2\n\
	                "CMAIN"[3] "CWHITE"√ë√≤√Æ√©√™√† 3\n\
	                "CMAIN"[4] "CWHITE"√ë√≤√Æ√©√™√† 4\n\
	                "CMAIN"[5] "CWHITE"√ë√≤√Æ√©√™√† 5\n\
	                "CMAIN"[6] "CWHITE"√ë√≤√Æ√©√™√† 6\n\
	                "CMAIN"[7] "CWHITE"√ë√≤√Æ√©√™√† 7", 
	            "Seleccione", "Siguiente");
	        }
	        case 1: {
	            SPD(playerid, 504, DIALOG_STYLE_LIST, "{ffd770}√Ü√•√±√≤√ª", 
	                ""CMAIN"[1] "CWHITE"√è√Æ√¨√†√µ√†√≤√º √´√•√¢√Æ√© √∞√≥√™√Æ√©\n\
	                "CMAIN"[2] "CWHITE"√è√Æ√¨√†√µ√†√≤√º √Ø√∞√†√¢√Æ√© √∞√≥√™√Æ√©\n\
	                "CMAIN"[3] "CWHITE"√ê√≥√™√® √¢√¢√•√∞√µ\n\
	                "CMAIN"[4] "CWHITE"√ò√´¬∏√Ø√≠√≥√≤√º\n\
	                "CMAIN"[5] "CWHITE"√ó√≤√Æ-√≤√Æ √Ø√•√∞√•S√≠√≤√º\n\
	                "CMAIN"[6] "CWHITE"√Ç√ª√≤√ø√≠√≥√≤√º √∞√≥√™√≥ √Ø√•√∞√•√§ √±√Æ√°√Æ√©\n\
	                "CMAIN"[7] "CWHITE"√è√Æ√§√ß√ª√¢√†√≤√º √™ √±√•√°√• 1\n\
	                "CMAIN"[8] "CWHITE"√è√Æ√§√ß√ª√¢√†√≤√º √™ √±√•√°√• 2\n\
	                "CMAIN"[9] "CWHITE"√è√Æ√§√ß√ª√¢√†√≤√º √™ √±√•√°√• √≠√† √∑√≤√Æ-√≤√Æ √Æ√°√´√Æ√™√Æ√≤√®√¢√∏√®√±√º\n\
	                "CMAIN"[10] "CWHITE"√è√Æ√´√Æ√¶√®√≤√º √∞√≥√™√® √≠√† √∑√≤√Æ-√≤√Æ\n\
	                "CMAIN"[11] "CWHITE"√Ç√ª√∞√¢√†√≤√º\n\
	                "CMAIN"[12] "CWHITE"√ê√•√ß√™√Æ √Æ√≤√™√†√ß√†√≤√º√±√ø\n\
	                "CMAIN"[13] "CWHITE"√è√Æ√§√≠√ø√≤√º √∞√≥√™√≥\n\
	                "CMAIN"[14] "CWHITE"√Å√Æ√´√•√≤√º √ß√† √™√Æ√£√Æ-√≤√Æ\n\
	                "CMAIN"[15] "CWHITE"√å√†√µ√†√≤√º √∞√≥√™√Æ√©\n\
	                "CMAIN"[16] "CWHITE"√ã√Æ√¢√®√≤√º √Ø√Æ√Ø√≥√≤√™√≥\n\
	                "CMAIN"[17] "CWHITE"√å√†√µ√†√≤√º √∞√≥√™√†√¨√® √®√ß √Æ√™√≠√†\n\
	                "CMAIN"[18] "CWHITE"√å√†√µ√†√≤√º √∞√≥√™√Æ√© √®√ß √Æ√™√≠√†\n\
	                "CMAIN"[19] "CWHITE"√Å√≥√≠√≤ 1\n\
	                "CMAIN"[20] "CWHITE"√Å√≥√≠√≤ 2\n\
	                "CMAIN"[21] "CWHITE"√Å√≥√≠√≤ 3", 
	            "Seleccione", "Siguiente");
	        }
	        case 2: {
	            SPD(playerid, 505, DIALOG_STYLE_LIST, "{ffd770}√ë√®√§√•√≤√º/√´√•√¶√†√≤√º", 
	                ""CMAIN"[1] "CWHITE"√ë√Ø√†√≤√º √≠√† √°√Æ√™√≥\n\
	                "CMAIN"[2] "CWHITE"√ë√Ø√†√≤√º √≠√† √±√Ø√®√≠√•\n\
	                "CMAIN"[3] "CWHITE"√ë√®√§√•√≤√º √∞√†√≠√•√≠√ª√¨ 1\n\
	                "CMAIN"[4] "CWHITE"√ë√®√§√•√≤√º √∞√†√≠√•√≠√ª√¨ 2\n\
	                "CMAIN"[5] "CWHITE"√ë√®√§√•√≤√º 1\n\
	                "CMAIN"[6] "CWHITE"√ë√®√§√•√≤√º 2\n\
	                "CMAIN"[7] "CWHITE"√ë√®√§√•√≤√º 3\n\
	                "CMAIN"[8] "CWHITE"√ë√®√§√•√≤√º √≠√† √ß√•√¨√´√• √® √Ø√Æ√§√ß√ª√¢√†√≤√º √™ √±√•√°√•\n\
	                "CMAIN"[9] "CWHITE"√ã√•√¶√†√≤√º √≠√† √±√Ø√®√≠√• 1\n\
	                "CMAIN"[10] "CWHITE"√ã√•√¶√†√≤√º √≠√† √±√Ø√®√≠√• 2\n\
	                "CMAIN"[11] "CWHITE"√ã√•√¶√†√≤√º √≠√† √°√Æ√™√≥\n\
	                "CMAIN"[12] "CWHITE"√ë√®√§√•√≤√º √≠√† √ß√•√¨√´√• 1\n\
	                "CMAIN"[13] "CWHITE"√ë√®√§√•√≤√º √≠√† √ß√•√¨√´√• 2\n\
	                "CMAIN"[14] "CWHITE"√ë√®√§√•√≤√º √≠√† √ß√•√¨√´√• √® √∑√•√±√†√≤√º √≠√Æ√£√≥\n\
	                "CMAIN"[15] "CWHITE"√ì√Ø√†√±√≤√º √°√•√ß √±√Æ√ß√≠√†√≠√®√ø\n\
	                "CMAIN"[16] "CWHITE"√ì√Ø√†√±√≤√º √≠√† √¶√®√¢√Æ√≤", 
	            "Seleccione", "Siguiente");
	        }
	        case 3: {
	            SPD(playerid, 506, DIALOG_STYLE_LIST, "{ffd770}√é√∞√≥√¶√®√•", 
	                ""CMAIN"[1] "CWHITE"√Ñ√•√∞√¶√†√≤√º √Æ√∞√≥√¶√®√• √® √∑√≤√Æ-√≤√Æ √Ø√´√†√≠√®√∞√Æ√¢√†√≤√º\n\
	                "CMAIN"[2] "CWHITE"√é√±√¨√†√≤√∞√®√¢√†√≤√º √Æ√∞√≥√¶√®√•\n\
	                "CMAIN"[3] "CWHITE"√ë√≤√Æ√ø√≤√º √± √Æ√∞√≥√¶√®√•√¨\n\
	                "CMAIN"[4] "CWHITE"√ç√†√±√≤√†√¢√®√≤√º √≠√† √™√Æ√£√Æ-√≤√Æ √±√≤√¢√Æ√´", 
	            "Seleccione", "Siguiente");
	        }
	        case 4: {
	            SPD(playerid, 507, DIALOG_STYLE_LIST, "{ffd770}√ê√•√£√≥√´√®√∞√Æ√¢√™√® √§√¢√®√¶√•√≠√®√ø", 
	                ""CMAIN"[1] "CWHITE"√ê√•√£√≥√´√®√∞√Æ√¢√™√† \"Siguiente\"\n\
	                "CMAIN"[2] "CWHITE"√ê√•√£√≥√´√®√∞√Æ√¢√™√† \"√Ç√Ø√•√∞¬∏√§\"\n\
	                "CMAIN"[3] "CWHITE"√ê√•√£√≥√´√®√∞√Æ√¢√™√† \"√ç√†√Ø√∞√†√¢√Æ\"\n\
	                "CMAIN"[4] "CWHITE"√ê√•√£√≥√´√®√∞√Æ√¢√™√† \"√é√±√≤√†√≠√Æ√¢√®√≤√•√±√º\"", 
	            "Seleccione", "Siguiente");
	        }
	        case 5: {
	            SPD(playerid, 508, DIALOG_STYLE_LIST, "{ffd770}√É√†√≠√£√±√≤√•√∞√±√™√®√• √¶√•√±√≤√ª", 
	                ""CMAIN"[1] "CWHITE"√Ü√•√±√≤ 1\n\
	                "CMAIN"[2] "CWHITE"√Ü√•√±√≤ 2\n\
	                "CMAIN"[3] "CWHITE"√Ü√•√±√≤ 3\n\
	                "CMAIN"[4] "CWHITE"√Ü√•√±√≤ 4\n\
	                "CMAIN"[5] "CWHITE"√Ü√•√±√≤ 5\n\
	                "CMAIN"[6] "CWHITE"√Ü√•√±√≤ 6\n\
	                "CMAIN"[7] "CWHITE"√Ü√•√±√≤ 7\n\
	                "CMAIN"[8] "CWHITE"√Ü√•√±√≤ 8\n\
	                "CMAIN"[9] "CWHITE"√Ü√•√±√≤ 9\n\
	                "CMAIN"[10] "CWHITE"√Ü√•√±√≤ 10\n\
	                "CMAIN"[11] "CWHITE"√Ü√•√±√≤ 11\n\
	                "CMAIN"[12] "CWHITE"√Ü√•√±√≤ 12\n\
	                "CMAIN"[13] "CWHITE"√Ü√•√±√≤ 13", 
	            "Seleccione", "Siguiente");
	        }
	        case 6: {
	            SPD(playerid, 509, DIALOG_STYLE_LIST, "{ffd770}√è√∞√®√¢√•√≤√±√≤√¢√®√•", 
	                ""CMAIN"[1] "CWHITE"√è√∞√®√¢√•√≤√±√≤√¢√®√• 1\n\
	                "CMAIN"[2] "CWHITE"√è√∞√®√¢√•√≤√±√≤√¢√®√• 2\n\
	                "CMAIN"[3] "CWHITE"√è√∞√®√¢√•√≤√±√≤√¢√®√• 3\n\
	                "CMAIN"[4] "CWHITE"√è√∞√®√¢√•√≤√±√≤√¢√®√• 4\n\
	                "CMAIN"[5] "CWHITE"√è√∞√®√¢√•√≤√±√≤√¢√®√• 5\n\
	                "CMAIN"[6] "CWHITE"√è√∞√®√¢√•√≤√±√≤√¢√®√• 6", 
	            "Seleccione", "Siguiente");
	        }
	        case 7: {
	            SPD(playerid, 405, DIALOG_STYLE_LIST, "{ffd770}√è√Æ√∂√•√´√≥√®", 
	                ""CMAIN"[1] "CWHITE"√è√Æ√∂√•√´√≥√© 1\n\
	                "CMAIN"[2] "CWHITE"√è√Æ√∂√•√´√≥√© 2\n\
	                "CMAIN"[3] "CWHITE"√è√Æ√∂√•√´√≥√© 3\n\
	                "CMAIN"[4] "CWHITE"√è√Æ√∂√•√´√≥√© 4", 
	            "Seleccione", "Siguiente");
	        }
	        case 8: {
	            SPD(playerid, 407, DIALOG_STYLE_LIST, "{ffd770}√ä√≥√∞√•√≠√®√•", 
	                ""CMAIN"[1] "CWHITE"√å√≥√¶√±√™√Æ√• √™√≥√∞√•√≠√®√• 1\n\
	                "CMAIN"[2] "CWHITE"√å√≥√¶√±√™√Æ√• √™√≥√∞√•√≠√®√• 2\n\
	                "CMAIN"[3] "CWHITE"√å√≥√¶√±√™√Æ√• √™√≥√∞√•√≠√®√• 3\n\
	                "CMAIN"[4] "CWHITE"√Ü√•√≠√±√™√Æ√• √™√≥√∞√•√≠√®√•", 
	            "Seleccione", "Siguiente");
	        }
	        case 9: {
				SPD(playerid, 408, DIALOG_STYLE_LIST, "{ffd770}√í√†√≠√∂√ª", 
	                ""CMAIN"[1] "CWHITE"√í√†√≠√•√∂ 1\n\
	                "CMAIN"[2] "CWHITE"√í√†√≠√•√∂ 2\n\
	                "CMAIN"[3] "CWHITE"√í√†√≠√•√∂ 3\n\
	                "CMAIN"[4] "CWHITE"√í√†√≠√•√∂ 4\n\
	                "CMAIN"[5] "CWHITE"√í√†√≠√•√∂ 5\n\
	                "CMAIN"[6] "CWHITE"√í√†√≠√•√∂ 6\n\
	                "CMAIN"[7] "CWHITE"√í√†√≠√•√∂ 7\n\
	                "CMAIN"[8] "CWHITE"√í√†√≠√•√∂ 8\n\
	                "CMAIN"[9] "CWHITE"√í√†√≠√•√∂ 9\n\
	                "CMAIN"[10] "CWHITE"√í√†√≠√•√∂ 10\n\
	                "CMAIN"[11] "CWHITE"√í√†√≠√•√∂ 11\n\
	                "CMAIN"[12] "CWHITE"√í√†√≠√•√∂ 12\n\
	                "CMAIN"[13] "CWHITE"√í√†√≠√•√∂ 13\n\
	                "CMAIN"[14] "CWHITE"√í√†√≠√•√∂ 14\n\
	                "CMAIN"[15] "CWHITE"√í√†√≠√•√∂ 15", 
	            "Seleccione", "Siguiente");
	        }
	        case 10: {
				SPD(playerid, 409, DIALOG_STYLE_LIST, "{ffd770}√Ä√´√™√Æ√£√Æ√´√º/√≠√†√∞√™√Æ√≤√®√™√®", 
	                ""CMAIN"[1] "CWHITE"√è√Æ√§√£√Æ√≠√ø√≤√º\n\
	                "CMAIN"[2] "CWHITE"√é√≤√™√†√ß√†√≤√º√±√ø\n\
	                "CMAIN"[3] "CWHITE"√è√•√∞√•S√≠√≤√º √§√•√≠√º√£√® √® √ß√†√°√∞√†√≤√º √≤√Æ√¢√†√∞\n\
	                "CMAIN"[4] "CWHITE"√è√•√∞√•S√≠√≤√º √§√•√≠√º√£√®\n\
	                "CMAIN"[5] "CWHITE"√è√•√∞√•S√≠√≤√º √≤√Æ√¢√†√∞\n\
	                "CMAIN"[6] "CWHITE"√è√Æ√±√¨√Æ√≤√∞√•√≤√º √Ø√Æ √±√≤√Æ√∞√Æ√≠√†√¨\n\
	                "CMAIN"[7] "CWHITE"√è√•√∞√•√§√Æ√ß 1\n\
	                "CMAIN"[8] "CWHITE"√è√•√∞√•√§√Æ√ß 2\n\
	                "CMAIN"[9] "CWHITE"√è√•√∞√•√§√Æ√ß 3\n\
	                "CMAIN"[10] "CWHITE"√è√º√ø√≠√†√ø √Ø√Æ√µ√Æ√§√™√†", 
	            "Seleccione", "Siguiente");
	        }
	        case 11: {
	        	SPD(playerid, 410, DIALOG_STYLE_LIST, "{ffd770}√ù√¨√Æ√∂√®√®", 
	                ""CMAIN"[1] "CWHITE"√è√´√†√™√†√≤√º\n\
	                "CMAIN"[2] "CWHITE"√ë√™√Æ√∞√°√®√≤√º\n\
	                "CMAIN"[3] "CWHITE"Facepalm\n\
	                "CMAIN"[4] "CWHITE"Fail\n\
	                "CMAIN"[5] "CWHITE"√ê√†√§√Æ√±√≤√º\n\
	                "CMAIN"[6] "CWHITE"√ó√•√±√†√≤√º√±√ø\n\
	                "CMAIN"[7] "CWHITE"√à√±√Ø√≥√£√†√≤√º√±√ø", 
	            "Seleccione", "Siguiente");
	        }
	        case 12: {
	        	SPD(playerid, 411, DIALOG_STYLE_LIST, "{ffd770}√ó√®√≤√†√≤√º √∞√Ω√Ø", 
	                ""CMAIN"[1] "CWHITE"√ó√®√≤√†√≤√º √∞√Ω√Ø 1\n\
	                "CMAIN"[2] "CWHITE"√ó√®√≤√†√≤√º √∞√Ω√Ø 2\n\
	                "CMAIN"[3] "CWHITE"√ó√®√≤√†√≤√º √∞√Ω√Ø 3\n\
	                "CMAIN"[4] "CWHITE"√ó√®√≤√†√≤√º √∞√Ω√Ø 4\n\
	                "CMAIN"[5] "CWHITE"√ó√®√≤√†√≤√º √∞√Ω√Ø 5\n\
	                "CMAIN"[6] "CWHITE"√ó√®√≤√†√≤√º √∞√Ω√Ø 6", 
	            "Seleccione", "Siguiente");
	        }
	        case 13: {
	        	SPD(playerid, 304, DIALOG_STYLE_LIST, "{ffd770}√Å√†√∞", 
	                ""CMAIN"[1] "CWHITE"√Ñ√Æ√±√≤√†√≤√º √∑√≤√Æ-√≤√Æ √± √≠√®√¶√≠√•√© √Ø√Æ√´√™√®\n\
	                "CMAIN"[2] "CWHITE"√è√•√∞√•S√≠√≤√º √ß√†√™√†√ß\n\
	                "CMAIN"[3] "CWHITE"√ó√≤√Æ-√≤√Æ √≠√†√´√®√≤√º\n\
	                "CMAIN"[4] "CWHITE"√ë√≤√Æ√ø√≤√º √ß√† √°√†√∞√≠√Æ√© √±√≤√Æ√©√™√Æ√©\n\
	                "CMAIN"[5] "CWHITE"√ë√≤√Æ√ø√≤√º, √Æ√°√´√Æ√™√Æ√≤√®√¢√∏√®√±√º √≠√† √°√†√∞√≠√≥√æ √±√≤√Æ√©√™√≥\n\
	                "CMAIN"[6] "CWHITE"√Ç√ª√±√´√≥√∏√†√≤√º √ß√†√™√†√ß\n\
	                "CMAIN"[7] "CWHITE"√è√®√≤√º √∑√≤√Æ-√≤√Æ 1\n\
	                "CMAIN"[8] "CWHITE"√è√®√≤√º √∑√≤√Æ-√≤√Æ 2\n\
	                "CMAIN"[9] "CWHITE"√Ö√±√≤√º\n\
	                "CMAIN"[10] "CWHITE"√ë√∫√•√±√≤√º √∑√≤√Æ-√≤√Æ", 
	            "Seleccione", "Siguiente");
	        }
	        case 14: {
	        	SPD(playerid, 305, DIALOG_STYLE_LIST, "{ffd770}√É√†√≠√£√±√≤√•√∞√ª", 
	                ""CMAIN"[1] "CWHITE"√ç√†√§√•√≤√º √¨√†√±√™√≥\n\
	                "CMAIN"[2] "CWHITE"√ê√†√ß√¨√®√≠√†√≤√º√±√ø\n\
	                "CMAIN"[3] "CWHITE"√Ñ√•√∞√¶√†√≤√º √°√®√≤√≥ 1\n\
	                "CMAIN"[4] "CWHITE"√Ñ√•√∞√¶√†√≤√º √°√®√≤√≥ 2\n\
	                "CMAIN"[5] "CWHITE"√ç√†√≠√Æ√±√®√≤√º √£√∞√†√¥√¥√®√≤√® 1\n\
	                "CMAIN"[6] "CWHITE"√ç√†√≠√Æ√±√®√≤√º √£√∞√†√¥√¥√®√≤√® 2\n\
	                "CMAIN"[7] "CWHITE"√é√∂√•√≠√®√≤√º √£√∞√†√¥√¥√®√≤√®\n\
	                "CMAIN"[8] "CWHITE"√ç√†√°√®√¢√†√≤√º √¨√ø√∑\n\
	                "CMAIN"[9] "CWHITE"√ë√§√•√´√†√≤√º √°√∞√Æ√±√Æ√™\n\
	                "CMAIN"[10] "CWHITE"√è√Æ√§√≠√ø√≤√º √¨√ø√∑", 
	            "Seleccione", "Siguiente");
	        }
	        case 15: {
	        	SPD(playerid, 306, DIALOG_STYLE_LIST, "{ffd770}√Ñ√•√©√±√≤√¢√®√ø √± √Ø√∞√•√§√¨√•√≤√†√¨√®", 
	                ""CMAIN"[1] "CWHITE"√ê√†√°√Æ√≤√†√≤√º √ß√† √™√Æ√¨√Ø√º√æ√≤√•√∞√Æ√¨ 1\n\
	                "CMAIN"[2] "CWHITE"√ê√†√°√Æ√≤√†√≤√º √ß√† √™√Æ√¨√Ø√º√æ√≤√•√∞√Æ√¨ 2\n\
	                "CMAIN"[3] "CWHITE"√ìS√≠√∞√®√≤√º √Ø√Æ √™√´√†√¢√®√†√≤√≥√∞√•\n\
	                "CMAIN"[4] "CWHITE"√ã√†√ß√®√≤√º √¢ √∏√™√†√¥√≥\n\
	                "CMAIN"[5] "CWHITE"√à√£√∞√†√≤√º √¢ √Ø√∞√®√±√≤√†√¢√™√≥ 1\n\
	                "CMAIN"[6] "CWHITE"√à√£√∞√†√≤√º √¢ √Ø√∞√®√±√≤√†√¢√™√≥ 2\n\
	                "CMAIN"[7] "CWHITE"√à√£√∞√†√≤√º √¢ √Ø√∞√®√±√≤√†√¢√™√≥ 3\n\
	                "CMAIN"[8] "CWHITE"√ó√®√≠√®√≤√º √†√¢√≤√Æ√¨√Æ√°√®√´√º 1\n\
	                "CMAIN"[9] "CWHITE"√ó√®√≠√®√≤√º √†√¢√≤√Æ√¨√Æ√°√®√´√º 2", 
	            "Seleccione", "Siguiente");
	        }
	        case 16: {
	        	SPD(playerid, 307, DIALOG_STYLE_LIST, "{ffd770}√è√∞√Æ√∑√•√•", 
	                ""CMAIN"[1] "CWHITE"S√≠√≤√º √±√≤√†√∞√≤\n\
	                "CMAIN"[2] "CWHITE"√í√Æ√´√™√≠√≥√≤√º √™√Æ√£√Æ-√≤√Æ\n\
	                "CMAIN"[3] "CWHITE"√í√Æ√´√™√≠√≥√≤√º √°√Æ√™√Æ√¨\n\
	                "CMAIN"[4] "CWHITE"√è√≠√≥√≤√º √≠√Æ√£√Æ√©\n\
	                "CMAIN"[5] "CWHITE"√ì√±√≤√†√≠√†√¢√´√®√¢√†√≤√º √°√Æ√¨√°√≥\n\
	                "CMAIN"[6] "CWHITE"√Ç√ß√Æ√∞√¢√†√≤√º\n\
	                "CMAIN"[7] "CWHITE"√Ñ√•√´√†√≤√º √¨√†√±√±√†√¶ √±√•√∞√§√∂√†\n\
	                "CMAIN"[8] "CWHITE"√ë√Ø√∞√†√¢√®√≤√º √≠√≥√¶√§√≥\n\
	                "CMAIN"[9] "CWHITE"√å√•√§√®√≤√†√∂√®√ø\n\
	                "CMAIN"[10] "CWHITE"√ë√≤√Æ√ø√≤√º √≠√† √∞√≥√™√†√µ\n\
	                "CMAIN"[11] "CWHITE"√è√Æ√™√†√ß√†√≤√º √±√∞√•√§√≠√®√© √Ø√†√´√•√∂ 1\n\
	                "CMAIN"[12] "CWHITE"√è√Æ√™√†√ß√†√≤√º √±√∞√•√§√≠√®√© √Ø√†√´√•√∂ 2", 
	            "Seleccione", "Siguiente");
	        }
	    }
	}
	case 511: {
	    if(!response) return callcmd::animlist(playerid);
	    switch(listitem) {
	        case 0: A_ApplyAnimation(playerid, "DEALER", "DEALER_IDLE", 4.1, 0, 1, 1, 1, 0, 1);
	        case 1: A_ApplyAnimation(playerid, "GANGS", "LEANIN", 4.1, 0, 1, 1, 1, 0, 1);
	        case 2: A_ApplyAnimation(playerid, "MISC", "PLYRLEAN_LOOP", 4.1, 0, 1, 1, 1, 0, 1);
	        case 3: A_ApplyAnimation(playerid, "COP_AMBIENT", "COPLOOK_IN", 4.1, 0, 1, 1, 1, 0, 1); 
	        case 4: A_ApplyAnimation(playerid, "COP_AMBIENT", "COPLOOK_NOD", 4.1, 0, 1, 1, 1, 0, 1);
	        case 5: A_ApplyAnimation(playerid, "COP_AMBIENT", "COPLOOK_SHAKE", 4.1, 0, 1, 1, 1, 0, 1);
	        case 6: A_ApplyAnimation(playerid, "GANGS", "LEANIDLE", 4.1, 0, 1, 1, 1, 0, 1);
	    }
	}
	case 504: {
	    if(!response) return callcmd::animlist(playerid);
	    switch(listitem) {
	        case 0: A_ApplyAnimation(playerid, "KISSING", "GFWAVE2", 4.1, 0, 1, 1, 0, 0, 1);
	        case 1: A_ApplyAnimation(playerid, "PED", "ENDCHAT_03", 4.1, 0, 1, 1, 0, 0, 1);
	        case 2: A_ApplyAnimation(playerid, "SHOP", "SHP_ROB_HANDSUP", 4.1, 0, 1, 1, 1, 0, 1);
	        case 3: A_ApplyAnimation(playerid, "SWEET", "SWEET_ASS_SLAP", 4.1, 0, 1, 1, 0, 0, 1);
	        case 4: A_ApplyAnimation(playerid, "DEALER", "DEALER_DEAL", 4.1, 0, 1, 1, 0, 0, 1);
	        case 5: A_ApplyAnimation(playerid, "SHOP", "ROB_LOOP_THREAT", 4.1, 0, 1, 1, 1, 0, 1);
	        case 6: A_ApplyAnimation(playerid, "RYDER", "RYD_BECKON_02", 4.1, 1, 1, 1, 0, 0, 1);
	        case 7: A_ApplyAnimation(playerid, "CAMERA", "CAMSTND_CMON", 4.1, 1, 1, 1, 0, 0, 1);
	        case 8: A_ApplyAnimation(playerid, "CAR_CHAT", "CAR_TALKM_LOOP", 4.1, 1, 1, 1, 0, 0, 1);
	        case 9: A_ApplyAnimation(playerid, "INT_SHOP", "SHOP_IN", 4.1, 0, 1, 1, 1, 0, 1);
	        case 10: A_ApplyAnimation(playerid, "FOOD", "EAT_VOMIT_P", 4.1, 0, 1, 1, 0, 0, 1);
	        case 11: A_ApplyAnimation(playerid, "FOOD", "EAT_VOMIT_SK", 4.1, 0, 1, 1, 0, 0, 1);
	        case 12: A_ApplyAnimation(playerid, "ON_LOOKERS", "POINTUP_IN", 4.1, 0, 1, 1, 1, 0, 1);
	        case 13: A_ApplyAnimation(playerid, "ON_LOOKERS", "SHOUT_02", 4.1, 1, 1, 1, 0, 0, 1);
	        case 14: A_ApplyAnimation(playerid, "ON_LOOKERS", "WAVE_LOOP", 4.1, 1, 1, 1, 0, 0, 1);
	        case 15: A_ApplyAnimation(playerid, "PED", "IDLE_TAXI", 4.1, 1, 1, 1, 0, 0, 1);
	        case 16: A_ApplyAnimation(playerid, "BD_FIRE", "BD_PANIC_03", 4.1, 1, 1, 1, 0, 0, 1);
	        case 17: A_ApplyAnimation(playerid, "BD_FIRE", "BD_PANIC_01", 4.1, 1, 1, 1, 0, 0, 1);
	        case 18: A_ApplyAnimation(playerid, "RIOT", "RIOT_ANGRY_B", 4.1, 1, 1, 1, 0, 0, 1);
	        case 19: A_ApplyAnimation(playerid, "RIOT", "RIOT_CHANT", 4.1, 1, 1, 1, 0, 0, 1);
	        case 20: A_ApplyAnimation(playerid, "RIOT", "RIOT_PUNCHES", 4.1, 1, 1, 1, 0, 0, 1);
	    }
	}
	case 505: {
	    if(!response) return callcmd::animlist(playerid);
	    switch(listitem) {
	        case 0: A_ApplyAnimation(playerid, "CRACK", "CRCKIDLE2", 4.1, 0, 1, 1, 1, 0, 1);
	        case 1: A_ApplyAnimation(playerid, "CRACK", "CRCKIDLE4", 4.1, 0, 1, 1, 1, 0, 1);
	        case 2: A_ApplyAnimation(playerid, "CRACK", "CRCKIDLE1", 4.1, 0, 1, 1, 1, 0, 1);
	        case 3: A_ApplyAnimation(playerid, "CRACK", "CRCKIDLE3", 4.1, 0, 1, 1, 1, 0, 1);
	        case 4: A_ApplyAnimation(playerid, "PED", "SEAT_IDLE", 4.1, 1, 0, 0, 0, 0, 1);
	        case 5: A_ApplyAnimation(playerid, "MISC", "SEAT_LR", 4.1, 1, 0, 0, 0, 0, 1);
	        case 6: A_ApplyAnimation(playerid, "INT_HOUSE", "LOU_LOOP", 4.1, 0, 1, 1, 1, 0, 1);
	        case 7: A_ApplyAnimation(playerid, "CAMERA", "CAMCRCH_CMON", 4.1, 1, 1, 1, 0, 0, 1);
	        case 8: A_ApplyAnimation(playerid, "BEACH", "BATHER", 4.1, 0, 1, 1, 1, 0, 1);
	        case 9: A_ApplyAnimation(playerid, "BEACH", "LAY_BAC_LOOP", 4.1, 0, 1, 1, 1, 0, 1);
	        case 10: A_ApplyAnimation(playerid, "BEACH", "PARKSIT_W_LOOP", 4.1, 0, 1, 1, 1, 0, 1);
	        case 11: A_ApplyAnimation(playerid, "BEACH", "SITNWAIT_LOOP_W", 4.1, 0, 1, 1, 1, 0, 1);
	        case 12: A_ApplyAnimation(playerid, "BEACH", "PARKSIT_M_LOOP", 4.1, 0, 1, 1, 1, 0, 1);
	        case 13: A_ApplyAnimation(playerid, "SUNBATHE", "PARKSIT_M_IDLEC", 4.1, 1, 1, 1, 0, 0, 1);
	        case 14: A_ApplyAnimation(playerid, "CRACK", "CRCKDETH4", 4.1, 0, 1, 1, 1, 0, 1);
	        case 15: A_ApplyAnimation(playerid, "PED", "ko_skid_back", 4.1, 0, 1, 1, 1, 0, 1);
	    }
	}
	case 506: {
	    if(!response) return callcmd::animlist(playerid);
	    switch(listitem) {
	        case 0: A_ApplyAnimation(playerid, "GHETTO_DB", "GDB_CAR_RYD", 4.1, 0, 1, 1, 0, 0, 1);
	        case 1: A_ApplyAnimation(playerid, "GHETTO_DB", "GDB_CAR_SMO", 4.1, 0, 1, 1, 0, 0, 1);
	        case 2: A_ApplyAnimation(playerid, "PED", "GUN_2_IDLE", 4.1, 0, 1, 1, 1, 0, 1);
	        case 3: A_ApplyAnimation(playerid, "PED", "ARRESTGUN", 4.1, 0, 1, 1, 1, 0, 1); 
	    }
	}
	case 507: {
		if(!response) return callcmd::animlist(playerid);
		switch(listitem) {
			case 0: A_ApplyAnimation(playerid, "POLICE", "COPTRAF_AWAY", 4.1, 1, 1, 1, 0, 0, 1);
			case 1: A_ApplyAnimation(playerid, "POLICE", "COPTRAF_COME", 4.1, 1, 1, 1, 0, 0, 1);
			case 2: A_ApplyAnimation(playerid, "POLICE", "COPTRAF_LEFT", 4.1, 1, 1, 1, 0, 0, 1);
			case 3: A_ApplyAnimation(playerid, "POLICE", "COPTRAF_STOP", 4.1, 1, 1, 1, 0, 0, 1);
		}
	}
	case 508: {
		if(!response) return callcmd::animlist(playerid);
		switch(listitem) {
			case 0: A_ApplyAnimation(playerid, "RIOT", "RIOT_ANGRY", 4.1, 0, 1, 1, 0, 0, 1);
			case 1: A_ApplyAnimation(playerid, "GHANDS", "GSIGN1", 4.1, 0, 1, 1, 0, 0, 1);
			case 2: A_ApplyAnimation(playerid, "GHANDS", "GSIGN2", 4.1, 0, 1, 1, 0, 0, 1);
			case 3: A_ApplyAnimation(playerid, "GHANDS", "GSIGN3", 4.1, 0, 1, 1, 0, 0, 1);
			case 4: A_ApplyAnimation(playerid, "GHANDS", "GSIGN4", 4.1, 0, 1, 1, 0, 0, 1);
			case 5: A_ApplyAnimation(playerid, "GHANDS", "GSIGN5", 4.1, 0, 1, 1, 0, 0, 1);
			case 6: A_ApplyAnimation(playerid, "GHANDS", "GSIGN1LH", 4.1, 0, 1, 1, 0, 0, 1);
			case 7: A_ApplyAnimation(playerid, "GHANDS", "GSIGN2LH", 4.1, 0, 1, 1, 0, 0, 1);
			case 8: A_ApplyAnimation(playerid, "GHANDS", "GSIGN4LH", 4.1, 0, 1, 1, 0, 0, 1);
			case 9: A_ApplyAnimation(playerid, "GANGS", "PRTIAL_GNGTLKD", 4.1, 0, 1, 1, 0, 0, 1);
			case 10: A_ApplyAnimation(playerid, "GHANDS", "GSIGN3LH", 4.1, 0, 1, 1, 0, 0, 1);
			case 11: A_ApplyAnimation(playerid, "LOWRIDER", "PRTIAL_GNGTLKC", 4.1, 0, 1, 1, 0, 0, 1);
			case 12: A_ApplyAnimation(playerid, "LOWRIDER", "PRTIAL_GNGTLKG", 4.1, 0, 1, 1, 0, 0, 1);
		}
	}
	case 509: {
		if(!response) return callcmd::animlist(playerid);
		switch(listitem) {
			case 0: A_ApplyAnimation(playerid, "GANGS", "HNDSHKAA", 4.1, 0, 1, 1, 0, 0, 1);
			case 1: A_ApplyAnimation(playerid, "GANGS", "HNDSHKBA", 4.1, 0, 1, 1, 0, 0, 1);
			case 2: A_ApplyAnimation(playerid, "GANGS", "HNDSHKCA", 4.1, 0, 1, 1, 0, 0, 1);
			case 3: A_ApplyAnimation(playerid, "GANGS", "HNDSHKCB", 4.1, 0, 1, 1, 0, 0, 1);
			case 4: A_ApplyAnimation(playerid, "GANGS", "HNDSHKDA", 4.1, 0, 1, 1, 0, 0, 1);
			case 5: A_ApplyAnimation(playerid, "GANGS", "HNDSHKEA", 4.1, 0, 1, 1, 0, 0, 1);
		}
	}
	case 405: {
		if(!response) return callcmd::animlist(playerid);
		switch(listitem) {
			case 0: A_ApplyAnimation(playerid, "KISSING", "GRLFRD_KISS_03", 4.1, 0, 1, 1, 0, 0, 1);
			case 1: A_ApplyAnimation(playerid, "BD_FIRE", "PLAYA_KISS_03", 4.1, 0, 1, 1, 0, 0, 1);
			case 2: A_ApplyAnimation(playerid, "KISSING", "GRLFRD_KISS_01", 4.1, 0, 1, 1, 0, 0, 1);
			case 3: A_ApplyAnimation(playerid, "KISSING", "GRLFRD_KISS_02", 4.1, 0, 1, 1, 0, 0, 1);
		}
	}
	case 407: {
		if(!response) return callcmd::animlist(playerid);
		switch(listitem) {
			case 0: A_ApplyAnimation(playerid, "SMOKING", "M_SMKSTND_LOOP", 4.1, 1, 1, 1, 0, 0, 1);
			case 1: A_ApplyAnimation(playerid, "BD_FIRE", "M_SMKLEAN_LOOP", 4.1, 1, 1, 1, 0, 0, 1);
			case 2: A_ApplyAnimation(playerid, "GANGS", "SMKCIG_PRTL", 4.1, 1, 1, 1, 0, 0, 1);
			case 3: A_ApplyAnimation(playerid, "LOWRIDER", "F_SMKLEAN_LOOP", 4.1, 1, 1, 1, 0, 0, 1);
		}
	}
	case 408: {
		if(!response) return callcmd::animlist(playerid);
		switch(listitem) {
	        case 0: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE1);
	        case 1: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE2);
	        case 2: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE3);
	        case 3: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE4);
			case 4: A_ApplyAnimation(playerid, "DANCING", "DAN_LEFT_A", 4.1, 1, 1, 1, 0, 0, 1);
			case 5: A_ApplyAnimation(playerid, "DANCING", "DNCE_M_A", 4.1, 1, 1, 1, 0, 0, 1);
			case 6: A_ApplyAnimation(playerid, "DANCING", "DNCE_M_B", 4.1, 1, 1, 1, 0, 0, 1);
			case 7: A_ApplyAnimation(playerid, "DANCING", "DNCE_M_D", 4.1, 1, 1, 1, 0, 0, 1);
			case 8: A_ApplyAnimation(playerid, "DANCING", "DAN_DOWN_A", 4.1, 1, 1, 1, 0, 0, 1);
			case 9: A_ApplyAnimation(playerid, "DANCING", "DAN_LOOP_A", 4.1, 1, 1, 1, 0, 0, 1);
			case 10: A_ApplyAnimation(playerid, "DANCING", "DAN_RIGHT_A", 4.1, 1, 1, 1, 0, 0, 1);
			case 11: A_ApplyAnimation(playerid, "DANCING", "DAN_UP_A", 4.1, 1, 1, 1, 0, 0, 1);
			case 12: A_ApplyAnimation(playerid, "DANCING", "DNCE_M_C", 4.1, 1, 1, 1, 0, 0, 1);
			case 13: A_ApplyAnimation(playerid, "DANCING", "BD_CLAP", 4.1, 1, 1, 1, 0, 0, 1);
			case 14: A_ApplyAnimation(playerid, "DANCING", "BD_CLAP1", 4.1, 1, 1, 1, 0, 0, 1);
		}
	}
	case 409: {
		if(!response) return callcmd::animlist(playerid);
		switch(listitem) {
			case 0: A_ApplyAnimation(playerid, "DEALER", "DEALER_IDLE_02", 4.1, 1, 1, 1, 0, 0, 1);
			case 1: A_ApplyAnimation(playerid, "DEALER", "DEALER_IDLE_03", 4.1, 1, 1, 1, 0, 0, 1);
			case 2: A_ApplyAnimation(playerid, "DEALER", "DRUGS_BUY", 4.1, 0, 1, 1, 0, 0, 1);
			case 3: A_ApplyAnimation(playerid, "DEALER", "SHOP_PAY", 4.1, 0, 1, 1, 0, 0, 1);
			case 4: A_ApplyAnimation(playerid, "GANGS", "DEALER_DEAL", 4.1, 0, 1, 1, 0, 0, 1);
			case 5: A_ApplyAnimation(playerid, "GANGS", "DEALER_IDLE", 4.1, 0, 1, 1, 0, 0, 1);
			case 6: A_ApplyAnimation(playerid, "CRACK", "CRCKDETH2", 4.1, 1, 1, 1, 0, 0, 1);
			case 7: A_ApplyAnimation(playerid, "CRACK", "CRCKDETH3", 4.1, 1, 1, 1, 0, 0, 1);
			case 8: A_ApplyAnimation(playerid, "CRACK", "CRCKDETH1", 4.1, 1, 1, 1, 0, 0, 1);
			case 9: A_ApplyAnimation(playerid, "PED", "WALK_DRUNK", 4.1, 1, 1, 1, 0, 0, 1);
		}
	}
	case 410: {
		if(!response) return callcmd::animlist(playerid);
		switch(listitem)
		{
			case 0: A_ApplyAnimation(playerid, "GRAVEYARD", "MRNF_LOOP", 4.1, 0, 1, 1, 0, 0, 1);
			case 1: A_ApplyAnimation(playerid, "GRAVEYARD", "MRNM_LOOP", 4.1, 0, 1, 1, 0, 0, 1);
			case 2: A_ApplyAnimation(playerid, "MISC", "PLYR_SHKHEAD", 4.1, 0, 1, 1, 0, 0, 1);
			case 3: A_ApplyAnimation(playerid, "OTB", "WTCHRACE_LOSE", 4.1, 0, 1, 1, 0, 0, 1);
			case 4: A_ApplyAnimation(playerid, "OTB", "WTCHRACE_WIN", 4.1, 0, 1, 1, 0, 0, 1);
			case 5: A_ApplyAnimation(playerid, "MISC", "SCRATCHBALLS_01", 4.1, 1, 1, 1, 0, 0, 1);
			case 6: A_ApplyAnimation(playerid, "PED", "COWER", 4.1, 0, 1, 1, 1, 0, 1);
		}
	}
	case 411: {
		if(!response) return callcmd::animlist(playerid);
		switch(listitem) {
			case 0: A_ApplyAnimation(playerid, "BENCHPRESS", "GYM_BP_CELEBRATE", 4.1, 1, 1, 1, 0, 0, 1);
			case 1: A_ApplyAnimation(playerid, "LOWRIDER", "RAP_C_LOOP", 4.1, 1, 1, 1, 0, 0, 1);
			case 2: A_ApplyAnimation(playerid, "LOWRIDER", "RAP_B_LOOP", 4.1, 1, 1, 1, 0, 0, 1);
			case 3: A_ApplyAnimation(playerid, "LOWRIDER", "RAP_A_LOOP", 4.1, 1, 1, 1, 0, 0, 1);
			case 4: A_ApplyAnimation(playerid, "FREEWEIGHTS", "GYM_FREE_CELEBRATE", 4.1, 1, 1, 1, 0, 0, 1);
			case 5: A_ApplyAnimation(playerid, "GANGS", "PRTIAL_GNGTLKH", 4.1, 1, 1, 1, 0, 0, 1);
		}
	}
	case 304: {
		if(!response) return callcmd::animlist(playerid);
		switch(listitem) {
			case 0: A_ApplyAnimation(playerid, "BAR", "BARSERVE_BOTTLE", 4.1, 0, 1, 1, 0, 0, 1);
			case 1: A_ApplyAnimation(playerid, "BAR", "BARSERVE_GIVE", 4.1, 0, 1, 1, 0, 0, 1);
			case 2: A_ApplyAnimation(playerid, "BAR", "BARSERVE_GLASS", 4.1, 0, 1, 1, 0, 0, 1);
			case 3: A_ApplyAnimation(playerid, "BAR", "BARSERVE_LOOP", 4.1, 1, 1, 1, 0, 0, 1);
			case 4: A_ApplyAnimation(playerid, "BAR", "BARMAN_IDLE", 4.1, 0, 1, 1, 0, 0, 1);
			case 5: A_ApplyAnimation(playerid, "BAR", "BARSERVE_ORDER", 4.1, 0, 1, 1, 0, 0, 1);
			case 6: A_ApplyAnimation(playerid, "BAR", "DNK_STNDM_LOOP", 4.1, 0, 1, 1, 0, 0, 1);
			case 7: A_ApplyAnimation(playerid, "BAR", "DNK_STNDF_LOOP", 4.1, 0, 1, 1, 0, 0, 1);
			case 8: A_ApplyAnimation(playerid, "FOOD", "EAT_PIZZA", 4.1, 1, 1, 1, 0, 0, 1);
			case 9: A_ApplyAnimation(playerid, "FOOD", "EAT_BURGER", 4.1, 0, 1, 1, 0, 0, 1);
		}
	}
	case 305: {
		if(!response) return callcmd::animlist(playerid);
		switch(listitem) {
			case 0: A_ApplyAnimation(playerid, "SHOP", "ROB_SHIFTY", 4.1, 0, 1, 1, 0, 0, 1);
			case 1: A_ApplyAnimation(playerid, "PLAYIDLES", "STRETCH", 4.1, 0, 1, 1, 0, 0, 1);
			case 2: A_ApplyAnimation(playerid, "CRACK", "BBALBAT_IDLE_01", 4.1, 0, 1, 1, 0, 0, 1);
			case 3: A_ApplyAnimation(playerid, "CRACK", "BBALBAT_IDLE_02", 4.1, 1, 1, 1, 0, 0, 1);
			case 4: A_ApplyAnimation(playerid, "SPRAYCAN", "SPRAYCAN_FULL", 4.1, 0, 1, 1, 0, 0, 1);
			case 5: A_ApplyAnimation(playerid, "GRAFFITI", "SPRAYCAN_FIRE", 4.1, 0, 1, 1, 0, 0, 1);
			case 6: A_ApplyAnimation(playerid, "GRAFFITI", "GRAFFITI_CHKOUT", 4.1, 0, 1, 1, 0, 0, 1);
			case 7: A_ApplyAnimation(playerid, "BSKTBALL", "BBALL_IDLELOOP", 4.1, 1, 1, 1, 0, 0, 1);
			case 8: A_ApplyAnimation(playerid, "BSKTBALL", "BBALL_JUMP_SHOT", 4.1, 0, 1, 1, 0, 0, 1);
			case 9: A_ApplyAnimation(playerid, "BSKTBALL", "BBALL_PICKUP", 4.1, 0, 1, 1, 0, 0, 1);
		}
	}
	case 306: {
		if(!response) return callcmd::animlist(playerid);
		switch(listitem) {
			case 0: A_ApplyAnimation(playerid, "INT_OFFICE", "OFF_SIT_BORED_LOOP", 4.1, 1, 1, 1, 0, 0, 1);
			case 1: A_ApplyAnimation(playerid, "INT_OFFICE", "OFF_SIT_TYPE_LOOP", 4.1, 1, 1, 1, 0, 0, 1);
			case 2: A_ApplyAnimation(playerid, "INT_OFFICE", "OFF_SIT_CRASH", 4.1, 0, 1, 1, 0, 0, 1);
			case 3: A_ApplyAnimation(playerid, "COP_AMBIENT", "COPBROWSE_IN", 4.1, 1, 1, 1, 0, 0, 1);
			case 4: A_ApplyAnimation(playerid, "CRIB", "PED_CONSOLE_LOOP", 4.1, 1, 1, 1, 0, 0, 1);
			case 5: A_ApplyAnimation(playerid, "CRIB", "PED_CONSOLE_LOOSE", 4.1, 1, 1, 1, 0, 0, 1);
			case 6: A_ApplyAnimation(playerid, "CRIB", "PED_CONSOLE_WIN", 4.1, 1, 1, 1, 0, 0, 1);
			case 7: A_ApplyAnimation(playerid, "CAR", "FIXN_CAR_LOOP", 4.1, 1, 1, 1, 0, 0, 1);
			case 8: A_ApplyAnimation(playerid, "INT_HOUSE", "WASH_UP", 4.1, 1, 1, 1, 0, 0, 1);
		}
	}
	case 307: {
		if(!response) return callcmd::animlist(playerid);
		switch(listitem) {
			case 0: A_ApplyAnimation(playerid, "CAR", "FLAG_DROP", 4.1, 0, 1, 1, 0, 0, 1);
			case 1: A_ApplyAnimation(playerid, "GANGS", "SHAKE_CARA", 4.1, 0, 1, 1, 0, 0, 1);
			case 2: A_ApplyAnimation(playerid, "GANGS", "SHAKE_CARSH", 4.1, 0, 1, 1, 0, 0, 1);
			case 3: A_ApplyAnimation(playerid, "GANGS", "SHAKE_CARK", 4.1, 0, 1, 1, 0, 0, 1);
			case 4: A_ApplyAnimation(playerid, "BOMBER", "BOM_PLANT", 4.1, 0, 1, 1, 0, 0, 1);
			case 5: A_ApplyAnimation(playerid, "MISC", "PLUNGER_01", 4.1, 0, 1, 1, 0, 0, 1);
			case 6: A_ApplyAnimation(playerid, "MEDIC", "CPR", 4.1, 0, 1, 1, 0, 0, 1);
			case 7: A_ApplyAnimation(playerid, "PAULNMAC", "PISS_IN", 4.1, 0, 1, 1, 1, 0, 1);
			case 8: A_ApplyAnimation(playerid, "PARK", "TAI_CHI_LOOP", 4.1, 1, 1, 1, 0, 0, 1);
			case 9: A_ApplyAnimation(playerid, "DAM_JUMP", "DAM_DIVE_LOOP", 4.1, 0, 1, 1, 1, 0, 1);
			case 10: A_ApplyAnimation(playerid, "PED", "FUCKU", 4.1, 0, 1, 1, 0, 0, 1);
			case 11: A_ApplyAnimation(playerid, "RIOT", "RIOT_FUKU", 4.1, 0, 1, 1, 1, 0, 1);
		}
	}
	case 4849: {
		if(!response) return 1;
		new veh_id, veh_price;
		switch(listitem) {
			case 0: veh_id = 481, veh_price = 2000;
			case 1: veh_id = 509, veh_price = 2100;
			case 2: veh_id = 510, veh_price = 5000;
			case 3: veh_id = 462, veh_price = 10000;
			case 4: veh_id = 461, veh_price = 120000;
			case 5: veh_id = 521, veh_price = 150000;
			case 6: veh_id = 463, veh_price = 100000;
			case 7: veh_id = 586, veh_price = 30000;
			case 8: veh_id = 471, veh_price = 50000;
			case 9: veh_id = 468, veh_price = 80000;
			case 10: veh_id = 522, veh_price = 2500000;
		}
		SetPVarInt(playerid, "vehshop_vehid", veh_id);
		SetPVarInt(playerid, "vehshop_vehprice", veh_price);
		SPD(playerid, 4803, DIALOG_STYLE_LIST, "{005b96}√Ç√ª√°√•√∞√®√≤√• √§√•√©√±√≤√¢√®√•", "√è√Æ√±√¨√Æ√≤√∞√•√≤√º √≠√† √¨√Æ√≤√Æ√∂√®√™√´\n√ä√≥√Ø√®√≤√º √¨√Æ√≤√Æ√∂√®√™√´", "Seleccione", "Siguiente");
	}
	case 4803: {
		if(!response) {
			SPD(playerid, 4849, DIALOG_STYLE_TABLIST_HEADERS, "{005b96}√å√Æ√≤√Æ√±√†√´√Æ√≠", 
				"{ff9945}√å√Æ√§√•√´√º\t\t{ff9945}√ñ√•√≠√†\n\
				"CWHITE"BMX\t2.000$\n\
				Bike\t2.100$\n\
				Mountain Bike\t5.000$\n\
				Faggio\t10.000$\n\
				PCJ-600\t120.000$\n\
				FCR-900\t150.000$\n\
				Freeway\t100.000$\n\
				Wayfarer\t30.000$\n\
				Quad\t50.000$\n\
				Sanchez\t80.000$\n\
				NRG-500\t2.500.000$", 
			"Seleccione", "Cerrar");
			DeletePVar(playerid, "vehshop_vehid");
			return DeletePVar(playerid, "vehshop_vehprice");
		}
		new veh_price = GetPVarInt(playerid, "vehshop_vehprice");
		switch(listitem) {
			case 0: {
				new veh_id = GetPVarInt(playerid, "vehshop_vehid");
				DeletePVar(playerid, "vehshop_vehid");
				DeletePVar(playerid, "vehshop_vehprice");
				veh_salonsee[playerid] = CreateVehicleEx(veh_id, 1062.2, 2085.0, 10.7, 0.0, -1, -1, CAR_SPAWN);
				GetPlayerPos(playerid, TeleportDest[playerid][0], TeleportDest[playerid][1], TeleportDest[playerid][2]);
				SetVehicleVirtualWorld(veh_salonsee[playerid], playerid + 11);
				intback[playerid] = GetPlayerInterior(playerid);
				vwback[playerid] = GetPlayerVirtualWorld(playerid);
				TogglePlayerControllable(playerid, 0);
				SetPlayerPos(playerid, 1077.0, 2093.7, 10.8);
				SetPlayerVirtualWorld(playerid, playerid + 11);
				SetPlayerInterior(playerid, 0);
				InterpolateCameraPos(playerid, 1068.7, 2092.3, 12.3, 1068.7, 2092.3, 12.3, 1000);
				InterpolateCameraLookAt(playerid, 1062.2, 2085.0, 10.7, 1062.2, 2085.0, 10.7, 1000);
				is_salonsee[playerid] = true;
				salonsee_dialogid[playerid] = 5;
				SCM(playerid, -1, "√Ñ√´√ø √¢√ª√µ√ÆS√≠ √®√ß √∞√•√¶√®√¨√† √Ø√∞√Æ√±√¨√Æ√≤√∞√† Usar√≤√• "CMAIN"√´√•√¢√ª√© ALT");
			}
			case 1: {
				if(BizEnter{playerid} == 255) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [015]");

				if(pData[playerid][pCash] < veh_price) return SCMF(playerid, COLOR_LIGHTGREY, "√Ñ√´√ø √Ø√Æ√™√≥√Ø√™√® √Ω√≤√Æ√£√Æ √¨√Æ√≤√Æ√∂√®√™√´√† √≠√≥√¶√≠√Æ "CCYAN"%d$ "CLIGHTGREY"√≠√†√´√®√∑√≠√ª√¨√®", veh_price);
				if(pData[playerid][have_garage] != -1) {
					if(pData[playerid][pCar][0] != 0) return SCM(playerid, COLOR_LIGHTGREY, "√è√•√∞√•√§ √Ø√Æ√™√≥√Ø√™√Æ√© √≤√∞√†√≠√±√Ø√Æ√∞√≤√† √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √Ø√∞√ÆS√≠√≤√º √≤√•√™√≥√π√®√© "CPALEGREEN"(/sellcar)");
					new sc_str[50], veh_id = GetPVarInt(playerid, "vehshop_vehid");
					DeletePVar(playerid, "vehshop_vehid");
					DeletePVar(playerid, "vehshop_vehprice");
					pData[playerid][pCar][0] = veh_id;
					pData[playerid][p_car_cash][0] = veh_price;
					pData[playerid][t_wheel][0] = 0;
					pData[playerid][t_hydraulics][0] = 0;
					pData[playerid][t_neon_num][0] = -1;
					pData[playerid][t_stereo][0] = 0;
					pData[playerid][Un_CarType][0] = 0;
					pData[playerid][t_paintjob][0] = -1;
					pData[playerid][t_color_1][0] = -1;
					pData[playerid][t_color_2][0] = -1;
					strmid(num_plate[playerid][0], "None", 0, strlen("None"), 255);
					strmid(p_car_charact_1[playerid], "0, 0, 0, 0, 0, 0, 0", 0, 20, 255);
					UpdatePlayerDataEx(playerid, "p_car_charact_1", "0, 0, 0, 0, 0, 0, 0");
					UpdatePlayerData(playerid, "p_car_cash_1", pData[playerid][p_car_cash][0]);
					UpdatePlayerData(playerid, "pCar", pData[playerid][pCar][0]);
					UpdatePlayerData(playerid, "t_wheel_car_1", 0);
					UpdatePlayerData(playerid, "t_hydraulics_car_1", 0);
					UpdatePlayerData(playerid, "t_neon_num_1", -1);
					UpdatePlayerData(playerid, "t_stereo_car_1", 0);
					UpdatePlayerData(playerid, "t_paintjob_car_1", -1);
					UpdatePlayerData(playerid, "Un_CarType_1", 0);
					UpdatePlayerData(playerid, "t_color_1_1", -1);
					UpdatePlayerData(playerid, "t_color_2_1", -1);
					UpdatePlayerDataEx(playerid, "num_plate_1", "None");
					Hook_GivePlayerMoney(playerid, -veh_price);
					format(sc_str, 50, "~r~-%d$", veh_price);
					GameTextForPlayer(playerid, sc_str, 3000, 1);
					if(house_carid[playerid][0] != 0) {
						DestroyVehicle(house_carid[playerid][0]);
						house_carid[playerid][0] = 0;
					}
					LoadCarPlayer(playerid, 1);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					VehInfo[house_carid[playerid][0]][vFuel] = 100.0;
					savefuel_cars(playerid, house_carid[playerid][0]);
				
					BizInfo[BizEnter{playerid}][bPribil] += veh_price/100*30;
					BizInfo[BizEnter{playerid}][bBank] += veh_price/100*30;
					if(BizInfo[BizEnter{playerid}][bBank] > 10000000) BizInfo[BizEnter{playerid}][bBank] = 10000000;
					UpdateBusinessData(BizEnter{playerid}, "bPribil", BizInfo[BizEnter{playerid}][bPribil]);
					UpdateBusinessData(BizEnter{playerid}, "bBank", BizInfo[BizEnter{playerid}][bBank]);

					SCM(playerid, 0x6AB1FFFF, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √Ø√∞√®√Æ√°√∞√•√≤¬∏√≠ √® √¢ √°√´√®√¶√†√©√∏√•√• √¢√∞√•√¨√ø √°√≥√§√•√≤ √§√Æ√±√≤√†√¢√´√•√≠ √™ √Ç√†√∏√•√¨√≥ √£√†√∞√†√¶√≥");

					return 1;
				}
				if(pData[playerid][pHotel] != -1 || pData[playerid][pFlat] != -1) {
					if(pData[playerid][pCar][0] != 0) return SCM(playerid, COLOR_LIGHTGREY, "√è√•√∞√•√§ √Ø√Æ√™√≥√Ø√™√Æ√© √≤√∞√†√≠√±√Ø√Æ√∞√≤√† √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √Ø√∞√ÆS√≠√≤√º √≤√•√™√≥√π√®√© "CPALEGREEN"(/sellcar)");
					new sc_str[50], veh_id = GetPVarInt(playerid, "vehshop_vehid");
					DeletePVar(playerid, "vehshop_vehid");
					DeletePVar(playerid, "vehshop_vehprice");
					pData[playerid][pCar][0] = veh_id;
					pData[playerid][p_car_cash][0] = veh_price;
					pData[playerid][t_wheel][0] = 0;
					pData[playerid][t_hydraulics][0] = 0;
					pData[playerid][t_neon_num][0] = -1;
					pData[playerid][t_stereo][0] = 0;
					pData[playerid][Un_CarType][0] = 0;
					pData[playerid][t_paintjob][0] = -1;
					pData[playerid][t_color_1][0] = -1;
					pData[playerid][t_color_2][0] = -1;
					strmid(num_plate[playerid][0], "None", 0, strlen("None"), 255);
					strmid(p_car_charact_1[playerid], "0, 0, 0, 0, 0, 0, 0", 0, 20, 255);
					UpdatePlayerDataEx(playerid, "p_car_charact_1", "0, 0, 0, 0, 0, 0, 0");
					UpdatePlayerData(playerid, "p_car_cash_1", pData[playerid][p_car_cash][0]);
					UpdatePlayerData(playerid, "pCar", pData[playerid][pCar][0]);
					UpdatePlayerData(playerid, "t_wheel_car_1", 0);
					UpdatePlayerData(playerid, "t_hydraulics_car_1", 0);
					UpdatePlayerData(playerid, "t_neon_num_1", -1);
					UpdatePlayerData(playerid, "t_stereo_car_1", 0);
					UpdatePlayerData(playerid, "t_paintjob_car_1", -1);
					UpdatePlayerData(playerid, "Un_CarType_1", 0);
					UpdatePlayerData(playerid, "t_color_1_1", -1);
					UpdatePlayerData(playerid, "t_color_2_1", -1);
					UpdatePlayerDataEx(playerid, "num_plate_1", "None");
					Hook_GivePlayerMoney(playerid, -veh_price);
					format(sc_str, 50, "~r~-%d$", veh_price);
					GameTextForPlayer(playerid, sc_str, 3000, 1);
					if(house_carid[playerid][0] != 0) {
						DestroyVehicle(house_carid[playerid][0]);
						house_carid[playerid][0] = 0;
					}
					LoadCarPlayer(playerid, 1);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					VehInfo[house_carid[playerid][0]][vFuel] = 100.0;
					savefuel_cars(playerid, house_carid[playerid][0]);
				
					BizInfo[BizEnter{playerid}][bPribil] += veh_price/100*30;
					BizInfo[BizEnter{playerid}][bBank] += veh_price/100*30;
					if(BizInfo[BizEnter{playerid}][bBank] > 10000000) BizInfo[BizEnter{playerid}][bBank] = 10000000;
					UpdateBusinessData(BizEnter{playerid}, "bPribil", BizInfo[BizEnter{playerid}][bPribil]);
					UpdateBusinessData(BizEnter{playerid}, "bBank", BizInfo[BizEnter{playerid}][bBank]);

					if(pData[playerid][pFlat] != -1) SCM(playerid, 0x6AB1FFFF, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √Ø√∞√®√Æ√°√∞√•√≤¬∏√≠ √® √¢ √°√´√®√¶√†√©√∏√•√• √¢√∞√•√¨√ø √°√≥√§√•√≤ √§√Æ√±√≤√†√¢√´√•√≠ √≠√† √±√≤√Æ√ø√≠√™√≥");
					else SCM(playerid, 0x6AB1FFFF, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √Ø√∞√®√Æ√°√∞√•√≤¬∏√≠ √® √¢ √°√´√®√¶√†√©√∏√•√• √¢√∞√•√¨√ø √°√≥√§√•√≤ √§√Æ√±√≤√†√¢√´√•√≠ √™ √Æ√≤√•√´√æ");

					return 1;
				}
				new text_car_1[140], text_car_2[140], text_car_3[140];
				if(pData[playerid][pCar][0] != 0) format(text_car_1, 140, "(√¨√†√∞√™√†: %s)", VehicleNames[pData[playerid][pCar][0] - 400]);
				else strcat(text_car_1, "{ff4d4d}(√Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤)");
				if(pData[playerid][pCar][1] != 0) format(text_car_2, 140, "(√¨√†√∞√™√†: %s)", VehicleNames[pData[playerid][pCar][1] - 400]);
				else strcat(text_car_2, "{ff4d4d}(√Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤)");
				if(pData[playerid][pCar][2] != 0) format(text_car_3, 140, "(√¨√†√∞√™√†: %s)", VehicleNames[pData[playerid][pCar][2] - 400]);
				else strcat(text_car_3, "{ff4d4d}(√Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤)");
				format(string, 270, "{FFCD00}√è√∞√®√¨√•√∑√†√≠√®√•: √Ø√∞√•√§√ª√§√≥√π√®√© √≤√∞√†√≠√±√Ø√Æ√∞√≤ √°√≥√§√•√≤ √†√≠√≠√≥√´√®√∞√Æ√¢√†√≠\n"CWHITE"√è√•√∞√¢√ª√© "CCYAN"%s\n"CWHITE"√Ç√≤√Æ√∞√Æ√© "CCYAN"%s\n"CWHITE"√í√∞√•√≤√®√© "CCYAN"%s", text_car_1, text_car_2, text_car_3);
				return SPD(playerid, 4804, DIALOG_STYLE_TABLIST_HEADERS, "{005b96}√Ç√ª√°√•√∞√®√≤√• √±√´√Æ√≤ √§√´√ø √≠√Æ√¢√Æ√£√Æ √≤√∞√†√≠√±√Ø√Æ√∞√≤√†", string, "Seleccione", "Siguiente");
			}
		}
	}
	case 4804: {
		if(!response) return SPD(playerid, 4803, DIALOG_STYLE_LIST, "{005b96}√Ç√ª√°√•√∞√®√≤√• √§√•√©√±√≤√¢√®√•", "√è√Æ√±√¨√Æ√≤√∞√•√≤√º √≠√† √¨√Æ√≤√Æ√∂√®√™√´\n√ä√≥√Ø√®√≤√º √¨√Æ√≤√Æ√∂√®√™√´", "Seleccione", "Siguiente");
		new sc_str[50], veh_id = GetPVarInt(playerid, "vehshop_vehid"), veh_price = GetPVarInt(playerid, "vehshop_vehprice");
		DeletePVar(playerid, "vehshop_vehid");
		DeletePVar(playerid, "vehshop_vehprice");
		pData[playerid][Un_CarType][listitem] = 0;
		pData[playerid][pCar][listitem] = veh_id;
		pData[playerid][p_car_cash][listitem] = veh_price;
		pData[playerid][t_wheel][listitem] = 0;
		pData[playerid][t_hydraulics][listitem] = 0;
		pData[playerid][t_stereo][listitem] = 0;
		pData[playerid][t_paintjob][listitem] = -1;
		pData[playerid][t_neon_num][listitem] = -1;
		pData[playerid][t_color_1][listitem] = -1;
		pData[playerid][t_color_2][listitem] = -1;
		strmid(num_plate[playerid][listitem], "None", 0, strlen("None"), 255);
		switch(listitem) {
			case 0: {
				strmid(p_car_charact_1[playerid], "0, 0, 0, 0, 0, 0, 0", 0, 20, 255);
				UpdatePlayerDataEx(playerid, "p_car_charact_1", "0, 0, 0, 0, 0, 0, 0");
				UpdatePlayerData(playerid, "p_car_cash_1", pData[playerid][p_car_cash][listitem]);
				UpdatePlayerData(playerid, "pCar", pData[playerid][pCar][listitem]);
				UpdatePlayerData(playerid, "Un_CarType_1", 0);
				UpdatePlayerData(playerid, "t_wheel_car_1", 0);
				UpdatePlayerData(playerid, "t_neon_num_1", -1);
				UpdatePlayerData(playerid, "t_hydraulics_car_1", 0);
				UpdatePlayerData(playerid, "t_stereo_car_1", 0);
				UpdatePlayerData(playerid, "t_paintjob_car_1", -1);
				UpdatePlayerData(playerid, "t_color_1_1", -1);
				UpdatePlayerData(playerid, "t_color_2_1", -1);
				UpdatePlayerDataEx(playerid, "num_plate_1", "None");
			}
			case 1: {
				strmid(p_car_charact_2[playerid], "0, 0, 0, 0, 0, 0, 0", 0, 20, 255);
				UpdatePlayerDataEx(playerid, "p_car_charact_2", "0, 0, 0, 0, 0, 0, 0");
				UpdatePlayerData(playerid, "p_car_cash_2", pData[playerid][p_car_cash][listitem]);
				UpdatePlayerData(playerid, "pCar2", pData[playerid][pCar][listitem]);
				UpdatePlayerData(playerid, "Un_CarType_2", 0);
				UpdatePlayerData(playerid, "t_wheel_car_2", 0);
				UpdatePlayerData(playerid, "t_neon_num_2", -1);
				UpdatePlayerData(playerid, "t_hydraulics_car_2", 0);
				UpdatePlayerData(playerid, "t_stereo_car_2", 0);
				UpdatePlayerData(playerid, "t_paintjob_car_2", -1);
				UpdatePlayerData(playerid, "t_color_1_2", -1);
				UpdatePlayerData(playerid, "t_color_2_2", -1);
				UpdatePlayerDataEx(playerid, "num_plate_2", "None");
			}
			case 2: {
				strmid(p_car_charact_3[playerid], "0, 0, 0, 0, 0, 0, 0", 0, 20, 255);
				UpdatePlayerDataEx(playerid, "p_car_charact_3", "0, 0, 0, 0, 0, 0, 0");
				UpdatePlayerData(playerid, "p_car_cash_3", pData[playerid][p_car_cash][listitem]);
				UpdatePlayerData(playerid, "pCar3", pData[playerid][pCar][listitem]);
				UpdatePlayerData(playerid, "Un_CarType_3", 0);
				UpdatePlayerData(playerid, "t_wheel_car_3", 0);
				UpdatePlayerData(playerid, "t_neon_num_3", -1);
				UpdatePlayerData(playerid, "t_hydraulics_car_3", 0);
				UpdatePlayerData(playerid, "t_stereo_car_3", 0);
				UpdatePlayerData(playerid, "t_paintjob_car_3", -1);
				UpdatePlayerData(playerid, "t_color_1_3", -1);
				UpdatePlayerData(playerid, "t_color_2_3", -1);
				UpdatePlayerDataEx(playerid, "num_plate_3", "None");
			}
		}
		Hook_GivePlayerMoney(playerid, -veh_price);
		format(sc_str, 50, "~r~-%d$", veh_price);
		GameTextForPlayer(playerid, sc_str, 3000, 1);
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		if(house_carid[playerid][listitem] != 0) {
			DestroyVehicle(house_carid[playerid][listitem]);
			house_carid[playerid][listitem] = 0;
		}
		LoadCarPlayer(playerid, listitem + 1);
		VehInfo[house_carid[playerid][listitem]][vFuel] = 100.0;
		savefuel_cars(playerid, house_carid[playerid][listitem]);

		BizInfo[BizEnter{playerid}][bPribil] += veh_price/100*30;
		BizInfo[BizEnter{playerid}][bBank] += veh_price/100*30;
		if(BizInfo[BizEnter{playerid}][bBank] > 10000000) BizInfo[BizEnter{playerid}][bBank] = 10000000;
		UpdateBusinessData(BizEnter{playerid}, "bPribil", BizInfo[BizEnter{playerid}][bPribil]);
		UpdateBusinessData(BizEnter{playerid}, "bBank", BizInfo[BizEnter{playerid}][bBank]);

		SCM(playerid, 0x6AB1FFFF, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √Ø√∞√®√Æ√°√∞√•√≤¬∏√≠ √® √¢ √°√´√®√¶√†√©√∏√•√• √¢√∞√•√¨√ø √°√≥√§√•√≤ √§√Æ√±√≤√†√¢√´√•√≠ √™ √Ç√†√∏√•√¨√≥ √§√Æ√¨√≥");
	}
	case 4848: {
		if(!response) return 1;
		new veh_id, veh_price;
		switch(listitem) {
			case 0: veh_id = 419, veh_price = 90000;
			case 1: veh_id = 404, veh_price = 19000;
			case 2: veh_id = 401, veh_price = 30000;
			case 3: veh_id = 410, veh_price = 25000;
			case 4: veh_id = 412, veh_price = 100000;
			case 5: veh_id = 413, veh_price = 115000;
			case 6: veh_id = 422, veh_price = 36000;
			case 7: veh_id = 439, veh_price = 25000;
			case 8: veh_id = 467, veh_price = 28000;
			case 9: veh_id = 466, veh_price = 34000;
			case 10: veh_id = 474, veh_price = 39000;
			case 11: veh_id = 479, veh_price = 28000;
			case 12: veh_id = 492, veh_price = 30000;
			case 13: veh_id = 491, veh_price = 38000;
			case 14: veh_id = 517, veh_price = 19000;
			case 15: veh_id = 518, veh_price = 40000;
			case 16: veh_id = 542, veh_price = 15000;
			case 17: veh_id = 543, veh_price = 15000;
			case 18: veh_id = 545, veh_price = 20000;
			case 19: veh_id = 549, veh_price = 33000;
			case 20: veh_id = 575, veh_price = 35000;
			case 21: veh_id = 576, veh_price = 33000;
			case 22: veh_id = 600, veh_price = 25000;
			case 23: veh_id = 585, veh_price = 30000;
		}
		SetPVarInt(playerid, "vehshop_vehid", veh_id);
		SetPVarInt(playerid, "vehshop_vehprice", veh_price);
		SPD(playerid, 4800, DIALOG_STYLE_LIST, "{005b96}√Ç√ª√°√•√∞√®√≤√• √§√•√©√±√≤√¢√®√•", "√è√Æ√±√¨√Æ√≤√∞√•√≤√º √≠√† √†√¢√≤√Æ√¨√Æ√°√®√´√º\n√ä√≥√Ø√®√≤√º √†√¢√≤√Æ√¨√Æ√°√®√´√º", "Seleccione", "Siguiente");
	}
	case 4800: {
		if(!response) {
			SPD(playerid, 4848, DIALOG_STYLE_TABLIST_HEADERS, "{005b96}√Ä√¢√≤√Æ√±√†√´√Æ√≠ √ã√Æ√±-√ë√†√≠√≤√Æ√±√†", 
				"{ff9945}√å√Æ√§√•√´√º\t\t{ff9945}√ñ√•√≠√†\n\
				"CWHITE"Esperanto\t90.000$\n\
				Perenniel\t19.000$\n\
				Bravura\t30.000$\n\
				Manana\t25.000$\n\
				Voodoo\t100.000$\n\
				Pony\t115.000$\n\
				Bobcat\t36.000$\n\
				Stallion\t25.000$\n\
				Oceanic\t28.000$\n\
				Glendale\t34.000$\n\
				Hermes\t39.000$\n\
				Regina\t28.000$\n\
				Greenwood\t30.000$\n\
				Virgo\t38.000$\n\
				Majestic\t19.000$\n\
				Buccaneer\t40.000$\n\
				Clover\t15.000$\n\
				Sadler\t15.000$\n\
				Hustler\t20.000$\n\
				Tampa\t33.000$\n\
				Broadway\t35.000$\n\
				Tornado\t33.000$\n\
				Picador\t25.000$\n\
				Emperor\t30.000$", 
			"Seleccione", "Cerrar");
			DeletePVar(playerid, "vehshop_vehid");
			return DeletePVar(playerid, "vehshop_vehprice");
		}
		new veh_price = GetPVarInt(playerid, "vehshop_vehprice");
		switch(listitem) {
			case 0: {
				new veh_id = GetPVarInt(playerid, "vehshop_vehid");
				DeletePVar(playerid, "vehshop_vehid");
				DeletePVar(playerid, "vehshop_vehprice");
				veh_salonsee[playerid] = CreateVehicleEx(veh_id, 1062.2, 2085.0, 10.7, 0.0, -1, -1, CAR_SPAWN);
				GetPlayerPos(playerid, TeleportDest[playerid][0], TeleportDest[playerid][1], TeleportDest[playerid][2]);
				SetVehicleVirtualWorld(veh_salonsee[playerid], playerid + 11);
				intback[playerid] = GetPlayerInterior(playerid);
				vwback[playerid] = GetPlayerVirtualWorld(playerid);
				TogglePlayerControllable(playerid, 0);
				SetPlayerPos(playerid, 1077.0, 2093.7, 10.8);
				SetPlayerVirtualWorld(playerid, playerid + 11);
				SetPlayerInterior(playerid, 0);
				InterpolateCameraPos(playerid, 1068.7, 2092.3, 12.3, 1068.7, 2092.3, 12.3, 1000);
				InterpolateCameraLookAt(playerid, 1062.2, 2085.0, 10.7, 1062.2, 2085.0, 10.7, 1000);
				is_salonsee[playerid] = true;
				salonsee_dialogid[playerid] = 1;
				SCM(playerid, -1, "√Ñ√´√ø √¢√ª√µ√ÆS√≠ √®√ß √∞√•√¶√®√¨√† √Ø√∞√Æ√±√¨√Æ√≤√∞√† Usar√≤√• "CMAIN"√´√•√¢√ª√© ALT");
			}
			case 1: {
				if(BizEnter{playerid} == 255) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [015]");

				if(pData[playerid][pCash] < veh_price) return SCMF(playerid, COLOR_LIGHTGREY, "√Ñ√´√ø √Ø√Æ√™√≥√Ø√™√® √Ω√≤√Æ√£√Æ √†√¢√≤√Æ√¨√Æ√°√®√´√ø √≠√≥√¶√≠√Æ "CCYAN"%d$ "CLIGHTGREY"√≠√†√´√®√∑√≠√ª√¨√®", veh_price);
				if(pData[playerid][have_garage] != -1) {
					if(pData[playerid][pCar][0] != 0) return SCM(playerid, COLOR_LIGHTGREY, "√è√•√∞√•√§ √Ø√Æ√™√≥√Ø√™√Æ√© √≤√∞√†√≠√±√Ø√Æ√∞√≤√† √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √Ø√∞√ÆS√≠√≤√º √≤√•√™√≥√π√®√© "CPALEGREEN"(/sellcar)");
					new sc_str[50], veh_id = GetPVarInt(playerid, "vehshop_vehid");
					DeletePVar(playerid, "vehshop_vehid");
					DeletePVar(playerid, "vehshop_vehprice");
					pData[playerid][pCar][0] = veh_id;
					pData[playerid][p_car_cash][0] = veh_price;
					pData[playerid][t_wheel][0] = 0;
					pData[playerid][t_hydraulics][0] = 0;
					pData[playerid][t_neon_num][0] = -1;
					pData[playerid][t_stereo][0] = 0;
					pData[playerid][Un_CarType][0] = 0;
					pData[playerid][t_paintjob][0] = -1;
					pData[playerid][t_color_1][0] = -1;
					pData[playerid][t_color_2][0] = -1;
					strmid(num_plate[playerid][0], "None", 0, strlen("None"), 255);
					strmid(p_car_charact_1[playerid], "0, 0, 0, 0, 0, 0, 0", 0, 20, 255);
					UpdatePlayerDataEx(playerid, "p_car_charact_1", "0, 0, 0, 0, 0, 0, 0");
					UpdatePlayerData(playerid, "p_car_cash_1", pData[playerid][p_car_cash][0]);
					UpdatePlayerData(playerid, "pCar", pData[playerid][pCar][0]);
					UpdatePlayerData(playerid, "t_wheel_car_1", 0);
					UpdatePlayerData(playerid, "t_hydraulics_car_1", 0);
					UpdatePlayerData(playerid, "t_neon_num_1", -1);
					UpdatePlayerData(playerid, "t_stereo_car_1", 0);
					UpdatePlayerData(playerid, "t_paintjob_car_1", -1);
					UpdatePlayerData(playerid, "Un_CarType_1", 0);
					UpdatePlayerData(playerid, "t_color_1_1", -1);
					UpdatePlayerData(playerid, "t_color_2_1", -1);
					UpdatePlayerDataEx(playerid, "num_plate_1", "None");
					Hook_GivePlayerMoney(playerid, -veh_price);
					format(sc_str, 50, "~r~-%d$", veh_price);
					GameTextForPlayer(playerid, sc_str, 3000, 1);
					if(house_carid[playerid][0] != 0) {
						DestroyVehicle(house_carid[playerid][0]);
						house_carid[playerid][0] = 0;
					}
					LoadCarPlayer(playerid, 1);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					VehInfo[house_carid[playerid][0]][vFuel] = 100.0;
					savefuel_cars(playerid, house_carid[playerid][0]);
				
					BizInfo[BizEnter{playerid}][bPribil] += veh_price/100*30;
					BizInfo[BizEnter{playerid}][bBank] += veh_price/100*30;
					if(BizInfo[BizEnter{playerid}][bBank] > 10000000) BizInfo[BizEnter{playerid}][bBank] = 10000000;
					UpdateBusinessData(BizEnter{playerid}, "bPribil", BizInfo[BizEnter{playerid}][bPribil]);
					UpdateBusinessData(BizEnter{playerid}, "bBank", BizInfo[BizEnter{playerid}][bBank]);

					SCM(playerid, 0x6AB1FFFF, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √Ø√∞√®√Æ√°√∞√•√≤¬∏√≠ √® √¢ √°√´√®√¶√†√©√∏√•√• √¢√∞√•√¨√ø √°√≥√§√•√≤ √§√Æ√±√≤√†√¢√´√•√≠ √™ √Ç√†√∏√•√¨√≥ √£√†√∞√†√¶√≥");

					return 1;
				}
				if(pData[playerid][pHotel] != -1 || pData[playerid][pFlat] != -1) {
					if(pData[playerid][pCar][0] != 0) return SCM(playerid, COLOR_LIGHTGREY, "√è√•√∞√•√§ √Ø√Æ√™√≥√Ø√™√Æ√© √≤√∞√†√≠√±√Ø√Æ√∞√≤√† √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √Ø√∞√ÆS√≠√≤√º √≤√•√™√≥√π√®√© "CPALEGREEN"(/sellcar)");
					new sc_str[50], veh_id = GetPVarInt(playerid, "vehshop_vehid");
					DeletePVar(playerid, "vehshop_vehid");
					DeletePVar(playerid, "vehshop_vehprice");
					pData[playerid][pCar][0] = veh_id;
					pData[playerid][p_car_cash][0] = veh_price;
					pData[playerid][t_wheel][0] = 0;
					pData[playerid][t_hydraulics][0] = 0;
					pData[playerid][t_neon_num][0] = -1;
					pData[playerid][t_stereo][0] = 0;
					pData[playerid][Un_CarType][0] = 0;
					pData[playerid][t_paintjob][0] = -1;
					pData[playerid][t_color_1][0] = -1;
					pData[playerid][t_color_2][0] = -1;
					strmid(num_plate[playerid][0], "None", 0, strlen("None"), 255);
					strmid(p_car_charact_1[playerid], "0, 0, 0, 0, 0, 0, 0", 0, 20, 255);
					UpdatePlayerDataEx(playerid, "p_car_charact_1", "0, 0, 0, 0, 0, 0, 0");
					UpdatePlayerData(playerid, "p_car_cash_1", pData[playerid][p_car_cash][0]);
					UpdatePlayerData(playerid, "pCar", pData[playerid][pCar][0]);
					UpdatePlayerData(playerid, "t_wheel_car_1", 0);
					UpdatePlayerData(playerid, "t_neon_num_1", -1);
					UpdatePlayerData(playerid, "t_hydraulics_car_1", 0);
					UpdatePlayerData(playerid, "Un_CarType_1", 0);
					UpdatePlayerData(playerid, "t_stereo_car_1", 0);
					UpdatePlayerData(playerid, "t_paintjob_car_1", -1);
					UpdatePlayerData(playerid, "t_color_1_1", -1);
					UpdatePlayerData(playerid, "t_color_2_1", -1);
					UpdatePlayerDataEx(playerid, "num_plate_1", "None");
					Hook_GivePlayerMoney(playerid, -veh_price);
					format(sc_str, 50, "~r~-%d$", veh_price);
					GameTextForPlayer(playerid, sc_str, 3000, 1);
					if(house_carid[playerid][0] != 0) {
						DestroyVehicle(house_carid[playerid][0]);
						house_carid[playerid][0] = 0;
					}
					LoadCarPlayer(playerid, 1);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					VehInfo[house_carid[playerid][0]][vFuel] = 100.0;
					savefuel_cars(playerid, house_carid[playerid][0]);

					BizInfo[BizEnter{playerid}][bPribil] += veh_price/100*30;
					BizInfo[BizEnter{playerid}][bBank] += veh_price/100*30;
					if(BizInfo[BizEnter{playerid}][bBank] > 10000000) BizInfo[BizEnter{playerid}][bBank] = 10000000;
					UpdateBusinessData(BizEnter{playerid}, "bPribil", BizInfo[BizEnter{playerid}][bPribil]);
					UpdateBusinessData(BizEnter{playerid}, "bBank", BizInfo[BizEnter{playerid}][bBank]);

					if(pData[playerid][pFlat] != -1) SCM(playerid, 0x6AB1FFFF, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √Ø√∞√®√Æ√°√∞√•√≤¬∏√≠ √® √¢ √°√´√®√¶√†√©√∏√•√• √¢√∞√•√¨√ø √°√≥√§√•√≤ √§√Æ√±√≤√†√¢√´√•√≠ √≠√† √±√≤√Æ√ø√≠√™√≥");
					else SCM(playerid, 0x6AB1FFFF, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √Ø√∞√®√Æ√°√∞√•√≤¬∏√≠ √® √¢ √°√´√®√¶√†√©√∏√•√• √¢√∞√•√¨√ø √°√≥√§√•√≤ √§√Æ√±√≤√†√¢√´√•√≠ √™ √Æ√≤√•√´√æ");

					return 1;
				}
				new text_car_1[140], text_car_2[140], text_car_3[140];
				if(pData[playerid][pCar][0] != 0) format(text_car_1, 140, "(√¨√†√∞√™√†: %s)", VehicleNames[pData[playerid][pCar][0] - 400]);
				else strcat(text_car_1, "{ff4d4d}(√Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤)");
				if(pData[playerid][pCar][1] != 0) format(text_car_2, 140, "(√¨√†√∞√™√†: %s)", VehicleNames[pData[playerid][pCar][1] - 400]);
				else strcat(text_car_2, "{ff4d4d}(√Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤)");
				if(pData[playerid][pCar][2] != 0) format(text_car_3, 140, "(√¨√†√∞√™√†: %s)", VehicleNames[pData[playerid][pCar][2] - 400]);
				else strcat(text_car_3, "{ff4d4d}(√Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤)");
				format(string, 270, "{FFCD00}√è√∞√®√¨√•√∑√†√≠√®√•: √Ø√∞√•√§√ª√§√≥√π√®√© √≤√∞√†√≠√±√Ø√Æ√∞√≤ √°√≥√§√•√≤ √†√≠√≠√≥√´√®√∞√Æ√¢√†√≠\n"CWHITE"√è√•√∞√¢√ª√© "CCYAN"%s\n"CWHITE"√Ç√≤√Æ√∞√Æ√© "CCYAN"%s\n"CWHITE"√í√∞√•√≤√®√© "CCYAN"%s",text_car_1,text_car_2,text_car_3);
				return SPD(playerid, 4801, DIALOG_STYLE_TABLIST_HEADERS, "{005b96}√Ç√ª√°√•√∞√®√≤√• √±√´√Æ√≤ √§√´√ø √≠√Æ√¢√Æ√£√Æ √≤√∞√†√≠√±√Ø√Æ√∞√≤√†", string, "Seleccione", "Siguiente");
			}
		}
	}
	case 4801: {
		if(!response) return SPD(playerid, 4800, DIALOG_STYLE_LIST, "{005b96}√Ç√ª√°√•√∞√®√≤√• √§√•√©√±√≤√¢√®√•", "√è√Æ√±√¨√Æ√≤√∞√•√≤√º √≠√† √†√¢√≤√Æ√¨√Æ√°√®√´√º\n√ä√≥√Ø√®√≤√º √†√¢√≤√Æ√¨√Æ√°√®√´√º", "Seleccione", "Siguiente");
		new sc_str[50], veh_id = GetPVarInt(playerid, "vehshop_vehid"), veh_price = GetPVarInt(playerid, "vehshop_vehprice");
		DeletePVar(playerid, "vehshop_vehid");
		DeletePVar(playerid, "vehshop_vehprice");
		pData[playerid][Un_CarType][listitem] = 0;
		pData[playerid][pCar][listitem] = veh_id;
		pData[playerid][p_car_cash][listitem] = veh_price;
		pData[playerid][t_wheel][listitem] = 0;
		pData[playerid][t_neon_num][listitem] = -1;
		pData[playerid][t_hydraulics][listitem] = 0;
		pData[playerid][t_stereo][listitem] = 0;
		pData[playerid][t_paintjob][listitem] = -1;
		pData[playerid][t_color_1][listitem] = -1;
		pData[playerid][t_color_2][listitem] = -1;
		strmid(num_plate[playerid][listitem], "None", 0, strlen("None"), 255);
		switch(listitem) {
			case 0: {
				strmid(p_car_charact_1[playerid], "0, 0, 0, 0, 0, 0, 0", 0, 20, 255);
				UpdatePlayerDataEx(playerid, "p_car_charact_1", "0, 0, 0, 0, 0, 0, 0");
				UpdatePlayerData(playerid, "p_car_cash_1", pData[playerid][p_car_cash][listitem]);
				UpdatePlayerData(playerid, "pCar", pData[playerid][pCar][listitem]);
				UpdatePlayerData(playerid, "Un_CarType_1", 0);
				UpdatePlayerData(playerid, "t_neon_num_1", -1);
				UpdatePlayerData(playerid, "t_wheel_car_1", 0);
				UpdatePlayerData(playerid, "t_hydraulics_car_1", 0);
				UpdatePlayerData(playerid, "t_stereo_car_1", 0);
				UpdatePlayerData(playerid, "t_paintjob_car_1", -1);
				UpdatePlayerData(playerid, "t_color_1_1", -1);
				UpdatePlayerData(playerid, "t_color_2_1", -1);
				UpdatePlayerDataEx(playerid, "num_plate_1", "None");
			}
			case 1: {
				strmid(p_car_charact_2[playerid], "0, 0, 0, 0, 0, 0, 0", 0, 20, 255);
				UpdatePlayerDataEx(playerid, "p_car_charact_2", "0, 0, 0, 0, 0, 0, 0");
				UpdatePlayerData(playerid, "p_car_cash_2", pData[playerid][p_car_cash][listitem]);
				UpdatePlayerData(playerid, "pCar2", pData[playerid][pCar][listitem]);
				UpdatePlayerData(playerid, "Un_CarType_2", 0);
				UpdatePlayerData(playerid, "t_neon_num_2", -1);
				UpdatePlayerData(playerid, "t_wheel_car_2", 0);
				UpdatePlayerData(playerid, "t_hydraulics_car_2", 0);
				UpdatePlayerData(playerid, "t_stereo_car_2", 0);
				UpdatePlayerData(playerid, "t_paintjob_car_2", -1);
				UpdatePlayerData(playerid, "t_color_1_2", -1);
				UpdatePlayerData(playerid, "t_color_2_2", -1);
				UpdatePlayerDataEx(playerid, "num_plate_2", "None");
			}
			case 2: {
				strmid(p_car_charact_3[playerid], "0, 0, 0, 0, 0, 0, 0", 0, 20, 255);
				UpdatePlayerDataEx(playerid, "p_car_charact_3", "0, 0, 0, 0, 0, 0, 0");
				UpdatePlayerData(playerid, "p_car_cash_3", pData[playerid][p_car_cash][listitem]);
				UpdatePlayerData(playerid, "pCar3", pData[playerid][pCar][listitem]);
				UpdatePlayerData(playerid, "Un_CarType_3", 0);
				UpdatePlayerData(playerid, "t_neon_num_3", -1);
				UpdatePlayerData(playerid, "t_wheel_car_3", 0);
				UpdatePlayerData(playerid, "t_hydraulics_car_3", 0);
				UpdatePlayerData(playerid, "t_stereo_car_3", 0);
				UpdatePlayerData(playerid, "t_paintjob_car_3", -1);
				UpdatePlayerData(playerid, "t_color_1_3", -1);
				UpdatePlayerData(playerid, "t_color_2_3", -1);
				UpdatePlayerDataEx(playerid, "num_plate_3", "None");
			}
		}
		Hook_GivePlayerMoney(playerid, -veh_price);
		format(sc_str, 50, "~r~-%d$", veh_price);
		GameTextForPlayer(playerid, sc_str, 3000, 1);
		if(house_carid[playerid][listitem] != 0) {
			DestroyVehicle(house_carid[playerid][listitem]);
			house_carid[playerid][listitem] = 0;
		}
		LoadCarPlayer(playerid, listitem + 1);
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		VehInfo[house_carid[playerid][listitem]][vFuel] = 100.0;
		savefuel_cars(playerid, house_carid[playerid][listitem]);

		BizInfo[BizEnter{playerid}][bPribil] += veh_price/100*30;
		BizInfo[BizEnter{playerid}][bBank] += veh_price/100*30;
		if(BizInfo[BizEnter{playerid}][bBank] > 10000000) BizInfo[BizEnter{playerid}][bBank] = 10000000;
		UpdateBusinessData(BizEnter{playerid}, "bPribil", BizInfo[BizEnter{playerid}][bPribil]);
		UpdateBusinessData(BizEnter{playerid}, "bBank", BizInfo[BizEnter{playerid}][bBank]);

		SCM(playerid, 0x6AB1FFFF, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √Ø√∞√®√Æ√°√∞√•√≤¬∏√≠ √® √¢ √°√´√®√¶√†√©√∏√•√• √¢√∞√•√¨√ø √°√≥√§√•√≤ √§√Æ√±√≤√†√¢√´√•√≠ √™ √Ç√†√∏√•√¨√≥ √§√Æ√¨√≥");
	}
	case 4853: {
		if(!response) {
			SPD(playerid, 4850, DIALOG_STYLE_TABLIST_HEADERS, "{005b96}√Ä√¢√≤√Æ√±√†√´√Æ√≠ √ë√†√≠-√î√®√•√∞√∞√Æ", 
				"{ff9945}√å√Æ√§√•√´√º\t\t{ff9945}√ñ√•√≠√†\n\
				"CWHITE"Phoenix\t300.000$\n\
				Huntley\t205.000$\n\
				Club\t200.000$\n\
				Stafford\t250.000$\n\
				Savanna\t150.000$\n\
				Tahoma\t150.000$\n\
				Stratum\t120.000$\n\
				Uranus\t160.000$\n\
				Windsor\t120.000$\n\
				Yosemite\t165.000$\n\
				Merit\t130.000$\n\
				Remington\t200.000$\n\
				Cadrona\t100.000$\n\
				Slamvan\t18.000$\n\
				Elegant\t140.000$\n\
				Rancher\t180.000$\n\
				Fortune\t150.000$\n\
				Feltzer\t150.000$\n\
				Mesa\t120.000$\n\
				Blista Compact\t120.000$\n\
				Sabre\t40.000$\n\
				Admiral\t100.000$\n\
				Premier\t150.000$\n\
				Washington\t190.000$\n\
				Sentinel\t160.000$\n\
				Landstalker\t150.000$", 
			"Seleccione", "Cerrar");
			DeletePVar(playerid, "vehshop_vehid");
			return DeletePVar(playerid, "vehshop_vehprice");
		}
		new veh_price = GetPVarInt(playerid, "vehshop_vehprice");
		switch(listitem) {
			case 0: {
				new veh_id = GetPVarInt(playerid, "vehshop_vehid");
				DeletePVar(playerid, "vehshop_vehid");
				DeletePVar(playerid, "vehshop_vehprice");
				veh_salonsee[playerid] = CreateVehicleEx(veh_id, 1062.2, 2085.0, 10.7, 0.0, -1, -1, CAR_SPAWN);
				GetPlayerPos(playerid, TeleportDest[playerid][0], TeleportDest[playerid][1], TeleportDest[playerid][2]);
				SetVehicleVirtualWorld(veh_salonsee[playerid], playerid + 11);
				intback[playerid] = GetPlayerInterior(playerid);
				vwback[playerid] = GetPlayerVirtualWorld(playerid);
				TogglePlayerControllable(playerid, 0);
				SetPlayerPos(playerid, 1077.0, 2093.7, 10.8);
				SetPlayerVirtualWorld(playerid, playerid + 11);
				SetPlayerInterior(playerid, 0);
				InterpolateCameraPos(playerid, 1068.7, 2092.3, 12.3, 1068.7, 2092.3, 12.3, 1000);
				InterpolateCameraLookAt(playerid, 1062.2, 2085.0, 10.7, 1062.2, 2085.0, 10.7, 1000);
				is_salonsee[playerid] = true;
				salonsee_dialogid[playerid] = 2;
				SCM(playerid, -1, "√Ñ√´√ø √¢√ª√µ√ÆS√≠ √®√ß √∞√•√¶√®√¨√† √Ø√∞√Æ√±√¨√Æ√≤√∞√† Usar√≤√• "CMAIN"√´√•√¢√ª√© ALT");
			}
			case 1: {
				if(pData[playerid][pCash] < veh_price) return SCMF(playerid, COLOR_LIGHTGREY, "√Ñ√´√ø √Ø√Æ√™√≥√Ø√™√® √Ω√≤√Æ√£√Æ √†√¢√≤√Æ√¨√Æ√°√®√´√ø √≠√≥√¶√≠√Æ "CCYAN"%d$ "CLIGHTGREY"√≠√†√´√®√∑√≠√ª√¨√®", veh_price);
				if(pData[playerid][have_garage] != -1) {
					if(pData[playerid][pCar][0] != 0) return SCM(playerid, COLOR_LIGHTGREY, "√è√•√∞√•√§ √Ø√Æ√™√≥√Ø√™√Æ√© √≤√∞√†√≠√±√Ø√Æ√∞√≤√† √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √Ø√∞√ÆS√≠√≤√º √≤√•√™√≥√π√®√© "CPALEGREEN"(/sellcar)");
					new sc_str[50], veh_id = GetPVarInt(playerid, "vehshop_vehid");
					DeletePVar(playerid, "vehshop_vehid");
					DeletePVar(playerid, "vehshop_vehprice");
					pData[playerid][pCar][0] = veh_id;
					pData[playerid][p_car_cash][0] = veh_price;
					pData[playerid][t_wheel][0] = 0;
					pData[playerid][t_hydraulics][0] = 0;
					pData[playerid][t_neon_num][0] = -1;
					pData[playerid][t_stereo][0] = 0;
					pData[playerid][Un_CarType][0] = 0;
					pData[playerid][t_paintjob][0] = -1;
					pData[playerid][t_color_1][0] = -1;
					pData[playerid][t_color_2][0] = -1;
					strmid(num_plate[playerid][0], "None", 0, strlen("None"), 255);
					strmid(p_car_charact_1[playerid], "0, 0, 0, 0, 0, 0, 0", 0, 20, 255);
					UpdatePlayerDataEx(playerid, "p_car_charact_1", "0, 0, 0, 0, 0, 0, 0");
					UpdatePlayerData(playerid, "p_car_cash_1", pData[playerid][p_car_cash][0]);
					UpdatePlayerData(playerid, "pCar", pData[playerid][pCar][0]);
					UpdatePlayerData(playerid, "t_wheel_car_1", 0);
					UpdatePlayerData(playerid, "t_hydraulics_car_1", 0);
					UpdatePlayerData(playerid, "t_neon_num_1", -1);
					UpdatePlayerData(playerid, "t_stereo_car_1", 0);
					UpdatePlayerData(playerid, "t_paintjob_car_1", -1);
					UpdatePlayerData(playerid, "Un_CarType_1", 0);
					UpdatePlayerData(playerid, "t_color_1_1", -1);
					UpdatePlayerData(playerid, "t_color_2_1", -1);
					UpdatePlayerDataEx(playerid, "num_plate_1", "None");
					Hook_GivePlayerMoney(playerid, -veh_price);
					format(sc_str, 50, "~r~-%d$", veh_price);
					GameTextForPlayer(playerid, sc_str, 3000, 1);
					if(house_carid[playerid][0] != 0) {
						DestroyVehicle(house_carid[playerid][0]);
						house_carid[playerid][0] = 0;
					}
					LoadCarPlayer(playerid, 1);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					VehInfo[house_carid[playerid][0]][vFuel] = 100.0;
					savefuel_cars(playerid, house_carid[playerid][0]);

					SCM(playerid, 0x6AB1FFFF, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √Ø√∞√®√Æ√°√∞√•√≤¬∏√≠ √® √¢ √°√´√®√¶√†√©√∏√•√• √¢√∞√•√¨√ø √°√≥√§√•√≤ √§√Æ√±√≤√†√¢√´√•√≠ √™ √Ç√†√∏√•√¨√≥ √£√†√∞√†√¶√≥");

					return 1;
				}
				if(pData[playerid][pHotel] != -1 || pData[playerid][pFlat] != -1) {
					if(pData[playerid][pCar][0] != 0) return SCM(playerid, COLOR_LIGHTGREY, "√è√•√∞√•√§ √Ø√Æ√™√≥√Ø√™√Æ√© √≤√∞√†√≠√±√Ø√Æ√∞√≤√† √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √Ø√∞√ÆS√≠√≤√º √≤√•√™√≥√π√®√© "CPALEGREEN"(/sellcar)");
					new sc_str[50], veh_id = GetPVarInt(playerid, "vehshop_vehid");
					DeletePVar(playerid, "vehshop_vehid");
					DeletePVar(playerid, "vehshop_vehprice");
					pData[playerid][pCar][0] = veh_id;
					pData[playerid][p_car_cash][0] = veh_price;
					pData[playerid][t_wheel][0] = 0;
					pData[playerid][t_hydraulics][0] = 0;
					pData[playerid][t_stereo][0] = 0;
					pData[playerid][t_neon_num][0] = -1;
					pData[playerid][t_paintjob][0] = -1;
					pData[playerid][t_color_1][0] = -1;
					pData[playerid][Un_CarType][0] = 0;
					pData[playerid][t_color_2][0] = -1;
					strmid(num_plate[playerid][0], "None", 0, strlen("None"), 255);
					strmid(p_car_charact_1[playerid], "0, 0, 0, 0, 0, 0, 0", 0, 20, 255);
					UpdatePlayerDataEx(playerid, "p_car_charact_1", "0, 0, 0, 0, 0, 0, 0");
					UpdatePlayerData(playerid, "p_car_cash_1", pData[playerid][p_car_cash][0]);
					UpdatePlayerData(playerid, "pCar", pData[playerid][pCar][0]);
					UpdatePlayerData(playerid, "Un_CarType_1", 0);
					UpdatePlayerData(playerid, "t_neon_num_1", -1);
					UpdatePlayerData(playerid, "t_wheel_car_1", 0);
					UpdatePlayerData(playerid, "t_hydraulics_car_1", 0);
					UpdatePlayerData(playerid, "t_stereo_car_1", 0);
					UpdatePlayerData(playerid, "t_paintjob_car_1", -1);
					UpdatePlayerData(playerid, "t_color_1_1", -1);
					UpdatePlayerData(playerid, "t_color_2_1", -1);
					UpdatePlayerDataEx(playerid, "num_plate_1", "None");
					Hook_GivePlayerMoney(playerid, -veh_price);
					format(sc_str, 50, "~r~-%d$", veh_price);
					GameTextForPlayer(playerid, sc_str, 3000, 1);
					if(house_carid[playerid][0] != 0) {
						DestroyVehicle(house_carid[playerid][0]);
						house_carid[playerid][0] = 0;
					}
					LoadCarPlayer(playerid, 1);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					VehInfo[house_carid[playerid][0]][vFuel] = 100.0;
					savefuel_cars(playerid, house_carid[playerid][0]);

					if(pData[playerid][pFlat] != -1) SCM(playerid, 0x6AB1FFFF, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √Ø√∞√®√Æ√°√∞√•√≤¬∏√≠ √® √¢ √°√´√®√¶√†√©√∏√•√• √¢√∞√•√¨√ø √°√≥√§√•√≤ √§√Æ√±√≤√†√¢√´√•√≠ √≠√† √±√≤√Æ√ø√≠√™√≥");
					else SCM(playerid, 0x6AB1FFFF, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √Ø√∞√®√Æ√°√∞√•√≤¬∏√≠ √® √¢ √°√´√®√¶√†√©√∏√•√• √¢√∞√•√¨√ø √°√≥√§√•√≤ √§√Æ√±√≤√†√¢√´√•√≠ √™ √Æ√≤√•√´√æ");

					return 1;
				}
				new text_car_1[140], text_car_2[140], text_car_3[140];
				if(pData[playerid][pCar][0] != 0) format(text_car_1, 140, "(√¨√†√∞√™√†: %s)", VehicleNames[pData[playerid][pCar][0] - 400]);
				else strcat(text_car_1, "{ff4d4d}(√Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤)");
				if(pData[playerid][pCar][1] != 0) format(text_car_2, 140, "(√¨√†√∞√™√†: %s)", VehicleNames[pData[playerid][pCar][1] - 400]);
				else strcat(text_car_2, "{ff4d4d}(√Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤)");
				if(pData[playerid][pCar][2] != 0) format(text_car_3, 140, "(√¨√†√∞√™√†: %s)", VehicleNames[pData[playerid][pCar][2] - 400]);
				else strcat(text_car_3, "{ff4d4d}(√Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤)");
				format(string, 270, "{FFCD00}√è√∞√®√¨√•√∑√†√≠√®√•: √Ø√∞√•√§√ª√§√≥√π√®√© √≤√∞√†√≠√±√Ø√Æ√∞√≤ √°√≥√§√•√≤ √†√≠√≠√≥√´√®√∞√Æ√¢√†√≠\n"CWHITE"√è√•√∞√¢√ª√© "CCYAN"%s\n"CWHITE"√Ç√≤√Æ√∞√Æ√© "CCYAN"%s\n"CWHITE"√í√∞√•√≤√®√© "CCYAN"%s",text_car_1,text_car_2,text_car_3);
				return SPD(playerid, 4802, DIALOG_STYLE_TABLIST_HEADERS, "{005b96}√Ç√ª√°√•√∞√®√≤√• √±√´√Æ√≤ √§√´√ø √≠√Æ√¢√Æ√£√Æ √≤√∞√†√≠√±√Ø√Æ√∞√≤√†", string, "Seleccione", "Siguiente");
			}
		}
	}
	case 4802: {
		if(!response) return SPD(playerid, 4853, DIALOG_STYLE_LIST, "{005b96}√Ç√ª√°√•√∞√®√≤√• √§√•√©√±√≤√¢√®√•", "√è√Æ√±√¨√Æ√≤√∞√•√≤√º √≠√† √†√¢√≤√Æ√¨√Æ√°√®√´√º\n√ä√≥√Ø√®√≤√º √†√¢√≤√Æ√¨√Æ√°√®√´√º", "Seleccione", "Siguiente");
		new sc_str[50], veh_id = GetPVarInt(playerid, "vehshop_vehid"), veh_price = GetPVarInt(playerid, "vehshop_vehprice");
		DeletePVar(playerid, "vehshop_vehid");
		DeletePVar(playerid, "vehshop_vehprice");
		pData[playerid][Un_CarType][listitem] = 0;
		pData[playerid][pCar][listitem] = veh_id;
		pData[playerid][p_car_cash][listitem] = veh_price;
		pData[playerid][t_wheel][listitem] = 0;
		pData[playerid][t_hydraulics][listitem] = 0;
		pData[playerid][t_stereo][listitem] = 0;
		pData[playerid][t_paintjob][listitem] = -1;
		pData[playerid][t_color_1][listitem] = -1;
		pData[playerid][t_neon_num][listitem] = -1;
		pData[playerid][t_color_2][listitem] = -1;
		strmid(num_plate[playerid][listitem], "None", 0, strlen("None"), 255);
		switch(listitem) {
			case 0: {
				strmid(p_car_charact_1[playerid], "0, 0, 0, 0, 0, 0, 0", 0, 20, 255);
				UpdatePlayerDataEx(playerid, "p_car_charact_1", "0, 0, 0, 0, 0, 0, 0");
				UpdatePlayerData(playerid, "p_car_cash_1", pData[playerid][p_car_cash][listitem]);
				UpdatePlayerData(playerid, "pCar", pData[playerid][pCar][listitem]);
				UpdatePlayerData(playerid, "Un_CarType_1", 0);
				UpdatePlayerData(playerid, "t_neon_num_1", -1);
				UpdatePlayerData(playerid, "t_wheel_car_1", 0);
				UpdatePlayerData(playerid, "t_hydraulics_car_1", 0);
				UpdatePlayerData(playerid, "t_stereo_car_1", 0);
				UpdatePlayerData(playerid, "t_paintjob_car_1", -1);
				UpdatePlayerData(playerid, "t_color_1_1", -1);
				UpdatePlayerData(playerid, "t_color_2_1", -1);
				UpdatePlayerDataEx(playerid, "num_plate_1", "None");
			}
			case 1: {
				strmid(p_car_charact_2[playerid], "0, 0, 0, 0, 0, 0, 0", 0, 20, 255);
				UpdatePlayerDataEx(playerid, "p_car_charact_2", "0, 0, 0, 0, 0, 0, 0");
				UpdatePlayerData(playerid, "p_car_cash_2", pData[playerid][p_car_cash][listitem]);
				UpdatePlayerData(playerid, "pCar2", pData[playerid][pCar][listitem]);
				UpdatePlayerData(playerid, "Un_CarType_2", 0);
				UpdatePlayerData(playerid, "t_neon_num_2", -1);
				UpdatePlayerData(playerid, "t_wheel_car_2", 0);
				UpdatePlayerData(playerid, "t_hydraulics_car_2", 0);
				UpdatePlayerData(playerid, "t_stereo_car_2", 0);
				UpdatePlayerData(playerid, "t_paintjob_car_2", -1);
				UpdatePlayerData(playerid, "t_color_1_2", -1);
				UpdatePlayerData(playerid, "t_color_2_2", -1);
				UpdatePlayerDataEx(playerid, "num_plate_2", "None");
			}
			case 2: {
				strmid(p_car_charact_3[playerid], "0, 0, 0, 0, 0, 0, 0", 0, 20, 255);
				UpdatePlayerDataEx(playerid, "p_car_charact_3", "0, 0, 0, 0, 0, 0, 0");
				UpdatePlayerData(playerid, "p_car_cash_3", pData[playerid][p_car_cash][listitem]);
				UpdatePlayerData(playerid, "pCar3", pData[playerid][pCar][listitem]);
				UpdatePlayerData(playerid, "Un_CarType_3", 0);
				UpdatePlayerData(playerid, "t_neon_num_3", -1);
				UpdatePlayerData(playerid, "t_wheel_car_3", 0);
				UpdatePlayerData(playerid, "t_hydraulics_car_3", 0);
				UpdatePlayerData(playerid, "t_stereo_car_3", 0);
				UpdatePlayerData(playerid, "t_paintjob_car_3", -1);
				UpdatePlayerData(playerid, "t_color_1_3", -1);
				UpdatePlayerData(playerid, "t_color_2_3", -1);
				UpdatePlayerDataEx(playerid, "num_plate_3", "None");
			}
		}
		Hook_GivePlayerMoney(playerid, -veh_price);
		format(sc_str, 50, "~r~-%d$", veh_price);
		GameTextForPlayer(playerid, sc_str, 3000, 1);
		if(house_carid[playerid][listitem] != 0) {
			DestroyVehicle(house_carid[playerid][listitem]);
			house_carid[playerid][listitem] = 0;
		}
		LoadCarPlayer(playerid, listitem + 1);
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		VehInfo[house_carid[playerid][listitem]][vFuel] = 100.0;
		savefuel_cars(playerid, house_carid[playerid][listitem]);

		SCM(playerid, 0x6AB1FFFF, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √Ø√∞√®√Æ√°√∞√•√≤¬∏√≠ √® √¢ √°√´√®√¶√†√©√∏√•√• √¢√∞√•√¨√ø √°√≥√§√•√≤ √§√Æ√±√≤√†√¢√´√•√≠ √™ √Ç√†√∏√•√¨√≥ √§√Æ√¨√≥");
	}
	case 4850: {
		if(!response) return 1;
		new veh_id, veh_price;
		switch(listitem) {
			case 0: veh_id = 603, veh_price = 300000;
			case 1: veh_id = 579, veh_price = 205000;
			case 2: veh_id = 589, veh_price = 200000;
			case 3: veh_id = 580, veh_price = 250000;
			case 4: veh_id = 567, veh_price = 150000;
			case 5: veh_id = 566, veh_price = 150000;
			case 6: veh_id = 561, veh_price = 120000;
			case 7: veh_id = 558, veh_price = 160000;
			case 8: veh_id = 555, veh_price = 120000;
			case 9: veh_id = 554, veh_price = 165000;
			case 10: veh_id = 551, veh_price = 130000;
			case 11: veh_id = 534, veh_price = 200000;
			case 12: veh_id = 527, veh_price = 100000;
			case 13: veh_id = 535, veh_price = 18000;
			case 14: veh_id = 507, veh_price = 140000;
			case 15: veh_id = 489, veh_price = 180000;
			case 16: veh_id = 526, veh_price = 150000;
			case 17: veh_id = 533, veh_price = 150000;
			case 18: veh_id = 500, veh_price = 120000;
			case 19: veh_id = 496, veh_price = 120000;
			case 20: veh_id = 475, veh_price = 40000;
			case 21: veh_id = 445, veh_price = 100000;
			case 22: veh_id = 426, veh_price = 150000;
			case 23: veh_id = 421, veh_price = 190000;
			case 24: veh_id = 405, veh_price = 160000;
			case 25: veh_id = 400, veh_price = 150000;
		}
		SetPVarInt(playerid, "vehshop_vehid", veh_id);
		SetPVarInt(playerid, "vehshop_vehprice", veh_price);
		SPD(playerid, 4853, DIALOG_STYLE_LIST, "{005b96}√Ç√ª√°√•√∞√®√≤√• √§√•√©√±√≤√¢√®√•", "√è√Æ√±√¨√Æ√≤√∞√•√≤√º √≠√† √†√¢√≤√Æ√¨√Æ√°√®√´√º\n√ä√≥√Ø√®√≤√º √†√¢√≤√Æ√¨√Æ√°√®√´√º", "Seleccione", "Siguiente");
	}
	case 4855: {
		if(!response) return 1;
		new veh_id, veh_price;
		switch(listitem) {
			case 0: veh_id = 602, veh_price = 395000;
			case 1: veh_id = 587, veh_price = 450000;
			case 2: veh_id = 559, veh_price = 540000;
			case 3: veh_id = 560, veh_price = 570000;
			case 4: veh_id = 562, veh_price = 400000;
			case 5: veh_id = 541, veh_price = 1100000;
			case 6: veh_id = 506, veh_price = 700000;
			case 7: veh_id = 480, veh_price = 555000;
			case 8: veh_id = 434, veh_price = 1300000;
			case 9: veh_id = 477, veh_price = 810000;
			case 10: veh_id = 494, veh_price = 950000;
			case 11: veh_id = 502, veh_price = 950000;
			case 12: veh_id = 503, veh_price = 950000;
			case 13: veh_id = 415, veh_price = 1600000;
			case 14: veh_id = 429, veh_price = 900000;
			case 15: veh_id = 402, veh_price = 900000;
			case 16: veh_id = 451, veh_price = 2000000;
			case 17: veh_id = 411, veh_price = 5000000;
		}
		SetPVarInt(playerid, "vehshop_vehid", veh_id);
		SetPVarInt(playerid, "vehshop_vehprice", veh_price);
		SPD(playerid, 4856, DIALOG_STYLE_LIST, "{005b96}√Ç√ª√°√•√∞√®√≤√• √§√•√©√±√≤√¢√®√•", "√è√Æ√±√¨√Æ√≤√∞√•√≤√º √≠√† √†√¢√≤√Æ√¨√Æ√°√®√´√º\n√ä√≥√Ø√®√≤√º √†√¢√≤√Æ√¨√Æ√°√®√´√º", "Seleccione", "Siguiente");
	}
	case 4856: {
		if(!response) {
			SPD(playerid, 4855, DIALOG_STYLE_TABLIST_HEADERS, "{005b96}√Ä√¢√≤√Æ√±√†√´√Æ√≠ √ã√†√±-√Ç√•√≠√≤√≥√∞√†√±√†", 
				"{ff9945}√å√Æ√§√•√´√º\t\t{ff9945}√ñ√•√≠√†\n\
				"CWHITE"Alpha\t395.000$\n\
				Euros\t450.000$\n\
				Jester\t540.000$\n\
				Sultan\t570.000$\n\
				Elegy\t400.000$\n\
				Bullet\t1.100.000$\n\
				Super GT\t700.000$\n\
				Comet\t555.000$\n\
				Hotknife\t1.300.000$\n\
				ZR-350\t810.000$\n\
				Hotring Racer\t950.000$\n\
				Hotring Racer A\t950.000$\n\
				Hotring Racer B\t950.000$\n\
				Cheetah\t1.600.000$\n\
				Banshee\t900.000$\n\
				Buffalo\t900.000$\n\
				Turismo\t2.000.000$\n\
				Infernus\t5.000.000$", 
			"Seleccione", "Cerrar");
			DeletePVar(playerid, "vehshop_vehid");
			return DeletePVar(playerid, "vehshop_vehprice");
		}
		new veh_price = GetPVarInt(playerid, "vehshop_vehprice");
		switch(listitem) {
			case 0: {
				new veh_id = GetPVarInt(playerid, "vehshop_vehid");
				DeletePVar(playerid, "vehshop_vehid");
				DeletePVar(playerid, "vehshop_vehprice");
				veh_salonsee[playerid] = CreateVehicleEx(veh_id, 1062.2, 2085.0, 10.7, 0.0, -1, -1, CAR_SPAWN);
				GetPlayerPos(playerid, TeleportDest[playerid][0], TeleportDest[playerid][1], TeleportDest[playerid][2]);
				SetVehicleVirtualWorld(veh_salonsee[playerid], playerid + 11);
				intback[playerid] = GetPlayerInterior(playerid);
				vwback[playerid] = GetPlayerVirtualWorld(playerid);
				TogglePlayerControllable(playerid, 0);
				SetPlayerPos(playerid, 1077.0, 2093.7, 10.8);
				SetPlayerVirtualWorld(playerid, playerid + 11);
				SetPlayerInterior(playerid, 0);
				InterpolateCameraPos(playerid, 1068.7, 2092.3, 12.3, 1068.7, 2092.3, 12.3, 1000);
				InterpolateCameraLookAt(playerid, 1062.2, 2085.0, 10.7, 1062.2, 2085.0, 10.7, 1000);
				is_salonsee[playerid] = true;
				salonsee_dialogid[playerid] = 4;
				SCM(playerid, -1, "√Ñ√´√ø √¢√ª√µ√ÆS√≠ √®√ß √∞√•√¶√®√¨√† √Ø√∞√Æ√±√¨√Æ√≤√∞√† Usar√≤√• "CMAIN"√´√•√¢√ª√© ALT");
			}
			case 1: {
				if(BizEnter{playerid} == 255) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [015]");

				if(pData[playerid][pCash] < veh_price) return SCMF(playerid, COLOR_LIGHTGREY, "√Ñ√´√ø √Ø√Æ√™√≥√Ø√™√® √Ω√≤√Æ√£√Æ √†√¢√≤√Æ√¨√Æ√°√®√´√ø √≠√≥√¶√≠√Æ "CCYAN"%d$ "CLIGHTGREY"√≠√†√´√®√∑√≠√ª√¨√®", veh_price);
				if(pData[playerid][have_garage] != -1) {
					if(pData[playerid][pCar][0] != 0) return SCM(playerid, COLOR_LIGHTGREY, "√è√•√∞√•√§ √Ø√Æ√™√≥√Ø√™√Æ√© √≤√∞√†√≠√±√Ø√Æ√∞√≤√† √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √Ø√∞√ÆS√≠√≤√º √≤√•√™√≥√π√®√© "CPALEGREEN"(/sellcar)");
					new sc_str[50], veh_id = GetPVarInt(playerid, "vehshop_vehid");
					DeletePVar(playerid, "vehshop_vehid");
					DeletePVar(playerid, "vehshop_vehprice");
					pData[playerid][pCar][0] = veh_id;
					pData[playerid][p_car_cash][0] = veh_price;
					pData[playerid][t_wheel][0] = 0;
					pData[playerid][t_hydraulics][0] = 0;
					pData[playerid][t_neon_num][0] = -1;
					pData[playerid][t_stereo][0] = 0;
					pData[playerid][Un_CarType][0] = 0;
					pData[playerid][t_paintjob][0] = -1;
					pData[playerid][t_color_1][0] = -1;
					pData[playerid][t_color_2][0] = -1;
					strmid(num_plate[playerid][0], "None", 0, strlen("None"), 255);
					strmid(p_car_charact_1[playerid], "0, 0, 0, 0, 0, 0, 0", 0, 20, 255);
					UpdatePlayerDataEx(playerid, "p_car_charact_1", "0, 0, 0, 0, 0, 0, 0");
					UpdatePlayerData(playerid, "p_car_cash_1", pData[playerid][p_car_cash][0]);
					UpdatePlayerData(playerid, "pCar", pData[playerid][pCar][0]);
					UpdatePlayerData(playerid, "t_wheel_car_1", 0);
					UpdatePlayerData(playerid, "t_hydraulics_car_1", 0);
					UpdatePlayerData(playerid, "t_neon_num_1", -1);
					UpdatePlayerData(playerid, "t_stereo_car_1", 0);
					UpdatePlayerData(playerid, "t_paintjob_car_1", -1);
					UpdatePlayerData(playerid, "Un_CarType_1", 0);
					UpdatePlayerData(playerid, "t_color_1_1", -1);
					UpdatePlayerData(playerid, "t_color_2_1", -1);
					UpdatePlayerDataEx(playerid, "num_plate_1", "None");
					Hook_GivePlayerMoney(playerid, -veh_price);
					format(sc_str, 50, "~r~-%d$", veh_price);
					GameTextForPlayer(playerid, sc_str, 3000, 1);
					if(house_carid[playerid][0] != 0) {
						DestroyVehicle(house_carid[playerid][0]);
						house_carid[playerid][0] = 0;
					}
					LoadCarPlayer(playerid, 1);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					VehInfo[house_carid[playerid][0]][vFuel] = 100.0;
					savefuel_cars(playerid, house_carid[playerid][0]);

					BizInfo[BizEnter{playerid}][bPribil] += veh_price/100*30;
					BizInfo[BizEnter{playerid}][bBank] += veh_price/100*30;
					if(BizInfo[BizEnter{playerid}][bBank] > 10000000) BizInfo[BizEnter{playerid}][bBank] = 10000000;
					UpdateBusinessData(BizEnter{playerid}, "bPribil", BizInfo[BizEnter{playerid}][bPribil]);
					UpdateBusinessData(BizEnter{playerid}, "bBank", BizInfo[BizEnter{playerid}][bBank]);

					SCM(playerid, 0x6AB1FFFF, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √Ø√∞√®√Æ√°√∞√•√≤¬∏√≠ √® √¢ √°√´√®√¶√†√©√∏√•√• √¢√∞√•√¨√ø √°√≥√§√•√≤ √§√Æ√±√≤√†√¢√´√•√≠ √™ √Ç√†√∏√•√¨√≥ √£√†√∞√†√¶√≥");

					return 1;
				}
				if(pData[playerid][pHotel] != -1 || pData[playerid][pFlat] != -1) {
					if(pData[playerid][pCar][0] != 0) return SCM(playerid, COLOR_LIGHTGREY, "√è√•√∞√•√§ √Ø√Æ√™√≥√Ø√™√Æ√© √≤√∞√†√≠√±√Ø√Æ√∞√≤√† √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √Ø√∞√ÆS√≠√≤√º √≤√•√™√≥√π√®√© "CPALEGREEN"(/sellcar)");
					new sc_str[50], veh_id = GetPVarInt(playerid, "vehshop_vehid");
					DeletePVar(playerid, "vehshop_vehid");
					DeletePVar(playerid, "vehshop_vehprice");
					pData[playerid][pCar][0] = veh_id;
					pData[playerid][p_car_cash][0] = veh_price;
					pData[playerid][t_wheel][0] = 0;
					pData[playerid][t_hydraulics][0] = 0;
					pData[playerid][t_stereo][0] = 0;
					pData[playerid][t_paintjob][0] = -1;
					pData[playerid][t_neon_num][0] = -1;
					pData[playerid][t_color_1][0] = -1;
					pData[playerid][t_color_2][0] = -1;
					pData[playerid][Un_CarType][0] = 0;
					strmid(num_plate[playerid][0], "None", 0, strlen("None"), 255);
					strmid(p_car_charact_1[playerid], "0, 0, 0, 0, 0, 0, 0", 0, 20, 255);
					UpdatePlayerDataEx(playerid, "p_car_charact_1", "0, 0, 0, 0, 0, 0, 0");
					UpdatePlayerData(playerid, "p_car_cash_1", pData[playerid][p_car_cash][0]);
					UpdatePlayerData(playerid, "pCar", pData[playerid][pCar][0]);
					UpdatePlayerData(playerid, "t_wheel_car_1", 0);
					UpdatePlayerData(playerid, "t_hydraulics_car_1", 0);
					UpdatePlayerData(playerid, "t_stereo_car_1", 0);
					UpdatePlayerData(playerid, "Un_CarType_1", 0);
					UpdatePlayerData(playerid, "t_neon_num_1", -1);
					UpdatePlayerData(playerid, "t_paintjob_car_1", -1);
					UpdatePlayerData(playerid, "t_color_1_1", -1);
					UpdatePlayerData(playerid, "t_color_2_1", -1);
					UpdatePlayerDataEx(playerid, "num_plate_1", "None");
					Hook_GivePlayerMoney(playerid, -veh_price);
					format(sc_str, 50, "~r~-%d$", veh_price);
					GameTextForPlayer(playerid, sc_str, 3000, 1);
					if(house_carid[playerid][0] != 0) {
						DestroyVehicle(house_carid[playerid][0]);
						house_carid[playerid][0] = 0;
					}
					LoadCarPlayer(playerid, 1);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					VehInfo[house_carid[playerid][0]][vFuel] = 100.0;
					savefuel_cars(playerid, house_carid[playerid][0]);

					BizInfo[BizEnter{playerid}][bPribil] += veh_price/100*30;
					BizInfo[BizEnter{playerid}][bBank] += veh_price/100*30;
					if(BizInfo[BizEnter{playerid}][bBank] > 10000000) BizInfo[BizEnter{playerid}][bBank] = 10000000;
					UpdateBusinessData(BizEnter{playerid}, "bPribil", BizInfo[BizEnter{playerid}][bPribil]);
					UpdateBusinessData(BizEnter{playerid}, "bBank", BizInfo[BizEnter{playerid}][bBank]);

					if(pData[playerid][pFlat] != -1) SCM(playerid, 0x6AB1FFFF, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √Ø√∞√®√Æ√°√∞√•√≤¬∏√≠ √® √¢ √°√´√®√¶√†√©√∏√•√• √¢√∞√•√¨√ø √°√≥√§√•√≤ √§√Æ√±√≤√†√¢√´√•√≠ √≠√† √±√≤√Æ√ø√≠√™√≥");
					else SCM(playerid, 0x6AB1FFFF, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √Ø√∞√®√Æ√°√∞√•√≤¬∏√≠ √® √¢ √°√´√®√¶√†√©√∏√•√• √¢√∞√•√¨√ø √°√≥√§√•√≤ √§√Æ√±√≤√†√¢√´√•√≠ √™ √Æ√≤√•√´√æ");

					return 1;
				}
				new text_car_1[140], text_car_2[140], text_car_3[140];
				if(pData[playerid][pCar][0] != 0) format(text_car_1, 140, "(√¨√†√∞√™√†: %s)", VehicleNames[pData[playerid][pCar][0] - 400]);
				else strcat(text_car_1, "{ff4d4d}(√Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤)");
				if(pData[playerid][pCar][1] != 0) format(text_car_2, 140, "(√¨√†√∞√™√†: %s)", VehicleNames[pData[playerid][pCar][1] - 400]);
				else strcat(text_car_2, "{ff4d4d}(√Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤)");
				if(pData[playerid][pCar][2] != 0) format(text_car_3, 140, "(√¨√†√∞√™√†: %s)", VehicleNames[pData[playerid][pCar][2] - 400]);
				else strcat(text_car_3, "{ff4d4d}(√Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤)");
				format(string, 270, "{FFCD00}√è√∞√®√¨√•√∑√†√≠√®√•: √Ø√∞√•√§√ª√§√≥√π√®√© √≤√∞√†√≠√±√Ø√Æ√∞√≤ √°√≥√§√•√≤ √†√≠√≠√≥√´√®√∞√Æ√¢√†√≠\n"CWHITE"√è√•√∞√¢√ª√© "CCYAN"%s\n"CWHITE"√Ç√≤√Æ√∞√Æ√© "CCYAN"%s\n"CWHITE"√í√∞√•√≤√®√© "CCYAN"%s",text_car_1,text_car_2,text_car_3);
				return SPD(playerid, 4806, DIALOG_STYLE_TABLIST_HEADERS, "{005b96}√Ç√ª√°√•√∞√®√≤√• √±√´√Æ√≤ √§√´√ø √≠√Æ√¢√Æ√£√Æ √≤√∞√†√≠√±√Ø√Æ√∞√≤√†", string, "Seleccione", "Siguiente");
			}
		}
	}
	case 4806: {
		if(!response) return SPD(playerid, 4856, DIALOG_STYLE_LIST, "{005b96}√Ç√ª√°√•√∞√®√≤√• √§√•√©√±√≤√¢√®√•", "√è√Æ√±√¨√Æ√≤√∞√•√≤√º √≠√† √†√¢√≤√Æ√¨√Æ√°√®√´√º\n√ä√≥√Ø√®√≤√º √†√¢√≤√Æ√¨√Æ√°√®√´√º", "Seleccione", "Siguiente");
		new sc_str[50], veh_id = GetPVarInt(playerid, "vehshop_vehid"), veh_price = GetPVarInt(playerid, "vehshop_vehprice");
		DeletePVar(playerid, "vehshop_vehid");
		DeletePVar(playerid, "vehshop_vehprice");
		pData[playerid][Un_CarType][listitem] = 0;
		pData[playerid][pCar][listitem] = veh_id;
		pData[playerid][p_car_cash][listitem] = veh_price;
		pData[playerid][t_wheel][listitem] = 0;
		pData[playerid][t_hydraulics][listitem] = 0;
		pData[playerid][t_neon_num][listitem] = -1;
		pData[playerid][t_stereo][listitem] = 0;
		pData[playerid][t_paintjob][listitem] = -1;
		pData[playerid][t_color_1][listitem] = -1;
		pData[playerid][t_color_2][listitem] = -1;
		strmid(num_plate[playerid][listitem], "None", 0, strlen("None"), 255);
		switch(listitem) {
			case 0: {
				strmid(p_car_charact_1[playerid], "0, 0, 0, 0, 0, 0, 0", 0, 20, 255);
				UpdatePlayerDataEx(playerid, "p_car_charact_1", "0, 0, 0, 0, 0, 0, 0");
				UpdatePlayerData(playerid, "p_car_cash_1", pData[playerid][p_car_cash][listitem]);
				UpdatePlayerData(playerid, "pCar", pData[playerid][pCar][listitem]);
				UpdatePlayerData(playerid, "Un_CarType_1", 0);
				UpdatePlayerData(playerid, "t_neon_num_1", -1);
				UpdatePlayerData(playerid, "t_wheel_car_1", 0);
				UpdatePlayerData(playerid, "t_hydraulics_car_1", 0);
				UpdatePlayerData(playerid, "t_stereo_car_1", 0);
				UpdatePlayerData(playerid, "t_paintjob_car_1", -1);
				UpdatePlayerData(playerid, "t_color_1_1", -1);
				UpdatePlayerData(playerid, "t_color_2_1", -1);
				UpdatePlayerDataEx(playerid, "num_plate_1", "None");
			}
			case 1: {
				strmid(p_car_charact_2[playerid], "0, 0, 0, 0, 0, 0, 0", 0, 20, 255);
				UpdatePlayerDataEx(playerid, "p_car_charact_2", "0, 0, 0, 0, 0, 0, 0");
				UpdatePlayerData(playerid, "p_car_cash_2", pData[playerid][p_car_cash][listitem]);
				UpdatePlayerData(playerid, "pCar2", pData[playerid][pCar][listitem]);
				UpdatePlayerData(playerid, "Un_CarType_2", 0);
				UpdatePlayerData(playerid, "t_neon_num_2", -1);
				UpdatePlayerData(playerid, "t_wheel_car_2", 0);
				UpdatePlayerData(playerid, "t_hydraulics_car_2", 0);
				UpdatePlayerData(playerid, "t_stereo_car_2", 0);
				UpdatePlayerData(playerid, "t_paintjob_car_2", -1);
				UpdatePlayerData(playerid, "t_color_1_2", -1);
				UpdatePlayerData(playerid, "t_color_2_2", -1);
				UpdatePlayerDataEx(playerid, "num_plate_2", "None");
			}
			case 2: {
				strmid(p_car_charact_3[playerid], "0, 0, 0, 0, 0, 0, 0", 0, 20, 255);
				UpdatePlayerDataEx(playerid, "p_car_charact_3", "0, 0, 0, 0, 0, 0, 0");
				UpdatePlayerData(playerid, "p_car_cash_3", pData[playerid][p_car_cash][listitem]);
				UpdatePlayerData(playerid, "pCar3", pData[playerid][pCar][listitem]);
				UpdatePlayerData(playerid, "Un_CarType_3", 0);
				UpdatePlayerData(playerid, "t_neon_num_3", -1);
				UpdatePlayerData(playerid, "t_wheel_car_3", 0);
				UpdatePlayerData(playerid, "t_hydraulics_car_3", 0);
				UpdatePlayerData(playerid, "t_stereo_car_3", 0);
				UpdatePlayerData(playerid, "t_paintjob_car_3", -1);
				UpdatePlayerData(playerid, "t_color_1_3", -1);
				UpdatePlayerData(playerid, "t_color_2_3", -1);
				UpdatePlayerDataEx(playerid, "num_plate_3", "None");
			}
		}
		Hook_GivePlayerMoney(playerid, -veh_price);
		format(sc_str, 50, "~r~-%d$", veh_price);
		GameTextForPlayer(playerid, sc_str, 3000, 1);
		if(house_carid[playerid][listitem] != 0) {
			DestroyVehicle(house_carid[playerid][listitem]);
			house_carid[playerid][listitem] = 0;
		}
		LoadCarPlayer(playerid, listitem + 1);
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		VehInfo[house_carid[playerid][listitem]][vFuel] = 100.0;
		savefuel_cars(playerid, house_carid[playerid][listitem]);

		BizInfo[BizEnter{playerid}][bPribil] += veh_price/100*30;
		BizInfo[BizEnter{playerid}][bBank] += veh_price/100*30;
		if(BizInfo[BizEnter{playerid}][bBank] > 10000000) BizInfo[BizEnter{playerid}][bBank] = 10000000;
		UpdateBusinessData(BizEnter{playerid}, "bPribil", BizInfo[BizEnter{playerid}][bPribil]);
		UpdateBusinessData(BizEnter{playerid}, "bBank", BizInfo[BizEnter{playerid}][bBank]);

		SCM(playerid, 0x6AB1FFFF, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √Ø√∞√®√Æ√°√∞√•√≤¬∏√≠ √® √¢ √°√´√®√¶√†√©√∏√•√• √¢√∞√•√¨√ø √°√≥√§√•√≤ √§√Æ√±√≤√†√¢√´√•√≠ √™ √Ç√†√∏√•√¨√≥ √§√Æ√¨√≥");
	}
	case 632: {
		if(!response) return 1;
		new veh_id = GetPlayerVehicleID(playerid), price_tune = 0, num_car, str_gmt[30], tune_query[270];
		if(house_carid[playerid][0] && veh_id == house_carid[playerid][0]) num_car = 0;
		else if(house_carid[playerid][1] && veh_id == house_carid[playerid][1]) num_car = 1;
		else if(house_carid[playerid][2] && veh_id == house_carid[playerid][2]) num_car = 2;
		if(TUNE_wheel_component[playerid] != 0) {
			pData[playerid][t_wheel][num_car] = TUNE_wheel_component[playerid];
			TUNE_wheel_component[playerid] = 0;
			price_tune += 4000;
		}
		if(TUNE_hydraulics[playerid]) {
			pData[playerid][t_hydraulics][num_car] = 1;
			TUNE_hydraulics[playerid] = false;
			price_tune += 2500;
		}
		if(TUNE_stereo[playerid]) {
			pData[playerid][t_stereo][num_car] = 1;
			TUNE_stereo[playerid] = false;
			price_tune += 2000;
		}
		if(TUNE_paintjob[playerid] != -1) {
			pData[playerid][t_paintjob][num_car] = TUNE_paintjob[playerid];
			TUNE_paintjob[playerid] = -1;
			price_tune += 6500;
		}
		if(TUNE_carcolor_1[playerid] != -1 || TUNE_carcolor_2[playerid] != -1) {
			pData[playerid][t_color_1][num_car] = TUNE_carcolor_1[playerid];
			pData[playerid][t_color_2][num_car] = TUNE_carcolor_2[playerid];
			TUNE_carcolor_1[playerid] = -1;
			TUNE_carcolor_2[playerid] = -1;
			price_tune += 400;
		}
		if(TUNE_neon_component[playerid] != -1) {
			pData[playerid][t_neon_num][num_car] = TUNE_neon_component[playerid];
			TUNE_neon_component[playerid] = -1;
			price_tune += 20000;
		}
		if(house_carid[playerid][0] && veh_id == house_carid[playerid][0]) 
			mysql_format(mysql_Handle, tune_query, sizeof(tune_query), "UPDATE `accounts` SET `t_neon_num_1` = %d, `t_wheel_car_1` = %d, `t_hydraulics_car_1` = %d, `t_stereo_car_1` = %d, `t_paintjob_car_1` = %d, `t_color_1_1` = %d, `t_color_2_1` = %d WHERE `Name` = '%s'", pData[playerid][t_neon_num][num_car], pData[playerid][t_wheel][num_car], pData[playerid][t_hydraulics][num_car], pData[playerid][t_stereo][num_car], pData[playerid][t_paintjob][num_car], pData[playerid][t_color_1][num_car], pData[playerid][t_color_2][num_car], GetName(playerid));
		else if(house_carid[playerid][1] && veh_id == house_carid[playerid][1]) 
			mysql_format(mysql_Handle, tune_query, sizeof(tune_query), "UPDATE `accounts` SET `t_neon_num_2` = %d, `t_wheel_car_2` = %d, `t_hydraulics_car_2` = %d, `t_stereo_car_2` = %d, `t_paintjob_car_2` = %d, `t_color_1_2` = %d, `t_color_2_2` = %d WHERE `Name` = '%s'", pData[playerid][t_neon_num][num_car], pData[playerid][t_wheel][num_car], pData[playerid][t_hydraulics][num_car], pData[playerid][t_stereo][num_car], pData[playerid][t_paintjob][num_car], pData[playerid][t_color_1][num_car], pData[playerid][t_color_2][num_car], GetName(playerid));
		else if(house_carid[playerid][2] && veh_id == house_carid[playerid][2]) 
			mysql_format(mysql_Handle, tune_query, sizeof(tune_query), "UPDATE `accounts` SET `t_neon_num_3` = %d, `t_wheel_car_3` = %d, `t_hydraulics_car_3` = %d, `t_stereo_car_3` = %d, `t_paintjob_car_3` = %d, `t_color_1_3` = %d, `t_color_2_3` = %d WHERE `Name` = '%s'", pData[playerid][t_neon_num][num_car], pData[playerid][t_wheel][num_car], pData[playerid][t_hydraulics][num_car], pData[playerid][t_stereo][num_car], pData[playerid][t_paintjob][num_car], pData[playerid][t_color_1][num_car], pData[playerid][t_color_2][num_car], GetName(playerid));
		mysql_tquery(mysql_Handle, tune_query);
		SCMF(playerid, COLOR_LITEBLUE, "√Ç√ª √≥√±√Ø√•√∏√≠√Æ √±√Æ√µ√∞√†√≠√®√´√® √≤√æ√≠√®√≠√£ √≠√† √±√¢√Æ¬∏√¨ √≤√∞√†√≠√±√Ø√Æ√∞√≤√• √ß√† {339900}%d$", price_tune);
		Hook_GivePlayerMoney(playerid, -price_tune);
		BizInfo[70][bPribil] += 600;
		BizInfo[70][bBank] += 600;
		if(BizInfo[70][bBank] > 10000000) BizInfo[70][bBank] = 10000000;
		UpdateBusinessData(70, "bPribil", BizInfo[70][bPribil]);
		UpdateBusinessData(70, "bBank", BizInfo[70][bBank]);
		format(str_gmt, sizeof(str_gmt), "~r~-%d$", price_tune);
		GameTextForPlayer(playerid, str_gmt, 3000, 1);
		in_menutune[playerid] = false;
		TogglePlayerControllable(playerid, 1);
		CancelSelectTextDraw(playerid);
		SetCameraBehindPlayer(playerid);
		for(new i = 0; i < 55; i ++) TextDrawHideForPlayer(playerid, tune_td[i]);
	}
	case 692: {
		if(!response) return 1;
		if(pData[playerid][unikauto_Have] != 0 || pData[playerid][autoHave] != 0 || pData[playerid][pBusiness] != -1 || pData[playerid][pFilling] != -1 || pData[playerid][food_have] != 0 || pData[playerid][prok_have] != 0 || pData[playerid][kiosk_have] != 0) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≥√¶√• √•√±√≤√º √°√®√ß√≠√•√± √®√´√® √Ä√á√ë");
		new i = GetPVarInt(playerid, "buybiz_id");
		DeletePVar(playerid, "buybiz_id");
		if(strcmp( BizInfo[ i ][ bOwner ], "None", true )) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ω√≤√Æ√£√Æ √°√®√ß√≠√•√±√† √≥√¶√• √•√±√≤√º √¢√´√†√§√•√´√•√∂");
		if(pData[playerid][pCash] < BizInfo[ i ][ bPrice ]) return SCM( playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Ø√Æ√™√≥√Ø√™√® S√≠√≠√≠√Æ√£√Æ √°√®√ß√≠√•√±√†" );
		strmid(BizInfo[i][bOwner], pData[playerid][pName], 0, strlen(pData[playerid][pName]), 255);
		Hook_GivePlayerMoney(playerid, -BizInfo[i][bPrice]);
		pData[playerid][pBusiness] = BizInfo[i][bID];
		UpdatePlayerData(playerid, "pPbiskey", BizInfo[i][bID]);
		SCMF(playerid,-1,"√Ç√ª √Ø√∞√®√Æ√°√∞√•√´√® √°√®√ß√≠√•√± √ß√† "CCYAN"%i$",BizInfo[i][bPrice]);
		SCM(playerid, -1, "Usar√≤√• "CBLUE"/business "CWHITE"√∑√≤√Æ√°√ª √Æ√≤√™√∞√ª√≤√º √¨√•√≠√æ √≥√Ø√∞√†√¢√´√•√≠√®√ø √°√®√ß√≠√•√±√Æ√¨");
		GameTextForPlayer(playerid, "~b~WELCOME TO ~n~~w~ NEW BUSINESS", 3000, 1);
		BizInfo[i][bPay] = 3;
		BizInfo[i][bProdOrder] = 0; BizInfo[i][bProdOrderPrice] = 0;
		SCM(playerid, COLOR_ORANGE, "√ç√• √ß√†√°√≥√§√º√≤√• √Æ√Ø√´√†√≤√®√≤√º √•√£√Æ √¢ √±√Ø√•√∂√®√†√´√º√≠√Æ√¨ √∞√†√ß√§√•√´√• √°√†√≠√™√†");
		BizInfo[i][bPribil] = 0;
		BizInfo[i][bBank] = 0;
		UpdateBusinessData(BizEnter{playerid}, "bPribil", 0);
		UpdateBusinessData(BizEnter{playerid}, "bBank", 0);
		UpdateBizInfo ( pData[playerid][pBusiness] );
		SaveBusiness(pData[playerid][pBusiness]);
	}
	case 911: {
		if(!response) return 1;
		if(listitem == 10) {
			new rem_query[90], org_id = pData[playerid][pLeader];
			for(new i = 0; i < 10; i ++) 
				format(new_rank_name[org_id - 1][i], 32, rank_name[org_id - 1][i]);
			mysql_format(mysql_Handle, rem_query, sizeof(rem_query), "UPDATE `name_ranks` SET `rank_name` = `def_rank_name` WHERE `org_id` = %d", org_id);
			mysql_tquery(mysql_Handle, rem_query);
			SCM(playerid, 0x99FF00FF, "√ë√≤√†√≠S√≠√∞√≤√≠√ª√• √≠√†√ß√¢√†√≠√®√ø √∞√†√≠√£√Æ√¢ √≥√±√Ø√•√∏√≠√Æ √≥√±√≤√†√≠√Æ√¢√´√•√≠√ª");
		}
		else {
			SetPVarInt(playerid, "rankname_id", listitem + 1);
			SPD(playerid, 912, DIALOG_STYLE_INPUT, ""CBLUE"√ç√†√ß√¢√†√≠√®√ø √∞√†√≠√£√Æ√¢", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√†√ß√¢√†√≠√®√• √∞√†√≠√£√† √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
		}
	}
	case 912: {
		if(!response) {
			callcmd::rankname(playerid);
			return DeletePVar(playerid, "rankname_id");
		}
		new s_query[144], org_id = pData[playerid][pLeader], rank_id = GetPVarInt(playerid, "rankname_id");
		DeletePVar(playerid, "rankname_id");
		if(!strlen(inputtext)) {
			SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§√®√≤√• √≠√†√ß√¢√†√≠√®√• √∞√†√≠√£√† √¢ √Ø√Æ√´√• √≠√®√¶√•");
			return SPD(playerid, 912, DIALOG_STYLE_INPUT, ""CBLUE"√ç√†√ß√¢√†√≠√®√ø √∞√†√≠√£√Æ√¢", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√†√ß√¢√†√≠√®√• √∞√†√≠√£√† √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
		}
		for(new i = 0; i < strlen(inputtext); i ++) {
		    if(inputtext[i] >= '0' && inputtext[i] <= '9') {
		    	SCM(playerid, COLOR_LIGHTGREY, "√ç√†√ß√¢√†√≠√®√• √∞√†√≠√£√† √≠√• √§√Æ√´√¶√≠√Æ √±√Æ√§√•√∞√¶√†√≤√º √∂√®√¥√∞√ª");
				return SPD(playerid, 912, DIALOG_STYLE_INPUT, ""CBLUE"√ç√†√ß√¢√†√≠√®√ø √∞√†√≠√£√Æ√¢", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√†√ß√¢√†√≠√®√• √∞√†√≠√£√† √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
		    }
		}
		if(strlen(inputtext) > 32) {
			SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§√•√≠√Æ √±√´√®√∏√™√Æ√¨ √§√´√®√≠√≠√Æ√• √≠√†√ß√¢√†√≠√®√•");
			return SPD(playerid, 912, DIALOG_STYLE_INPUT, ""CBLUE"√ç√†√ß√¢√†√≠√®√ø √∞√†√≠√£√Æ√¢", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√†√ß√¢√†√≠√®√• √∞√†√≠√£√† √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
		}
		format(new_rank_name[org_id - 1][rank_id - 1], 32, inputtext);
		mysql_format(mysql_Handle, s_query, sizeof(s_query), "UPDATE `name_ranks` SET `rank_name` = '%s' WHERE `org_id` = %d AND `rank_id` = %d", inputtext, org_id, rank_id);
		mysql_tquery(mysql_Handle, s_query);
		SCM(playerid, COLOR_MAIN, "√ç√†√ß√¢√†√≠√®√• √∞√†√≠√£√† √≥√±√Ø√•√∏√≠√Æ √®√ß√¨√•√≠√•√≠√Æ");
		callcmd::rankname(playerid);
	}
	case 887: {
		if(!response) return DeletePVar(playerid, "num_filling");
		new fill_id = GetPVarInt(playerid, "num_filling");
		DeletePVar(playerid, "num_filling");
		if(Filling[fill_id][fBenz] < 15) return SCM(playerid, COLOR_LIGHTGREY, "√ç√† √Ω√≤√Æ√© √Ä√á√ë √ß√†√™√Æ√≠√∑√®√´√®√±√º √™√†√≠√®√±√≤√∞√ª √± √≤√Æ√Ø√´√®√¢√Æ√¨");
		if(pData[playerid][pCash] < 1500) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √§√•√≠√•√£ √§√´√ø √Ø√Æ√™√≥√Ø√™√® √™√†√≠√®√±√≤√∞√ª");
		Hook_GivePlayerMoney(playerid, -1500);
		Filling[fill_id][fBankMoney] += 1500;
		UpdateFuelInfo(playerid, "fBankMoney", Filling[fill_id][fBankMoney]);
		Filling[fill_id][fBenz] -= 15;
		UpdateFuelInfo(playerid, "fBenz", Filling[fill_id][fBenz]);
		fuelcan_buyed[playerid] = true;
		update_3dtext_fill(fill_id);
		SetPlayerAttachedObject(playerid, 2, 1650, 6, 0.120999, 0.017999, 0.069000, 0.000000, -100.400024, 0.000000, 1.000000, 1.000000, 1.000000, 0, 0);
		GameTextForPlayer(playerid, "~r~-1500$", 3000, 1);
		AddItemToInventory(playerid, 1, 7);
		SCM(playerid, COLOR_MAIN, "√Ç√ª √™√≥√Ø√®√´√® √™√†√≠√®√±√≤√∞√≥ √± "CORANGE"15 √´√®√≤√∞√†√¨√® "CMAIN"√≤√Æ√Ø√´√®√¢√†");
		SCM(playerid, COLOR_MAIN, "√ë√ø√§√º√≤√• √¢ √†√¢√≤√Æ√¨√Æ√°√®√´√º, √™√Æ√≤√Æ√∞√ª√© √µ√Æ√≤√®√≤√• √ß√†√Ø√∞√†√¢√®√≤√º √® √¢√¢√•√§√®√≤√• "CYELLOW"/canfilling");
	}
	case 188: {
		if(!response) return 1;
		if(!listitem) {
			new mes[300], text_car_1[140], text_car_2[140], text_car_3[140];
			if(pData[playerid][pCar][0] != 0) format(text_car_1, 140, "(√¨√†√∞√™√†: %s)", VehicleNames[pData[playerid][pCar][0] - 400]);
			else strcat(text_car_1, "{ff4d4d}(√Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤)");
			if(pData[playerid][pCar][1] != 0) format(text_car_2, 140, "(√¨√†√∞√™√†: %s)", VehicleNames[pData[playerid][pCar][1] - 400]);
			else strcat(text_car_2, "{ff4d4d}(√Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤)");
			if(pData[playerid][pCar][2] != 0) format(text_car_3, 140, "(√¨√†√∞√™√†: %s)", VehicleNames[pData[playerid][pCar][2] - 400]);
			else strcat(text_car_3, "{ff4d4d}(√Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤)");
			format(mes, sizeof(mes), ""CLITEBLUE"√Ç√ª√°√•√∞√®√≤√• √≤√∞√†√≠√±√Ø√Æ√∞√≤ √®√ß √±√Ø√®√±√™√† √≠√®√¶√•:\n"CWHITE"√è√•√∞√¢√ª√© "CMAIN"%s\n"CWHITE"√Ç√≤√Æ√∞√Æ√© "CMAIN"%s\n"CWHITE"√í√∞√•√≤√®√© "CMAIN"%s", text_car_1, text_car_2, text_car_3);
			return SPD(playerid, 188, DIALOG_STYLE_LIST, ""CPALEGREEN"√ç√Æ√¨√•√∞√† √≠√† √≤√∞√†√≠√±√Ø√Æ√∞√≤", mes, "Seleccione", "Cerrar");
		}
		if(pData[playerid][pCar][listitem - 1] == 0) return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± √Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤ √†√¢√≤√Æ√¨√Æ√°√®√´√º √Ø√Æ√§ S√≠√≠√≠√ª√¨ √≠√Æ√¨√•√∞√Æ√¨");
		SetPVarInt(playerid, "plate_num_car", listitem - 1);
		SPD(playerid, 199, DIALOG_STYLE_INPUT, ""CPALEGREEN"√ç√Æ√¨√•√∞√† √≠√† √≤√∞√†√≠√±√Ø√Æ√∞√≤", ""CWHITE"√Ç√¢√•√§√®√≤√• √¢ √Ø√Æ√´√• √≠√®√¶√• √≤√•√™√±√≤ √§√´√ø √≠√Æ√¢√Æ√£√Æ √≠√Æ√¨√•√∞√†\n√Ç√¢√•√§√®√≤√• "CERROR"- "CWHITE"√•√±√´√® √µ√Æ√≤√®√≤√• √≥√°√∞√†√≤√º √≠√Æ√¨√•√∞\n"CWHITE"√Ñ√Æ√Ø√≥√±√≤√®√¨√†√ø √§√´√®√≠√† √≤√•√™√±√≤√† √§√Æ 15 √±√®√¨√¢√Æ√´√Æ√¢", "√ì√±√≤√†√≠√Æ√¢√®√≤√º", "Cerrar");
	}
	case 199: {
		if(!response) return DeletePVar(playerid, "plate_num_car");
		new len = strlen(inputtext);
		if(!len) return SPD(playerid, 199, DIALOG_STYLE_INPUT, ""CPALEGREEN"√ç√Æ√¨√•√∞√† √≠√† √≤√∞√†√≠√±√Ø√Æ√∞√≤", ""CWHITE"√Ç√¢√•√§√®√≤√• √¢ √Ø√Æ√´√• √≠√®√¶√• √≤√•√™√±√≤ √§√´√ø √≠√Æ√¢√Æ√£√Æ √≠√Æ√¨√•√∞√†\n√Ç√¢√•√§√®√≤√• "CERROR"- "CWHITE"√•√±√´√® √µ√Æ√≤√®√≤√• √≥√°√∞√†√≤√º √≠√Æ√¨√•√∞\n"CWHITE"√Ñ√Æ√Ø√≥√±√≤√®√¨√†√ø √§√´√®√≠√† √≤√•√™√±√≤√† √§√Æ 15 √±√®√¨√¢√Æ√´√Æ√¢", "√ì√±√≤√†√≠√Æ√¢√®√≤√º", "Cerrar");
		if(len > 15) {
			SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§¬∏√≠ √±√´√®√∏√™√Æ√¨ √§√´√®√≠√≠√ª√© √≤√•√™√±√≤ √§√´√ø √≠√Æ√¨√•√∞√†");
			return SPD(playerid, 199, DIALOG_STYLE_INPUT, ""CPALEGREEN"√ç√Æ√¨√•√∞√† √≠√† √≤√∞√†√≠√±√Ø√Æ√∞√≤", ""CWHITE"√Ç√¢√•√§√®√≤√• √¢ √Ø√Æ√´√• √≠√®√¶√• √≤√•√™√±√≤ √§√´√ø √≠√Æ√¢√Æ√£√Æ √≠√Æ√¨√•√∞√†\n√Ç√¢√•√§√®√≤√• "CERROR"- "CWHITE"√•√±√´√® √µ√Æ√≤√®√≤√• √≥√°√∞√†√≤√º √≠√Æ√¨√•√∞\n"CWHITE"√Ñ√Æ√Ø√≥√±√≤√®√¨√†√ø √§√´√®√≠√† √≤√•√™√±√≤√† √§√Æ 15 √±√®√¨√¢√Æ√´√Æ√¢", "√ì√±√≤√†√≠√Æ√¢√®√≤√º", "Cerrar");
		}
		new car_num = GetPVarInt(playerid, "plate_num_car");
		if(!strcmp(inputtext, "-")) {
			strmid(num_plate[playerid][car_num], "None", 0, strlen("None"), 255);
			switch(car_num) {
				case 0: UpdatePlayerDataEx(playerid, "num_plate_1", "None");
				case 1: UpdatePlayerDataEx(playerid, "num_plate_2", "None");
				case 2: UpdatePlayerDataEx(playerid, "num_plate_3", "None");
			}
			return SCM(playerid, COLOR_ERROR, "√ç√† √Ω√≤√Æ√≤ √†√¢√≤√Æ√¨√Æ√°√®√´√º √¢√Æ√ß√¢√∞√†√π√•√≠√ª √±√≤√†√≠S√≠√∞√≤√≠√ª√• √≠√Æ√¨√•√∞√†");
		}
		if(pData[playerid][pCar][car_num] == 0) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [043]");
		new str_numset[170], set_price = len * 200;
		SetPVarInt(playerid, "price_plate", set_price);
		SetPVarString(playerid, "plate_text", inputtext);
		format(str_numset, sizeof(str_numset), ""CWHITE"√ë√≤√Æ√®√¨√Æ√±√≤√º √≥√±√≤√†√≠√Æ√¢√™√® √≠√Æ√¨√•√∞√† "CGREY"\"%s\" "CWHITE"√±√Æ√±√≤√†√¢√®√≤ "CMAIN"%d$"CWHITE".\nQuieres √Ø√∞√Æ√§√Æ√´√¶√®√≤√º √® √≥√±√≤√†√≠√Æ√¢√®√≤√º √≠√Æ√¨√•√∞?", inputtext, set_price);
		SPD(playerid, 311, DIALOG_STYLE_MSGBOX, ""CLITEBLUE"√ì√±√≤√†√≠√Æ√¢√™√† √≠√Æ√¨√•√∞√†", str_numset, "S√≠", "No");
	}
	case 311: {
		if(!response) {
			DeletePVar(playerid, "plate_num_car");
			DeletePVar(playerid, "price_plate");
			return DeletePVar(playerid, "plate_text");
		}
		new num_car = GetPVarInt(playerid, "plate_num_car"), 
		price_set = GetPVarInt(playerid, "price_plate"), 
		text_plate[16], 
		gtext[20];
		GetPVarString(playerid, "plate_text", text_plate, sizeof(text_plate));
		DeletePVar(playerid, "plate_num_car");
		DeletePVar(playerid, "price_plate");
		DeletePVar(playerid, "plate_text");
		if(pData[playerid][pCar][num_car] == 0) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [044]");
		if(pData[playerid][pCash] < price_set) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √§√•√≠√•√£ √§√´√ø √Ø√Æ√™√≥√Ø√™√®");
		Hook_GivePlayerMoney(playerid, -price_set);
		format(gtext, sizeof(gtext), "~r~-%d$", price_set);
		GameTextForPlayer(playerid, gtext, 3000, 1);
		PlayerPlaySound(playerid, 17001, 0.0, 0.0, 0.0);
		format(num_plate[playerid][num_car], 16, text_plate);
		switch(num_car) {
			case 0: UpdatePlayerDataEx(playerid, "num_plate_1", text_plate);
			case 1: UpdatePlayerDataEx(playerid, "num_plate_2", text_plate);
			case 2: UpdatePlayerDataEx(playerid, "num_plate_3", text_plate);
		}
		if(house_carid[playerid][num_car]) SetVehicleNumberPlate(house_carid[playerid][num_car], text_plate);
		SCM(playerid, COLOR_MAIN, "√ç√Æ√¢√ª√• √≠√Æ√¨√•√∞√† √≥√±√Ø√•√∏√≠√Æ √≥√±√≤√†√≠√Æ√¢√´√•√≠√ª √≠√† √Ç√†√∏ √†√¢√≤√Æ√¨√Æ√°√®√´√º");
	}
	case 755: {
		if(!response) return 1;
		new hid = pData[playerid][pHouse];
		if(hid == -1) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [045]");
		if(!IsPlayerInRangeOfPoint(playerid, 35.0, HouseInfo[hid][hEnter][0], HouseInfo[hid][hEnter][1], HouseInfo[hid][hEnter][2])) 
			return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [046]");
		new Float: pos[3], Float: angle, string_query[160];
		if(IsPlayerInAnyVehicle(playerid))
		{
			new car = GetPlayerVehicleID(playerid);
			GetVehiclePos(car, pos[0], pos[1], pos[2]);
			GetVehicleZAngle(car, angle);
		}
		else
		{
			GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
			GetPlayerFacingAngle(playerid, angle);
		}
		HouseInfo[hid][hCar][0] = pos[0];
		HouseInfo[hid][hCar][1] = pos[1];
		HouseInfo[hid][hCar][2] = pos[2];
		HouseInfo[hid][hCar][3] = angle;
		mysql_format(mysql_Handle, string_query, sizeof(string_query), "UPDATE `house` SET `hCarx` = %f, `hCary` = %f, `hCarz` = %f, `hCarc` = %f WHERE `hID` = %d", pos[0], pos[1], pos[2], angle, hid);
		mysql_tquery(mysql_Handle, string_query);

		SCM(playerid, COLOR_YELLOW, "√å√•√±√≤√Æ √Ø√Æ√ø√¢√´√•√≠√®√ø √†√¢√≤√Æ√¨√Æ√°√®√´√ø √≥√±√Ø√•√∏√≠√Æ √®√ß√¨√•√≠√•√≠√Æ");
		SCM(playerid, COLOR_YELLOW, "√í√•√Ø√•√∞√º √Ø√∞√® √±√´√•√§√≥√æ√π√®√µ √∞√•√±√Ø√†√¢√≠√†√µ √Æ√≠ √°√≥√§√•√≤ √Ø√Æ√ø√¢√´√ø√≤√º√±√ø √¢ √Ω√≤√Æ√¨ √¨√•√±√≤√•");
	}
	case 885: {
		if(!response) return 1;
		if(!bilet_tune[playerid]) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √°√ª√≤√º √ß√†√Ø√®√±√†√≠√ª √≠√† √Æ√°√±√´√≥√¶√®√¢√†√≠√®√• √¢ √≤√æ√≠√®√≠√£-√†√≤√•√´√º√•");
		new veh_id = GetPlayerVehicleID(playerid);
		if(GetVehicleDistanceFromPoint(veh_id, 1271.8901,-1251.1680,13.6460) > 35.0) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √≤√æ√≠√®√≠√£-√†√≤√•√´√º√•");
		if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √ß√† √∞√≥√´¬∏√¨ √±√¢√Æ√•√£√Æ √†√¢√≤√Æ");
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √ß√† √∞√≥√´¬∏√¨ √±√¢√Æ√•√£√Æ √†√¢√≤√Æ");
		if(house_carid[playerid][0] && veh_id != house_carid[playerid][0]) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √ß√† √∞√≥√´¬∏√¨ √±√¢√Æ√•√£√Æ √†√¢√≤√Æ");
		if(house_carid[playerid][1] && veh_id != house_carid[playerid][1]) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √ß√† √∞√≥√´¬∏√¨ √±√¢√Æ√•√£√Æ √†√¢√≤√Æ");
		if(house_carid[playerid][2] && veh_id != house_carid[playerid][2]) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √ß√† √∞√≥√´¬∏√¨ √±√¢√Æ√•√£√Æ √†√¢√≤√Æ");
		if(IsABoat(veh_id) || IsAPlane(veh_id) || IsABike(veh_id)) return SCM(playerid, COLOR_LIGHTGREY, "√è√∞√Æ√±√¨√Æ√≤√∞ √®√´√® √®√ß√¨√•√≠√•√≠√®√• √µ√†√∞√†√™√≤√•√∞√®√±√≤√®√™ √Ω√≤√Æ√£√Æ √≤√∞√†√≠√±√Ø√Æ√∞√≤√† √≠√•√§√Æ√±√≤√≥√Ø√≠√ª");
		new fmt_str[450];
		switch(listitem) {
			case 0: {
				SCM(playerid, 0xBF8040FF, "√é√≤√¢√•√∑√†√•√≤ √ß√† √¨√†√™√±√®√¨√†√´√º√≠√≥√æ √±√™√Æ√∞√Æ√±√≤√º √†√¢√≤√Æ√¨√Æ√°√®√´√ø √® √≥√±√™√Æ√∞√•√≠√®√•");
				callcmd::power(playerid);
			}
			case 1: {
				switch(veh_charact[veh_id][0]) {
					case 0: format(fmt_str, 320, " \t√á√†√¢√Æ√§√±√™√®√• √§√•√≤√†√´√®\t\t\t\t"CBLUE"√ì√±√≤√†√≠√Æ√¢√´√•√≠√ª\n"CWHITE"[1]\t√ì√´√≥√∑√∏√•√≠√≠√ª√© √¢√Ø√≥√±√™√≠√Æ√© √™√Æ√´√´√•√™√≤√Æ√∞\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 5000$\n"CWHITE"[2]\t√î√®√´√º√≤√∞ √± √Ø√Æ√≠√®√¶√•√≠√≠√ª√¨ √±√Æ√Ø√∞√Æ√≤√®√¢√´√•√≠√®√•√¨ √≥√∞. 1\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 10000$\n"CWHITE"[3]\t√î√®√´√º√≤√∞ √± √Ø√Æ√≠√®√¶√•√≠√≠√ª√¨ √±√Æ√Ø√∞√Æ√≤√®√¢√´√•√≠√®√•√¨ √≥√∞. 2\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 20000$");
					case 1: format(fmt_str, 320, " \t√á√†√¢√Æ√§√±√™√®√• √§√•√≤√†√´√®\t\t\t\t"CORANGE"√Ç√•√∞√≠√≥√≤√º √ß√† 2000$\n"CWHITE"[1]\t√ì√´√≥√∑√∏√•√≠√≠√ª√© √¢√Ø√≥√±√™√≠√Æ√© √™√Æ√´√´√•√™√≤√Æ√∞\t\t"CBLUE"√ì√±√≤√†√≠√Æ√¢√´√•√≠\n"CWHITE"[2]\t√î√®√´√º√≤√∞ √± √Ø√Æ√≠√®√¶√•√≠√≠√ª√¨ √±√Æ√Ø√∞√Æ√≤√®√¢√´√•√≠√®√•√¨ √≥√∞. 1\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 10000$\n"CWHITE"[3]\t√î√®√´√º√≤√∞ √± √Ø√Æ√≠√®√¶√•√≠√≠√ª√¨ √±√Æ√Ø√∞√Æ√≤√®√¢√´√•√≠√®√•√¨ √≥√∞. 2\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 20000$");
					case 2: format(fmt_str, 320, " \t√á√†√¢√Æ√§√±√™√®√• √§√•√≤√†√´√®\t\t\t\t"CORANGE"√Ç√•√∞√≠√≥√≤√º √ß√† 2000$\n"CWHITE"[1]\t√ì√´√≥√∑√∏√•√≠√≠√ª√© √¢√Ø√≥√±√™√≠√Æ√© √™√Æ√´√´√•√™√≤√Æ√∞\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 5000$\n"CWHITE"[2]\t√î√®√´√º√≤√∞ √± √Ø√Æ√≠√®√¶√•√≠√≠√ª√¨ √±√Æ√Ø√∞√Æ√≤√®√¢√´√•√≠√®√•√¨ √≥√∞. 1\t"CBLUE"√ì√±√≤√†√≠√Æ√¢√´√•√≠\n"CWHITE"[3]\t√î√®√´√º√≤√∞ √± √Ø√Æ√≠√®√¶√•√≠√≠√ª√¨ √±√Æ√Ø√∞√Æ√≤√®√¢√´√•√≠√®√•√¨ √≥√∞. 2\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 20000$");
					case 3: format(fmt_str, 320, " \t√á√†√¢√Æ√§√±√™√®√• √§√•√≤√†√´√®\t\t\t\t"CORANGE"√Ç√•√∞√≠√≥√≤√º √ß√† 2000$\n"CWHITE"[1]\t√ì√´√≥√∑√∏√•√≠√≠√ª√© √¢√Ø√≥√±√™√≠√Æ√© √™√Æ√´√´√•√™√≤√Æ√∞\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 5000$\n"CWHITE"[2]\t√î√®√´√º√≤√∞ √± √Ø√Æ√≠√®√¶√•√≠√≠√ª√¨ √±√Æ√Ø√∞√Æ√≤√®√¢√´√•√≠√®√•√¨ √≥√∞. 1\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 10000$\n"CWHITE"[3]\t√î√®√´√º√≤√∞ √± √Ø√Æ√≠√®√¶√•√≠√≠√ª√¨ √±√Æ√Ø√∞√Æ√≤√®√¢√´√•√≠√®√•√¨ √≥√∞. 2\t"CBLUE"√ì√±√≤√†√≠√Æ√¢√´√•√≠");
				}
				SPD(playerid, 9000, DIALOG_STYLE_LIST, "{FFCD00}√ë√®√±√≤√•√¨√† √¢√Ø√≥√±√™√† √§√¢√®√£√†√≤√•√´√ø", fmt_str, "√ì√±√≤√†√≠√Æ√¢√®√≤√º", "Siguiente");
			}
			case 2: {
				switch(veh_charact[veh_id][1]) {
					case 0: format(fmt_str, 260, " \t√á√†√¢√Æ√§√±√™√®√• √§√•√≤√†√´√®\t\t"CBLUE"√ì√±√≤√†√≠√Æ√¢√´√•√≠√ª\n"CWHITE"[1]\t√ìS√≠√´√•√≠√®√• √™√†√≤√†√´√®√ß√†√≤√Æ√∞√†\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 5000$\n"CWHITE"[2]\t√ë√Ø√Æ√∞√≤√®√¢√≠√ª√© √£√´√≥√∏√®√≤√•√´√º\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 10000$\n"CWHITE"[3]\t√è√∞√ø√¨√Æ√≤√Æ√∑√≠√ª√© √¢√ª√Ø√≥√±√™\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 20000$");
					case 1: format(fmt_str, 260, " \t√á√†√¢√Æ√§√±√™√®√• √§√•√≤√†√´√®\t\t"CORANGE"√Ç√•√∞√≠√≥√≤√º √ß√† 2000$\n"CWHITE"[1]\t√ìS√≠√´√•√≠√®√• √™√†√≤√†√´√®√ß√†√≤√Æ√∞√†\t"CBLUE"√ì√±√≤√†√≠√Æ√¢√´√•√≠√Æ\n"CWHITE"[2]\t√ë√Ø√Æ√∞√≤√®√¢√≠√ª√© √£√´√≥√∏√®√≤√•√´√º\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 10000$\n"CWHITE"[3]\t√è√∞√ø√¨√Æ√≤√Æ√∑√≠√ª√© √¢√ª√Ø√≥√±√™\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 20000$");
					case 2: format(fmt_str, 260, " \t√á√†√¢√Æ√§√±√™√®√• √§√•√≤√†√´√®\t\t"CORANGE"√Ç√•√∞√≠√≥√≤√º √ß√† 2000$\n"CWHITE"[1]\t√ìS√≠√´√•√≠√®√• √™√†√≤√†√´√®√ß√†√≤√Æ√∞√†\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 5000$\n"CWHITE"[2]\t√ë√Ø√Æ√∞√≤√®√¢√≠√ª√© √£√´√≥√∏√®√≤√•√´√º\t"CBLUE"√ì√±√≤√†√≠√Æ√¢√´√•√≠\n"CWHITE"[3]\t√è√∞√ø√¨√Æ√≤√Æ√∑√≠√ª√© √¢√ª√Ø√≥√±√™\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 20000$");
					case 3: format(fmt_str, 260, " \t√á√†√¢√Æ√§√±√™√®√• √§√•√≤√†√´√®\t\t"CORANGE"√Ç√•√∞√≠√≥√≤√º √ß√† 2000$\n"CWHITE"[1]\t√ìS√≠√´√•√≠√®√• √™√†√≤√†√´√®√ß√†√≤√Æ√∞√†\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 5000$\n"CWHITE"[2]\t√ë√Ø√Æ√∞√≤√®√¢√≠√ª√© √£√´√≥√∏√®√≤√•√´√º\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 10000$\n"CWHITE"[3]\t√è√∞√ø√¨√Æ√≤√Æ√∑√≠√ª√© √¢√ª√Ø√≥√±√™\t\t"CBLUE"√ì√±√≤√†√≠√Æ√¢√´√•√≠");
				}
				SPD(playerid, 9001, DIALOG_STYLE_LIST, "{FFCD00}√Ç√ª√Ø√≥√±√™ √§√¢√®√£√†√≤√•√´√ø", fmt_str, "√ì√±√≤√†√≠√Æ√¢√®√≤√º", "Siguiente");
			}
			case 3: {
				switch(veh_charact[veh_id][2]) {
					case 0: format(fmt_str, 320, " \t√á√†√¢√Æ√§√±√™√®√• √§√•√≤√†√´√®\t\t"CBLUE"√ì√±√≤√†√≠√Æ√¢√´√•√≠√ª\n"CWHITE"[1]\t√ä√Æ√¨√Ø√∞√•√±√±√Æ√∞\t\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 5000$\n"CWHITE"[2]\t√í√≥√∞√°√Æ√≠√†√£No√†√≤√•√´√º √≥√∞√Æ√¢√≠√ø 1\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 10000$\n"CWHITE"[3]\t√í√≥√∞√°√Æ√≠√†√£No√†√≤√•√´√º √≥√∞√Æ√¢√≠√ø 2\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 20000$\n"CWHITE"[4]\t√Å√®-√≤√≥√∞√°√Æ √™√Æ√¨√Ø√´√•√™√≤\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 30000$");
					case 1: format(fmt_str, 320, " \t√á√†√¢√Æ√§√±√™√®√• √§√•√≤√†√´√®\t\t"CORANGE"√Ç√•√∞√≠√≥√≤√º √ß√† 2000$\n"CWHITE"[1]\t√ä√Æ√¨√Ø√∞√•√±√±√Æ√∞\t\t\t"CBLUE"√ì√±√≤√†√≠√Æ√¢√´√•√≠\n"CWHITE"[2]\t√í√≥√∞√°√Æ√≠√†√£No√†√≤√•√´√º √≥√∞√Æ√¢√≠√ø 1\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 10000$\n"CWHITE"[3]\t√í√≥√∞√°√Æ√≠√†√£No√†√≤√•√´√º √≥√∞√Æ√¢√≠√ø 2\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 20000$\n"CWHITE"[4]\t√Å√®-√≤√≥√∞√°√Æ √™√Æ√¨√Ø√´√•√™√≤\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 30000$");
					case 2: format(fmt_str, 320, " \t√á√†√¢√Æ√§√±√™√®√• √§√•√≤√†√´√®\t\t"CORANGE"√Ç√•√∞√≠√≥√≤√º √ß√† 2000$\n"CWHITE"[1]\t√ä√Æ√¨√Ø√∞√•√±√±√Æ√∞\t\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 5000$\n"CWHITE"[2]\t√í√≥√∞√°√Æ√≠√†√£No√†√≤√•√´√º √≥√∞√Æ√¢√≠√ø 1\t"CBLUE"√ì√±√≤√†√≠√Æ√¢√´√•√≠\n"CWHITE"[3]\t√í√≥√∞√°√Æ√≠√†√£No√†√≤√•√´√º √≥√∞√Æ√¢√≠√ø 2\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 20000$\n"CWHITE"[4]\t√Å√®-√≤√≥√∞√°√Æ √™√Æ√¨√Ø√´√•√™√≤\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 30000$");
					case 3: format(fmt_str, 320, " \t√á√†√¢√Æ√§√±√™√®√• √§√•√≤√†√´√®\t\t"CORANGE"√Ç√•√∞√≠√≥√≤√º √ß√† 2000$\n"CWHITE"[1]\t√ä√Æ√¨√Ø√∞√•√±√±√Æ√∞\t\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 5000$\n"CWHITE"[2]\t√í√≥√∞√°√Æ√≠√†√£No√†√≤√•√´√º √≥√∞√Æ√¢√≠√ø 1\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 10000$\n"CWHITE"[3]\t√í√≥√∞√°√Æ√≠√†√£No√†√≤√•√´√º √≥√∞√Æ√¢√≠√ø 2\t"CBLUE"√ì√±√≤√†√≠√Æ√¢√´√•√≠\n"CWHITE"[4]\t√Å√®-√≤√≥√∞√°√Æ √™√Æ√¨√Ø√´√•√™√≤\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 30000$");
					case 4: format(fmt_str, 320, " \t√á√†√¢√Æ√§√±√™√®√• √§√•√≤√†√´√®\t\t"CORANGE"√Ç√•√∞√≠√≥√≤√º √ß√† 2000$\n"CWHITE"[1]\t√ä√Æ√¨√Ø√∞√•√±√±√Æ√∞\t\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 5000$\n"CWHITE"[2]\t√í√≥√∞√°√Æ√≠√†√£No√†√≤√•√´√º √≥√∞√Æ√¢√≠√ø 1\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 10000$\n"CWHITE"[3]\t√í√≥√∞√°√Æ√≠√†√£No√†√≤√•√´√º √≥√∞√Æ√¢√≠√ø 2\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 20000$\n"CWHITE"[4]\t√Å√®-√≤√≥√∞√°√Æ √™√Æ√¨√Ø√´√•√™√≤\t\t"CBLUE"√ì√±√≤√†√≠√Æ√¢√´√•√≠");
				}
				SPD(playerid, 9002, DIALOG_STYLE_LIST, "{FFCD00}√ç√†√§√§√≥√¢ √§√¢√®√£√†√≤√•√´√ø", fmt_str, "√ì√±√≤√†√≠√Æ√¢√®√≤√º", "Siguiente");
			}
			case 4: {
				switch(veh_charact[veh_id][3]) {
					case 0: format(fmt_str, 370, " \t√á√†√¢√Æ√§√±√™√®√• √§√•√≤√†√´√®\t\t\t\t"CBLUE"√ì√±√≤√†√≠√Æ√¢√´√•√≠√ª\n"CWHITE"[1]\t√ê√†√§√®√†√≤√Æ√∞ √Ø√Æ√¢√ª√∏√•√≠√≠√Æ√© √¨√Æ√π√≠√Æ√±√≤√®\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 5000$\n"CWHITE"[2]\t√à√≠√≤√•√∞√™√≥√´√´√•√∞ √≥√∞√Æ√¢√≠√ø 1\t\t\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 10000$\n"CWHITE"[3]\t√à√≠√≤√•√∞√™√≥√´√´√•√∞ √≥√∞√Æ√¢√≠√ø 2\t\t\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 20000$\n"CWHITE"[4]\t√Ç√ª√±√Æ√™√Æ√Ø√∞√Æ√®√ß√¢√Æ√§√®√≤√•√´√º√≠√ª√© √®√≠√≤√•√∞√™√≥√´√´√•√∞\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 30000$");
					case 1: format(fmt_str, 370, " \t√á√†√¢√Æ√§√±√™√®√• √§√•√≤√†√´√®\t\t\t\t"CORANGE"√Ç√•√∞√≠√≥√≤√º √ß√† 2000$\n"CWHITE"[1]\t√ê√†√§√®√†√≤√Æ√∞ √Ø√Æ√¢√ª√∏√•√≠√≠√Æ√© √¨√Æ√π√≠√Æ√±√≤√®\t\t"CBLUE"√ì√±√≤√†√≠√Æ√¢√´√•√≠\n"CWHITE"[2]\t√à√≠√≤√•√∞√™√≥√´√´√•√∞ √≥√∞√Æ√¢√≠√ø 1\t\t\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 10000$\n"CWHITE"[3]\t√à√≠√≤√•√∞√™√≥√´√´√•√∞ √≥√∞√Æ√¢√≠√ø 2\t\t\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 20000$\n"CWHITE"[4]\t√Ç√ª√±√Æ√™√Æ√Ø√∞√Æ√®√ß√¢√Æ√§√®√≤√•√´√º√≠√ª√© √®√≠√≤√•√∞√™√≥√´√´√•√∞\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 30000$");
					case 2: format(fmt_str, 370, " \t√á√†√¢√Æ√§√±√™√®√• √§√•√≤√†√´√®\t\t\t\t"CORANGE"√Ç√•√∞√≠√≥√≤√º √ß√† 2000$\n"CWHITE"[1]\t√ê√†√§√®√†√≤√Æ√∞ √Ø√Æ√¢√ª√∏√•√≠√≠√Æ√© √¨√Æ√π√≠√Æ√±√≤√®\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 5000$\n"CWHITE"[2]\t√à√≠√≤√•√∞√™√≥√´√´√•√∞ √≥√∞√Æ√¢√≠√ø 1\t\t\t\t"CBLUE"√ì√±√≤√†√≠√Æ√¢√´√•√≠\n"CWHITE"[3]\t√à√≠√≤√•√∞√™√≥√´√´√•√∞ √≥√∞√Æ√¢√≠√ø 2\t\t\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 20000$\n"CWHITE"[4]\t√Ç√ª√±√Æ√™√Æ√Ø√∞√Æ√®√ß√¢√Æ√§√®√≤√•√´√º√≠√ª√© √®√≠√≤√•√∞√™√≥√´√´√•√∞\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 30000$");
					case 3: format(fmt_str, 370, " \t√á√†√¢√Æ√§√±√™√®√• √§√•√≤√†√´√®\t\t\t\t"CORANGE"√Ç√•√∞√≠√≥√≤√º √ß√† 2000$\n"CWHITE"[1]\t√ê√†√§√®√†√≤√Æ√∞ √Ø√Æ√¢√ª√∏√•√≠√≠√Æ√© √¨√Æ√π√≠√Æ√±√≤√®\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 5000$\n"CWHITE"[2]\t√à√≠√≤√•√∞√™√≥√´√´√•√∞ √≥√∞√Æ√¢√≠√ø 1\t\t\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 10000$\n"CWHITE"[3]\t√à√≠√≤√•√∞√™√≥√´√´√•√∞ √≥√∞√Æ√¢√≠√ø 2\t\t\t\t"CBLUE"√ì√±√≤√†√≠√Æ√¢√´√•√≠\n"CWHITE"[4]\t√Ç√ª√±√Æ√™√Æ√Ø√∞√Æ√®√ß√¢√Æ√§√®√≤√•√´√º√≠√ª√© √®√≠√≤√•√∞√™√≥√´√´√•√∞\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 30000$");
					case 4: format(fmt_str, 370, " \t√á√†√¢√Æ√§√±√™√®√• √§√•√≤√†√´√®\t\t\t\t"CORANGE"√Ç√•√∞√≠√≥√≤√º √ß√† 2000$\n"CWHITE"[1]\t√ê√†√§√®√†√≤√Æ√∞ √Ø√Æ√¢√ª√∏√•√≠√≠√Æ√© √¨√Æ√π√≠√Æ√±√≤√®\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 5000$\n"CWHITE"[2]\t√à√≠√≤√•√∞√™√≥√´√´√•√∞ √≥√∞√Æ√¢√≠√ø 1\t\t\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 10000$\n"CWHITE"[3]\t√à√≠√≤√•√∞√™√≥√´√´√•√∞ √≥√∞√Æ√¢√≠√ø 2\t\t\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 20000$\n"CWHITE"[4]\t√Ç√ª√±√Æ√™√Æ√Ø√∞√Æ√®√ß√¢√Æ√§√®√≤√•√´√º√≠√ª√© √®√≠√≤√•√∞√™√≥√´√´√•√∞\t"CBLUE"√ì√±√≤√†√≠√Æ√¢√´√•√≠");
				}
				SPD(playerid, 9003, DIALOG_STYLE_LIST, "{FFCD00}√é√µ√´√†√¶√§√•√≠√®√• √§√¢√®√£√†√≤√•√´√ø", fmt_str, "√ì√±√≤√†√≠√Æ√¢√®√≤√º", "Siguiente");
			}
			case 5: callcmd::power(playerid);
			case 6: {
				SCM(playerid, 0xBF8040FF, "√é√≤√¢√•√∑√†√æ√≤ √ß√† √Ω√¥√¥√•√™√≤√®√¢√≠√Æ√±√≤√º √® √±√™√Æ√∞√Æ√±√≤√º √≤√Æ√∞√¨√Æ√¶√•√≠√®√ø √†√¢√≤√Æ√¨√Æ√°√®√´√ø");
				callcmd::power(playerid);
			}
			case 7: {
				switch(veh_charact[veh_id][4]) {
					case 0: format(fmt_str, 450, " \t√á√†√¢√Æ√§√±√™√®√• √§√•√≤√†√´√®\t\t\t\t\t"CBLUE"√ì√±√≤√†√≠√Æ√¢√´√•√≠√ª\n"CWHITE"[1]\t√Ñ√®√±√™√Æ√¢√ª√• √≤√Æ√∞√¨√Æ√ß√† √≥√∞√Æ√¢√≠√ø 1\t\t\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 5000$\n"CWHITE"[2]\t√Ñ√®√±√™√Æ√¢√ª√• √≤√Æ√∞√¨√Æ√ß√† √≥√∞√Æ√¢√≠√ø 2\t\t\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 10000$\n"CWHITE"[3]\t√Ç√•√≠√≤√®√´√®√∞√≥√•√¨√ª√• √§√®√±√™√Æ√¢√ª√• √≤√Æ√∞√¨√Æ√ß√†\t\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 20000$\n"CWHITE"[4]\t√Ç√•√≠√≤√®√´√®√∞√≥√•√¨√ª√• √™√•√∞√†√¨√®√∑√•√±√™√®√• √§√®√±√™√Æ√¢√ª√• √≤√Æ√∞√¨√Æ√ß√†\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 30000$\n"CWHITE"[5]\t√ä√†√∞√°√Æ√≠√Æ√¢√ª√• √§√®√±√™√Æ√¢√ª√• √≤√Æ√∞√¨√Æ√ß√†\t\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 37000$");
					case 1: format(fmt_str, 450, " \t√á√†√¢√Æ√§√±√™√®√• √§√•√≤√†√´√®\t\t\t\t\t"CORANGE"√Ç√•√∞√≠√≥√≤√º √ß√† 2000$\n"CWHITE"[1]\t√Ñ√®√±√™√Æ√¢√ª√• √≤√Æ√∞√¨√Æ√ß√† √≥√∞√Æ√¢√≠√ø 1\t\t\t\t"CBLUE"√ì√±√≤√†√≠√Æ√¢√´√•√≠√ª\n"CWHITE"[2]\t√Ñ√®√±√™√Æ√¢√ª√• √≤√Æ√∞√¨√Æ√ß√† √≥√∞√Æ√¢√≠√ø 2\t\t\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 10000$\n"CWHITE"[3]\t√Ç√•√≠√≤√®√´√®√∞√≥√•√¨√ª√• √§√®√±√™√Æ√¢√ª√• √≤√Æ√∞√¨√Æ√ß√†\t\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 20000$\n"CWHITE"[4]\t√Ç√•√≠√≤√®√´√®√∞√≥√•√¨√ª√• √™√•√∞√†√¨√®√∑√•√±√™√®√• √§√®√±√™√Æ√¢√ª√• √≤√Æ√∞√¨√Æ√ß√†\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 30000$\n"CWHITE"[5]\t√ä√†√∞√°√Æ√≠√Æ√¢√ª√• √§√®√±√™√Æ√¢√ª√• √≤√Æ√∞√¨√Æ√ß√†\t\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 37000$");
					case 2: format(fmt_str, 450, " \t√á√†√¢√Æ√§√±√™√®√• √§√•√≤√†√´√®\t\t\t\t\t"CORANGE"√Ç√•√∞√≠√≥√≤√º √ß√† 2000$\n"CWHITE"[1]\t√Ñ√®√±√™√Æ√¢√ª√• √≤√Æ√∞√¨√Æ√ß√† √≥√∞√Æ√¢√≠√ø 1\t\t\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 5000$\n"CWHITE"[2]\t√Ñ√®√±√™√Æ√¢√ª√• √≤√Æ√∞√¨√Æ√ß√† √≥√∞√Æ√¢√≠√ø 2\t\t\t\t"CBLUE"√ì√±√≤√†√≠√Æ√¢√´√•√≠√ª\n"CWHITE"[3]\t√Ç√•√≠√≤√®√´√®√∞√≥√•√¨√ª√• √§√®√±√™√Æ√¢√ª√• √≤√Æ√∞√¨√Æ√ß√†\t\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 20000$\n"CWHITE"[4]\t√Ç√•√≠√≤√®√´√®√∞√≥√•√¨√ª√• √™√•√∞√†√¨√®√∑√•√±√™√®√• √§√®√±√™√Æ√¢√ª√• √≤√Æ√∞√¨√Æ√ß√†\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 30000$\n"CWHITE"[5]\t√ä√†√∞√°√Æ√≠√Æ√¢√ª√• √§√®√±√™√Æ√¢√ª√• √≤√Æ√∞√¨√Æ√ß√†\t\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 37000$");
					case 3: format(fmt_str, 450, " \t√á√†√¢√Æ√§√±√™√®√• √§√•√≤√†√´√®\t\t\t\t\t"CORANGE"√Ç√•√∞√≠√≥√≤√º √ß√† 2000$\n"CWHITE"[1]\t√Ñ√®√±√™√Æ√¢√ª√• √≤√Æ√∞√¨√Æ√ß√† √≥√∞√Æ√¢√≠√ø 1\t\t\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 5000$\n"CWHITE"[2]\t√Ñ√®√±√™√Æ√¢√ª√• √≤√Æ√∞√¨√Æ√ß√† √≥√∞√Æ√¢√≠√ø 2\t\t\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 10000$\n"CWHITE"[3]\t√Ç√•√≠√≤√®√´√®√∞√≥√•√¨√ª√• √§√®√±√™√Æ√¢√ª√• √≤√Æ√∞√¨√Æ√ß√†\t\t\t"CBLUE"√ì√±√≤√†√≠√Æ√¢√´√•√≠√ª\n"CWHITE"[4]\t√Ç√•√≠√≤√®√´√®√∞√≥√•√¨√ª√• √™√•√∞√†√¨√®√∑√•√±√™√®√• √§√®√±√™√Æ√¢√ª√• √≤√Æ√∞√¨√Æ√ß√†\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 30000$\n"CWHITE"[5]\t√ä√†√∞√°√Æ√≠√Æ√¢√ª√• √§√®√±√™√Æ√¢√ª√• √≤√Æ√∞√¨√Æ√ß√†\t\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 37000$");
					case 4: format(fmt_str, 450, " \t√á√†√¢√Æ√§√±√™√®√• √§√•√≤√†√´√®\t\t\t\t\t"CORANGE"√Ç√•√∞√≠√≥√≤√º √ß√† 2000$\n"CWHITE"[1]\t√Ñ√®√±√™√Æ√¢√ª√• √≤√Æ√∞√¨√Æ√ß√† √≥√∞√Æ√¢√≠√ø 1\t\t\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 5000$\n"CWHITE"[2]\t√Ñ√®√±√™√Æ√¢√ª√• √≤√Æ√∞√¨√Æ√ß√† √≥√∞√Æ√¢√≠√ø 2\t\t\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 10000$\n"CWHITE"[3]\t√Ç√•√≠√≤√®√´√®√∞√≥√•√¨√ª√• √§√®√±√™√Æ√¢√ª√• √≤√Æ√∞√¨√Æ√ß√†\t\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 20000$\n"CWHITE"[4]\t√Ç√•√≠√≤√®√´√®√∞√≥√•√¨√ª√• √™√•√∞√†√¨√®√∑√•√±√™√®√• √§√®√±√™√Æ√¢√ª√• √≤√Æ√∞√¨√Æ√ß√†\t"CBLUE"√ì√±√≤√†√≠√Æ√¢√´√•√≠√ª\n"CWHITE"[5]\t√ä√†√∞√°√Æ√≠√Æ√¢√ª√• √§√®√±√™√Æ√¢√ª√• √≤√Æ√∞√¨√Æ√ß√†\t\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 37000$");
					case 5: format(fmt_str, 450, " \t√á√†√¢√Æ√§√±√™√®√• √§√•√≤√†√´√®\t\t\t\t\t"CORANGE"√Ç√•√∞√≠√≥√≤√º √ß√† 2000$\n"CWHITE"[1]\t√Ñ√®√±√™√Æ√¢√ª√• √≤√Æ√∞√¨√Æ√ß√† √≥√∞√Æ√¢√≠√ø 1\t\t\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 5000$\n"CWHITE"[2]\t√Ñ√®√±√™√Æ√¢√ª√• √≤√Æ√∞√¨√Æ√ß√† √≥√∞√Æ√¢√≠√ø 2\t\t\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 10000$\n"CWHITE"[3]\t√Ç√•√≠√≤√®√´√®√∞√≥√•√¨√ª√• √§√®√±√™√Æ√¢√ª√• √≤√Æ√∞√¨√Æ√ß√†\t\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 20000$\n"CWHITE"[4]\t√Ç√•√≠√≤√®√´√®√∞√≥√•√¨√ª√• √™√•√∞√†√¨√®√∑√•√±√™√®√• √§√®√±√™√Æ√¢√ª√• √≤√Æ√∞√¨√Æ√ß√†\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 30000$\n"CWHITE"[5]\t√ä√†√∞√°√Æ√≠√Æ√¢√ª√• √§√®√±√™√Æ√¢√ª√• √≤√Æ√∞√¨√Æ√ß√†\t\t\t"CBLUE"√ì√±√≤√†√≠√Æ√¢√´√•√≠√ª");
				}
				SPD(playerid, 9004, DIALOG_STYLE_LIST, "{FFCD00}√í√Æ√∞√¨√Æ√ß√≠√ª√• √§√®√±√™√®", fmt_str, "√ì√±√≤√†√≠√Æ√¢√®√≤√º", "Siguiente");
			}
			case 8: {
				switch(veh_charact[veh_id][5]) {
					case 0: format(fmt_str, 330, " \t√á√†√¢√Æ√§√±√™√®√• √§√•√≤√†√´√®\t\t"CBLUE"√ì√±√≤√†√≠√Æ√¢√´√•√≠√ª\n"CWHITE"[1]\t√ì√¢√•√´√®√∑√•√≠√≠√ª√• √±√≥√Ø√Ø√Æ√∞√≤√†\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 5000$\n"CWHITE"[2]\t4-√µ √Ø√Æ√∞√∏√≠√•√¢√ª√• √±√≥√Ø√Ø√Æ√∞√≤√†\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 10000$\n"CWHITE"[3]\t8-√¨√® √Ø√Æ√∞√∏√≠√•√¢√ª√• √±√≥√Ø√Ø√Æ√∞√≤√†\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 20000$\n"CWHITE"[4]\t12-√≤√® √Ø√Æ√∞√∏√≠√•√¢√ª√• √±√≥√Ø√Ø√Æ√∞√≤√†\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 30000$");
					case 1: format(fmt_str, 330, " \t√á√†√¢√Æ√§√±√™√®√• √§√•√≤√†√´√®\t\t"CORANGE"√Ç√•√∞√≠√≥√≤√º √ß√† 2000$\n"CWHITE"[1]\t√ì√¢√•√´√®√∑√•√≠√≠√ª√• √±√≥√Ø√Ø√Æ√∞√≤√†\t"CBLUE"√ì√±√≤√†√≠√Æ√¢√´√•√≠√ª\n"CWHITE"[2]\t4-√µ √Ø√Æ√∞√∏√≠√•√¢√ª√• √±√≥√Ø√Ø√Æ√∞√≤√†\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 10000$\n"CWHITE"[3]\t8-√¨√® √Ø√Æ√∞√∏√≠√•√¢√ª√• √±√≥√Ø√Ø√Æ√∞√≤√†\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 20000$\n"CWHITE"[4]\t12-√≤√® √Ø√Æ√∞√∏√≠√•√¢√ª√• √±√≥√Ø√Ø√Æ√∞√≤√†\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 30000$");
					case 2: format(fmt_str, 330, " \t√á√†√¢√Æ√§√±√™√®√• √§√•√≤√†√´√®\t\t"CORANGE"√Ç√•√∞√≠√≥√≤√º √ß√† 2000$\n"CWHITE"[1]\t√ì√¢√•√´√®√∑√•√≠√≠√ª√• √±√≥√Ø√Ø√Æ√∞√≤√†\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 5000$\n"CWHITE"[2]\t4-√µ √Ø√Æ√∞√∏√≠√•√¢√ª√• √±√≥√Ø√Ø√Æ√∞√≤√†\t"CBLUE"√ì√±√≤√†√≠√Æ√¢√´√•√≠√ª\n"CWHITE"[3]\t8-√¨√® √Ø√Æ√∞√∏√≠√•√¢√ª√• √±√≥√Ø√Ø√Æ√∞√≤√†\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 20000$\n"CWHITE"[4]\t12-√≤√® √Ø√Æ√∞√∏√≠√•√¢√ª√• √±√≥√Ø√Ø√Æ√∞√≤√†\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 30000$");
					case 3: format(fmt_str, 330, " \t√á√†√¢√Æ√§√±√™√®√• √§√•√≤√†√´√®\t\t"CORANGE"√Ç√•√∞√≠√≥√≤√º √ß√† 2000$\n"CWHITE"[1]\t√ì√¢√•√´√®√∑√•√≠√≠√ª√• √±√≥√Ø√Ø√Æ√∞√≤√†\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 5000$\n"CWHITE"[2]\t4-√µ √Ø√Æ√∞√∏√≠√•√¢√ª√• √±√≥√Ø√Ø√Æ√∞√≤√†\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 10000$\n"CWHITE"[3]\t8-√¨√® √Ø√Æ√∞√∏√≠√•√¢√ª√• √±√≥√Ø√Ø√Æ√∞√≤√†\t"CBLUE"√ì√±√≤√†√≠√Æ√¢√´√•√≠√ª\n"CWHITE"[4]\t12-√≤√® √Ø√Æ√∞√∏√≠√•√¢√ª√• √±√≥√Ø√Ø√Æ√∞√≤√†\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 30000$");
					case 4: format(fmt_str, 330, " \t√á√†√¢√Æ√§√±√™√®√• √§√•√≤√†√´√®\t\t"CORANGE"√Ç√•√∞√≠√≥√≤√º √ß√† 2000$\n"CWHITE"[1]\t√ì√¢√•√´√®√∑√•√≠√≠√ª√• √±√≥√Ø√Ø√Æ√∞√≤√†\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 5000$\n"CWHITE"[2]\t4-√µ √Ø√Æ√∞√∏√≠√•√¢√ª√• √±√≥√Ø√Ø√Æ√∞√≤√†\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 10000$\n"CWHITE"[3]\t8-√¨√® √Ø√Æ√∞√∏√≠√•√¢√ª√• √±√≥√Ø√Ø√Æ√∞√≤√†\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 20000$\n"CWHITE"[4]\t12-√≤√® √Ø√Æ√∞√∏√≠√•√¢√ª√• √±√≥√Ø√Ø√Æ√∞√≤√†\t"CBLUE"√ì√±√≤√†√≠√Æ√¢√´√•√≠√ª");
				}
				SPD(playerid, 9005, DIALOG_STYLE_LIST, "{FFCD00}√í√Æ√∞√¨√Æ√ß√≠√ª√• √±√≥√Ø√Ø√Æ√∞√≤√†", fmt_str, "√ì√±√≤√†√≠√Æ√¢√®√≤√º", "Siguiente");
			}
			case 9: {
				switch(veh_charact[veh_id][6]) {
					case 0: format(fmt_str, 280, " \t√á√†√¢√Æ√§√±√™√®√• √§√•√≤√†√´√®\t\t\t"CBLUE"√ì√±√≤√†√≠√Æ√¢√´√•√≠√ª\n"CWHITE"[1]\t√ì√´√≥√∑√∏√•√≠√≠√ª√• √Æ√∞√£√†√≠√®√∑√•√±√™√®√• √™√Æ√´√Æ√§√™√®\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 5000$\n"CWHITE"[2]\t√è√Æ√´√≥√¨√•√≤√†√´√´√®√∑√•√±√™√®√• √™√Æ√´√Æ√§√™√®\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 10000$\n"CWHITE"[3]\t√ä√•√∞√†√¨√®√∑√•√±√™√®√• √™√Æ√´√Æ√§√™√®\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 20000$");
					case 1: format(fmt_str, 280, " \t√á√†√¢√Æ√§√±√™√®√• √§√•√≤√†√´√®\t\t\t"CORANGE"√Ç√•√∞√≠√≥√≤√º √ß√† 2000$\n"CWHITE"[1]\t√ì√´√≥√∑√∏√•√≠√≠√ª√• √Æ√∞√£√†√≠√®√∑√•√±√™√®√• √™√Æ√´√Æ√§√™√®\t"CBLUE"√ì√±√≤√†√≠√Æ√¢√´√•√≠√ª\n"CWHITE"[2]\t√è√Æ√´√≥√¨√•√≤√†√´√´√®√∑√•√±√™√®√• √™√Æ√´√Æ√§√™√®\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 10000$\n"CWHITE"[3]\t√ä√•√∞√†√¨√®√∑√•√±√™√®√• √™√Æ√´√Æ√§√™√®\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 20000$");
					case 2: format(fmt_str, 280, " \t√á√†√¢√Æ√§√±√™√®√• √§√•√≤√†√´√®\t\t\t"CORANGE"√Ç√•√∞√≠√≥√≤√º √ß√† 2000$\n"CWHITE"[1]\t√ì√´√≥√∑√∏√•√≠√≠√ª√• √Æ√∞√£√†√≠√®√∑√•√±√™√®√• √™√Æ√´√Æ√§√™√®\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 5000$\n"CWHITE"[2]\t√è√Æ√´√≥√¨√•√≤√†√´√´√®√∑√•√±√™√®√• √™√Æ√´√Æ√§√™√®\t\t"CBLUE"√ì√±√≤√†√≠√Æ√¢√´√•√≠√ª\n"CWHITE"[3]\t√ä√•√∞√†√¨√®√∑√•√±√™√®√• √™√Æ√´√Æ√§√™√®\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 20000$");
					case 3: format(fmt_str, 280, " \t√á√†√¢√Æ√§√±√™√®√• √§√•√≤√†√´√®\t\t\t"CORANGE"√Ç√•√∞√≠√≥√≤√º √ß√† 2000$\n"CWHITE"[1]\t√ì√´√≥√∑√∏√•√≠√≠√ª√• √Æ√∞√£√†√≠√®√∑√•√±√™√®√• √™√Æ√´√Æ√§√™√®\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 5000$\n"CWHITE"[2]\t√è√Æ√´√≥√¨√•√≤√†√´√´√®√∑√•√±√™√®√• √™√Æ√´√Æ√§√™√®\t\t{00cc00}√ä√≥√Ø√®√≤√º √ß√† 10000$\n"CWHITE"[3]\t√ä√•√∞√†√¨√®√∑√•√±√™√®√• √™√Æ√´√Æ√§√™√®\t\t"CBLUE"√ì√±√≤√†√≠√Æ√¢√´√•√≠√ª");
				}
				SPD(playerid, 9006, DIALOG_STYLE_LIST, "{FFCD00}√í√Æ√∞√¨√Æ√ß√≠√ª√• √™√Æ√´√Æ√§√™√®", fmt_str, "√ì√±√≤√†√≠√Æ√¢√®√≤√º", "Siguiente");
			}
		}
	}
	case 9000..9006: {
		if(!response) return callcmd::power(playerid);
		new veh_id = GetPlayerVehicleID(playerid);
		if(veh_id == 65535 || GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [076]");
		new component_num = 0;
		switch(dialogid) {
			case 9000: component_num = 0;
			case 9001: component_num = 1;
			case 9002: component_num = 2;
			case 9003: component_num = 3;
			case 9004: component_num = 4;
			case 9005: component_num = 5;
			case 9006: component_num = 6;
		}
		if(veh_charact[veh_id][component_num] == listitem) {
			callcmd::power(playerid);
			return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª√°√∞√†√≠√≠√ª√• √§√•√≤√†√´√® √≥√¶√• √±√≤√Æ√ø√≤ √≠√† √Ω√≤√Æ√¨ √†√¢√≤√Æ√¨√Æ√°√®√´√•");
		}
		new price;
		switch(listitem) {
			case 0: price = 2000;
			case 1: price = 5000;
			case 2: price = 10000;
			case 3: price = 20000;
			case 4: price = 30000;
			case 5: price = 37000;
		}
		if(pData[playerid][pCash] < price) {
			callcmd::power(playerid);
			return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √§√•√≠√•√£ √§√´√ø √Æ√Ø√´√†√≤√ª √±√≤√Æ√®√¨√Æ√±√≤√® √Ω√≤√®√µ √§√•√≤√†√´√•√©");
		}
		new fmt_gmt[12];
		format(fmt_gmt, sizeof(fmt_gmt), "~r~-%d$", price);
		GameTextForPlayer(playerid, fmt_gmt, 3000, 1);
		Hook_GivePlayerMoney(playerid, -price);
		BizInfo[70][bPribil] += price;
		BizInfo[70][bBank] += price;
		if(BizInfo[70][bBank] > 10000000) BizInfo[70][bBank] = 10000000;
		UpdateBusinessData(70, "bPribil", BizInfo[70][bPribil]);
		UpdateBusinessData(70, "bBank", BizInfo[70][bBank]);
		veh_charact[veh_id][component_num] = listitem;
		if(set_boost_by_adm[veh_id]) set_boost_by_adm[veh_id] = false;
		if(set_brake_by_adm[veh_id]) set_brake_by_adm[veh_id] = false;
		new num_car;
		if(house_carid[playerid][0] && veh_id == house_carid[playerid][0]) num_car = 0;
		else if(house_carid[playerid][1] && veh_id == house_carid[playerid][1]) num_car = 1;
		else if(house_carid[playerid][2] && veh_id == house_carid[playerid][2]) num_car = 2;
		new sql_fmt_scruct[20];
		format(sql_fmt_scruct, sizeof(sql_fmt_scruct), "%i, %i, %i, %i, %i, %i, %i", 
		veh_charact[veh_id][0], veh_charact[veh_id][1], veh_charact[veh_id][2], 
		veh_charact[veh_id][3], veh_charact[veh_id][4], veh_charact[veh_id][5], veh_charact[veh_id][6]);
		switch(num_car) {
			case 0: {
				strmid(p_car_charact_1[playerid], sql_fmt_scruct, 0, strlen(sql_fmt_scruct), 255);
				UpdatePlayerDataEx(playerid, "p_car_charact_1", sql_fmt_scruct);
			}
			case 1: {
				strmid(p_car_charact_2[playerid], sql_fmt_scruct, 0, strlen(sql_fmt_scruct), 255);
				UpdatePlayerDataEx(playerid, "p_car_charact_2", sql_fmt_scruct);
			}
			case 2: {
				strmid(p_car_charact_3[playerid], sql_fmt_scruct, 0, strlen(sql_fmt_scruct), 255);
				UpdatePlayerDataEx(playerid, "p_car_charact_3", sql_fmt_scruct);
			}
		}
		if(!listitem) SCM(playerid, 0x339900FF, "√á√†√¢√Æ√§√±√™√®√• √§√•√≤√†√´√® √≥√±√Ø√•√∏√≠√Æ √¢√Æ√ß√¢√∞√†√π√•√≠√ª");
		else {
			PlayerPlaySound(playerid, 1137, 0.0, 0.0, 0.0);
			SCM(playerid, COLOR_LIGHTBLUE, "√Ç√ª√°√∞√†√≠√≠√ª√• √Ç√†√¨√® √§√•√≤√†√´√® √≥√±√Ø√•√∏√≠√Æ √≥√±√≤√†√≠√Æ√¢√´√•√≠√ª √¢ √†√¢√≤√Æ√¨√Æ√°√®√´√º");
		}
		callcmd::power(playerid);
	}
	case 388: {
		if(!response) return 1;
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: {
					SCM(playerid, 0xE5B090FF, "√Ç√¢√•√§√®√≤√• √¢√∞√•√¨√ø √ß√†√µ√¢√†√≤√† √Æ√≤ 5 √§√Æ 30 √¨√®√≠√≥√≤");
					return SPD(playerid, 388, DIALOG_STYLE_INPUT, ""CMAIN"√á√†√µ√¢√†√≤ √≤√•√∞√∞√®√≤√Æ√∞√®√®", ""CWHITE"Quieres √≠√†√∑√†√≤√º √ß√†√µ√¢√†√≤ √≤√•√∞√∞√®√≤√Æ√∞√®√® √°√†√≠√§√ª. √Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø,\n√¢√¢√•√§√®√≤√• √¢√∞√•√¨√ø √ß√†√µ√¢√†√≤√† √¢ √Ø√Æ√´√• √≠√®√¶√• {cc9955}(√§√Æ√Ø√≥√±√≤√®√¨√Æ √Æ√≤ 5 √§√Æ 30)"CWHITE":", "√ç√†√∑√†√≤√º", "Cerrar");
				}
			}
		}
		new capture_time = strval(inputtext);
		if(!strlen(inputtext) || capture_time < 5 || capture_time > 30) {
			SCM(playerid, 0xE5B090FF, "√Ç√¢√•√§√®√≤√• √¢√∞√•√¨√ø √ß√†√µ√¢√†√≤√† √Æ√≤ 5 √§√Æ 30 √¨√®√≠√≥√≤");
			return SPD(playerid, 388, DIALOG_STYLE_INPUT, ""CMAIN"√á√†√µ√¢√†√≤ √≤√•√∞√∞√®√≤√Æ√∞√®√®", ""CWHITE"Quieres √≠√†√∑√†√≤√º √ß√†√µ√¢√†√≤ √≤√•√∞√∞√®√≤√Æ√∞√®√® √°√†√≠√§√ª. √Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø,\n√¢√¢√•√§√®√≤√• √¢√∞√•√¨√ø √ß√†√µ√¢√†√≤√† √¢ √Ø√Æ√´√• √≠√®√¶√• {cc9955}(√§√Æ√Ø√≥√±√≤√®√¨√Æ √Æ√≤ 5 √§√Æ 30)"CWHITE":", "√ç√†√∑√†√≤√º", "Cerrar");
		}
		if(!IsAGang(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √±√Æ√±√≤√Æ√®√≤√• √¢ √°√†√≠√§√•");
		if(pData[playerid][pRank] < 7) return SCM(playerid, COLOR_LIGHTGREY, "√Ñ√´√ø √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√ø √Ω√≤√Æ√© √¥√≥√≠√™√∂√®√® √≠√•√Æ√°√µ√Æ√§√®√¨ 7 √∞√†√≠√£");
		new t;
		gettime(t);
		if(t < 10 || t >= 23) return SCM(playerid, COLOR_LIGHTGREY, "√á√†√µ√¢√†√≤ √≠√•√¢√Æ√ß√¨√Æ√¶√•√≠ √± "CPALEGREEN"23.00 "CLIGHTGREY"√§√Æ "CPALEGREEN"10.00 "CLIGHTGREY"√±√´√•√§√≥√æ√π√•√£√Æ √§√≠√ø");
		if(CaptureInfo) return SCM(playerid, COLOR_LIGHTGREY, "√Ç S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤ √≥√¶√• √®√§√•√≤ √ß√†√µ√¢√†√≤ √≤√•√∞√∞√®√≤√Æ√∞√®√®");
		if(CaptureTime) return SCMF(playerid, COLOR_LIGHTGREY, "√ë√´√•√§√≥√æ√π√®√© √ß√†√µ√¢√†√≤ √≤√•√∞√∞√®√≤√Æ√∞√®√® √¢√Æ√ß√¨√Æ√¶√•√≠ √∑√•√∞√•√ß "CPALEGREEN"%i √¨√®√≠", CaptureTime);
		for(new i = 0; i < sizeof(GZInfo); i ++) {
			if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3])) {
				if(i == 7 || i == 67 || i == 89 || i == 74 || i == 69) return SCM(playerid, COLOR_LIGHTGREY, "√í√•√∞√∞√®√≤√Æ√∞√®√ø, √≠√† √™√Æ√≤√Æ√∞√Æ√© √Ç√ª √≠√†√µ√Æ√§√®√≤√•√±√º, √Ø√∞√®√´√•√£√†√•√≤ √™ √∞√•√±√Ø√†√¢√≠√≥ √°√†√≠√§√ª");
				if(pData[playerid][pMember] == GZInfo[i][gFrakVlad]) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √≠√†√∑√†√≤√º √ß√†√µ√¢√†√≤ √≤√•√∞√∞√®√≤√Æ√∞√®√® √±√¢√Æ√•√© √°√†√≠√§√ª");
				if(IsPlayerInBandMafiaOnline(GZInfo[i][gFrakVlad]) < 1) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √°√†√≠√§√• √≠√† √™√Æ√≤√Æ√∞√≥√æ Quieres √≠√†√Ø√†√±√≤√º No √®√£√∞√Æ√™√Æ√¢ √Æ√≠√´√†√©√≠");
				CaptureInfo = true;
				GZInfo[i][gTime] = capture_time * 60;
				mysql_tquery(mysql_Handle,"UPDATE `accounts` SET `kill_capture` = 0");
				GetPlayer2DZone(playerid,GZInfo[i][GZName],30);
				GZInfo[i][gNapad] = pData[playerid][pMember];
				format(string,220,"%s √≠√†√∑√†√´√® √ß√†√µ√¢√†√≤ √≤√•√∞√∞√®√≤√Æ√∞√®√® √°√†√≠√§√ª %s √¢ √∞√†√©√Æ√≠√• %s",GetGangName(pData[playerid][pMember]),GetGangName(GZInfo[i][gFrakVlad]),GZInfo[i][GZName]);
				SendBandMafia(pData[playerid][pMember],GZInfo[i][gFrakVlad],COLOR_ERROR,string);
				AdminMessageCapt(COLOR_ERROR,string);
				if(pData[playerid][pSex] == 1) format(string, 64, "%s %s √®√≠√®√∂√®√®√∞√Æ√¢√†√´ √ß√†√µ√¢√†√≤",new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1],pData[playerid][pName]);
				else format(string, 64, "%s %s √®√≠√®√∂√®√®√∞√Æ√¢√†√´√† √ß√†√µ√¢√†√≤",new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1],pData[playerid][pName]);
				SendBandMafia(pData[playerid][pMember],GZInfo[i][gFrakVlad],COLOR_ERROR,string);
				AdminMessageCapt(COLOR_ERROR,string);
				GangZoneFlashForAll(GZInfo[i][gID],FractionInfo[GZInfo[i][gNapad]][fColor]);
				GZInfo[i][gzTimer] = SetTimerEx("GzCheck",1000,1,"iii",i,pData[playerid][pMember],GZInfo[i][gFrakVlad]);
				return 1;
			}
		}
		SCM(playerid, COLOR_LIGHTGREY, "√ç√•√Æ√°√µ√Æ√§√®√¨√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √≠√† √≤√•√∞√∞√®√≤√Æ√∞√®√®, √™√Æ√≤√Æ√∞√≥√æ Quieres √ß√†√µ√¢√†√≤√®√≤√º");
	}
	case 450: {
	    new questionfrom = GetPVarInt(playerid, "questionfrom"), len = strlen(inputtext);
	    if(!response) {
			pTemp[questionfrom][rep_rport] = EOS;
			DeletePVar(playerid, "questionfrom");
			format(string, 90, "[A] %s[%d] √≥S√≠√´√®√´ √Æ√°√∞√†√π√•√≠√®√• √Æ√≤ %s[%d]", GetName(playerid), playerid, GetName(questionfrom), questionfrom);
			AdminMessage(0xFF6640FF, string);
			if(pData[playerid][pAdmin] < 1) 
				SCM(playerid,COLOR_ERROR,"√é√°√∞√†√π√•√≠√®√• √≥S√≠√´√•√≠√Æ");
			return 1;
	    }
	    if(!len || len > 60) {
	        new dialog[130], name_dial[44];
			format(dialog, sizeof(dialog), ""CWHITE"%s\n\n"CPALEGREEN"√Ç√∞√•√¨√ø √Æ√≤√Ø√∞√†√¢√´√•√≠√®√ø: %s", pTemp[questionfrom][rep_rport],report_date[questionfrom]);
			format(name_dial, sizeof(name_dial), "{FFCD00}√é√°√∞√†√π√•√≠√®√• √Æ√≤ %s:", GetName(questionfrom));
			if(len > 60) SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§¬∏√≠ √±√´√®√∏√™√Æ√¨ √§√´√®√≠√≠√ª√© √≤√•√™√±√≤ √Æ√≤√¢√•√≤√†");
			return SPD(playerid, 447, DIALOG_STYLE_INPUT, name_dial, dialog, "√é√≤√¢√•√≤√®√≤√º", "√ìS√≠√´√®√≤√º");
	    }
	    new str_dialog[200];
	    SetPVarInt(questionfrom, "adm_id_report", playerid);
	    format(str_dialog, sizeof(str_dialog), ""CWHITE"√Ç√†√¨ √Æ√≤√¢√•√≤√®√´ √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞\n\n√Ç√†√∏√• √Æ√°√∞√†√π√•√≠√®√•: "CLITEBLUE"%s\n"CWHITE"%s: {99CC33}%s\n", pTemp[questionfrom][rep_rport], GetName(playerid), inputtext);
	    format(string, 144, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s[%d] √Æ√≤√¢√•√≤√®√´ %s[%d]: "CWHITE"%s", GetName(playerid), playerid, GetName(questionfrom), questionfrom, inputtext);
	    SPD(questionfrom, 6662, DIALOG_STYLE_MSGBOX, " ", str_dialog, "S√≠√´√•√•", "");
		AdminMessage(0xFF9945FF, string);
		PlayerPlaySound(questionfrom, 1054, 0.0, 0.0, 0.0);
		gAdmin[playerid][ADMIN_ANS] ++;
		DeletePVar(playerid, "questionfrom");
		pTemp[questionfrom][rep_rport] = EOS;
	}
	case 6662: SPD(playerid, 6663, DIALOG_STYLE_LIST, ""CLITEBLUE"√é√∂√•√≠√®√≤√• √Æ√≤√¢√•√≤", "{00cc00}√ï√Æ√∞√Æ√∏√®√© √Æ√≤√¢√•√≤\n{fa1010}√è√´√Æ√µ√Æ√© √Æ√≤√¢√•√≤", "Seleccione", "");
	case 6663: {
		if(!response) return SPD(playerid, 6663, DIALOG_STYLE_LIST, ""CLITEBLUE"√é√∂√•√≠√®√≤√• √Æ√≤√¢√•√≤", "{00cc00}√ï√Æ√∞√Æ√∏√®√© √Æ√≤√¢√•√≤\n{fa1010}√è√´√Æ√µ√Æ√© √Æ√≤√¢√•√≤", "Seleccione", "");
		new adm = GetPVarInt(playerid, "adm_id_report");
		switch(listitem) {
			case 0: {
				pData[adm][adm_good_rate] ++;
				UpdatePlayerData(adm, "adm_good_rate", pData[adm][adm_good_rate]);
			}
			case 1: {
				pData[adm][adm_bad_rate] ++;
				UpdatePlayerData(adm, "adm_bad_rate", pData[adm][adm_bad_rate]);
			}
		}
		DeletePVar(playerid, "adm_id_report");
		PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0);
	}

	case 545: {
		if(!response) return 1;
		if(!GetPVarInt(playerid, "is_placed_BB") || !GetPVarType(playerid, "PlacedBB")) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [048]");
		if(!strlen(inputtext)) return SPD(playerid, 545, DIALOG_STYLE_INPUT, ""CMAIN"√è√∞√Æ√®√£√∞√ª√¢√†√≠√®√• √Ø√Æ √±√±√ª√´√™√•", ""CWHITE"√Ç√¢√•√§√®√≤√• √Ø√∞√ø√¨√≥√æ √±√±√ª√´√™√≥ √≠√† √Ç√†√∏ √†√≥√§√®√Æ√¥√†√©√´ √®√´√® √∞√†√§√®√Æ√±√≤√†√≠√∂√®√æ\n√ë√±√ª√´√™√† √§√Æ√´√¶√≠√† √Æ√™√†√≠√∑√®√¢√†√≤√º√±√ø √≠√† "CMAIN".ogg"CWHITE", "CMAIN".mp3"CWHITE", "CMAIN".m3u"CWHITE" √® √≤. √Ø.\n√è√∞√®√¨√•√∞: "CCYAN"https://normative-rp.ru/files/media/sample.mp3", "√Ç√™√´√æ√∑√®√≤√º", "Cerrar");
		foreach(new i:Player) {
			if(!IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea"))) continue;
			PlayStream(i, inputtext, GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
		}
		SetPVarString(playerid, "BBStation", inputtext);
		for(new i = 7; i < 29; i ++) {
			if(i < 27) TextDrawHideForPlayer(playerid, rec_td[i]);
			else TextDrawShowForPlayer(playerid, rec_td[i]);
		}
		SetPVarInt(playerid, "bbox_mtype", 3);
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~MUSIC ENABLED", 1500, 3);
	}
	case 1161: {
		if(!response) return DeletePVar(playerid, "prop_1_page");
		show_house_lists(playerid, GetPVarInt(playerid, "prop_1_page") + 1, 35);
	}
	case 1162: {
		if(!response) return DeletePVar(playerid, "prop_2_page");
		show_biz_lists(playerid, GetPVarInt(playerid, "prop_2_page") + 1, 20);
	}
	case 3759: {
		if(!response) return 1;
		if(!IsPlayerInRangeOfPoint(playerid, 8.0, 354.5406,-1790.6511,5.1084)) 
			return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √°√®√ß√≠√•√±√†");
		unikautoOwner = -1;
		pData[playerid][unikauto_Have] = 0;
		UpdatePlayerData(playerid, "unikauto_Have", 0);
		GameTextForPlayer(playerid, "~g~+21600000$", 3000, 1);
		Hook_GivePlayerMoney(playerid, 21600000);
		mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `unikautoOwner` = '-1'");
		UpdateDynamic3DTextLabelText(unik3dtext, 0x33AA33FF, "√Ä√¢√≤√Æ√±√†√´√Æ√≠ √Ω√™√±√™√´√æ√ß√®√¢√≠√ª√µ √†√¢√≤√Æ\n\n{4682b4}√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"36000000$");
		SCM(playerid, COLOR_LITEBLUE, "√Å√®√ß√≠√•√± √°√ª√´ √Ø√∞√ÆS√≠√≠ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥ √ß√† "CCYAN"21600000$");
	}
	case 2559: {
		if(!response) return 1;
		if(!IsPlayerInRangeOfPoint(playerid, 8.0, 2146.1821,-2291.7102,14.7500)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √°√®√ß√≠√•√±√†");
		autoworkOwner = -1;
		pData[playerid][autoHave] = 0;
		UpdatePlayerData(playerid, "autoHave", 0);
		GameTextForPlayer(playerid, "~g~+7800000$", 3000, 1);
		Hook_GivePlayerMoney(playerid, 7800000);
		mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `autowork_ownerid` = '-1'");
		UpdateDynamic3DTextLabelText(autoworkbiz3D, 0x33AA33FF, "√Ä√¢√≤√Æ√¨√Æ√°√®√´√º√≠√†√ø √¥√†√°√∞√®√™√†\n\n{4682b4}√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"13000000$\n{4682b4}/buybiz √§√´√ø √Ø√Æ√™√≥√Ø√™√®");
		SCM(playerid, COLOR_LITEBLUE, "√Å√®√ß√≠√•√± √°√ª√´ √Ø√∞√ÆS√≠√≠ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥ √ß√† "CCYAN"7800000$");
	}
	case 5559: {
		if(!response) return 1;
		if(!IsPlayerInRangeOfPoint(playerid, 8.0, 1146.06201, -1755.98499, 15.11)) 
			return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √´√†√∞√º√™√†");
		food1OwnerID = -1;
		pData[playerid][food_have] = 0;
		UpdatePlayerData(playerid, "food_have", 0);
		GameTextForPlayer(playerid, "~g~+210000$", 3000, 1);
		Hook_GivePlayerMoney(playerid, 210000);
		mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `food_owneracc` = '-1'");
		UpdateDynamic3DTextLabelText(food_bomj3d, 0x33AA33FF, "√ã√†√∞√•√™ √± √•√§√Æ√©\n\n{4682b4}√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"350000$\n{4682b4}/buybiz √§√´√ø √Ø√Æ√™√≥√Ø√™√®");
		SCM(playerid, COLOR_LITEBLUE, "√Å√®√ß√≠√•√± √°√ª√´ √Ø√∞√ÆS√≠√≠ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥ √ß√† "CCYAN"210000$");
	}
	case 5560: {
		if(!response) return 1;
		if(!IsPlayerInRangeOfPoint(playerid, 8.0, 1771.739990, -1903.270020, 14.21)) 
			return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √´√†√∞√º√™√†");
		food2OwnerID = -1;
		pData[playerid][food_have] = 0;
		UpdatePlayerData(playerid, "food_have", 0);
		GameTextForPlayer(playerid, "~g~+210000$", 3000, 1);
		Hook_GivePlayerMoney(playerid, 210000);
		mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `food_owneracc_2` = '-1'");
		UpdateDynamic3DTextLabelText(food_bomj3d_2, 0x33AA33FF, "√ã√†√∞√•√™ √± √•√§√Æ√©\n\n{4682b4}√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"350000$\n{4682b4}/buybiz √§√´√ø √Ø√Æ√™√≥√Ø√™√®");
		SCM(playerid, COLOR_LITEBLUE, "√Å√®√ß√≠√•√± √°√ª√´ √Ø√∞√ÆS√≠√≠ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥ √ß√† "CCYAN"210000$");
	}
	case 3514: {
		if(!response) return 1;
		if(food1OwnerID != -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ω√≤√Æ√£√Æ √´√†√∞√º√™√† √≥√¶√• √•√±√≤√º √¢√´√†√§√•√´√•√∂");
		if(pData[playerid][pCash] < 350000) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √§√•√≠√•√£ √§√´√ø √Ø√Æ√™√≥√Ø√™√® √´√†√∞√º√™√†");
		food1OwnerID = pData[playerid][pID];
		pData[playerid][food_have] = 1;
		food1Bank=0;
		mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `food_bank` = 0");
		Hook_GivePlayerMoney(playerid, -350000);
		GameTextForPlayer(playerid, "~r~-350000$", 3000, 1);
		UpdatePlayerData(playerid, "food_have", 1);
		mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `food_owneracc` = %d", food1OwnerID);
		mysql_tquery(mysql_Handle, string);
		new foodstr[140];
		format(foodstr, sizeof(foodstr), "√ã√†√∞√•√™ √± √•√§√Æ√©\n\n{4682b4}√Ç√´√†√§√•√´√•√∂: "CWHITE"%s\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"350000$", pData[playerid][pName]);
		UpdateDynamic3DTextLabelText(food_bomj3d, 0x33AA33FF, foodstr);
		PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
		SCM(playerid, COLOR_MAIN, "√ã√†√∞√•√™ √™√≥√Ø√´√•√≠. √ì√Ø√∞√†√¢√´√•√≠√®√•: "CORANGE"/business");
		SCM(playerid, COLOR_ORANGE, "√ç√• √ß√†√°√≥√§√º√≤√• √Æ√Ø√´√†√≤√®√≤√º √•√£√Æ √¢ √±√Ø√•√∂√®√†√´√º√≠√Æ√¨ √∞√†√ß√§√•√´√• √°√†√≠√™√†");
		pData[playerid][newbiz_Pay]=3;
		UpdatePlayerData(playerid,"newbiz_Pay",3);
	}
	case 3952: {
		if(!response) return 1;
		if(autoworkOwner != -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ω√≤√Æ√£√Æ √°√®√ß√≠√•√±√† √≥√¶√• √•√±√≤√º √¢√´√†√§√•√´√•√∂");
		if(pData[playerid][pCash] < 13000000) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √§√•√≠√•√£ √§√´√ø √Ø√Æ√™√≥√Ø√™√® √°√®√ß√≠√•√±√†");
		autoworkOwner = pData[playerid][pID];
		pData[playerid][autoHave] = 1;
		autoBankCount=0;
		mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `autoBankCount` = 0");
		Hook_GivePlayerMoney(playerid, -13000000);
		GameTextForPlayer(playerid, "~r~-13000000$", 3000, 1);
		UpdatePlayerData(playerid, "autoHave", 1);
		mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `autowork_ownerid` = %d", autoworkOwner);
		mysql_tquery(mysql_Handle, string);
		new str[90];
		format(str, sizeof(str), "√Ä√¢√≤√Æ√¨√Æ√°√®√´√º√≠√†√ø √¥√†√°√∞√®√™√†\n\n{4682b4}√Ç√´√†√§√•√´√•√∂: "CWHITE"%s", pData[playerid][pName]);
		UpdateDynamic3DTextLabelText(autoworkbiz3D, 0x33AA33FF, str);
		PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
		SCM(playerid, COLOR_MAIN, "√Å√®√ß√≠√•√± √Ø√∞√®√Æ√°√∞√•√≤¬∏√≠. √ì√Ø√∞√†√¢√´√•√≠√®√•: "CORANGE"/business");
		SCM(playerid, COLOR_ORANGE, "√ç√• √ß√†√°√≥√§√º√≤√• √Æ√Ø√´√†√≤√®√≤√º √•√£√Æ √¢ √±√Ø√•√∂√®√†√´√º√≠√Æ√¨ √∞√†√ß√§√•√´√• √°√†√≠√™√†");
		pData[playerid][newbiz_Pay]=3;
		UpdatePlayerData(playerid,"newbiz_Pay",3);
	}
	case 3517: {
		if(!response) return 1;
		if(food2OwnerID != -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ω√≤√Æ√£√Æ √´√†√∞√º√™√† √≥√¶√• √•√±√≤√º √¢√´√†√§√•√´√•√∂");
		if(pData[playerid][pCash] < 350000) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √§√•√≠√•√£ √§√´√ø √Ø√Æ√™√≥√Ø√™√® √´√†√∞√º√™√†");
		food2OwnerID = pData[playerid][pID];
		food2Bank=0;
		mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `food_bank_2` = 0");
		pData[playerid][food_have] = 2;
		Hook_GivePlayerMoney(playerid, -350000);
		GameTextForPlayer(playerid, "~r~-350000$", 3000, 1);
		UpdatePlayerData(playerid, "food_have", 2);
		mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `food_owneracc_2` = %d", food2OwnerID);
		mysql_tquery(mysql_Handle, string);
		new foodstr[140];
		format(foodstr, sizeof(foodstr), "√ã√†√∞√•√™ √± √•√§√Æ√©\n\n{4682b4}√Ç√´√†√§√•√´√•√∂: "CWHITE"%s\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"350000$", pData[playerid][pName]);
		UpdateDynamic3DTextLabelText(food_bomj3d_2, 0x33AA33FF, foodstr);
		PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
		SCM(playerid, COLOR_MAIN, "√ã√†√∞√•√™ √™√≥√Ø√´√•√≠. √ì√Ø√∞√†√¢√´√•√≠√®√•: "CORANGE"/business");
		SCM(playerid, COLOR_ORANGE, "√ç√• √ß√†√°√≥√§√º√≤√• √Æ√Ø√´√†√≤√®√≤√º √•√£√Æ √¢ √±√Ø√•√∂√®√†√´√º√≠√Æ√¨ √∞√†√ß√§√•√´√• √°√†√≠√™√†");
		pData[playerid][newbiz_Pay]=3;
		UpdatePlayerData(playerid,"newbiz_Pay",3);
	}
	case 4111: {
		if(!response) return 1;
		switch(listitem) {
			case 0: {
				format(string, 40, ""CWHITE"√Ç √™√†√±√±√•: "CMAIN"%i$", food1Bank);
				SPD(playerid, 0, 0, "{FFCD00}√ä√†√±√±√† √´√†√∞√º√™√†", string, "Cerrar", "");
			}
			case 1: SPD(playerid, 4112, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √´√†√∞√º√™√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √™√†√±√±√≥:", "√è√Æ√´√Æ√¶√®√≤√º", "Cerrar");
			case 2: SPD(playerid, 4113, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √´√†√∞√º√™√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √¢√ß√ø√≤√º √®√ß √™√†√±√±√ª:", "√Ç√ß√ø√≤√º", "Cerrar");
		}
	}
	case 4117: {
		if(!response) return 1;
		switch(listitem) {
			case 0: {
				format(string, 40, ""CWHITE"√Ç √™√†√±√±√•: "CMAIN"%i$", food2Bank);
				SPD(playerid, 0, 0, "{FFCD00}√ä√†√±√±√† √´√†√∞√º√™√†", string, "Cerrar", "");
			}
			case 1: SPD(playerid, 4118, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √´√†√∞√º√™√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √™√†√±√±√≥:", "√è√Æ√´√Æ√¶√®√≤√º", "Cerrar");
			case 2: SPD(playerid, 4119, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √´√†√∞√º√™√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √¢√ß√ø√≤√º √®√ß √™√†√±√±√ª:", "√Ç√ß√ø√≤√º", "Cerrar");
		}
	}
	case 4118: {
		if(!response) return 1;
		if(!strlen(inputtext)) return SPD(playerid, 4118, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √´√†√∞√º√™√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √™√†√±√±√≥:", "√è√Æ√´√Æ√¶√®√≤√º", "Cerrar");
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return SPD(playerid, 4118, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √´√†√∞√º√™√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √™√†√±√±√≥:", "√è√Æ√´√Æ√¶√®√≤√º", "Cerrar");
			}
		}
		if(!IsPlayerInRangeOfPoint(playerid, 8.0, 1771.739990, -1903.270020, 14.21)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √´√†√∞√º√™√†");
		if(pData[playerid][pCash] < strval(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√†√™√®√µ √±√∞√•√§√±√≤√¢, √∑√≤√Æ√°√ª √Ø√Æ√´√Æ√¶√®√≤√º √®√µ √¢ √™√†√±√±√≥");
		if(food2Bank + strval(inputtext) > 5000000) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Ø√Æ√´√Æ√¶√®√≤√º √¢ √™√†√±√±√≥ √°√Æ√´√•√• 5000000$");
		if(food2Bank > 50000) return SCM(playerid, COLOR_LIGHTGREY, "√ä√†√±√±√† √Ø√Æ√´√≠√†. √è√Æ√´√Æ√¶√®√≤√º √±√∞√•√§√±√≤√¢√† √≠√•√´√º√ß√ø");
		food2Bank += strval(inputtext);
		mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `food_bank_2` = %d", food2Bank);
		mysql_tquery(mysql_Handle, string);
		Hook_GivePlayerMoney(playerid, -strval(inputtext));
		return SCMF(playerid, COLOR_BLUE, "√Ç√ª √Ø√Æ√´√Æ√¶√®√´√® √¢ √™√†√±√±√≥ %d$", strval(inputtext));
	}
	case 4119: {
		if(!response) return 1;
		if(!strlen(inputtext)) return SPD(playerid, 4119, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √´√†√∞√º√™√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √¢√ß√ø√≤√º √®√ß √™√†√±√±√ª:", "√Ç√ß√ø√≤√º", "Cerrar");
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return SPD(playerid, 4119, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √´√†√∞√º√™√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √¢√ß√ø√≤√º √®√ß √™√†√±√±√ª:", "√Ç√ß√ø√≤√º", "Cerrar");
			}
		}
		if(!IsPlayerInRangeOfPoint(playerid, 8.0, 1771.739990, -1903.270020, 14.21)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √´√†√∞√º√™√†");
		if(food2Bank < strval(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √™√†√±√±√• No √≤√†√™√®√µ √§√•√≠√•√£");
		food2Bank -= strval(inputtext);
		mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `food_bank_2` = %d", food2Bank);
		mysql_tquery(mysql_Handle, string);
		Hook_GivePlayerMoney(playerid, strval(inputtext));
		return SCMF(playerid, COLOR_BLUE, "√Ç√ª √¢√ß√ø√´√® √®√ß √™√†√±√±√ª %d$", strval(inputtext));
	}
	case 4112: {
		if(!response) return 1;
		if(!strlen(inputtext)) return SPD(playerid, 4112, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √´√†√∞√º√™√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √™√†√±√±√≥:", "√è√Æ√´√Æ√¶√®√≤√º", "Cerrar");
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return SPD(playerid, 4112, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √´√†√∞√º√™√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √™√†√±√±√≥:", "√è√Æ√´√Æ√¶√®√≤√º", "Cerrar");
			}
		}
		if(!IsPlayerInRangeOfPoint(playerid, 8.0, 1146.06201, -1755.98499, 15.11)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √´√†√∞√º√™√†");
		if(pData[playerid][pCash] < strval(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√†√™√®√µ √±√∞√•√§√±√≤√¢, √∑√≤√Æ√°√ª √Ø√Æ√´√Æ√¶√®√≤√º √®√µ √¢ √™√†√±√±√≥");
		if(food1Bank + strval(inputtext) > 5000000) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Ø√Æ√´√Æ√¶√®√≤√º √¢ √™√†√±√±√≥ √°√Æ√´√•√• 5000000$");
		if(food1Bank > 50000) return SCM(playerid, COLOR_LIGHTGREY, "√ä√†√±√±√† √Ø√Æ√´√≠√†. √è√Æ√´√Æ√¶√®√≤√º √±√∞√•√§√±√≤√¢√† √≠√•√´√º√ß√ø");
		food1Bank += strval(inputtext);
		mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `food_bank` = %d", food1Bank);
		mysql_tquery(mysql_Handle, string);
		Hook_GivePlayerMoney(playerid, -strval(inputtext));
		return SCMF(playerid, COLOR_BLUE, "√Ç√ª √Ø√Æ√´√Æ√¶√®√´√® √¢ √™√†√±√±√≥ %d$", strval(inputtext));
	}
	case 4113: {
		if(!response) return 1;
		if(!strlen(inputtext)) return SPD(playerid, 4113, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √´√†√∞√º√™√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √¢√ß√ø√≤√º √®√ß √™√†√±√±√ª:", "√Ç√ß√ø√≤√º", "Cerrar");
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return SPD(playerid, 4113, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √´√†√∞√º√™√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √¢√ß√ø√≤√º √®√ß √™√†√±√±√ª:", "√Ç√ß√ø√≤√º", "Cerrar");
			}
		}
		if(!IsPlayerInRangeOfPoint(playerid, 8.0, 1146.06201, -1755.98499, 15.11)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √´√†√∞√º√™√†");
		if(food1Bank < strval(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √™√†√±√±√• No √≤√†√™√®√µ √§√•√≠√•√£");
		food1Bank -= strval(inputtext);
		mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `food_bank` = %d", food1Bank);
		mysql_tquery(mysql_Handle, string);
		Hook_GivePlayerMoney(playerid, strval(inputtext));
		return SCMF(playerid, COLOR_BLUE, "√Ç√ª √¢√ß√ø√´√® √®√ß √™√†√±√±√ª %d$", strval(inputtext));
	}
	case 4110: {
		if(!response) return 1;
		switch(listitem) {
			case 0: SCMF(playerid,-1,"√Ç√†√∏ √°√®√ß√≠√•√± √Æ√Ø√´√†√∑√•√≠ √≠√† {ff9933}%d √®√ß 30 √§√≠√•√©",pData[playerid][newbiz_Pay]);
			case 1: SPD(playerid,4111, DIALOG_STYLE_LIST,""CMAIN"√ä√†√±√±√† √´√†√∞√º√™√†", ""CWHITE"[1] √è√Æ√±√¨√Æ√≤√∞√•√≤√º √±√≥√¨√¨√≥ √¢ √™√†√±√±√•\n[2] √è√Æ√´√Æ√¶√®√≤√º √§√•√≠√º√£√® √¢ √™√†√±√±√≥\n[3] √ë√≠√ø√≤√º √§√•√≠√º√£√® √± √™√†√±√±√ª", "Seleccione", "Cerrar");
			case 2: callcmd::sellbiz(playerid);
			case 3: SPD(playerid, 4895, DIALOG_STYLE_INPUT,"{FFCD00}√è√∞√ÆS√≠√¶√†",""CWHITE"√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø √¢√¢√•√§√®√≤√• √∑√•√∞√•√ß √Ø√∞√Æ√°√•√´\n√Ø√†√∞√†√¨√•√≤√∞√ª √§√´√ø √Ø√∞√ÆS√≠√¶√® √°√®√ß√≠√•√±√†\n\n"CLITEBLUE"[id √®√£√∞√Æ√™√†] [√∂√•√≠√†]","S√≠√´√•√•","Cerrar");
		}
	}
	case 4116: {
		if(!response) return 1;
		switch(listitem) {
			case 0: SCMF(playerid,-1,"√Ç√†√∏ √°√®√ß√≠√•√± √Æ√Ø√´√†√∑√•√≠ √≠√† {ff9933}%d √®√ß 30 √§√≠√•√©",pData[playerid][newbiz_Pay]);
			case 1: SPD(playerid,4117, DIALOG_STYLE_LIST,""CMAIN"√ä√†√±√±√† √´√†√∞√º√™√†", ""CWHITE"[1] √è√Æ√±√¨√Æ√≤√∞√•√≤√º √±√≥√¨√¨√≥ √¢ √™√†√±√±√•\n[2] √è√Æ√´√Æ√¶√®√≤√º √§√•√≠√º√£√® √¢ √™√†√±√±√≥\n[3] √ë√≠√ø√≤√º √§√•√≠√º√£√® √± √™√†√±√±√ª", "Seleccione", "Cerrar");
			case 2: callcmd::sellbiz(playerid);
			case 3: SPD(playerid, 4895, DIALOG_STYLE_INPUT,"{FFCD00}√è√∞√ÆS√≠√¶√†",""CWHITE"√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø √¢√¢√•√§√®√≤√• √∑√•√∞√•√ß √Ø√∞√Æ√°√•√´\n√Ø√†√∞√†√¨√•√≤√∞√ª √§√´√ø √Ø√∞√ÆS√≠√¶√® √°√®√ß√≠√•√±√†\n\n"CLITEBLUE"[id √®√£√∞√Æ√™√†] [√∂√•√≠√†]","S√≠√´√•√•","Cerrar");
		}
	}
	case 5554: {
		if(!response) return 1;
		if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [080]");
	    new soundid, tw1 = 0;
	    for(new w1 = 0; w1 < sizeof(MegaphoneSounds); w1 ++) {
	        if(tw1 != listitem) {
	            tw1 ++;
	            continue;
	        }
	        new tmp1[2][128];
	        split(MegaphoneSounds[w1], tmp1, ',');
	        soundid = strval(tmp1[0]);
	        break;
	    }
	    SetPVarInt(playerid, "PT_cooldown", gettime() + 5);
	    new Float: posX, Float: posY, Float: posZ, carvid = GetPlayerVehicleID(playerid);
	    GetPlayerPos(playerid, posX, posY, posZ);
	    PlaySoundEx(soundid, posX, posY, posZ, 50);
	    new pt_obj_1, pt_obj_2;

	    if(IsValidDynamicObject(pt_obj_1)) {
	    	DestroyDynamicObject(pt_obj_1);
			DestroyDynamicObject(pt_obj_2);
		}

	    pt_obj_1 = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0);
	    AttachDynamicObjectToVehicle(pt_obj_1, carvid, -0.660, -0.450, 3.500, 0.000, 0.000, 90.600);
	    
	    pt_obj_2 = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0);
	    AttachDynamicObjectToVehicle(pt_obj_2, carvid, -0.622, -0.478, 2.110, 0.000, 0.000, 90.000);

	    SetPVarInt(playerid, "ptEnd", gettime() + 6);

		SetTimerEx("ptAction", 500, 1, "iiii", playerid, pt_obj_1, pt_obj_2, carvid);

		Streamer_Update(playerid, STREAMER_TYPE_OBJECT);
	}
	case 19561: {
		if(!response) {
			SelectTextDraw(playerid, 0x888888AA);
			in_alcMenu[playerid] = true;
			for(new i = 0; i < 18; i ++) TextDrawShowForPlayer(playerid, alcotd[i]);
			return 1;
		}
		if(pData[playerid][pCash] < 100) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √§√•√≠√•√£ √§√´√ø √Ø√Æ√™√≥√Ø√™√®");
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
		Hook_GivePlayerMoney(playerid, -100);
		GameTextForPlayer(playerid, "~r~-100$", 3000, 1);
		new Float: health;
		in_alcMenu[playerid] = false;
		GetPlayerHealth(playerid, health);
		SetPlayerHealth(playerid, (health + 10 > 100.0 ? (100.0) : (health + 10)));
		if(pData[playerid][pSex] == 1) MeAction(playerid, "√™√≥√Ø√®√´ √≠√†√Ø√®√≤√Æ√™");
		else MeAction(playerid, "√™√≥√Ø√®√´√† √≠√†√Ø√®√≤√Æ√™");
	}
	case 19562: {
		if(!response) {
			SelectTextDraw(playerid, 0x888888AA);
			in_alcMenu[playerid] = true;
			for(new i = 0; i < 18; i ++) TextDrawShowForPlayer(playerid, alcotd[i]);
			return 1;
		}
		if(pData[playerid][pCash] < 200) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √§√•√≠√•√£ √§√´√ø √Ø√Æ√™√≥√Ø√™√®");
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
		Hook_GivePlayerMoney(playerid, -200);
		GameTextForPlayer(playerid, "~r~-200$", 3000, 1);
		new Float: health;
		in_alcMenu[playerid] = false;
		GetPlayerHealth(playerid, health);
		SetPlayerHealth(playerid, (health + 10 > 100.0 ? (100.0) : (health + 10)));
		if(pData[playerid][pSex] == 1) MeAction(playerid, "√™√≥√Ø√®√´ √°√≥√≤√ª√´√™√≥ √Ø√®√¢√†");
		else MeAction(playerid, "√™√≥√Ø√®√´√† √°√≥√≤√ª√´√™√≥ √Ø√®√¢√†");
		SCM(playerid, -1, "√ó√≤√Æ√°√ª √¢√ª√°√∞√Æ√±√®√≤√º √°√≥√≤√ª√´√™√≥ √≠√†√¶√¨√®√≤√• "CMAIN"√™√´√†√¢√®√∏√≥ F");
	}
	case 19563: {
		if(!response) {
			SelectTextDraw(playerid, 0x888888AA);
			in_alcMenu[playerid] = true;
			for(new i = 0; i < 18; i ++) TextDrawShowForPlayer(playerid, alcotd[i]);
			return 1;
		}
		if(pData[playerid][pCash] < 400) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √§√•√≠√•√£ √§√´√ø √Ø√Æ√™√≥√Ø√™√®");
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
		Hook_GivePlayerMoney(playerid, -400);
		GameTextForPlayer(playerid, "~r~-400$", 3000, 1);
		new Float: health;
		in_alcMenu[playerid] = false;
		GetPlayerHealth(playerid, health);
		SetPlayerHealth(playerid, (health + 10 > 100.0 ? (100.0) : (health + 10)));
		if(pData[playerid][pSex] == 1) MeAction(playerid, "√™√≥√Ø√®√´ √°√≥√≤√ª√´√™√≥ √¢√Æ√§√™√®");
		else MeAction(playerid, "√™√≥√Ø√®√´√† √°√≥√≤√ª√´√™√≥ √¢√Æ√§√™√®");
		SCM(playerid, -1, "√ó√≤√Æ√°√ª √¢√ª√°√∞√Æ√±√®√≤√º √°√≥√≤√ª√´√™√≥ √≠√†√¶√¨√®√≤√• "CMAIN"√™√´√†√¢√®√∏√≥ F");
	}
	case 19564: {
		if(!response) {
			SelectTextDraw(playerid, 0x888888AA);
			in_alcMenu[playerid] = true;
			for(new i = 0; i < 18; i ++) TextDrawShowForPlayer(playerid, alcotd[i]);
			return 1;
		}
		if(pData[playerid][pCash] < 2000) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √§√•√≠√•√£ √§√´√ø √Ø√Æ√™√≥√Ø√™√®");
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
		Hook_GivePlayerMoney(playerid, -2000);
		GameTextForPlayer(playerid, "~r~-2000$", 3000, 1);
		new Float: health;
		in_alcMenu[playerid] = false;
		GetPlayerHealth(playerid, health);
		SetPlayerHealth(playerid, (health + 15 > 100.0 ? (100.0) : (health + 15)));
		if(pData[playerid][pSex] == 1) MeAction(playerid, "√™√≥√Ø√®√´ √°√≥√≤√ª√´√™√≥ √¢√®√±√™√®");
		else MeAction(playerid, "√™√≥√Ø√®√´√† √°√≥√≤√ª√´√™√≥ √¢√®√±√™√®");
		SCM(playerid, -1, "√ó√≤√Æ√°√ª √¢√ª√°√∞√Æ√±√®√≤√º √°√≥√≤√ª√´√™√≥ √≠√†√¶√¨√®√≤√• "CMAIN"√™√´√†√¢√®√∏√≥ F");
	}
	case 19565: {
		if(!response) {
			SelectTextDraw(playerid, 0x888888AA);
			in_alcMenu[playerid] = true;
			for(new i = 0; i < 18; i ++) TextDrawShowForPlayer(playerid, alcotd[i]);
			return 1;
		}
		if(pData[playerid][pCash] < 500) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √§√•√≠√•√£ √§√´√ø √Ø√Æ√™√≥√Ø√™√®");
		GameTextForPlayer(playerid, "~r~-500$~n~~b~+ 30 hp", 2000, 6);
		Hook_GivePlayerMoney(playerid, -500);
		new Float: health;
		in_alcMenu[playerid] = false;
		GetPlayerHealth(playerid, health);
		SetPlayerHealth(playerid, (health + 30 > 100.0 ? (100.0) : (health + 30)));
		ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0, 1);
		PlayerPlaySound(playerid, 32200, 0.0, 0.0, 0.0);
		if(pData[playerid][pSex] == 1) MeAction(playerid, "√™√≥√Ø√®√´ √°√≥√∞√£√•√∞");
		else MeAction(playerid, "√™√≥√Ø√®√´√† √°√≥√∞√£√•√∞");
	}
	case 5994: {
			if(!response) return 1;
			new num = 17 + listitem;
			if(GetPlayerVirtualWorld(playerid) != num) 
				SetPlayerVirtualWorld(playerid, num);
		}
	case 4929: {
		if(!response) {
			SCM(playerid, COLOR_ERROR, "√Ç√¢√•√§√®√≤√• √™√Æ√¨√†√≠√§√≥ /q (/quit) √§√´√ø √¢√ª√µ√ÆS√≠");
			return Kick(playerid);
		}
		if(!strlen(inputtext)) return SPD(playerid, 4929, DIALOG_STYLE_INPUT, "{bbaa00}√ä√Æ√§ √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√®", ""CWHITE"√ó√≤√Æ√°√ª √ß√†√¢√•√∞√∏√®√≤√º √±√≤√†√§√®√æ √†√¢√≤√Æ√∞√®√ß√†√∂√®√®, √Ç√†√¨ √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √Ø√∞√Æ√©√≤√®\n√Ø√∞√Æ√¢√•√∞√™√≥. √Ç√¢√•√§√®√≤√• √¢ √Ø√Æ√´√• √≠√®√¶√• √∂√®√¥√∞√ª, √™√Æ√≤√Æ√∞√ª√• √Ç√ª √≥√™√†√ß√†√´√® √¢ √™√Æ√§√•\n√°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√®:", "√Ç√¢√•√±√≤√®", "Cerrar");
		if(strcmp(pData[playerid][pSuperKey], inputtext)) {
			SCM(playerid, COLOR_ERROR, "√ä√Æ√§ √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√® √¢√¢√•√§¬∏√≠ √≠√•√¢√•√∞√≠√Æ");
			SCM(playerid, COLOR_ERROR, "√Ç√¢√•√§√®√≤√• √™√Æ√¨√†√≠√§√≥ /q (/quit) √§√´√ø √¢√ª√µ√ÆS√≠");
			return Kick(playerid);
		}
		new playerip[16], data2[22],day, month, year;
		getdate(day, month, year);
		format(data2, 22, "%d-%d-%d", day, month, year);
		GetPlayerIp(playerid, playerip, sizeof(playerip));
		mysql_format(mysql_Handle, string, 200, "INSERT INTO `captchalog` (`clName`, `clIP`, `clDate`, `clStatus`) VALUES ('%e', '%s', '%s', '1')", pData[playerid][pName], playerip, data2);
		mysql_tquery(mysql_Handle, string);
		TogglePlayerControllable(playerid, true);
		LoadPlayerAccount(playerid);
	}
	case 4930: {
		if(!response) return SPD(playerid, 118, DIALOG_STYLE_LIST, ""CPALEGREEN"√Å√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√º", "[1] Google Authenticator\n[2] √ä√Æ√§ √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√®\n[3] √à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ √ß√†√π√®√≤√•\n{00cc66}[4] Cambio √Ø√†√∞√Æ√´√º\n{0099ff}[5] √ë√≤√†√≤√≥√± √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√®\n"CGREY"[6] √è√Æ√§√≤√¢√•√∞√§√®√≤√º E-Mail", "Seleccione", "Siguiente");
		if(!strlen(inputtext))
		{
			return SPD(playerid, 4930, DIALOG_STYLE_INPUT, "{bbaa00}√ä√Æ√§ √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√®", "\
				"CWHITE"√ä√Æ√§ √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√® - √Ω√≤√Æ √Ç√†√∏ √Ø√•√∞√±√Æ√≠√†√´√º√≠√ª√© √™√Æ√§, √™√Æ√≤√Æ√∞√ª√© √Ç√ª\n\
				√Æ√°√ø√ß√†√≠√ª √ß√†√Ø√Æ√¨√≠√®√≤√º.\n\
				√Å√•√ß √™√ÆS√≠ √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√® √Ç√ª √≠√• √±√¨√Æ√¶√•√≤√• √Ø√∞√Æ√©√≤√® √†√¢√≤√Æ√∞√®√ß√†√∂√®√æ.\n\
				√Ç√¢√•√§√®√≤√• √¢ √Ø√Æ√´√• √≠√®√¶√• √¶√•√´√†√•√¨√ª√© √™√Æ√§ √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√®. √é√≠ √§√Æ√´√¶√•√≠\n\
				√±√Æ√±√≤√Æ√ø√≤√º √®√ß 5 √∂√®√¥√∞:", 
			"√Ç√¢√•√±√≤√®", "Cerrar");
		}
		if(strlen(inputtext) < 1 || strlen(inputtext) > 5) {
			SCM(playerid, COLOR_LIGHTGREY, "√ä√Æ√§ √§√Æ√´√¶√•√≠ √±√Æ√±√≤√Æ√ø√≤√º √®√ß 5 √∂√®√¥√∞");
			return SPD(playerid, 4930, DIALOG_STYLE_INPUT, "{bbaa00}√ä√Æ√§ √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√®", "\
				"CWHITE"√ä√Æ√§ √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√® - √Ω√≤√Æ √Ç√†√∏ √Ø√•√∞√±√Æ√≠√†√´√º√≠√ª√© √™√Æ√§, √™√Æ√≤√Æ√∞√ª√© √Ç√ª\n\
				√Æ√°√ø√ß√†√≠√ª √ß√†√Ø√Æ√¨√≠√®√≤√º.\n\
				√Å√•√ß √™√ÆS√≠ √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√® √Ç√ª √≠√• √±√¨√Æ√¶√•√≤√• √Ø√∞√Æ√©√≤√® √†√¢√≤√Æ√∞√®√ß√†√∂√®√æ.\n\
				√Ç√¢√•√§√®√≤√• √¢ √Ø√Æ√´√• √≠√®√¶√• √¶√•√´√†√•√¨√ª√© √™√Æ√§ √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√®. √é√≠ √§√Æ√´√¶√•√≠\n\
				√±√Æ√±√≤√Æ√ø√≤√º √®√ß 5 √∂√®√¥√∞:", 
			"√Ç√¢√•√±√≤√®", "Cerrar");
		}
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
	        switch(inputtext[i]) {
	            case '0'..'9': continue;
	            default: {
	            	SCM(playerid, COLOR_LIGHTGREY, "√ä√Æ√§ √§√Æ√´√¶√•√≠ √±√Æ√±√≤√Æ√ø√≤√º √®√ß 5 √∂√®√¥√∞");
					return SPD(playerid, 4930, DIALOG_STYLE_INPUT, "{bbaa00}√ä√Æ√§ √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√®", "\
						"CWHITE"√ä√Æ√§ √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√® - √Ω√≤√Æ √Ç√†√∏ √Ø√•√∞√±√Æ√≠√†√´√º√≠√ª√© √™√Æ√§, √™√Æ√≤√Æ√∞√ª√© √Ç√ª\n\
						√Æ√°√ø√ß√†√≠√ª √ß√†√Ø√Æ√¨√≠√®√≤√º.\n\
						√Å√•√ß √™√ÆS√≠ √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√® √Ç√ª √≠√• √±√¨√Æ√¶√•√≤√• √Ø√∞√Æ√©√≤√® √†√¢√≤√Æ√∞√®√ß√†√∂√®√æ.\n\
						√Ç√¢√•√§√®√≤√• √¢ √Ø√Æ√´√• √≠√®√¶√• √¶√•√´√†√•√¨√ª√© √™√Æ√§ √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√®. √é√≠ √§√Æ√´√¶√•√≠\n\
						√±√Æ√±√≤√Æ√ø√≤√º √®√ß 5 √∂√®√¥√∞:", 
					"√Ç√¢√•√±√≤√®", "Cerrar");
	        	}
	        }
	    }
		strmid(pData[playerid][pSuperKey], inputtext, 0, strlen(inputtext), 96);
		string[0] = EOS;
		format(string, 75, "√ä√Æ√§ √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√® {FFCD00}%s"CMAIN" √≥√±√Ø√•√∏√≠√Æ √≥√±√≤√†√≠√Æ√¢√´√•√≠", pData[playerid][pSuperKey]);
		SCM(playerid, COLOR_MAIN, string);
		SCM(playerid, COLOR_MAIN, "√ó√≤√Æ√°√ª √≠√• √ß√†√°√ª√≤√º √•√£√Æ, √±√§√•√´√†√©√≤√• √±√™√∞√®√≠√∏√Æ√≤ {FFCD00}(√™√´√†√¢√®√∏√† F8)");
		TogglePlayerControllable(playerid, 1);
		pData[playerid][pKeylog] = 1;
		UpdatePlayerData(playerid, "pKeylog", 1);
		UpdatePlayerDataEx(playerid, "pSuperKey", inputtext);
	}
    case 299: {
        if(!response) return 1;
        if(!strlen(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "√é√∏√®√°√™√† √≠√†√°√Æ√∞√†"), PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
        for(new i = strlen(inputtext) - 1; i != -1; i --) {
            switch(inputtext[i]) {
                case '0'..'9': continue;
                default: return SCM(playerid, COLOR_LIGHTGREY, "√ç√†√°√∞√†√≠ √≠√•√¢√•√∞√≠√ª√© √≠√Æ√¨√•√∞"), PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
            }
        }
        callcmd::call(playerid, inputtext);
    }
    case 1892: {
    	TogglePlayerControllable(playerid, 1);
		if(!response) return RemovePlayerFromVehicle(playerid);
		if(pData[playerid][have_garage] == -1 && pData[playerid][pHouse] == -1 && pData[playerid][pHotel] == -1 && pData[playerid][pFlat] == -1) {
			RemovePlayerFromVehicle(playerid);
			return SCM(playerid, COLOR_LIGHTGREY, "√ó√≤√Æ√°√ª √™√≥√Ø√®√≤√º √≤√∞√†√≠√±√Ø√Æ√∞√≤ √≥ √Ç√†√± √§√Æ√´√¶√•√≠ √°√ª√≤√º √£√†√∞√†√¶, √§√Æ√¨, √™√¢√†√∞√≤√®√∞√† √®√´√® √≠√Æ√¨√•√∞ √¢ √Æ√≤√•√´√•");
		}
		new car = GetPlayerVehicleID(playerid);
		new car_price;
		new cartype;
		if(car == elegy_car) {
			cartype = 1;
			car_price = 11000000;
		}
		else if(car == infernus_car) {
			cartype = 2;
			car_price = 8500000;
		}
		else if(car == bullet_car) {
			cartype = 3;
			car_price = 10000000;
		}
		else if(car == turismo_car) {
			cartype = 4;
			car_price = 7900000;
		}
		else if(car == perennial_car) {
			cartype = 5;
			car_price = 9000000;
		}
		else if(car == bulletsecond_car) {
			cartype = 6;
			car_price = 10000000;
		}
		else if(car == infsecond_car) {
			cartype = 7;
			car_price = 8500000;
		}
		else if(car == zr_car) {
			cartype = 8;
			car_price = 12000000;
		}
		else if(car == sandcar1) {
			cartype = 9;
			car_price = 1900000;
		}
		else if(car == sandcar2) {
			cartype = 10;
			car_price = 3800000;
		}
		else {
			RemovePlayerFromVehicle(playerid);
			return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [082]");
		}
		if(pData[playerid][pCash] < car_price) {
			RemovePlayerFromVehicle(playerid);
			return SCMF(playerid, COLOR_LIGHTGREY, "√Ñ√´√ø √Ø√Æ√™√≥√Ø√™√® √†√¢√≤√Æ√¨√Æ√°√®√´√ø √≠√≥√¶√≠√Æ {FFCD00}%d$ "CLIGHTGREY"√≠√†√´√®√∑√≠√ª√¨√®", car_price);
		}

		if(pData[playerid][have_garage] != -1 || pData[playerid][pHotel] != -1 || pData[playerid][pFlat] != -1) {
			if(pData[playerid][pCar][0] != 0) {
				RemovePlayerFromVehicle(playerid);
				return SCM(playerid, COLOR_LIGHTGREY, "√è√•√∞√•√§ √Ø√Æ√™√≥√Ø√™√Æ√© √≤√∞√†√≠√±√Ø√Æ√∞√≤√† √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √Ø√∞√ÆS√≠√≤√º √≤√•√™√≥√π√®√© "CPALEGREEN"(/sellcar)");
			}

			pData[playerid][Un_CarType][0] = cartype;
			new model = GetVehicleModel(car);
			pData[playerid][pCar][0] = model;
			pData[playerid][p_car_cash][0] = car_price;
			pData[playerid][t_wheel][0] = 0;
			pData[playerid][t_hydraulics][0] = 0;
			pData[playerid][t_stereo][0] = 0;
			pData[playerid][t_neon_num][0] = -1;
			pData[playerid][t_paintjob][0] = -1;
			pData[playerid][t_color_1][0] = -1;
			pData[playerid][t_color_2][0] = -1;
			strmid(num_plate[playerid][0], "None", 0, strlen("None"), 255);

			strmid(p_car_charact_1[playerid], "0, 0, 0, 0, 0, 0, 0", 0, 20, 255);
			UpdatePlayerDataEx(playerid, "p_car_charact_1", "0, 0, 0, 0, 0, 0, 0");
			UpdatePlayerData(playerid, "p_car_cash_1", car_price);
			UpdatePlayerData(playerid, "pCar", model);
			UpdatePlayerData(playerid, "Un_CarType_1", cartype);
			UpdatePlayerData(playerid, "t_wheel_car_1", 0);
			UpdatePlayerData(playerid, "t_hydraulics_car_1", 0);
			UpdatePlayerData(playerid, "t_stereo_car_1", 0);
			UpdatePlayerData(playerid, "t_neon_num_1", -1);
			UpdatePlayerData(playerid, "t_paintjob_car_1", -1);
			UpdatePlayerData(playerid, "t_color_1_1", -1);
			UpdatePlayerData(playerid, "t_color_2_1", -1);
			UpdatePlayerDataEx(playerid, "num_plate_1", "None");

			if(house_carid[playerid][0] != 0) {
				DestroyVehicle(house_carid[playerid][0]);
				house_carid[playerid][0] = 0;
			}

			new Float: vehx, Float: vehy, Float: vehz, Float: vehangle;

			GetVehiclePos(car, vehx, vehy, vehz);
			GetVehicleZAngle(car, vehangle);

			ApplyAnimation(playerid, "PED", "null", 0.0, 0, 0, 0, 0, 0);

			SetVehiclePos(car, 0, 0, 9000);

			SetPVarInt(playerid, "pos_in_Unik", 1);
			SetPVarFloat(playerid, "Unikpos_X", vehx);
			SetPVarFloat(playerid, "Unikpos_Y", vehy);
			SetPVarFloat(playerid, "Unikpos_Z", vehz);
			SetPVarFloat(playerid, "Unikpos_A", vehangle);

			if(cartype == 9) {
				strmid(p_car_charact_1[playerid], "0, 0, 0, 0, 0, 0, 0", 0, 20, 255);
				UpdatePlayerDataEx(playerid, "p_car_charact_1", "0, 0, 0, 0, 0, 0, 0");
			}
			else {
				strmid(p_car_charact_1[playerid], "3, 3, 4, 4, 5, 4, 3", 0, 20, 255);
				UpdatePlayerDataEx(playerid, "p_car_charact_1", "3, 3, 4, 4, 5, 4, 3");
			}

			LoadCarPlayer(playerid, 1);

			SetTimerEx("respawn_car", 60000, 0, "i", car);

			car = house_carid[playerid][0];

			PutPlayerInVehicle(playerid, car, 0);
			if(cartype != 9) 
				SCM(playerid, -1, "√ó√≤√Æ√°√ª √¢√™√´√æ√∑√®√≤√º AMG √∞√•√¶√®√¨ √¢√¢√•√§√®√≤√• "CBLUE"/amg");
			SetPVarInt(playerid, "unik_not_send", 1);
			
			VehInfo[house_carid[playerid][0]][vFuel] = 100.0;
			savefuel_cars(playerid, house_carid[playerid][0]);

			new gametext_str[30];
			format(gametext_str, sizeof(gametext_str), "~r~-%d$", car_price);
	        GameTextForPlayer(playerid, gametext_str, 3000, 1);
			Hook_GivePlayerMoney(playerid, -car_price);
			PlayerPlaySound(playerid, 4600, 0.0, 0.0, 0.0);

			unikbankCount += car_price/25;
			mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `unikbankCount` = %d", unikbankCount);
			mysql_tquery(mysql_Handle, string);

			SCMF(playerid, -1, "√è√Æ√ß√§√∞√†√¢√´√ø√•√¨! √Ç√ª √Ø√∞√®√Æ√°√∞√•√´√® √≥√≠√®√™√†√´√º√≠√ª√© √†√¢√≤√Æ√¨√Æ√°√®√´√º "CORANGE"%s "CWHITE"√ß√† {00cc00}%d$", VehicleNames[model - 400], car_price);

			return 1;
		}

		new text_car_1[140], text_car_2[140], text_car_3[140];
		if(pData[playerid][pCar][0] != 0) format(text_car_1, 140, "(√¨√†√∞√™√†: %s)", VehicleNames[pData[playerid][pCar][0] - 400]);
		else strcat(text_car_1, "{ff4d4d}(√Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤)");
		if(pData[playerid][pCar][1] != 0) format(text_car_2, 140, "(√¨√†√∞√™√†: %s)", VehicleNames[pData[playerid][pCar][1] - 400]);
		else strcat(text_car_2, "{ff4d4d}(√Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤)");
		if(pData[playerid][pCar][2] != 0) format(text_car_3, 140, "(√¨√†√∞√™√†: %s)", VehicleNames[pData[playerid][pCar][2] - 400]);
		else strcat(text_car_3, "{ff4d4d}(√Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤)");
		format(string, 270, "{FFCD00}√è√∞√®√¨√•√∑√†√≠√®√•: √Ø√∞√•√§√ª√§√≥√π√®√© √≤√∞√†√≠√±√Ø√Æ√∞√≤ √°√≥√§√•√≤ √†√≠√≠√≥√´√®√∞√Æ√¢√†√≠\n"CWHITE"√è√•√∞√¢√ª√© "CCYAN"%s\n"CWHITE"√Ç√≤√Æ√∞√Æ√© "CCYAN"%s\n"CWHITE"√í√∞√•√≤√®√© "CCYAN"%s", text_car_1, text_car_2, text_car_3);
		SPD(playerid, 1593, DIALOG_STYLE_TABLIST_HEADERS, "{005b96}√Ç√ª√°√•√∞√®√≤√• √±√´√Æ√≤ √§√´√ø √≠√Æ√¢√Æ√£√Æ √≤√∞√†√≠√±√Ø√Æ√∞√≤√†", string, "Seleccione", "Cerrar");
	}

	case 1593: {
		if(!response) return RemovePlayerFromVehicle(playerid);

		if(pData[playerid][have_garage] == -1 && pData[playerid][pHouse] == -1 && pData[playerid][pHotel] == -1 && pData[playerid][pFlat] == -1) {
			RemovePlayerFromVehicle(playerid);
			return SCM(playerid, COLOR_LIGHTGREY, "√ó√≤√Æ√°√ª √™√≥√Ø√®√≤√º √≤√∞√†√≠√±√Ø√Æ√∞√≤ √≥ √Ç√†√± √§√Æ√´√¶√•√≠ √°√ª√≤√º √£√†√∞√†√¶, √§√Æ√¨, √™√¢√†√∞√≤√®√∞√† √®√´√® √≠√Æ√¨√•√∞ √¢ √Æ√≤√•√´√•");
		}
		new car = GetPlayerVehicleID(playerid);
		new car_price;
		new cartype;
		if(car == elegy_car) {
			cartype = 1;
			car_price = 11000000;
		}
		else if(car == infernus_car) {
			cartype = 2;
			car_price = 8500000;
		}
		else if(car == bullet_car) {
			cartype = 3;
			car_price = 10000000;
		}
		else if(car == turismo_car) {
			cartype = 4;
			car_price = 7900000;
		}
		else if(car == perennial_car) {
			cartype = 5;
			car_price = 9000000;
		}
		else if(car == bulletsecond_car) {
			cartype = 6;
			car_price = 10000000;
		}
		else if(car == infsecond_car) {
			cartype = 7;
			car_price = 8500000;
		}
		else if(car == zr_car) {
			cartype = 8;
			car_price = 12000000;
		}
		else if(car == sandcar1) {
			cartype = 9;
			car_price = 1900000;
		}
		else if(car == sandcar2) {
			cartype = 10;
			car_price = 3800000;
		}
		else {
			RemovePlayerFromVehicle(playerid);
			return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [084]");
		}
		if(pData[playerid][pCash] < car_price) {
			RemovePlayerFromVehicle(playerid);
			return SCMF(playerid, COLOR_LIGHTGREY, "√Ñ√´√ø √Ø√Æ√™√≥√Ø√™√® √†√¢√≤√Æ√¨√Æ√°√®√´√ø √≠√≥√¶√≠√Æ {FFCD00}%d$ "CLIGHTGREY"√≠√†√´√®√∑√≠√ª√¨√®", car_price);
		}

		pData[playerid][Un_CarType][listitem] = cartype;
		new model = GetVehicleModel(car);
		pData[playerid][pCar][listitem] = model;
		pData[playerid][p_car_cash][listitem] = car_price;
		pData[playerid][t_wheel][listitem] = 0;
		pData[playerid][t_hydraulics][listitem] = 0;
		pData[playerid][t_stereo][listitem] = 0;
		pData[playerid][t_paintjob][listitem] = -1;
		pData[playerid][t_neon_num][listitem] = -1;
		pData[playerid][t_color_1][listitem] = -1;
		pData[playerid][t_color_2][listitem] = -1;
		strmid(num_plate[playerid][listitem], "None", 0, strlen("None"), 255);
		switch(listitem) {
			case 0: {
				UpdatePlayerData(playerid, "p_car_cash_1", car_price);
				UpdatePlayerData(playerid, "pCar", model);
				UpdatePlayerData(playerid, "Un_CarType_1", cartype);
				UpdatePlayerData(playerid, "t_wheel_car_1", 0);
				UpdatePlayerData(playerid, "t_hydraulics_car_1", 0);
				UpdatePlayerData(playerid, "t_neon_num_1", -1);
				UpdatePlayerData(playerid, "t_stereo_car_1", 0);
				UpdatePlayerData(playerid, "t_paintjob_car_1", -1);
				UpdatePlayerData(playerid, "t_color_1_1", -1);
				UpdatePlayerData(playerid, "t_color_2_1", -1);
				UpdatePlayerDataEx(playerid, "num_plate_1", "None");

				strmid(p_car_charact_1[playerid], "3, 3, 4, 4, 5, 4, 3", 0, 20, 255);
				UpdatePlayerDataEx(playerid, "p_car_charact_1", "3, 3, 4, 4, 5, 4, 3");
			}
			case 1: {
				UpdatePlayerData(playerid, "p_car_cash_2", car_price);
				UpdatePlayerData(playerid, "pCar2", model);
				UpdatePlayerData(playerid, "Un_CarType_2", cartype);
				UpdatePlayerData(playerid, "t_wheel_car_2", 0);
				UpdatePlayerData(playerid, "t_hydraulics_car_2", 0);
				UpdatePlayerData(playerid, "t_neon_num_2", -1);
				UpdatePlayerData(playerid, "t_stereo_car_2", 0);
				UpdatePlayerData(playerid, "t_paintjob_car_2", -1);
				UpdatePlayerData(playerid, "t_color_1_2", -1);
				UpdatePlayerData(playerid, "t_color_2_2", -1);
				UpdatePlayerDataEx(playerid, "num_plate_2", "None");

				strmid(p_car_charact_2[playerid], "3, 3, 4, 4, 5, 4, 3", 0, 20, 255);
				UpdatePlayerDataEx(playerid, "p_car_charact_2", "3, 3, 4, 4, 5, 4, 3");
			}
			case 2: {
				UpdatePlayerData(playerid, "p_car_cash_3", car_price);
				UpdatePlayerData(playerid, "pCar3", model);
				UpdatePlayerData(playerid, "Un_CarType_3", cartype);
				UpdatePlayerData(playerid, "t_wheel_car_3", 0);
				UpdatePlayerData(playerid, "t_neon_num_3", -1);
				UpdatePlayerData(playerid, "t_hydraulics_car_3", 0);
				UpdatePlayerData(playerid, "t_stereo_car_3", 0);
				UpdatePlayerData(playerid, "t_paintjob_car_3", -1);
				UpdatePlayerData(playerid, "t_color_1_3", -1);
				UpdatePlayerData(playerid, "t_color_2_3", -1);
				UpdatePlayerDataEx(playerid, "num_plate_3", "None");

				strmid(p_car_charact_3[playerid], "3, 3, 4, 4, 5, 4, 3", 0, 20, 255);
				UpdatePlayerDataEx(playerid, "p_car_charact_3", "3, 3, 4, 4, 5, 4, 3");
			}
		}
		if(house_carid[playerid][listitem] != 0) {
			DestroyVehicle(house_carid[playerid][listitem]);
			house_carid[playerid][listitem] = 0;
		}

		new Float: vehx, Float: vehy, Float: vehz, Float: vehangle;

		GetVehiclePos(car, vehx, vehy, vehz);
		GetVehicleZAngle(car, vehangle);

		ApplyAnimation(playerid, "PED", "null", 0.0, 0, 0, 0, 0, 0);

		SetVehiclePos(car, 0, 0, 9000);

		SetPVarInt(playerid, "pos_in_Unik", 1);
		SetPVarFloat(playerid, "Unikpos_X", vehx);
		SetPVarFloat(playerid, "Unikpos_Y", vehy);
		SetPVarFloat(playerid, "Unikpos_Z", vehz);
		SetPVarFloat(playerid, "Unikpos_A", vehangle);

		if(cartype == 9) {
			switch(listitem) {
				case 0: {
					strmid(p_car_charact_1[playerid], "0, 0, 0, 0, 0, 0, 0", 0, 20, 255);
					UpdatePlayerDataEx(playerid, "p_car_charact_1", "0, 0, 0, 0, 0, 0, 0");
				}
				case 1: {
					strmid(p_car_charact_2[playerid], "0, 0, 0, 0, 0, 0, 0", 0, 20, 255);
					UpdatePlayerDataEx(playerid, "p_car_charact_2", "0, 0, 0, 0, 0, 0, 0");
				}
				case 2: {
					strmid(p_car_charact_3[playerid], "0, 0, 0, 0, 0, 0, 0", 0, 20, 255);
					UpdatePlayerDataEx(playerid, "p_car_charact_3", "0, 0, 0, 0, 0, 0, 0");
				}
			}
		}
		else {
			switch(listitem) {
				case 0: {
					strmid(p_car_charact_1[playerid], "3, 3, 4, 4, 5, 4, 3", 0, 20, 255);
					UpdatePlayerDataEx(playerid, "p_car_charact_1", "3, 3, 4, 4, 5, 4, 3");
				}
				case 1: {
					strmid(p_car_charact_2[playerid], "3, 3, 4, 4, 5, 4, 3", 0, 20, 255);
					UpdatePlayerDataEx(playerid, "p_car_charact_2", "3, 3, 4, 4, 5, 4, 3");
				}
				case 2: {
					strmid(p_car_charact_3[playerid], "3, 3, 4, 4, 5, 4, 3", 0, 20, 255);
					UpdatePlayerDataEx(playerid, "p_car_charact_3", "3, 3, 4, 4, 5, 4, 3");
				}
			}
		}

		LoadCarPlayer(playerid, listitem + 1);

		SetTimerEx("respawn_car", 60000, 0, "i", car);

		car = house_carid[playerid][listitem];

		PutPlayerInVehicle(playerid, car, 0);
		if(cartype != 9) 
			SCM(playerid, -1, "√ó√≤√Æ√°√ª √¢√™√´√æ√∑√®√≤√º AMG √∞√•√¶√®√¨ √¢√¢√•√§√®√≤√• "CBLUE"/amg");
		SetPVarInt(playerid, "unik_not_send", 1);

		VehInfo[house_carid[playerid][listitem]][vFuel] = 100.0;
		savefuel_cars(playerid, house_carid[playerid][listitem]);

		new gametext_str[30];
		format(gametext_str, sizeof(gametext_str), "~r~-%d$", car_price);
        GameTextForPlayer(playerid, gametext_str, 3000, 1);
		Hook_GivePlayerMoney(playerid, -car_price);
		PlayerPlaySound(playerid, 4600, 0.0, 0.0, 0.0);

		unikbankCount += car_price/25;
		mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `unikbankCount` = %d", unikbankCount);
		mysql_tquery(mysql_Handle, string);

		SCMF(playerid, -1, "√è√Æ√ß√§√∞√†√¢√´√ø√•√¨! √Ç√ª √Ø√∞√®√Æ√°√∞√•√´√® √≥√≠√®√™√†√´√º√≠√ª√© √†√¢√≤√Æ√¨√Æ√°√®√´√º "CORANGE"%s "CWHITE"√ß√† {00cc00}%d$", VehicleNames[model - 400], car_price);
	}
	case 134: {
		if(!response) return 1;
		if(GetPVarInt(playerid, "alc_delay") > gettime()) 
			return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √°√∞√†√≤√º √†√´√™√Æ√£√Æ√´√º √±√´√®√∏√™√Æ√¨ √∑√†√±√≤√Æ");
		switch(listitem) {
			case 0: {
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
				if(pData[playerid][pSex] == 1) MeAction(playerid, "√¢√ß√ø√´ √°√≥√≤√ª√´√™√≥ √Ø√®√¢√†");
				else MeAction(playerid, "√¢√ß√ø√´√† √°√≥√≤√ª√´√™√≥ √Ø√®√¢√†");
			}
			case 1: {
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
				if(pData[playerid][pSex] == 1) MeAction(playerid, "√¢√ß√ø√´ √°√≥√≤√ª√´√™√≥ √¢√®√≠√†");
				else MeAction(playerid, "√¢√ß√ø√´√† √°√≥√≤√ª√´√™√≥ √¢√®√≠√†");
			}
			case 2: {
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
				if(pData[playerid][pSex] == 1) MeAction(playerid, "√¢√ß√ø√´ √°√≥√≤√ª√´√™√≥ √∏√†√¨√Ø√†√≠√±√™√Æ√£√Æ");
				else MeAction(playerid, "√¢√ß√ø√´√† √°√≥√≤√ª√´√™√≥ √∏√†√¨√Ø√†√≠√±√™√Æ√£√Æ");
			}
			case 3: {
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
				if(pData[playerid][pSex] == 1) MeAction(playerid, "√¢√ß√ø√´ √°√≥√≤√ª√´√™√≥ √¢√Æ√§√™√®");
				else MeAction(playerid, "√¢√ß√ø√´√† √°√≥√≤√ª√´√™√≥ √¢√Æ√§√™√®");
			}
			case 4: {
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
				if(pData[playerid][pSex] == 1) MeAction(playerid, "√¢√ß√ø√´ √°√≥√≤√ª√´√™√≥ √™√Æ√≠√º√ø√™√†");
				else MeAction(playerid, "√¢√ß√ø√´√† √°√≥√≤√ª√´√™√≥ √™√Æ√≠√º√ø√™√†");
			}
			case 5: {
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
				if(pData[playerid][pSex] == 1) MeAction(playerid, "√¢√ß√ø√´ √°√≥√≤√ª√´√™√≥ √¢√®√±√™√®");
				else MeAction(playerid, "√¢√ß√ø√´√† √°√≥√≤√ª√´√™√≥ √¢√®√±√™√®");
			}
			case 6: {
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
				if(pData[playerid][pSex] == 1) MeAction(playerid, "√¢√ß√ø√´ √°√≥√≤√ª√´√™√≥ √†√°√±√•√≠√≤√†");
				else MeAction(playerid, "√¢√ß√ø√´√† √°√≥√≤√ª√´√™√≥ √†√°√±√•√≠√≤√†");
			}
		}
		SCM(playerid, -1, "√ó√≤√Æ√°√ª √¢√ª√°√∞√Æ√±√®√≤√º √°√≥√≤√ª√´√™√≥ √≠√†√¶√¨√®√≤√• "CMAIN"√™√´√†√¢√®√∏√≥ F");
		SetPVarInt(playerid, "alc_delay", gettime() + 10);
	}
	case 1897: {
		if(response) {
			if(GetPVarInt(playerid, "abonement")) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≥√¶√• √™√≥√Ø√®√´√® √†√°√Æ√≠√•√¨√•√≠√≤");
			if(pData[playerid][pCash] < 200) return SCM(playerid, COLOR_LIGHTGREY, "√Ä√°√Æ√≠√•√¨√•√≠√≤ √±√≤√Æ√®√≤ 200$");
			SetPVarInt(playerid, "abonement", 1);
			if(pData[playerid][pSex] == 1) {
				switch(random(2)) {
					case 0: SetPlayerSkin(playerid, 80);
					case 1: SetPlayerSkin(playerid, 81);
				}
			}
			else SetPlayerSkin(playerid, 193);
			Hook_GivePlayerMoney(playerid, -200);
			GameTextForPlayer(playerid, "~r~-200$", 3000, 1);

			BizInfo[BizEnter{playerid}][bPribil] += 200;
			BizInfo[BizEnter{playerid}][bBank] += 200;
			if(BizInfo[BizEnter{playerid}][bBank] > 10000000) BizInfo[BizEnter{playerid}][bBank] = 10000000;
			UpdateBusinessData(BizEnter{playerid}, "bPribil", BizInfo[BizEnter{playerid}][bPribil]);
			UpdateBusinessData(BizEnter{playerid}, "bBank", BizInfo[BizEnter{playerid}][bBank]);

			SCM(playerid, COLOR_BLUE, "√Ç√ª √™√≥√Ø√®√´√® √†√°√Æ√≠√•√¨√•√≠√≤ √¢ √±√Ø√Æ√∞√≤√ß√†√´");
		}
	}
	case 148: {
		if(!response) return 1;
		if(!pData[playerid][p_premium] && !IsACop(playerid) && !IsAMedic(playerid)) 
			return SCM(playerid, 0xE5B090FF, "√î√≥√≠√™√∂√®√ø √§√Æ√±√≤√≥√Ø√≠√† √≤√Æ√´√º√™√Æ "CCYAN"√Ø√∞√•√¨√®√≥√¨ {e5b090}√®√£√∞√Æ√™√†√¨ √® √£√Æ√±. √±√Æ√≤√∞√≥√§√≠√®√™√†√¨");
	    if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √†√¢√≤√Æ√¨√Æ√°√®√´√•");
	    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_GREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √ß√† √∞√≥√´¬∏√¨");
	   
	   	new vehicleid = GetPlayerVehicleID(playerid);
		switch(listitem) {
	    	case 0: {
	    		
			    count_strobrscop[vehicleid] = 0;
			    if(!status_strobocop[vehicleid])
			    {
			    	KillTimer(timer_strobocop[vehicleid]);
			        timer_strobocop[vehicleid] = SetTimerEx("function_strobocop",300,true,"i",vehicleid);
			        status_strobocop[vehicleid] = true;

			        SCM(playerid, COLOR_MAIN, "√ë√≤√∞√Æ√°√Æ√±√™√Æ√Ø√ª √≠√† √Ω√≤√Æ√¨ √†√¢√≤√Æ√¨√Æ√°√®√´√• √≥√±√Ø√•√∏√≠√Æ √¢√™√´√æ√∑√•√≠√ª");
			        if(!VehInfo[vehicleid - 1][vLamp]) SCM(playerid, -1, "√ó√≤√Æ√°√ª √±√≤√∞√Æ√°√Æ√±√™√Æ√Ø√ª √ß√†√∞√†√°√Æ√≤√†√´√® √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √¢√™√´√æ√∑√®√≤√º √¥√†√∞√ª");

			        return 1;
			    }
			    KillTimer(timer_strobocop[vehicleid]);
			    status_strobocop[vehicleid] = false;
			    new panels, doors, lights, tires;
			    GetVehicleDamageStatus(vehicleid, panels, doors, lights, tires);
			    UpdateVehicleDamageStatus(vehicleid, panels, doors, 0, tires);
			    SCM(playerid, COLOR_ERROR, "√ë√≤√∞√Æ√°√Æ√±√™√Æ√Ø√ª √≠√† √Ω√≤√Æ√¨ √†√¢√≤√Æ√¨√Æ√°√®√´√• √Æ√≤√™√´√æ√∑√•√≠√ª");
	    	}
	    }
	}
	case 4985: {
		if(!response) return 1;

		format(string,700, 
		"{9966ff}√å√Æ√§√•√´√º\t{9966ff}√í√Æ√Ø√´√®√¢√Æ\t{9966ff}√è√∞√®√¨√•√∞√≠√†√ø √ß/√Ø\n\
		"CWHITE"Flash\t%s\t"CLITEBLUE"4400$\n\
		"CWHITE"Sultan\t%s\t"CLITEBLUE"7000$\n\
		"CWHITE"Bullet\t%s\t"CLITEBLUE"8500$\n\
		"CWHITE"Cheetah\t%s\t"CLITEBLUE"8000$\n\
		"CWHITE"Turismo\t%s\t"CLITEBLUE"7500$\n\
		"CWHITE"Elegy\t%s\t"CLITEBLUE"6000$\n\
		"CWHITE"Buffalo\t%s\t"CLITEBLUE"5000$\n\
		"CWHITE"ZR-350\t%s\t"CLITEBLUE"5500$\n\
		"CWHITE"Super GT\t%s\t"CLITEBLUE"6500$\n\
		"CWHITE"Uranus\t%s\t"CLITEBLUE"4500$\n\
		"CWHITE"Huntley\t%s\t"CLITEBLUE"3500$\n\
		"CWHITE"Stratum\t%s\t"CLITEBLUE"3000$\n\
		"CWHITE"Jester\t%s\t"CLITEBLUE"4000$\n\
		"CWHITE"Banshee\t%s\t"CLITEBLUE"7000$\n\
		"CWHITE"Comet\t%s\t"CLITEBLUE"4500$\n\
		"CWHITE"Infernus\t%s\t"CLITEBLUE"12000$", 
		af_fuel_types[0],
		af_fuel_types[1],
		af_fuel_types[2],
		af_fuel_types[3],
		af_fuel_types[4],
		af_fuel_types[5],
		af_fuel_types[6],
		af_fuel_types[7],
		af_fuel_types[8],
		af_fuel_types[9],
		af_fuel_types[10],
		af_fuel_types[11],
		af_fuel_types[12],
		af_fuel_types[13],
		af_fuel_types[14],
		af_fuel_types[15]);
		SPD(playerid,4986,DIALOG_STYLE_TABLIST_HEADERS,""CBLUE"√Ç√ª√°√•√∞√®√≤√• √†√¢√≤√Æ√¨√Æ√°√®√´√º", string, "Seleccione", "Cerrar");
	}
	case 4986: {
		if(!response) return 1;
		switch(listitem) {
			case 0: {
				af_player_carmodel[playerid] = 565;
				af_player_details[playerid] = 10;
			}
			case 1: {
				af_player_carmodel[playerid] = 560;
				af_player_details[playerid] = 10;
			}
			case 2: {
				af_player_carmodel[playerid] = 541;
				af_player_details[playerid] = 10;
			}
			case 3: {
				af_player_carmodel[playerid] = 415;
				af_player_details[playerid] = 8;
			}
			case 4: {
				af_player_carmodel[playerid] = 451;
				af_player_details[playerid] = 6;
			}
			case 5: {
				af_player_carmodel[playerid] = 562;
				af_player_details[playerid] = 8;
			}
			case 6: {
				af_player_carmodel[playerid] = 402;
				af_player_details[playerid] = 8;
			}
			case 7: {
				af_player_carmodel[playerid] = 477;
				af_player_details[playerid] = 8;
			}
			case 8: {
				af_player_carmodel[playerid] = 506;
				af_player_details[playerid] = 8;
			}
			case 9: {
				af_player_carmodel[playerid] = 558;
				af_player_details[playerid] = 8;
			}
			case 10: {
				af_player_carmodel[playerid] = 579;
				af_player_details[playerid] = 6;
			}
			case 11: {
				af_player_carmodel[playerid] = 561;
				af_player_details[playerid] = 8;
			}
			case 12: {
				af_player_carmodel[playerid] = 559;
				af_player_details[playerid] = 8;
			}
			case 13: {
				af_player_carmodel[playerid] = 429;
				af_player_details[playerid] = 6;
			}
			case 14: {
				af_player_carmodel[playerid] = 480;
				af_player_details[playerid] = 4;
			}
			case 15: {
				af_player_carmodel[playerid] = 411;
				af_player_details[playerid] = 15;
			}
		}
		af_carList[playerid]=listitem;
		af_player_fueltype[playerid] = af_fuel_types_num[listitem];
		if(af_player_fueltype[playerid] == 2) af_player_details[playerid] += 2;
		PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
		af_player_status[playerid] = true;
		SetPlayerCheckpoint(playerid, 2159.2666,-2253.6729,13.3026, 3);
		SCMF(playerid, COLOR_BLUE, "√Ç√ª √¢√ª√°√∞√†√´√® {FFCD00}%s "CBLUE"√± "CORANGE"%s "CBLUE"√§√¢√®√£√†√≤√•√´√•√¨", VehicleNames[af_player_carmodel[playerid] - 400], (af_player_fueltype[playerid] == 2) ? ("√§√®√ß√•√´√º√≠√ª√¨") : ("√°√•√≠√ß√®√≠√Æ√¢√ª√¨"));
		SCM(playerid, COLOR_BLUE, "√é√≤√Ø√∞√†√¢√´√ø√©√≤√•√±√º √¢ √∞√†√°√Æ√∑√≥√æ √ß√Æ√≠√≥ √® √≠√†√∑√≠√®√≤√• √±√°√Æ√∞√™√≥ √Æ√™√Æ√´√Æ √™√Æ√≠√¢√•√©√•√∞√†");
	}
	case 197: {
		if(!response) return 1;
		if(!strlen(inputtext)) return show_paydialog_biz(playerid);
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return show_paydialog_biz(playerid);
			}
		}
		new price_pay, delt = 30-pData[playerid][newbiz_Pay];
		if(pData[playerid][unikauto_Have] != 0) price_pay = 25100;
		else if(pData[playerid][autoHave] != 0) price_pay = 11050;
		else if(pData[playerid][food_have] != 0) price_pay = 1140;
		else if(pData[playerid][prok_have] != 0) price_pay = 4560;
		else if(pData[playerid][kiosk_have] != 0) price_pay = 2980;
		price_pay = price_pay*strval(inputtext);
		if(delt < strval(inputtext)) return SCM(playerid, 0xE5B090FF, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Æ√Ø√´√†√≤√®√≤√º √°√®√ß√≠√•√± √°√Æ√´√•√• √∑√•√¨ √≠√† 30 √§√≠√•√©");
		if(pData[playerid][pBank] < price_pay) return SCMF(playerid, 0xE5B090FF, "√Ñ√´√ø √Æ√Ø√´√†√≤√ª √°√®√ß√≠√•√±√† √≠√† √¢√¢√•√§¬∏√≠√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √§√≠√•√© √≤√∞√•√°√≥√•√≤√±√ø %d$", price_pay);
		pData[playerid][newbiz_Pay] += strval(inputtext);
		UpdatePlayerData(playerid,"newbiz_Pay",pData[playerid][newbiz_Pay]);
		new strgmt[26];
		format(strgmt, sizeof strgmt, "~r~-%d$ ~n~~r~ bank", price_pay);
		GameTextForPlayer(playerid, strgmt, 3000, 1);
		pData[playerid][pBank] -= price_pay;
		UpdatePlayerData(playerid, "pBank", pData[playerid][pBank]);
	    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		SCMF(playerid, COLOR_PALEGREEN, "√Ç√ª √Æ√Ø√´√†√≤√®√´√® √±√¢√Æ√© √°√®√ß√≠√•√± √•√π¬∏ √≠√† {FFCD00}%d √§√≠√•√©"CPALEGREEN". √ë √Ç√†√∏√•√£√Æ √±√∑¬∏√≤√† √°√ª√´√Æ √±√≠√ø√≤√Æ {009900}%d$", strval(inputtext), price_pay);
	}
	case 119:
	{
		if(!response) return 1;
		switch(listitem)
		{
			case 0: player_stats(playerid);
			case 1: show_settings(playerid);
			case 2: allcmds_dialog(playerid);
			case 3: SPD(playerid, 772, DIALOG_STYLE_INPUT, ""CMAIN"√ë√¢√ø√ß√º √± √†√§√¨√®√≠√®√±√≤√∞√†√∂√®√•√©", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√¢√Æ¬∏ √Æ√°√∞√†√π√•√≠√®√• √§√´√ø √†√§√¨√®√≠√®√±√≤√∞√†√∂√®√® √¢ √Ø√Æ√´√• √≠√®√¶√•\n\n√Ç√ª √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √™√Æ√¨√†√≠√§√≥ "CLITEBLUE"/report "CWHITE"√§√´√ø √°√Æ√´√•√• √°√ª√±√≤√∞√Æ√£√Æ √Æ√≤√Ø√∞√†√¢√´√•√≠√®√ø\n√è√Æ√¨√≠√®√≤√•, √∑√≤√Æ √¢√†√∏√• √Æ√°√∞√†√π√•√≠√®√• √≠√• √•√§√®√≠√±√≤√¢√•√≠√≠√Æ√• √® √†√§√¨√®√≠√®√±√≤√∞√†√∂√®√® √≠√≥√¶√≠√Æ\n√¢√∞√•√¨√ø √≠√† √Æ√°√∞√†√°√Æ√≤√™√≥ √¢√±√•√µ √Ø√Æ√±√≤√≥√Ø√†√æ√π√®√µ √¢√Æ√Ø√∞√Æ√±√Æ√¢ √® √¶√†√´√Æ√°", "√é√≤√Ø√∞√†√¢√®√≤√º", "Siguiente");
			case 4: SPD(playerid, 118, DIALOG_STYLE_LIST, ""CPALEGREEN"√Å√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√º", "[1] Google Authenticator\n[2] √ä√Æ√§ √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√®\n[3] √à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ √ß√†√π√®√≤√•\n{00cc66}[4] Cambio √Ø√†√∞√Æ√´√º\n{0099ff}[5] √ë√≤√†√≤√≥√± √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√®\n"CGREY"[6] √è√Æ√§√≤√¢√•√∞√§√®√≤√º E-Mail", "Seleccione", "Siguiente");
			case 5:
			{
				callcmd::donate(playerid);
			}
			case 6: callcmd::gps(playerid);
			case 7:
			{
				new r_str[] = 
				""CPALEGREEN"1. √à√£√∞√Æ√¢√Æ√© √Ø√∞√Æ√∂√•√±√±\n\
				"CWHITE"- √á√†√Ø√∞√•√π√•√≠√Æ √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √∑√®√≤√•√∞√±√™√®√• √Ø√∞√Æ√£√∞√†√¨√¨√ª, CLEO √±√™√∞√®√Ø√≤√ª √® √´√æ√°√Æ√• √±√≤√Æ√∞√Æ√≠√≠√•√• √è√é\n\
				- √á√†√Ø√∞√•√π√•√≠√Æ √≥√°√®√©√±√≤√¢√Æ √®√´√® √Ø√∞√®√∑√®√≠√•√≠√®√• √¥√®√ß√®√∑√•√±√™√Æ√£√Æ √¢√∞√•S√≠ √®√£√∞√Æ√™√†√¨ √°√•√ß √Ø√∞√®√∑√®√≠√ª\n\
				- √á√†√Ø√∞√•√π√•√≠√Æ √≥√°√®√©√±√≤√¢√Æ √Ø√•√∞√±√Æ√≠√†√¶√† √Ø√≥√≤√•√¨ √≠√†√•√ßS√≠ √®√´√® √±√≤√∞√•√´√º√°√ª √± √¢√Æ√§√®√≤√•√´√º√±√™√Æ√£√Æ √¨√•√±√≤√†\n\
				- √á√†√Ø√∞√•√π√•√≠√Æ √≥√µ√Æ√§√®√≤√º √≠√† √Ø√†√≥√ß√≥ √¢ √∂√•√´√ø√µ √≥√µ√ÆS√≠ √Æ√≤ √Ø√Æ√£√Æ√≠√®, √±√¨√•√∞√≤√® √® √≤. √Ø.\n\
				- √á√†√Ø√∞√•√π√•√≠√Æ √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√• √°√†√£√Æ√¢ (√Æ√∏√®√°√Æ√™ √¨√ÆS√≠) √® √´√æ√°√ª√µ √≠√•√®√±√Ø√∞√†√¢√≠√Æ√±√≤√•√© √¨√ÆS√≠ √®√´√® √®√£√∞√ª\n\
				- √á√†√Ø√∞√•√π√•√≠√Æ √ß√´√Æ√≥√Ø√Æ√≤√∞√•√°√´√•√≠√®√• √®√£√∞√Æ√¢√ª√¨√® √¢√Æ√ß√¨√Æ√¶√≠√Æ√±√≤√ø√¨√® √§√´√ø √±√Æ√ßS√≠√≠√®√ø √≠√•√≥√§√Æ√°√±√≤√¢ √®√£√∞√Æ√™√†√¨\n\
				\n\
				"CPALEGREEN"2. √è√∞√Æ√∂√•√±√± √Æ√°√π√•√≠√®√ø\n\
				"CWHITE"- √á√†√Ø√∞√•√π√•√≠ √¨√†√≤ √® √´√æ√°√ª√• √Æ√±√™√Æ√∞√°√´√•√≠√®√ø √§√∞√≥√£√®√µ √®√£√∞√Æ√™√Æ√¢\n\
				- √á√†√Ø√∞√•√π√•√≠√ª √≥√£√∞√Æ√ß√ª √§√∞√≥√£√®√¨ √®√£√∞√Æ√™√†√¨ (√≠√• √Æ√≤√≠√Æ√±√ø√π√®√•√±√ø √™ √®√£√∞√Æ√¢√Æ√¨√≥ √Ø√∞√Æ√∂√•√±√±√≥)\n\
				- √á√†√Ø√∞√•√π√•√≠√Æ √Ø√®√±√†√≤√º √¢ √¢√•√∞√µ√≠√•√¨ √∞√•√£√®√±√≤√∞√• (Caps Lock) √´√®√°√Æ √≤√∞√†√≠√±√´√®√≤√Æ√¨\n\
				- √á√†√Ø√∞√•√π√•√≠ √¥√´√≥√§ (√∑√†√±√≤√Æ√• √Ø√Æ√¢√≤√Æ√∞√•√≠√®√• √°√•√±√±√¨√ª√±√´√•√≠√≠√ª√µ √´√®√°√Æ √Æ√§√®√≠√†√™√Æ√¢√ª√µ √¥√∞√†√ß)\n\
				- √á√†√Ø√∞√•√π√•√≠√† √´√æ√°√†√ø √∞√•√™√´√†√¨√† √±√≤√Æ√∞√Æ√≠√≠√®√µ √∞√•√±√≥√∞√±√Æ√¢\n\
				\n\
				"CPALEGREEN"3. √Ä√§√¨√®√≠√®√±√≤√∞√†√∂√®√ø √±√•√∞√¢√•√∞√†\n\
				"CWHITE"- √Ç √±√´√≥√∑√†√• √Æ√∏√®√°√Æ√∑√≠√Æ√£√Æ √≠√†√™√†√ß√†√≠√®√ø, √¢√ªS√≠√≠√≠√Æ√£√Æ √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√Æ√¨, √±√Æ√Æ√°√π√®√≤√• √Æ√° √Ω√≤√Æ√¨ √≠√† √¥√Æ√∞√≥√¨√•\n\
				- √Ä√§√¨√®√≠√®√±√≤√∞√†√∂√®√ø √±√†√¨√Æ√±√≤√Æ√ø√≤√•√´√º√≠√Æ √¢√ª√°√®√∞√†√•√≤ √≠√†√™√†√ß√†√≠√®√• √§√´√ø √™√†√™√Æ√£√Æ-√´√®√°√Æ √®√£√∞√Æ√™√†\n\
				- √ç√•√Æ√°√µ√Æ√§√®√¨√Æ √±√Æ√Æ√°√π√†√≤√º √†√§√¨√®√≠√®√±√≤√∞√†√∂√®√® √±√•√∞√¢√•√∞√† √Æ √´√æ√°√ª√µ √≠√†√∞√≥√∏√•√≠√®√ø√µ √Ø√∞√†√¢√®√´ √Æ√≤ √§√∞√≥√£√®√µ √®√£√∞√Æ√™√Æ√¢\n\
				- √ç√†√™√†√ß√†√≠√®√• √Æ√≤ √†√§√¨√®√≠√®√±√≤√∞√†√∂√®√® √¨√Æ√¶√•√≤ √°√ª√≤√º √Ø√∞√®√¨√•√≠√•√≠√Æ √∑√•√∞√•√ß √¢√∞√•√¨√ø (√≠√†√Ø√∞√®√¨√•√∞, √Ø√∞√® √¶√†√´√Æ√°√• √≠√† √®√£√∞√Æ√™√†)";
				
				return SPD(playerid, 445, DIALOG_STYLE_MSGBOX, "{3cb300}√è√∞√†√¢√®√´√† √±√•√∞√¢√•√∞√†", r_str, "Siguiente", "Cerrar");
			}
			case 8:
			{
				SPD(playerid, 7456, DIALOG_STYLE_INPUT, "{ffcf00}√à√ß√¨√•√≠√•√≠√®√• √®√¨√•√≠√®", "\
					"CWHITE"√á√§√•√±√º √Ç√ª √¨√Æ√¶√•√≤√• √±√¨√•√≠√®√≤√º √±√¢√Æ¬∏ √®√¨√ø, √•√±√´√® √Æ√≠√Æ √≠√• √Ø√Æ√§√µ√Æ√§√®√≤ √Ø√Æ√§ Role Play √Ø√∞√†√¢√®√´√†.\n\
					√Ç √Æ√±√≤√†√´√º√≠√ª√µ √±√´√≥√∑√†√ø√µ √±√¨√•√≠√† √®√¨√•√≠√® √Æ√±√≥√π√•√±√≤√¢√´√ø√•√≤√±√ø √∑√•√∞√•√ß "CLITEBLUE"/menu > √å√†√£√†√ß√®√≠.\n\
					\n\
					{00CC66}√î√Æ√∞√¨√†√≤ RP √®√¨√•√≠√®: √à√¨√ø_√î√†√¨√®√´√®√ø.\n\
					\n\
					"CWHITE"√Ç√¢√•√§√®√≤√• √¶√•√´√†√•√¨√Æ√• √Ç√†√¨√® √®√¨√ø √¢ √Ø√Æ√´√• √≠√®√¶√•.\n\
					√Ñ√Æ√Ø√≥√±√≤√®√¨√ª √≤√Æ√´√º√™√Æ √´√†√≤√®√≠√±√™√®√• √±√®√¨√¢√Æ√´√ª:",
				"S√≠√´√•√•", "Siguiente");
			}
			case 9: callcmd::phone(playerid);
			case 10: show_inventory(playerid);
			case 11:
			{
				if(pData[playerid][pLevel] != 1) 
					return SPD(playerid, 445, DIALOG_STYLE_MSGBOX, ""CPALEGREEN"Pomotok(nosabemos)", ""CWHITE"La activaci√≥n del interruptor auxiliar solo est√° disponible en 1 nivel", "Siguiente", "Cerrar");
				if(pData[playerid][pPromoUsed]) return SPD(playerid, 445, DIALOG_STYLE_MSGBOX, ""CPALEGREEN"√è√∞√Æ√¨√Æ√™√Æ√§", ""CWHITE"√Ç√ª √≥√¶√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√´√® √Ø√∞√Æ√¨√Æ√™√Æ√§", "Siguiente", "Cerrar");

				promo_dialog(playerid);
			}
			case 12:
			{
				callcmd::pame(playerid);
			}
		}
	}
	case 488:
	{
		if(!response) return 1;

		promo_dialog(playerid);
	}
	case 1829: {
		if(!response) return 1;
		switch(listitem) {
			case 0: mysql_tquery(mysql_Handle, "SELECT `Name`, `pMember`, `healths_count` FROM `accounts` WHERE `healths_count` <> '0' ORDER BY `healths_count` LIMIT 10", "sotr_LS", "i", playerid);
			case 1: mysql_tquery(mysql_Handle, "SELECT `Name`, `pMember`, `healths_count` FROM `accounts` WHERE `healths_count` <> '0' ORDER BY `healths_count` LIMIT 10", "sotr_SF", "i", playerid);
			case 2: mysql_tquery(mysql_Handle, "SELECT `Name`, `pMember`, `healths_count` FROM `accounts` WHERE `healths_count` <> '0' ORDER BY `healths_count` LIMIT 10", "sotr_LV", "i", playerid);
			case 3: mysql_tquery(mysql_Handle, "SELECT `Name`, `pMember`, `healths_count` FROM `accounts` WHERE `healths_count` <> '0' ORDER BY `healths_count` LIMIT 10", "sotr_all", "i", playerid);
		}
	}
	case 282: {
		if(!response) return 1;
		new veh_id = GetPlayerVehicleID(playerid), num_car, tune_query[220];
		if(house_carid[playerid][0] && veh_id == house_carid[playerid][0]) num_car = 0;
		else if(house_carid[playerid][1] && veh_id == house_carid[playerid][1]) num_car = 1;
		else if(house_carid[playerid][2] && veh_id == house_carid[playerid][2]) num_car = 2;
		if(!strcmp(inputtext, "√í√æ√≠√®√≠√£ √™√Æ√´¬∏√±")) {
			if(!pData[playerid][t_wheel][num_car]) 
				return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [049]");
			RemoveVehicleComponent(veh_id, pData[playerid][t_wheel][num_car]);
			pData[playerid][t_wheel][num_car] = 0;
			SCM(playerid, 0xFF6633FF, "√í√æ√≠√®√≠√£ √™√Æ√´¬∏√± √≥S√≠√´¬∏√≠");
		}
		else if(!strcmp(inputtext, "√É√®√§√∞√†√¢√´√®√™√†")) {
			if(!pData[playerid][t_hydraulics][num_car]) 
				return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [050]");
			RemoveVehicleComponent(veh_id, 1087);
			pData[playerid][t_hydraulics][num_car] = 0;
			SCM(playerid, 0xFF6633FF, "√É√®√§√∞√†√¢√´√®√™√† √≥S√≠√´√•√≠√†");
		}
		else if(!strcmp(inputtext, "√ë√≤√•√∞√•√Æ√±√®√±√≤√•√¨√†")) {
			if(!pData[playerid][t_stereo][num_car]) 
				return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [051]");
			RemoveVehicleComponent(veh_id, 1086);
			pData[playerid][t_stereo][num_car] = 0;
			SCM(playerid, 0xFF6633FF, "√ë√≤√•√∞√•√Æ√±√®√±√≤√•√¨√† √≥S√≠√´√•√≠√†");
		}
		else if(!strcmp(inputtext, "√è√Æ√™√∞√†√±√Æ√∑√≠√†√ø √∞√†√°√Æ√≤√†")) {
			if(pData[playerid][t_paintjob][num_car] == -1) 
				return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [052]");
			ChangeVehiclePaintjob(veh_id, 3);
			pData[playerid][t_paintjob][num_car] = -1;
			SCM(playerid, 0xFF6633FF, "√è√Æ√™√∞√†√±√Æ√∑√≠√†√ø √∞√†√°√Æ√≤√† √≥S√≠√´√•√≠√†");
		}
		else if(!strcmp(inputtext, "√ç√•√Æ√≠√ª")) {
			if(pData[playerid][t_neon_num][num_car] == -1) 
				return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [052]");
			RemoveNeonFromVehicle(veh_id);
			pData[playerid][t_neon_num][num_car] = -1;
			SCM(playerid, 0xFF6633FF, "√ç√•√Æ√≠√ª √≥S√≠√´√•√≠√ª");
		}
		if(house_carid[playerid][0] && veh_id == house_carid[playerid][0]) 
			mysql_format(mysql_Handle, tune_query, sizeof(tune_query), "UPDATE `accounts` SET `t_neon_num_1` = %d, `t_wheel_car_1` = %d, `t_hydraulics_car_1` = %d, `t_stereo_car_1` = %d, `t_paintjob_car_1` = %d WHERE `Name` = '%s'", pData[playerid][t_neon_num][num_car], pData[playerid][t_wheel][num_car], pData[playerid][t_hydraulics][num_car], pData[playerid][t_stereo][num_car], pData[playerid][t_paintjob][num_car], GetName(playerid));
		else if(house_carid[playerid][1] && veh_id == house_carid[playerid][1]) 
			mysql_format(mysql_Handle, tune_query, sizeof(tune_query), "UPDATE `accounts` SET `t_neon_num_2` = %d, `t_wheel_car_2` = %d, `t_hydraulics_car_2` = %d, `t_stereo_car_2` = %d, `t_paintjob_car_2` = %d WHERE `Name` = '%s'", pData[playerid][t_neon_num][num_car], pData[playerid][t_wheel][num_car], pData[playerid][t_hydraulics][num_car], pData[playerid][t_stereo][num_car], pData[playerid][t_paintjob][num_car], GetName(playerid));
		else if(house_carid[playerid][2] && veh_id == house_carid[playerid][2]) 
			mysql_format(mysql_Handle, tune_query, sizeof(tune_query), "UPDATE `accounts` SET `t_neon_num_3` = %d, `t_wheel_car_3` = %d, `t_hydraulics_car_3` = %d, `t_stereo_car_3` = %d, `t_paintjob_car_3` = %d WHERE `Name` = '%s'", pData[playerid][t_neon_num][num_car], pData[playerid][t_wheel][num_car], pData[playerid][t_hydraulics][num_car], pData[playerid][t_stereo][num_car], pData[playerid][t_paintjob][num_car], GetName(playerid));
		mysql_tquery(mysql_Handle, tune_query);
		PlayerPlaySound(playerid, 1055, 0.0, 0.0, 0.0);
	}

	case 5645: {
		if(!response) return 1;
		if(kiosk1_owner != -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ω√≤√Æ√£√Æ √°√®√ß√≠√•√±√† √≥√¶√• √•√±√≤√º √¢√´√†√§√•√´√•√∂");
		if(pData[playerid][pCash] < 500000) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √§√•√≠√•√£ √§√´√ø √Ø√Æ√™√≥√Ø√™√®");
		kiosk1_owner = pData[playerid][pID];
		kiosk1_bank=0;
		mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `kiosk1_bank` = 0");
		pData[playerid][kiosk_have] = 1;
		Hook_GivePlayerMoney(playerid, -500000);
		GameTextForPlayer(playerid, "~r~-500000$", 3000, 1);
		UpdatePlayerData(playerid, "kiosk_have", 1);
		mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `kiosk1_owner` = %d", kiosk1_owner);
		mysql_tquery(mysql_Handle, string);
		PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
		new fmt_3d[55];
		format(fmt_3d, sizeof(fmt_3d), "√Ç√´√†√§√•√´√•√∂: "CWHITE"%s", pData[playerid][pName]);
		UpdateDynamic3DTextLabelText(kiosk_info_1, 0x4682B4FF, fmt_3d);
		SCM(playerid, COLOR_MAIN, "√Å√®√ß√≠√•√± √°√ª√´ √≥√±√Ø√•√∏√≠√Æ √Ø√∞√®√Æ√°√∞√•√≤√•√≠ √ß√† "CLITEBLUE"500000$");
		SCM(playerid, COLOR_ORANGE, "√ç√• √ß√†√°√≥√§√º√≤√• √Æ√Ø√´√†√≤√®√≤√º √•√£√Æ √¢ √±√Ø√•√∂√®√†√´√º√≠√Æ√¨ √∞√†√ß√§√•√´√• √°√†√≠√™√†");
		pData[playerid][newbiz_Pay]=3;
		UpdatePlayerData(playerid,"newbiz_Pay",3);
	}
	case 5845: {
		if(!response) return 1;
		if(unikautoOwner != -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ω√≤√Æ√£√Æ √°√®√ß√≠√•√±√† √≥√¶√• √•√±√≤√º √¢√´√†√§√•√´√•√∂");
		if(pData[playerid][pCash] < 36000000) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √§√•√≠√•√£ √§√´√ø √Ø√Æ√™√≥√Ø√™√®");
		unikautoOwner = pData[playerid][pID];
		unikbankCount=0;
		mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `unikbankCount` = 0");
		pData[playerid][unikauto_Have] = 1;
		Hook_GivePlayerMoney(playerid, -36000000);
		GameTextForPlayer(playerid, "~r~-36000000$", 3000, 1);
		UpdatePlayerData(playerid, "unikauto_Have", 1);
		mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `unikautoOwner` = %d", unikautoOwner);
		mysql_tquery(mysql_Handle, string);
		PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
		new fmt_3d[110];
		format(fmt_3d, sizeof(fmt_3d), "√Ä√¢√≤√Æ√±√†√´√Æ√≠ √Ω√™√±√™√´√æ√ß√®√¢√≠√ª√µ √†√¢√≤√Æ\n\n{4682b4}√Ç√´√†√§√•√´√•√∂: "CWHITE"%s", pData[playerid][pName]);
		UpdateDynamic3DTextLabelText(unik3dtext, 0x33AA33FF, fmt_3d);
		SCM(playerid, COLOR_MAIN, "√Å√®√ß√≠√•√± √°√ª√´ √≥√±√Ø√•√∏√≠√Æ √Ø√∞√®√Æ√°√∞√•√≤√•√≠ √ß√† "CLITEBLUE"36000000$");
		SCM(playerid, COLOR_ORANGE, "√ç√• √ß√†√°√≥√§√º√≤√• √Æ√Ø√´√†√≤√®√≤√º √•√£√Æ √¢ √±√Ø√•√∂√®√†√´√º√≠√Æ√¨ √∞√†√ß√§√•√´√• √°√†√≠√™√†");
		pData[playerid][newbiz_Pay]=3;
		UpdatePlayerData(playerid,"newbiz_Pay",3);
	}
	case 5646: {
		if(!response) return 1;
		if(kiosk2_owner != -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ω√≤√Æ√£√Æ √°√®√ß√≠√•√±√† √≥√¶√• √•√±√≤√º √¢√´√†√§√•√´√•√∂");
		if(pData[playerid][pCash] < 500000) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √§√•√≠√•√£ √§√´√ø √Ø√Æ√™√≥√Ø√™√®");
		kiosk2_owner = pData[playerid][pID];
		kiosk2_bank=0;
		mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `kiosk2_bank` = 0");
		pData[playerid][kiosk_have] = 2;
		Hook_GivePlayerMoney(playerid, -500000);
		GameTextForPlayer(playerid, "~r~-500000$", 3000, 1);
		UpdatePlayerData(playerid, "kiosk_have", 2);
		mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `kiosk2_owner` = %d", kiosk2_owner);
		mysql_tquery(mysql_Handle, string);
		PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
		new fmt_3d[55];
		format(fmt_3d, sizeof(fmt_3d), "√Ç√´√†√§√•√´√•√∂: "CWHITE"%s", pData[playerid][pName]);
		UpdateDynamic3DTextLabelText(kiosk_info_2, 0x4682B4FF, fmt_3d);
		SCM(playerid, COLOR_MAIN, "√Å√®√ß√≠√•√± √°√ª√´ √≥√±√Ø√•√∏√≠√Æ √Ø√∞√®√Æ√°√∞√•√≤√•√≠ √ß√† "CLITEBLUE"500000$");
		SCM(playerid, COLOR_ORANGE, "√ç√• √ß√†√°√≥√§√º√≤√• √Æ√Ø√´√†√≤√®√≤√º √•√£√Æ √¢ √±√Ø√•√∂√®√†√´√º√≠√Æ√¨ √∞√†√ß√§√•√´√• √°√†√≠√™√†");
		pData[playerid][newbiz_Pay]=3;
		UpdatePlayerData(playerid,"newbiz_Pay",3);
	}
	case 5647: {
		if(!response) return 1;
		if(kiosk3_owner != -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ω√≤√Æ√£√Æ √°√®√ß√≠√•√±√† √≥√¶√• √•√±√≤√º √¢√´√†√§√•√´√•√∂");
		if(pData[playerid][pCash] < 500000) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √§√•√≠√•√£ √§√´√ø √Ø√Æ√™√≥√Ø√™√®");
		kiosk3_owner = pData[playerid][pID];
		kiosk3_bank=0;
		mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `kiosk3_bank` = 0");
		pData[playerid][kiosk_have] = 3;
		Hook_GivePlayerMoney(playerid, -500000);
		GameTextForPlayer(playerid, "~r~-500000$", 3000, 1);
		UpdatePlayerData(playerid, "kiosk_have", 3);
		mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `kiosk3_owner` = %d", kiosk3_owner);
		mysql_tquery(mysql_Handle, string);
		PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
		new fmt_3d[55];
		format(fmt_3d, sizeof(fmt_3d), "√Ç√´√†√§√•√´√•√∂: "CWHITE"%s", pData[playerid][pName]);
		UpdateDynamic3DTextLabelText(kiosk_info_3, 0x4682B4FF, fmt_3d);
		SCM(playerid, COLOR_MAIN, "√Å√®√ß√≠√•√± √°√ª√´ √≥√±√Ø√•√∏√≠√Æ √Ø√∞√®√Æ√°√∞√•√≤√•√≠ √ß√† "CLITEBLUE"500000$");
		SCM(playerid, COLOR_ORANGE, "√ç√• √ß√†√°√≥√§√º√≤√• √Æ√Ø√´√†√≤√®√≤√º √•√£√Æ √¢ √±√Ø√•√∂√®√†√´√º√≠√Æ√¨ √∞√†√ß√§√•√´√• √°√†√≠√™√†");
		pData[playerid][newbiz_Pay]=3;
		UpdatePlayerData(playerid,"newbiz_Pay",3);
	}
	case 5648: {
		if(!response) return 1;
		if(kiosk4_owner != -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ω√≤√Æ√£√Æ √°√®√ß√≠√•√±√† √≥√¶√• √•√±√≤√º √¢√´√†√§√•√´√•√∂");
		if(pData[playerid][pCash] < 500000) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √§√•√≠√•√£ √§√´√ø √Ø√Æ√™√≥√Ø√™√®");
		kiosk4_owner = pData[playerid][pID];
		kiosk4_bank=0;
		mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `kiosk4_bank` = 0");
		pData[playerid][kiosk_have] = 4;
		Hook_GivePlayerMoney(playerid, -500000);
		GameTextForPlayer(playerid, "~r~-500000$", 3000, 1);
		UpdatePlayerData(playerid, "kiosk_have", 4);
		mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `kiosk4_owner` = %d", kiosk4_owner);
		mysql_tquery(mysql_Handle, string);
		PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
		new fmt_3d[55];
		format(fmt_3d, sizeof(fmt_3d), "√Ç√´√†√§√•√´√•√∂: "CWHITE"%s", pData[playerid][pName]);
		UpdateDynamic3DTextLabelText(kiosk_info_4, 0x4682B4FF, fmt_3d);
		SCM(playerid, COLOR_MAIN, "√Å√®√ß√≠√•√± √°√ª√´ √≥√±√Ø√•√∏√≠√Æ √Ø√∞√®√Æ√°√∞√•√≤√•√≠ √ß√† "CLITEBLUE"500000$");
		SCM(playerid, COLOR_ORANGE, "√ç√• √ß√†√°√≥√§√º√≤√• √Æ√Ø√´√†√≤√®√≤√º √•√£√Æ √¢ √±√Ø√•√∂√®√†√´√º√≠√Æ√¨ √∞√†√ß√§√•√´√• √°√†√≠√™√†");
		pData[playerid][newbiz_Pay]=3;
		UpdatePlayerData(playerid,"newbiz_Pay",3);
	}

	case 9432: {
		if(!response) return 1;
		if(prok1_owner != -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ω√≤√Æ√£√Æ √Ø√≥√≠√™√≤√† √≥√¶√• √•√±√≤√º √¢√´√†√§√•√´√•√∂");
		if(pData[playerid][pCash] < 2000000) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √§√•√≠√•√£ √§√´√ø √Ø√Æ√™√≥√Ø√™√®");
		prok1_owner = pData[playerid][pID];
		prok1_bank=0;
		mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `prok1_bank` = 0");
		pData[playerid][prok_have] = 1;
		Hook_GivePlayerMoney(playerid, -2000000);
		GameTextForPlayer(playerid, "~r~-2000000$", 3000, 1);
		UpdatePlayerData(playerid, "prok_have", 1);
		mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `prok1_owner` = %d", prok1_owner);
		mysql_tquery(mysql_Handle, string);
		PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
		new fmt_3d[55];
		format(fmt_3d, sizeof(fmt_3d), "√Ç√´√†√§√•√´√•√∂: "CWHITE"%s", pData[playerid][pName]);
		UpdateDynamic3DTextLabelText(prok_info_1, 0x4682B4FF, fmt_3d);
		SCM(playerid, COLOR_MAIN, "√è√≥√≠√™√≤ √Ø√∞√Æ√™√†√≤√† √≥√±√Ø√•√∏√≠√Æ √Ø√∞√®√Æ√°√∞√•√≤√•√≠ √ß√† "CLITEBLUE"2000000$");
		SCM(playerid, COLOR_ORANGE, "√ç√• √ß√†√°√≥√§√º√≤√• √Æ√Ø√´√†√≤√®√≤√º √•√£√Æ √¢ √±√Ø√•√∂√®√†√´√º√≠√Æ√¨ √∞√†√ß√§√•√´√• √°√†√≠√™√†");
		pData[playerid][newbiz_Pay]=3;
		UpdatePlayerData(playerid,"newbiz_Pay",3);
	}

	case 5662: {
		if(!response) return 1;
		switch(listitem) {
			case 0: SCMF(playerid,-1,"√Ç√†√∏ √°√®√ß√≠√•√± √Æ√Ø√´√†√∑√•√≠ √≠√† {ff9933}%d √®√ß 30 √§√≠√•√©",pData[playerid][newbiz_Pay]);
			case 1: SPD(playerid, 4567, DIALOG_STYLE_LIST,""CMAIN"√ä√†√±√±√†", ""CWHITE"[1] √è√Æ√±√¨√Æ√≤√∞√•√≤√º √±√≥√¨√¨√≥ √¢ √™√†√±√±√•\n[2] √è√Æ√´√Æ√¶√®√≤√º √§√•√≠√º√£√® √¢ √™√†√±√±√≥\n[3] √ë√≠√ø√≤√º √§√•√≠√º√£√® √± √™√†√±√±√ª", "Seleccione", "Cerrar");
			case 2: callcmd::sellbiz(playerid);
			case 3: SPD(playerid, 4895, DIALOG_STYLE_INPUT,"{FFCD00}√è√∞√ÆS√≠√¶√†",""CWHITE"√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø √¢√¢√•√§√®√≤√• √∑√•√∞√•√ß √Ø√∞√Æ√°√•√´\n√Ø√†√∞√†√¨√•√≤√∞√ª √§√´√ø √Ø√∞√ÆS√≠√¶√® √°√®√ß√≠√•√±√†\n\n"CLITEBLUE"[id √®√£√∞√Æ√™√†] [√∂√•√≠√†]","S√≠√´√•√•","Cerrar");
		}
	}
	case 5962: {
		if(!response) return 1;
		switch(listitem) {
			case 0: SCMF(playerid,-1,"√Ç√†√∏ √°√®√ß√≠√•√± √Æ√Ø√´√†√∑√•√≠ √≠√† {ff9933}%d √®√ß 30 √§√≠√•√©",pData[playerid][newbiz_Pay]);
			case 1: SPD(playerid, 4967, DIALOG_STYLE_LIST,""CMAIN"√ä√†√±√±√†", ""CWHITE"[1] √è√Æ√±√¨√Æ√≤√∞√•√≤√º √±√≥√¨√¨√≥ √¢ √™√†√±√±√•\n[2] √è√Æ√´√Æ√¶√®√≤√º √§√•√≠√º√£√® √¢ √™√†√±√±√≥\n[3] √ë√≠√ø√≤√º √§√•√≠√º√£√® √± √™√†√±√±√ª", "Seleccione", "Cerrar");
			case 2: callcmd::sellbiz(playerid);
			case 3: SPD(playerid, 4895, DIALOG_STYLE_INPUT,"{FFCD00}√è√∞√ÆS√≠√¶√†",""CWHITE"√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø √¢√¢√•√§√®√≤√• √∑√•√∞√•√ß √Ø√∞√Æ√°√•√´\n√Ø√†√∞√†√¨√•√≤√∞√ª √§√´√ø √Ø√∞√ÆS√≠√¶√® √°√®√ß√≠√•√±√†\n\n"CLITEBLUE"[id √®√£√∞√Æ√™√†] [√∂√•√≠√†]","S√≠√´√•√•","Cerrar");
		}
	}
	case 4967: {
		if(!response) return 1;
		switch(listitem) {
			case 0: {
				format(string, 40, ""CWHITE"√Ç √™√†√±√±√•: "CMAIN"%i$", unikbankCount);
				SPD(playerid, 0, 0, "{FFCD00}√ä√†√±√±√† √°√®√ß√≠√•√±√†", string, "Cerrar", "");
			}
			case 1: SPD(playerid, 4791, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √°√®√ß√≠√•√±√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √™√†√±√±√≥:", "√è√Æ√´√Æ√¶√®√≤√º", "Cerrar");
			case 2: SPD(playerid, 4792, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √°√®√ß√≠√•√±√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √¢√ß√ø√≤√º √®√ß √™√†√±√±√ª:", "√Ç√ß√ø√≤√º", "Cerrar");
		}
	}
	case 4791: {
		if(!response) return 1;
		if(!strlen(inputtext)) return SPD(playerid, 4791, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √°√®√ß√≠√•√±√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √Ø√≥√≠√™√≤√†:", "√è√Æ√´√Æ√¶√®√≤√º", "Cerrar");
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return SPD(playerid, 4791, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √°√®√ß√≠√•√±√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √Ø√≥√≠√™√≤√†:", "√è√Æ√´√Æ√¶√®√≤√º", "Cerrar");
			}
		}
		if(pData[playerid][pCash] < strval(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√†√™√®√µ √±√∞√•√§√±√≤√¢, √∑√≤√Æ√°√ª √Ø√Æ√´√Æ√¶√®√≤√º √®√µ √¢ √™√†√±√±√≥");
		if(unikbankCount + strval(inputtext) > 5000000) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Ø√Æ√´√Æ√¶√®√≤√º √¢ √™√†√±√±√≥ √°√Æ√´√•√• 5000000$");
		if(unikbankCount > 50000) return SCM(playerid, COLOR_LIGHTGREY, "√ä√†√±√±√† √Ø√Æ√´√≠√†. √è√Æ√´√Æ√¶√®√≤√º √±√∞√•√§√±√≤√¢√† √≠√•√´√º√ß√ø");
		unikbankCount += strval(inputtext);
		mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `unikbankCount` = %d", unikbankCount);
		mysql_tquery(mysql_Handle, string);
		Hook_GivePlayerMoney(playerid, -strval(inputtext));
		return SCMF(playerid, COLOR_BLUE, "√Ç√ª √Ø√Æ√´√Æ√¶√®√´√® √¢ √™√†√±√±√≥ %d$", strval(inputtext));
	}
	case 4792: {
		if(!response) return 1;
		if(!strlen(inputtext)) return SPD(playerid, 4792, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √°√®√ß√≠√•√±√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √¢√ß√ø√≤√º √®√ß √™√†√±√±√ª:", "√Ç√ß√ø√≤√º", "Cerrar");
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return SPD(playerid, 4792, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √°√®√ß√≠√•√±√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √¢√ß√ø√≤√º √®√ß √™√†√±√±√ª:", "√Ç√ß√ø√≤√º", "Cerrar");
			}
		}
		if(unikbankCount < strval(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √™√†√±√±√• No √≤√†√™√®√µ √§√•√≠√•√£");
		unikbankCount -= strval(inputtext);
		mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `unikbankCount` = %d", unikbankCount);
		mysql_tquery(mysql_Handle, string);
		Hook_GivePlayerMoney(playerid, strval(inputtext));
		return SCMF(playerid, COLOR_BLUE, "√Ç√ª √¢√ß√ø√´√® √®√ß √™√†√±√±√ª %d$", strval(inputtext));
	}
	case 4567: {
		if(!response) return 1;
		switch(listitem) {
			case 0: {
				format(string, 40, ""CWHITE"√Ç √™√†√±√±√•: "CMAIN"%i$", kiosk1_bank);
				SPD(playerid, 0, 0, "{FFCD00}√ä√†√±√±√† √™√®√Æ√±√™√†", string, "Cerrar", "");
			}
			case 1: SPD(playerid, 4571, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √™√®√Æ√±√™√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √™√†√±√±√≥:", "√è√Æ√´√Æ√¶√®√≤√º", "Cerrar");
			case 2: SPD(playerid, 4572, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √™√®√Æ√±√™√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √¢√ß√ø√≤√º √®√ß √™√†√±√±√ª:", "√Ç√ß√ø√≤√º", "Cerrar");
		}
	}
	case 4571: {
		if(!response) return 1;
		if(!strlen(inputtext)) return SPD(playerid, 4571, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √™√®√Æ√±√™√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √Ø√≥√≠√™√≤√†:", "√è√Æ√´√Æ√¶√®√≤√º", "Cerrar");
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return SPD(playerid, 4571, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √™√®√Æ√±√™√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √Ø√≥√≠√™√≤√†:", "√è√Æ√´√Æ√¶√®√≤√º", "Cerrar");
			}
		}
		if(pData[playerid][pCash] < strval(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√†√™√®√µ √±√∞√•√§√±√≤√¢, √∑√≤√Æ√°√ª √Ø√Æ√´√Æ√¶√®√≤√º √®√µ √¢ √™√†√±√±√≥");
		if(kiosk1_bank + strval(inputtext) > 5000000) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Ø√Æ√´√Æ√¶√®√≤√º √¢ √™√†√±√±√≥ √°√Æ√´√•√• 5000000$");
		if(kiosk1_bank > 50000) return SCM(playerid, COLOR_LIGHTGREY, "√ä√†√±√±√† √Ø√Æ√´√≠√†. √è√Æ√´√Æ√¶√®√≤√º √±√∞√•√§√±√≤√¢√† √≠√•√´√º√ß√ø");
		kiosk1_bank += strval(inputtext);
		mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `kiosk1_bank` = %d", kiosk1_bank);
		mysql_tquery(mysql_Handle, string);
		Hook_GivePlayerMoney(playerid, -strval(inputtext));
		return SCMF(playerid, COLOR_BLUE, "√Ç√ª √Ø√Æ√´√Æ√¶√®√´√® √¢ √™√†√±√±√≥ %d$", strval(inputtext));
	}
	case 4572: {
		if(!response) return 1;
		if(!strlen(inputtext)) return SPD(playerid, 4572, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √™√®√Æ√±√™√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √¢√ß√ø√≤√º √®√ß √™√†√±√±√ª:", "√Ç√ß√ø√≤√º", "Cerrar");
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return SPD(playerid, 4572, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √™√®√Æ√±√™√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √¢√ß√ø√≤√º √®√ß √™√†√±√±√ª:", "√Ç√ß√ø√≤√º", "Cerrar");
			}
		}
		if(kiosk1_bank < strval(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √™√†√±√±√• No √≤√†√™√®√µ √§√•√≠√•√£");
		kiosk1_bank -= strval(inputtext);
		mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `kiosk1_bank` = %d", kiosk1_bank);
		mysql_tquery(mysql_Handle, string);
		Hook_GivePlayerMoney(playerid, strval(inputtext));
		return SCMF(playerid, COLOR_BLUE, "√Ç√ª √¢√ß√ø√´√® √®√ß √™√†√±√±√ª %d$", strval(inputtext));
	}
	case 5663: {
		if(!response) return 1;
		switch(listitem) {
			case 0: SCMF(playerid,-1,"√Ç√†√∏ √°√®√ß√≠√•√± √Æ√Ø√´√†√∑√•√≠ √≠√† {ff9933}%d √®√ß 30 √§√≠√•√©",pData[playerid][newbiz_Pay]);
			case 1: SPD(playerid, 4568, DIALOG_STYLE_LIST,""CMAIN"√ä√†√±√±√†", ""CWHITE"[1] √è√Æ√±√¨√Æ√≤√∞√•√≤√º √±√≥√¨√¨√≥ √¢ √™√†√±√±√•\n[2] √è√Æ√´√Æ√¶√®√≤√º √§√•√≠√º√£√® √¢ √™√†√±√±√≥\n[3] √ë√≠√ø√≤√º √§√•√≠√º√£√® √± √™√†√±√±√ª", "Seleccione", "Cerrar");
			case 2: callcmd::sellbiz(playerid);
			case 3: SPD(playerid, 4895, DIALOG_STYLE_INPUT,"{FFCD00}√è√∞√ÆS√≠√¶√†",""CWHITE"√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø √¢√¢√•√§√®√≤√• √∑√•√∞√•√ß √Ø√∞√Æ√°√•√´\n√Ø√†√∞√†√¨√•√≤√∞√ª √§√´√ø √Ø√∞√ÆS√≠√¶√® √°√®√ß√≠√•√±√†\n\n"CLITEBLUE"[id √®√£√∞√Æ√™√†] [√∂√•√≠√†]","S√≠√´√•√•","Cerrar");
		}
	}
	case 4568: {
		if(!response) return 1;
		switch(listitem) {
			case 0: {
				format(string, 40, ""CWHITE"√Ç √™√†√±√±√•: "CMAIN"%i$", kiosk2_bank);
				SPD(playerid, 0, 0, "{FFCD00}√ä√†√±√±√† √™√®√Æ√±√™√†", string, "Cerrar", "");
			}
			case 1: SPD(playerid, 4573, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √™√®√Æ√±√™√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √™√†√±√±√≥:", "√è√Æ√´√Æ√¶√®√≤√º", "Cerrar");
			case 2: SPD(playerid, 4574, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √™√®√Æ√±√™√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √¢√ß√ø√≤√º √®√ß √™√†√±√±√ª:", "√Ç√ß√ø√≤√º", "Cerrar");
		}
	}
	case 4573: {
		if(!response) return 1;
		if(!strlen(inputtext)) return SPD(playerid, 4573, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √™√®√Æ√±√™√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √Ø√≥√≠√™√≤√†:", "√è√Æ√´√Æ√¶√®√≤√º", "Cerrar");
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return SPD(playerid, 4573, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √™√®√Æ√±√™√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √Ø√≥√≠√™√≤√†:", "√è√Æ√´√Æ√¶√®√≤√º", "Cerrar");
			}
		}
		if(pData[playerid][pCash] < strval(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√†√™√®√µ √±√∞√•√§√±√≤√¢, √∑√≤√Æ√°√ª √Ø√Æ√´√Æ√¶√®√≤√º √®√µ √¢ √™√†√±√±√≥");
		if(kiosk2_bank + strval(inputtext) > 5000000) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Ø√Æ√´√Æ√¶√®√≤√º √¢ √™√†√±√±√≥ √°√Æ√´√•√• 5000000$");
		if(kiosk2_bank > 50000) return SCM(playerid, COLOR_LIGHTGREY, "√ä√†√±√±√† √Ø√Æ√´√≠√†. √è√Æ√´√Æ√¶√®√≤√º √±√∞√•√§√±√≤√¢√† √≠√•√´√º√ß√ø");
		kiosk2_bank += strval(inputtext);
		mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `kiosk2_bank` = %d", kiosk2_bank);
		mysql_tquery(mysql_Handle, string);
		Hook_GivePlayerMoney(playerid, -strval(inputtext));
		return SCMF(playerid, COLOR_BLUE, "√Ç√ª √Ø√Æ√´√Æ√¶√®√´√® √¢ √™√†√±√±√≥ %d$", strval(inputtext));
	}
	case 4574: {
		if(!response) return 1;
		if(!strlen(inputtext)) return SPD(playerid, 4574, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √™√®√Æ√±√™√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √¢√ß√ø√≤√º √®√ß √™√†√±√±√ª:", "√Ç√ß√ø√≤√º", "Cerrar");
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return SPD(playerid, 4574, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √™√®√Æ√±√™√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √¢√ß√ø√≤√º √®√ß √™√†√±√±√ª:", "√Ç√ß√ø√≤√º", "Cerrar");
			}
		}
		if(kiosk2_bank < strval(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √™√†√±√±√• No √≤√†√™√®√µ √§√•√≠√•√£");
		kiosk2_bank -= strval(inputtext);
		mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `kiosk2_bank` = %d", kiosk2_bank);
		mysql_tquery(mysql_Handle, string);
		Hook_GivePlayerMoney(playerid, strval(inputtext));
		return SCMF(playerid, COLOR_BLUE, "√Ç√ª √¢√ß√ø√´√® √®√ß √™√†√±√±√ª %d$", strval(inputtext));
	}
	case 5664: {
		if(!response) return 1;
		switch(listitem) {
			case 0: SCMF(playerid,-1,"√Ç√†√∏ √°√®√ß√≠√•√± √Æ√Ø√´√†√∑√•√≠ √≠√† {ff9933}%d √®√ß 30 √§√≠√•√©",pData[playerid][newbiz_Pay]);
			case 1: SPD(playerid, 4569, DIALOG_STYLE_LIST,""CMAIN"√ä√†√±√±√†", ""CWHITE"[1] √è√Æ√±√¨√Æ√≤√∞√•√≤√º √±√≥√¨√¨√≥ √¢ √™√†√±√±√•\n[2] √è√Æ√´√Æ√¶√®√≤√º √§√•√≠√º√£√® √¢ √™√†√±√±√≥\n[3] √ë√≠√ø√≤√º √§√•√≠√º√£√® √± √™√†√±√±√ª", "Seleccione", "Cerrar");
			case 2: callcmd::sellbiz(playerid);
			case 3: SPD(playerid, 4895, DIALOG_STYLE_INPUT,"{FFCD00}√è√∞√ÆS√≠√¶√†",""CWHITE"√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø √¢√¢√•√§√®√≤√• √∑√•√∞√•√ß √Ø√∞√Æ√°√•√´\n√Ø√†√∞√†√¨√•√≤√∞√ª √§√´√ø √Ø√∞√ÆS√≠√¶√® √°√®√ß√≠√•√±√†\n\n"CLITEBLUE"[id √®√£√∞√Æ√™√†] [√∂√•√≠√†]","S√≠√´√•√•","Cerrar");
		}
	}
	case 4569: {
		if(!response) return 1;
		switch(listitem) {
			case 0: {
				format(string, 40, ""CWHITE"√Ç √™√†√±√±√•: "CMAIN"%i$", kiosk3_bank);
				SPD(playerid, 0, 0, "{FFCD00}√ä√†√±√±√† √™√®√Æ√±√™√†", string, "Cerrar", "");
			}
			case 1: SPD(playerid, 4575, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √™√®√Æ√±√™√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √™√†√±√±√≥:", "√è√Æ√´√Æ√¶√®√≤√º", "Cerrar");
			case 2: SPD(playerid, 4576, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √™√®√Æ√±√™√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √¢√ß√ø√≤√º √®√ß √™√†√±√±√ª:", "√Ç√ß√ø√≤√º", "Cerrar");
		}
	}
	case 4575: {
		if(!response) return 1;
		if(!strlen(inputtext)) return SPD(playerid, 4575, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √™√®√Æ√±√™√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √Ø√≥√≠√™√≤√†:", "√è√Æ√´√Æ√¶√®√≤√º", "Cerrar");
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return SPD(playerid, 4575, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √™√®√Æ√±√™√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √Ø√≥√≠√™√≤√†:", "√è√Æ√´√Æ√¶√®√≤√º", "Cerrar");
			}
		}
		if(pData[playerid][pCash] < strval(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√†√™√®√µ √±√∞√•√§√±√≤√¢, √∑√≤√Æ√°√ª √Ø√Æ√´√Æ√¶√®√≤√º √®√µ √¢ √™√†√±√±√≥");
		if(kiosk3_bank + strval(inputtext) > 5000000) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Ø√Æ√´√Æ√¶√®√≤√º √¢ √™√†√±√±√≥ √°√Æ√´√•√• 5000000$");
		if(kiosk3_bank > 50000) return SCM(playerid, COLOR_LIGHTGREY, "√ä√†√±√±√† √Ø√Æ√´√≠√†. √è√Æ√´√Æ√¶√®√≤√º √±√∞√•√§√±√≤√¢√† √≠√•√´√º√ß√ø");
		kiosk3_bank += strval(inputtext);
		mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `kiosk3_bank` = %d", kiosk3_bank);
		mysql_tquery(mysql_Handle, string);
		Hook_GivePlayerMoney(playerid, -strval(inputtext));
		return SCMF(playerid, COLOR_BLUE, "√Ç√ª √Ø√Æ√´√Æ√¶√®√´√® √¢ √™√†√±√±√≥ %d$", strval(inputtext));
	}
	case 4576: {
		if(!response) return 1;
		if(!strlen(inputtext)) return SPD(playerid, 4576, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √™√®√Æ√±√™√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √¢√ß√ø√≤√º √®√ß √™√†√±√±√ª:", "√Ç√ß√ø√≤√º", "Cerrar");
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return SPD(playerid, 4576, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √™√®√Æ√±√™√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √¢√ß√ø√≤√º √®√ß √™√†√±√±√ª:", "√Ç√ß√ø√≤√º", "Cerrar");
			}
		}
		if(kiosk3_bank < strval(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √™√†√±√±√• No √≤√†√™√®√µ √§√•√≠√•√£");
		kiosk3_bank -= strval(inputtext);
		mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `kiosk3_bank` = %d", kiosk3_bank);
		mysql_tquery(mysql_Handle, string);
		Hook_GivePlayerMoney(playerid, strval(inputtext));
		return SCMF(playerid, COLOR_BLUE, "√Ç√ª √¢√ß√ø√´√® √®√ß √™√†√±√±√ª %d$", strval(inputtext));
	}
	case 5665: {
		if(!response) return 1;
		switch(listitem) {
			case 0: SCMF(playerid,-1,"√Ç√†√∏ √°√®√ß√≠√•√± √Æ√Ø√´√†√∑√•√≠ √≠√† {ff9933}%d √®√ß 30 √§√≠√•√©",pData[playerid][newbiz_Pay]);
			case 1: SPD(playerid, 4570, DIALOG_STYLE_LIST,""CMAIN"√ä√†√±√±√†", ""CWHITE"[1] √è√Æ√±√¨√Æ√≤√∞√•√≤√º √±√≥√¨√¨√≥ √¢ √™√†√±√±√•\n[2] √è√Æ√´√Æ√¶√®√≤√º √§√•√≠√º√£√® √¢ √™√†√±√±√≥\n[3] √ë√≠√ø√≤√º √§√•√≠√º√£√® √± √™√†√±√±√ª", "Seleccione", "Cerrar");
			case 2: callcmd::sellbiz(playerid);
			case 3: SPD(playerid, 4895, DIALOG_STYLE_INPUT,"{FFCD00}√è√∞√ÆS√≠√¶√†",""CWHITE"√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø √¢√¢√•√§√®√≤√• √∑√•√∞√•√ß √Ø√∞√Æ√°√•√´\n√Ø√†√∞√†√¨√•√≤√∞√ª √§√´√ø √Ø√∞√ÆS√≠√¶√® √°√®√ß√≠√•√±√†\n\n"CLITEBLUE"[id √®√£√∞√Æ√™√†] [√∂√•√≠√†]","S√≠√´√•√•","Cerrar");
		}
	}
	case 4570: {
		if(!response) return 1;
		switch(listitem) {
			case 0: {
				format(string, 40, ""CWHITE"√Ç √™√†√±√±√•: "CMAIN"%i$", kiosk4_bank);
				SPD(playerid, 0, 0, "{FFCD00}√ä√†√±√±√† √™√®√Æ√±√™√†", string, "Cerrar", "");
			}
			case 1: SPD(playerid, 4577, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √™√®√Æ√±√™√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √™√†√±√±√≥:", "√è√Æ√´√Æ√¶√®√≤√º", "Cerrar");
			case 2: SPD(playerid, 4578, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √™√®√Æ√±√™√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √¢√ß√ø√≤√º √®√ß √™√†√±√±√ª:", "√Ç√ß√ø√≤√º", "Cerrar");
		}
	}
	case 4577: {
		if(!response) return 1;
		if(!strlen(inputtext)) return SPD(playerid, 4577, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √™√®√Æ√±√™√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √Ø√≥√≠√™√≤√†:", "√è√Æ√´√Æ√¶√®√≤√º", "Cerrar");
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return SPD(playerid, 4577, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √™√®√Æ√±√™√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √Ø√≥√≠√™√≤√†:", "√è√Æ√´√Æ√¶√®√≤√º", "Cerrar");
			}
		}
		if(pData[playerid][pCash] < strval(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√†√™√®√µ √±√∞√•√§√±√≤√¢, √∑√≤√Æ√°√ª √Ø√Æ√´√Æ√¶√®√≤√º √®√µ √¢ √™√†√±√±√≥");
		if(kiosk4_bank + strval(inputtext) > 5000000) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Ø√Æ√´√Æ√¶√®√≤√º √¢ √™√†√±√±√≥ √°√Æ√´√•√• 5000000$");
		if(kiosk4_bank > 50000) return SCM(playerid, COLOR_LIGHTGREY, "√ä√†√±√±√† √Ø√Æ√´√≠√†. √è√Æ√´√Æ√¶√®√≤√º √±√∞√•√§√±√≤√¢√† √≠√•√´√º√ß√ø");
		kiosk4_bank += strval(inputtext);
		mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `kiosk4_bank` = %d", kiosk4_bank);
		mysql_tquery(mysql_Handle, string);
		Hook_GivePlayerMoney(playerid, -strval(inputtext));
		return SCMF(playerid, COLOR_BLUE, "√Ç√ª √Ø√Æ√´√Æ√¶√®√´√® √¢ √™√†√±√±√≥ %d$", strval(inputtext));
	}
	case 4578: {
		if(!response) return 1;
		if(!strlen(inputtext)) return SPD(playerid, 4578, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √™√®√Æ√±√™√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √¢√ß√ø√≤√º √®√ß √™√†√±√±√ª:", "√Ç√ß√ø√≤√º", "Cerrar");
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return SPD(playerid, 4578, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √™√®√Æ√±√™√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √¢√ß√ø√≤√º √®√ß √™√†√±√±√ª:", "√Ç√ß√ø√≤√º", "Cerrar");
			}
		}
		if(kiosk4_bank < strval(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √™√†√±√±√• No √≤√†√™√®√µ √§√•√≠√•√£");
		kiosk4_bank -= strval(inputtext);
		mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `kiosk4_bank` = %d", kiosk4_bank);
		mysql_tquery(mysql_Handle, string);
		Hook_GivePlayerMoney(playerid, strval(inputtext));
		return SCMF(playerid, COLOR_BLUE, "√Ç√ª √¢√ß√ø√´√® √®√ß √™√†√±√±√ª %d$", strval(inputtext));
	}

	case 9433: {
		if(!response) return 1;
		switch(listitem) {
			case 0: SCMF(playerid,-1,"√Ç√†√∏ √°√®√ß√≠√•√± √Æ√Ø√´√†√∑√•√≠ √≠√† {ff9933}%d √®√ß 30 √§√≠√•√©",pData[playerid][newbiz_Pay]);
			case 1: SPD(playerid, 9434, DIALOG_STYLE_LIST,""CMAIN"√ä√†√±√±√† √Ø√≥√≠√™√≤√†", ""CWHITE"[1] √è√Æ√±√¨√Æ√≤√∞√•√≤√º √±√≥√¨√¨√≥ √¢ √™√†√±√±√•\n[2] √è√Æ√´√Æ√¶√®√≤√º √§√•√≠√º√£√® √¢ √™√†√±√±√≥\n[3] √ë√≠√ø√≤√º √§√•√≠√º√£√® √± √™√†√±√±√ª", "Seleccione", "Cerrar");
			case 2: callcmd::sellbiz(playerid);
			case 3: SPD(playerid, 4895, DIALOG_STYLE_INPUT,"{FFCD00}√è√∞√ÆS√≠√¶√†",""CWHITE"√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø √¢√¢√•√§√®√≤√• √∑√•√∞√•√ß √Ø√∞√Æ√°√•√´\n√Ø√†√∞√†√¨√•√≤√∞√ª √§√´√ø √Ø√∞√ÆS√≠√¶√® √°√®√ß√≠√•√±√†\n\n"CLITEBLUE"[id √®√£√∞√Æ√™√†] [√∂√•√≠√†]","S√≠√´√•√•","Cerrar");
		}
	}
	case 9434: {
		if(!response) return 1;
		switch(listitem) {
			case 0: {
				format(string, 40, ""CWHITE"√Ç √™√†√±√±√•: "CMAIN"%i$", prok1_bank);
				SPD(playerid, 0, 0, "{FFCD00}√ä√†√±√±√† √Ø√≥√≠√™√≤√†", string, "Cerrar", "");
			}
			case 1: SPD(playerid, 9435, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √Ø√≥√≠√™√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √™√†√±√±√≥:", "√è√Æ√´√Æ√¶√®√≤√º", "Cerrar");
			case 2: SPD(playerid, 9436, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √Ø√≥√≠√™√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √¢√ß√ø√≤√º √®√ß √™√†√±√±√ª:", "√Ç√ß√ø√≤√º", "Cerrar");
		}
	}
	case 9435: {
		if(!response) return 1;
		if(!strlen(inputtext)) return SPD(playerid, 9435, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √Ø√≥√≠√™√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √Ø√≥√≠√™√≤√†:", "√è√Æ√´√Æ√¶√®√≤√º", "Cerrar");
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return SPD(playerid, 9435, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √Ø√≥√≠√™√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √Ø√≥√≠√™√≤√†:", "√è√Æ√´√Æ√¶√®√≤√º", "Cerrar");
			}
		}
		if(pData[playerid][pCash] < strval(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√†√™√®√µ √±√∞√•√§√±√≤√¢, √∑√≤√Æ√°√ª √Ø√Æ√´√Æ√¶√®√≤√º √®√µ √¢ √™√†√±√±√≥");
		if(prok1_bank + strval(inputtext) > 5000000) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Ø√Æ√´√Æ√¶√®√≤√º √¢ √™√†√±√±√≥ √°√Æ√´√•√• 5000000$");
		if(prok1_bank > 50000) return SCM(playerid, COLOR_LIGHTGREY, "√ä√†√±√±√† √Ø√Æ√´√≠√†. √è√Æ√´√Æ√¶√®√≤√º √±√∞√•√§√±√≤√¢√† √≠√•√´√º√ß√ø");
		prok1_bank += strval(inputtext);
		mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `prok1_bank` = %d", prok1_bank);
		mysql_tquery(mysql_Handle, string);
		Hook_GivePlayerMoney(playerid, -strval(inputtext));
		return SCMF(playerid, COLOR_BLUE, "√Ç√ª √Ø√Æ√´√Æ√¶√®√´√® √¢ √™√†√±√±√≥ %d$", strval(inputtext));
	}
	case 9436: {
		if(!response) return 1;
		if(!strlen(inputtext)) return SPD(playerid, 9436, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √Ø√≥√≠√™√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √¢√ß√ø√≤√º √®√ß √™√†√±√±√ª:", "√Ç√ß√ø√≤√º", "Cerrar");
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return SPD(playerid, 9436, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √Ø√≥√≠√™√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √¢√ß√ø√≤√º √®√ß √™√†√±√±√ª:", "√Ç√ß√ø√≤√º", "Cerrar");
			}
		}
		if(prok1_bank < strval(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √™√†√±√±√• No √≤√†√™√®√µ √§√•√≠√•√£");
		prok1_bank -= strval(inputtext);
		mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `prok1_bank` = %d", prok1_bank);
		mysql_tquery(mysql_Handle, string);
		Hook_GivePlayerMoney(playerid, strval(inputtext));
		return SCMF(playerid, COLOR_BLUE, "√Ç√ª √¢√ß√ø√´√® √®√ß √™√†√±√±√ª %d$", strval(inputtext));
	}
	case 9438: {
		if(!response) return 1;
		if(prok2_owner != -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ω√≤√Æ√£√Æ √Ø√≥√≠√™√≤√† √≥√¶√• √•√±√≤√º √¢√´√†√§√•√´√•√∂");
		if(pData[playerid][pCash] < 2000000) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √§√•√≠√•√£ √§√´√ø √Ø√Æ√™√≥√Ø√™√®");
		prok2_owner = pData[playerid][pID];
		prok2_bank=0;
		mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `prok2_bank` = 0");
		pData[playerid][prok_have] = 2;
		Hook_GivePlayerMoney(playerid, -2000000);
		GameTextForPlayer(playerid, "~r~-2000000$", 3000, 1);
		UpdatePlayerData(playerid, "prok_have", 2);
		mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `prok2_owner` = %d", prok2_owner);
		mysql_tquery(mysql_Handle, string);
		PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
		new fmt_3d[40];
		format(fmt_3d, sizeof(fmt_3d), "√Ç√´√†√§√•√´√•√∂: "CWHITE"%s", pData[playerid][pName]);
		UpdateDynamic3DTextLabelText(prok_info_2, 0x4682B4FF, fmt_3d);
		SCM(playerid, COLOR_MAIN, "√è√≥√≠√™√≤ √Ø√∞√Æ√™√†√≤√† √≥√±√Ø√•√∏√≠√Æ √Ø√∞√®√Æ√°√∞√•√≤√•√≠ √ß√† "CLITEBLUE"2000000$");
		SCM(playerid, COLOR_ORANGE, "√ç√• √ß√†√°√≥√§√º√≤√• √Æ√Ø√´√†√≤√®√≤√º √•√£√Æ √¢ √±√Ø√•√∂√®√†√´√º√≠√Æ√¨ √∞√†√ß√§√•√´√• √°√†√≠√™√†");
		pData[playerid][newbiz_Pay]=3;
		UpdatePlayerData(playerid,"newbiz_Pay",3);
	}
	case 9439: {
		if(!response) return 1;
		switch(listitem) {
			case 0: SCMF(playerid,-1,"√Ç√†√∏ √°√®√ß√≠√•√± √Æ√Ø√´√†√∑√•√≠ √≠√† {ff9933}%d √®√ß 30 √§√≠√•√©",pData[playerid][newbiz_Pay]);
			case 1: SPD(playerid, 9440, DIALOG_STYLE_LIST,""CMAIN"√ä√†√±√±√† √Ø√≥√≠√™√≤√†", ""CWHITE"[1] √è√Æ√±√¨√Æ√≤√∞√•√≤√º √±√≥√¨√¨√≥ √¢ √™√†√±√±√•\n[2] √è√Æ√´√Æ√¶√®√≤√º √§√•√≠√º√£√® √¢ √™√†√±√±√≥\n[3] √ë√≠√ø√≤√º √§√•√≠√º√£√® √± √™√†√±√±√ª", "Seleccione", "Cerrar");
			case 2: callcmd::sellbiz(playerid);
			case 3: SPD(playerid, 4895, DIALOG_STYLE_INPUT,"{FFCD00}√è√∞√ÆS√≠√¶√†",""CWHITE"√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø √¢√¢√•√§√®√≤√• √∑√•√∞√•√ß √Ø√∞√Æ√°√•√´\n√Ø√†√∞√†√¨√•√≤√∞√ª √§√´√ø √Ø√∞√ÆS√≠√¶√® √°√®√ß√≠√•√±√†\n\n"CLITEBLUE"[id √®√£√∞√Æ√™√†] [√∂√•√≠√†]","S√≠√´√•√•","Cerrar");
		}
	}
	case 9440: {
		if(!response) return 1;
		switch(listitem) {
			case 0: {
				format(string, 40, ""CWHITE"√Ç √™√†√±√±√•: "CMAIN"%i$", prok2_bank);
				SPD(playerid, 0, 0, "{FFCD00}√ä√†√±√±√† √Ø√≥√≠√™√≤√†", string, "Cerrar", "");
			}
			case 1: SPD(playerid, 9441, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √Ø√≥√≠√™√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √™√†√±√±√≥:", "√è√Æ√´√Æ√¶√®√≤√º", "Cerrar");
			case 2: SPD(playerid, 9442, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √Ø√≥√≠√™√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √¢√ß√ø√≤√º √®√ß √™√†√±√±√ª:", "√Ç√ß√ø√≤√º", "Cerrar");
		}
	}
	case 9441: {
		if(!response) return 1;
		if(!strlen(inputtext)) return SPD(playerid, 9441, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √Ø√≥√≠√™√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √Ø√≥√≠√™√≤√†:", "√è√Æ√´√Æ√¶√®√≤√º", "Cerrar");
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return SPD(playerid, 9441, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √Ø√≥√≠√™√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √Ø√≥√≠√™√≤√†:", "√è√Æ√´√Æ√¶√®√≤√º", "Cerrar");
			}
		}
		if(pData[playerid][pCash] < strval(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√†√™√®√µ √±√∞√•√§√±√≤√¢, √∑√≤√Æ√°√ª √Ø√Æ√´√Æ√¶√®√≤√º √®√µ √¢ √™√†√±√±√≥");
		if(prok2_bank + strval(inputtext) > 5000000) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Ø√Æ√´√Æ√¶√®√≤√º √¢ √™√†√±√±√≥ √°√Æ√´√•√• 5000000$");
		if(prok2_bank > 50000) return SCM(playerid, COLOR_LIGHTGREY, "√ä√†√±√±√† √Ø√Æ√´√≠√†. √è√Æ√´√Æ√¶√®√≤√º √±√∞√•√§√±√≤√¢√† √≠√•√´√º√ß√ø");
		prok2_bank += strval(inputtext);
		mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `prok2_bank` = %d", prok2_bank);
		mysql_tquery(mysql_Handle, string);
		Hook_GivePlayerMoney(playerid, -strval(inputtext));
		return SCMF(playerid, COLOR_BLUE, "√Ç√ª √Ø√Æ√´√Æ√¶√®√´√® √¢ √™√†√±√±√≥ %d$", strval(inputtext));
	}
	case 9442: {
		if(!response) return 1;
		if(!strlen(inputtext)) return SPD(playerid, 9442, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √Ø√≥√≠√™√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √¢√ß√ø√≤√º √®√ß √™√†√±√±√ª:", "√Ç√ß√ø√≤√º", "Cerrar");
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return SPD(playerid, 9442, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √Ø√≥√≠√™√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √¢√ß√ø√≤√º √®√ß √™√†√±√±√ª:", "√Ç√ß√ø√≤√º", "Cerrar");
			}
		}
		if(prok2_bank < strval(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √™√†√±√±√• No √≤√†√™√®√µ √§√•√≠√•√£");
		prok2_bank -= strval(inputtext);
		mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `prok2_bank` = %d", prok2_bank);
		mysql_tquery(mysql_Handle, string);
		Hook_GivePlayerMoney(playerid, strval(inputtext));
		return SCMF(playerid, COLOR_BLUE, "√Ç√ª √¢√ß√ø√´√® √®√ß √™√†√±√±√ª %d$", strval(inputtext));
	}
	case 9444: {
		if(!response) return 1;
		if(prok3_owner != -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ω√≤√Æ√£√Æ √Ø√≥√≠√™√≤√† √≥√¶√• √•√±√≤√º √¢√´√†√§√•√´√•√∂");
		if(pData[playerid][pCash] < 2000000) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √§√•√≠√•√£ √§√´√ø √Ø√Æ√™√≥√Ø√™√®");
		prok3_owner = pData[playerid][pID];
		prok3_bank=0;
		mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `prok3_bank` = 0");
		pData[playerid][prok_have] = 3;
		Hook_GivePlayerMoney(playerid, -2000000);
		GameTextForPlayer(playerid, "~r~-2000000$", 3000, 1);
		UpdatePlayerData(playerid, "prok_have", 3);
		mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `prok3_owner` = %d", prok3_owner);
		mysql_tquery(mysql_Handle, string);
		PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
		new fmt_3d[40];
		format(fmt_3d, sizeof(fmt_3d), "√Ç√´√†√§√•√´√•√∂: "CWHITE"%s", pData[playerid][pName]);
		UpdateDynamic3DTextLabelText(prok_info_3, 0x4682B4FF, fmt_3d);
		SCM(playerid, COLOR_MAIN, "√è√≥√≠√™√≤ √Ø√∞√Æ√™√†√≤√† √≥√±√Ø√•√∏√≠√Æ √Ø√∞√®√Æ√°√∞√•√≤√•√≠ √ß√† "CLITEBLUE"2000000$");
		SCM(playerid, COLOR_ORANGE, "√ç√• √ß√†√°√≥√§√º√≤√• √Æ√Ø√´√†√≤√®√≤√º √•√£√Æ √¢ √±√Ø√•√∂√®√†√´√º√≠√Æ√¨ √∞√†√ß√§√•√´√• √°√†√≠√™√†");
		pData[playerid][newbiz_Pay]=3;
		UpdatePlayerData(playerid,"newbiz_Pay",3);
	}
	case 9445: {
		if(!response) return 1;
		switch(listitem) {
			case 0: SCMF(playerid,-1,"√Ç√†√∏ √°√®√ß√≠√•√± √Æ√Ø√´√†√∑√•√≠ √≠√† {ff9933}%d √®√ß 30 √§√≠√•√©",pData[playerid][newbiz_Pay]);
			case 1: SPD(playerid, 9446, DIALOG_STYLE_LIST,""CMAIN"√ä√†√±√±√† √Ø√≥√≠√™√≤√†", ""CWHITE"[1] √è√Æ√±√¨√Æ√≤√∞√•√≤√º √±√≥√¨√¨√≥ √¢ √™√†√±√±√•\n[2] √è√Æ√´√Æ√¶√®√≤√º √§√•√≠√º√£√® √¢ √™√†√±√±√≥\n[3] √ë√≠√ø√≤√º √§√•√≠√º√£√® √± √™√†√±√±√ª", "Seleccione", "Cerrar");
			case 2: callcmd::sellbiz(playerid);
			case 3: SPD(playerid, 4895, DIALOG_STYLE_INPUT,"{FFCD00}√è√∞√ÆS√≠√¶√†",""CWHITE"√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø √¢√¢√•√§√®√≤√• √∑√•√∞√•√ß √Ø√∞√Æ√°√•√´\n√Ø√†√∞√†√¨√•√≤√∞√ª √§√´√ø √Ø√∞√ÆS√≠√¶√® √°√®√ß√≠√•√±√†\n\n"CLITEBLUE"[id √®√£√∞√Æ√™√†] [√∂√•√≠√†]","S√≠√´√•√•","Cerrar");
		}
	}
	case 9446: {
		if(!response) return 1;
		switch(listitem) {
			case 0: {
				format(string, 40, ""CWHITE"√Ç √™√†√±√±√•: "CMAIN"%i$", prok3_bank);
				SPD(playerid, 0, 0, "{FFCD00}√ä√†√±√±√† √Ø√≥√≠√™√≤√†", string, "Cerrar", "");
			}
			case 1: SPD(playerid, 9447, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √Ø√≥√≠√™√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √™√†√±√±√≥:", "√è√Æ√´√Æ√¶√®√≤√º", "Cerrar");
			case 2: SPD(playerid, 9448, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √Ø√≥√≠√™√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √¢√ß√ø√≤√º √®√ß √™√†√±√±√ª:", "√Ç√ß√ø√≤√º", "Cerrar");
		}
	}
	case 9447: {
		if(!response) return 1;
		if(!strlen(inputtext)) return SPD(playerid, 9447, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √Ø√≥√≠√™√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √Ø√≥√≠√™√≤√†:", "√è√Æ√´√Æ√¶√®√≤√º", "Cerrar");
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return SPD(playerid, 9447, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √Ø√≥√≠√™√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √Ø√≥√≠√™√≤√†:", "√è√Æ√´√Æ√¶√®√≤√º", "Cerrar");
			}
		}
		if(pData[playerid][pCash] < strval(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√†√™√®√µ √±√∞√•√§√±√≤√¢, √∑√≤√Æ√°√ª √Ø√Æ√´√Æ√¶√®√≤√º √®√µ √¢ √™√†√±√±√≥");
		if(prok3_bank + strval(inputtext) > 5000000) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Ø√Æ√´√Æ√¶√®√≤√º √¢ √™√†√±√±√≥ √°√Æ√´√•√• 5000000$");
		if(prok3_bank > 50000) return SCM(playerid, COLOR_LIGHTGREY, "√ä√†√±√±√† √Ø√Æ√´√≠√†. √è√Æ√´√Æ√¶√®√≤√º √±√∞√•√§√±√≤√¢√† √≠√•√´√º√ß√ø");
		prok3_bank += strval(inputtext);
		mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `prok3_bank` = %d", prok3_bank);
		mysql_tquery(mysql_Handle, string);
		Hook_GivePlayerMoney(playerid, -strval(inputtext));
		return SCMF(playerid, COLOR_BLUE, "√Ç√ª √Ø√Æ√´√Æ√¶√®√´√® √¢ √™√†√±√±√≥ %d$", strval(inputtext));
	}
	case 9448: {
		if(!response) return 1;
		if(!strlen(inputtext)) return SPD(playerid, 9448, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √Ø√≥√≠√™√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √¢√ß√ø√≤√º √®√ß √™√†√±√±√ª:", "√Ç√ß√ø√≤√º", "Cerrar");
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return SPD(playerid, 9448, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √Ø√≥√≠√™√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √¢√ß√ø√≤√º √®√ß √™√†√±√±√ª:", "√Ç√ß√ø√≤√º", "Cerrar");
			}
		}
		if(prok3_bank < strval(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √™√†√±√±√• No √≤√†√™√®√µ √§√•√≠√•√£");
		prok3_bank -= strval(inputtext);
		mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `prok3_bank` = %d", prok3_bank);
		mysql_tquery(mysql_Handle, string);
		Hook_GivePlayerMoney(playerid, strval(inputtext));
		return SCMF(playerid, COLOR_BLUE, "√Ç√ª √¢√ß√ø√´√® √®√ß √™√†√±√±√ª %d$", strval(inputtext));
	}
	case 9450: {
		if(!response) return 1;
		if(prok4_owner != -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ω√≤√Æ√£√Æ √Ø√≥√≠√™√≤√† √≥√¶√• √•√±√≤√º √¢√´√†√§√•√´√•√∂");
		if(pData[playerid][pCash] < 2000000) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √§√•√≠√•√£ √§√´√ø √Ø√Æ√™√≥√Ø√™√®");
		prok4_owner = pData[playerid][pID];
		prok4_bank=0;
		mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `prok4_bank` = 0");
		pData[playerid][prok_have] = 4;
		Hook_GivePlayerMoney(playerid, -2000000);
		GameTextForPlayer(playerid, "~r~-2000000$", 3000, 1);
		UpdatePlayerData(playerid, "prok_have", 4);
		mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `prok4_owner` = %d", prok4_owner);
		mysql_tquery(mysql_Handle, string);
		PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
		new fmt_3d[40];
		format(fmt_3d, sizeof(fmt_3d), "√Ç√´√†√§√•√´√•√∂: "CWHITE"%s", pData[playerid][pName]);
		UpdateDynamic3DTextLabelText(prok_info_4, 0x4682B4FF, fmt_3d);
		SCM(playerid, COLOR_MAIN, "√è√≥√≠√™√≤ √Ø√∞√Æ√™√†√≤√† √≥√±√Ø√•√∏√≠√Æ √Ø√∞√®√Æ√°√∞√•√≤√•√≠ √ß√† "CLITEBLUE"2000000$");
		SCM(playerid, COLOR_ORANGE, "√ç√• √ß√†√°√≥√§√º√≤√• √Æ√Ø√´√†√≤√®√≤√º √•√£√Æ √¢ √±√Ø√•√∂√®√†√´√º√≠√Æ√¨ √∞√†√ß√§√•√´√• √°√†√≠√™√†");
		pData[playerid][newbiz_Pay]=3;
		UpdatePlayerData(playerid,"newbiz_Pay",3);
	}
	case 9451: {
		if(!response) return 1;
		switch(listitem) {
			case 0: SCMF(playerid,-1,"√Ç√†√∏ √°√®√ß√≠√•√± √Æ√Ø√´√†√∑√•√≠ √≠√† {ff9933}%d √®√ß 30 √§√≠√•√©",pData[playerid][newbiz_Pay]);
			case 1: SPD(playerid, 9452, DIALOG_STYLE_LIST,""CMAIN"√ä√†√±√±√† √Ø√≥√≠√™√≤√†", ""CWHITE"[1] √è√Æ√±√¨√Æ√≤√∞√•√≤√º √±√≥√¨√¨√≥ √¢ √™√†√±√±√•\n[2] √è√Æ√´√Æ√¶√®√≤√º √§√•√≠√º√£√® √¢ √™√†√±√±√≥\n[3] √ë√≠√ø√≤√º √§√•√≠√º√£√® √± √™√†√±√±√ª", "Seleccione", "Cerrar");
			case 2: callcmd::sellbiz(playerid);
			case 3: SPD(playerid, 4895, DIALOG_STYLE_INPUT,"{FFCD00}√è√∞√ÆS√≠√¶√†",""CWHITE"√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø √¢√¢√•√§√®√≤√• √∑√•√∞√•√ß √Ø√∞√Æ√°√•√´\n√Ø√†√∞√†√¨√•√≤√∞√ª √§√´√ø √Ø√∞√ÆS√≠√¶√® √°√®√ß√≠√•√±√†\n\n"CLITEBLUE"[id √®√£√∞√Æ√™√†] [√∂√•√≠√†]","S√≠√´√•√•","Cerrar");
		}
	}
	case 9452: {
		if(!response) return 1;
		switch(listitem) {
			case 0: {
				format(string, 40, ""CWHITE"√Ç √™√†√±√±√•: "CMAIN"%i$", prok4_bank);
				SPD(playerid, 0, 0, "{FFCD00}√ä√†√±√±√† √Ø√≥√≠√™√≤√†", string, "Cerrar", "");
			}
			case 1: SPD(playerid, 9453, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √Ø√≥√≠√™√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √™√†√±√±√≥:", "√è√Æ√´√Æ√¶√®√≤√º", "Cerrar");
			case 2: SPD(playerid, 9454, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √Ø√≥√≠√™√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √¢√ß√ø√≤√º √®√ß √™√†√±√±√ª:", "√Ç√ß√ø√≤√º", "Cerrar");
		}
	}
	case 9453: {
		if(!response) return 1;
		if(!strlen(inputtext)) return SPD(playerid, 9453, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √Ø√≥√≠√™√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √Ø√≥√≠√™√≤√†:", "√è√Æ√´√Æ√¶√®√≤√º", "Cerrar");
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return SPD(playerid, 9453, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √Ø√≥√≠√™√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √Ø√≥√≠√™√≤√†:", "√è√Æ√´√Æ√¶√®√≤√º", "Cerrar");
			}
		}
		if(pData[playerid][pCash] < strval(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√†√™√®√µ √±√∞√•√§√±√≤√¢, √∑√≤√Æ√°√ª √Ø√Æ√´√Æ√¶√®√≤√º √®√µ √¢ √™√†√±√±√≥");
		if(prok4_bank + strval(inputtext) > 5000000) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Ø√Æ√´√Æ√¶√®√≤√º √¢ √™√†√±√±√≥ √°√Æ√´√•√• 5000000$");
		if(prok4_bank > 50000) return SCM(playerid, COLOR_LIGHTGREY, "√ä√†√±√±√† √Ø√Æ√´√≠√†. √è√Æ√´√Æ√¶√®√≤√º √±√∞√•√§√±√≤√¢√† √≠√•√´√º√ß√ø");
		prok4_bank += strval(inputtext);
		mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `prok4_bank` = %d", prok4_bank);
		mysql_tquery(mysql_Handle, string);
		Hook_GivePlayerMoney(playerid, -strval(inputtext));
		return SCMF(playerid, COLOR_BLUE, "√Ç√ª √Ø√Æ√´√Æ√¶√®√´√® √¢ √™√†√±√±√≥ %d$", strval(inputtext));
	}
	case 9454: {
		if(!response) return 1;
		if(!strlen(inputtext)) return SPD(playerid, 9454, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √Ø√≥√≠√™√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √¢√ß√ø√≤√º √®√ß √™√†√±√±√ª:", "√Ç√ß√ø√≤√º", "Cerrar");
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return SPD(playerid, 9454, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √Ø√≥√≠√™√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √¢√ß√ø√≤√º √®√ß √™√†√±√±√ª:", "√Ç√ß√ø√≤√º", "Cerrar");
			}
		}
		if(prok4_bank < strval(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √™√†√±√±√• No √≤√†√™√®√µ √§√•√≠√•√£");
		prok4_bank -= strval(inputtext);
		mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `prok4_bank` = %d", prok4_bank);
		mysql_tquery(mysql_Handle, string);
		Hook_GivePlayerMoney(playerid, strval(inputtext));
		return SCMF(playerid, COLOR_BLUE, "√Ç√ª √¢√ß√ø√´√® √®√ß √™√†√±√±√ª %d$", strval(inputtext));
	}
	case 9456: {
		if(!response) return 1;
		if(prok5_owner != -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ω√≤√Æ√£√Æ √Ø√≥√≠√™√≤√† √≥√¶√• √•√±√≤√º √¢√´√†√§√•√´√•√∂");
		if(pData[playerid][pCash] < 2000000) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √§√•√≠√•√£ √§√´√ø √Ø√Æ√™√≥√Ø√™√®");
		prok5_owner = pData[playerid][pID];
		prok5_bank=0;
		mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `prok5_bank` = 0");
		pData[playerid][prok_have] = 5;
		Hook_GivePlayerMoney(playerid, -2000000);
		GameTextForPlayer(playerid, "~r~-2000000$", 3000, 1);
		UpdatePlayerData(playerid, "prok_have", 5);
		mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `prok5_owner` = %d", prok5_owner);
		mysql_tquery(mysql_Handle, string);
		PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
		new fmt_3d[40];
		format(fmt_3d, sizeof(fmt_3d), "√Ç√´√†√§√•√´√•√∂: "CWHITE"%s", pData[playerid][pName]);
		UpdateDynamic3DTextLabelText(prok_info_5, 0x4682B4FF, fmt_3d);
		SCM(playerid, COLOR_MAIN, "√è√≥√≠√™√≤ √Ø√∞√Æ√™√†√≤√† √≥√±√Ø√•√∏√≠√Æ √Ø√∞√®√Æ√°√∞√•√≤√•√≠ √ß√† "CLITEBLUE"2000000$");
		SCM(playerid, COLOR_ORANGE, "√ç√• √ß√†√°√≥√§√º√≤√• √Æ√Ø√´√†√≤√®√≤√º √•√£√Æ √¢ √±√Ø√•√∂√®√†√´√º√≠√Æ√¨ √∞√†√ß√§√•√´√• √°√†√≠√™√†");
		pData[playerid][newbiz_Pay]=3;
		UpdatePlayerData(playerid,"newbiz_Pay",3);
	}
	case 9457: {
		if(!response) return 1;
		switch(listitem) {
			case 0: SCMF(playerid,-1,"√Ç√†√∏ √°√®√ß√≠√•√± √Æ√Ø√´√†√∑√•√≠ √≠√† {ff9933}%d √®√ß 30 √§√≠√•√©",pData[playerid][newbiz_Pay]);
			case 1: SPD(playerid, 9458, DIALOG_STYLE_LIST,""CMAIN"√ä√†√±√±√† √Ø√≥√≠√™√≤√†", ""CWHITE"[1] √è√Æ√±√¨√Æ√≤√∞√•√≤√º √±√≥√¨√¨√≥ √¢ √™√†√±√±√•\n[2] √è√Æ√´√Æ√¶√®√≤√º √§√•√≠√º√£√® √¢ √™√†√±√±√≥\n[3] √ë√≠√ø√≤√º √§√•√≠√º√£√® √± √™√†√±√±√ª", "Seleccione", "Cerrar");
			case 2: callcmd::sellbiz(playerid);
			case 3: SPD(playerid, 4895, DIALOG_STYLE_INPUT,"{FFCD00}√è√∞√ÆS√≠√¶√†",""CWHITE"√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø √¢√¢√•√§√®√≤√• √∑√•√∞√•√ß √Ø√∞√Æ√°√•√´\n√Ø√†√∞√†√¨√•√≤√∞√ª √§√´√ø √Ø√∞√ÆS√≠√¶√® √°√®√ß√≠√•√±√†\n\n"CLITEBLUE"[id √®√£√∞√Æ√™√†] [√∂√•√≠√†]","S√≠√´√•√•","Cerrar");
		}
	}
	case 9458: {
		if(!response) return 1;
		switch(listitem) {
			case 0: {
				format(string, 40, ""CWHITE"√Ç √™√†√±√±√•: "CMAIN"%i$", prok5_bank);
				SPD(playerid, 0, 0, "{FFCD00}√ä√†√±√±√† √Ø√≥√≠√™√≤√†", string, "Cerrar", "");
			}
			case 1: SPD(playerid, 9459, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √Ø√≥√≠√™√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √™√†√±√±√≥:", "√è√Æ√´√Æ√¶√®√≤√º", "Cerrar");
			case 2: SPD(playerid, 9460, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √Ø√≥√≠√™√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √¢√ß√ø√≤√º √®√ß √™√†√±√±√ª:", "√Ç√ß√ø√≤√º", "Cerrar");
		}
	}
	case 9459: {
		if(!response) return 1;
		if(!strlen(inputtext)) return SPD(playerid, 9459, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √Ø√≥√≠√™√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √Ø√≥√≠√™√≤√†:", "√è√Æ√´√Æ√¶√®√≤√º", "Cerrar");
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return SPD(playerid, 9459, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √Ø√≥√≠√™√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √Ø√≥√≠√™√≤√†:", "√è√Æ√´√Æ√¶√®√≤√º", "Cerrar");
			}
		}
		if(pData[playerid][pCash] < strval(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√†√™√®√µ √±√∞√•√§√±√≤√¢, √∑√≤√Æ√°√ª √Ø√Æ√´√Æ√¶√®√≤√º √®√µ √¢ √™√†√±√±√≥");
		if(prok5_bank + strval(inputtext) > 5000000) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Ø√Æ√´√Æ√¶√®√≤√º √¢ √™√†√±√±√≥ √°√Æ√´√•√• 5000000$");
		if(prok5_bank > 50000) return SCM(playerid, COLOR_LIGHTGREY, "√ä√†√±√±√† √Ø√Æ√´√≠√†. √è√Æ√´√Æ√¶√®√≤√º √±√∞√•√§√±√≤√¢√† √≠√•√´√º√ß√ø");
		prok5_bank += strval(inputtext);
		mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `prok5_bank` = %d", prok5_bank);
		mysql_tquery(mysql_Handle, string);
		Hook_GivePlayerMoney(playerid, -strval(inputtext));
		return SCMF(playerid, COLOR_BLUE, "√Ç√ª √Ø√Æ√´√Æ√¶√®√´√® √¢ √™√†√±√±√≥ %d$", strval(inputtext));
	}
	case 9460: {
		if(!response) return 1;
		if(!strlen(inputtext)) return SPD(playerid, 9460, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √Ø√≥√≠√™√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √¢√ß√ø√≤√º √®√ß √™√†√±√±√ª:", "√Ç√ß√ø√≤√º", "Cerrar");
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return SPD(playerid, 9460, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √Ø√≥√≠√™√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √¢√ß√ø√≤√º √®√ß √™√†√±√±√ª:", "√Ç√ß√ø√≤√º", "Cerrar");
			}
		}
		if(prok5_bank < strval(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √™√†√±√±√• No √≤√†√™√®√µ √§√•√≠√•√£");
		prok5_bank -= strval(inputtext);
		mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `prok5_bank` = %d", prok5_bank);
		mysql_tquery(mysql_Handle, string);
		Hook_GivePlayerMoney(playerid, strval(inputtext));
		return SCMF(playerid, COLOR_BLUE, "√Ç√ª √¢√ß√ø√´√® √®√ß √™√†√±√±√ª %d$", strval(inputtext));
	}
	case 9462: {
		if(!response) return 1;
		if(prok6_owner != -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ω√≤√Æ√£√Æ √Ø√≥√≠√™√≤√† √≥√¶√• √•√±√≤√º √¢√´√†√§√•√´√•√∂");
		if(pData[playerid][pCash] < 2000000) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √§√•√≠√•√£ √§√´√ø √Ø√Æ√™√≥√Ø√™√®");
		prok6_owner = pData[playerid][pID];
		prok6_bank=0;
		mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `prok6_bank` = 0");
		pData[playerid][prok_have] = 6;
		Hook_GivePlayerMoney(playerid, -2000000);
		GameTextForPlayer(playerid, "~r~-2000000$", 3000, 1);
		UpdatePlayerData(playerid, "prok_have", 6);
		mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `prok6_owner` = %d", prok6_owner);
		mysql_tquery(mysql_Handle, string);
		PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
		new fmt_3d[40];
		format(fmt_3d, sizeof(fmt_3d), "√Ç√´√†√§√•√´√•√∂: "CWHITE"%s", pData[playerid][pName]);
		UpdateDynamic3DTextLabelText(prok_info_6, 0x4682B4FF, fmt_3d);
		SCM(playerid, COLOR_MAIN, "√è√≥√≠√™√≤ √Ø√∞√Æ√™√†√≤√† √≥√±√Ø√•√∏√≠√Æ √Ø√∞√®√Æ√°√∞√•√≤√•√≠ √ß√† "CLITEBLUE"2000000$");
		SCM(playerid, COLOR_ORANGE, "√ç√• √ß√†√°√≥√§√º√≤√• √Æ√Ø√´√†√≤√®√≤√º √•√£√Æ √¢ √±√Ø√•√∂√®√†√´√º√≠√Æ√¨ √∞√†√ß√§√•√´√• √°√†√≠√™√†");
		pData[playerid][newbiz_Pay]=3;
		UpdatePlayerData(playerid,"newbiz_Pay",3);
	}
	case 9463: {
		if(!response) return 1;
		switch(listitem) {
			case 0: SCMF(playerid,-1,"√Ç√†√∏ √°√®√ß√≠√•√± √Æ√Ø√´√†√∑√•√≠ √≠√† {ff9933}%d √®√ß 30 √§√≠√•√©",pData[playerid][newbiz_Pay]);
			case 1: SPD(playerid, 9464, DIALOG_STYLE_LIST,""CMAIN"√ä√†√±√±√† √Ø√≥√≠√™√≤√†", ""CWHITE"[1] √è√Æ√±√¨√Æ√≤√∞√•√≤√º √±√≥√¨√¨√≥ √¢ √™√†√±√±√•\n[2] √è√Æ√´√Æ√¶√®√≤√º √§√•√≠√º√£√® √¢ √™√†√±√±√≥\n[3] √ë√≠√ø√≤√º √§√•√≠√º√£√® √± √™√†√±√±√ª", "Seleccione", "Cerrar");
			case 2: callcmd::sellbiz(playerid);
			case 3: SPD(playerid, 4895, DIALOG_STYLE_INPUT,"{FFCD00}√è√∞√ÆS√≠√¶√†",""CWHITE"√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø √¢√¢√•√§√®√≤√• √∑√•√∞√•√ß √Ø√∞√Æ√°√•√´\n√Ø√†√∞√†√¨√•√≤√∞√ª √§√´√ø √Ø√∞√ÆS√≠√¶√® √°√®√ß√≠√•√±√†\n\n"CLITEBLUE"[id √®√£√∞√Æ√™√†] [√∂√•√≠√†]","S√≠√´√•√•","Cerrar");
		}
	}
	case 9464: {
		if(!response) return 1;
		switch(listitem) {
			case 0: {
				format(string, 40, ""CWHITE"√Ç √™√†√±√±√•: "CMAIN"%i$", prok6_bank);
				SPD(playerid, 0, 0, "{FFCD00}√ä√†√±√±√† √Ø√≥√≠√™√≤√†", string, "Cerrar", "");
			}
			case 1: SPD(playerid, 9465, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √Ø√≥√≠√™√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √™√†√±√±√≥:", "√è√Æ√´√Æ√¶√®√≤√º", "Cerrar");
			case 2: SPD(playerid, 9466, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √Ø√≥√≠√™√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √¢√ß√ø√≤√º √®√ß √™√†√±√±√ª:", "√Ç√ß√ø√≤√º", "Cerrar");
		}
	}
	case 9465: {
		if(!response) return 1;
		if(!strlen(inputtext)) return SPD(playerid, 9465, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √Ø√≥√≠√™√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √Ø√≥√≠√™√≤√†:", "√è√Æ√´√Æ√¶√®√≤√º", "Cerrar");
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return SPD(playerid, 9465, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √Ø√≥√≠√™√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √Ø√≥√≠√™√≤√†:", "√è√Æ√´√Æ√¶√®√≤√º", "Cerrar");
			}
		}
		if(pData[playerid][pCash] < strval(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√†√™√®√µ √±√∞√•√§√±√≤√¢, √∑√≤√Æ√°√ª √Ø√Æ√´√Æ√¶√®√≤√º √®√µ √¢ √™√†√±√±√≥");
		if(prok6_bank + strval(inputtext) > 5000000) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Ø√Æ√´√Æ√¶√®√≤√º √¢ √™√†√±√±√≥ √°√Æ√´√•√• 5000000$");
		if(prok6_bank > 50000) return SCM(playerid, COLOR_LIGHTGREY, "√ä√†√±√±√† √Ø√Æ√´√≠√†. √è√Æ√´√Æ√¶√®√≤√º √±√∞√•√§√±√≤√¢√† √≠√•√´√º√ß√ø");
		prok6_bank += strval(inputtext);
		mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `prok6_bank` = %d", prok6_bank);
		mysql_tquery(mysql_Handle, string);
		Hook_GivePlayerMoney(playerid, -strval(inputtext));
		return SCMF(playerid, COLOR_BLUE, "√Ç√ª √Ø√Æ√´√Æ√¶√®√´√® √¢ √™√†√±√±√≥ %d$", strval(inputtext));
	}
	case 9466: {
		if(!response) return 1;
		if(!strlen(inputtext)) return SPD(playerid, 9466, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √Ø√≥√≠√™√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √¢√ß√ø√≤√º √®√ß √™√†√±√±√ª:", "√Ç√ß√ø√≤√º", "Cerrar");
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return SPD(playerid, 9466, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √Ø√≥√≠√™√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √¢√ß√ø√≤√º √®√ß √™√†√±√±√ª:", "√Ç√ß√ø√≤√º", "Cerrar");
			}
		}
		if(prok6_bank < strval(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √™√†√±√±√• No √≤√†√™√®√µ √§√•√≠√•√£");
		prok6_bank -= strval(inputtext);
		mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `prok6_bank` = %d", prok6_bank);
		mysql_tquery(mysql_Handle, string);
		Hook_GivePlayerMoney(playerid, strval(inputtext));
		return SCMF(playerid, COLOR_BLUE, "√Ç√ª √¢√ß√ø√´√® √®√ß √™√†√±√±√ª %d$", strval(inputtext));
	}
	case 9468: {
		if(!response) return 1;
		if(prok7_owner != -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ω√≤√Æ√£√Æ √Ø√≥√≠√™√≤√† √≥√¶√• √•√±√≤√º √¢√´√†√§√•√´√•√∂");
		if(pData[playerid][pCash] < 2000000) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √§√•√≠√•√£ √§√´√ø √Ø√Æ√™√≥√Ø√™√®");
		prok7_owner = pData[playerid][pID];
		prok7_bank=0;
		mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `prok7_bank` = 0");
		pData[playerid][prok_have] = 7;
		Hook_GivePlayerMoney(playerid, -2000000);
		GameTextForPlayer(playerid, "~r~-2000000$", 3000, 1);
		UpdatePlayerData(playerid, "prok_have", 7);
		mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `prok7_owner` = %d", prok7_owner);
		mysql_tquery(mysql_Handle, string);
		PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
		new fmt_3d[40];
		format(fmt_3d, sizeof(fmt_3d), "√Ç√´√†√§√•√´√•√∂: "CWHITE"%s", pData[playerid][pName]);
		UpdateDynamic3DTextLabelText(prok_info_7, 0x4682B4FF, fmt_3d);
		SCM(playerid, COLOR_MAIN, "√è√≥√≠√™√≤ √Ø√∞√Æ√™√†√≤√† √≥√±√Ø√•√∏√≠√Æ √Ø√∞√®√Æ√°√∞√•√≤√•√≠ √ß√† "CLITEBLUE"2000000$");
		SCM(playerid, COLOR_ORANGE, "√ç√• √ß√†√°√≥√§√º√≤√• √Æ√Ø√´√†√≤√®√≤√º √•√£√Æ √¢ √±√Ø√•√∂√®√†√´√º√≠√Æ√¨ √∞√†√ß√§√•√´√• √°√†√≠√™√†");
		pData[playerid][newbiz_Pay]=3;
		UpdatePlayerData(playerid,"newbiz_Pay",3);
	}
	case 9469: {
		if(!response) return 1;
		switch(listitem) {
			case 0: SCMF(playerid,-1,"√Ç√†√∏ √°√®√ß√≠√•√± √Æ√Ø√´√†√∑√•√≠ √≠√† {ff9933}%d √®√ß 30 √§√≠√•√©",pData[playerid][newbiz_Pay]);
			case 1: SPD(playerid, 9470, DIALOG_STYLE_LIST,""CMAIN"√ä√†√±√±√† √Ø√≥√≠√™√≤√†", ""CWHITE"[1] √è√Æ√±√¨√Æ√≤√∞√•√≤√º √±√≥√¨√¨√≥ √¢ √™√†√±√±√•\n[2] √è√Æ√´√Æ√¶√®√≤√º √§√•√≠√º√£√® √¢ √™√†√±√±√≥\n[3] √ë√≠√ø√≤√º √§√•√≠√º√£√® √± √™√†√±√±√ª", "Seleccione", "Cerrar");
			case 2: callcmd::sellbiz(playerid);
			case 3: SPD(playerid, 4895, DIALOG_STYLE_INPUT,"{FFCD00}√è√∞√ÆS√≠√¶√†",""CWHITE"√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø √¢√¢√•√§√®√≤√• √∑√•√∞√•√ß √Ø√∞√Æ√°√•√´\n√Ø√†√∞√†√¨√•√≤√∞√ª √§√´√ø √Ø√∞√ÆS√≠√¶√® √°√®√ß√≠√•√±√†\n\n"CLITEBLUE"[id √®√£√∞√Æ√™√†] [√∂√•√≠√†]","S√≠√´√•√•","Cerrar");
		}
	}
	case 9470: {
		if(!response) return 1;
		switch(listitem) {
			case 0: {
				format(string, 40, ""CWHITE"√Ç √™√†√±√±√•: "CMAIN"%i$", prok7_bank);
				SPD(playerid, 0, 0, "{FFCD00}√ä√†√±√±√† √Ø√≥√≠√™√≤√†", string, "Cerrar", "");
			}
			case 1: SPD(playerid, 9471, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √Ø√≥√≠√™√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √™√†√±√±√≥:", "√è√Æ√´√Æ√¶√®√≤√º", "Cerrar");
			case 2: SPD(playerid, 9472, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √Ø√≥√≠√™√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √¢√ß√ø√≤√º √®√ß √™√†√±√±√ª:", "√Ç√ß√ø√≤√º", "Cerrar");
		}
	}
	case 9471: {
		if(!response) return 1;
		if(!strlen(inputtext)) return SPD(playerid, 9471, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √Ø√≥√≠√™√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √Ø√≥√≠√™√≤√†:", "√è√Æ√´√Æ√¶√®√≤√º", "Cerrar");
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return SPD(playerid, 9471, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √Ø√≥√≠√™√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√Æ√´√Æ√¶√®√≤√º √¢ √Ø√≥√≠√™√≤√†:", "√è√Æ√´√Æ√¶√®√≤√º", "Cerrar");
			}
		}
		if(pData[playerid][pCash] < strval(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√†√™√®√µ √±√∞√•√§√±√≤√¢, √∑√≤√Æ√°√ª √Ø√Æ√´√Æ√¶√®√≤√º √®√µ √¢ √™√†√±√±√≥");
		if(prok7_bank + strval(inputtext) > 5000000) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Ø√Æ√´√Æ√¶√®√≤√º √¢ √™√†√±√±√≥ √°√Æ√´√•√• 5000000$");
		if(prok7_bank > 50000) return SCM(playerid, COLOR_LIGHTGREY, "√ä√†√±√±√† √Ø√Æ√´√≠√†. √è√Æ√´√Æ√¶√®√≤√º √±√∞√•√§√±√≤√¢√† √≠√•√´√º√ß√ø");
		prok7_bank += strval(inputtext);
		mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `prok7_bank` = %d", prok7_bank);
		mysql_tquery(mysql_Handle, string);
		Hook_GivePlayerMoney(playerid, -strval(inputtext));
		return SCMF(playerid, COLOR_BLUE, "√Ç√ª √Ø√Æ√´√Æ√¶√®√´√® √¢ √™√†√±√±√≥ %d$", strval(inputtext));
	}
	case 9472: {
		if(!response) return 1;
		if(!strlen(inputtext)) return SPD(playerid, 9472, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √Ø√≥√≠√™√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √¢√ß√ø√≤√º √®√ß √™√†√±√±√ª:", "√Ç√ß√ø√≤√º", "Cerrar");
		for(new i = strlen(inputtext) - 1; i != -1; i --) {
			switch(inputtext[i]) {
				case '0'..'9': continue;
				default: return SPD(playerid, 9472, DIALOG_STYLE_INPUT, "{FFCD00}√ä√†√±√±√† √Ø√≥√≠√™√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√≥√¨√¨√≥, √™√Æ√≤√Æ√∞√≥√æ Quieres √¢√ß√ø√≤√º √®√ß √™√†√±√±√ª:", "√Ç√ß√ø√≤√º", "Cerrar");
			}
		}
		if(prok7_bank < strval(inputtext)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √™√†√±√±√• No √≤√†√™√®√µ √§√•√≠√•√£");
		prok7_bank -= strval(inputtext);
		mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `prok7_bank` = %d", prok7_bank);
		mysql_tquery(mysql_Handle, string);
		Hook_GivePlayerMoney(playerid, strval(inputtext));
		return SCMF(playerid, COLOR_BLUE, "√Ç√ª √¢√ß√ø√´√® √®√ß √™√†√±√±√ª %d$", strval(inputtext));
	}
	case 1005: allcmds_dialog(playerid);
	case 1006: {
		if(!response) return allcmds_dialog(playerid);
		new cmdlist_str[] = 
		""CBLUE"/inv "CWHITE"- √é√≤√™√∞√ª√≤√º √®√≠√¢√•√≠√≤√†√∞√º\n\
		"CBLUE"/hreset "CWHITE"- √ìS√≠√´√®√≤√º √≠√†√§√•√≤√ª√© √†√™√±√•√±√±√≥√†√∞\n\
		"CBLUE"/army "CWHITE"- √è√Æ√™√†√ß√†√≤√º √¢√Æ√•√≠√≠√ª√© √°√®√´√•√≤ √§√∞√≥√£√Æ√¨√≥ √®√£√∞√Æ√™√≥\n\
		"CBLUE"/showmed "CWHITE"- √è√Æ√™√†√ß√†√≤√º √±√¢√Æ√æ √¨√•√§√®√∂√®√≠√±√™√≥√æ √™√†√∞√≤√≥ √®√£√∞√Æ√™√≥\n\
		"CBLUE"/med "CWHITE"- √á√†√≠√ø√≤√º √´√•√∑√•√°√≠√≥√æ √™√Æ√©√™√≥\n\
		"CBLUE"/checkpay "CWHITE"- √è√∞√Æ√¢√•√∞√®√≤√º √≠√†√´√®√∑√®√• √≠√Æ√¢√ª√µ √Ø√Æ√Ø√Æ√´√≠√•√≠√®√© √®√£√∞√Æ√¢√Æ√£√Æ √±√∑¬∏√≤√†, √† √≤√†√™√¶√• √ß√†√∑√®√±√´√®√≤√º √®√µ √≠√† √†√™√™√†√≥√≠√≤\n\
		"CBLUE"/donate "CWHITE"- √é√≤√™√∞√ª√≤√º √¨√†√£√†√ß√®√≠ (√§√Æ√≠√†√≤)\n\
		"CBLUE"/regst "CWHITE"- √è√Æ√±√¨√Æ√≤√∞√•√≤√º √±√Ø√®√±√Æ√™ √Ø√∞√®√£√´√†√∏¬∏√≠√≠√ª√µ √Ç√†√¨√® √®√£√∞√Æ√™√Æ√¢\n\
		"CBLUE"/revoke "CWHITE"- √é√≤√Æ√ß√¢√†√≤√º √±√¢√Æ¬∏ √Ø√∞√•√§√´√Æ√¶√•√≠√®√•\n\
		"CBLUE"/armoff "CWHITE"- √ë√≠√ø√≤√º √°√∞√Æ√≠√•√¶√®√´√•√≤\n\
		"CBLUE"/tradesim "CWHITE"- √é√°√¨√•√≠√ø√≤√º√±√ø SIM-√™√†√∞√≤√†√¨√® √± √§√∞√≥√£√®√¨ √®√£√∞√Æ√™√Æ√¨\n\
		"CBLUE"/setspawn "CWHITE"- √ë√¨√•√≠√®√≤√º √¨√•√±√≤√Æ √¢√Æ√ß√∞√Æ√¶√§√•√≠√®√ø\n\
		"CBLUE"/hist(ory) "CWHITE"- √è√Æ√±√¨√Æ√≤√∞√•√≤√º √Ø√∞√Æ√∏√´√ª√• √®√¨√•√≠√† √®√£√∞√Æ√™√†\n\
		"CBLUE"/end "CWHITE"- √ë√≠√ø√≤√º √¨√†√±√™√≥ √®√´√® √≥√≠√®√¥√Æ√∞√¨√≥\n\
		"CBLUE"/usedrugs "CWHITE"- √ì√Ø√Æ√≤√∞√•√°√®√≤√º √≠√†√∞√™√Æ√≤√®√™√®\n\
		"CBLUE"/power "CWHITE"- √è√∞√Æ√±√¨√Æ√≤√∞√•√≤√º √®√´√® √Ø√∞√Æ√™√†√∑√†√≤√º √µ√†√∞√†√™√≤√•√∞√®√±√≤√®√™√® √±√¢√Æ√•√£√Æ √†√¢√≤√Æ√¨√Æ√°√®√´√ø\n\
		"CBLUE"/news "CWHITE"- √è√∞√Æ√±√¨√Æ√≤√∞√•√≤√º √Ø√Æ√±√´√•√§√≠√®√• 15 √£√Æ√±√≥S√≠√∞√±√≤√¢√•√≠√≠√ª√µ √≠√Æ√¢√Æ√±√≤√•√©\n\
		"CBLUE"/no "CWHITE"- √é√≤√™√†√ß√†√≤√º√±√ø √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø\n\
		"CBLUE"/yes "CWHITE"- √è√∞√®√≠√ø√≤√º √Ø√∞√•√§√´√Æ√¶√•√≠√®√•\n\
		"CBLUE"/add "CWHITE"- √Ñ√Æ√°√†√¢√®√≤√º √®√£√∞√Æ√™√† √¢ √±√¢√Æ√æ √≤√•√´√•√¥√Æ√≠√≠√≥√æ √™√≠√®√£√≥\n\
		"CBLUE"/charity "CWHITE"- √ë√Æ√¢√•√∞√∏√®√≤√º √Ø√Æ√¶√•√∞√≤√¢√Æ√¢√†√≠√®√• √¢ √°√´√†√£√Æ√≤√¢√Æ√∞√®√≤√•√´√º√≠√ª√© √¥√Æ√≠√§ √∏√≤√†√≤√†";

		SPD(playerid, 1005, DIALOG_STYLE_MSGBOX, "√é√°√π√®√• √™√Æ√¨√†√≠√§√ª", cmdlist_str, "Siguiente", "");
	}
	case 27515: {
			if(!response) return callcmd::menu(playerid);
			switch(listitem) {
				case 0: {
					new cmdlist_str[] = 
					""CBLUE"/pay "CWHITE"- √è√•√∞√•S√≠√≤√º √§√•√≠√º√£√® √§√∞√≥√£√Æ√¨√≥ √®√£√∞√Æ√™√≥\n\
					"CBLUE"/id "CWHITE"- √ç√†√©√≤√® √®√£√∞√Æ√™√† √Ø√Æ √•√£√Æ √≠√®√™√≥ (√®√´√® √Ø√Æ √∑√†√±√≤√® √•√£√Æ √≠√®√™√†). √Ö√±√´√® √≥√™√†√ß√†√≤√º ID √®√£√∞√Æ√™√†, √≤√Æ √Æ√≤√Æ√°√∞√†√ß√®√≤√±√ø √•√£√Æ √≠√®√™\n\
					"CBLUE"/lic "CWHITE"- √è√Æ√™√†√ß√†√≤√º √®√¨√•√æ√π√®√•√±√ø √´√®√∂√•√≠√ß√®√®\n\
					"CBLUE"/pass "CWHITE"- √è√Æ√™√†√ß√†√≤√º √Ø√†√±√Ø√Æ√∞√≤\n\
					"CBLUE"/skill "CWHITE"- √è√Æ√™√†√ß√†√≤√º √±√¢√Æ√® √≠√†√¢√ª√™√® √¢√´√†√§√•√≠√®√ø √Æ√∞√≥√¶√®√•√¨\n\
					"CBLUE"/healme "CWHITE"- √à√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √†√Ø√≤√•√∑√™√≥. √ä√≥√Ø√®√≤√º √•¬∏ √¨√Æ√¶√≠√Æ √¢ √´√æ√°√Æ√¨ √¨√†√£√†√ß√®√≠√• 24-7\n\
					"CBLUE"/anim(list) "CWHITE"- √é√≤√™√∞√ª√≤√º √±√Ø√®√±√Æ√™ √†√≠√®√¨√†√∂√®√©\n\
					"CBLUE"/gotp "CWHITE"- √í√•√´√•√Ø√Æ√∞√≤√®√∞√Æ√¢√†√≤√º√±√ø √≠√† √¨√•√∞√Æ√Ø√∞√®√ø√≤√®√•. √î√≥√≠√™√∂√®√ø √¢√™√´√æ√∑√†√•√≤√±√ø √†√§√¨√®√≠√®√±√≤√∞√†√∂√®√•√©\n\
					"CBLUE"/drop "CWHITE"- √Ç√ª√°√∞√Æ√±√®√≤√º √Æ√∞√≥√¶√®√•\n\
					"CBLUE"/leaders "CWHITE"- √è√Æ√™√†√ß√ª√¢√†√•√≤ √±√Ø√®√±√Æ√™ √¢√±√•√µ √´√®√§√•√∞√Æ√¢ (√∞√≥√™√Æ√¢√Æ√§√®√≤√•√´√•√©) √Æ√∞√£√†√≠√®√ß√†√∂√®√© √® √®√≠√¥√Æ√∞√¨√†√∂√®√æ √Æ √≠√®√µ\n\
					"CBLUE"/present "CWHITE"- √è√ÆS√≠√∞√®√≤√º √∂√¢√•√≤√ª √™√Æ√¨√≥-√´√®√°√Æ\n\
					"CBLUE"/tune "CWHITE"- √ì√±√≤√†√≠√Æ√¢√®√≤√º √≤√æ√≠√®√≠√£ √≠√† √±√¢√Æ√© √†√¢√≤√Æ√¨√Æ√°√®√´√º. √ç√•√Æ√°√µ√Æ√§√®√¨√Æ √°√ª√≤√º √ß√†√Ø√®√±√†√≠√≠√ª√¨ √¢ √≤√æ√≠√®√≠√£-√†√≤√•√´√º√•\n\
					"CBLUE"/buybiz "CWHITE"- √è√∞√®√Æ√°√∞√•√±√≤√® √°√®√ß√≠√•√±\n\
					"CBLUE"/back "CWHITE"- √Ç√•√∞√≠√≥√≤√º√±√ø √≠√† √¨√•√±√≤√Æ, √£√§√• √Ç√ª √°√ª√´√® √§√Æ √≤√•√´√•√Ø√Æ√∞√≤√†√∂√®√®. √è√∞√® √≤√•√´√•√Ø√Æ√∞√≤√• √∑√•√∞√•√ß √™√Æ√¨√†√≠√§√≥ /gotp\n\
					"CBLUE"/unrent "CWHITE"- √ê√†√±√≤√Æ√∞√£√≠√≥√≤√º √§√Æ√£√Æ√¢√Æ√∞ √†√∞√•√≠√§√ª √≤√∞√†√≠√±√Ø√Æ√∞√≤√†\n\
					"CBLUE"/menu (/mn, /mm) "CWHITE"- √é√≤√™√∞√ª√≤√º √¨√•√≠√æ √Ø√•√∞√±√Æ√≠√†√¶√†\n\
					"CBLUE"/dice "CWHITE"- √ç√†√∑√†√≤√º √®√£√∞√≥ √¢ √™√Æ√±√≤√®. √í√Æ√´√º√™√Æ √¢ √™√†√ß√®√≠√Æ\n\
					"CBLUE"/mask "CWHITE"- √ç√†√§√•√≤√º √¨√†√±√™√≥\n\
					"CBLUE"/play "CWHITE"- √Ç√™√´√æ√∑√®√≤√º √®√´√® apagar √Æ√≠√´√†√©√≠ √∞√†√§√®√Æ\n\
					"CBLUE"/head "CWHITE"- √ç√†√§√•√≤√º √®√´√® √±√≠√ø√≤√º √≠√†√≥√∏√≠√®√™√® √Ø√∞√® √Ø√∞√Æ√±√´√≥√∏√®√¢√†√≠√®√® √Æ√≠√´√†√©√≠ √∞√†√§√®√Æ\n\
					"CBLUE"/book "CWHITE"- √é√≤√™√∞√ª√≤√º √±√¢√Æ√æ √≤√•√´√•√¥√Æ√≠√≠√≥√æ √™√≠√®√£√≥\n\
					"CBLUE"/sellsim "CWHITE"- √è√∞√ÆS√≠√≤√º SIM-√™√†√∞√≤√≥ √§√∞√≥√£√Æ√¨√≥ √®√£√∞√Æ√™√≥\n\
					"CBLUE"/report "CWHITE"- √ë√¢√ø√ß√†√≤√º√±√ø √± √†√§√¨√®√≠√®√±√≤√∞√†√∂√®√•√©\n\
					"CBLUE"/selfie "CWHITE"- √ë√§√•√´√†√≤√º √±√•√´√¥√®\n\
					"CBLUE"/adlist "CWHITE"- √è√∞√Æ√±√¨√Æ√≤√∞√•√≤√º √±√Ø√®√±√Æ√™ √†√§√¢√Æ√™√†√≤√Æ√¢ √Æ√≠√´√†√©√≠\n\
					"CBLUE"/smoke "CWHITE"- √á√†√™√≥√∞√®√≤√º √±√®√£√†√∞√•√≤√≥\n\
					"CBLUE"/cigarettes "CWHITE"- √ì√ß√≠√†√≤√º √±√™√Æ√´√º√™√Æ √Æ√±√≤√†√´√Æ√±√º √±√®√£√†√∞√•√≤, √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√© √ß√†√¶√®√£√†√´√™√®\n\
					"CBLUE"/give "CWHITE"- √è√•√∞√•S√≠√∑√† √∑√•√£√Æ-√´√®√°√Æ √§√∞√≥√£√Æ√¨√≥ √®√£√∞√Æ√™√≥ (√≠√†√∞√™√Æ√≤√®√™√®, √¨√•√≤√†√´√´ √® √≤. √§.)\n\
					"CBLUE"/time "CWHITE"- √å√Æ√¶√•√≤ √Ø√Æ√™√†√ß√ª√¢√†√≤√º: √¢√∞√•√¨√ø √§√Æ √¢√ª√µ√ÆS√≠ √®√ß √≤√æ√∞√º√¨√ª, √¢√∞√•√¨√ø √°√´√Æ√™√®√∞√Æ√¢√™√® √∑√†√≤√†";

					SPD(playerid, 1006, DIALOG_STYLE_MSGBOX, "√é√°√π√®√• √™√Æ√¨√†√≠√§√ª", cmdlist_str, "S√≠√´√•√• >>", "Siguiente");
				}
				case 1: {
					new cmdlist_str[] = 
					""CBLUE"/fill "CWHITE"- √á√†√Ø√∞√†√¢√®√≤√º √≤√∞√†√≠√±√Ø√Æ√∞√≤\n\
					"CBLUE"/lock "CWHITE"- √é√≤√™√∞√ª√≤√º √®√´√® Cerrar √≤√∞√†√≠√±√Ø√Æ√∞√≤\n\
					"CBLUE"/e "CWHITE"- √á√†√£√´√≥√∏√®√≤√º √®√´√® √ß√†√¢√•√±√≤√® √§√¢√®√£√†√≤√•√´√º\n\
					"CBLUE"/l "CWHITE"- √Ç√™√´√æ√∑√®√≤√º √®√´√® √¢√ª√™√´√æ√∑√®√≤√º √¥√†√∞√ª\n\
					"CBLUE"/addit "CWHITE"- √é√≤√™√∞√ª√≤√º √Ø√†√≠√•√´√º √Ø√∞√®√°√Æ√∞√Æ√¢ √†√¢√≤√Æ√¨√Æ√°√®√´√ø\n\
					"CBLUE"/amg "CWHITE"- √Ç√™√´√æ√∑√®√≤√º √®√´√® apagar AMG √∞√•√¶√®√¨ √≠√† √≤√∞√†√≠√±√Ø√Æ√∞√≤√•\n\
					"CBLUE"/alarm "CWHITE"- √ì√Ø√∞√†√¢√´√•√≠√®√• √±√®√£√≠√†√´√®√ß√†√∂√®√•√©\n\
					"CBLUE"/eject "CWHITE"- √Ç√ª√°√∞√Æ√±√®√≤√º √®√£√∞√Æ√™√† √®√ß √≤√∞√†√≠√±√Ø√Æ√∞√≤√≠√Æ√£√Æ √±√∞√•√§√±√≤√¢√†\n\
					"CBLUE"/strobe "CWHITE"- √Ç√™√´√æ√∑√®√≤√º √®√´√® √¢√ª√™√´√æ√∑√®√≤√º √±√≤√∞√Æ√°√Æ√±√™√Æ√Ø√ª";

					SPD(playerid, 1005, DIALOG_STYLE_MSGBOX, "√í√∞√†√≠√±√Ø√Æ√∞√≤", cmdlist_str, "Siguiente", "");
				}
				case 2: {
					new cmdlist_str[] = 
					""CBLUE"/phone "CWHITE"- √Ñ√Æ√±√≤√†√≤√º √¨√Æ√°√®√´√º√≠√ª√© √≤√•√´√•√¥√Æ√≠\n\
					"CBLUE"/sms "CWHITE"- √é√≤√Ø√∞√†√¢√®√≤√º SMS √±√Æ√Æ√°√π√•√≠√®√• √§√∞√≥√£√Æ√¨√≥ √®√£√∞√Æ√™√≥\n\
					"CBLUE"/call "CWHITE"- √è√Æ√ß√¢√Æ√≠√®√≤√º √Ø√Æ √≤√•√´√•√¥√Æ√≠√≥\n\
					"CBLUE"/s "CWHITE"- √ä√∞√®√™√≠√≥√≤√º\n\
					"CBLUE"/p "CWHITE"- √é√≤√¢√•√≤√®√≤√º √≠√† √ß√¢√Æ√≠√Æ√™\n\
					"CBLUE"/h "CWHITE"- √á√†√¢√•√∞√∏√®√≤√º √≤√•√´√•√¥√Æ√≠√≠√ª√© √∞√†√ß√£√Æ√¢√Æ√∞\n\
					"CBLUE"/hi "CWHITE"- √è√Æ√¶√†√≤√º √∞√≥√™√≥ √®√£√∞√Æ√™√≥\n\
					"CBLUE"/w "CWHITE"- √É√Æ√¢√Æ√∞√®√≤√º √∏√•√Ø√Æ√≤√Æ√¨\n\
					"CBLUE"/do "CWHITE"- √é√≤√ª√£√∞√†√≤√º RP √§√•√©√±√≤√¢√®√• √Æ√≤ √≤√∞√•√≤√º√•√£√Æ √´√®√∂√†\n\
					"CBLUE"/me "CWHITE"- √ä√Æ√¨√†√≠S√≠ √§√´√ø √Æ√Ø√®√±√†√≠√®√ø √≤√•√™√≥√π√•√£√Æ RP √§√•√©√±√≤√¢√®√ø\n\
					"CBLUE"/ame "CWHITE"- √é√Ø√®√±√†√≠√®√• RP √§√•√©√±√≤√¢√®√ø √≠√†√§ √£√Æ√´√Æ√¢√Æ√©\n\
					"CBLUE"/todo "CWHITE"- √ä√Æ√¨√†√≠S√≠ √§√´√ø √Æ√≤√ª√£√∞√Æ√¢√™√® RP √±√®√≤√≥√†√∂√®√©. √Ç√¢√•√§√®√≤√• /todo √§√´√ø √Ø√∞√Æ√±√¨√Æ√≤√∞√† √Ø√∞√®√¨√•√∞√† √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√ø\n\
					"CBLUE"/n "CWHITE"- OOC √∑√†√≤ (Out Of Character) ‚Äî √∑√†√≤ √§√´√ø √¢√±√•√£√Æ, √∑√≤√Æ √™√†√±√†√•√≤√±√ø √∞√•√†√´√º√≠√Æ√£√Æ, √≠√• √®√£√∞√Æ√¢√Æ√£√Æ √¨√®√∞√†\n\
					"CBLUE"/f "CWHITE"- √é√°√π√®√© √∑√†√≤ √§√´√ø √®√≠√±√≤√∞√≥√™√≤√Æ√∞√Æ√¢, √≠√•√´√•√£√†√´√º√≠√ª√µ √Æ√∞√£√†√≠√®√ß√†√∂√®√© √® √∞√†√°√Æ√≤\n\
					"CBLUE"/r "CWHITE"- √ç√†√Ø√®√±√†√≤√º √¢ √∑√†√≤ √±√¢√Æ√•√© √Æ√∞√£√†√≠√®√ß√†√∂√®√®\n\
					"CBLUE"/gnews (/gov) "CWHITE"- √É√Æ√±√≥S√≠√∞√±√≤√¢√•√≠√≠√ª√• √≠√Æ√¢√Æ√±√≤√®. √Ñ√´√ø √´√®√§√•√∞√Æ√¢ √£√Æ√±. √Æ√∞√£√†√≠√®√ß√†√∂√®√© √® 9 √∞√†√≠√£√Æ√¢\n\
					"CBLUE"/try "CWHITE"- √ë√Æ√¢√•√∞√∏√®√≤√º √Ø√Æ√Ø√ª√≤√™√≥ √™√†√™√Æ√£√Æ-√´√®√°√Æ √§√•√©√±√≤√¢√®√ø\n\
					"CBLUE"/fc "CWHITE"- √ó√†√≤ √±√•√¨√º√®\n\
					"CBLUE"/finvite "CWHITE"- √è√∞√®√£√´√†√±√®√≤√º √®√£√∞√Æ√™√† √¢ √±√•√¨√º√æ\n\
					"CBLUE"/family "CWHITE"- √å√•√≠√æ √≥√Ø√∞√†√¢√´√•√≠√®√ø √±√•√¨√º¬∏√©";

					SPD(playerid, 1005, DIALOG_STYLE_MSGBOX, "√é√°√π√•√≠√®√• √® √±√•√¨√º√®", cmdlist_str, "Siguiente", "");
				}
				case 3: {
					new cmdlist_str[] = 
					""CBLUE"/allow "CWHITE"- √Ç√ªS√≠√≤√º √™√´√æ√∑√® √Æ√≤ √±√¢√Æ√•√£√Æ √≤√∞√†√≠√±√Ø√Æ√∞√≤√† √§√∞√≥√£√Æ√¨√≥ √®√£√∞√Æ√™√≥\n\
					"CBLUE"/sellmycar "CWHITE"- √è√∞√ÆS√≠√≤√º √±√¢√Æ√© √≤√∞√†√≠√±√Ø√Æ√∞√≤ √§√∞√≥√£√Æ√¨√≥ √®√£√∞√Æ√™√≥\n\
					"CBLUE"/fixcar "CWHITE"- √Ñ√Æ√±√≤√†√¢√®√≤√º √≤√∞√†√≠√±√Ø√Æ√∞√≤\n\
					"CBLUE"/sellcar "CWHITE"- √è√∞√ÆS√≠√≤√º √±√¢√Æ√© √≤√∞√†√≠√±√Ø√Æ√∞√≤ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥\n\
					"CBLUE"/car "CWHITE"- √ë√¨√•√≠√®√≤√º √¨√•√±√≤√Æ √Ø√Æ√ø√¢√´√•√≠√®√ø √§√Æ√¨√†√∏√≠√•√£√Æ √≤√∞√†√≠√±√Ø√Æ√∞√≤√†\n\
					"CBLUE"/home "CWHITE"- √é√≤√™√∞√ª√≤√º √¨√•√≠√æ √≥√Ø√∞√†√¢√´√•√≠√®√ø √±√¢√Æ√®√¨ √§√Æ√¨√Æ√¨\n\
					"CBLUE"/sellmyhome "CWHITE"- √è√∞√ÆS√≠√≤√º √§√Æ√¨ √§√∞√≥√£√Æ√¨√≥ √®√£√∞√Æ√™√≥\n\
					"CBLUE"/exit "CWHITE"- √ë√≤√†√≠S√≠√∞√≤√≠√†√ø √™√Æ√¨√†√≠S√≠ √§√´√ø √¢√ª√µ√ÆS√≠ √®√ß √§√Æ√¨√Æ√¢\n\
					"CBLUE"/sellhome "CWHITE"- √è√∞√ÆS√≠√≤√º √±√¢√Æ√© √§√Æ√¨ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥\n\
					"CBLUE"/flat "CWHITE"- √é√≤√™√∞√ª√≤√º √¨√•√≠√æ √≥√Ø√∞√†√¢√´√•√≠√®√ø √±√¢√Æ√•√© √™√¢√†√∞√≤√®√∞√Æ√©\n\
					"CBLUE"/sellflat "CWHITE"- √è√∞√ÆS√≠√≤√º √±√¢√Æ√æ √™√¢√†√∞√≤√®√∞√≥ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥\n\
					"CBLUE"/sellmyflat "CWHITE"- √è√∞√ÆS√≠√≤√º √™√¢√†√∞√≤√®√∞√≥ √§√∞√≥√£√Æ√¨√≥ √®√£√∞√Æ√™√≥\n\
					"CBLUE"/liveout "CWHITE"- √Ç√ª√±√•√´√®√≤√º√±√ø √®√ß √™√¢√†√∞√≤√®√∞√ª. √Ñ√Æ√±√≤√≥√Ø√≠√Æ √≤√Æ√´√º√™√Æ √†√∞√•√≠S√≠√≤√Æ√∞√†√¨ √™√¢√†√∞√≤√®√∞\n\
					"CBLUE"/hotel "CWHITE"- √é√≤√™√∞√ª√≤√º √®√´√® Cerrar √±√¢√Æ√© √≠√Æ√¨√•√∞ √¢ √Æ√≤√•√´√•";

					SPD(playerid, 1005, DIALOG_STYLE_MSGBOX, "√Ñ√Æ√¨√†, √™√¢√†√∞√≤√®√∞√ª √® √Æ√≤√•√´√®", cmdlist_str, "Siguiente", "");
				}
				case 4: {
					new cmdlist_str[] = 
					""CBLUE"/business "CWHITE"- √É√´√†√¢√≠√Æ√• √¨√•√≠√æ √°√®√ß√≠√•√±√†\n\
					"CBLUE"/sellbiz "CWHITE"- √è√∞√ÆS√≠√≤√º √±√¢√Æ√© √°√®√ß√≠√•√± √£√Æ√±√≥S√≠√∞√±√≤√¢√≥\n\
					"CBLUE"/sellmybiz "CWHITE"- √è√∞√ÆS√≠√≤√º √°√®√ß√≠√•√± √§√∞√≥√£√Æ√¨√≥ √®√£√∞√Æ√™√≥\n\
					"CBLUE"/fpanel "CWHITE"- √é√≤√™√∞√ª√≤√º √¨√•√≠√æ √Ä√á√ë. √Ñ√´√ø √¢√´√†√§√•√´√º√∂√•√¢ √ß√†√Ø√∞√†√¢√™√†√¨√®";

					SPD(playerid, 1005, DIALOG_STYLE_MSGBOX, "√Å√®√ß√≠√•√±√ª √® √Ä√á√ë", cmdlist_str, "Siguiente", "");
				}
				case 5: {
					new member = pData[playerid][pMember];
					if(pData[playerid][pJob]) {
						new cmdlist_str[] = 
						""CBLUE"/f "CWHITE"- √é√°√π√®√© √∑√†√≤ √§√´√ø √®√≠√±√≤√∞√≥√™√≤√Æ√∞√Æ√¢, √≠√•√´√•√£√†√´√º√≠√ª√µ √Æ√∞√£√†√≠√®√ß√†√∂√®√© √® √∞√†√°√Æ√≤\n\
						"CBLUE"/showall "CWHITE"- √è√Æ√±√¨√Æ√≤√∞√•√≤√º √±√Ø√®√±√Æ√™ √¢√±√•√µ √≥√∑√†√±√≤√≠√®√™√Æ√¢ √Æ√∞√£√†√≠√®√ß√†√∂√®√® (√¢√™√´√æ√∑√†√ø √Æ√¥√¥√´√†√©√≠)\n\
						"CBLUE"/find "CWHITE"- √è√∞√Æ√±√¨√Æ√≤√∞√•√≤√º √±√Ø√®√±√Æ√™ √±√Æ√≤√∞√≥√§√≠√®√™√Æ√¢ √´√®√°√Æ √≥√∑√†√±√≤√≠√®√™√Æ√¢ √Æ√∞√£√†√≠√®√ß√†√∂√®√® √Æ√≠√´√†√©√≠\n\
						"CBLUE"/prodbuy "CWHITE"- √ä√≥√Ø√®√≤√º √Ø√∞√Æ√§√≥√™√≤√ª √≠√† √Ø√∞√Æ√®√ß√¢√Æ√§√±√≤√¢√•√≠√≠√Æ√¨ √∂√•√µ√•. √Ñ√Æ√±√≤√≥√Ø√≠√Æ √≤√Æ√´√º√™√Æ √∞√†√ß√¢√Æ√ß√∑√®√™√†√¨ √Ø√∞√Æ√§√≥√™√≤√Æ√¢\n\
						"CBLUE"/prodsell "CWHITE"- √è√∞√ÆS√≠√≤√º √Ø√∞√Æ√§√≥√™√≤√ª √°√®√ß√≠√•√±√≥ √Ø√Æ √ß√†√™√†√ß√≥. √Ñ√Æ√±√≤√≥√Ø√≠√Æ √≤√Æ√´√º√™√Æ √∞√†√ß√¢√Æ√ß√∑√®√™√†√¨ √Ø√∞√Æ√§√≥√™√≤√Æ√¢\n\
						"CBLUE"/to "CWHITE"- √è√∞√®√≠√ø√≤√º √¢√ª√ß√Æ√¢ √≤√†√™√±√®. √í√Æ√´√º√™√Æ √§√´√ø √≤√†√™√±√®√±√≤√Æ√¢, √™√Æ√≤√Æ√∞√ª√• √≠√†√µ√Æ√§√ø√≤√±√ø √¢ √≤√†√™√±√®\n\
						"CBLUE"/repair "CWHITE"- √è√Æ√∑√®√≠√®√≤√º √Ø√Æ√¢√∞√•√¶√§¬∏√≠√≠√ª√© √†√¢√≤√Æ√¨√Æ√°√®√´√º. √í√Æ√´√º√™√Æ √§√´√ø √¨√•√µ√†√≠√®√™√Æ√¢\n\
						"CBLUE"/refill "CWHITE"- √á√†√Ø√∞√†√¢√®√≤√º √†√¢√≤√Æ√¨√Æ√°√®√´√º √≤√Æ√Ø√´√®√¢√Æ√¨. √í√Æ√´√º√™√Æ √§√´√ø √¨√•√µ√†√≠√®√™√Æ√¢\n\
						"CBLUE"/fcontract "CWHITE"- √á√†√™√´√æ√∑√®√≤√º √™√Æ√≠√≤√∞√†√™√≤ √Æ √Ø√∞√ÆS√≠√¶√• √≤√Æ√Ø√´√®√¢√† √± √Ä√á√ë. √í√Æ√´√º√™√Æ √§√´√ø √¨√•√µ√†√≠√®√™√Æ√¢";

						SPD(playerid, 1005, DIALOG_STYLE_MSGBOX, "√é√∞√£√†√≠√®√ß√†√∂√®√ø √®√´√® √∞√†√°√Æ√≤√†", cmdlist_str, "Siguiente", "");
					}
					else if(member == 11) {
						new cmdlist_str[] = 
						""CBLUE"/take "CWHITE"- √à√ß√∫√ø√≤√º √≥ √®√£√∞√Æ√™√† √´√®√∂√•√≠√ß√®√® √®√´√® √ß√†√Ø√∞√•√π¬∏√≠√≠√ª√• √Ø√∞√•√§√¨√•√≤√ª. √í√Æ√´√º√™√Æ √§√´√ø √®√≠√±√≤√∞√≥√™√≤√Æ√∞√Æ√¢ √® √å√Ç√Ñ\n\
						"CBLUE"/exam "CWHITE"- Cerrar √Ω√™√ß√†√¨√•√≠ √≥√∑√•√≠√®√™√† √®√´√® √¢√ª√ß√¢√†√≤√º √•√£√Æ √≠√† √Ø√∞√Æ√µ√Æ√¶√§√•√≠√®√•\n\
						"CBLUE"/givelic "CWHITE"- √Ç√ªS√≠√≤√º √´√®√∂√•√≠√ß√®√æ √®√£√∞√Æ√™√≥";

						SPD(playerid, 1005, DIALOG_STYLE_MSGBOX, "√é√∞√£√†√≠√®√ß√†√∂√®√ø √®√´√® √∞√†√°√Æ√≤√†", cmdlist_str, "Siguiente", "");
					}
					else if(IsAGang(playerid)) {
						new cmdlist_str[] = 
						""CBLUE"/uninviteall "CWHITE"- √ì√¢√Æ√´√®√≤√º √¢√±√•√µ √Æ√¥√¥√´√†√©√≠ √®√£√∞√Æ√™√Æ√¢ √®√ß √±√¢√Æ√•√© √Æ√∞√£√†√≠√®√ß√†√∂√®√®. √í√Æ√´√º√™√Æ √§√´√ø √´√®√§√•√∞√Æ√¢ √°√†√≠√§ √® √¨√†√¥√®√©\n\
						"CBLUE"/sellzone "CWHITE"- √è√∞√ÆS√≠√≤√º √≤√•√∞√∞√®√≤√Æ√∞√®√æ √§√∞√≥√£√Æ√© √°√†√≠√§√•. √Ñ√Æ√±√≤√≥√Ø√≠√Æ √± 7-√£√Æ √∞√†√≠√£√†\n\
						"CBLUE"/sellgun "CWHITE"- √è√∞√ÆS√≠√≤√º √Æ√∞√≥√¶√®√• √®√£√∞√Æ√™√≥\n\
						"CBLUE"/showall "CWHITE"- √è√Æ√±√¨√Æ√≤√∞√•√≤√º √±√Ø√®√±√Æ√™ √¢√±√•√µ √≥√∑√†√±√≤√≠√®√™√Æ√¢ √Æ√∞√£√†√≠√®√ß√†√∂√®√® (√¢√™√´√æ√∑√†√ø √Æ√¥√¥√´√†√©√≠)\n\
						"CBLUE"/capture "CWHITE"- √ç√†√∑√†√≤√º √ß√†√µ√¢√†√≤ √≤√•√∞√∞√®√≤√Æ√∞√®√®. √Ñ√Æ√±√≤√≥√Ø√≠√Æ √± 7-√£√Æ √∞√†√≠√£√†\n\
						"CBLUE"/robcar "CWHITE"- √é√£√∞√†√°√®√≤√º √¨√†√∏√®√≠√≥ √å√Ç√Ñ, √™√Æ√≤√Æ√∞√†√ø √≠√†√µ√Æ√§√®√≤√±√ø √≠√† √≤√•√∞√∞√®√≤√Æ√∞√®√® √°√†√≠√§√ª\n\
						"CBLUE"/buydrugs "CWHITE"- √ä√≥√Ø√®√≤√º √≠√†√∞√™√Æ√≤√®√™√® √≠√† √≠√†√∞√™√Æ√ß√†√¢√Æ√§√•\n\
						"CBLUE"/find "CWHITE"- √è√∞√Æ√±√¨√Æ√≤√∞√•√≤√º √±√Ø√®√±√Æ√™ √±√Æ√≤√∞√≥√§√≠√®√™√Æ√¢ √´√®√°√Æ √≥√∑√†√±√≤√≠√®√™√Æ√¢ √Æ√∞√£√†√≠√®√ß√†√∂√®√® √Æ√≠√´√†√©√≠\n\
						"CBLUE"/close "CWHITE"- √é√≤√™√∞√ª√≤√º √®√´√® Cerrar √±√™√´√†√§ √Æ√∞√£√†√≠√®√ß√†√∂√®√®\n\
						"CBLUE"/selldrugs "CWHITE"- √è√∞√ÆS√≠√≤√º √≠√†√∞√™√Æ√≤√®√™√® √®√£√∞√Æ√™√≥\n\
						"CBLUE"/patrtake "CWHITE"- √Ç√ß√ø√≤√º √Ø√†√≤√∞√Æ√≠√ª √±√Æ √±√™√´√†S√≠\n\
						"CBLUE"/makegun "CWHITE"- √ë√Æ√°√∞√†√≤√º √Æ√∞√≥√¶√®√• √®√ß √¨√•√≤√†√´√´√† √® √Ø√†√≤√∞√Æ√≠√Æ√¢\n\
						"CBLUE"/mtake "CWHITE"- √Ç√ß√ø√≤√º √¨√•√≤√†√´√´ √±√Æ √±√™√´√†S√≠";

						SPD(playerid, 1005, DIALOG_STYLE_MSGBOX, "√é√∞√£√†√≠√®√ß√†√∂√®√ø √®√´√® √∞√†√°√Æ√≤√†", cmdlist_str, "Siguiente", "");
					}
					else if(IsAMafia(playerid)) {
						new cmdlist_str[] = 
						""CBLUE"/tie "CWHITE"- √ë√¢√ø√ß√†√≤√º √ß√†√´√Æ√¶√≠√®√™√†\n\
						"CBLUE"/untie "CWHITE"- √ê√†√ß√¢√ø√ß√†√≤√º √ß√†√´√Æ√¶√≠√®√™√†\n\
						"CBLUE"/ammoput "CWHITE"- √è√Æ√´√Æ√¶√®√≤√º √ø√π√®√™ √± √Ø√†√≤√∞√Æ√≠√†√¨√® √≠√† √±√¢√Æ√© √±√™√´√†√§\n\
						"CBLUE"/putammo "CWHITE"- √è√Æ√´√Æ√¶√®√≤√º √ø√π√®√™ √± √Ø√†√≤√∞√Æ√≠√†√¨√® √¢ √≤√∞√†√≠√±√Ø√Æ√∞√≤. √Ñ√Æ√±√≤√≥√Ø√≠√Æ √≤√Æ√´√º√™√Æ √†√∞√¨√®√ø√¨ √® √¨√†√¥√®√ø√¨\n\
						"CBLUE"/dropammo "CWHITE"- √Ç√ª√°√∞√Æ√±√®√≤√º √ø√π√®√™ √± √Ø√†√≤√∞√Æ√≠√†√¨√®. √Ñ√Æ√±√≤√≥√Ø√≠√Æ √≤√Æ√´√º√™√Æ √†√∞√¨√®√ø√¨ √® √¨√†√¥√®√ø√¨\n\
						"CBLUE"/takeammo "CWHITE"- √Ñ√Æ√±√≤√†√≤√º √ø√π√®√™ √± √Ø√†√≤√∞√Æ√≠√†√¨√® √®√ß √≤√∞√†√≠√±√Ø√Æ√∞√≤√†. √Ñ√Æ√±√≤√≥√Ø√≠√Æ √≤√Æ√´√º√™√Æ √†√∞√¨√®√ø√¨ √® √¨√†√¥√®√ø√¨\n\
						"CBLUE"/object "CWHITE"- √Ñ√Æ√±√≤√†√≤√º √®√´√® √±√Ø√∞√ø√≤√†√≤√º √¢√•√π√® √§√´√ø RP √Æ√≤√ª√£√∞√Æ√¢√Æ√™\n\
						"CBLUE"/affect "CWHITE"- √ç√†√∑√†√≤√º √ß√†√µ√¢√†√≤ √≤√•√∞√∞√®√≤√Æ√∞√®√® √¨√†√¥√®√® (√±√≤√∞√•√´√≥)\n\
						"CBLUE"/blind "CWHITE"- √ç√†√§√•√≤√º √¨√•√∏√Æ√™ √≠√† √®√£√∞√Æ√™√†\n\
						"CBLUE"/unblind "CWHITE"- √ë√≠√ø√≤√º √¨√•√∏√Æ√™ √± √®√£√∞√Æ√™√†\n\
						"CBLUE"/makegun "CWHITE"- √ë√Æ√°√∞√†√≤√º √Æ√∞√≥√¶√®√• √®√ß √¨√•√≤√†√´√´√† √® √Ø√†√≤√∞√Æ√≠√Æ√¢\n\
						"CBLUE"/bomb "CWHITE"- √ì√±√≤√†√≠√Æ√¢√®√≤√º √°√Æ√¨√°√≥\n\
						"CBLUE"/takephone "CWHITE"- √à√ß√∫√ø√≤√º √≤√•√´√•√¥√Æ√≠ √≥ √∑√•√´√Æ√¢√•√™√†\n\
						"CBLUE"/givephone "CWHITE"- √Ç√•√∞√≠√≥√≤√º √≤√•√´√•√¥√Æ√≠ √∑√•√´√Æ√¢√•√™√≥\n\
						"CBLUE"/uninviteall "CWHITE"- √ì√¢√Æ√´√®√≤√º √¢√±√•√µ √Æ√¥√¥√´√†√©√≠ √®√£√∞√Æ√™√Æ√¢ √®√ß √±√¢√Æ√•√© √Æ√∞√£√†√≠√®√ß√†√∂√®√®\n\
						"CBLUE"/gag "CWHITE"- √Ç√±√≤√†√¢√®√≤√º √®√´√® √¢√ª√≤√†√π√®√≤√º √®√ß√Æ √∞√≤√† √¶√•√∞√≤√¢√ª √™√´√ø√Ø\n\
						"CBLUE"/captivity "CWHITE"- √è√Æ√±√†√§√®√≤√º √®√£√∞√Æ√™√† √¢ √Ø√´√•√≠\n\
						"CBLUE"/uncaptivity "CWHITE"- √é√±√¢√Æ√°√Æ√§√®√≤√º √Ø√´√•√≠";

						SPD(playerid, 1005, DIALOG_STYLE_MSGBOX, "√é√∞√£√†√≠√®√ß√†√∂√®√ø √®√´√® √∞√†√°√Æ√≤√†", cmdlist_str, "Siguiente", "");
					}
					else if((member == 26 && pData[playerid][pRank] == 7) || member == 1 || member == 2 || member == 10 || member == 21) {
						new cmdlist_str[] = 
						""CBLUE"/d "CWHITE"- √é√°√π√®√© √∑√†√≤ √§√´√ø √£√Æ√±. √Æ√∞√£√†√≠√®√ß√†√∂√®√©\n\
						"CBLUE"/upass "CWHITE"- √è√Æ√™√†√ß√†√≤√º √±√¢√Æ¬∏ √≥√§√Æ√±√≤√Æ√¢√•√∞√•√≠√®√•. √í√Æ√´√º√™√Æ √§√´√ø √å√Ç√Ñ √®√´√® √å√é\n\
						"CBLUE"/take "CWHITE"- √à√ß√∫√ø√≤√º √≥ √®√£√∞√Æ√™√† √´√®√∂√•√≠√ß√®√® √®√´√® √ß√†√Ø√∞√•√π¬∏√≠√≠√ª√• √Ø√∞√•√§√¨√•√≤√ª. √í√Æ√´√º√™√Æ √§√´√ø √®√≠√±√≤√∞√≥√™√≤√Æ√∞√Æ√¢ √® √å√Ç√Ñ\n\
						"CBLUE"/ticket "CWHITE"- √Ç√ª√Ø√®√±√†√≤√º √∏√≤√∞√†√¥ √∑√•√´√Æ√¢√•√™√≥\n\
						"CBLUE"/takecall "CWHITE"- √è√∞√®√≠√ø√≤√º √¢√ª√ß√Æ√¢ √Ø√Æ√´√®√∂√®√® √Æ√≤ √∑√•√´√Æ√¢√•√™√†\n\
						"CBLUE"/m "CWHITE"- √ë√™√†√ß√†√≤√º √¢ √¨√•√£√†√¥√Æ√≠. √Ñ√´√ø √≤√•√µ, √™√≤√Æ √≠√†√µ√Æ√§√®√≤√±√ø √¢ √±√´√≥√¶√•√°√≠√Æ√¨ √≤√∞√†√≠√±√Ø√Æ√∞√≤√•\n\
						"CBLUE"/gnews (/gov) "CWHITE"- √É√Æ√±√≥S√≠√∞√±√≤√¢√•√≠√≠√ª√• √≠√Æ√¢√Æ√±√≤√®. √Ñ√´√ø √´√®√§√•√∞√Æ√¢ √£√Æ√±. √Æ√∞√£√†√≠√®√ß√†√∂√®√© √® 9 √∞√†√≠√£√Æ√¢\n\
						"CBLUE"/search "CWHITE"- √è√∞√Æ√¢√•√±√≤√® √Æ√°√ª√±√™ √≠√† √ß√†√Ø√∞√•√π¬∏√≠√≠√ª√• √Ø√∞√•√§√¨√•√≤√ª\n\
						"CBLUE"/putpl "CWHITE"- √è√Æ√±√†√§√®√≤√º √∑√•√´√Æ√¢√•√™√† √¢ √Ø√†√≤√∞√≥√´√º√≠√≥√æ √¨√†√∏√®√≠√≥\n\
						"CBLUE"/uncuff "CWHITE"- √ë√≠√ø√≤√º √≠√†√∞√≥√∑√≠√®√™√®\n\
						"CBLUE"/gate "CWHITE"- √é√≤√™√∞√ª√≤√º √¢√Æ√∞√Æ√≤√† √®√´√® √∏√´√†√£√°√†√≥√¨\n\
						"CBLUE"/break "CWHITE"- √ì√±√≤√†√≠√Æ√¢√®√≤√º √Æ√£√∞√†√¶√§√•√≠√®√•\n\
						"CBLUE"/pullmask "CWHITE"- √ë√≤√ø√≠√≥√≤√º √¨√†√±√™√≥ √± √Ø√∞√•√±√≤√≥√Ø√≠√®√™√†\n\
						"CBLUE"/hold "CWHITE"- √Ç√ß√ø√≤√º √Ø√∞√•√±√≤√≥√Ø√≠√®√™√† √ß√† √∞√≥√™√≥ √® √Ø√Æ√¢√•√±√≤√® √•√£√Æ √ß√† √±√Æ√°√Æ√©\n\
						"CBLUE"/mark "CWHITE"- Cambio √¨√†√∞√™√®√∞√Æ√¢√™√≥ √≠√† √≤√∞√†√≠√±√Ø√Æ√∞√≤√•\n\
						"CBLUE"/su "CWHITE"- √Ç√ªS√≠√≤√º √∞√Æ√ß√ª√±√™ √®√£√∞√Æ√™√≥\n\
						"CBLUE"/arrest "CWHITE"- √è√Æ√±√†√§√®√≤√º √Ø√∞√•√±√≤√≥√Ø√≠√®√™√† √¢ √™√†√¨√•√∞√≥\n\
						"CBLUE"/wanted "CWHITE"- √é√≤√™√∞√ª√≤√º √±√Ø√®√±√Æ√™ √∞√†√ß√ª√±√™√®√¢√†√•√¨√ª√µ √®√´√® √ß√†√Ø√≥√±√≤√®√≤√º √±√®√±√≤√•√¨√≥ √Ø√Æ√®√±√™√† √Ø√∞√•√±√≤√≥√Ø√≠√®√™√†\n\
						"CBLUE"/cuff "CWHITE"- √ç√†√§√•√≤√º √≠√†√∞√≥√∑√≠√®√™√® √≠√† √®√£√∞√Æ√™√†\n\
						"CBLUE"/pull "CWHITE"- √Ç√ª√°√∞√Æ√±√®√≤√º √Ø√∞√•√±√≤√≥√Ø√≠√®√™√† √®√ß √†√¢√≤√Æ√¨√Æ√°√®√´√ø\n\
						"CBLUE"/pt "CWHITE"- √à√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√• √£√∞√Æ√¨√™√Æ√£√Æ√¢√Æ√∞√®√≤√•√´√ø. √Ñ√´√ø √≤√•√µ, √™√≤√Æ √≠√†√µ√Æ√§√®√≤√±√ø √¢ √±√´√≥√¶√•√°√≠√Æ√¨ √≤√∞√†√≠√±√Ø√Æ√∞√≤√•";

						SPD(playerid, 1005, DIALOG_STYLE_MSGBOX, "√é√∞√£√†√≠√®√ß√†√∂√®√ø √®√´√® √∞√†√°√Æ√≤√†", cmdlist_str, "Siguiente", "");
					}
					else if(member == 2) {
						new cmdlist_str[] = 
						""CBLUE"/d "CWHITE"- √é√°√π√®√© √∑√†√≤ √§√´√ø √£√Æ√±. √Æ√∞√£√†√≠√®√ß√†√∂√®√©\n\
						"CBLUE"/upass "CWHITE"- √è√Æ√™√†√ß√†√≤√º √±√¢√Æ¬∏ √≥√§√Æ√±√≤√Æ√¢√•√∞√•√≠√®√•. √í√Æ√´√º√™√Æ √§√´√ø √å√Ç√Ñ √®√´√® √å√é\n\
						"CBLUE"/take "CWHITE"- √à√ß√∫√ø√≤√º √≥ √®√£√∞√Æ√™√† √´√®√∂√•√≠√ß√®√® √®√´√® √ß√†√Ø√∞√•√π¬∏√≠√≠√ª√• √Ø√∞√•√§√¨√•√≤√ª. √í√Æ√´√º√™√Æ √§√´√ø √®√≠√±√≤√∞√≥√™√≤√Æ√∞√Æ√¢ √® √å√Ç√Ñ\n\
						"CBLUE"/ticket "CWHITE"- √Ç√ª√Ø√®√±√†√≤√º √∏√≤√∞√†√¥ √∑√•√´√Æ√¢√•√™√≥\n\
						"CBLUE"/takecall "CWHITE"- √è√∞√®√≠√ø√≤√º √¢√ª√ß√Æ√¢ √Ø√Æ√´√®√∂√®√® √Æ√≤ √∑√•√´√Æ√¢√•√™√†\n\
						"CBLUE"/m "CWHITE"- √ë√™√†√ß√†√≤√º √¢ √¨√•√£√†√¥√Æ√≠. √Ñ√´√ø √≤√•√µ, √™√≤√Æ √≠√†√µ√Æ√§√®√≤√±√ø √¢ √±√´√≥√¶√•√°√≠√Æ√¨ √≤√∞√†√≠√±√Ø√Æ√∞√≤√•\n\
						"CBLUE"/gnews (/gov) "CWHITE"- √É√Æ√±√≥S√≠√∞√±√≤√¢√•√≠√≠√ª√• √≠√Æ√¢√Æ√±√≤√®. √Ñ√´√ø √´√®√§√•√∞√Æ√¢ √£√Æ√±. √Æ√∞√£√†√≠√®√ß√†√∂√®√© √® 9 √∞√†√≠√£√Æ√¢\n\
						"CBLUE"/search "CWHITE"- √è√∞√Æ√¢√•√±√≤√® √Æ√°√ª√±√™ √≠√† √ß√†√Ø√∞√•√π¬∏√≠√≠√ª√• √Ø√∞√•√§√¨√•√≤√ª\n\
						"CBLUE"/putpl "CWHITE"- √è√Æ√±√†√§√®√≤√º √∑√•√´√Æ√¢√•√™√† √¢ √Ø√†√≤√∞√≥√´√º√≠√≥√æ √¨√†√∏√®√≠√≥\n\
						"CBLUE"/uncuff "CWHITE"- √ë√≠√ø√≤√º √≠√†√∞√≥√∑√≠√®√™√®\n\
						"CBLUE"/gate "CWHITE"- √é√≤√™√∞√ª√≤√º √¢√Æ√∞√Æ√≤√† √®√´√® √∏√´√†√£√°√†√≥√¨\n\
						"CBLUE"/break "CWHITE"- √ì√±√≤√†√≠√Æ√¢√®√≤√º √Æ√£√∞√†√¶√§√•√≠√®√•\n\
						"CBLUE"/pullmask "CWHITE"- √ë√≤√ø√≠√≥√≤√º √¨√†√±√™√≥ √± √Ø√∞√•√±√≤√≥√Ø√≠√®√™√†\n\
						"CBLUE"/hold "CWHITE"- √Ç√ß√ø√≤√º √Ø√∞√•√±√≤√≥√Ø√≠√®√™√† √ß√† √∞√≥√™√≥ √® √Ø√Æ√¢√•√±√≤√® √•√£√Æ √ß√† √±√Æ√°√Æ√©\n\
						"CBLUE"/mark "CWHITE"- Cambio √¨√†√∞√™√®√∞√Æ√¢√™√≥ √≠√† √≤√∞√†√≠√±√Ø√Æ√∞√≤√•\n\
						"CBLUE"/su "CWHITE"- √Ç√ªS√≠√≤√º √∞√Æ√ß√ª√±√™ √®√£√∞√Æ√™√≥\n\
						"CBLUE"/arrest "CWHITE"- √è√Æ√±√†√§√®√≤√º √Ø√∞√•√±√≤√≥√Ø√≠√®√™√† √¢ √™√†√¨√•√∞√≥\n\
						"CBLUE"/wanted "CWHITE"- √é√≤√™√∞√ª√≤√º √±√Ø√®√±√Æ√™ √∞√†√ß√ª√±√™√®√¢√†√•√¨√ª√µ √®√´√® √ß√†√Ø√≥√±√≤√®√≤√º √±√®√±√≤√•√¨√≥ √Ø√Æ√®√±√™√† √Ø√∞√•√±√≤√≥√Ø√≠√®√™√†\n\
						"CBLUE"/cuff "CWHITE"- √ç√†√§√•√≤√º √≠√†√∞√≥√∑√≠√®√™√® √≠√† √®√£√∞√Æ√™√†\n\
						"CBLUE"/pull "CWHITE"- √Ç√ª√°√∞√Æ√±√®√≤√º √Ø√∞√•√±√≤√≥√Ø√≠√®√™√† √®√ß √†√¢√≤√Æ√¨√Æ√°√®√´√ø\n\
						"CBLUE"/pt "CWHITE"- √à√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√• √£√∞√Æ√¨√™√Æ√£√Æ√¢√Æ√∞√®√≤√•√´√ø. √Ñ√´√ø √≤√•√µ, √™√≤√Æ √≠√†√µ√Æ√§√®√≤√±√ø √¢ √±√´√≥√¶√•√°√≠√Æ√¨ √≤√∞√†√≠√±√Ø√Æ√∞√≤√•\n\
						"CBLUE"/spy "CWHITE"- √å√†√±√™√®√∞√Æ√¢√™√† √Ø√Æ√§ √Æ√∞√£√†√≠√®√ß√†√∂√®√æ\n\
						"CBLUE"/listening "CWHITE"- √è√∞√Æ√±√´√≥√∏√†√≤√º √∑√†√≤ √™√†√™√Æ√©-√´√®√°√Æ √Æ√∞√£√†√≠√®√ß√†√∂√®√®";

						SPD(playerid, 1005, DIALOG_STYLE_MSGBOX, "√é√∞√£√†√≠√®√ß√†√∂√®√ø √®√´√® √∞√†√°√Æ√≤√†", cmdlist_str, "Siguiente", "");
					}
					else if(IsAArm(playerid)) {
						new cmdlist_str[] = 
						""CBLUE"/d "CWHITE"- √é√°√π√®√© √∑√†√≤ √§√´√ø √£√Æ√±. √Æ√∞√£√†√≠√®√ß√†√∂√®√©\n\
						"CBLUE"/gnews (/gov) "CWHITE"- √É√Æ√±√≥S√≠√∞√±√≤√¢√•√≠√≠√ª√• √≠√Æ√¢√Æ√±√≤√®. √Ñ√´√ø √´√®√§√•√∞√Æ√¢ √£√Æ√±. √Æ√∞√£√†√≠√®√ß√†√∂√®√© √® 9 √∞√†√≠√£√Æ√¢\n\
						"CBLUE"/gate "CWHITE"- √é√≤√™√∞√ª√≤√º √¢√Æ√∞√Æ√≤√† √®√´√® √∏√´√†√£√°√†√≥√¨. √Ñ√Æ√±√≤√≥√Ø√≠√Æ √≤√Æ√´√º√™√Æ √§√´√ø √å√Ç√Ñ √® √å√é\n\
						"CBLUE"/upass "CWHITE"- √è√Æ√™√†√ß√†√≤√º √±√¢√Æ¬∏ √≥√§√Æ√±√≤√Æ√¢√•√∞√•√≠√®√•. √í√Æ√´√º√™√Æ √§√´√ø √å√Ç√Ñ √®√´√® √å√é\n\
						"CBLUE"/putmyammo "CWHITE"- √è√Æ√´√Æ√¶√®√≤√º √±√¢√Æ√® √Ø√†√≤√∞√Æ√≠√ª √≠√† √±√™√´√†√§\n\
						"CBLUE"/putammo "CWHITE"- √è√Æ√´√Æ√¶√®√≤√º √ø√π√®√™ √± √Ø√†√≤√∞√Æ√≠√†√¨√® √¢ √≤√∞√†√≠√±√Ø√Æ√∞√≤. √Ñ√Æ√±√≤√≥√Ø√≠√Æ √≤√Æ√´√º√™√Æ √†√∞√¨√®√ø√¨ √® √¨√†√¥√®√ø√¨\n\
						"CBLUE"/dropammo "CWHITE"- √Ç√ª√°√∞√Æ√±√®√≤√º √ø√π√®√™ √± √Ø√†√≤√∞√Æ√≠√†√¨√®. √Ñ√Æ√±√≤√≥√Ø√≠√Æ √≤√Æ√´√º√™√Æ √†√∞√¨√®√ø√¨ √® √¨√†√¥√®√ø√¨\n\
						"CBLUE"/takeammo "CWHITE"- √Ñ√Æ√±√≤√†√≤√º √ø√π√®√™ √± √Ø√†√≤√∞√Æ√≠√†√¨√® √®√ß √≤√∞√†√≠√±√Ø√Æ√∞√≤√†. √Ñ√Æ√±√≤√≥√Ø√≠√Æ √≤√Æ√´√º√™√Æ √†√∞√¨√®√ø√¨ √® √¨√†√¥√®√ø√¨\n\
						"CBLUE"/mput "CWHITE"- √è√Æ√´√Æ√¶√®√≤√º √¨√•√≤√†√´√´ √≠√† √±√™√´√†√§ √±√¢√Æ√•√£√Æ √Ø√Æ√§√∞√†√ß√§√•√´√•√≠√®√ø\n\
						"CBLUE"/mbuy "CWHITE"- √è√∞√®√Æ√°√∞√•√±√≤√® √¨√•√≤√†√´√´ √® √ß√†√£√∞√≥√ß√®√≤√º √•√£√Æ √¢ √¨√•√≤√†√´√´√Æ√¢√Æ√ß";

						SPD(playerid, 1005, DIALOG_STYLE_MSGBOX, "√é√∞√£√†√≠√®√ß√†√∂√®√ø √®√´√® √∞√†√°√Æ√≤√†", cmdlist_str, "Siguiente", "");
					}
					else if(IsAMedic(playerid)) {
						new cmdlist_str[] = 
						""CBLUE"/d "CWHITE"- √é√°√π√®√© √∑√†√≤ √§√´√ø √£√Æ√±. √Æ√∞√£√†√≠√®√ß√†√∂√®√©\n\
						"CBLUE"/gnews (/gov) "CWHITE"- √É√Æ√±√≥S√≠√∞√±√≤√¢√•√≠√≠√ª√• √≠√Æ√¢√Æ√±√≤√®. √Ñ√´√ø √´√®√§√•√∞√Æ√¢ √£√Æ√±. √Æ√∞√£√†√≠√®√ß√†√∂√®√© √® 9 √∞√†√≠√£√Æ√¢\n\
						"CBLUE"/medhelp "CWHITE"- √è√∞√Æ√¢√•√±√≤√® √™√≥√∞√± √´√•√∑√•√≠√®√ø √± √Ø√†√∂√®√•√≠√≤√Æ√¨\n\
						"CBLUE"/heal "CWHITE"- √è√∞√Æ√¢√•√±√≤√® √´√•√∑√•√≠√®√• √¢ √¨√†√∏√®√≠√• √±√™√Æ√∞√Æ√© √Ø√Æ√¨√Æ√π√®\n\
						"CBLUE"/givemed "CWHITE"- √Ç√ªS√≠√≤√º √¨√•√§√®√∂√®√≠√±√™√≥√æ √™√†√∞√≤√≥ √∑√•√´√Æ√¢√•√™√≥\n\
						"CBLUE"/callto "CWHITE"- √è√∞√®√≠√ø√≤√º √¢√ª√ß√Æ√¢ √±√™√Æ√∞√Æ√© √Ø√Æ√¨√Æ√π√® √Æ√≤ √∑√•√´√Æ√¢√•√™√†\n\
						"CBLUE"/changesex "CWHITE"- √è√∞√Æ√¢√•√±√≤√® √Æ√Ø√•√∞√†√∂√®√æ √Ø√Æ √±√¨√•√≠√• √Ø√Æ√´√†";

						SPD(playerid, 1005, DIALOG_STYLE_MSGBOX, "√é√∞√£√†√≠√®√ß√†√∂√®√ø √®√´√® √∞√†√°√Æ√≤√†", cmdlist_str, "Siguiente", "");
					}
					else if(member == 16) {
						new cmdlist_str[] = 
						""CBLUE"/gnews (/gov) "CWHITE"- √É√Æ√±√≥S√≠√∞√±√≤√¢√•√≠√≠√ª√• √≠√Æ√¢√Æ√±√≤√®. √Ñ√´√ø √´√®√§√•√∞√Æ√¢ √£√Æ√±. √Æ√∞√£√†√≠√®√ß√†√∂√®√© √® 9 √∞√†√≠√£√Æ√¢\n\
						"CBLUE"/yesring "CWHITE"- √è√∞√®√≠√ø√≤√º √ß√¢√Æ√≠√Æ√™ √¢ √±√≤√≥√§√®√æ\n\
						"CBLUE"/toff "CWHITE"- √á√†√¢√•√∞√∏√®√≤√º √ß√¢√Æ√≠√Æ√™ √Æ√≤ √®√£√∞√Æ√™√† √¢ √±√≤√≥√§√®√æ\n\
						"CBLUE"/nmenu "CWHITE"- √é√≤√™√∞√ª√≤√º √¨√•√≠√æ √ë√å√à\n\
						"CBLUE"/edit "CWHITE"- √é√≤√™√∞√ª√≤√º √¨√•√≠√æ √Ø√∞√Æ√¢√•√∞√™√® √Æ√°√∫√ø√¢√´√•√≠√®√©\n\
						"CBLUE"/stand "CWHITE"- √ì√±√≤√†√≠√Æ√¢√®√≤√º √£√†√ß√•√≤√≠√ª√© √™√®√Æ√±√™";

						SPD(playerid, 1005, DIALOG_STYLE_MSGBOX, "√é√∞√£√†√≠√®√ß√†√∂√®√ø √®√´√® √∞√†√°√Æ√≤√†", cmdlist_str, "Siguiente", "");
					}
					else if(IsAGover(playerid)) {
						new cmdlist_str[] = 
						""CBLUE"/d "CWHITE"- √é√°√π√®√© √∑√†√≤ √§√´√ø √£√Æ√±. √Æ√∞√£√†√≠√®√ß√†√∂√®√©\n\
						"CBLUE"/free "CWHITE"- √é√±√¢√Æ√°√Æ√§√®√≤√º √ß√†√™√´√æ√∑¬∏√≠√≠√Æ√£√Æ √®√ß √≤√æ√∞√º√¨√ª. √Ñ√Æ√±√≤√≥√Ø√≠√Æ √≤√Æ√´√º√™√Æ √†√§√¢√Æ√™√†√≤√†√¨\n\
						"CBLUE"/gnews (/gov) "CWHITE"- √É√Æ√±√≥S√≠√∞√±√≤√¢√•√≠√≠√ª√• √≠√Æ√¢√Æ√±√≤√®. √Ñ√´√ø √´√®√§√•√∞√Æ√¢ √£√Æ√±. √Æ√∞√£√†√≠√®√ß√†√∂√®√© √® 9 √∞√†√≠√£√Æ√¢\n\
						"CBLUE"/badge "CWHITE"- √Ç√™√´√æ√∑√®√≤√º √®√´√® apagar √Æ√≤√Æ√°√∞√†√¶√•√≠√®√• √±√¢√Æ√•√© √§√Æ√´√¶√≠√Æ√±√≤√® √≠√†√§ √£√Æ√´√Æ√¢√Æ√©. √Ñ√Æ√±√≤√≥√Ø√≠√Æ √®√≠√±√≤√∞√≥√™√≤√Æ√∞√†√¨, √†√≥√§√®√≤√Æ√∞√†√¨ √® √†√§√¢√Æ√™√†√≤√†√¨";

						SPD(playerid, 1005, DIALOG_STYLE_MSGBOX, "√é√∞√£√†√≠√®√ß√†√∂√®√ø √®√´√® √∞√†√°√Æ√≤√†", cmdlist_str, "Siguiente", "");
					}
					else return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√®√£√§√• √≠√• √∞√†√°√Æ√≤√†√•√≤√• √® √≠√• √±√Æ√±√≤√Æ√®√≤√• √¢ √Æ√∞√£√†√≠√®√ß√†√∂√®√ø√µ");
				}
				case 6: {
					if(!pData[playerid][pLeader]) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √ø√¢√´√ø√•√≤√•√±√º √´√®√§√•√∞√Æ√¨");
					new cmdlist_str[] = 
					""CBLUE"/toggleorgbank "CWHITE"- √Ç√™√´√æ√∑√®√≤√º √®√´√® apagar √°√†√≠√™ √Æ√∞√£√†√≠√®√ß√†√∂√®√®\n\
					"CBLUE"/rankname "CWHITE"- Cambio √≠√†√ß√¢√†√≠√®√ø √∞√†√≠√£√Æ√¢\n\
					"CBLUE"/newleader "CWHITE"- √ç√†√ß√≠√†√∑√®√≤√º √´√®√§√•√∞√† √Ø√Æ√§√∞√†√ß√§√•√´√•√≠√®√ø\n\
					"CBLUE"/invite "CWHITE"- √è√∞√®√£√´√†√±√®√≤√º √®√£√∞√Æ√™√† √¢ √Æ√∞√£√†√≠√®√ß√†√∂√®√æ\n\
					"CBLUE"/uninvite "CWHITE"- √ì√¢√Æ√´√®√≤√º √®√£√∞√Æ√™√† √®√ß √Æ√∞√£√†√≠√®√ß√†√∂√®√®\n\
					"CBLUE"/demote "CWHITE"- √ì√¢√Æ√´√®√≤√º √®√£√∞√Æ√™√† √®√ß √Æ√∞√£√†√≠√®√ß√†√∂√®√®. √Ñ√Æ√±√≤√≥√Ø√≠√Æ √≤√Æ√´√º√™√Æ √¨√®√≠√®√±√≤√∞√†√¨ √® √Ø√∞√•√ß√®√§√•√≠√≤√≥\n\
					"CBLUE"/giverank "CWHITE"- √è√Æ√¢√ª√±√®√≤√º √®√´√® √Ø√Æ√≠√®√ß√®√≤√º √®√£√∞√Æ√™√† √¢ √∞√†√≠√£√•\n\
					"CBLUE"/changeskin "CWHITE"- Cambio √¢√≠√•√∏√≠√Æ√±√≤√º √∑√´√•√≠√† √Æ√∞√£√†√≠√®√ß√†√∂√®√®\n\
					"CBLUE"/drive "CWHITE"- √Ñ√Æ√±√≤√†√¢√™√† √±√¢√Æ√°√Æ√§√≠√Æ√£√Æ √≤√∞√†√≠√±√Ø√Æ√∞√≤√† √≠√† √°√†√ß√≥ √Æ√∞√£√†√≠√®√ß√†√∂√®√®";

					SPD(playerid, 1005, DIALOG_STYLE_MSGBOX, "√ã√®√§√•√∞√†√¨", cmdlist_str, "Siguiente", "");
				}
				case 7: {
					new cmdlist_str[] = 
					""CBLUE"/fpslimit "CWHITE"- √ì√±√≤√†√≠√Æ√¢√®√≤√º √Æ√£√∞√†√≠√®√∑√•√≠√®√• FPS (√™√†√§√∞√Æ√¢ √¢ √±√•√™√≥√≠√§√≥)\n\
					"CBLUE"/pagesize "CWHITE"- √ì√±√≤√†√≠√Æ√¢√®√≤√º √™√Æ√´-√¢√Æ √±√≤√∞√Æ√™, √™√Æ√≤√Æ√∞√ª√• √°√≥√§√≥√≤ √Æ√≤√Æ√°√∞√†√¶√†√≤√º√±√ø √¢ √∑√†√≤√•\n\
					"CBLUE"/fontsize "CWHITE"- Cambio √∞√†√ß√¨√•√∞ √≤√•√™√±√≤√† √¢ √∑√†√≤√• √® √§√®√†√´√Æ√£√Æ√¢√ª√µ √Æ√™√≠√†√µ\n\
					"CBLUE"/nametagstatus "CWHITE"- √è√Æ√™√†√ß√†√≤√º √®√´√® √±√™√∞√ª√≤√º √Ø√•√±√Æ√∑√≠√ª√• √∑√†√±√ª √¢√Æ√ß√´√• √≠√®√™√† √®√£√∞√Æ√™√† √™√Æ√£S√≠ √Æ√≠ √¢ AFK\n\
					"CBLUE"/audiomsg "CWHITE"- √è√Æ√™√†√ß√†√≤√º √®√´√® √±√™√∞√ª√≤√º √±√´√≥√¶√•√°√≠√ª√• √±√Æ√Æ√°√π√•√≠√®√ø √¢ √∑√†√≤√• √Ø√∞√® √¢√™√´√æ√∑√•√≠√®√® √¨√≥√ß√ª√™√® (√≠√†√Ø√∞√®√¨√•√∞, √∑√•√∞√•√ß √™√Æ√¨√†√≠√§√≥ /play)\n\
					"CBLUE"/headmove "CWHITE"- √Ç√™√´√æ√∑√®√≤√º √®√´√® apagar √Ø√Æ√¢√Æ√∞√Æ√≤ √£√Æ√´√Æ√¢√ª √®√£√∞√Æ√™√†\n\
					"CBLUE"/timestamp "CWHITE"- √Ç√™√´√æ√∑√®√≤√º √®√´√® apagar √Æ√≤√Æ√°√∞√†√¶√•√≠√®√• √¢√∞√•√¨√•√≠√® √¢ √∑√†√≤√•\n\
					"CBLUE"/q (/quit) "CWHITE"- √Ç√ª√µ√Æ√§ √®√ß √®√£√∞√ª";

					SPD(playerid, 1005, DIALOG_STYLE_MSGBOX, "√ë√´√≥√¶√•√°√≠√ª√• √™√Æ√¨√†√≠√§√ª", cmdlist_str, "Siguiente", "");
				}
			}
		}
	case 445: {
		if(!response) return 1;
		callcmd::menu(playerid);
	}
	case 15425: {
			if(!response) return callcmd::menu(playerid);
			if(!strlen(inputtext))
			{
				return promo_dialog(playerid);
			}
			string[0] = EOS;
			mysql_format(mysql_Handle, string, 164, "SELECT * FROM `promo` WHERE `code` = '%s' AND `status` = '1'", inputtext);
			return mysql_tquery(mysql_Handle, string, "PromoUse", "ds",playerid, inputtext);
		}
    case 181: {
        if(!response) return callcmd::menu(playerid);
        switch(listitem)
        {
        	case 0:
        	{
        		pData[playerid][p_setting][0]++;
        		if(pData[playerid][p_setting][0] == 3) pData[playerid][p_setting][0] = 0;
        	}
        	case 4:
        	{
				pData[playerid][p_setting][listitem] = !pData[playerid][p_setting][listitem];

				if(pData[playerid][p_setting][4]) foreach(new i:Player) ShowPlayerNameTagForPlayer(playerid, i, true);
				else foreach(new i:Player) ShowPlayerNameTagForPlayer(playerid, i, false);
        	}
        	case 5:
        	{
        		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
        			return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CERROR"√é√∏√®√°√™√†", ""CWHITE"√Ç√ª √≠√• √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √ß√† √∞√≥√´¬∏√¨ √§√´√ø √®√ß√¨√•√≠√•√≠√®√ø √Ω√≤√Æ√© √≠√†√±√≤√∞√Æ√©√™√®", "Cerrar","");
	        	
	        	pData[playerid][p_setting][5]++;
        		if(pData[playerid][p_setting][5] == 3) pData[playerid][p_setting][5] = 0;
        	}
        	case 6:
        	{
        		if(!pData[playerid][p_setting][6]) {
	    	    	new str[] = 
					""CWHITE"√è√†√∞√Æ√´√® √¨√Æ√£√≥√≤ √±√Æ√§√•√∞√¶√†√≤√º √´√†√≤√®√≠√±√™√®√• √°√≥√™√¢√ª, √† √≤√†√™√¶√• √Ø√Æ√∑√≤√® √´√æ√°√ª√•\n\
		    		√±√®√¨√¢√Æ√´√ª. √Ö√±√´√® √±√™√∞√ª√≤√º √Ø√†√∞√Æ√´√º √Ø√∞√® √†√¢√≤√Æ√∞√®√ß√†√∂√®√®, √Ω√≤√Æ √¨√Æ√¶√•√≤ √ß√†√≤√∞√≥√§√≠√®√≤√º\n\
		    		√•√£√Æ √¢√¢√Æ√§.\n\
		    		\n\
		    		{b5b2ff}√ë√Æ√¢√•√≤: √Ç√ª √¨√Æ√¶√•√≤√• √¢√™√´√æ√∑√®√≤√º √®√™√Æ√≠√™√≥ √®√±√Ø√Æ√´√º√ß√≥√•√¨√Æ√£√Æ √ø√ß√ª√™√† √¢\n\
		    		√§√®√†√´√Æ√£√†√µ SAMP:\n\
		    		\n\
		    		1. √á√†√©√§√®√≤√• √¢ √Ñ√Æ√™√≥√¨√•√≠√≤√ª > GTA San Andreas User Files > SAMP\n\
		    		2. √é√≤√™√∞√Æ√©√≤√• √¥√†√©√´ sa-mp.cfg\n\
		    		3. √Ñ√Æ√°√†√¢√º√≤√• √¢ √™√Æ√≠√•√∂ √±√≤√∞√Æ√∑√™√≥ "CCYAN"ime=1\n\
		    		\n\
		    		"CWHITE"√Ñ√´√ø √¢√™√´√æ√∑√•√≠√®√ø √±√™√∞√ª√≤√®√ø √Ø√†√∞√Æ√´√ø √¢√¢√•√§√®√≤√• √Ç√†√∏ √≤√•√™√≥√π√®√© √Ø√†√∞√Æ√´√º:";
	    	    	SPD(playerid, 107, DIALOG_STYLE_PASSWORD, "{FFCD00}√ë√™√∞√ª√≤√®√• √Ø√†√∞√Æ√´√ø √Ø√∞√® √†√¢√≤√Æ√∞√®√ß√†√∂√®√®", str, "√Ç√™√´√æ√∑√®√≤√º", "Siguiente");
	        		return 1;
	        	}
	        	else pData[playerid][p_setting][6] = false;
        	}
        	default:
        	{
        		pData[playerid][p_setting][listitem] = !pData[playerid][p_setting][listitem];
        	}
        }
        save_settings(playerid);
        show_settings(playerid);
    }
    case 107: {
    	if(!response) return show_settings(playerid);
    	new sstr[144];
    	mysql_format(mysql_Handle, sstr, sizeof(sstr), "SELECT `pKey` FROM `accounts` WHERE `Name` = '%s' AND `pKey` = MD5('%s')", pData[playerid][pName], inputtext);
		mysql_tquery(mysql_Handle, sstr, "setting_checkpassword", "i", playerid);
    }
    case 108:
    {
    	if(!response) return 1;
    	if(!strlen(inputtext)) return callcmd::pame(playerid);

		strmid(pData[playerid][p_desc], inputtext, 0, 128);
		UpdatePlayerDataEx(playerid, "p_desc", pData[playerid][p_desc]);

		new text[128];
		ConvertNewLines(text, inputtext);
		if(pData[playerid][p_desc_textid] != Text3D:INVALID_3DTEXT_ID)
			UpdateDynamic3DTextLabelText(pData[playerid][p_desc_textid], 0xffffffe0, text);
		else
			pData[playerid][p_desc_textid] = CreateDynamic3DTextLabel(text, 0xffffffe0, 0,0,-0.8, 8, playerid, INVALID_VEHICLE_ID, 0, -1, -1, -1, 8);

		SCM(playerid, COLOR_MAIN, "√ç√Æ√¢√Æ√• √Æ√Ø√®√±√†√≠√®√• √≥√±√Ø√•√∏√≠√Æ √≥√±√≤√†√≠√Æ√¢√´√•√≠√Æ");
    }
    case 109:
    {
    	if(!response) return 1;
		strdel(pData[playerid][p_desc], 0, strlen(pData[playerid][p_desc]));
		UpdatePlayerDataEx(playerid, "p_desc", pData[playerid][p_desc]);

		if(pData[playerid][p_desc_textid] != Text3D:INVALID_3DTEXT_ID)
			DestroyDynamic3DTextLabel(pData[playerid][p_desc_textid]);

		SCM(playerid, COLOR_ERROR, "√é√Ø√®√±√†√≠√®√• √≥S√≠√´√•√≠√Æ");
    }
	case 489: {
			if(!response) return SCM(playerid, COLOR_ERROR, "√Ç√¢√•√§√®√≤√• √™√Æ√¨√†√≠√§√≥ /q (/quit) √§√´√ø √¢√ª√µ√ÆS√≠"), Kick(playerid);
			if(!strlen(inputtext))
			{
				return SPD(playerid, 489, DIALOG_STYLE_INPUT, "{bbaa00}√ä√Æ√§ √± √Ø√∞√®√´√Æ√¶√•√≠√®√ø", ""CWHITE"√ì √Ç√†√± √¢√™√´√æ√∑√•√≠√† √§√¢√≥√µ√¥√†√™√≤√Æ√∞√≠√†√ø √†√≥√≤√•√≠√≤√®√¥√®√™√†√∂√®√ø\n√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø, √Æ√≤√™√∞√Æ√©√≤√• √Ø√∞√®√´√Æ√¶√•√≠√®√• "CBLUE"Authenticator\n"CWHITE"√® √¢√¢√•√§√®√≤√• √™√Æ√§ √®√ß √≠√•√£√Æ √¢ √Ø√Æ√´√• √≠√®√¶√•:", "S√≠√´√•√•", "Cerrar");
			}
			if(strval(inputtext) != GoogleAuthenticatorCode(pData[playerid][GoogleCod], gettime())) {
				SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CERROR"√ç√•√¢√•√∞√≠√ª√© √™√Æ√§", 
					""CWHITE"√ä√Æ√§ √®√ß √Ø√∞√®√´√Æ√¶√•√≠√®√ø Google Authenticator √¢√¢√•√§¬∏√≠\n\
					√≠√•√¢√•√∞√≠√Æ. √è√Æ√Ø√∞√Æ√°√≥√©√≤√• √¢√ª√Ø√Æ√´√≠√®√≤√º √±√´√•√§√≥√æ√π√•√•:\n\n\
					1. √Ç√¢√•√§√®√≤√• "CPALEGREEN"/q "CWHITE"√®√´√® "CPALEGREEN"/quit "CWHITE"√∑√≤√Æ√°√ª √¢√ª√©√≤√® √®√ß √®√£√∞√ª\n\n\
					2. √è√Æ√Ø√∞√Æ√°√≥√©√≤√• √±√®√≠√µ√∞√Æ√≠√®√ß√®√∞√Æ√¢√†√≤√º √¢√∞√•√¨√ø √≠√† √Ç√†√∏√•√¨\n\
					√≥√±√≤√∞√Æ√©√±√≤√¢√•. √Ñ√Æ√Ø√≥√±√≤√®√¨√Æ√• √Æ√≤√™√´√Æ√≠√•√≠√®√• - {b22222}√≠√• √°√Æ√´√•√• √≤√∞¬∏√µ √±√•√™√≥√≠√§"CWHITE".\n\
					√Ñ√´√ø √Ø√∞√Æ√¢√•√∞√™√® √Ç√ª √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √±√†√©√≤ "CBLUE"www.time.is\n\n\
					"CWHITE"3. √á√†√©√§√®√≤√• √¢ √®√£√∞√≥ √® √Ø√Æ√Ø√∞√Æ√°√≥√©√≤√• √¢√¢√•√±√≤√® √™√Æ√§ √Ø√Æ√¢√≤√Æ√∞√≠√Æ.", 
				"Cerrar", "");
				return Kick(playerid);
			}
			if(pData[playerid][pKeylog]) 
				SPD(playerid, 4929, DIALOG_STYLE_INPUT, "{bbaa00}√ä√Æ√§ √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√®", ""CWHITE"√ó√≤√Æ√°√ª √ß√†√¢√•√∞√∏√®√≤√º √±√≤√†√§√®√æ √†√¢√≤√Æ√∞√®√ß√†√∂√®√®, √Ç√†√¨ √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √Ø√∞√Æ√©√≤√®\n√Ø√∞√Æ√¢√•√∞√™√≥. √Ç√¢√•√§√®√≤√• √¢ √Ø√Æ√´√• √≠√®√¶√• √∂√®√¥√∞√ª, √™√Æ√≤√Æ√∞√ª√• √Ç√ª √≥√™√†√ß√†√´√® √¢ √™√Æ√§√•\n√°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√®:", "√Ç√¢√•√±√≤√®", "Cerrar");
			else
			{
				foreach(new i:Player)
				{
					if(!strcmp(google_exitinfo[i][gexit_ip], pData[playerid][pIP], true))
					{
						if(GetTickCount() - google_exitinfo[i][gexit_time] <= 30000)
						{
							SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CERROR"√ä√Æ√§ √≥√¶√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≠", "\
							"CWHITE"√ç√•S√≠√¢√≠√Æ √Ç√ª √≥√¶√• √¢√¢√Æ√§√®√´√® √™√Æ√§ √± √Ø√∞√®√´√Æ√¶√•√≠√®√ø Google\n\
							Authenticator. √è√Æ√Ø√∞√Æ√°√≥√©√≤√• √¢√ª√Ø√Æ√´√≠√®√≤√º √±√´√•√§√≥√æ√π√•√•\n\n\
							1. √Ç√¢√•√§√®√≤√• "CPALEGREEN"/q "CWHITE"√®√´√® "CPALEGREEN"/quit "CWHITE"√∑√≤√Æ√°√ª √¢√ª√©√≤√® √®√ß √®√£√∞√ª\n\n\
							2. √è√Æ√§√Æ√¶√§√®√≤√• {cccc00}30 √±√•√™√≥√≠√§ "CWHITE"√® √ß√†√©√§√®√≤√• √±√≠√Æ√¢√†\n\
							3. √é√≤√™√∞√Æ√©√≤√• √Ø√∞√®√´√Æ√¶√•√≠√®√• √® √¢√¢√•√§√®√≤√• √™√Æ√§ √Ø√Æ√¢√≤√Æ√∞√≠√Æ.", "Cerrar", "");
							
							return Kick(playerid);
						}
						else
						{
							strdel(google_exitinfo[i][gexit_ip], 0, strlen(google_exitinfo[i][gexit_ip]));
							google_exitinfo[i][gexit_time] = 0;
						}
					}
				}
				strmid(google_exitinfo[playerid][gexit_ip], pData[playerid][pIP], 0, strlen(pData[playerid][pIP]), 32);
				google_exitinfo[playerid][gexit_time] = GetTickCount();
				
				LoadPlayerAccount(playerid);
			}
		}
	case 358: {
		if(!response) return SPD(playerid, 118, DIALOG_STYLE_LIST, ""CPALEGREEN"√Å√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√º", "[1] Google Authenticator\n[2] √ä√Æ√§ √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√®\n[3] √à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ √ß√†√π√®√≤√•\n{00cc66}[4] Cambio √Ø√†√∞√Æ√´√º\n{0099ff}[5] √ë√≤√†√≤√≥√± √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√®\n"CGREY"[6] √è√Æ√§√≤√¢√•√∞√§√®√≤√º E-Mail", "Seleccione", "Siguiente");
		switch(listitem) {
			case 0: {
				pData[playerid][pStatusGoogle] = 1; UpdatePlayerData(playerid, "pStatusGoogle", 1);
				PlayerPlaySound(playerid, 17001, 0.0, 0.0, 0.0);
				SCM(playerid, COLOR_BLUE, "√í√•√Ø√•√∞√º √ß√†√π√®√≤√† √∑√•√∞√•√ß "CORANGE"Google "CBLUE"√°√≥√§√•√≤ √±√∞√†√°√†√≤√ª√¢√†√≤√º {40bf80}√¢ √´√æ√°√Æ√¨ √±√´√≥√∑√†√•");
			}
			case 1: {
				pData[playerid][pStatusGoogle] = 2; UpdatePlayerData(playerid, "pStatusGoogle", 2);
				PlayerPlaySound(playerid, 17001, 0.0, 0.0, 0.0);
				SCM(playerid, COLOR_BLUE, "√í√•√Ø√•√∞√º √ß√†√π√®√≤√† √∑√•√∞√•√ß "CORANGE"Google "CBLUE"√°√≥√§√•√≤ √±√∞√†√°√†√≤√ª√¢√†√≤√º √Ø√∞√® √≠√•√±√Æ√¢√Ø√†√§√•√≠√®√® "CPURPLE"√Ø√Æ√§√±√•√≤√®");
			}
			case 2: {
				pData[playerid][pStatusGoogle] = 3; UpdatePlayerData(playerid, "pStatusGoogle", 3);
				PlayerPlaySound(playerid, 17001, 0.0, 0.0, 0.0);
				SCM(playerid, COLOR_BLUE, "√í√•√Ø√•√∞√º √ß√†√π√®√≤√† √∑√•√∞√•√ß "CORANGE"Google "CBLUE"√°√≥√§√•√≤ √±√∞√†√°√†√≤√ª√¢√†√≤√º √Ø√∞√® √≠√•√±√Æ√¢√Ø√†√§√•√≠√®√® {00cc00}IP √†√§√∞√•√±√Æ√¢");
			}
			case 3: {
				if(attempt_google_n[playerid]) return SPD(playerid, 718, DIALOG_STYLE_MSGBOX, ""CERROR"√é√≤√™√´√æ√∑√•√≠√®√• √ß√†√π√®√≤√ª", ""CWHITE"√ç√•S√≠√¢√≠√Æ √Ç√ª √≥√¶√• √Ø√ª√≤√†√´√®√±√º apagar √ß√†√π√®√≤√≥ Google Authenticator\n√è√•√∞√•√§ √±√´√•√§√≥√æ√π√•√© √Ø√Æ√Ø√ª√≤√™√Æ√©, √¢ √∂√•√´√ø√µ √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√® √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √Ø√•√∞√•√ß√†√©√≤√® √¢ √®√£√∞√≥.", "Siguiente", "");
				return SPD(playerid, 355, DIALOG_STYLE_INPUT, ""CORANGE"Google Authenticator", ""CWHITE"√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø, √¢√¢√•√§√®√≤√• √™√Æ√§ √®√ß √Ø√∞√®√´√Æ√¶√•√≠√®√ø √¢ √Ø√Æ√´√• √≠√®√¶√• √® √≠√†√¶√¨√®√≤√• \"apagar\":", "apagar", "Siguiente");
			}
		}
		SPD(playerid, 118, DIALOG_STYLE_LIST, ""CPALEGREEN"√Å√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√º", "[1] Google Authenticator\n[2] √ä√Æ√§ √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√®\n[3] √à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ √ß√†√π√®√≤√•\n{00cc66}[4] Cambio √Ø√†√∞√Æ√´√º\n{0099ff}[5] √ë√≤√†√≤√≥√± √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√®\n"CGREY"[6] √è√Æ√§√≤√¢√•√∞√§√®√≤√º E-Mail", "Seleccione", "Siguiente");
	}
	case 355: {
			if(!response) return SPD(playerid, 358, DIALOG_STYLE_LIST, ""CMAIN"Google Authenticator", ""CWHITE"[1] √á√†√Ø√∞√†√∏√®√¢√†√≤√º √¢√±√•√£S√≠\n[2] √á√†√Ø√∞√†√∏√®√¢√†√≤√º √Ø√∞√® √≠√•√±√Æ√¢√Ø√†√§√•√≠√®√® √Ø√Æ√§√±√•√≤√®\n[3] √á√†√Ø√∞√†√∏√®√¢√†√≤√º √Ø√∞√® √≠√•√±√Æ√¢√Ø√†√§√•√≠√®√® IP √†√§√∞√•√±√Æ√¢\n"CERROR"[4] apagar √ß√†√π√®√≤√≥", "Seleccione", "Siguiente");
			if(strval(inputtext) != GoogleAuthenticatorCode(pData[playerid][GoogleCod], gettime())) {
				attempt_google_n[playerid] = true;
				SCM(playerid, COLOR_ERROR, "√Ç√¢√•√§¬∏√≠ √≠√•√¢√•√∞√≠√ª√© √™√Æ√§ √®√ß √Ø√∞√®√´√Æ√¶√•√≠√®√ø");
				return SCM(playerid, COLOR_ERROR, "apagar √ß√†√π√®√≤√≥ √≠√• √≥S√≠√´√Æ√±√º");
			}
			PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
			pData[playerid][pStatusGoogle] = 0;
			pData[playerid][pSecCode] = 0;
			pData[playerid][GoogleCod][0] = EOS;
			UpdatePlayerDataEx(playerid, "googlecode", ""), UpdatePlayerData(playerid, "pSecCode", 0), UpdatePlayerData(playerid, "pStatusGoogle", 0);
			if(pData[playerid][pLeader] >= 1) {
				new str_gd[95];
				format(str_gd, sizeof(str_gd), "[A] √ã√®√§√•√∞ %s[%d] √Æ√≤√™√´√æ√∑√®√´ √ß√†√π√®√≤√≥ Google Authenticator", GetName(playerid), playerid);
				AdminMessage(0xFF0000FF, string);
			}
			SCM(playerid, COLOR_MAIN, "√á√†√π√®√≤√† √∑√•√∞√•√ß √Ø√∞√®√´√Æ√¶√•√≠√®√• "CBLUE"Google Authenticator "CMAIN"√Æ√≤√™√´√æ√∑√•√≠√†");
			return SCM(playerid, -1, "√í√•√Ø√•√∞√º √Ø√∞√® √†√¢√≤√Æ√∞√®√ß√†√∂√®√® √™√Æ√§ √®√ß √Ø√∞√®√´√Æ√¶√•√≠√®√ø √ß√†√Ø√∞√†√∏√®√¢√†√≤√º√±√ø √≠√• √°√≥√§√•√≤");
		}
	case 356: {
			if(!response) return 1;
			if(strval(inputtext) != GoogleAuthenticatorCode(pData[playerid][GoogleCod], gettime())) return SCM(playerid, COLOR_ERROR, "√Ç√ª √¢√¢√•√´√® √≠√•√¢√•√∞√≠√ª√© √™√Æ√§. √è√Æ√Ø√∞√Æ√°√≥√©√≤√• √•√π¬∏ √∞√†√ß"), pData[playerid][GoogleCod][0] = EOS;
			PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
			pData[playerid][pSecCode] = 1; pData[playerid][pStatusGoogle] = 1;
			UpdatePlayerDataEx(playerid, "googlecode", pData[playerid][GoogleCod]);
			UpdatePlayerData(playerid, "pSecCode", 1);
			UpdatePlayerData(playerid, "pStatusGoogle", 1);
			return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{33CC00}√à√≠√¥√Æ√∞√¨√†√∂√®√ø",
			""CWHITE"√á√†√π√®√≤√† √∑√•√∞√•√ß √Ø√∞√®√´√Æ√¶√•√≠√®√• "CBLUE"Google Authenticator "CWHITE"√≥√±√Ø√•√∏√≠√Æ\n\
				√Ø√Æ√§√™√´√æ√∑√•√≠√†.\n\
				\n\
				√í√•√Ø√•√∞√º √Ø√∞√® √¢√µ√Æ√§√• √≠√† √¢√†√∏ √†√™√™√†√≥√≠√≤ √°√≥√§√•√≤ √ß√†√Ø√∞√†√∏√®√¢√†√≤√º√±√ø √™√Æ√§, √≠√•\n\
				√¢√¢√Æ√§√ø √™√Æ√≤√Æ√∞√ª√© √ß√†√©√≤√® √≠√• √Ø√Æ√´√≥√∑√®√≤√±√ø. √Ç √±√´√≥√∑√†√• √Ø√Æ√≤√•√∞√®\n\
				√¢√Æ√ß√¨√Æ√¶√≠√Æ√±√≤√® √¢√µ√Æ√§√®√≤√º √∑√•√∞√•√ß √Ø√∞√®√´√Æ√¶√•√≠√®√•, √Æ√°√∞√†√≤√®√≤√•√±√º √≠√† √≠√†√∏\n\
				√¥√Æ√∞√≥√¨. √Ç√†√¨ √Æ√°√ø√ß√†√≤√•√´√º√≠√Æ √Ø√Æ√¨√Æ√£√≥√≤.\n\
				\n\
				√í√†√™√¶√• √¢√ª √¨√Æ√¶√•√≤√• Cambio √±√≤√†√≤√≥√± √±√∞√†√°√†√≤√ª√¢√†√≠√®√ø √ß√†√π√®√≤√ª √¢\n\
				√∞√†√ß√§√•√´√• √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√®.",
			"Cerrar", "");
		}
	case 354: {
			if(!response) return SPD(playerid, 118, DIALOG_STYLE_LIST, ""CPALEGREEN"√Å√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√º", "[1] Google Authenticator\n[2] √ä√Æ√§ √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√®\n[3] √à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ √ß√†√π√®√≤√•\n{00cc66}[4] Cambio √Ø√†√∞√Æ√´√º\n{0099ff}[5] √ë√≤√†√≤√≥√± √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√®\n"CGREY"[6] √è√Æ√§√≤√¢√•√∞√§√®√≤√º E-Mail", "Seleccione", "Siguiente");
			
			pData[playerid][GoogleCod][0] = EOS;
			for(new i = 0; i < 17; i++) strcat(pData[playerid][GoogleCod], letters_generation[random(sizeof(letters_generation))]);
			string[0] = EOS;
			format(string, 660,
				""CWHITE"√Ñ√´√ø √†√™√≤√®√¢√†√∂√®√® √ß√†√π√®√≤√ª √≥ √Ç√†√± √§√Æ√´√¶√≠√Æ √°√ª√≤√º √≥√±√≤√†√≠√Æ√¢√´√•√≠√Æ\n\
				√Ø√∞√®√´√Æ√¶√•√≠√®√• "CBLUE"Google Authenticator (√§√Æ√±√≤√≥√Ø√≠√Æ √§√´√ø iOS √® Android)"CWHITE".\n\
				√é√≤√™√∞√Æ√©√≤√• √•√£√Æ √® √§√Æ√°√†√¢√º√≤√• √±√•√™√∞√•√≤√≠√ª√© √™√´√æ√∑. √é√≠ √≠√≥√¶√•√≠ √§√´√ø\n\
				√£√•√≠√•√∞√†√∂√®√® √™√Æ√§√Æ√¢ √§√Æ√±√≤√≥√Ø√†.\n\
				\n\
				{00CC99}√ä√†√™ √§√Æ√°√†√¢√®√≤√º √™√´√æ√∑?\n\
				\n\
				"CWHITE"1. √ç√†√¶√¨√®√≤√• √≠√† {FFCC66}'+' "CWHITE"√® √¢√ª√°√•√∞√®√≤√• √Ø√≥√≠√™√≤ \"√Ç√¢√•√±√≤√® √™√´√æ√∑\" (√≠√† iOS:\n\
				\"√Ç√¢√Æ√§ √¢√∞√≥√∑√≠√≥√æ\").\n\
				2. √Ç√¢√•√§√®√≤√• √¢ √≠√≥√¶√≠√Æ√• √Ø√Æ√´√• √™√´√æ√∑ {FF6633}%s "CWHITE"√® √±√Æ√µ√∞√†√≠√®√≤√•\n\
				√•√£√Æ.\n\
				3. √è√Æ√±√´√• √§√Æ√°√†√¢√´√•√≠√®√ø, √¢√¢√•√§√®√≤√• √Ø√Æ√ø√¢√®√¢√∏√®√©√±√ø √¢ √Ø√∞√®√´√Æ√¶√•√≠√®√® √™√Æ√§\n\
				√¢ √Ø√Æ√´√• √≠√®√¶√•. √é√≠ √±√Æ√±√≤√Æ√®√≤ √®√ß {AA80FF}6 √∂√®√¥√∞.",
			pData[playerid][GoogleCod]);
			return SPD(playerid, 356, DIALOG_STYLE_INPUT, ""CBLUE"Google Authenticator", string, "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
		}
	case 118: {
			if(!response) return callcmd::menu(playerid);
			switch(listitem) {
				case 0: {
					if(pData[playerid][pSecCode] == 0) {
						SPD(playerid, 354, DIALOG_STYLE_MSGBOX, ""CBLUE"Google Authenticator",
						""CWHITE"√Ç√ª √¨√Æ√¶√•√≤√• √ß√†√π√®√≤√®√≤√º √±√¢√Æ√© √†√™√™√†√≥√≠√≤, √¢√™√´√æ√∑√®√¢ "CCYAN"√§√¢√≥√µ√¥√†√™√≤√Æ√∞√≠√≥√æ\n\
							√†√≥√≤√•√≠√≤√®√¥√®√™√†√∂√®√æ.\n\
							\n\
							"CWHITE"√ù√≤√Æ√≤ √±√Ø√Æ√±√Æ√° √ß√†√π√®√≤√ª √≥√¨√•√≠√º√∏√®√≤ √¢√•√∞√Æ√ø√≤√≠√Æ√±√≤√º √¢√ß√´√Æ√¨√† √¢√†√∏√•√£√Æ\n\
							√†√™√™√†√≥√≠√≤√† √§√Æ √¨√®√≠√®√¨√≥√¨√†.\n\
							√è√∞√® √¢√µ√Æ√§√• √≠√† √±√•√∞√¢√•√∞ √°√≥√§√•√≤ √ß√†√Ø√∞√†√∏√®√¢√†√≤√º√±√ø √™√Æ√§ √®√ß √¨√Æ√°√®√´√º√≠√Æ√£√Æ\n\
							√Ø√∞√®√´√Æ√¶√•√≠√®√ø, √™√Æ√≤√Æ√∞√ª√© √Ø√Æ√±√≤√Æ√ø√≠√≠√Æ √Æ√°√≠√Æ√¢√´√ø√•√≤√±√ø √® √°√≥√§√•√≤\n\
							√§√Æ√±√≤√≥√Ø√•√≠ √≤√Æ√´√º√™√Æ √¢√†√¨.\n\
							\n\
							√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø, √≠√†√¶√¨√®√≤√• {FFCC33}\"S√≠√´√•√•\".",
						"S√≠√´√•√•", "Siguiente");
					}
					else SPD(playerid, 358, DIALOG_STYLE_LIST, ""CMAIN"Google Authenticator", ""CWHITE"[1] √á√†√Ø√∞√†√∏√®√¢√†√≤√º √¢√±√•√£S√≠\n[2] √á√†√Ø√∞√†√∏√®√¢√†√≤√º √Ø√∞√® √≠√•√±√Æ√¢√Ø√†√§√•√≠√®√® √Ø√Æ√§√±√•√≤√®\n[3] √á√†√Ø√∞√†√∏√®√¢√†√≤√º √Ø√∞√® √≠√•√±√Æ√¢√Ø√†√§√•√≠√®√® IP √†√§√∞√•√±√Æ√¢\n"CERROR"[4] apagar √ß√†√π√®√≤√≥", "Seleccione", "Siguiente");
				}
				case 1: {
					if(pData[playerid][pKeylog]) {
						SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√´√æ√∑√®√´√® √¢√¢√Æ√§ √™√ÆS√≠ √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√®");
						strmid(pData[playerid][pSuperKey], "None", 0, 1, 255);
						pData[playerid][pKeylog] = 0;
						UpdatePlayerData(playerid, "pKeylog", pData[playerid][pKeylog]);
						return UpdatePlayerDataEx(playerid, "pSuperKey", "None");
					}
					SPD(playerid, 4930, DIALOG_STYLE_INPUT, "{bbaa00}√ä√Æ√§ √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√®", "\
						"CWHITE"√ä√Æ√§ √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√® - √Ω√≤√Æ √Ç√†√∏ √Ø√•√∞√±√Æ√≠√†√´√º√≠√ª√© √™√Æ√§, √™√Æ√≤√Æ√∞√ª√© √Ç√ª\n\
						√Æ√°√ø√ß√†√≠√ª √ß√†√Ø√Æ√¨√≠√®√≤√º.\n\
						√Å√•√ß √™√ÆS√≠ √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√® √Ç√ª √≠√• √±√¨√Æ√¶√•√≤√• √Ø√∞√Æ√©√≤√® √†√¢√≤√Æ√∞√®√ß√†√∂√®√æ.\n\
						√Ç√¢√•√§√®√≤√• √¢ √Ø√Æ√´√• √≠√®√¶√• √¶√•√´√†√•√¨√ª√© √™√Æ√§ √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√®. √é√≠ √§√Æ√´√¶√•√≠\n\
						√±√Æ√±√≤√Æ√ø√≤√º √®√ß 5 √∂√®√¥√∞:", 
					"√Ç√¢√•√±√≤√®", "Cerrar");
				}
				case 2: {
					new info_str[] = 
					""CWHITE"√á√§√•√±√º √Ç√ª √¨√Æ√¶√•√≤√• Cambio √≠√†√±√≤√∞√Æ√©√™√® √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√® √¢√†√∏√•√£√Æ\n\
					√†√™√™√†√≥√≠√≤√†. √ù√≤√Æ √Ø√Æ√¨√Æ√¶√•√≤ √ß√†√π√®√≤√®√≤√º √•√£√Æ √Æ√≤ √¢√ß√´√Æ√¨√†.\n\
					\n\
					√ë√≥√π√•√±√≤√¢√≥√•√≤ {996633}2 √¢√®S√≠ "CWHITE"√ß√†√π√®√≤√ª:\n\
					\n\
					1. √ë √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√•√¨ √¨√Æ√°√®√´√º√≠√Æ√£√Æ √Ø√∞√®√´√Æ√¶√•√≠√®√ø "CBLUE"Google\n\
					Authenticator. "CWHITE"√è√∞√® √†√¢√≤√Æ√∞√®√ß√†√∂√®√® √Ø√Æ√≠√†√§√Æ√°√®√≤√±√ø √¢√¢√•√±√≤√® √™√Æ√§ √®√ß\n\
					√Ø√∞√®√´√Æ√¶√•√≠√®√ø, √™√Æ√≤√Æ√∞√ª√© √£√•√≠√•√∞√®√∞√≥√•√≤√±√ø √†√¢√≤√Æ√¨√†√≤√®√∑√•√±√™√® √™√†√¶√§√ª√• {B04444}30\n\
					√±√•√™√≥√≠√§. "CWHITE"S√≠√≠√≠√ª√© √¢√†√∞√®√†√≠√≤ √ø√¢√´√ø√•√≤√±√ø √´√≥√∑√∏√®√¨ √±√∞√•√§√±√≤√¢√Æ√¨ √ß√†√π√®√≤√ª\n\
					√†√™√™√†√≥√≠√≤√† √Æ√≤ √ß√´√Æ√≥√¨√ª√∏√´√•√≠√≠√®√™√Æ√¢.\n\
					\n\
					2. √ë √Ø√Æ√¨√Æ√π√º√æ {FFCC00}√™√ÆS√≠ √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√®. "CWHITE"√è√∞√® √†√¢√≤√Æ√∞√®√ß√†√∂√®√® √°√≥√§√•√≤\n\
					√ß√†√Ø√∞√†√∏√®√¢√†√≤√º√±√ø √¢√¢√Æ√§ √§√Æ√Ø√Æ√´√≠√®√≤√•√´√º√≠√Æ√£√Æ √™√ÆS√≠, √™√Æ√≤√Æ√∞√ª√© √¢√ª\n\
					√≥√™√†√¶√•√≤√• √Ø√∞√® √≥√±√≤√†√≠√Æ√¢√™√• √ß√†√π√®√≤√ª.";
					SPD(playerid, 718, DIALOG_STYLE_MSGBOX, ""CMAIN"√à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ √ß√†√π√®√≤√•", info_str, "Siguiente", "");
				}
				case 3: SPD(playerid, 155, DIALOG_STYLE_INPUT, ""CMAIN"√à√ß√¨√•√≠√•√≠√®√• √Ø√†√∞√Æ√´√ø", ""CWHITE"√Ç√¢√•√§√®√≤√• √Ç√†√∏ √≤√•√™√≥√π√®√© √Ø√†√∞√Æ√´√º √¢ √Ø√Æ√´√• √≠√®√¶√•:", "S√≠√´√•√•", "Siguiente");
				case 4: {
					new f_status[330];
					format(f_status, sizeof(f_status), 
						""CWHITE"√í√≥√≤ √Ç√ª √¨√Æ√¶√•√≤√• √≥√¢√®√§√•√≤√º √±√≤√†√≤√≥√± √ß√†√π√®√≤√ª √†√™√™√†√≥√≠√≤√†.\n\
						√Ñ√´√ø √®√ß√¨√•√≠√•√≠√®√ø √Ω√≤√®√µ √≠√†√±√≤√∞√Æ√•√™ Usar√≤√• √Ø√≥√≠√™√≤√ª\n\
						\"Google Authenticator\" √®√´√® \"√ä√Æ√§ √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√®\" √¢ √¨√•√≠√æ.\n\n\
						Google Authenticator: %s\n\
						"CWHITE"√ä√Æ√§ √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√®: %s", 
					(pData[playerid][pStatusGoogle] == 0) ? ("{ff4530}√¢√ª√™√´√æ√∑√•√≠") : (pData[playerid][pStatusGoogle] == 1) ? ("{99ff00}√ß√†√Ø√∞√†√∏√®√¢√†√•√≤√±√ø √¢√±√•√£S√≠") : (pData[playerid][pStatusGoogle] == 2) ? ("{aa80ff}√ß√†√Ø√∞√†√∏√®√¢√†√•√≤√±√ø √Ø√∞√® √≠√•√±√Æ√¢√Ø√†√§√•√≠√®√® √Ø√Æ√§√±√•√≤√®") : ("{aa80ff}√ß√†√Ø√∞√†√∏√®√¢√†√•√≤√±√ø √Ø√∞√® √≠√•√±√Æ√¢√Ø√†√§√•√≠√®√® IP"), (pData[playerid][pKeylog]) ? ("{99ff00}√¢√™√´√æ√∑√•√≠") : ("{ff4530}√¢√ª√™√´√æ√∑√•√≠"));
					SPD(playerid, 718, DIALOG_STYLE_MSGBOX, ""CMAIN"√ë√≤√†√≤√≥√± √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√®", f_status, "Siguiente", "");
				}
				case 5: {
					SPD(playerid,718,DIALOG_STYLE_MSGBOX,""CMAIN"√è√Æ√§√≤√¢√•√∞√¶√§√•√≠√®√• E-Mail",""CWHITE"√Ç√ª √¨√Æ√¶√•√≤√• √Ø√Æ√§√≤√¢√•√∞√§√®√≤√º √±√¢√Æ√© √Ω√´√•√™√≤√∞√Æ√≠√≠√ª√© √†√§√∞√•√± √¢ √´√®√∑√≠√Æ√¨\n√™√†√°√®No√• √≠√† √≠√†√∏√•√¨ √±√†√©√≤√• "CLITEBLUE"(normative-rp.ru)","Siguiente","");
				}
			}
			return 1;
		}
	case 718: SPD(playerid, 118, DIALOG_STYLE_LIST, ""CPALEGREEN"√Å√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√º", "[1] Google Authenticator\n[2] √ä√Æ√§ √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√®\n[3] √à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ √ß√†√π√®√≤√•\n{00cc66}[4] Cambio √Ø√†√∞√Æ√´√º\n{0099ff}[5] √ë√≤√†√≤√≥√± √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√®\n"CGREY"[6] √è√Æ√§√≤√¢√•√∞√§√®√≤√º E-Mail", "Seleccione", "Siguiente");
	case 155: {
			if(!response) return SPD(playerid, 118, DIALOG_STYLE_LIST, ""CPALEGREEN"√Å√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√º", "[1] Google Authenticator\n[2] √ä√Æ√§ √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√®\n[3] √à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ √ß√†√π√®√≤√•\n{00cc66}[4] Cambio √Ø√†√∞√Æ√´√º\n{0099ff}[5] √ë√≤√†√≤√≥√± √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√®\n"CGREY"[6] √è√Æ√§√≤√¢√•√∞√§√®√≤√º E-Mail", "Seleccione", "Siguiente");
			if(!strlen(inputtext) || strlen(inputtext) < 5) {
				SCM(playerid, COLOR_ERROR, "√Ç√ª √¢√¢√•√´√® √≠√•√Ø√∞√†√¢√®√´√º√≠√ª√© √Ø√†√∞√Æ√´√º");
				return SPD(playerid, 118, DIALOG_STYLE_LIST, ""CPALEGREEN"√Å√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√º", "[1] Google Authenticator\n[2] √ä√Æ√§ √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√®\n[3] √à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ √ß√†√π√®√≤√•\n{00cc66}[4] Cambio √Ø√†√∞√Æ√´√º\n{0099ff}[5] √ë√≤√†√≤√≥√± √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√®\n"CGREY"[6] √è√Æ√§√≤√¢√•√∞√§√®√≤√º E-Mail", "Seleccione", "Siguiente");
			}
			if(strfind(inputtext, "=", true) == -1 && strfind(inputtext, ",", true) == -1 && strfind(inputtext, "'", true) == -1) {
				mysql_format(mysql_Handle, string, 200, "SELECT `Name`, `pKey` FROM `accounts` WHERE `Name` = '%s' AND `pKey` = MD5('%s')", pData[playerid][pName], inputtext);
				return mysql_tquery(mysql_Handle, string, "OnPlayerSelectPassword", "i", playerid);
			}
			else {
				SCM(playerid, COLOR_ERROR, "√Ç√ª √¢√¢√•√´√® √≠√•√Ø√∞√†√¢√®√´√º√≠√ª√© √Ø√†√∞√Æ√´√º");
				return SPD(playerid, 118, DIALOG_STYLE_LIST, ""CPALEGREEN"√Å√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√º", "[1] Google Authenticator\n[2] √ä√Æ√§ √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√®\n[3] √à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ √ß√†√π√®√≤√•\n{00cc66}[4] Cambio √Ø√†√∞√Æ√´√º\n{0099ff}[5] √ë√≤√†√≤√≥√± √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√®\n"CGREY"[6] √è√Æ√§√≤√¢√•√∞√§√®√≤√º E-Mail", "Seleccione", "Siguiente");
			}
		}
	case 156: {
			if(!response) return 1;
			if(strlen(inputtext) < 6 || strlen(inputtext) > 15 || strfind(inputtext, " ", true) != -1) {
		        SPD(playerid, 156, DIALOG_STYLE_INPUT, ""CMAIN"√ç√Æ√¢√ª√© √Ø√†√∞√Æ√´√º", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¢√ª√© √Ø√†√∞√Æ√´√º √¢ √Ø√Æ√´√• √≠√®√¶√•:", "Cambio", "Cerrar");
		        SCM(playerid, COLOR_ERROR, "√Ñ√´√®√≠√† √Ø√†√∞√Æ√´√ø √§√Æ√´√¶√≠√† √°√ª√≤√º √Æ√≤ 6 √§√Æ 15 √±√®√¨√¢√Æ√´√Æ√¢");
		        return SCM(playerid, COLOR_ERROR, "√í√†√™√¶√• √≠√• √§√Æ√Ø√≥√±√™√†√•√≤√±√ø √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√• √Ø√∞√Æ√°√•√´√Æ√¢");
		    }
		    strmid(pData[playerid][pKey], inputtext, 0, strlen(inputtext), 255);
			mysql_format(mysql_Handle, string, 200, "UPDATE `accounts` SET `pKey` = MD5('%s') WHERE `Name` = '%s'", inputtext, pData[playerid][pName]);
			mysql_tquery(mysql_Handle, string);
			SCMF(playerid, COLOR_YELLOW, "√Ç√†√∏ √≠√Æ√¢√ª√© √Ø√†√∞√Æ√´√º: {3399ff}%s", inputtext);
			SCM(playerid, -1, "√ê√•√™√Æ√¨√•√≠√§√≥√•√¨ √±√§√•√´√†√≤√º √±√™√∞√®√≠√∏√Æ√≤ {00cc00}(√™√´√†√¢√®√∏√† F8) "CWHITE"√∑√≤√Æ√°√ª √≠√• √ß√†√°√ª√≤√º √•√£√Æ");
		}
	}
	while(strfind(inputtext,"%s", true)!=-1) strdel(inputtext,strfind(inputtext,"%s", true),strfind(inputtext,"%s", true)+2);
	return 1;
}

stock allcmds_dialog(playerid) {
	SPD(playerid, 27515, DIALOG_STYLE_LIST, ""CPALEGREEN"√ë√Ø√®√±√Æ√™ √™√Æ√¨√†√≠√§", "\
	{4271ff}[1] "CWHITE"√é√°√π√®√• √™√Æ√¨√†√≠√§√ª\n\
	{4271ff}[2] "CWHITE"√í√∞√†√≠√±√Ø√Æ√∞√≤\n\
	{4271ff}[3] "CWHITE"√é√°√π√•√≠√®√• √® √±√•√¨√º√®\n\
	{4271ff}[4] "CWHITE"√Ñ√Æ√¨√†, √™√¢√†√∞√≤√®√∞√ª √® √Æ√≤√•√´√®\n\
	{4271ff}[5] "CWHITE"√Å√®√ß√≠√•√±√ª √® √Ä√á√ë\n\
	{4271ff}[6] "CWHITE"√é√∞√£√†√≠√®√ß√†√∂√®√ø √®√´√® √∞√†√°√Æ√≤√†\n\
	{4271ff}[7] "CWHITE"√ã√®√§√•√∞√†√¨\n\
	{4271ff}[8] "CWHITE"√ë√´√≥√¶√•√°√≠√ª√• √™√Æ√¨√†√≠√§√ª", "Seleccione", "Siguiente");
	return 1;
}

stock RemoveProdFromMarket(playerid,idmarket,numberit,status=0) {
	if(item_is_Skin[idmarket][numberit]) 
		item_is_Skin[idmarket][numberit]=false;
	if(item_is_Accessory[idmarket][numberit]) 
		item_is_Accessory[idmarket][numberit]=false;

	selleritemid[idmarket]=playerid;
	priceitem[idmarket][numberit]=0;
	countitem[idmarket][numberit]=0;
	modelitem[idmarket][numberit]=-1;
	marketname[idmarket][numberit]="";

	DestroyObject(install_market_obj[playerid][numberit]);

	new bool:amountstatus;
	for(new i = 0; i < 5; i++) {
		if(modelitem[idmarket][i] == -1) 
			continue;
		amountstatus=true;
		break;
	}
	if(amountstatus) {
		new fmt[128];
		format(fmt,sizeof(fmt),"√è√†√´√†√≤√™√† ¬π%d\n%s\n√è√∞√ÆS√≠¬∏√≤:",
		idmarket+1,GetName(playerid));
		for(new i = 0; i < 5; i++) {
			if(modelitem[idmarket][i] == -1) 
				continue;
			format(fmt,sizeof(fmt),"%s\n%s",fmt,marketname[idmarket][i]);
		}
		UpdateDynamic3DTextLabelText(rinok_3d[idmarket], COLOR_LIGHTGREY, fmt);
	}
	else {
		new fm[160];
		format(fm,sizeof(fm),"√è√†√´√†√≤√™√† ¬π%d\n√ë√¢√Æ√°√Æ√§√≠√†\n\n√è√Æ√§√±√™√†√ß√™√†:\n√Ç√¢√•√§√®√≤√• /inv\n√Ç√ª√°√•√∞√®√≤√• √≠√•√≠√†√§√•√≤√ª√© √†√™√±√•√±√±√≥√†√∞\n√ç√†√¶√¨√®√≤√• SELL √§√´√ø √Ø√∞√ÆS√≠√¶√®\n√á√† √Ø√∞√ÆS√≠√¶√≥ √≤√Æ√¢√†√∞√Æ√¢ √±√≠√®√¨√†√•√≤√±√ø √™√Æ√¨√®√±√±√®√ø 1%%",idmarket+1);
		UpdateDynamic3DTextLabelText(rinok_3d[idmarket], COLOR_LIGHTGREY, fm);
		selleritemid[idmarket]=-1;
		if(!status) SCM(playerid, -1,"√è√†√´√†√≤√™√† √≠√† √™√Æ√≤√Æ√∞√Æ√© √Ç√ª √≤√Æ√∞√£√Æ√¢√†√´√® √°√ª√´√† √Æ√±√¢√Æ√°√Æ√¶√§√•√≠√†");
	}
}

stock save_settings(playerid) {
	new nquery[300];
    mysql_format(mysql_Handle, nquery, sizeof(nquery), "UPDATE `accounts` SET \
    `p_setting_0` = %d, \
    `p_setting_1` = %d, \
    `p_setting_2` = %d, \
    `p_setting_3` = %d, \
    `p_setting_4` = %d, \
    `p_setting_5` = %d, \
    `p_setting_6` = %d \
    WHERE `Name` = '%s'", 
    pData[playerid][p_setting][0], 
    pData[playerid][p_setting][1], 
    pData[playerid][p_setting][2], 
    pData[playerid][p_setting][3], 
    pData[playerid][p_setting][4], 
    pData[playerid][p_setting][5], 
    pData[playerid][p_setting][6], 
    GetName(playerid));
    mysql_tquery(mysql_Handle, nquery);
}

stock show_gps_bizes(playerid, page, max_page) {
	new last_iter = page * max_page + 1,
    i = last_iter - max_page;

    string[0] = EOS;
    new str_last[65];

    new ids;
	for(; i < last_iter; i ++) {
		if(i > BIZES) break;

		ids = GetCityName(BizInfo[i][EnterBiz][0], BizInfo[i][EnterBiz][1]);

		format(str_last, sizeof(str_last), "[¬π%d] %s (%s)\n", BizInfo[i][bID], BizInfo[i][bName], gSAZonesCity[ids][SAZONE_NAME]);
		strcat(string, str_last);
	}
	SetPVarInt(playerid, "gps_bizes_page", page);
	if(last_iter < BIZES) {
		if(GetPVarInt(playerid, "bizes_button")) 
			DeletePVar(playerid, "bizes_button");
		strcat(string, "{cecece}S√≠√´√•√•");
	}
	else SetPVarInt(playerid, "bizes_button", 1);
	return SPD(playerid, 396, DIALOG_STYLE_LIST, "{FFCD00}√Å√®√ß√≠√•√±√ª", string, "√é√≤√¨√•√≤√®√≤√º", "Siguiente");
}

stock show_help_info(playerid, number) {
	switch(number) {
		case 0: {
			new help_page_str[] = 
			"Normative Role Play - √≠√Æ√¢√ª√© √Ø√∞√Æ√•√™√≤ √¨√≠√Æ√£√Æ√Ø√Æ√´√º√ß√Æ√¢√†√≤√•√´√º√±√™√Æ√© √®√£√∞√ª\n\
			GTA San Andreas MultiPlayer (GTA SAMP).\n\
			\n\
			√å√ª √Ø√Æ√±√≤√†√∞√†√´√®√±√º √Æ√°√∫√•√§√®√≠√®√≤√º √´√≥√∑√∏√®√• √Ω√´√•√¨√•√≠√≤√ª √∞√Æ√´√•√¢√Æ√© √®√£√∞√ª SA-MP √±\n\
			√≠√Æ√¢√ª√¨√® √®√§√•√ø√¨√® √® √¢√Æ√ß√¨√Æ√¶√≠√Æ√±√≤√ø√¨√®. √Ç√ª √±√¨√Æ√¶√•√≤√• Seleccione √´√æ√°√®√¨√≥√æ\n\
			√∞√†√°√Æ√≤√≥, √®√´√® S√≠√¶√• √Æ√≤√™√∞√ª√≤√º √±√¢√Æ√© √±√Æ√°√±√≤√¢√•√≠√≠√ª√© √°√®√ß√≠√•√±, √ß√†√∞√†√°√†√≤√ª√¢√†√ø\n\
			√≠√•√Ø√´√Æ√µ√®√• √§√•√≠√º√£√®. √å√Æ√¶√•√≤ √Ç√†√¨ √ß√†√µ√Æ√∑√•√≤√±√ø √¢√±√≤√≥√Ø√®√≤√º √¢ √Æ√§√≠√≥ √®√ß √Æ√∞√£√†√≠√®√ß√†√∂√®√©\n\
			√® √≠√†√∑√†√≤√º √™√†√∞√º√•√∞√≠√ª√© √∞√Æ√±√≤. √à√´√® √¶√• √¨√Æ√¶√≠√Æ √Ø√∞√Æ√±√≤√Æ √Ø√∞√®√ø√≤√≠√Æ √Ø√∞√Æ√¢√•√±√≤√®\n\
			√¢√∞√•√¨√ø, √Ø√∞√®√≠√ø√¢ √≥√∑√†√±√≤√®√• √¢ √£√Æ√≠√™√†√µ, √®√´√® √±√ª√£√∞√†√¢ √± √§√∞√≥√ß√º√ø√¨√® √¢ ¬´√ä√∞√Æ√¢√†√¢√Æ√• √™√Æ√´√º√∂√Æ¬ª.\n\
			\n\
			√å√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ Normative Role Play √Ø√Æ√¨√Æ√¶√•√≤ √Ç√†√¨ √Ø√∞√®√ø√≤√≠√Æ √Ø√∞√Æ√¢√•√±√≤√® √Ø√†√∞√≥\n\
			√±√¢√Æ√°√Æ√§√≠√ª√µ √∑√†√±√Æ√¢ √ß√† √Æ√≠√´√†√©√≠-√®√£√∞√Æ√©";

			SPD(playerid, 7900, DIALOG_STYLE_MSGBOX, "{FFCD00}1. √é √Ø√∞√Æ√•√™√≤√•", help_page_str, "<< √å√•√≠√æ", "S√≠√´√•√• >>");
		}
		case 1: {
			new help_page_str[] = 
			"√Ç√†√∏ √†√™√™√†√≥√≠√≤ - √Ω√≤√Æ √¢√†√∏√† √±√Æ√°√±√≤√¢√•√≠√≠√Æ√±√≤√º. √ç√®√™√Æ√¨√≥ √≠√• S√≠√¢√†√©√≤√• √±√¢√Æ√© √Ø√†√∞√Æ√´√º,\n\
			√®√≠√†√∑√• √¢√ª √∞√®√±√™√≥√•√≤√• √≥√≤√∞√†√≤√®√≤√º √¢√±√• √±√¢√Æ√® √§√Æ√±√≤√®√¶√•√≠√®√ø. √ç√• √±√™√†√∑√®√¢√†√©√≤√•\n\
			√§√Æ√Ø√Æ√´√≠√®√≤√•√´√º√≠√ª√• √Ø√∞√Æ√£√∞√†√¨√¨√ª - √¨√Æ√§√ª, √∑√®√≤√ª, √≤√∞√•√©√≠√•√∞√ª. √Ç√±√• √Æ√≠√®\n\
			√±√Æ√ßS√≠√æ√≤√±√ø √ß√´√Æ√≥√¨√ª√∏√´√•√≠√≠√®√™√†√¨√® √≤√Æ√´√º√™√Æ √± √Æ√§√≠√Æ√© √∂√•√´√º√æ - √ß√†√Ø√Æ√´√≥√∑√®√≤√º\n\
			√§√Æ√±√≤√≥√Ø √™ √Ç√†√∏√•√¨√≥ √†√™√™√†√≥√≠√≤√≥.\n\
			\n\
			√à√£√∞√Æ√™√® Normative Role Play √¨√Æ√£√≥√≤ √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √∞√†√±√∏√®√∞√•√≠√≠√ª√• √≠√†√±√≤√∞√Æ√©√™√®\n\
			√°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√®, √™√Æ√≤√Æ√∞√ª√• √Ø√∞√†√™√≤√®√∑√•√±√™√® √®√±√™√´√æ√∑√†√æ√≤ √¢√Æ√ß√¨√Æ√¶√≠√Æ√±√≤√º √¢√ß√´√Æ√¨√†.\n\
			√è√Æ√§√∞√Æ√°√≠√•√•: √™√Æ√¨√†√≠S√≠ {66ccff}/menu > √Å√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√º.";

			SPD(playerid, 7901, DIALOG_STYLE_MSGBOX, "{FFCD00}2. √Å√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√º", help_page_str, "<< √å√•√≠√æ", "S√≠√´√•√• >>");
		}
		case 2: {
			new help_page_str[] = 
			"√à√£√∞√†√ø √≠√† √±√•√∞√¢√•√∞√•, √Ç√ª √Ø√Æ√´√≥√∑√†√•√≤√• √Æ√∑√™√® √Æ√Ø√ª√≤√†. √è√∞√® √≠√†√™√Æ√Ø√´√•√≠√®√® √®√µ\n\
			√Æ√Ø√∞√•√§√•√´¬∏√≠√≠√Æ√£√Æ √™√Æ√´√®√∑√•√±√≤√¢√† √Ø√∞√Æ√®√±√µ√Æ√§√®√≤ √Ø√•√∞√•√µ√Æ√§ √≠√† √±√´√•√§√≥√æ√π√®√© √≥√∞√Æ√¢√•√≠√º.\n\
			√ë √™√†√¶√§√ª√¨ √≠√Æ√¢√ª√¨ √≥√∞√Æ√¢√≠√•√¨ √Æ√≤√™√∞√ª√¢√†√æ√≤√±√ø √≠√Æ√¢√ª√• √¢√Æ√ß√¨√Æ√¶√≠√Æ√±√≤√® √®\n\
			√±√≤√†√≠√Æ√¢√ø√≤√±√ø √§√Æ√±√≤√≥√Ø√≠√ª √°√Æ√´√•√• √®√≠√≤√•√∞√•√±√≠√ª√• √¥√≥√≠√™√∂√®√®.\n\
			\n\
			√Ñ√´√ø √Ø√∞√Æ√±√¨√Æ√≤√∞√† √±√≤√†√≤√®√±√≤√®√™√® √¢√Æ√±√Ø√Æ√´√º√ß√≥√©√≤√•√±√º √™√Æ√¨√†√≠√§√Æ√© /menu. √Ç √®√£√∞√Æ√¢√Æ√¨\n\
			√Ø√∞√Æ√∂√•√±√±√• √Ø√Æ√±√≤√Æ√ø√≠√≠√Æ √≠√≥√¶√≠√Æ √°√≥√§√•√≤ √Ø√Æ√´√º√ß√Æ√¢√†√≤√º√±√ø √Ø√Æ√§√Æ√°√≠√ª√¨√® √™√Æ√¨√†√≠S√≠√¨√®.\n\
			√é√≠√® √¢√¢√Æ√§√ø√≤√±√ø √¢ √®√£√∞√Æ√¢√Æ√© √∑√†√≤ (F6) √∑√•√∞√•√ß √™√Æ√±√≥√æ √∑√•√∞√≤√≥, √≠√†√Ø√∞√®√¨√•√∞ /anim\n\
			/help √® √≤. √Ø. √Ç√¢√•√§√®√≤√• /menu, S√≠√´√•√• √¢√ª√°√•√∞√®√≤√• √Ø√≥√≠√™√≤ \"√ë√Ø√®√±√Æ√™ √™√Æ√¨√†√≠√§\". √í√†√¨\n\
			√Ç√ª √±√¨√Æ√¶√•√≤√• √≠√†√©√≤√® √Ø√Æ√´√≠√ª√• √Ø√•√∞√•√∑√≠√® √™√Æ√¨√†√≠√§.";

			SPD(playerid, 7902, DIALOG_STYLE_MSGBOX, "{FFCD00}3. √é√±√≠√Æ√¢√ª √®√£√∞√ª", help_page_str, "<< √å√•√≠√æ", "S√≠√´√•√• >>");
		}
		case 3: {
			new help_page_str[] = 
			"Role Play - √Ω√≤√Æ √≤√†√™√Æ√© √¢√®√§ √®√£√∞√ª, √¢ √™√Æ√≤√Æ√∞√Æ√¨ √≥ √™√†√¶√§√Æ√£√Æ √•√±√≤√º √±√¢√Æ√ø √∞√Æ√´√º. √Å√≥√§√º\n\
			√≤√Æ √≤√†√™√±√®√±√≤, √¢√Æ√§√®√≤√•√´√º √†√¢√≤√Æ√°√≥√±√† √®√´√® √∏√†√µ√≤¬∏√∞, √Ø√Æ√´√®√∂√•√©√±√™√®√© √®√´√® √¨√†√¥√®√Æ√ß√®,\n\
			√∑√´√•√≠ √°√†√≠√§√ª √®√´√® √¢√Æ√•√≠√≠√ª√©. √ä√†√¶√§√ª√© √®√£√∞√Æ√™ √Æ√Ø√∞√•√§√•√´√ø√•√≤, √™√•√¨ √Æ√≠ √µ√Æ√∑√•√≤ √°√ª√≤√º.\n\
			\n\
			Role Play (RP) √∞√•√¶√®√¨ √Ø√Æ√§√∞√†√ß√≥√¨√•√¢√†√•√≤ √ß√≠√†√≠√®√• √≠√•√™√Æ√≤√Æ√∞√ª√µ √Ø√∞√†√¢√®√´ √®\n\
			√Ø√Æ√≠√ø√≤√®√©, √≠√•√±√Æ√°√´√æ√§√•√≠√®√• √™√Æ√≤√Æ√∞√ª√µ √¢√´√•√∑¬∏√≤ √ß√† √±√Æ√°√Æ√© √≠√†√™√†√ß√†√≠√®√ø. √ë √Ω√≤√Æ√©\n\
			√®√≠√¥√Æ√∞√¨√†√∂√®√•√© √¨√Æ√¶√≠√Æ √Æ√ß√≠√†√™√Æ√¨√®√≤√º√±√ø √≠√† √≠√†√∏√•√¨ √¥√Æ√∞√≥√¨√•, √≤√†√¨ √¶√• √¨√Æ√¶√≠√Æ\n\
			√ß√†S√≠√≤√º √¢√±√• √®√≠√≤√•√∞√•√±√≥√æ√π√®√• √Ç√†√± √¢√Æ√Ø√∞√Æ√±√ª √Ø√Æ √®√£√∞√Æ√¢√Æ√¨√≥ √Ø√∞√Æ√∂√•√±√±√≥.";

			SPD(playerid, 7903, DIALOG_STYLE_MSGBOX, "{FFCD00}4. Role Play", help_page_str, "<< √å√•√≠√æ", "S√≠√´√•√• >>");
		}
		case 4: {
			new help_page_str[] = 
			"√è√•√∞√¢√ª√¨ √§√•√´√Æ√¨ √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √ß√†√∞√†√°√Æ√≤√†√≤√º √§√•√≠√º√£√®. √Ç √£√Æ√±√≥S√≠√∞√±√≤√¢√• √•√±√≤√º\n\
			√Ø√∞√•√§√Ø√∞√®√ø√≤√®√ø, √™√≥S√≠ √Ç√ª √±√¨√Æ√¶√•√≤√• √≥√±√≤√∞√Æ√®√≤√º√±√ø √≠√† √Ø√•√∞√¢√Æ√• √¢√∞√•√¨√ø. √ê√†√°√Æ√≤√†√ø √≠√†\n\
			√≠√®√µ, √Ç√ª √≠√• √≤√Æ√´√º√™√Æ √Ø√Æ√´√≥√∑√®√≤√• √Ø√∞√®√°√ª√´√º, √≠√Æ √® √Ø√Æ√§√§√•√∞√¶√®√≤√• √Ω√™√Æ√≠√Æ√¨√®√∑√•√±√™√≥√æ √∂√•√Ø√Æ√∑√™√≥\n\
			√£√Æ√±√≥S√≠√∞√±√≤√¢√†. √Ä √•√π¬∏ √Ç√ª √≠√†√©√§¬∏√≤√• √≠√Æ√¢√ª√µ √§√∞√≥√ß√•√© √® √Ø√Æ√´√≥√∑√®√≤√• √≠√•√¨√†√´√Æ √≥√§√Æ√¢√Æ√´√º√±√≤√¢√®√ø.\n\
			\n\
			√Ç√±√• √Ω√≤√® √¨√•√±√≤√† √¨√Æ√¶√≠√Æ √≠√†√©√≤√®, √®√±√Ø√Æ√´√º√ß√≥√ø √™√Æ√¨√†√≠√§√≥ /gps. √Ñ√Æ√°√∞√†√≤√º√±√ø √§√Æ\n\
			√≠√≥√¶√≠√Æ√£√Æ √Æ√°√∫√•√™√≤√† √Ç√†√¨ √Ø√Æ√¨√Æ√¶√•√≤ √†√¢√≤√Æ√°√≥√±√≠√ª√© √≤√∞√†√≠√±√Ø√Æ√∞√≤. √è√∞√ø√¨√Æ √±\n\
			√†√¢√≤√Æ√±√≤√†√≠√∂√®√® √µ√Æ√§√®√≤ √†√¢√≤√Æ√°√≥√± √§√Æ √∏√†√µ√≤√ª, √† √§√Æ √±√™√´√†S√≠ √Ç√†√± √¨√Æ√¶√•√≤ √Ø√Æ√§√°√∞√Æ√±√®√≤√º\n\
			√£√Æ√∞√Æ√§√±√™√Æ√© √¨√†√∞√∏√∞√≥√≤.\n\
			\n\
			√è√Æ√±√´√• √≤√Æ√£√Æ, √™√†√™ √Ç√ª √ß√†√∞√†√°√Æ√≤√†√•√≤√• √§√•√≠√º√£√®, √Æ√≤√Ø√∞√†√¢√´√ø√©√≤√•√±√º √¢ √†√¢√≤√Æ√∏√™√Æ√´√≥ √®\n\
			√±S√≠√©√≤√• √Ω√™√ß√†√¨√•√≠ √≠√† √Ø√∞√†√¢√†. √é√≠√® √Ø√Æ√ß√¢√Æ√´√ø√≤ √™√≥√Ø√®√≤√º √®√´√® √†√∞√•√≠√§√Æ√¢√†√≤√º\n\
			√†√¢√≤√Æ√¨√Æ√°√®√´√º, √≥√±√≤√∞√Æ√®√≤√º√±√ø √≠√† √°√Æ√´√•√• √¢√ª√±√Æ√™√Æ√Æ√Ø√´√†√∑√®√¢√†√•√¨√≥√æ √® √®√≠√≤√•√∞√•√±√≠√≥√æ\n\
			√∞√†√°√Æ√≤√≥. √ëS√≠√∑√† √≠√† √Ø√∞√†√¢√† √±√≤√Æ√®√≤ 500$, √Ø√•√∞√•√§ La carretera√™√Æ√© √¢ √†√¢√≤√Æ√∏√™√Æ√´√≥\n\
			√≥√°√•√§√®√≤√•√±√º, √∑√≤√Æ √®√¨√•√•√≤√• √≤√†√™√≥√æ √±√≥√¨√¨√≥.";

			SPD(playerid, 7904, DIALOG_STYLE_MSGBOX, "{FFCD00}5. √è√•√∞√¢√ª√• √∏√†√£√®", help_page_str, "<< √å√•√≠√æ", "S√≠√´√•√• >>");
		}
		case 5: {
			new help_page_str[] = 
			"√Ç√Æ √¢√∞√•√¨√ø √®√£√∞√ª √¢√†√¨ √Ø√Æ√±√≤√Æ√ø√≠√≠√Æ √Ø√∞√®√§√•√≤√±√ø √¢√ß√†√®√¨√Æ√§√•√©√±√≤√¢√Æ√¢√†√≤√º √± √´√æ√§√º√¨√®. √ë√≥√π√•√±√≤√¢√≥√•√≤ 2\n\
			√¢√®S√≠ √∑√†√≤√Æ√¢:\n\
			\n\
			\t1. IC (In Character) - √Æ√°√π√•√≠√®√• √¢√≠√≥√≤√∞√® √®√£√∞√ª √® √≤√Æ√´√º√™√Æ √§√´√ø √¢√≠√≥√≤√∞√•√≠√≠√®√µ √®√£√∞√Æ√¢√ª√µ\n\
			\t√±√®√≤√≥√†√∂√®√©. √ó√†√≤ √¢√ª√ß√ª√¢√†√•√≤√±√ø √™√´√†√¢√®√∏√•√© F6.\n\
			\t2. OOC (Out Of Character) - √¢√±¬∏, √∑√≤√Æ √™√†√±√†√•√≤√±√ø √∞√•√†√´√º√≠√Æ√£√Æ, √≠√• √®√£√∞√Æ√¢√Æ√£√Æ √¨√®√∞√†.\n\
			\t√ç√†√¶√¨√®√≤√• F6, S√≠√´√•√• √¢√¢√•√§√®√≤√• √™√Æ√¨√†√≠√§√≥ /n √® √±√¢√Æ¬∏ √±√Æ√Æ√°√π√•√≠√®√•. √é√≠√Æ √¢√ª√§√•√´√®√≤√±√ø √¢\n\
			\t√§√¢√Æ√©√≠√ª√• √±√™√Æ√°√™√®.\n\
			\n\
			√è√Æ√¨√®√¨√Æ √Ω√≤√Æ√£√Æ, √±√≥√π√•√±√≤√¢√≥√æ√≤ √¨√≠√Æ√£√Æ √§√∞√≥√£√®√µ √±√Ø√Æ√±√Æ√°√Æ√¢ √Æ√°√π√•√≠√®√ø. √Ç√ª √¨√Æ√¶√•√≤√• √ß√¢√Æ√≠√®√≤√º √Ø√Æ\n\
			√≤√•√´√•√¥√Æ√≠√≥ √®√´√® √Æ√≤√Ø√∞√†√¢√´√ø√≤√º SMS √±√Æ√Æ√°√π√•√≠√®√ø. √Ç√±√≤√≥√Ø√®√¢ √¢ √Æ√∞√£√†√≠√®√ß√†√∂√®√æ, √Ø√Æ√ø√¢√®√≤√±√ø\n\
			√¢√Æ√ß√¨√Æ√¶√≠√Æ√±√≤√º √±√¢√ø√ß√ª√¢√†√≤√º√±√ø √± √±√Æ√≤√∞√≥√§√≠√®√™√†√¨√® √Ø√Æ √∞√†√∂√®√®, √† √≤√†√™√¶√• √¨√†√±√±√† √§√∞√≥√£√®√µ\n\
			√®√≠√≤√•√∞√•√±√≠√ª√µ √¥√≥√≠√™√∂√®√©.\n\
			\n\
			√à√≠√¥√Æ√∞√¨√†√∂√®√æ √Æ √™√Æ√¨√†√≠S√≠√µ √Æ√°√π√•√≠√®√ø √¨√Æ√¶√•√≤√• √≥√ß√≠√†√≤√º √¢ √±√Æ√Æ√≤√¢√•√≤√±√≤√¢√≥√æ√π√•√¨ √∞√†√ß√§√•√´√• √¨√•√≠√æ:\n\
			{66ccff}/menu > √ë√Ø√®√±√Æ√™ √™√Æ√¨√†√≠√§.";

			SPD(playerid, 7905, DIALOG_STYLE_MSGBOX, "{FFCD00}6. √é√°√π√•√≠√®√•", help_page_str, "<< √å√•√≠√æ", "S√≠√´√•√• >>");
		}
		case 6: {
			new help_page_str[] = 
			"√í√∞√†√≠√±√Ø√Æ√∞√≤√≠√†√ø √±√®√±√≤√•√¨√† - √Æ√§√≠√† √®√ß √¢√†√¶√≠√•√©√∏√®√µ √¢ √∏√≤√†√≤√•. √ë √•¬∏ √Ø√Æ√¨√Æ√π√º√æ √¢√Æ√ß√¨√Æ√¶√≠√†\n\
			√±√≤√†√°√®√´√º√≠√†√ø √∞√†√°√Æ√≤√† √°√Æ√´√º√∏√®√≠√±√≤√¢√† √Ø√∞√•√§√Ø√∞√®√ø√≤√®√© √® √Æ√∞√£√†√≠√®√ß√†√∂√®√©.\n\
			\n\
			√é√±√≠√Æ√¢√≠√Æ√© √¢√®√§ √≤√∞√†√≠√±√Ø√Æ√∞√≤√† - √Ω√≤√Æ √†√¢√≤√Æ√°√≥√±. √å√†√∞√∏√∞√≥√≤√ª √Ø√∞√Æ√´√Æ√¶√•√≠√ª √Ø√Æ √¢√±√•√¨√≥\n\
			√£√Æ√±√≥S√≠√∞√±√≤√¢√≥ √® √±√¢√ø√ß√ª√¢√†√æ√≤ √¢√±√• √≠√†√±√•√´¬∏√≠√≠√ª√• √Ø√≥√≠√™√≤√ª √® √Ø√∞√•√§√Ø√∞√®√ø√≤√®√ø.\n\
			√í√†√™√±√® - √≠√†√®√°√Æ√´√•√• √≥√§√Æ√°√≠√ª√© √¢√®√§ √≤√∞√†√≠√±√Ø√Æ√∞√≤√†. √Ç√ª √±√¨√Æ√¶√•√≤√• √§√Æ√°√∞√†√≤√º√±√ø √§√Æ √´√æ√°√Æ√£√Æ √¨√•√±√≤√†,\n\
			√Æ√§√≠√†√™√Æ √≤√†√™√†√ø La carretera√™√† √°√≥√§√•√≤ √±√≤√Æ√®√≤√º √ß√≠√†√∑√®√≤√•√´√º√≠√Æ √§√Æ√∞√Æ√¶√•, √∑√•√¨ √≠√† √†√¢√≤√Æ√°√≥√±√•.\n\
			\n\
			√É√Æ√±√≥S√≠√∞√±√≤√¢√•√≠√≠√Æ√© √≤√∞√†√≠√±√Ø√Æ√∞√≤√≠√Æ√© √™√Æ√¨√Ø√†√≠√®√® √¢√±√•√£S√≠ √≤√∞√•√°√≥√æ√≤√±√ø √≠√Æ√¢√ª√• √∞√†√°√Æ√≤√≠√®√™√®. √é\n\
			√¢√†√™√†√≠√±√®√ø√µ √® √≤√∞√•√°√Æ√¢√†√≠√®√ø√µ √¨√Æ√¶√≠√Æ √≥√ß√≠√†√≤√º √¢ √°√´√®√¶√†√©√∏√•√© √¨√Ω√∞√®√® (/gps).";

			SPD(playerid, 7906, DIALOG_STYLE_MSGBOX, "{FFCD00}7. √í√∞√†√≠√±√Ø√Æ√∞√≤", help_page_str, "<< √å√•√≠√æ", "S√≠√´√•√• >>");
		}
		case 7: {
			new help_page_str[] = 
			"√Ç√±√ø √®√£√∞√Æ√¢√†√ø √¶√®√ß√≠√º √Ø√∞√Æ√µ√Æ√§√®√≤ √Ø√Æ√§ √™√Æ√≠√≤√∞√Æ√´√•√¨ √Ø√∞√†√¢√®√≤√•√´√º√±√≤√¢√† -\n\
			√Æ√±√≠√Æ√¢√≠√Æ√© √Æ√∞√£√†√≠√®√ß√†√∂√®√® √¢ √£√Æ√±√≥S√≠√∞√±√≤√¢√•. √Ç √•¬∏ √±√Æ√±√≤√†√¢ √¢√µ√Æ√§√ø√≤ √¨√Ω√∞√®√® √≤√∞¬∏√µ\n\
			√£√Æ√∞√Æ√§√Æ√¢ √® Administraci√≥n residente. √ê√†√ß √¢ √¨√•√±√ø√∂ √Ø√∞√Æ√µ√Æ√§√ø√≤\n\
			√¢√ª√°√Æ√∞√ª, √£√§√• √™√†√¶√§√ª√© √®√¨√•√•√≤ √Ø√∞√†√¢√Æ √£√Æ√´√Æ√±√†. √Ä √Ø√•√∞√•√§ √Ω√≤√®√¨ √Ø√∞√Æ√¢√Æ√§√®√≤√±√ø √≠√•\n\
			√¨√•√≠√•√• √®√≠√≤√•√∞√•√±√≠√†√ø √®√ß√°√®√∞√†√≤√•√´√º√≠√†√ø √™√†√¨√Ø√†√≠√®√ø, √£√§√• √™√†√≠√§√®S√≠√≤√ª √≠√† √Ø√Æ√±√≤\n\
			√è√∞√•√ß√®√§√•√≠√≤√† √≥√±√≤√∞√†√®√¢√†√æ√≤ √§√•√°√†√≤√ª, √™√Æ√≠√∂√•√∞√≤√ª √® √¨√®√≤√®√≠√£√®, √ß√†√¢√Æ¬∏√¢√ª√¢√†√ø\n\
			√±√¢√Æ√®√µ √≠√Æ√¢√ª√µ √®√ß√°√®√∞√†√≤√•√´√•√©...\n\
			\n\
			√É√Æ√±√≥S√≠√∞√±√≤√¢√•√≠√≠√≥√æ √±√®√±√≤√•√¨√≥ √® √•¬∏ √ß√≠√†√∑√•√≠√®√• √≠√• √Æ√Ø√®√∏√•√∏√º √≠√•√±√™√Æ√´√º√™√®√¨√®\n\
			√Ø√∞√•√§√´√Æ√¶√•√≠√®√ø√¨√®. √è√Æ√´√®√≤√®√∑√•√±√™√†√ø √¶√®√ß√≠√º √≠√•√Æ√°√ª√∑√†√©√≠√Æ √≠√†√±√ª√π√•√≠√≠√†√ø, √® √Ç\n\
			√±√†√¨√® √≥√°√•√§√®√≤√•√±√º √¢ √Ω√≤√Æ√¨ √± √Ø√•√∞√¢√ª√µ √§√≠√•√© √¶√®√ß√≠√® √≥ √≠√†√±";

			SPD(playerid, 7907, DIALOG_STYLE_MSGBOX, "{FFCD00}8. √É√Æ√±√≥S√≠√∞√±√≤√¢√•√≠√≠√†√ø √±√®√±√≤√•√¨√†", help_page_str, "<< √å√•√≠√æ", "S√≠√´√•√• >>");
		}
		case 8: {
			new help_page_str[] = 
			"√è√Æ √¢√±√•√¨√≥ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥ √∞√†√±√Ø√Æ√´√Æ√¶√•√≠√ª √¶√®√´√ª√• √§√Æ√¨√†, √™√Æ√≤√Æ√∞√ª√• √¨√Æ√¶√≠√Æ √™√≥√Ø√®√≤√º.\n\
			√ä√†√¶√§√ª√© √§√Æ√¨ √®√¨√•√•√≤ √±√¢√Æ√æ √±√≤√Æ√®√¨√Æ√±√≤√º, √™√Æ√≤√Æ√∞√≥√æ √Æ√Ø√∞√•√§√•√´√ø√æ√≤ √¨√≠√Æ√¶√•√±√≤√¢√Æ\n\
			√¥√†√™√≤√Æ√∞√Æ√¢. √å√Æ√¶√≠√Æ √™√≥√Ø√®√≤√º √±√†√∞√†√© √ß√† √≠√•√°√Æ√´√º√∏√®√• √§√•√≠√º√£√®, √®√´√® √Æ√≤S√≠√≤√º\n\
			√¨√®√´√´√®√Æ√≠√ª √ß√† √∞√Æ√±√™√Æ√∏√≠√ª√© √Æ√±√Æ√°√≠√ø√™ √¢ √Ω√´√®√≤√≠√Æ√¨ √∞√†√©√Æ√≠√•.\n\
			\n\
			√Ö√±√´√® √≥ √Ç√†√± √•√±√≤√º √§√Æ√¨, √≤√Æ √¢√ª √±√¨√Æ√¶√•√≤√• √Ø√∞√®√Æ√°√∞√•√±√≤√® √¨√†√∏√®√≠√≥, √®√´√® √™√≥√Ø√®√≤√º\n\
			√§√Æ√Ø√Æ√´√≠√®√≤√•√´√º√≠√ª√• √≥√´√≥√∑√∏√•√≠√®√ø, √≤√†√™√®√• √™√†√™ √∏√™√†√¥ √§√´√ø √µ√∞√†√≠√•√≠√®√ø √¢√•√π√•√© √®√´√®\n\
			√†√¢√≤√Æ√¨√†√≤√®√∑√•√±√™√®√• √§√¢√•√∞√®. √à √Ω√≤√Æ √≤√Æ√´√º√™√Æ √≠√•√™√Æ√≤√Æ√∞√ª√• √¢√Æ√ß√¨√Æ√¶√≠√Æ√±√≤√® √¶√®√´√º√ø.\n\
			\n\
			√Ç √ß√†√¢√®√±√®√¨√Æ√±√≤√® √Æ√≤ √Ø√∞√•√±√≤√®√¶√≠√Æ√±√≤√® √§√Æ√¨√†, √± √Ç√†√¨ √°√≥√§√•√≤ √¢√ß√®√¨√†√≤√º√±√ø √•√¶√•√§√≠√•√¢√≠√†√ø\n\
			√™√¢√†√∞√≤√Ø√´√†√≤√†. √Ö√±√´√® √§√Æ√´√£√Æ√• √¢√∞√•√¨√ø √≠√† √±√∑√•√≤√≥ √°√≥√§√•√≤ √±√Æ√µ√∞√†√≠√ø√≤√º√±√ø √Æ√≤√∞√®√∂√†√≤√•√´√º√≠√ª√©\n\
			√°√†√´√†√≠√±, √≤√Æ √Ç√†√∏ √§√Æ√¨ √°√≥√§√•√≤ √Ø√∞√ÆS√≠√≠ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥ √ß√† √≠√•√≥√Ø√´√†√≤√≥.";

			SPD(playerid, 7908, DIALOG_STYLE_MSGBOX, "{FFCD00}9. √Ü√®√´√º¬∏", help_page_str, "<< √å√•√≠√æ", "S√≠√´√•√• >>");
		}
		case 9: {
			new help_page_str[] = 
			"√Ç√ª √¨√Æ√¶√•√≤√• √Æ√≤√™√∞√ª√≤√º √±√Æ√°√±√≤√¢√•√≠√≠√ª√© √°√®√ß√≠√•√±, √® √ß√†√∞√†√°√†√≤√ª√¢√†√≤√º √≠√•√Ø√´√Æ√µ√®√•\n\
			√§√•√≠√º√£√®. √ù√≤√Æ √¨√Æ√¶√•√≤ √°√ª√≤√º √≠√•√°√Æ√´√º√∏√†√ø √Ø√•√™√†√∞√≠√ø, √¨√†√£√†√ß√®√≠ √Æ√§√•√¶√§√ª √®√´√®\n\
			√∞√†√ß√¢√´√•√™√†√≤√•√´√º√≠√ª√© √∂√•√≠√≤√∞, √±√≤√Æ√´√Æ√¢√†√ø, √Ø√†√∞√®√™√¨√†√µ√•√∞√±√™√†√ø, √´√®√°√Æ √Æ√°√ª√∑√≠√†√ø\n\
			√Ø√∞√Æ√§√≥√™√≤√Æ√¢√†√ø √´√†√¢√™√†. √à√´√® √¢√ª √ß√†√µ√Æ√≤√®√≤√• √±√≤√†√≤√º √±√Æ√¢√´√†√§√•√´√º√∂√•√¨ √™√∞√≥√Ø√≠√Æ√© √±√•√≤√®\n\
			√±√≥√Ø√•√∞√¨√†√∞√™√•√≤√Æ√¢, √∞√•√±√≤√Æ√∞√†√≠√Æ√¢ √®√´√® √≤√•√†√≤√∞√Æ√¢. √Ç √≠√†√∏√•√© √±√≤√∞√†√≠√• √±√≥√π√•√±√≤√¢√≥√•√≤\n\
			√Æ√£√∞√Æ√¨√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √∞√†√ß√≠√Æ√Æ√°√∞√†√ß√≠√ª√µ √Ø√∞√•√§√Ø√∞√®√ø√≤√®√©.\n\
			\n\
			√à√¨√•√ø √°√®√ß√≠√•√±, √Ø√•√∞√•√§ √Ç√†√¨√® √Æ√≤√™√∞√Æ√æ√≤√±√ø √°√Æ√´√º√∏√®√• √¢√Æ√ß√¨√Æ√¶√≠√Æ√±√≤√® √§√´√ø\n\
			√Ø√∞√®√¢√´√•√∑√•√≠√®√ø √≠√Æ√¢√ª√µ √™√´√®√•√≠√≤√Æ√¢, √∑√≤√Æ √°√≥√§√•√≤ √Ø√Æ√±√≤√Æ√ø√≠√≠√Æ √Ø√Æ√¢√ª√∏√†√≤√º √Ç√†√∏√®\n\
			√§√Æ√µ√Æ√§√ª. √Ç√ª √±√¨√Æ√¶√•√≤√• √∞√•√£√≥√´√®√∞√Æ√¢√†√≤√º √∂√•√≠√ª, √≥√´√≥√∑√∏√†√≤√º √∞√†√ß√´√®√∑√≠√ª√•\n\
			√µ√†√∞√†√™√≤√•√∞√®√±√≤√®√™√® √±√¢√Æ√•√£√Æ √Ø√∞√•√§√Ø√∞√®√ø√≤√®√ø, √Æ√§√≠√Æ√¢√∞√•√¨√•√≠√≠√Æ √Ø√∞√Æ√¢√Æ√§√ø √°√Æ√∞√º√°√≥ √±\n\
			√™√Æ√≠√™√≥√∞√•√≠√≤√†√¨√®.\n\
			\n\
			√Ä√á√ë (√†√¢√≤√Æ√ß√†√Ø√∞√†√¢√Æ√∑√≠√ª√• √±√≤√†√≠√∂√®√®) - √Æ√±√Æ√°√ª√© √≤√®√Ø √°√®√ß√≠√•√±√†, √§√Æ√µ√Æ√§√ª √Æ√≤\n\
			√™√Æ√≤√Æ√∞√Æ√£√Æ √ß√≠√†√∑√®√≤√•√´√º√≠√Æ √¢√ª√∏√•, √∑√•√¨ √Æ√≤ √Æ√°√ª√∑√≠√ª√µ √Ø√∞√•√§√Ø√∞√®√ø√≤√®√©. √Ñ√´√ø\n\
			√≠√Æ√∞√¨√†√´√º√≠√Æ√© √∞√†√°√Æ√≤√ª √Ä√á√ë √≠√≥√¶√≠√Æ √Ø√Æ√±√≤√Æ√ø√≠√≠√Æ √ß√†√™√´√æ√∑√†√≤√º √™√Æ√≠√≤√∞√†√™√≤√ª √±√Æ\n\
			√±√´√≥√¶√°√Æ√© √§√Æ√±√≤√†√¢√™√® √≤√Æ√Ø√´√®√¢√†.";

			SPD(playerid, 7909, DIALOG_STYLE_MSGBOX, "{FFCD00}10. √Å√®√ß√≠√•√± √® √Ä√á√ë", help_page_str, "<< √å√•√≠√æ", "S√≠√´√•√• >>");
		}
		case 10: {
			new help_page_str[] = 
			"√ä√†√¶√§√ª√© √®√£√∞√Æ√™ √Ø√Æ√´√≥√∑√†√•√≤ √±√¢√Æ√© √±√∑¬∏√≤ √¢ √°√†√≠√™√•. √ç√† √≠√•√£√Æ √Ø√•√∞√•√∑√®√±√´√ø√•√≤√±√ø\n\
			√ß√†√∞√Ø√´√†√≤√† √® √Ø√∞√Æ√∑√®√• √§√Æ√µ√Æ√§√ª. √ù√≤√Æ√≤ √±√∑¬∏√≤ √≠√†√ß√ª√¢√†√•√≤√±√ø √Æ√±√≠√Æ√¢√≠√ª√¨, √® √§√Æ√±√≤√≥√Ø√•√≠ √¢\n\
			√´√æ√°√Æ√¨ √°√†√≠√™√Æ√¨√†√≤√•.\n\
			\n\
			√è√Æ√¨√®√¨√Æ √Ω√≤√Æ√£√Æ, √Ç√ª √¨√Æ√¶√•√≤√• √¢√Æ√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º√±√ø √≥√±√´√≥√£√†√¨√® √Ø√∞√Æ√¥√•√±√±√®√Æ√≠√†√´√º√≠√ª√µ\n\
			√°√†√≠√™√Æ√¢, √≠√†√©√≤√® √™√Æ√≤√Æ√∞√ª√• √Ø√Æ√¨√Æ√¶√•√≤ GPS. √í√†√¨ √¨√Æ√¶√≠√Æ √Æ√≤√™√∞√ª√≤√º √§√Æ 10\n\
			√§√Æ√Ø√Æ√´√≠√®√≤√•√´√º√≠√ª√µ √±√∑√•√≤√Æ√¢. √ä√†√¶√§√ª√© √®√ß √≠√®√µ √®√¨√•√•√≤ √±√¢√Æ√© √≠√Æ√¨√•√∞, √™√Æ√≤√Æ√∞√ª√©\n\
			√¢√ªS√≠¬∏√≤√±√ø √°√†√≠√™√Æ√¨ √Ø√∞√® √±√Æ√ßS√≠√≠√®√® √±√∑¬∏√≤√†. √á√≠√†√ø √•√£√Æ, √´√æ√°√Æ√© √®√£√∞√Æ√™ √¨√Æ√¶√•√≤\n\
			√Ø√•√∞√•√∑√®√±√´√®√≤√º √¢√†√¨ √§√•√≠√º√£√®, S√≠√¶√• √•√±√´√® √¢√ª √Æ√¥√¥√´√†√©√≠. √ç√†√Ø√∞√®√¨√•√∞, √¨√Æ√¶√≠√Æ\n\
			√±√Æ√ßS√≠√≤√º √±√∑¬∏√≤ √± √≠√†√ß√¢√†√≠√®√•√¨ \"√Å√´√†√£√Æ√≤√¢√Æ√∞√®√≤√•√´√º√≠√Æ√±√≤√º\", √≠√†√Ø√®√±√†√≤√º √Æ√° √Æ√≤√™√∞√ª√≤√®√®\n\
			√°√´√†√£√Æ√≤√¢√Æ√∞√®√≤√•√´√º√≠√Æ√© √Æ√∞√£√†√≠√®√ß√†√∂√®√® √∑√•√∞√•√ß √ë√å√à, √±√Æ√Æ√°√π√®√≤√º √≠√Æ√¨√•√∞ √±√∑¬∏√≤√†, √®\n\
			√´√æ√°√Æ√© √±√¨√Æ√¶√•√≤ √Ø√•√∞√•√∑√®√±√´√®√≤√º √≠√† √≠√•√£√Æ √§√•√≠√º√£√® √¢ √Æ√≤√§√•√´√•√≠√®√® √°√†√≠√™√† √®√´√® √∑√•√∞√•√ß\n\
			√°√†√≠√™√Æ√¨√†√≤.\n\
			\n\
			√Ñ√Æ√Ø√Æ√´√≠√®√≤√•√´√º√≠√ª√• √±√∑√•√≤√† √¨√Æ√¶√≠√Æ √≠√†√±√≤√∞√†√®√¢√†√≤√º, √≥√±√≤√†√≠√†√¢√´√®√¢√†√≤√º √ß√†√π√®√≤√≥\n\
			PIN-√™√Æ√§√Æ√¨, √®√ß√¨√•√≠√ø√≤√º √≠√†√ß√¢√†√≠√®√ø √† √≤√†√™√¶√• √Ø√∞√Æ√±√¨√†√≤√∞√®√¢√†√≤√º √Ø√Æ√§√∞√Æ√°√≠√≥√æ\n\
			√®√±√≤√Æ√∞√®√æ √Æ√Ø√•√∞√†√∂√®√©.";

			SPD(playerid, 7910, DIALOG_STYLE_MSGBOX, "{FFCD00}11. √Å√†√≠√™√®", help_page_str, "<< √å√•√≠√æ", "S√≠√´√•√• >>");
		}
		case 11: {
			new help_page_str[] = 
			"√Ç √≠√†√∏√•√© √±√≤√∞√†√≠√• √∞√†√°√Æ√≤√†√•√≤ √°√Æ√´√º√∏√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √Æ√∞√£√†√≠√®√ß√†√∂√®√©. √é√≠√® √¨√Æ√£√≥√≤\n\
			√°√ª√≤√º √™√†√™ √Æ√¥√®√∂√®√†√´√º√≠√ª√¨√® (√Ø√∞√†√¢√®√≤√•√´√º√±√≤√¢√Æ, √å√Ç√Ñ, √¨√®√≠. √é√°√Æ√∞√Æ√≠√ª, √¨√®√≠.\n\
			√á√§√∞√†√¢√Æ√Æ√µ√∞√†√≠√•√≠√®√ø, √í√Ç √® √∞√†√§√®√Æ), √≤√†√™ √® √≠√•√Æ√¥√®√∂√®√†√´√º√≠√ª√¨√® (√°√†√≠√§√ª √® √¨√†√¥√®√®).\n\
			\n\
			√è√∞√® √§√Æ√±√≤√®√¶√•√≠√®√® √Æ√Ø√∞√•√§√•√´¬∏√≠√≠√Æ√£√Æ √≥√∞√Æ√¢√≠√ø, √Ç√ª √¨√Æ√¶√•√≤√• √¢√±√≤√≥√Ø√®√≤√º √¢ √´√æ√°√≥√æ √®√ß\n\
			√Æ√∞√£√†√≠√®√ß√†√∂√®√©. √ê√≥√™√Æ√¢√Æ√§√±√≤√¢√Æ √≠√•√™√Æ√≤√Æ√∞√ª√µ √¨√Æ√¶√•√≤ √¢√ª√§√¢√®√£√†√≤√º √® √§√Æ√Ø√Æ√´√≠√®√≤√•√´√º√≠√ª√•\n\
			√≤√∞√•√°√Æ√¢√†√≠√®√ø √§√´√ø √¢√±√≤√≥√Ø√´√•√≠√®√ø. √ç√†√Ø√∞√®√¨√•√∞, √•√±√´√® Quieres √Ø√Æ√Ø√†√±√≤√º √¢ √°√†√≠√§√≥,\n\
			√≤√Æ √Ç√†√¨ √Ø√∞√®√§¬∏√≤√±√ø √Ø√∞√Æ√§√•√¨√Æ√≠√±√≤√∞√®√∞√Æ√¢√†√≤√º √±√¢√Æ¬∏ √≥√¨√•√≠√®√• √¢√´√†√§√•√≤√º √Æ√∞√≥√¶√®√•√¨. √Ä\n\
			√•√±√´√® √Ç√ª √¢√®√§√®√≤√• √±√•√°√ø √¢ √∞√Æ√´√® √∞√•S√≠√™√≤√Æ√∞√† √Æ√°√∫√ø√¢√´√•√≠√®√©, √≤√Æ √≠√≥√¶√≠√Æ √™√∞√†√±√®√¢√Æ √®\n\
			√£√∞√†√¨√Æ√≤√≠√Æ √Ø√®√±√†√≤√º. √é √§√Æ√Ø√Æ√´√≠√®√≤√•√´√º√≠√ª√µ √≤√∞√•√°√Æ√¢√†√≠√®√ø√µ √±√Æ√Æ√°√π√®√≤ √∞√≥√™√Æ√¢√Æ√§√±√≤√¢√Æ\n\
			√Æ√∞√£√†√≠√®√ß√†√∂√®√® √¢√Æ √¢√∞√•√¨√ø √≠√†√°√Æ√∞√† √±√Æ√≤√∞√≥√§√≠√®√™√Æ√¢.\n\
			\n\
			√è√Æ√±√´√• √¢√±√≤√≥√Ø√´√•√≠√®√ø, √Ç√†√¨ √°√≥√§√•√≤ √§√Æ√±√≤√≥√Ø√≠√Æ √Ø√∞√Æ√§√¢√®√¶√•√≠√®√• √Ø√Æ √™√†√∞√º√•√∞√≠√Æ√©\n\
			√´√•√±√≤√≠√®√∂√•, √Ø√Æ√±√≤√•√Ø√•√≠√≠√Æ √Æ√≤√™√∞√Æ√æ√≤√±√ø √≠√Æ√¢√ª√• √¢√Æ√ß√¨√Æ√¶√≠√Æ√±√≤√®. √ë √™√†√¶√§√ª√¨ √Ø√Æ√¢√ª√∏√•√≠√®√•√¨\n\
			√°√≥√§√•√≤ √≥√¢√•√´√®√∑√®√¢√†√≤√º√±√ø √Ç√†√∏√† √ß√†√∞√Ø√´√†√≤√† √® √±√≤√†√≤√≥√± √¢ √Æ√°√π√•√±√≤√¢√•. √Ç√ª √≠√†√©√§¬∏√≤√•\n\
			√≠√Æ√¢√ª√µ √§√∞√≥√ß√•√©, √† √±√Æ √¢√∞√•√¨√•√≠√•√¨ √±√¨√Æ√¶√•√≤√• √ß√†√≠√ø√≤√º √Æ√§√≠√≥ √®√ß √∞√≥√™√Æ√¢√Æ√§√ø√π√®√µ\n\
			√§√Æ√´√¶√≠√Æ√±√≤√•√©. √Ü√®√ß√≠√º √¢ √Æ√∞√£√†√≠√®√ß√†√∂√®√® √≠√•√Æ√°√ª√∑√†√©√≠√Æ √®√≠√≤√•√∞√•√±√≠√†√ø √® √∞√†√ß√≠√Æ√Æ√°√∞√†√ß√≠√†√ø";

			SPD(playerid, 7911, DIALOG_STYLE_MSGBOX, "{FFCD00}12. √é√∞√£√†√≠√®√ß√†√∂√®√®", help_page_str, "<< √å√•√≠√æ", "S√≠√´√•√• >>");
		}
		case 12: {
			new help_page_str[] = 
			"√Ç √¨√Ω√∞√®√® √¢√†√∏√•√£√Æ √£√Æ√∞√ÆS√≠ √∞√†√°√Æ√≤√†√•√≤ √Æ√≤√§√•√´ √ß√†√≠√ø√≤√Æ√±√≤√®, √£√§√• √Ç√ª √¨√Æ√¶√•√≤√•\n\
			√≥√±√≤√∞√Æ√®√≤√º√±√ø √≠√† √´√æ√°√≥√æ √∞√†√°√Æ√≤√≥. √ë√´√•√§√≥√•√≤ √Æ√°√∞√†√≤√®√≤√º √¢√≠√®√¨√†√≠√®√•, √∑√≤√Æ √≠√•√™√Æ√≤√Æ√∞√ª√•\n\
			√∞√†√°√Æ√≤√ª √§√Æ√±√≤√≥√Ø√≠√ª √Ø√∞√® √§√Æ√±√≤√®√¶√•√≠√®√® √Æ√Ø√∞√•√§√•√´¬∏√≠√≠√Æ√£√Æ √≥√∞√Æ√¢√≠√ø. √Ç√ª √≠√• √¨√Æ√¶√•√≤√•\n\
			√Æ√§√≠√Æ√¢√∞√•√¨√•√≠√≠√Æ √°√ª√≤√º √Æ√¥√Æ√∞√¨√´√•√≠√≠√ª√¨ √≠√† √∞√†√°√Æ√≤√≥ √¢ √¨√Ω√∞√®√® √® √±√Æ√±√≤√Æ√ø√≤√º √¢\n\
			√Æ√∞√£√†√≠√®√ß√†√∂√®√®.\n\
			\n\
			√è√Æ√¨√®√¨√Æ √Æ√±√≠√Æ√¢√≠√ª√µ √∞√†√°√Æ√≤ √±√≥√π√•√±√≤√¢√≥√æ√≤ √® √§√Æ√Ø√Æ√´√≠√®√≤√•√´√º√≠√ª√•. √í√†√™√®√• √∞√†√°√Æ√≤√ª\n\
			√¨√Æ√¶√≠√Æ √±√Æ√¢√¨√•√π√†√≤√º √± √Æ√±√≠√Æ√¢√≠√ª√¨√® √® √ß√†√∞√†√°√†√≤√ª√¢√†√≤√º √°√Æ√´√º√∏√• √§√•√≠√•√£. Usar√≤√•\n\
			√™√Æ√¨√†√≠√§√≥ /gps √§√´√ø √≤√Æ√£√Æ, √∑√≤√Æ√°√ª √≠√†√©√≤√® √¨√•√±√≤√† √∞√†√±√Ø√Æ√´√Æ√¶√•√≠√®√ø √∞√†√ß√´√®√∑√≠√ª√µ\n\
			√∞√†√°√Æ√≤. √ç√† √¨√•√±√≤√• √¢√ª √Ø√Æ√´√≥√∑√®√≤√• √Ø√Æ√§√∞√Æ√°√≠√ª√• √®√≠√±√≤√∞√≥√™√∂√®√®, √™√†√™ √® √∑√≤√Æ\n\
			√±√´√•√§√≥√•√≤ √§√•√´√†√≤√º.";

			SPD(playerid, 7912, DIALOG_STYLE_MSGBOX, "{FFCD00}13. √ê√†√°√Æ√≤√ª", help_page_str, "<< √å√•√≠√æ", "S√≠√´√•√• >>");
		}
		case 13: {
			new help_page_str[] = 
			"√Ö√±√´√® √≥ √¢√†√± √Ø√Æ√ø√¢√®√´√Æ√±√º √±√¢√Æ√°√Æ√§√≠√Æ√• √¢√∞√•√¨√ø √® √¶√•√´√†√≠√®√•, √≤√Æ √∞√•√™√Æ√¨√•√≠√§√≥√•√¨ √¢√†√¨\n\
			√Ø√Æ√±√•√≤√®√≤√º √Æ√§√≠√Æ √®√ß √∞√†√ß√¢√´√•√™√†√≤√•√´√º√≠√ª√µ √¨√•√∞√Æ√Ø√∞√®√ø√≤√®√©. √ä√†√¶√§√ª√• 3 √∑√†√±√†\n\
			√Ø√∞√Æ√¢√Æ√§√ø√≤√±√ø √£√Æ√≠√™√®, √Ø√Æ√≥√∑√†√±√≤√¢√Æ√¢√†√≤√º √¢ √™√Æ√≤√Æ√∞√ª√µ √¨√Æ√¶√•√≤ √´√æ√°√Æ√© √¶√•√´√†√æ√π√®√©.\n\
			√ë√•√©√∑√†√± √™√Æ√¨√†√≠S√≠ √∞√†√ß√∞√†√°√Æ√≤√∑√®√™√Æ√¢ √Ø√∞√Æ√•√™√≤√† √£√Æ√≤√Æ√¢√®√≤ √® Otro, √≠√• √¨√•√≠√•√•\n\
			√®√≠√≤√•√∞√•√±√≠√ª√• √∞√†√ß√¢√´√•√∑√•√≠√®√ø!\n\
			\n\
			√è√Æ√¨√®√¨√Æ √±√Æ√°√ª√≤√®√© √Ø√Æ √∞√†√±√Ø√®√±√†√≠√®√æ, √†√§√¨√®√≠√®√±√≤√∞√†√∂√®√ø √±√•√∞√¢√•√∞√† √Æ√∑√•√≠√º √∑√†√±√≤√Æ\n\
			√Ø√∞√Æ√¢√Æ√§√ø√≤ √∞√†√ß√≠√Æ√£√Æ √∞√ÆS√≠ √¨√•√∞√Æ√Ø√∞√®√ø√≤√®√ø, √≥√∑√†√±√≤√¢√Æ√¢√†√≤√º √¢ √™√Æ√≤√Æ√∞√ª√µ √≠√• √≤√Æ√´√º√™√Æ\n\
			√®√≠√≤√•√∞√•√±√≠√Æ, √≠√Æ √® √¢√ª√£√Æ√§√≠√Æ - √Ø√Æ√°√•√§√®√≤√•√´√® √Ø√Æ√´√≥√∑√†√æ√≤ √∂√•√≠√≠√ª√• √Ø√ÆS√≠√∞√™√®.\n\
			\n\
			√é √Ø√∞√Æ√¢√•√§√•√≠√®√® √≤√Æ√£√Æ √®√´√® √®√≠√Æ√£√Æ √∞√†√ß√¢√´√•√™√†√≤√•√´√º√≠√Æ√£√Æ √¨√•√∞√Æ√Ø√∞√®√ø√≤√®√ø √¢√ª √≥√ß√≠√†√•√≤√•\n\
			√ß√†√∞√†√≠√•√• √®√ß √®√≠√¥√Æ√∞√¨√†√∂√®√Æ√≠√≠√ª√µ √±√Æ√Æ√°√π√•√≠√®√© √¢ √Æ√°√π√•√¨ √∑√†√≤√•.";

			SPD(playerid, 7913, DIALOG_STYLE_MSGBOX, "{FFCD00}14. √ê√†√ß√¢√´√•√∑√•√≠√®√ø", help_page_str, "<< √å√•√≠√æ", "");
		}
	}
}

stock check_icon_flats() {
	new bool: is_freed;

	for(new i = 0; i < 49; i ++) {
		if(flat_info[i][fl_owned]) continue;
		is_freed = true;
		break;
	}

	if(is_freed && !IsValidDynamicMapIcon(flat_icon)) 
		flat_icon = CreateDynamicMapIcon(286.8979,-1625.1256,33.1451,31,0);
	else if(!is_freed && IsValidDynamicMapIcon(flat_icon)) 
		DestroyDynamicMapIcon(flat_icon);
}

CB: fam_moderator_set(playerid,membername[]) {
	new status_moder,
		fam_Query[90],
		fr[90];
	cache_get_value_name_int(0, "fam_moder", status_moder);
	if(status_moder == 0) {
		mysql_format(mysql_Handle, fam_Query, sizeof(fam_Query), "UPDATE `accounts` SET `fam_moder` = 1 WHERE `Name` = '%s'", membername);
		format(fr,sizeof(fr),"[√ë√•√¨√º√ø] %s √≠√†√ß√≠√†√∑√®√´ %s √∞√≥√™√Æ√¢√Æ√§√®√≤√•√´√•√¨ √±√•√¨√º√®",GetName(playerid),membername);
		status_moder = 1;
	}
	else {
		mysql_format(mysql_Handle, fam_Query, sizeof(fam_Query), "UPDATE `accounts` SET `fam_moder` = 0 WHERE `Name` = '%s'", membername);
		format(fr,sizeof(fr),"[√ë√•√¨√º√ø] %s √±√≠√ø√´ %s √± √§√Æ√´√¶√≠√Æ√±√≤√® √∞√≥√™√Æ√¢√Æ√§√®√≤√•√´√ø",GetName(playerid),membername);
		status_moder = 0;
	}
	new member_playerid = GetPlayerID(membername);
	if(IsPlayerConnected(member_playerid)) 
		pData[member_playerid][fam_moder] = status_moder;

	send_fam_mes(pData[playerid][familyID],fr);
	return mysql_tquery(mysql_Handle, fam_Query);
}

CB: packcheck(playerid) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) {
		SCM(playerid, 0xE5B090FF, "√ì √Ç√†√± No √Ø√∞√®√Æ√°√∞√•√≤¬∏√≠√≠√ª√µ √Ø√†√™√Æ√¢");
		return SCM(playerid, 0xE5B090FF, "√Ç√ª √¨√Æ√¶√•√≤√• √™√≥√Ø√®√≤√º √Ø√†√™ √≠√† √≠√†√∏√•√¨ √±√†√©√≤√• "CCYAN"(normative-rp.ru) {e5b090}√¢ √∞√†√ß√§√•√´√• √¨√†√£√†√ß√®√≠√†");
	}
	new pa_str[255],packid;
	for(new i=0; i<rows; i++) {
		cache_get_value_name_int(i, "pack_id", packid);
		format(pa_str,sizeof(pa_str),"%s√è√†√™ ¬´%s¬ª\t%d$\n",pa_str,pack_name[packid],pack_amount[packid]);
	}
	return SPD(playerid,418,DIALOG_STYLE_TABLIST,""CMAIN"√Ç√†√∏√® √Ø√†√™√®",pa_str,"Seleccione","Siguiente");
}
CB: packs_select(playerid,l_item) {
	new rows,
		p_listitem = -1,
		packid=-1;
	cache_get_row_count(rows);
	for(new i = 0; i < rows; i ++) {
		p_listitem ++;
		if(p_listitem != l_item) continue;
		cache_get_value_name_int(i, "pack_id", packid);
		break;
	}
	if(packid==-1) 
		return SCM(playerid,COLOR_ERROR,"√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [097]");
	Hook_GivePlayerMoney(playerid,pack_amount[packid]);
	new gm[20];
	format(gm, sizeof(gm), "~g~+%d$", pack_amount[packid]);
	GameTextForPlayer(playerid, gm, 3000, 1);
	PlayerPlaySound(playerid, 4600, 0.0, 0.0, 0.0);
	new pa_query[100];
	mysql_format(mysql_Handle, pa_query, sizeof(pa_query), "DELETE FROM `packs` WHERE `account_id`=%d AND `pack_id`=%d LIMIT 1", pData[playerid][pID],packid);
	mysql_tquery(mysql_Handle, pa_query);
	return SCMF(playerid,COLOR_LIGHTBLUE,"√è√†√™ {ffaa00}¬´%s¬ª "CLIGHTBLUE"√≥√±√Ø√•√∏√≠√Æ √†√™√≤√®√¢√®√∞√Æ√¢√†√≠. √Ç√ª √Ø√Æ√´√≥√∑√®√´√® {009900}%d$",pack_name[packid], pack_amount[packid]);
}

CB: freearrest(playerid) {
	if(pData[playerid][pWanted] == 0) 
		return 1;
	new time;
	switch(pData[playerid][pWanted]) {
		case 1: time = 5;
		case 2: time = 10;
		case 3: time = 20;
		case 4: time = 30;
		case 5: time = 40;
		case 6: time = 50;
	}
	ResetPlayerWeapons(playerid);
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
	TogglePlayerControllable(playerid, 1);
	DeletePVar(playerid, "PlayerCuffed");
	pData[playerid][pJailTime] = time * 60;
	pData[playerid][pWanted] = 0;
	mysql_format(mysql_Handle, string, 164, "UPDATE `accounts` SET `pJailTime` = %d, `pWanted` = 0 WHERE `id` = %d", pData[playerid][pJailTime], pData[playerid][pID]);
	mysql_tquery(mysql_Handle, string);
	SetPlayerWantedLevel(playerid, 0);
	SpawnPlayer(playerid);
	start_animjail(playerid);
	return SCM(playerid, COLOR_LIGHTGREY, "√Ç√∞√•√¨√ø √§√Æ √¢√ª√µ√ÆS√≠ √≠√† √±√¢√Æ√°√Æ√§√≥: {cccc00}/time");
}

CB: setting_checkpassword(playerid) {
	new rows;
	cache_get_row_count(rows);
	if(rows) {
		GameTextForPlayer(playerid, "~w~password ~g~ok", 4000, 1);
		pData[playerid][p_setting][6] = true;
		save_settings(playerid);
	}
	else GameTextForPlayer(playerid, "~w~password ~r~wrong", 4000, 1);
	show_settings(playerid);
}
CB: check_mebel_count(playerid) {
	new rows;
	cache_get_row_count(rows);
	if(rows>=50) return SCM(playerid, COLOR_LIGHTGREY,"√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √≥√±√≤√†√≠√Æ√¢√®√≤√º √°√Æ√´√•√• 50 √Ø√∞√•√§√¨√•√≤√Æ√¢ √¨√•√°√•√´√® √¢ √§√Æ√¨√•");
	new nameobj[40];
	GetPVarString(playerid, "name_allobj", nameobj, sizeof(nameobj));
	DeletePVar(playerid,"name_allobj");
	new query[128];
	format(query, sizeof(query), "SELECT * FROM `buy_mebel` WHERE `obj_name` = '%s' AND `id_owner`=%d LIMIT 1",nameobj,pData[playerid][pID]);
	return mysql_tquery(mysql_Handle, query, "install_mblobj", "i", playerid);
}
CB: acc_prop_remove() {
    new family,autounikhave,accID,kkiosk_have,garageID,autoid, houseid, bizid, fuelid, foodbizid, prokbizid, 
    billbid, hotelid, fam_name[MAX_PLAYER_NAME], flat_own, flat_rent,namedelete[24];

    cache_get_value_name_int(0, "id", accID);
    cache_get_value_name_int(0, "pPhousekey", houseid);
    cache_get_value_name_int(0, "pPbiskey", bizid);
    cache_get_value_name(0, "Name", namedelete);
    cache_get_value_name_int(0, "autoHave", autoid);
    cache_get_value_name_int(0, "pPsbiskey", fuelid);
    cache_get_value_name_int(0, "familyID", family);
    cache_get_value_name_int(0, "have_garage", garageID);
    cache_get_value_name_int(0, "food_have", foodbizid);
    cache_get_value_name_int(0, "prok_have", prokbizid);
    cache_get_value_name_int(0, "p_bill_id", billbid);
    cache_get_value_name_int(0, "unikauto_Have", autounikhave);
    cache_get_value_name_int(0, "kiosk_have", kkiosk_have);
    cache_get_value_name_int(0, "pHotel", hotelid);
    cache_get_value_name_int(0, "pFlat", flat_own);
    cache_get_value_name_int(0, "p_rent_flat", flat_rent);
    cache_get_value_name(0, "pFamilyName", fam_name);

    if(family != -1) {
    	foreach(new i:Player) {
			if(pData[i][familyID] != family) continue;
			pData[i][familyID]=-1;
			SCM(i,0xFF6633FF,"√Ç√†√∏√† √±√•√¨√º√ø √°√ª√´√† √≥S√≠√´√•√≠√†");
		}
		new fam_Query[85];
		mysql_format(mysql_Handle, fam_Query, sizeof(fam_Query), "DELETE FROM `family_system` WHERE `id` = %d", family);
		mysql_tquery(mysql_Handle, fam_Query);
		mysql_format(mysql_Handle, fam_Query, sizeof(fam_Query), "UPDATE `accounts` SET `familyID`= -1 WHERE `familyID` = %d",family);
		mysql_tquery(mysql_Handle, fam_Query);
    }
	
    new ttquery[140];
	mysql_format(mysql_Handle, ttquery, sizeof(ttquery), "DELETE FROM `tuneobjects` WHERE `accountid`='%d'",
	accID);
	mysql_tquery(mysql_Handle, ttquery);

    if(kkiosk_have != 0) {
        static const fmt_str[] = "√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"500000$";
        switch(kkiosk_have) {
            case 1: {
                UpdateDynamic3DTextLabelText(kiosk_info_1, 0x4682B4FF, fmt_str);
                kiosk1_owner = -1;
                mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `kiosk1_owner` = '-1'");
            }
            case 2: {
                UpdateDynamic3DTextLabelText(kiosk_info_2, 0x4682B4FF, fmt_str);
                kiosk2_owner = -1;
                mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `kiosk2_owner` = '-1'");
            }
            case 3: {
                UpdateDynamic3DTextLabelText(kiosk_info_3, 0x4682B4FF, fmt_str);
                kiosk3_owner = -1;
                mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `kiosk3_owner` = '-1'");
            }
            case 4: {
                UpdateDynamic3DTextLabelText(kiosk_info_4, 0x4682B4FF, fmt_str);
                kiosk4_owner = -1;
                mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `kiosk4_owner` = '-1'");
            }
        }
    }
    if(autounikhave != 0) {
    	UpdateDynamic3DTextLabelText(unik3dtext, 0x33AA33FF, "√Ä√¢√≤√Æ√±√†√´√Æ√≠ √Ω√™√±√™√´√æ√ß√®√¢√≠√ª√µ √†√¢√≤√Æ\n\n{4682b4}√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"36000000$");
        unikautoOwner = -1;
        mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `unikautoOwner` = '-1'");
    }
    if(autoid != 0) {
    	UpdateDynamic3DTextLabelText(autoworkbiz3D, 0x33AA33FF, "√Ä√¢√≤√Æ√¨√Æ√°√®√´√º√≠√†√ø √¥√†√°√∞√®√™√†\n\n{4682b4}√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"13000000$\n{4682b4}/buybiz √§√´√ø √Ø√Æ√™√≥√Ø√™√®");
        autoworkOwner = -1;
        mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `autowork_ownerid` = '-1'");
    }
    if(garageID != -1) {
		garage[garageID][gbuyed]=false;
		garage[garageID][ownerID] = 0;
		garage[garageID][gdays] = 0;
		format(garage[garageID][ownerNAME],24," ");
		new gquery[100];
		mysql_format(mysql_Handle,gquery,sizeof(gquery),"UPDATE `garage` SET `days`='0',`buyed`='0', `ownerID`='0', `ownerNAME`=' ' WHERE `id`=%d",garageID);
		mysql_tquery(mysql_Handle,gquery);
    }
    if(flat_own != -1) {
		if(strcmp(flat_info[flat_own][fl_renter], "None")) {
			new renter_id = GetPlayerID(flat_info[flat_own][fl_renter]);
			if(IsPlayerConnected(renter_id)) {
				pData[renter_id][p_rent_flat] = -1;
				SCM(renter_id, COLOR_ERROR, "√ä√¢√†√∞√≤√®√∞√†, √™√Æ√≤√Æ√∞√≥√æ √Ç√ª √†√∞√•√≠√§√Æ√¢√†√´√®, √°√ª√´√† √Ø√∞√ÆS√≠√≠√†. √Ñ√Æ√£√Æ√¢√Æ√∞ √†√∞√•√≠√§√ª √∞√†√±√≤√Æ√∞√£√≠√≥√≤");
			}
			mysql_format(mysql_Handle, string, 100, "UPDATE `accounts` SET `p_rent_flat` = '-1' WHERE `Name` = '%s'", flat_info[flat_own][fl_renter]);
			mysql_tquery(mysql_Handle, string);
			strmid(flat_info[flat_own][fl_renter], "None", 0, strlen("None"), 255);
		}

		flat_info[flat_own][fl_lock] = false;
		flat_info[flat_own][fl_rentstatus] = false;
		flat_info[flat_own][fl_rentprice] = 0;
		flat_info[flat_own][fl_owned] = false;
		strmid(flat_info[flat_own][fl_owner], "None", 0, strlen("None"), 255);
		new fl_query[225];
		mysql_format(mysql_Handle, fl_query, sizeof(fl_query), "UPDATE `flats` SET `_fl_lock` = '0', `_fl_rentstatus` = '0', `_fl_rentprice` = '0', `_fl_renter` = 'None', `_fl_owned` = '0', `_fl_owner` = 'None' WHERE `_fl_id` = %d", flat_own);
		mysql_tquery(mysql_Handle, fl_query);
		check_icon_flats();

		if(IsValidDynamicPickup(flat_info[flat_own][fl_pickupID])) 
			DestroyDynamicPickup(flat_info[flat_own][fl_pickupID]);
		flat_info[flat_own][fl_pickupID] = CreateDynamicPickup(19524, 23, flat_info[flat_own][fl_enterposX], flat_info[flat_own][fl_enterposY], flat_info[flat_own][fl_enterposZ], 1);
    }
    else if(flat_rent != -1) {
    	strmid(flat_info[flat_rent][fl_renter], "None", 0, strlen("None"), 255);
		mysql_format(mysql_Handle, string, 70, "UPDATE `flats` SET `_fl_renter` = 'None' WHERE `_fl_id` = %d", flat_rent);
        mysql_tquery(mysql_Handle, string);
    }
    if(hotelid != -1) {
        format(hotel_info[hotelid][hotel_owner], 5, "None");
        hotel_info[hotelid][hotel_is_using] = false;
        hotel_info[hotelid][hotel_days] = 0;
        hotel_info[hotelid][hotel_lock] = false;
        mysql_format(mysql_Handle, string, 144, "UPDATE `hotel` SET `lock` = '0', `owner` = 'None', `days` = '0', `using` = '0' WHERE `id` = %d", hotelid);
        mysql_tquery(mysql_Handle, string);
    }
    if(houseid != -1) {
        for(new i =0;i<total_count_mebel;i++) {
        	if(mebel_info[i][mHouseID] != houseid) continue;
        	DestroyDynamicObject(mebel_info[i][mObjectID]);
        }
        new query[60];
		mysql_format(mysql_Handle, query, sizeof(query), "DELETE FROM `ownmebel` WHERE `homeOwn`=%i", houseid);
		mysql_tquery(mysql_Handle, query);

        strmid(HouseInfo[houseid][hOwner], "The State", 0, strlen("The State"), 255);
        HouseInfo[houseid][hLock] = 1;
        HouseInfo[houseid][hOwned] = 0;
        HouseInfo[houseid][hPool] = 0;
        HouseInfo[houseid][hADoor] = 0;
        HouseInfo[houseid][hSub] = 0;
        for(new d = 0; d != 5; d++) HouseInfo[houseid][hGun][d] = 0, HouseInfo[houseid][hGunAmmo][d] = 0;
        HouseInfo[houseid][hSafe] = 0;
        SaveHouse(houseid);
    }
    if(bizid != -1) {
        strmid(BizInfo[bizid][bOwner], "None", 0, strlen("None"), 255);
        BizInfo[bizid][bLock] = 0;
        BizInfo[bizid][bPribil] = 0;
        UpdateBizInfo(bizid);
        SaveBusiness(bizid);
    }
    if(fuelid != -1) {
        strmid(Filling[fuelid][fOwner],"None",0,strlen("None"),255);
        new f_str[85];
        Filling[fuelid][fLock] = false;
        mysql_format(mysql_Handle,f_str,sizeof(f_str),"UPDATE `filling` SET `fOwner` = 'None', `fLock` = '0' WHERE `fID` = %i", fuelid);
        mysql_tquery(mysql_Handle, f_str);
        update_3dtext_fill(fuelid);
        update_text_fill(fuelid);
    }
    if(foodbizid != 0) {
        switch(foodbizid) {
            case 1: {
                food1OwnerID = -1;
                mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `food_owneracc` = '-1'");
                UpdateDynamic3DTextLabelText(food_bomj3d, 0x33AA33FF, "√ã√†√∞√•√™ √± √•√§√Æ√©\n\n{4682b4}√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"350000$\n{4682b4}/buybiz √§√´√ø √Ø√Æ√™√≥√Ø√™√®");
            }
            case 2: {
                food2OwnerID = -1;
                mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `food_owneracc_2` = '-1'");
                UpdateDynamic3DTextLabelText(food_bomj3d_2, 0x33AA33FF, "√ã√†√∞√•√™ √± √•√§√Æ√©\n\n{4682b4}√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"350000$\n{4682b4}/buybiz √§√´√ø √Ø√Æ√™√≥√Ø√™√®");
            }
        }
    }
    if(prokbizid != 0) {
        static const fmt_str[] = "√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"2000000$";
        switch(prokbizid) {
            case 1: {
                UpdateDynamic3DTextLabelText(prok_info_1, 0x4682B4FF, fmt_str);
                prok1_owner = -1;
                mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `prok1_owner` = '-1'");
            }
            case 2: {
                UpdateDynamic3DTextLabelText(prok_info_2, 0x4682B4FF, fmt_str);
                prok2_owner = -1;
                mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `prok2_owner` = '-1'");
            }
            case 3: {
                UpdateDynamic3DTextLabelText(prok_info_3, 0x4682B4FF, fmt_str);
                prok3_owner = -1;
                mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `prok3_owner` = '-1'");
            }
            case 4: {
                UpdateDynamic3DTextLabelText(prok_info_4, 0x4682B4FF, fmt_str);
                prok4_owner = -1;
                mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `prok4_owner` = '-1'");
            }
            case 5: {
                UpdateDynamic3DTextLabelText(prok_info_5, 0x4682B4FF, fmt_str);
                prok5_owner = -1;
                mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `prok5_owner` = '-1'");
            }
            case 6: {
                UpdateDynamic3DTextLabelText(prok_info_6, 0x4682B4FF, fmt_str);
                prok6_owner = -1;
                mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `prok6_owner` = '-1'");
            }
            case 7: {
                UpdateDynamic3DTextLabelText(prok_info_7, 0x4682B4FF, fmt_str);
                prok7_owner = -1;
                mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `prok7_owner` = '-1'");
            }
        }
    }
    if(billbid > 0) {
        new b_num_str[100] = "√ê√•√™√´√†√¨√≠√ª√© √°√†√≠√≠√•√∞\n√Ä√∞√•√≠S√≠ - GPS 8-62",
            b_num_str_LV[100] = "√ê√•√™√´√†√¨√≠√ª√© √°√†√≠√≠√•√∞\n√Ä√∞√•√≠S√≠ - GPS 8-63",
            b_num_str_SF[100] = "√ê√•√™√´√†√¨√≠√ª√© √°√†√≠√≠√•√∞\n√Ä√∞√•√≠S√≠ - GPS 8-64";
        billboard_info[billbid][bs_rental_days] = 0;
        strmid(billboard_info[billbid][bs_renter], "None", 0, strlen("None"), 255); 
        new str_r[240]; mysql_format(mysql_Handle, str_r, 240, "UPDATE `billboards` SET `bs_renter` = 'None', `bs_rental_days` = '0', `bs_text` = 'None' WHERE `bs_id` = %d", billbid);
        mysql_tquery(mysql_Handle, str_r); DestroyObject(billboard_obj[billbid]);
        billboard_obj[billbid] = CreateObject(7606, billboard_info[billbid][bs_cord][0], billboard_info[billbid][bs_cord][1], billboard_info[billbid][bs_cord][2], 0.0, 0.0, billboard_info[billbid][bs_cord][3]);
        if(billboard_info[billbid][bs_id] <= 10) SetObjectMaterialText(billboard_obj[billbid], b_num_str, 0, 130, "Arial", 48, 0, 0xFFFFFFFF, 0x131114, 1);
		else if(billboard_info[billbid][bs_id] <= 20) SetObjectMaterialText(billboard_obj[billbid], b_num_str_LV, 0, 130, "Arial", 48, 0, 0xFFFFFFFF, 0x131114, 1);
		else if(billboard_info[billbid][bs_id] <= 30) SetObjectMaterialText(billboard_obj[billbid], b_num_str_SF, 0, 130, "Arial", 48, 0, 0xFFFFFFFF, 0x131114, 1);
    }
    if(strcmp(fam_name, "None", true)) {
        new query_w[90];
        mysql_format(mysql_Handle, query_w, sizeof(query_w), "UPDATE `accounts` SET `pFamilyName` = 'None' WHERE `Name` = '%s'", fam_name);
        mysql_tquery(mysql_Handle, query_w);
    }
}

CB: ptAction(playerid, pt_obj_1, pt_obj_2, carvid)
{
	if(GetPVarInt(playerid, "ptEnd") <= gettime())
	{
		DestroyDynamicObject(pt_obj_1);
		DestroyDynamicObject(pt_obj_2);

		return 1;
	}

	new p = GetPVarInt(playerid, "pt"), colors[2];

	if(p == 1)
	{
		SetPVarInt(playerid, "pt", 0);
		colors[0] = -65536;
		colors[1] = -16776961;
	}
	else
	{
		SetPVarInt(playerid, "pt", 1);
		colors[0] = -16776961;
		colors[1] = -65536;
	}
	SetDynamicObjectMaterialText(pt_obj_1, 0, "V", 90, "Webdings", 140, 0, colors[0], 0, 0);
	SetDynamicObjectMaterialText(pt_obj_2, 0, "p", 90, "Webdings", 140, 0, colors[1], 0, 0);

	return 1;
}

stock show_donate_menu(playerid) {
	new fstr[] = 
	"√ç√†√ß√¢√†√≠√®√•\t\t\t√ñ√•√≠√†\n\
	"CORANGE"[1] √è√∞√Æ√¢√•√∞√®√≤√º √Ø√Æ√Ø√Æ√´√≠√•√≠√®√ø\n\
	{ff6640}[2] √Ä√™√≤√®√¢√®√∞√Æ√¢√†√≤√º √Ø√†√™\n\
	"CLIGHTBLUE"[3] √è√∞√•√¨√®√≥√¨-√±√≤√†√≤√≥√±\t\t{aa80ff}√Æ√≤ 300 √∞√≥√°.\n\
	"CWHITE"[4] √ä√Æ√≠√¢√•√∞√≤√†√∂√®√ø √∞√≥√°√´√•√© √¢ √®√£√∞√Æ√¢√≥√æ √¢√†√´√æ√≤√≥\t"CPALEGREEN"1200$ ‚Äî 1 √∞√≥√°.\n\
	"CWHITE"[5] √ë√≠√ø√≤√®√• √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√ø\t\t"CLITEBLUE"1 √Ø√∞√•√§. ‚Äî 100 √∞√≥√°.\n\
	"CWHITE"[6] √ë√¨√•√≠√† √®√£√∞√Æ√¢√Æ√£√Æ √≠√®√™√†\t\t"CLITEBLUE"25 √∞√≥√°.\n\
	"CWHITE"[7] √ä√Æ√¨√Ø√´√•√™√≤ √´√®√∂√•√≠√ß√®√©\t\t"CLITEBLUE"500 √∞√≥√°.\n\
	"CWHITE"[8] √è√∞√Æ√™√†√∑√™√† √≠√†√¢√ª√™√Æ√¢ √¢√´√†√§. √Æ√∞√≥√¶.\t"CLITEBLUE"10% ‚Äî 10 √∞√≥√°.\n\
	"CWHITE"[9] √Å√ª√±√≤√∞√ª√© √¢√ª√µ√Æ√§ √®√ß √Æ√∞√£√†√≠√®√ß√†√∂√®√®\t"CLITEBLUE"50 √∞√≥√°.\n\
	"CWHITE"[10] √ë√¨√•√≠√®√≤√º √Ø√Æ√´\t\t\t"CLITEBLUE"100 √∞√≥√°.\n\
	"CWHITE"[11] √è√Æ√™√≥√Ø√™√† √±√≤√®√´√•√© √°√Æ√ø\t"CLITEBLUE"100 √∞√≥√°.";
	return SPD(playerid, 9771, DIALOG_STYLE_TABLIST_HEADERS, ""CBLUE"√å√†√£√†√ß√®√≠", fstr, "Seleccione", "Cerrar");
}

stock show_settings(playerid) {
	new str_setting[(30+30)*7],
		status[7][30];

	switch(pData[playerid][p_setting][0])
	{
		case 1: strcat(status[0], "{00cc00}√ë√≤√†√≠S√≠√∞√≤√≠√ª√©");
		case 2: strcat(status[0], "{888888}√ë√≤√†√∞√ª√©");
		case 0: strcat(status[0], "{ff3333}√Ç√ª√™√´√æ√∑√•√≠");
	}

	if(pData[playerid][p_setting][1])
		strcat(status[1], "{00cc00}√Ç√™√´√æ√∑√•√≠√ª");
	else strcat(status[1], "{ff3333}√Ç√ª√™√´√æ√∑√•√≠√ª");

	if(pData[playerid][p_setting][2])
		strcat(status[2], "{00cc00}√Ç√™√´√æ√∑√•√≠√ª");
	else strcat(status[2], "{ff3333}√Ç√ª√™√´√æ√∑√•√≠√ª");

	if(pData[playerid][p_setting][3])
		strcat(status[3], "{00cc00}√Ç√™√´√æ√∑√•√≠");
	else strcat(status[3], "{ff3333}√Ç√ª√™√´√æ√∑√•√≠");

	if(pData[playerid][p_setting][4])
		strcat(status[4], "{00cc00}√Ç√™√´√æ√∑√•√≠√ª");
	else strcat(status[4], "{ff3333}√Ç√ª√™√´√æ√∑√•√≠√ª");

	switch(pData[playerid][p_setting][5])
	{
		case 1: strcat(status[5], "{00cc00}#1");
		case 2: strcat(status[5], "{00cc00}#2");
		case 0: strcat(status[5], "{ff3333}√Ç√ª√™√´√æ√∑√•√≠");
	}

	if(pData[playerid][p_setting][6])
		strcat(status[6], "{ff3333}√ë√™√∞√ª√≤");
	else strcat(status[6], "{00cc00}√Ç√®√§√•√≠");

	format(str_setting, sizeof(str_setting), "√è√†√∞√†√¨√•√≤√∞\t√á√≠√†√∑√•√≠√®√•\n\
	"CWHITE"√é√±√≠√Æ√¢√≠√Æ√© √∑√†√≤\t%s\n\
	"CWHITE"ID √®√£√∞√Æ√™√Æ√¢ √¢ √∑√†√≤√•\t%s\n\
	"CWHITE"√Ä√§√¨√®√≠ √§√•√©√±√≤√¢√®√ø √¢ √∑√†√≤√•\t%s\n\
	"CWHITE"√ó√†√≤ √Æ√∞√£√†√≠√®√ß√†√∂√®√®\t%s\n\
	"CWHITE"√ç√®√™√® √≠√†√§ √®√£√∞√Æ√™√†√¨√®\t%s\n\
	"CWHITE"√ë√Ø√®√§√Æ√¨√•√≤√∞\t%s\n\
	"CWHITE"√è√†√∞√Æ√´√º √Ø√∞√® √†√¢√≤√Æ√∞√®√ß√†√∂√®√®\t%s", status[0],status[1],status[2],status[3],status[4],status[5],status[6]);

	return SPD(playerid, 181, DIALOG_STYLE_TABLIST_HEADERS, ""CPALEGREEN"√ã√®√∑√≠√ª√• √≠√†√±√≤√∞√Æ√©√™√®", str_setting, "Cambio", "Siguiente");
}
stock add_log_bank(numbank, act_b, text_b[], plus_mon) {
    new str_add[300], data2[22], day, month, year, hour, minuite, second;
    getdate(year, month, day);
    gettime(hour, minuite, second);
    FixHour(hour);
    hour = shifthour;
    format(data2, 22, "%02d.%02d.%02d √¢ %02d:%02d",day, month, year, hour, minuite);
    mysql_format(mysql_Handle, str_add, 300, "INSERT INTO `logs_bank` (`number_bank`, `plus_mon`, `act`, `text`, `date`) VALUES (%d, %d, %d, '%s', '%s')", numbank, plus_mon, act_b, text_b, data2);
    mysql_tquery(mysql_Handle, str_add);
}
stock show_osnbill(playerid) {
	new str_diall[180];
	format(str_diall, 180, ""CWHITE"√Ç√¢√•√§√®√≤√• √¢ √Ø√Æ√´√• √≠√®√¶√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √§√≠√•√©, √≠√† √™√Æ√≤√Æ√∞√Æ√•\n√µ√Æ√≤√®√≤√• √†√∞√•√≠√§√Æ√¢√†√≤√º √°√®√´√°√Æ√∞√§ {cccc22}(√Æ√≤ 1 √§√Æ 10)"CWHITE".\n\n√ë√≤√Æ√®√¨√Æ√±√≤√º √†√∞√•√≠√§√ª √ß√† √§√•√≠√º: "CCYAN"%d$"CWHITE".", BizInfo[BizEnter{playerid}][bCena][0]);
	return SPD(playerid, 541, DIALOG_STYLE_INPUT, "{40bf80}√Ä√∞√•√≠S√≠ √°√®√´√°√Æ√∞S√≠", str_diall, "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
}
stock show_dopbill(playerid) {
	new str_diall[180];
	format(str_diall, 180, ""CWHITE"√ç√† √±√™√Æ√´√º√™√Æ √§√≠√•√© Quieres √Ø√∞√Æ√§√´√®√≤√º √†√∞√•√≠√§√≥?\n√ë√≤√Æ√®√¨√Æ√±√≤√º √†√∞√•√≠√§√ª √ß√† 1 √§√•√≠√º: "CCYAN"%d$"CWHITE".\n√å√†√™√±√®√¨√†√´√º√≠√Æ√• √™√Æ√´-√¢√Æ √§√≠√•√©: "CLITEBLUE"10", BizInfo[BizEnter{playerid}][bCena][0]);
	return SPD(playerid, 422, DIALOG_STYLE_INPUT, "{669900}√è√∞√Æ√§√´√•√≠√®√• √†√∞√•√≠√§√ª", str_diall, "√É√Æ√≤√Æ√¢√Æ", "Siguiente");
}

public OnPlayerDisconnect(playerid, reason) {
	Derby_OnPlayerDisconnect(playerid, reason);

	if(IsValidDynamicActor(auth_actor[playerid]))
		DestroyDynamicActor(auth_actor[playerid]);
	HideAuthObjects(playerid);

	if(pData[playerid][p_desc_textid] != Text3D:INVALID_3DTEXT_ID)
	{
		DestroyDynamic3DTextLabel(pData[playerid][p_desc_textid]);
		pData[playerid][p_desc_textid] = Text3D:INVALID_3DTEXT_ID;
	}

	KillTimer(LoginTimer[playerid]);

	if(IsPlayerNPC(playerid) && status_trains) {
		new npcname[MAX_PLAYER_NAME];
		GetPlayerName(playerid,npcname,sizeof(npcname));

		// debug
		printf("NPC [%s] disconnected (reason: %s)", npcname, reason);

		if(!strcmp(npcname, "Andrey_Ringo", true)) 
			ConnectNPC("Andrey_Ringo", "train_lv");

		else if(!strcmp(npcname, "Tony_Barrera", true)) 
			ConnectNPC("Tony_Barrera", "train_ls");

		else if(!strcmp(npcname, "El_Capone", true)) 
			ConnectNPC("El_Capone", "train_sf");
		return 1;
	}

	if(logining[playerid])
	{
		strmid(exit_info[playerid][exit_ip], pData[playerid][pIP], 0, strlen(pData[playerid][pIP]), 32);
		exit_info[playerid][exit_time] = GetTickCount();
		logining[playerid] = false;
	}
	
	if(pData[playerid][pLogin]) {

		if(player_in_tir[playerid]) {
			ResetPlayerWeapons(playerid);
			player_in_tir[playerid] = false;
		}

		new h_save[128];
		mysql_format(mysql_Handle, h_save, sizeof(h_save), "UPDATE `accounts` SET `last_hp` = %f WHERE `Name` = '%s'", pData[playerid][p_hp], GetName(playerid));
		mysql_tquery(mysql_Handle, h_save);

		if(player_gameveh[playerid] != INVALID_VEHICLE_ID) {
			DestroyVehicle(player_gameveh[playerid]);
	        player_gameveh[playerid] = INVALID_VEHICLE_ID;
		}
		if(inadmcar[playerid] != INVALID_VEHICLE_ID) {
	        DestroyVehicle(inadmcar[playerid]);
	        inadmcar[playerid] = INVALID_VEHICLE_ID;
	    }
		if(JobL[playerid] == true) {
			DisablePlayerCheckpoint(playerid);
			JobL[playerid] = false;
			JobLCheck[playerid] = false;
			Hook_GivePlayerMoney(playerid, JobLCash[playerid]);
			if(pData[playerid][pMember]) SetPlayerSkin(playerid, pData[playerid][pModel]);
			else SetPlayerSkin(playerid, pData[playerid][pChar]);
			lable_matr[playerid] = false;
			ClearAnimations(playerid);
			SetPlayerSpecialAction(playerid, 0);
		}
		if(player_is_taxi[playerid]) {
			Delete3DTextLabel(taxi3d[GetPlayerVehicleID(playerid)]);
			GivePayDayMoney(playerid, GetPlayerVehicleID(playerid));
			SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			new Float: car_floathp; GetVehicleHealth(GetPlayerVehicleID(playerid), car_floathp); new car_hp = floatround(car_floathp, floatround_ceil), repair_price = (1000-car_hp)/3;
			if(repair_price != 0) Hook_GivePlayerMoney(playerid, -repair_price);
			foreach(new i:Player) {
				if(!passenger_taxien[i] && GetPVarInt(i, "driver_taxi") != playerid) continue;
				KillTimer(timer_taxipas[i]); passenger_taxien[i] = false;
			}
			last_vehiclejob[playerid] = -1;
			arenda_taxi[playerid] = false; arenda_taxi_id[playerid] = -1;
			player_is_taxi[playerid] = false, taxi_type[playerid] = -1, taxi_passengers[playerid] = 0, taxi_payday[playerid] = 0, taxi_tarif[playerid] = -1;
		}
		if(lego_en[playerid]) {
			lego_en[playerid] = false;
			for(new i = 0, n = lego_countobj[playerid]; i < n; i ++) {
				if(!IsValidObject(lego_objid[playerid][i])) continue;
				DestroyObject(lego_objid[playerid][i]);
			}
			lego_countobj[playerid] = 0;
		}
		if(prodworker_status[playerid]) {
			prodwork_bizid[playerid] = 0; prodwork_prods[playerid] = 0; prodworker_status[playerid] = false;
			new prw_veh = prodworker_vehicle[playerid];
			prodworker_vehicle[playerid] = -1;
			SetVehicleToRespawn(prw_veh);
			DestroyDynamic3DTextLabel(prodwork_3d[prw_veh]);
		}
		if(GetPVarInt(playerid, "PlayerCuffed") == 2) RemovePlayerAttachedObject(playerid, 0);
		if(player_is_drivebus[playerid]) {
			DisablePlayerRaceCheckpoint(playerid);
			SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			last_vehiclejob[playerid] = -1; KillTimer(timer_bus[playerid]);
			new Float: car_floathp; GetVehicleHealth(GetPlayerVehicleID(playerid), car_floathp); new car_hp = floatround(car_floathp, floatround_ceil), repair_price = (1000-car_hp)/3;
			if(repair_price != 0) Hook_GivePlayerMoney(playerid, -repair_price);
			bus_passengers[GetPlayerVehicleID(playerid)] = 0, bus_driverid[GetPlayerVehicleID(playerid)] = INVALID_PLAYER_ID;
			arenda_bus[playerid] = false;
			player_is_drivebus[playerid] = false;
			arenda_bus_id[playerid] = -1;
		}

		if(pTemp[playerid][pInHospital]) {
			UpdateKoykaSvobodin(playerid, GetPVarInt(playerid, "KoykoUsed"));
			pTemp[playerid][pInHospital] = false;
		}

		check_badgevalid(playerid);

		if(workzavod[playerid]) {
			workzavod[playerid] = false;
			if(GetPVarInt(playerid, "amountprod") >= 1) 
				Hook_GivePlayerMoney(playerid, GetPVarInt(playerid, "factorymoney") - GetPVarInt(playerid, "factoryfail"));
		}

		if(GetPVarInt(playerid, "playerisGPS")) 
			DisableGPS(playerid);

		closeMenuMarket(playerid);

		new idmarket=-1;
		for(new i =0; i<9; i++) {
			if(selleritemid[i] != playerid) continue;
			idmarket=i;
			break;
		}
		if(idmarket!= -1) {
			selleritemid[idmarket]=-1;
			for(new i =0; i < 5; i++) {
				if(item_is_Skin[idmarket][i]) 
					AddSkinToInventory(playerid,modelitem[idmarket][i]);
				else if(item_is_Accessory[idmarket][i]) {
					AddAccessoryToInv(playerid,
					indexmark[idmarket][i],
					boneitem[idmarket][i],
					modelitem[idmarket][i],
					acsRotX[idmarket][i],
					acsRotY[idmarket][i],
					acsRotZ[idmarket][i],
					acsZoom[idmarket][i],
					osetX[idmarket][i],osetY[idmarket][i],osetZ[idmarket][i],
					itemfRotX[idmarket][i],itemfRotY[idmarket][i],itemfRotZ[idmarket][i],
					fitemScaleX[idmarket][i],fitemScaleY[idmarket][i],fitemScaleZ[idmarket][i]);
				}
				else {
					switch(typeitem[idmarket][i]) {
						case 0: {
							pData[playerid][pSpal] += countitem[idmarket][i];
							UpdatePlayerData(playerid,"spal",pData[playerid][pSpal]);
						}
						case 1: {
							pData[playerid][pSiga] += countitem[idmarket][i];
							UpdatePlayerData(playerid,"sigar",pData[playerid][pSiga]);
						}
						case 4: {
							pData[playerid][pAptech] += countitem[idmarket][i];
							UpdatePlayerData(playerid,"pAptech",pData[playerid][pAptech]);
						}
						case 5: {
							pData[playerid][pMasks] += countitem[idmarket][i];
							UpdatePlayerData(playerid,"pMasks",pData[playerid][pMasks]);
						}
						case 6: {
							pData[playerid][pRec]=true;
							UpdatePlayerData(playerid,"pRec",1);
						}
						case 7: {
							fuelcan_buyed[playerid] = true;
							SetPlayerAttachedObject(playerid, 2, 1650, 6, 0.120999, 0.017999, 0.069000, 0.000000, -100.400024, 0.000000, 1.000000, 1.000000, 1.000000, 0, 0);
						}
						case 8: {
							pData[playerid][casino_amount]+= countitem[idmarket][i];
							UpdatePlayerData(playerid,"casino_amount",pData[playerid][casino_amount]);
						}
					}

					AddItemToInventory(playerid, countitem[idmarket][i], typeitem[idmarket][i]);
				}

				RemoveProdFromMarket(playerid,idmarket,i,1);
			}

			new fm[160];
			format(fm,sizeof(fm),"√è√†√´√†√≤√™√† ¬π%d\n√ë√¢√Æ√°√Æ√§√≠√†\n\n√è√Æ√§√±√™√†√ß√™√†:\n√Ç√¢√•√§√®√≤√• /inv\n√Ç√ª√°√•√∞√®√≤√• √≠√•√≠√†√§√•√≤√ª√© √†√™√±√•√±√±√≥√†√∞\n√ç√†√¶√¨√®√≤√• SELL √§√´√ø √Ø√∞√ÆS√≠√¶√®\n√á√† √Ø√∞√ÆS√≠√¶√≥ √≤√Æ√¢√†√∞√Æ√¢ √±√≠√®√¨√†√•√≤√±√ø √™√Æ√¨√®√±√±√®√ø 1%%",idmarket+1);
			UpdateDynamic3DTextLabelText(rinok_3d[idmarket], COLOR_LIGHTGREY, fm);
		}
		
		if(is_yarder[playerid]) {
			is_yarder[playerid] = false;
			if(IsValidDynamicObject(yard_obj[playerid])) 
				DestroyDynamicObject(yard_obj[playerid]);
		}
		if(IsValidDynamicObject(stndobject[playerid])) {
			DestroyDynamicObject(stndobject[playerid]);
			DestroyDynamicObject(stndobject_2[playerid]);
			DestroyDynamic3DTextLabel(stndobject3DText[playerid]);
			stndobject[playerid] = 0;
			stndobject_2[playerid] = 0;
		}
		if(Iter_Contains(Reports, playerid)) {
			pTemp[playerid][rep_rport] = EOS;
			Iter_Remove(Reports, playerid);
		}

		new veh_for_check;
		if(GetPVarInt(playerid, "veh_rent") != -1) {
			for(new i = 0, ps = GetVehiclePoolSize(); i <= ps; i++) {
				if(rentID[i] != playerid) continue;
				veh_for_check = i;
				if(i == af_carID[playerid] && af_load[playerid]) 
					RemoveCarFromTruckBody(playerid);
				if(i >= af_orig_truck[0] && i <= af_orig_truck[1]) 
					SetVehicleToRespawn(i);
				else DestroyVehicle(i);
				break;
			}
			if(!IsValidVehicle(veh_for_check)) {
				rentID[GetPVarInt(playerid, "veh_rent")] = -1;
				SetPVarInt(playerid, "veh_rent", -1);
			}
		}

		close_inventory(playerid);

		if(bloody_en[playerid]) {
			bloody_players --;
			bloody_en[playerid] = false;
            format(string, 128, "[√ä√∞√Æ√¢√†√¢√Æ√• √™√Æ√´√º√∂√Æ] "CBLUE"%s √Ø√Æ√™√®√≠√≥√´ √®√£√∞√≥ (√Æ√≤√™√´√æ√∑√®√´√±√ø √Æ√≤ √±√•√∞√¢√•√∞√†)", GetName(playerid));
            send_bloodring_mes(COLOR_MAIN, string);
            if(bloody_players == 1) {
                new id_bloodywinner = -1;
                foreach(new i:Player) {
                	if(!bloody_en[i]) continue;
                	id_bloodywinner = i;
                	break;
                }
                if(id_bloodywinner != -1 && timer_bloody == 0) {
                    bloody_players --;
                    new ubet_players, bloody_winmoney = bet_bloody[id_bloodywinner] * 3 / 2;
                    foreach(new i:Player) {
                    	if(!bet_bloody[i]) continue;
                    	if(i == playerid) continue;
                    	ubet_players = bet_bloody[i] / 2;
                    	bloody_winmoney += ubet_players;
                    }
	                SCM(id_bloodywinner, COLOR_MAIN, "[√ä√∞√Æ√¢√†√¢√Æ√• √™√Æ√´√º√∂√Æ] "CBLUE"√è√Æ√ß√§√∞√†√¢√´√ø√•√¨ √Ç√†√± √± √Ø√Æ√°√•√§√Æ√©");
	                SCMF(id_bloodywinner, COLOR_MAIN, "[√ä√∞√Æ√¢√†√¢√Æ√• √™√Æ√´√º√∂√Æ] "CBLUE"√Ç√†√∏ √Ø√∞√®√ß: {00cc00}%d$", bloody_winmoney);
	                Hook_GivePlayerMoney(id_bloodywinner, bloody_winmoney);
	                new gametext_hook[50]; format(gametext_hook, 50, "~g~+%d$", bloody_winmoney);
					GameTextForPlayer(id_bloodywinner, gametext_hook, 3000, 1);
	                SetPlayerInterior(id_bloodywinner, 0); SetPlayerVirtualWorld(id_bloodywinner, 0);
	                TogglePlayerControllable(id_bloodywinner, 1);
	                SetPlayerPos(id_bloodywinner, 2690.8135, -1704.8428, 11.2370);
	                SetPlayerFacingAngle(id_bloodywinner, 45);
	                TextDrawHideForPlayer(id_bloodywinner, wait_bloodyst);
	                DisablePlayerRaceCheckpoint(id_bloodywinner);
	                bet_bloody[id_bloodywinner] = 0;
	                SetCameraBehindPlayer(id_bloodywinner);
	                PlayerTextDrawHide(id_bloodywinner, td_playerbloody[id_bloodywinner]);
	                timer_plbloody[id_bloodywinner] = -1;
	                SetPlayerColor(id_bloodywinner, FractionInfo[pData[id_bloodywinner][pMember]][fColor]);
	                bloody_en[id_bloodywinner] = false;
	                if(GetPlayerVehicleID(id_bloodywinner) >= bloody_car[1] && GetPlayerVehicleID(id_bloodywinner) <= bloody_car[60]) DestroyVehicle(GetPlayerVehicleID(id_bloodywinner));
	                TextDrawHideForPlayer(id_bloodywinner, usebox_playerbloody);
                }
            }
			if(bloody_players <= 1 && timer_bloody == 0) {
				start_bloodyring = false, bloody_players = 0;
				foreach(new i:Player) {
					if(!bloody_en[i]) continue;
					DisablePlayerRaceCheckpoint(i);
					bloody_en[i] = false; 
				}
				foreach(new i:Player) bet_bloody[i] = 0;
				DestroyPickup(repair_bloody_1); DestroyDynamicArea(repair_bloody); timer_bloody = 0;
				timebreakc_bloody = 0; breakblood_time = 0;
				for(new i = 0, ps = GetVehiclePoolSize(); i <= ps; i++) if(i >= bloody_car[1] && i <= bloody_car[60]) DestroyVehicle(i);
			}
			TextDrawHideForPlayer(playerid, wait_bloodyst);
			PlayerTextDrawHide(playerid, td_playerbloody[playerid]);
			timer_plbloody[playerid] = -1;
			SetPlayerColor(playerid, FractionInfo[pData[playerid][pMember]][fColor]);
			if(GetPlayerVehicleID(playerid) >= bloody_car[1] && GetPlayerVehicleID(playerid) <= bloody_car[60]) DestroyVehicle(GetPlayerVehicleID(playerid));
			TextDrawHideForPlayer(playerid, usebox_playerbloody);
		}
		if(mafia_object[playerid] != 0) {
			DestroyObject(mafia_object[playerid]);
			Delete3DTextLabel(mafia_object_text[playerid]);
			mafia_object[playerid] = 0;
		}
		if(IsValidDynamicObject(pdobject[playerid])) {
	        DestroyDynamicObject(pdobject[playerid]);
	        DestroyDynamic3DTextLabel(pdobject3DText[playerid]);
	        pdobject[playerid] = 0;
	    }
		for(new i = 0; i < MAX_PLAYER_ATTACHED_OBJECTS; i ++) {
			if(!IsPlayerAttachedObjectSlotUsed(playerid, i)) continue;
			RemovePlayerAttachedObject(playerid, i);
		}

		mysql_format(mysql_Handle, string, 100, "UPDATE `accounts` SET `pOnline` = '0' WHERE `Name` = '%s'", GetName(playerid));
		mysql_tquery(mysql_Handle, string);

		if(GetPVarInt(playerid, "driver_taxi")) KillTimer(timer_taxipas[playerid]), passenger_taxien[playerid] = false;
		if(GetPVarInt(playerid, "loader_job") == 1) {
			Hook_GivePlayerMoney(playerid, GetPVarInt(playerid, "loader_money"));
		}
		for(new i = 0; i < _PLAYERBANK[playerid]; i ++) {
			_INFO[playerid][ID][i] = 0; 
			strdel(_INFONAME[playerid][i], 0, 20);
			strdel(_INFO[playerid][OWNER][i], 0, 24);
			_INFO[playerid][NUMBER][i] = 0; 
			_INFO[playerid][PASSWORD][i] = 0; 
		}
		_PLAYERBANK[playerid] = 0;
		if(pData[playerid][pLowSkill] == 1) {
			TogglePlayerControllable(playerid, 1);
			pData[playerid][pHighSkill] = 0;
			pData[playerid][pLowSkill] = 0;
			if(pData[playerid][pMineNumber] > 0) {
				new UU_oneprod_mine = oneprod_mine / 8;
				new BDU_oplate = pData[playerid][pMineNumber] * UU_oneprod_mine;
				Hook_GivePlayerMoney(playerid, BDU_oplate);
				pData[playerid][pWorkSkill][0]+=pData[playerid][pMineNumber];
				UpdatePlayerData(playerid, "pWorkSkill", pData[playerid][pWorkSkill][0]);
			} pData[playerid][pMinePr] = 0;
			pData[playerid][pMineNumber] = 0;
		}
		if(pData[playerid][pHighSkill] == 1) {
			TogglePlayerControllable(playerid, 1);
			pData[playerid][pHighSkill] = 0;
			pData[playerid][pLowSkill] = 0;
			if(pData[playerid][pMineNumber] > 0) {
				new UU_oneprod_mine = oneprod_mine / 8;
				new BB_oneprod_mine = UU_oneprod_mine / 2;
				new UUB_oneprod_mine = UU_oneprod_mine + BB_oneprod_mine;
				new BDU_oplate = pData[playerid][pMineNumber] * UUB_oneprod_mine;
				Hook_GivePlayerMoney(playerid, BDU_oplate);
			} pData[playerid][pMinePr] = 0;
			pData[playerid][pMineNumber] = 0;
		}
		if(GetPVarInt(playerid, "StartWanted")) KillTimer(GetPVarInt(playerid, "StartWanted"));
		if(GetPVarInt(playerid, "hold_player") != -1) {
			hold[GetPVarInt(playerid, "hold_player")] = -1;
			SetPVarInt(playerid, "hold_player", -1);
		}
		if(GetPVarInt(playerid, "Mobile") != 999) {
			new caller = GetPVarInt(playerid, "Mobile");
			SCM(caller, COLOR_ERROR, "√á√¢√Æ√≠√Æ√™ √Ø√∞√•√∞√¢√†√≠");
			if(IsPlayerAttachedObjectSlotUsed(caller, 0)) RemovePlayerAttachedObject(caller, 0);
			if(IsPlayerAttachedObjectSlotUsed(playerid, 0)) RemovePlayerAttachedObject(playerid, 0);
			if(GetPlayerSpecialAction(playerid) == 11) SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
			if(GetPlayerSpecialAction(caller) == 11) SetPlayerSpecialAction(caller, SPECIAL_ACTION_STOPUSECELLPHONE);
			CellTime{caller} = false;
			CellTime{playerid} = false;
			KillTimer(Cell_Timer[caller]);
			KillTimer(Cell_Timer[playerid]);
			SetPVarInt(caller, "Mobile", 999);
			SetPVarInt(playerid, "Mobile", 999);
		}
		if(GetPVarInt(playerid, "PlayerCuffed") == 2) {
			UpdatePlayerData(playerid,"pJailTime",pData[playerid][pWanted]*600);
			format(string, 70, "%s √¢√ª√∏√•√´ √Ø√∞√® √†√∞√•√±√≤√• √® √°√ª√´ √Æ√≤√Ø√∞√†√¢√´√•√≠ √¢ √≤√æ√∞√º√¨√≥", pData[playerid][pName]);
			SCMTA(0xFA1010FF, string);
			pData[playerid][pWanted] = 0;
			UpdatePlayerData(playerid, "pWanted", 0);
		}
		if(GetPVarType(playerid, "PlacedBB")) {
			pData[playerid][pRec]=false;
			UpdatePlayerData(playerid,"pRec",0);
			RemoveItemFromInventory(playerid, 6);
			DestroyDynamicObject(GetPVarInt(playerid, "PlacedBB"));
			DestroyDynamic3DTextLabel(Text3D:GetPVarInt(playerid, "BBLabel"));
			if(GetPVarType(playerid, "BBArea")) {
				Iter_Remove(boxPlayer,playerid);
				foreach(new i:Player) {
					if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea"))) {
						StopAudioStreamForPlayer(i);
					}
				}
			}
		}
		if(pTemp[playerid][pExamCandidate] != INVALID_PLAYER_ID) {
			new actplayerid = pTemp[playerid][pExamCandidate];
			if(IsPlayerConnected(actplayerid) && pTemp[actplayerid][pOnExam]) {
				SCM(actplayerid, COLOR_ERROR, "√ù√™√ß√†√¨√•√≠ √Ø√∞√•√∞√¢√†√≠ (√≥√∑√•√≠√®√™ √®√´√® √®√≠√±√≤√∞√≥√™√≤√Æ√∞ √¢√ª√∏√•√´ √®√ß √®√£√∞√ª)");
				RemovePlayerFromVehicle(actplayerid);
				pTemp[actplayerid][pOnExam] = false;
			}
		}
		new str_query[195];
		mysql_format(mysql_Handle, str_query, 195, "UPDATE `accounts` SET `fuelincar_1` = %d, `fuelincar_2` = %d, `fuelincar_3` = %d WHERE `Name` = '%s'", pData[playerid][FuelCar][0], pData[playerid][FuelCar][1], pData[playerid][FuelCar][2], GetName(playerid));
		mysql_tquery(mysql_Handle, str_query);
		if(pData[playerid][pHouse] != -1 || pData[playerid][pHotel] != -1 || pData[playerid][pFlat] != -1) {
			if(place_coeff[playerid] != -1) car_places[place_coeff[playerid]] = false;
			if(FLAT_place_coeff[playerid] != -1) FLAT_car_places[FLAT_place_coeff[playerid]] = false;
			if(house_carid[playerid][0] != 0) DestroyVehicle(house_carid[playerid][0]), house_carid[playerid][0] = 0;
			if(house_carid[playerid][1] != 0) DestroyVehicle(house_carid[playerid][1]), house_carid[playerid][1] = 0;
			if(house_carid[playerid][2] != 0) DestroyVehicle(house_carid[playerid][2]), house_carid[playerid][2] = 0;
		}
		if(GetPVarInt(playerid,"adchecking_fix")) 
			gAdvert[GetPVarInt(playerid,"adchecking_fix") - 1][adCheking] = false;
		SetPlayerSkills(playerid);
		if(GetPVarInt(playerid, "dostup")) {
			string[0] = EOS;
			format(string,220,"UPDATE `admin` SET `kick` = %d, `ban` = %d, `mute` = %d, `ans` = %d, `warn` = %d, `jail` = %d WHERE `Name` = '%s' LIMIT 1",gAdmin[playerid][0],gAdmin[playerid][1],gAdmin[playerid][2],gAdmin[playerid][3],gAdmin[playerid][4],gAdmin[playerid][5],pData[playerid][pName]);
			mysql_tquery(mysql_Handle, string);
		}
		if(!GetPVarInt(playerid, "dostup") && pData[playerid][pAdmJob] != 0) 
			UpdatePlayerData(playerid, "pAdmJob", 0);
		SavePlayerAccount(playerid);
		CancelSelectTextDraw(playerid);
		DisablePlayerCheckpoint(playerid);
	}
	return 1;
}
stock show_menu_bank(playerid) {
	new list[1150], _messages[90], num = 1; 
	strcat(list, "√ç√†√ß√¢√†√≠√®√•\t√Å√†√´√†√≠√±\t√ç√Æ√¨√•√∞\n");
	format(_messages, sizeof(_messages), ""CLITEBLUE"[1] √é√±√≠√Æ√¢√≠√Æ√© √±√∑¬∏√≤\t{00cc00}%d$\t{ffcc66}‚Äî‚Äî"CWHITE"\n", pData[playerid][pBank]), strcat(list, _messages); 
	for(new i = 0; i < _PLAYERBANK[playerid]; i ++) {
        if(_INFO[playerid][HIDED][i]) continue;
        num ++;
        format(_messages, sizeof(_messages), "[%i] "CWHITE"%s\t{00cc00}%d$\t{ffcc66}%i"CWHITE"\n", num, _INFONAME[playerid][i], _INFO[playerid][BALANCE][i], _INFO[playerid][NUMBER][i]);
        strcat(list, _messages); 
	}
    strcat(list, "\n"CCYAN"+ √é√≤√™√∞√ª√≤√º √≠√Æ√¢√ª√© √±√∑¬∏√≤\n{ff8533}+ √è√Æ√™√†√ß√†√≤√º √±√™√∞√ª√≤√ª√• √±√∑√•√≤√†");
	return SPD(playerid, 341, DIALOG_STYLE_TABLIST_HEADERS, ""CMAIN"√å√•√≠√æ √°√†√≠√™√†", list, "√é√Ø√•√∞√†√∂√®√®", "Cerrar");
}
stock show_paydialog_home(playerid) {
	new price_pay; switch(HouseInfo[pData[playerid][pHouse]][hKlass]) {
		case 1: price_pay = 1*640;
		case 2: price_pay = 2*640;
		case 3: price_pay = 3*640;
		case 4: price_pay = 4*640;
		case 5: price_pay = 5*640;
		default: price_pay = 1*640;
	}
	format(string, 330, ""CWHITE"√ç√† S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤ √Ç√†√∏ √§√Æ√¨ "CPALEGREEN"¬π%d "CWHITE"√Æ√Ø√´√†√∑√•√≠ √≠√† "CORANGE"%d √®√ß 30 √§√≠√•√©\n\n"CWHITE"√ë√≤√Æ√®√¨√Æ√±√≤√º √Æ√Ø√´√†√≤√ª √ß√† √§√•√≠√º (√°√•√ß √±√≥√°√±√®√§√®√©): {40bf80}%d$\n"CWHITE"√ë√≤√Æ√®√¨√Æ√±√≤√º √Æ√Ø√´√†√≤√ª (√≥√∑√®√≤√ª√¢√†√ø √±√≥√°√±√®√§√®√®): {40bf40}%d$\n\n"CWHITE"√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø, √¢√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √§√≠√•√©, √≠√† √™√Æ√≤√Æ√∞√Æ√•\nQuieres √Æ√Ø√´√†√≤√®√≤√º √§√Æ√¨ √¢ √Ø√Æ√´√• √≠√®√¶√•:", pData[playerid][pHouse], HouseInfo[pData[playerid][pHouse]][hPay], price_pay, price_pay / 2);
	return SPD(playerid, 158, DIALOG_STYLE_INPUT, ""CMAIN"√é√Ø√´√†√≤√† √§√Æ√¨√†", string, "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
}
stock show_paydialog_garage(playerid) {
	format(string, 230, ""CWHITE"√ç√† S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤ √Ç√†√∏ √£√†√∞√†√¶ "CPALEGREEN"¬π%d "CWHITE"√Æ√Ø√´√†√∑√•√≠ √≠√† "CORANGE"%d √®√ß 15 √§√≠√•√©\n\n"CWHITE"√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø, √¢√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √§√≠√•√©, √≠√† √™√Æ√≤√Æ√∞√Æ√•\nQuieres √Æ√Ø√´√†√≤√®√≤√º √£√†√∞√†√¶ √¢ √Ø√Æ√´√• √≠√®√¶√•:", pData[playerid][have_garage], garage[pData[playerid][have_garage]][gdays]);
	return SPD(playerid, 1195, DIALOG_STYLE_INPUT, ""CMAIN"√é√Ø√´√†√≤√† √£√†√∞√†√¶√†", string, "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
}
stock show_paydialog_flat(playerid) {
	format(string, 230, ""CWHITE"√ç√† S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤ √Ç√†√∏√† √™√¢√†√∞√≤√®√∞√† "CPALEGREEN"¬π%d "CWHITE"√Æ√Ø√´√†√∑√•√≠√† √≠√† "CORANGE"%d √®√ß 30 √§√≠√•√©\n\n"CWHITE"√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø, √¢√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √§√≠√•√©, √≠√† √™√Æ√≤√Æ√∞√Æ√•\nQuieres √Æ√Ø√´√†√≤√®√≤√º √™√¢√†√∞√≤√®√∞√≥ √¢ √Ø√Æ√´√• √≠√®√¶√•:", pData[playerid][pFlat], flat_info[pData[playerid][pFlat]][fl_days]);
	return SPD(playerid, 162, DIALOG_STYLE_INPUT, ""CMAIN"√é√Ø√´√†√≤√† √™√¢√†√∞√≤√®√∞√ª", string, "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
}
stock show_paydialog_biz(playerid) {
	if(pData[playerid][unikauto_Have] != 0 || pData[playerid][autoHave] != 0 || pData[playerid][food_have] != 0 || pData[playerid][prok_have] != 0 || pData[playerid][kiosk_have] != 0) {
		format(string, 230, ""CWHITE"√ç√† S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤ √Ç√†√∏ √°√®√ß√≠√•√± √Æ√Ø√´√†√∑√•√≠ √≠√† "CORANGE"%d √®√ß 30 √§√≠√•√©\n\n"CWHITE"√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø, √¢√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √§√≠√•√©, √≠√† √™√Æ√≤√Æ√∞√Æ√•\nQuieres √Æ√Ø√´√†√≤√®√≤√º √°√®√ß√≠√•√± √¢ √Ø√Æ√´√• √≠√®√¶√•:",pData[playerid][newbiz_Pay]);
		return SPD(playerid, 197, DIALOG_STYLE_INPUT, ""CMAIN"√é√Ø√´√†√≤√† √°√®√ß√≠√•√±√†", string, "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
	}
	if(pData[playerid][pBusiness] == -1) return SCM(playerid,COLOR_LIGHTGREY,"√ì √Ç√†√± No √°√®√ß√≠√•√±√†");
	format(string, 230, ""CWHITE"√ç√† S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤ √Ç√†√∏ √°√®√ß√≠√•√± "CPALEGREEN"¬π%d "CWHITE"√Æ√Ø√´√†√∑√•√≠ √≠√† "CORANGE"%d √®√ß 30 √§√≠√•√©\n\n"CWHITE"√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø, √¢√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √§√≠√•√©, √≠√† √™√Æ√≤√Æ√∞√Æ√•\nQuieres √Æ√Ø√´√†√≤√®√≤√º √°√®√ß√≠√•√± √¢ √Ø√Æ√´√• √≠√®√¶√•:", pData[playerid][pBusiness], BizInfo[pData[playerid][pBusiness]][bPay]);
	return SPD(playerid, 159, DIALOG_STYLE_INPUT, ""CMAIN"√é√Ø√´√†√≤√† √°√®√ß√≠√•√±√†", string, "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
}
stock show_paydialog_fuel(playerid) {
	format(string, 230, ""CWHITE"√ç√† S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤ √Ç√†√∏√† √Ä√á√ë "CPALEGREEN"¬π%d "CWHITE"√Æ√Ø√´√†√∑√•√≠√† √≠√† "CORANGE"%d √®√ß 30 √§√≠√•√©\n\n"CWHITE"√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø, √¢√¢√•√§√®√≤√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √§√≠√•√©, √≠√† √™√Æ√≤√Æ√∞√Æ√•\nQuieres √Æ√Ø√´√†√≤√®√≤√º √Ä√á√ë √¢ √Ø√Æ√´√• √≠√®√¶√•:", pData[playerid][pFilling], Filling[pData[playerid][pFilling]][fPay]);
	return SPD(playerid, 189, DIALOG_STYLE_INPUT, ""CMAIN"√é√Ø√´√†√≤√† √Ä√á√ë", string, "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
}
stock DialogBank(playerid) { 
    return SPD(playerid, 343, DIALOG_STYLE_LIST, ""CLITEBLUE"√é√Ø√•√∞√†√∂√®√® √Ø√Æ √±√∑¬∏√≤√≥", 
    	"[1] √à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ √±√∑¬∏√≤√•\n\
        [2] √à√±√≤√Æ√∞√®√ø √Æ√Ø√•√∞√†√∂√®√©\n\
    	[3] √ë√≠√ø√≤√º √§√•√≠√º√£√®\n\
    	[4] √è√Æ√´√Æ√¶√®√≤√º √§√•√≠√º√£√®\n\
    	[5] √è√•√∞√•√¢√•√±√≤√® √≠√† √§√∞√≥√£√Æ√© √±√∑¬∏√≤\n\
    	[6] √è√•√∞√•√®√¨√•√≠√Æ√¢√†√≤√º √±√∑¬∏√≤\n\
    	[7] Cambio PIN-√™√Æ√§\n\
        [8] √ë√™√∞√ª√≤√º √±√∑¬∏√≤",
    "Seleccione", "Siguiente");
}
CB: salon_check_validnumber(playerid, number_sim) {
	if(pData[playerid][pCash] < 300) 
		return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢");
	new rows, str_success[105]; cache_get_row_count(rows);
	if(rows) {
		SPD(playerid, 481, DIALOG_STYLE_INPUT, ""CPALEGREEN"√à√ß√¨√•√≠√•√≠√®√• √≠√Æ√¨√•√∞√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¨√•√∞ √§√´√ø √Ç√†√∏√•√© SIM-√™√†√∞√≤√ª\n√é√≠ √§√Æ√´√¶√•√≠ √±√Æ√±√≤√Æ√ø√≤√º √®√ß 6-√≤√® √∂√®√¥√∞\n\n"CLITEBLUE"√ë√≤√Æ√®√¨√Æ√±√≤√º: 300$", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
		return SCM(playerid, COLOR_ERROR, "√Ç√¢√•√§¬∏√≠√≠√ª√© √Ç√†√¨√® √≠√Æ√¨√•√∞ √ß√†√≠√ø√≤");
	}
	pData[playerid][pPnumber] = number_sim;
	RemoveItemFromInventory(playerid, 3);
	AddItemToInventory(playerid, 1, 3);
	UpdatePlayerData(playerid, "pPnumber", pData[playerid][pPnumber]);
	PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
	Hook_GivePlayerMoney(playerid, -300);

	format(str_success, sizeof str_success, ""CWHITE"SIM-√™√†√∞√≤√† √± √≠√Æ√¨√•√∞√Æ√¨ "CPALEGREEN"%d "CWHITE"√≥√±√Ø√•√∏√≠√Æ √™√≥√Ø√´√•√≠√† √® √≥√±√≤√†√≠√Æ√¢√´√•√≠√† √¢ √Ç√†√∏ √≤√•√´√•√¥√Æ√≠", number_sim);
	return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{FFCD00}√à√≠√¥√Æ√∞√¨√†√∂√®√ø", str_success, "Cerrar", "");
}
CB: check_validnumber(playerid, number_sim) {
	if(BizEnter{playerid} == 255) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [015]");
	if(pData[playerid][pCash] < 450) 
		return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢");
	new rows, str_success[105]; cache_get_row_count(rows);
	if(rows) {
		SPD(playerid, 481, DIALOG_STYLE_INPUT, ""CPALEGREEN"√à√ß√¨√•√≠√•√≠√®√• √≠√Æ√¨√•√∞√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¨√•√∞ √§√´√ø √Ç√†√∏√•√© SIM-√™√†√∞√≤√ª\n√é√≠ √§√Æ√´√¶√•√≠ √±√Æ√±√≤√Æ√ø√≤√º √®√ß 6-√≤√® √∂√®√¥√∞\n\n"CLITEBLUE"√ë√≤√Æ√®√¨√Æ√±√≤√º: 300$", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
		return SCM(playerid, COLOR_ERROR, "√Ç√¢√•√§¬∏√≠√≠√ª√© √Ç√†√¨√® √≠√Æ√¨√•√∞ √ß√†√≠√ø√≤");
	}
	pData[playerid][pPnumber] = number_sim;
	RemoveItemFromInventory(playerid, 3);
	AddItemToInventory(playerid, 1, 3);
	UpdatePlayerData(playerid, "pPnumber", pData[playerid][pPnumber]);
	PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);

	Hook_GivePlayerMoney(playerid, -450);
	BizInfo[BizEnter{playerid}][bPribil] += 450;
	BizInfo[BizEnter{playerid}][bBank] += 450;
	BizInfo[BizEnter{playerid}][bProd] -= 10;
	UpdateBusinessData(BizEnter{playerid}, "bProd",BizInfo[BizEnter{playerid}][bProd]);
	if(BizInfo[BizEnter{playerid}][bBank] > 10000000) BizInfo[BizEnter{playerid}][bBank] = 10000000;
	UpdateBusinessData(BizEnter{playerid}, "bPribil",BizInfo[BizEnter{playerid}][bPribil]);
	UpdateBusinessData(BizEnter{playerid}, "bBank",BizInfo[BizEnter{playerid}][bBank]);

	format(str_success, sizeof str_success, ""CWHITE"SIM-√™√†√∞√≤√† √± √≠√Æ√¨√•√∞√Æ√¨ "CPALEGREEN"%d "CWHITE"√≥√±√Ø√•√∏√≠√Æ √™√≥√Ø√´√•√≠√† √® √≥√±√≤√†√≠√Æ√¢√´√•√≠√† √¢ √Ç√†√∏ √≤√•√´√•√¥√Æ√≠", number_sim);
	return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{FFCD00}√à√≠√¥√Æ√∞√¨√†√∂√®√ø", str_success, "Cerrar", "");
}
CB: show_logs_bank(playerid) {
    new number_o, rows, date_l[64], bool: plus_mon, act_log, act_log_str[60], text_log[100];
    string = "S√≠√≤√†\t\t\t√Ñ√•√©√±√≤√¢√®√•\t\t√é√Ø√®√±√†√≠√®√•\n\n"; cache_get_row_count(rows);
    if(!rows) return SPD(playerid, 345, DIALOG_STYLE_MSGBOX, ""CLITEBLUE"√è√Æ√±√´√•√§√≠√®√• 10 √Æ√Ø√•√∞√†√∂√®√© √±√Æ √±√∑¬∏√≤√Æ√¨", ""CWHITE"√Å√†√≠√™√Æ√¢√±√™√®√• √Æ√Ø√•√∞√†√∂√®√® √± √Ω√≤√®√¨ √±√∑¬∏√≤√Æ√¨ √≠√• √≠√†√©√§√•√≠√ª", "Siguiente", "");
    for(new i = 0; i < rows; i ++) {
        if(number_o >= 10) break;
        cache_get_value_name(i, "date", date_l);
        cache_get_value_name_int(i, "act", act_log);
        cache_get_value_name_bool(i, "plus_mon", plus_mon);
        cache_get_value_name(i, "text", text_log);
        if(!plus_mon) format(act_log_str, 60, ""CORANGE"-%d$", act_log);
        else format(act_log_str, 60, ""CMAIN"+%d$", act_log);
        format(string, 1100, "%s"CWHITE"%s\t%s"CWHITE"\t\t%s\n", string, date_l, act_log_str, text_log);
        number_o ++;
    } return SPD(playerid, 345, DIALOG_STYLE_MSGBOX, ""CLITEBLUE"√è√Æ√±√´√•√§√≠√®√• 10 √Æ√Ø√•√∞√†√∂√®√© √±√Æ √±√∑¬∏√≤√Æ√¨", string, "Siguiente", "");
}
CB: RefreshBanks(playerid) { 
    new rows; 
    cache_get_row_count(rows); 
    if(rows) 
    { 
        for(new i = 0; i < _PLAYERBANK[playerid]; i ++)
        { 
            cache_get_value_name_int(i, "ID", _INFO[playerid][ID][i]); 
            cache_get_value_name(i, "NAME", _INFONAME[playerid][i]); 
            cache_get_value_name_int(i, "NUMBER", _INFO[playerid][NUMBER][i]); 
            cache_get_value_name_int(i, "HIDED", _INFO[playerid][HIDED][i]); 
            cache_get_value_name(i, "OWNER", _INFO[playerid][OWNER][i]);
            cache_get_value_name_int(i, "BALANCE", _INFO[playerid][BALANCE][i]); 
            cache_get_value_name_int(i, "PASSWORD", _INFO[playerid][PASSWORD][i]); 
        } 
    } 
    return 1; 
}
CB: CheckBanks(playerid) { 
    new rows; 
    cache_get_row_count(rows); 
    if(rows) { 
        for(new i = 0; i < rows; i ++) { 
            cache_get_value_name_int(i, "ID", _INFO[playerid][ID][i]); 
            cache_get_value_name(i, "NAME", _INFONAME[playerid][i]); 
            cache_get_value_name_int(i, "NUMBER", _INFO[playerid][NUMBER][i]); 
            cache_get_value_name_int(i, "HIDED", _INFO[playerid][HIDED][i]); 
            cache_get_value_name(i, "OWNER", _INFO[playerid][OWNER][i]); 
            cache_get_value_name_int(i, "BALANCE", _INFO[playerid][BALANCE][i]); 
            cache_get_value_name_int(i, "PASSWORD", _INFO[playerid][PASSWORD][i]); 
            _PLAYERBANK[playerid] ++;
        } 
    } 
    return 1; 
}  

public OnPlayerDeath(playerid, killerid, reason)
{
	ResetPlayerWeapons(playerid);
	for(new i = 12; i >= 0; i --) pData[playerid][pWeapons][i] = pData[playerid][pAmmos][i] = 0;
	pData[playerid][p_hp] = 0;
	if(pTemp[playerid][pInHospital]) {
		UpdateKoykaSvobodin(playerid, GetPVarInt(playerid, "KoykoUsed"));
		pTemp[playerid][pInHospital] = false;
	}
	Shot_AntiGM_Total[playerid] = 0;
	if(prodworker_status[playerid]) {
		prodwork_bizid[playerid] = 0;
		prodworker_status[playerid] = false;
		new prk_idveh = prodworker_vehicle[playerid];
		prodworker_vehicle[playerid] = -1;
		SetVehicleToRespawn(prk_idveh);
		DestroyDynamic3DTextLabel(prodwork_3d[prk_idveh]);
		SCM(playerid, COLOR_YELLOW, "√ê√†√°√Æ√∑√®√© √§√•√≠√º √∞√†√ß√¢√Æ√ß√∑√®√™√† √Ø√∞√Æ√§√≥√™√≤√Æ√¢ √ß√†√¢√•√∞√∏√•√≠");
		if(prodwork_prods[playerid] > 0) {
			new oplate = prodwork_prods[playerid] * 25;
			Hook_GivePlayerMoney(playerid, oplate);
			new gametext_hook[30];
			format(gametext_hook, 30, "~g~+%d$", oplate);
			GameTextForPlayer(playerid, gametext_hook, 3000, 1);
			SCMF(playerid, COLOR_LITEBLUE, "√Ç√†√¨ √°√ª√´√† √¢√Æ√ß√¢√∞√†√π√•√≠√† √±√≤√Æ√®√¨√Æ√±√≤√º √™√≥√Ø√´√•√≠√≠√ª√µ √Ø√∞√Æ√§√≥√™√≤√Æ√¢: "CMAIN"%d$", oplate);
		}
		prodwork_prods[playerid] = 0;
	}
	if(JobL[playerid] == true) {
		DisablePlayerCheckpoint(playerid);
		JobL[playerid] = false;
		JobLCheck[playerid] = false;
		Hook_GivePlayerMoney(playerid, JobLCash[playerid]);
		lable_matr[playerid] = false;
		format(string, 22, "~b~+%d$", JobLCash[playerid]);
		GameTextForPlayer(playerid, string, 3000, 1);
		format(string, 64, "√Ç√†√∏ √∞√†√°√Æ√∑√®√© √§√•√≠√º √ß√†√¢√•√∞√∏¬∏√≠. √á√†√∞√Ø√´√†√≤√†: {00cc00}%d$", JobLCash[playerid]);
		JobLCash[playerid] = 0;
		SCM(playerid, COLOR_BLUE, string);
	}
	if(GetPVarInt(playerid, "loader_job") == 1) {
		SCM(playerid, COLOR_BLUE, "√ê√†√°√Æ√∑√®√© √§√•√≠√º √£√∞√≥√ß√∑√®√™√† √ß√†√¢√•√∞√∏¬∏√≠");
		DisablePlayerCheckpoint(playerid);
   	 	SetPlayerSpecialAction(playerid, 0);
		TogglePlayerControllable(playerid, 1);
		if(GetPVarInt(playerid, "loader_bags") > 0) {
			format(string, 30, "~b~+%d$", GetPVarInt(playerid, "loader_money"));
			GameTextForPlayer(playerid, string, 3000, 1);
			SCMF(playerid, COLOR_BLUE, "√Ç√ª √Ø√•√∞√•√≠√•√±√´√® {FFCD00}%d √∏√≤. "CBLUE"√¨√•√∏√™√Æ√¢ √£√∞√≥√ß√† √® √ß√†√∞√†√°√Æ√≤√†√´√® {00cc00}%d$", GetPVarInt(playerid, "loader_bags"), GetPVarInt(playerid, "loader_money"));
			Hook_GivePlayerMoney(playerid, GetPVarInt(playerid, "loader_money"));
		}
		DeletePVar(playerid, "loader_job"), DeletePVar(playerid, "loader_bags"), DeletePVar(playerid, "loader_money");
	}
	if(PlayerTied{playerid}) PlayerTied{playerid} = false;
	if(pData[playerid][pHighSkill] == 1 || pData[playerid][pLowSkill] == 1) {
		DisablePlayerCheckpoint(playerid);
		RemovePlayerAttachedObject(playerid, 0);
		SCM(playerid, COLOR_MAIN, "√ê√†√°√Æ√≤√† √∏√†√µ√≤¬∏√∞√† √ß√†√¢√•√∞√∏√•√≠√†");
		RemovePlayerAttachedObject(playerid, 8);
		SetPVarInt(playerid, "InstMine", false);
		pData[playerid][pMinePr] = 0;
		if(pData[playerid][pMineNumber] > 0) {
			new oplate = 0, UU_oneprod_mine = oneprod_mine / 8;
			new BB_oneprod_mine = UU_oneprod_mine / 2;
			SCMF(playerid, COLOR_MAIN, "√Ç√ª √Ø√•√∞√•√≠√•√±√´√® {FFCD00}%d √™√£ "CMAIN"√∞√≥√§√ª √® √ß√†√∞√†√°√Æ√≤√†√´√® {00cc66}%d$",pData[playerid][pMineNumber],pData[playerid][pMineNumber]*UU_oneprod_mine);
			oplate += pData[playerid][pMineNumber] * UU_oneprod_mine;
			pData[playerid][pWorkSkill][0]+=pData[playerid][pMineNumber];
			if(pData[playerid][pHighSkill]) {
				SCMF(playerid, COLOR_PURPLE, "√Å√Æ√≠√≥√± +%d$ √ß√† √§√Æ√°√ª√∑√≥ √¢ √∏√†√µ√≤√• √£√´√≥√°√Æ√™√Æ√£√Æ √ß√†√´√Æ√¶√•√≠√®√ø",pData[playerid][pMineNumber] * BB_oneprod_mine);
				oplate += pData[playerid][pMineNumber] * BB_oneprod_mine;
			}
			Hook_GivePlayerMoney(playerid, oplate);
			format(string, 30, "~b~+%d$", oplate);
			GameTextForPlayer(playerid, string, 3000, 1);
		}
		UpdatePlayerData(playerid, "pWorkSkill", pData[playerid][pWorkSkill][0]);
		pData[playerid][pLowSkill] = 0;
		pData[playerid][pHighSkill] = 0;
		pData[playerid][pMineNumber] = 0;
		for(new i = 0; i < 5; i ++) TextDrawHideForPlayer(playerid, MineGlText[i]);
		PlayerTextDrawDestroy(playerid, MineAmountPTD[playerid]);
		PlayerTextDrawDestroy(playerid, MineMoneyPTD[playerid]);
	}
	if(player_is_drivebus[playerid]) {
		player_is_drivebus[playerid] = false;
		dead_pljob[playerid] = true;
		DisablePlayerRaceCheckpoint(playerid); KillTimer(timer_bus[playerid]);
		new Float: car_floathp; GetVehicleHealth(last_vehiclejob[playerid], car_floathp); new car_hp = floatround(car_floathp, floatround_ceil), repair_price = (1000-car_hp)/3;
		SCM(playerid, COLOR_LITEBLUE, "√ê√†√°√Æ√≤√† √¢√Æ√§√®√≤√•√´√ø √†√¢√≤√Æ√°√≥√±√† √ß√†√¢√•√∞√∏√•√≠√†");
		SCMF(playerid, COLOR_LITEBLUE, "√Ç√ª √ß√†√∞√†√°√Æ√≤√†√´√®: {009966}%d$"CLITEBLUE". √á√† √∞√•√¨√Æ√≠√≤ √†√¢√≤√Æ√°√≥√±√†: "CERROR"-%d$", bus_payday[playerid], repair_price);
		SCMF(playerid, COLOR_LITEBLUE, "√Ç√±√•√£√Æ √Ø√•√∞√•√¢√•√ß√•√≠√Æ √Ø√†√±√±√†√¶√®√∞√Æ√¢: {FFCD00}%d", bus_passengers[last_vehiclejob[playerid]]);
		if(repair_price != 0) {
			format(string, 32, "~r~-%d$ ~n~~r~ repair bus", repair_price);
			GameTextForPlayer(playerid, string, 3000, 1);
			Hook_GivePlayerMoney(playerid, -repair_price);
		}
		GivePayDayMoney(playerid, bus_payday[playerid]);
		bus_passengers[last_vehiclejob[playerid]] = 0, bus_driverid[last_vehiclejob[playerid]] = INVALID_PLAYER_ID;
		SetVehicleToRespawn(last_vehiclejob[playerid]);
		last_vehiclejob[playerid] = -1;
		DeletePVar(playerid, "time_busexit");
		arenda_bus[playerid] = false;
		arenda_bus_id[playerid] = -1;
		SCM(playerid, 0x009900FF, "√Ñ√•√≠√º√£√® √°√≥√§√≥√≤ √Ø√•√∞√•√∑√®√±√´√•√≠√ª √¢√†√¨ √¢√Æ √¢√∞√•√¨√ø √¢√ªS√≠√∑√® √ß√†√∞√Ø√´√†√≤√ª");
	}
	if(player_is_taxi[playerid]) {
		new Float: car_floathp; GetVehicleHealth(last_vehiclejob[playerid], car_floathp); new car_hp = floatround(car_floathp, floatround_ceil), repair_price = (1000-car_hp)/3;
		if(repair_price == 333) repair_price = 0;
		SCMF(playerid, COLOR_MAIN, "√ê√†√°√Æ√≤√† √≤√†√™√±√®√±√≤√† √ß√†√¢√•√∞√∏√•√≠√†. √Ç√ª √ß√†√∞√†√°√Æ√≤√†√´√®: {009966}%d$"CMAIN". √á√† √∞√•√¨√Æ√≠√≤ √≤√†√™√±√®: "CERROR"-%d$", taxi_payday[playerid], repair_price);
		SCMF(playerid, COLOR_MAIN, "√Ç√±√•√£√Æ √Ø√•√∞√•√¢√•√ß√•√≠√Æ √Ø√†√±√±√†√¶√®√∞√Æ√¢: {FFCD00}%d", taxi_passengers[playerid]);
		SCM(playerid, 0x009900FF, "√Ñ√•√≠√º√£√® √°√≥√§√≥√≤ √Ø√•√∞√•√∑√®√±√´√•√≠√ª √¢√†√¨ √¢√Æ √¢√∞√•√¨√ø √¢√ªS√≠√∑√® √ß√†√∞√Ø√´√†√≤√ª");
		Delete3DTextLabel(taxi3d[last_vehiclejob[playerid]]);
		GivePayDayMoney(playerid, taxi_payday[playerid]);
		if(repair_price != 0) {
			format(string, 32, "~r~-%d$ ~n~~r~ repair taxi", repair_price);
			GameTextForPlayer(playerid, string, 3000, 1);
			Hook_GivePlayerMoney(playerid, -repair_price);
		}
		foreach(new i:Player) {
			if(!passenger_taxien[i] && GetPVarInt(i, "driver_taxi") != playerid) continue;
			KillTimer(timer_taxipas[i]); DeletePVar(i, "driver_taxi"); passenger_taxien[i] = false;
		}
		dead_pljob[playerid] = true;
		SetVehicleToRespawn(last_vehiclejob[playerid]);
		DeletePVar(playerid, "time_taxiexit");
		last_vehiclejob[playerid] = -1;
		arenda_taxi[playerid] = false;
		arenda_taxi_id[playerid] = -1;
		player_is_taxi[playerid] = false, taxi_type[playerid] = -1, taxi_passengers[playerid] = 0, taxi_payday[playerid] = 0, taxi_tarif[playerid] = -1;
	}
	if(bloody_en[playerid]) {
		TogglePlayerControllable(playerid, 1);
		bloody_players --;
		DisablePlayerRaceCheckpoint(playerid);
		bloody_en[playerid] = false;
        format(string, 128, "[√ä√∞√Æ√¢√†√¢√Æ√• √™√Æ√´√º√∂√Æ] "CBLUE"%s √Ø√Æ√™√®√≠√≥√´ √®√£√∞√≥ (√Ø√Æ√£√®√°)", GetName(playerid));
        send_bloodring_mes(COLOR_MAIN, string);
        if(bloody_players == 1) {
            new id_bloodywinner = -1;
            foreach(new i:Player) {
            	if(!bloody_en[i]) continue;
            	id_bloodywinner = i;
            	break;
            }
            if(id_bloodywinner != -1 && timer_bloody == 0) {
                bloody_players --;
                new ubet_players, bloody_winmoney = bet_bloody[id_bloodywinner] * 3 / 2;
                foreach(new i:Player) {
                	if(!bet_bloody[i]) continue;
                	if(i == playerid) continue;
                	ubet_players = bet_bloody[i] / 2;
                	bloody_winmoney += ubet_players;
                }
                SCM(id_bloodywinner, COLOR_MAIN, "[√ä√∞√Æ√¢√†√¢√Æ√• √™√Æ√´√º√∂√Æ] "CBLUE"√è√Æ√ß√§√∞√†√¢√´√ø√•√¨ √Ç√†√± √± √Ø√Æ√°√•√§√Æ√©");
                SCMF(id_bloodywinner, COLOR_MAIN, "[√ä√∞√Æ√¢√†√¢√Æ√• √™√Æ√´√º√∂√Æ] "CBLUE"√Ç√†√∏ √Ø√∞√®√ß: {00cc00}%d$", bloody_winmoney);
                Hook_GivePlayerMoney(id_bloodywinner, bloody_winmoney);
                new gametext_hook[50]; format(gametext_hook, 50, "~g~+%d$", bloody_winmoney);
				GameTextForPlayer(id_bloodywinner, gametext_hook, 3000, 1);
                SetPlayerInterior(id_bloodywinner, 0); SetPlayerVirtualWorld(id_bloodywinner, 0);
                TogglePlayerControllable(id_bloodywinner, 1);
                SetPlayerPos(id_bloodywinner, 2690.8135, -1704.8428, 11.2370);
                SetPlayerFacingAngle(id_bloodywinner, 45);
                TextDrawHideForPlayer(id_bloodywinner, wait_bloodyst);
                DisablePlayerRaceCheckpoint(id_bloodywinner);
                bet_bloody[id_bloodywinner] = 0;
                SetCameraBehindPlayer(id_bloodywinner);
                PlayerTextDrawHide(id_bloodywinner, td_playerbloody[id_bloodywinner]);
                timer_plbloody[id_bloodywinner] = -1;
                SetPlayerColor(id_bloodywinner, FractionInfo[pData[id_bloodywinner][pMember]][fColor]);
                bloody_en[id_bloodywinner] = false;
                if(GetPlayerVehicleID(id_bloodywinner) >= bloody_car[1] && GetPlayerVehicleID(id_bloodywinner) <= bloody_car[60]) DestroyVehicle(GetPlayerVehicleID(id_bloodywinner));
                TextDrawHideForPlayer(id_bloodywinner, usebox_playerbloody);
            }
        }
		if(bloody_players <= 1 && timer_bloody == 0) {
			start_bloodyring = false, bloody_players = 0;
			foreach(new i:Player) {
				if(!bloody_en[i]) continue;
				DisablePlayerRaceCheckpoint(i);
				bloody_en[i] = false; 
			}
			foreach(new i:Player) bet_bloody[i] = 0;
			DestroyPickup(repair_bloody_1); DestroyDynamicArea(repair_bloody);
			KillTimer(reppictime); timer_bloody = 0; timebreakc_bloody = 0; breakblood_time = 0;
			for(new i = 0, ps = GetVehiclePoolSize(); i <= ps; i++) if(i >= bloody_car[1] && i <= bloody_car[60]) DestroyVehicle(i);
		}
		TextDrawHideForPlayer(playerid, wait_bloodyst);
		PlayerTextDrawHide(playerid, td_playerbloody[playerid]);
		timer_plbloody[playerid] = -1;
		SetPlayerColor(playerid, FractionInfo[pData[playerid][pMember]][fColor]);
		if(GetPlayerVehicleID(playerid) >= bloody_car[1] && GetPlayerVehicleID(playerid) <= bloody_car[60]) DestroyVehicle(GetPlayerVehicleID(playerid));
		TextDrawHideForPlayer(playerid, usebox_playerbloody);
	}
    if(GetPVarInt(playerid, "PlayerCuffed") == 2) {
    	if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
        DeletePVar(playerid, "PlayerCuffed");
    } new id_hold = -1;

    foreach(new i:Player) if(GetPVarInt(i, "hold_player") == playerid) id_hold = i;
    if(id_hold != -1) {
        hold[playerid] = -1;
        SetPVarInt(playerid, "hold_player", -1);
    }
	if(GetPVarInt(playerid, "MaskPlayer")) {
	 	DeletePVar(playerid,"MaskPlayer");
	    PlayerTextDrawSetString(playerid, td_mask_time[playerid], "~r~INVISIBLE OFF");
		SetTimerEx("mask_td", 3000, 0, "d", playerid);
    }
    if(pData[playerid][p_setting][5] == 1) {
		for(new i = 0; i < 14; i ++) {
			if(i < 7) PlayerTextDrawDestroy(playerid, new_player_speedTD[playerid][i]);
			TextDrawHideForPlayer(playerid, new_global_speedTD[i]);
		}
	}
	else if(pData[playerid][p_setting][5] == 2) {
		for(new i = 0; i < 7; i ++) {
			if(i < 6) PlayerTextDrawHide(playerid, speed_playertd[playerid][i]);
			TextDrawHideForPlayer(playerid, speed_global[i]);
		}
		PlayerTextDrawHide(playerid, al_indichome[playerid]);
	}

	if(GetPVarInt(playerid,"adchecking_fix")) {
		gAdvert[GetPVarInt(playerid,"adchecking_fix") - 1][adCheking]=false;
		DeletePVar(playerid,"adchecking_fix");
	}
	if(pData[playerid][pJob] == 1) {
		if(GetPVarInt(playerid, "ContractMechanic") > 0) 
			DeletePVar(playerid, "ContractMechanic");
	}
	if(GetPVarInt(playerid, "Mobile") != 999) {
		new caller = GetPVarInt(playerid, "Mobile");
		SCM(caller, COLOR_ERROR, "√á√¢√Æ√≠√Æ√™ √Ø√∞√•√∞√¢√†√≠");
		SCM(playerid, COLOR_ERROR, "√á√¢√Æ√≠√Æ√™ √Ø√∞√•√∞√¢√†√≠");
		if(IsPlayerAttachedObjectSlotUsed(caller, 0)) RemovePlayerAttachedObject(caller, 0);
		if(IsPlayerAttachedObjectSlotUsed(playerid, 0)) RemovePlayerAttachedObject(playerid, 0);
		if(GetPlayerSpecialAction(caller) == 11) SetPlayerSpecialAction(caller, SPECIAL_ACTION_STOPUSECELLPHONE);
		CellTime{caller} = false;
		CellTime{playerid} = false;
		KillTimer(Cell_Timer[caller]);
		KillTimer(Cell_Timer[playerid]);
		SetPVarInt(caller, "Mobile", 999);
		SetPVarInt(playerid, "Mobile", 999);
	}
	if(GetPVarInt(playerid, "StartWanted")) KillTimer(GetPVarInt(playerid, "StartWanted")), DeletePVar(playerid, "StartWanted");
	
	return OnPlayerBulletDeath(playerid, killerid, reason);
}
stock OnPlayerBulletDeath(playerid, killerid, reason)
{
	if(killerid != INVALID_PLAYER_ID)
	{
		if(!IsACop(killerid) && !IsAArm(killerid) && !IsAGang(killerid) && !IsAMafia(killerid)) {
			new Float:x, Float:y, Float:z;
			if(pData[killerid][pWanted] < 6) pData[killerid][pWanted] += 2;
			else pData[killerid][pWanted] = 6;
			SetPlayerWantedLevel(killerid, pData[killerid][pWanted]);
			UpdatePlayerData(killerid, "pWanted", pData[killerid][pWanted]);
			SCM(killerid, COLOR_ERROR, "√Ç√ª √≥√°√®√´√® √∑√•√´√Æ√¢√•√™√†. √Ç√†√∏ √≥√∞√Æ√¢√•√≠√º √∞√Æ√ß√ª√±√™√† √≥√¢√•√´√®√∑√•√≠");
			if(pData[killerid][pZakonp] > -100) pData[killerid][pZakonp] -= 2;
			if(pData[killerid][pZakonp] < -100) pData[killerid][pZakonp] = -100;
			if(pData[killerid][pZakonp] > 100) pData[killerid][pZakonp] = 100;
			UpdatePlayerData(killerid, "pZakonp", pData[killerid][pZakonp]);
			GetPlayerPos(playerid, x, y, z);
			if(GetPlayerInterior(killerid) != 0) format(string, 128, "[√Ç√±√•√¨ √Ø√Æ√±√≤√†√¨] %s √±√Æ√¢√•√∞√∏√®√´ √≥√°√®√©√±√≤√¢√Æ √¢ √Ø√Æ√¨√•√π√•√≠√®√®", GetName(killerid));
			else format(string, 128, "[√Ç√±√•√¨ √Ø√Æ√±√≤√†√¨] %s √±√Æ√¢√•√∞√∏√®√´ √≥√°√®√©√±√≤√¢√Æ √Æ√™√Æ√´√Æ {009900}√∞. %s", GetName(killerid), gSAZones[GetZonaName(x, y)][SAZONE_NAME]);
			SFFM(1, COLOR_LITEBLUE, string); SFFM(2, COLOR_LITEBLUE, string); SFFM(21, COLOR_LITEBLUE, string); SFFM(22, COLOR_LITEBLUE, string); SFFM(10, COLOR_LITEBLUE, string);
		}
		if(AffectInfo) {
			if(IsAMafia(killerid) && IsAMafia(playerid)) {
				for(new i= 0; i < sizeof(MZ_Info); i ++) {
					if(pData[killerid][pMember] != pData[playerid][pMember]) {
						if(pData[killerid][pMember] == MZ_Info[i][maf_Napad] || pData[killerid][pMember] == MZ_Info[i][maf_FrakVlad])
						{
							if(pData[playerid][pMember] == MZ_Info[i][maf_Napad] || pData[playerid][pMember] == MZ_Info[i][maf_FrakVlad]) {
								SendDead(pData[killerid][pMember],pData[playerid][pMember],killerid,playerid,reason);
								SetPVarInt(killerid,"killed_shot", GetPVarInt(killerid,"killed_shot") + 1);
								CountOnZone[pData[killerid][pMember]]++;
								mysql_format(mysql_Handle,string,164,"UPDATE `accounts` SET `kill_capture` = `kill_capture` + '1' WHERE `id` = %i ", pData[killerid][pID]), mysql_tquery(mysql_Handle,string);
								break;
							}
						}
					}
				}
			}
		}
		if(CaptureInfo) {
			if(IsAGang(killerid) && IsAGang(playerid)) {
				for(new i= 0; i < sizeof(GZInfo); i ++) {
					if(pData[killerid][pMember] != pData[playerid][pMember]) {
						if(pData[killerid][pMember] == GZInfo[i][gNapad] || pData[killerid][pMember] == GZInfo[i][gFrakVlad])
						{
							if(pData[playerid][pMember] == GZInfo[i][gNapad] || pData[playerid][pMember] == GZInfo[i][gFrakVlad]) {
								SendDead(pData[killerid][pMember],pData[playerid][pMember],killerid,playerid,reason);
								SetPVarInt(killerid,"killed_shot", GetPVarInt(killerid,"killed_shot") + 1);
								CountOnZone[pData[killerid][pMember]]++;
								mysql_format(mysql_Handle,string,164,"UPDATE `accounts` SET `kill_capture` = `kill_capture` + '1' WHERE `id` = %i ", pData[killerid][pID]), mysql_tquery(mysql_Handle,string);
								break;
							}
						}
					}
				}
			}
		}
		if(pData[playerid][pWanted] > 0) {
			if(IsACop(killerid)) {
				if(pData[playerid][pWanted] == 1) {
					GivePayDayMoney(killerid, 200);
					SCM(killerid, COLOR_LITEBLUE, "√Ç√†√∏√† √Ø√∞√•√¨√®√ø √ß√† √≠√•√©√≤√∞√†√´√®√ß√Æ√¢√†√≠√≠√Æ√£√Æ √Ø√∞√•√±√≤√≥√Ø√≠√®√™√†: 200$");
					pData[playerid][pJailTime] = 600;
				}
				else if(pData[playerid][pWanted] == 2) {
					GivePayDayMoney(killerid, 400);
					SCM(killerid, COLOR_LITEBLUE, "√Ç√†√∏√† √Ø√∞√•√¨√®√ø √ß√† √≠√•√©√≤√∞√†√´√®√ß√Æ√¢√†√≠√≠√Æ√£√Æ √Ø√∞√•√±√≤√≥√Ø√≠√®√™√†: 400$");
					pData[playerid][pJailTime] = 1200;
				}
				else if(pData[playerid][pWanted] == 3) {
					GivePayDayMoney(killerid, 600);
					SCM(killerid, COLOR_LITEBLUE, "√Ç√†√∏√† √Ø√∞√•√¨√®√ø √ß√† √≠√•√©√≤√∞√†√´√®√ß√Æ√¢√†√≠√≠√Æ√£√Æ √Ø√∞√•√±√≤√≥√Ø√≠√®√™√†: 600$");
					pData[playerid][pJailTime] = 1800;
				}
				else if(pData[playerid][pWanted] == 4) {
					GivePayDayMoney(killerid, 800);
					SCM(killerid, COLOR_LITEBLUE, "√Ç√†√∏√† √Ø√∞√•√¨√®√ø √ß√† √≠√•√©√≤√∞√†√´√®√ß√Æ√¢√†√≠√≠√Æ√£√Æ √Ø√∞√•√±√≤√≥√Ø√≠√®√™√†: 800$");
					pData[playerid][pJailTime] = 2400;
				}
				else if(pData[playerid][pWanted] == 5) {
					GivePayDayMoney(killerid, 1000);
					SCM(killerid, COLOR_LITEBLUE, "√Ç√†√∏√† √Ø√∞√•√¨√®√ø √ß√† √≠√•√©√≤√∞√†√´√®√ß√Æ√¢√†√≠√≠√Æ√£√Æ √Ø√∞√•√±√≤√≥√Ø√≠√®√™√†: 1000$");
					pData[playerid][pJailTime] = 3000;
				}
				else if(pData[playerid][pWanted] >= 6) {
					GivePayDayMoney(killerid, 1200);
					SCM(killerid, COLOR_LITEBLUE, "√Ç√†√∏√† √Ø√∞√•√¨√®√ø √ß√† √≠√•√©√≤√∞√†√´√®√ß√Æ√¢√†√≠√≠√Æ√£√Æ √Ø√∞√•√±√≤√≥√Ø√≠√®√™√†: 1200$");
					pData[playerid][pJailTime] = 3600;
				}

				format(string, 128, "[√Ç√±√•√¨ √Ø√Æ√±√≤√†√¨] %s %s √≠√•√©√≤√∞√†√´√®√ß√Æ√¢√†√´ √Ø√∞√•√±√≤√≥√Ø√≠√®√™√† %s (√≥√∞√Æ√¢√•√≠√º √∞√Æ√ß√ª√±√™√†: %d)",
				new_rank_name[pData[killerid][pMember] - 1][pData[killerid][pRank] - 1], GetName(killerid), GetName(playerid), pData[playerid][pWanted]);
				SFFM(1, COLOR_LITEBLUE, string); SFFM(2, COLOR_LITEBLUE, string); SFFM(21, COLOR_LITEBLUE, string); SFFM(22, COLOR_LITEBLUE, string); SFFM(10, COLOR_LITEBLUE, string);
				foreach(new i:Player) {
					if(!IsACop(i)) continue;
					if(!pData[i][p_setting][3]) continue;
					PlayerPlaySound(i, 21001, 0.0, 0.0, 0.0);
				}

				pData[playerid][pWanted] = 0;
				SetPlayerWantedLevel(playerid, 0);

				SetTimerEx("animjail_death", 5000, 0, "i", playerid);
				string[0] = EOS;
				mysql_format(mysql_Handle, string, 144, "UPDATE `accounts` SET `pJailTime` = %i, `pWanted` = '0' WHERE `id` = %d", pData[playerid][pJailTime], pData[playerid][pID]);
				mysql_tquery(mysql_Handle, string);
			}	
		}
	}
	return 1;
}
CB: animjail_death(playerid) return start_animjail(playerid);
public OnPlayerSpawn(playerid)
{
	if(IsPlayerNPC(playerid)) {
		new npcname[MAX_PLAYER_NAME];
		GetPlayerName(playerid,npcname,sizeof(npcname));

		if(!strcmp(npcname, "Andrey_Ringo", true))
		{
			PutPlayerInVehicle(playerid, train[0], 0);
			SetPlayerColor(playerid, 0xFFFFFFFF);
			SetPlayerSkin(playerid, 259);
		}
		else if(!strcmp(npcname, "Tony_Barrera", true))
		{
			PutPlayerInVehicle(playerid, train[1], 0);
			SetPlayerColor(playerid, 0xFFFFFFFF);
			SetPlayerSkin(playerid, 259);
		}
		else if(!strcmp(npcname, "El_Capone", true))
		{
			PutPlayerInVehicle(playerid, train[2], 0);
			SetPlayerColor(playerid, 0xFFFFFFFF);
			SetPlayerSkin(playerid, 259);
		}
		return 1;
	}
	if(!IsPlayerConnected(playerid)) return 1;
	if(GetPVarInt(playerid, "Register_ChooseSkin")) return 1;

	preload_anim_libs(playerid);

	Derby_OnPlayerSpawn(playerid);

	if(GetPVarInt(playerid, "RegisterPlayer")==1) 
	{
		SCM(playerid, COLOR_ERROR, "√Ç√¢√•√§√®√≤√• √™√Æ√¨√†√≠√§√≥ /q (/quit) √§√´√ø √¢√ª√µ√ÆS√≠");
		SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CERROR"√é√∏√®√°√™√†", ""CWHITE"√Ñ√´√ø √®√£√∞√ª √≠√† √±√•√∞√¢√•√∞√• √Ç√ª √§√Æ√´√¶√≠√ª √Ø√∞√Æ√©√≤√® √∞√•√£√®√±√≤√∞√†√∂√®√æ", "Cerrar", "");
		return Kick(playerid);
	}

	if(pData[playerid][pLogin]==false)
	{
		SCM(playerid, COLOR_ERROR, "√Ç√¢√•√§√®√≤√• √™√Æ√¨√†√≠√§√≥ /q (/quit) √§√´√ø √¢√ª√µ√ÆS√≠");
		SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CERROR"√é√∏√®√°√™√†", ""CWHITE"√Ñ√´√ø √®√£√∞√ª √≠√† √±√•√∞√¢√•√∞√• √Ç√ª √§√Æ√´√¶√≠√ª √†√¢√≤√Æ√∞√®√ß√Æ√¢√†√≤√º√±√ø", "Cerrar", "");
		return Kick(playerid);
	}

	update_items_inventory(playerid);

    ResetPlayerMoney(playerid);
    GivePlayerMoney(playerid, pData[playerid][pCash]);

	SetPlayerScore(playerid, pData[playerid][pLevel]);
	SetPlayerColor(playerid, FractionInfo[pData[playerid][pMember]][fColor]);
	SetPlayerHealth(playerid, pData[playerid][p_hp], true);
	ResetPlayerWeapons(playerid);
	if(pData[playerid][p_premium])
	{
		for(new i = 0; i < 13; i++) 
		{
			if(pData[playerid][pWeapons][i] > 0) GivePlayerWeapon(playerid, pData[playerid][pWeapons][i], pData[playerid][pAmmos][i]);
		}
	}
	if(pData[playerid][pMember]) SetPlayerSkin(playerid, pData[playerid][pModel]);
	else SetPlayerSkin(playerid, pData[playerid][pChar]);

	DisablePlayerCheckpoint(playerid);
	SetCameraBehindPlayer(playerid);

	if(pTemp[playerid][pSpectate])
	{
		HideMenuForPlayer(sp_menu, playerid);
		pTemp[playerid][pSpectate] = false;
		pTemp[playerid][pSpectateID] = INVALID_PLAYER_ID;
		SetPlayerPos(playerid,gPlayerPosition[playerid][0],gPlayerPosition[playerid][1],gPlayerPosition[playerid][2]);
		SetPlayerFacingAngle(playerid,gPlayerPosition[playerid][3]);
		SetPlayerInterior(playerid, gplayer_info[playerid][0]);
		return SetPlayerVirtualWorld(playerid, gplayer_info[playerid][1]);
	}
	if(pData[playerid][pPrisonTime] > 0 || pData[playerid][pJailTime] > 0) {
		load_mode(playerid);
		SetPlayerVirtualWorld(playerid, 8);
		SetPlayerHealth(playerid, 100.0);
		SetPlayerInterior(playerid, 8);
		switch(random(20)) {
			case 0: {
				SetPlayerPos(playerid,-86.1757,2424.1973,1179.3195);
				SetPlayerFacingAngle(playerid, 0.0);
			}
			case 1: {
				SetPlayerPos(playerid,-80.0939,2424.6489,1179.3195);
				SetPlayerFacingAngle(playerid, 0.0);
			}
			case 2: {
				SetPlayerPos(playerid,-74.9519,2424.6694,1179.3195);
				SetPlayerFacingAngle(playerid, 0.0);
			}
			case 3: {
				SetPlayerPos(playerid,-69.5970,2424.6899,1179.3195);
				SetPlayerFacingAngle(playerid, 0.0);
			}
			case 4: {
				SetPlayerPos(playerid,-64.4590,2424.7109,1179.3195);
				SetPlayerFacingAngle(playerid, 0.0);
			}
			case 5: {
				SetPlayerPos(playerid,-86.2076,2444.1360,1179.3195);
				SetPlayerFacingAngle(playerid, 180.0);
			}
			case 6: {
				SetPlayerPos(playerid,-80.2234,2444.2324,1179.3195);
				SetPlayerFacingAngle(playerid, 180.0);
			}
			case 7: {
				SetPlayerPos(playerid,-74.9551,2444.3174,1179.3195);
				SetPlayerFacingAngle(playerid, 180.0);
			}
			case 8: {
				SetPlayerPos(playerid,-69.6867,2444.4028,1179.3195);
				SetPlayerFacingAngle(playerid, 180.0);
			}
			case 9: {
				SetPlayerPos(playerid,-64.4344,2444.4883,1179.3195);
				SetPlayerFacingAngle(playerid, 180.0);
			}
			case 10: {
				SetPlayerPos(playerid,-88.6233,2424.1128,1183.1563);
				SetPlayerFacingAngle(playerid, 0.0);
			}
			case 11: {
				SetPlayerPos(playerid,-82.4063,2424.1260,1183.1563);
				SetPlayerFacingAngle(playerid, 0.0);
			}
			case 12: {
				SetPlayerPos(playerid,-77.1104,2424.1509,1183.1563);
				SetPlayerFacingAngle(playerid, 0.0);
			}
			case 13: {
				SetPlayerPos(playerid,-71.7665,2424.1758,1183.1563);
				SetPlayerFacingAngle(playerid, 0.0);
			}
			case 14: {
				SetPlayerPos(playerid,-66.8396,2424.1992,1183.1563);
				SetPlayerFacingAngle(playerid, 0.0);
			}
			case 15: {
				SetPlayerPos(playerid,-88.4569,2446.0198,1183.1563);
				SetPlayerFacingAngle(playerid, 180.0);
			}
			case 16: {
				SetPlayerPos(playerid,-82.2282,2446.3242,1183.1563);
				SetPlayerFacingAngle(playerid, 180.0);
			}
			case 17: {
				SetPlayerPos(playerid,-77.0195,2446.1687,1183.1563);
				SetPlayerFacingAngle(playerid, 180.0);
			}
			case 18: {
				SetPlayerPos(playerid,-71.8914,2445.4644,1183.1563);
				SetPlayerFacingAngle(playerid, 180.0);
			}
			case 19: {
				SetPlayerPos(playerid,-66.6477,2445.3081,1183.1563);
				SetPlayerFacingAngle(playerid, 180.0);
			}
		}
		SetCameraBehindPlayer(playerid);
		if(pData[playerid][pSex] == 1) {
			switch(random(2)) {
				case 0: SetPlayerSkin(playerid, 8);
				case 1: SetPlayerSkin(playerid, 42);
			}
		}
		else SetPlayerSkin(playerid, 69);
		return 1;
	}

	for(new index = 0; index < MAX_PLAYER_ATTACHED_OBJECTS; index ++) {
		if(IsPlayerAttachedObjectSlotUsed(playerid, index)) RemovePlayerAttachedObject(playerid, index);
		if(!PLAYER_AO[playerid][index][g_modelid]) continue;
		SetPlayerAttachedObject(playerid,index,PLAYER_AO[playerid][index][g_modelid],PLAYER_AO[playerid][index][g_boneid],
			PLAYER_AO[playerid][index][g_fOffsetX],PLAYER_AO[playerid][index][g_fOffsetY],PLAYER_AO[playerid][index][g_fOffsetZ],
			PLAYER_AO[playerid][index][g_fRotX],PLAYER_AO[playerid][index][g_fRotY],PLAYER_AO[playerid][index][g_fRotZ],
			PLAYER_AO[playerid][index][g_fScaleX],PLAYER_AO[playerid][index][g_fScaleY],PLAYER_AO[playerid][index][g_fScaleZ],
			PLAYER_AO[playerid][index][g_COLOR1],PLAYER_AO[playerid][index][g_COLOR2]);
	}
	if(pData[playerid][pSpawn] == 4 && pData[playerid][pFlat] == -1 && pData[playerid][p_rent_flat] == -1) {
		pData[playerid][pSpawn] = 0;
		UpdatePlayerData(playerid, "pSpawn", 0);
	}
	if(pData[playerid][pSpawn] == 3 && pData[playerid][pHotel] == -1) {
		pData[playerid][pSpawn] = 0;
		UpdatePlayerData(playerid, "pSpawn", 0);
	}
	if(pData[playerid][pSpawn] == 2 && !pData[playerid][pMember]) {
		pData[playerid][pSpawn] = 0;
		UpdatePlayerData(playerid, "pSpawn", 0);
	}
	if(pData[playerid][pSpawn] == 1 && pData[playerid][pHouse] == -1) {
		pData[playerid][pSpawn] = 0;
		UpdatePlayerData(playerid, "pSpawn", 0);
	}
	if(pData[playerid][p_hp] < 11.0) {
		if(pData[playerid][pSpawn] == 2 && (IsAGang(playerid) || IsAMafia(playerid))) 
			SetPlayerHealth(playerid, 100);
		else {
			switch(random(4)) {
				case 0: {
					SetPlayerPos(playerid, 1183.0435,-1346.2015,1584.9778);
					SetPlayerFacingAngle(playerid, 270);
				}
				case 1: {
					SetPlayerPos(playerid, 1198.8915,-1346.1202,1584.9851);
					SetPlayerFacingAngle(playerid, 90);
				}
				case 2: {
					SetPlayerPos(playerid, 1184.3538,-1353.8655,1584.9778);
					SetPlayerFacingAngle(playerid, 270);
				}
				case 3: {
					SetPlayerPos(playerid, 1199.1539,-1353.8708,1584.9778);
					SetPlayerFacingAngle(playerid, 90);
				}
			}

			load_mode(playerid);

			SetCameraBehindPlayer(playerid);
			if(pData[playerid][pLevel] < 3) SetPlayerVirtualWorld(playerid, 1);
			else if(pData[playerid][pLevel] > 2 && pData[playerid][pLevel] < 7) SetPlayerVirtualWorld(playerid, 2);
			else SetPlayerVirtualWorld(playerid, 3);
			SetPlayerInterior(playerid, 1);
			return SetPlayerHealth(playerid, 10.0);
		}
	}
	if((pData[playerid][pFlat] != -1 || pData[playerid][p_rent_flat] != -1) && pData[playerid][pSpawn] == 4) {
		new flat_id;
		if(pData[playerid][pFlat] != -1) flat_id = pData[playerid][pFlat];
		else flat_id = pData[playerid][p_rent_flat];

		new obj_first = first_obj_flat[playerid],
			obj_last = last_obj_flat[playerid] + 1;

		if(IsValidDynamicObject(obj_first)) {
			for(new l = obj_first; l != obj_last; l ++) 
				DestroyDynamicObject(l);
		}

		new vw = flat_id + 1;
		switch(flat_id) {
			case 1..4: create_floor_objs_1(playerid, vw);
			case 5..8: create_floor_objs_2(playerid, vw);
			case 9..12: create_floor_objs_3(playerid, vw);
			case 13..16: create_floor_objs_4(playerid, vw);
			case 17..20: create_floor_objs_5(playerid, vw);
			case 21..24: create_floor_objs_6(playerid, vw);
			case 25..28: create_floor_objs_7(playerid, vw);
			case 29..32: create_floor_objs_8(playerid, vw);
			case 33..36: create_floor_objs_9(playerid, vw);
			case 37..40: create_floor_objs_10(playerid, vw);
			case 41..44: create_floor_objs_11(playerid, vw);
			case 45..48: create_floor_objs_12(playerid, vw);
		}

		SetPlayerVirtualWorld(playerid, vw);
		return SetPlayerPos(playerid, flat_info[flat_id][fl_exitposX], flat_info[flat_id][fl_exitposY], flat_info[flat_id][fl_exitposZ]);
	}
	if(pData[playerid][pHotel] != -1 && pData[playerid][pSpawn] == 3) {
		hotel_enter[playerid] = pData[playerid][pHotel];
		SetPlayerInterior(playerid, 3);
		load_mode(playerid);
		SetPlayerVirtualWorld(playerid, hotel_enter[playerid]);
		SetPlayerPos(playerid, 1243.9562,-959.1254,1253.7880);
		SetPlayerFacingAngle(playerid, 0.0);
		return SetCameraBehindPlayer(playerid);
	}
	if(pData[playerid][pHouse] != -1 && pData[playerid][pSpawn] == 1) {
		new house = pData[playerid][pHouse];
		SetPlayerInterior(playerid,HouseInfo[house][hInt]);
		SetPlayerPos(playerid, HouseInfo[house][hExit][0], HouseInfo[house][hExit][1],HouseInfo[house][hExit][2]+0.25);
		SetPlayerVirtualWorld(playerid, house + 50);
		SetPlayerFacingAngle(playerid,0);
		SetCameraBehindPlayer(playerid);
		return SetPVarInt(playerid, "HouseID", house);
	}
	new frac = pData[playerid][pMember];
	if(pData[playerid][pSpawn] == 0) {
		if(pData[playerid][pLevel] >= 10) {
			SetPlayerPos(playerid, 2839.4968,1303.2102,11.3906);
			SetPlayerFacingAngle(playerid, 90.0);
		}
		else if(pData[playerid][pLevel] >= 5) {
			SetPlayerPos(playerid, -1972.8376, 126.9576, 27.6873);
			SetPlayerFacingAngle(playerid, 90.0);
		}
		else {
			switch(random(2)) {
				case 0: {
					SetPlayerPos(playerid, 1153.4718, -1768.6927, 16.5938);
					SetPlayerFacingAngle(playerid, 0.0);
				}
				case 1: {
					SetPlayerPos(playerid, 1763.2140,-1894.0676,13.5612);
					SetPlayerFacingAngle(playerid, 270.0);
				}
			}
		}
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else {
		load_mode(playerid,4500);
		SetPlayerPos(playerid, FractionInfo[frac][fPosX],FractionInfo[frac][fPosY],FractionInfo[frac][fPosZ]);
		SetPlayerFacingAngle(playerid, FractionInfo[frac][fPosA]);
		SetPlayerInterior(playerid, FractionInfo[frac][fractionInt]);
		SetPlayerVirtualWorld(playerid, FractionInfo[frac][fractionVirt]);
	}
	
	return SetSpawnInfo(playerid, 255, (!frac ? (pData[playerid][pChar]) : (pData[playerid][pModel])), FractionInfo[frac][fPosX], FractionInfo[frac][fPosY], FractionInfo[frac][fPosZ], FractionInfo[frac][fPosA], 0,0,0,0,0,0);
}
SaveAccessories(i,slot) {
	string[0] = EOS;
	format(string,250,"UPDATE `accounts` SET `AccessoriesSlot%i` = '%i,%i,%f,%f,%f,%f,%f,%f,%f,%f,%f,%i' WHERE `Name`='%s' LIMIT 1",slot,
	PLAYER_AO[i][slot - 1][g_modelid],PLAYER_AO[i][slot - 1][g_boneid],
	PLAYER_AO[i][slot - 1][g_fOffsetX],PLAYER_AO[i][slot - 1][g_fOffsetY],PLAYER_AO[i][slot - 1][g_fOffsetZ],
	PLAYER_AO[i][slot - 1][g_fRotX],PLAYER_AO[i][slot - 1][g_fRotY],PLAYER_AO[i][slot - 1][g_fRotZ],
	PLAYER_AO[i][slot - 1][g_fScaleX],PLAYER_AO[i][slot - 1][g_fScaleY],PLAYER_AO[i][slot - 1][g_fScaleZ],
	PLAYER_AO[i][slot-1][acs_color_type],
	GetName(i));
	mysql_tquery(mysql_Handle, string);
}

CB: afmoveObj(objid,type) {
	switch(type) {
		case 0: MoveDynamicObject(objid, 2158.060791, -2252.074218, 13.179128, 1.5);
		case 1: MoveDynamicObject(objid, 2157.943359, -2251.731933, 12.469744, 1.5);
		case 2, 3: MoveDynamicObject(objid, 2156.847167, -2252.463623, 13.598916, 1.5);
		case 4: MoveDynamicObject(objid, 2157.549316, -2252.281494, 13.177148, 1.5);
		case 5: MoveDynamicObject(objid, 2157.421386, -2252.537597, 13.677923, 1.5);
	}
	return 1;
}
CB: afRemoveObj(obj) return DestroyDynamicObject(obj);
CB: checkles(playerid) {
	JobLC[playerid]++;
	if(JobLC[playerid] >= 100) {
		if(lable_matr[playerid] == true) return 1;
		ApplyAnimation(playerid, "CARRY","crry_prtial",4.1,1,0,0,1,1,5);
		RemovePlayerAttachedObject(playerid, 2);
		SetPlayerAttachedObject(playerid, 2 , 1453, 1, 0.114699, 0.366247, 0.000000, 0.000000, 0.0000000);
		JobLCheck[playerid] = true;
		lable_matr[playerid] = true;
		format(string, 64, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~READY");
		GameTextForPlayer(playerid, string, 2500, 3);
		SetPlayerSpecialAction(playerid, 25);
		SetPlayerCheckpoint(playerid, -1971.5858, -2431.5115, 30.6250, 3.0);
		return SCM(playerid, COLOR_PALEGREEN, "√é√≤√≠√•√±√®√≤√• √¨√†√≤√•√∞√®√†√´ √≠√† √±√™√´√†√§");
	}
	format(string, 64, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~READY TO: ~w~%d%", JobLC[playerid]);
	GameTextForPlayer(playerid, string, 1000, 3);
	return SetTimerEx("checkles", 100, false, "d", playerid);
}
public OnPlayerEnterCheckpoint(playerid) {
	if(pTemp[playerid][pSpectate]) 
		return 1;
	if(IsPlayerInRangeOfPoint(playerid,4.0,-1920.5283,-2466.1074,30.9440) || 
		IsPlayerInRangeOfPoint(playerid,4.0,-1905.7477,-2457.5769,31.2934) || 
		IsPlayerInRangeOfPoint(playerid,4.0,-1908.2856,-2475.8081,31.8134) || 
		IsPlayerInRangeOfPoint(playerid,4.0,-1969.3573,-2499.4819,34.3742)) {
		if(JobL[playerid] == true) {
			DisablePlayerCheckpoint(playerid);
			ApplyAnimation(playerid, "BASEBALL", "Bat_4", 4.1, 1, 0, 0, 1, 0);
			SetPlayerAttachedObject(playerid, 2, 341, 6, 0.037000, -0.153000, -0.113999, 0.000000, -85.799987, 29.600000, 1.000000, 1.000000, 1.000000, 0, 0);
			SetTimerEx("checkles", 100, false, "d", playerid);
		}
	}
	if(IsPlayerInRangeOfPoint(playerid, 5, 549.4506,-1288.6519,17.2482) || 
		IsPlayerInRangeOfPoint(playerid, 5, 2456.5261,1331.5010,10.8203) || 
		IsPlayerInRangeOfPoint(playerid, 5, -1639.0928,1202.4246,7.2246)) {
		DisablePlayerCheckpoint(playerid);
		if(GetPlayerVehicleID(playerid) != af_carID[playerid] || GetPlayerState(playerid) != PLAYER_STATE_DRIVER) 
			return 1;
		new rem=af_hprem[playerid];
		RemoveCarFromTruckBody(playerid);
		af_player_lootstatus[playerid] = false;
		af_player_status[playerid] = false;
		new money;
		switch(af_carList[playerid]) {
			case 0: money = 4400;
			case 1: money = 7000;
			case 2: money = 8500;
			case 3: money = 8000;
			case 4: money = 7500;
			case 5: money = 6000;
			case 6: money = 5000;
			case 7: money = 5500;
			case 8: money = 6500;
			case 9: money = 4500;
			case 10: money = 3500;
			case 11: money = 3000;
			case 12: money = 4000;
			case 13: money = 7000;
			case 14: money = 4500;
			case 15: money = 12000;
		}
		switch(random(6)) {
			case 0, 1, 2: money += 1000;
			case 3, 4: money += 2000;
			case 5: money += 3000;
		}

		if(IsPlayerInRangeOfPoint(playerid, 5, 2456.5261,1331.5010,10.8203)) 
			money += 3000;
		else if(IsPlayerInRangeOfPoint(playerid, 5, -1639.0928,1202.4246,7.2246)) 
			money += 2000;

		new remmoney;
		if(rem >= 300) remmoney = 2000;
		if(rem >= 200) remmoney = 1500;
		if(rem >= 100) remmoney = 1000;
		if(rem >= 50) remmoney = 500;
		if(rem >= 20) remmoney = 300;
		if(rem > 0) remmoney = 200;

		Hook_GivePlayerMoney(playerid,money-remmoney);
		new strg[50];
		if(rem>0) format(strg,sizeof(strg),"~b~+%d$~n~~r~-%d$",money,remmoney);
		else format(strg,sizeof(strg),"~b~+%d$",money);
		GameTextForPlayer(playerid, strg, 3000, 1);
		autoBankCount += money/2;
		
		mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `autoBankCount` = %d", autoBankCount);
		mysql_tquery(mysql_Handle, string);
		SCM(playerid,COLOR_MAIN,"√Ä√¢√≤√Æ√¨√Æ√°√®√´√º √≥√±√Ø√•√∏√≠√Æ √§√Æ√±√≤√†√¢√´√•√≠ √¢ √†√¢√≤√Æ√±√†√´√Æ√≠. √é√≤√Ø√∞√†√¢√´√ø√©√≤√•√±√º √ß√† √Ø√Æ√£√∞√≥√ß√™√Æ√© √≠√Æ√¢√Æ√£√Æ √≠√† √¥√†√°√∞√®√™√≥");
		SCMF(playerid,COLOR_MAIN,"√Ç√ª √Ø√Æ√´√≥√∑√®√´√® "CYELLOW"%d$",money);
		if(rem>0) SCMF(playerid,COLOR_MAIN,"√á√† √∞√•√¨√Æ√≠√≤ √†√¢√≤√Æ√¨√Æ√°√®√´√ø √°√ª√´√Æ √±√≠√ø√≤√Æ "CORANGE"%d$",remmoney);
		af_hprem[playerid]=0;
	}
	if(af_player_lootstatus[playerid] && !af_player_loadready[playerid]) {
		if(!IsPlayerInAnyVehicle(playerid))
		{
			if(!IsPlayerInRangeOfPoint(playerid, 2, 2163.5369,-2246.1614,13.2902)) {
				SetPVarInt(playerid,"af_detail_upped",1);
				SetPlayerSpecialAction(playerid, 25);
				SetPlayerCheckpoint(playerid, 2163.5369,-2246.1614,13.2902, 2);
				switch(af_player_cptype[playerid]) {
					case 0: SetPlayerAttachedObject(playerid, 2, 1135, 6, 0.050999, 0.178999, -0.019000, 64.199996, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000, 0, 0);
					case 1: SetPlayerAttachedObject(playerid, 2, 1130, 6, 1.020000, -0.698999, -0.531000, 61.500011, -162.900009, -173.700012, 1.000000, 1.000000, 1.000000, 0, 0);
					case 2, 3: SetPlayerAttachedObject(playerid, 2, 1152, 6, 0.263000, -0.694999, -0.960999, -25.500005, 88.200019, 12.700004, 1.000000, 1.000000, 1.000000, 0, 0);
					case 4: SetPlayerAttachedObject(playerid, 2, 1003, 6, 0.090999, -0.144999, -0.193000, -117.999969, -23.499986, -100.700019, 1.000000, 1.000000, 1.000000, 0, 0);
					case 5: SetPlayerAttachedObject(playerid, 2, 1083, 6, -0.056000, 0.427000, -0.301999, 63.400051, 0.000000, 25.300006, 1.000000, 1.000000, 1.000000, 0, 0);
				}
			}
			else {
				DeletePVar(playerid,"af_detail_upped");
				switch(af_player_cptype[playerid]) {
					case 0: af_player_obj[playerid] = CreateDynamicObject(1135, 2163.089111, -2246.921142, 13.167163, -3.199999, 0.000000, -44.299983);
					case 1: af_player_obj[playerid] = CreateDynamicObject(1130, 2161.927001, -2247.788574, 12.463508, -14.099997, 0.000000, -45.300018);
					case 2, 3: af_player_obj[playerid] = CreateDynamicObject(1152, 2161.082763, -2248.155273, 13.598916, 0.000000, 0.000000, -134.399993);
					case 4: af_player_obj[playerid] = CreateDynamicObject(1003, 2162.341796, -2247.517333, 13.180105, 8.499998, 0.000000, -134.999938);
					case 5: af_player_obj[playerid] = CreateDynamicObject(1083, 2162.969482, -2247.027832, 13.677923, 0.000000, 0.000000, -45.199958);
				}
				SetTimerEx("afmoveObj", 500, 0, "ii", af_player_obj[playerid],af_player_cptype[playerid]);
				SetTimerEx("afRemoveObj", 5000, 0, "i", af_player_obj[playerid]);
				RemovePlayerAttachedObject(playerid, 2);
				SetPlayerSpecialAction(playerid, 0);
				af_player_detailcount[playerid] ++;

				SCMF(playerid,COLOR_MAIN,"√Ñ√•√≤√†√´√º √§√Æ√±√≤√†√¢√´√•√≠√† √≠√† √™√Æ√≠√¢√•√©√•√∞. √Ñ√Æ√±√≤√†√¢√´√•√≠√Æ: {cccc00}%d √®√ß %d",af_player_detailcount[playerid],af_player_details[playerid]);
				
				if(af_player_detailcount[playerid] >= af_player_details[playerid]) {
					DisablePlayerCheckpoint(playerid);
					SCM(playerid,COLOR_LITEBLUE,"√ë√Æ√°√∞√†√≠√Æ √≠√•√Æ√°√µ√Æ√§√®√¨√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √§√•√≤√†√´√•√©");
					SCM(playerid,COLOR_LITEBLUE,"√Ç√ª√©√§√®√≤√• √≠√† √≥√´√®√∂√≥ √® √†√∞√•√≠√§√≥√©√≤√• √£√∞√≥√ß√Æ√¢√Æ√© √≤√∞√†√≠√±√Ø√Æ√∞√≤");
					af_player_loadready[playerid] = true;
				}
				else af_show_random_cp(playerid);
			}
		}
		
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 3.0, -1971.5858, -2431.5115, 30.6250) && JobL[playerid] == true && JobLCheck[playerid] == true) {
		RemovePlayerAttachedObject(playerid,2);
		new rand = random(sizeof(Drova));
		SetPlayerCheckpoint(playerid, Drova[rand][0], Drova[rand][1], Drova[rand][2], 4.0);
		JobLCash[playerid] += oneprod_lesop;
		SetPlayerSpecialAction(playerid, 0);
		lable_matr[playerid] = false;
		SCM(playerid, COLOR_YELLOW, "√å√†√≤√•√∞√®√†√´ √§√Æ√±√≤√†√¢√´√•√≠ √≠√† √±√™√´√†√§. √é√≤√Ø√∞√†√¢√´√ø√©√≤√•√±√º √™ √§√∞√≥√£√Æ√¨√≥ √§√•√∞√•√¢√≥");
		ApplyAnimation(playerid, "CARRY", "PUTDWN", 4.0, 0, 0, 0, 0, 0, 1);
		JobLCheck[playerid] = false;
		JobLC[playerid] = 0;
		JobLM += 5;
	}
	if(IsPlayerInRangeOfPoint(playerid, 3, 2159.2666,-2253.6729,13.3026)) {
		DisablePlayerCheckpoint(playerid);
		return SCM(playerid,-1,"√Ç√¢√•√§√®√≤√• {ff9945}/afstart "CWHITE"√∑√≤√Æ√°√ª √≠√†√∑√†√≤√º √±√°√Æ√∞√™√≥ √†√¢√≤√Æ√¨√Æ√°√®√´√ø");
	}
	if(GetPVarInt(playerid, "vizov_prinyat")) 
		return DisablePlayerCheckpoint(playerid);
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 2222.4976,-2278.0466,13.5469)) {
		if(GetPVarInt(playerid, "loader_job") > 0) {
			SetPlayerCheckpoint(playerid, 2173.0908,-2247.6868,13.3037, 2.0);
			ApplyAnimation(playerid, "CARRY", "LIFTUP", 4.0, 0, 0, 0, 0, 0, 1);
			SetPVarInt(playerid, "loader_bags_in_hands", 1);
			SetPlayerSpecialAction(playerid, 25);
			return SetPlayerAttachedObject(playerid, 2, 1271, 6, 0.108, 0.369999, -0.343, -106.300109, -10.800016, 170.899871, 1.011999, 1.022999, 1.093);
		}
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 2173.0908,-2247.6868,13.3037)) {
		if(GetPVarInt(playerid, "loader_job") > 0) {
			static const fmt_str[] = "√Ç√ª √Ø√•√∞√•√≠√•√±√´√® √£√∞√≥√ß √≠√† √±√™√´√†√§. √é√°√π√•√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √Ø√•√∞√•√≠√•√±¬∏√≠√≠√Æ√£√Æ √£√∞√≥√ß√†: "CMAIN"%d √∏√≤";
			new str[sizeof(fmt_str) + (-2+5)];
			DeletePVar(playerid, "loader_bags_in_hands");
			TogglePlayerControllable(playerid, 1);
			ApplyAnimation(playerid, "CARRY", "PUTDWN", 4.0, 0, 0, 0, 0, 0, 1);
			SetPVarInt(playerid, "loader_bags", GetPVarInt(playerid, "loader_bags") + 1);
			SetPVarInt(playerid, "loader_money", GetPVarInt(playerid, "loader_money") + oneprod_gruz);
			RemovePlayerAttachedObject(playerid, 2);
			SetPlayerSpecialAction(playerid, 0);
			SetPlayerCheckpoint(playerid, 2222.4976,-2278.0466,13.5469, 2.0);
			format(str, sizeof(str), fmt_str, GetPVarInt(playerid, "loader_bags"));
			return SCM(playerid, 0xFF9945FF, str);
		}
	}  
	if(pData[playerid][pLowSkill] == 1 || pData[playerid][pHighSkill] == 1) {
		if(pData[playerid][pMinePr] == 0) {
			DisablePlayerCheckpoint(playerid);
			ApplyAnimation(playerid, "BASEBALL", "Bat_4", 4.1, 1, 0, 0, 1, 15000);
			SetTimerEx("stop_mine", 15000, false, "d", playerid);
		}
		else if(pData[playerid][pMinePr] == 1) // √±√™√´√†√§ √∏√†√µ√≤√ª √¨√•√´√™√Æ√£√Æ √ß√†√´√Æ√¶√•√≠√®√ø
		{
			DisablePlayerCheckpoint(playerid);
			new numbermine = 5+(random(15));
			RemovePlayerAttachedObject(playerid, 8);
			pData[playerid][pMineNumber]+=numbermine;
			AddStorage(1, numbermine);
			SCMF(playerid, COLOR_MAIN, "√Ç√ª √Ø√•√∞√•√≠√•√±√´√® {FFCD00}%d √™√£ "CMAIN"√∞√≥√§√ª. √é√°√π√†√ø √¨√†√±√±√† √§√Æ√±√≤√†√¢√´√•√≠√≠√Æ√© √∞√≥√§√ª: {FFCD00}%d √™√£",numbermine,pData[playerid][pMineNumber]);
			UpdateMineProgress(playerid,pData[playerid][pMineNumber]);
			ApplyAnimation(playerid, "CARRY", "PUTDWN", 4.0, 0, 0, 0, 0, 0, 1);
			switch(random(4)) {
				case 0: SetPlayerCheckpoint(playerid, -732.7345, -1816.6523, -39.0421-1.0, 2.0);
				case 1: SetPlayerCheckpoint(playerid, -727.9667, -1816.1974, -39.0421-1.0, 2.0);
				case 2: SetPlayerCheckpoint(playerid, -724.5775, -1815.4325, -39.0421-1.0, 2.0);
				case 3: SetPlayerCheckpoint(playerid, -724.8226, -1813.5508, -39.0421-1.0, 2.0);
			}
			pData[playerid][pMinePr] = 0;
		}
		else if(pData[playerid][pMinePr] == 2) // √±√™√´√†√§ √∏√†√µ√≤√ª √£√´√≥√°√Æ√™√Æ√£√Æ √ß√†√´√Æ√¶√•√≠√®√ø
		{
			DisablePlayerCheckpoint(playerid);
			new numbermine = 5+(random(15));
			RemovePlayerAttachedObject(playerid, 8);
			pData[playerid][pMineNumber]+=numbermine;
			AddStorage(3, numbermine);
			SCMF(playerid, COLOR_MAIN, "√Ç√ª √Ø√•√∞√•√≠√•√±√´√® {FFCD00}%d √™√£ "CMAIN"√∞√≥√§√ª. √é√°√π√†√ø √¨√†√±√±√† √§√Æ√±√≤√†√¢√´√•√≠√≠√Æ√© √∞√≥√§√ª: {FFCD00}%d √™√£",numbermine,pData[playerid][pMineNumber]);
			UpdateMineProgress(playerid,pData[playerid][pMineNumber]);
			ApplyAnimation(playerid, "CARRY", "PUTDWN", 4.0, 0, 0, 0, 0, 0, 1);
			switch(random(3)) {
				case 0: SetPlayerCheckpoint(playerid, -801.7944, -1794.7133, -89.0200-1.0, 2.0);
				case 1: SetPlayerCheckpoint(playerid, -799.5901, -1796.3623, -89.0200-1.0, 2.0);
				case 2: SetPlayerCheckpoint(playerid, -799.8171, -1798.7997, -89.0200-1.0, 2.0);
			}
			pData[playerid][pMinePr] = 0;
		}
	}
	if(IsPlayerInRaceCheckpoint(playerid)) 
		DisablePlayerRaceCheckpoint(playerid);
	return 1;
}
CB: freezing_ch_reg(playerid) return TogglePlayerControllable(playerid, 1);
CB: bus_stop_0(playerid) {
	SetPlayerRaceCheckpoint(playerid, 0, 1151.8575,-1743.2554,13.4976, 1173.0245,-1809.9047,13.4989, 4.0);
	PlayerPlaySound(playerid, 5201, 0.0, 0.0, 0.0);
}
CB: bus_stop_1(playerid) {
	SetPlayerRaceCheckpoint(playerid, 0, 2282.9563,-2253.3484,13.4926, 2335.3647,-2236.3689,13.4758, 4.0);
	PlayerPlaySound(playerid, 5201, 0.0, 0.0, 0.0);
}
CB: bus_stop_2(playerid) {
	SetPlayerRaceCheckpoint(playerid, 0, 1457.8014,-1729.3776,13.4833, 1325.6018,-1729.2744,13.4835, 4.0);
	PlayerPlaySound(playerid, 5201, 0.0, 0.0, 0.0);
}
CB: bus_stop_3(playerid) {
	SetPlayerRaceCheckpoint(playerid, 0, 1182.0555,-1392.7758,13.3616, 1095.6122,-1393.0779,13.6178, 4.0);
	PlayerPlaySound(playerid, 5201, 0.0, 0.0, 0.0);
}
CB: bus_stop_10(playerid) {
	SetPlayerRaceCheckpoint(playerid, 0, 1153.5239,-1743.5260,13.4989, 1172.9686,-1812.9904,13.4990, 4.0);
	PlayerPlaySound(playerid, 5201, 0.0, 0.0, 0.0);
}
CB: bus_stop_11(playerid) {
	SetPlayerRaceCheckpoint(playerid, 0, -275.5041,-1945.7490,28.5120, -444.4069,-2185.6306,60.0131, 4.0);
	PlayerPlaySound(playerid, 5201, 0.0, 0.0, 0.0);
}
CB: bus_stop_12(playerid) {
	SetPlayerRaceCheckpoint(playerid, 0, -1906.3281,-91.4520,22.8705, -1822.0120,-557.7122,16.2620, 4.0);
	PlayerPlaySound(playerid, 5201, 0.0, 0.0, 0.0);
}
CB: bus_stop_20(playerid) {
	SetPlayerRaceCheckpoint(playerid, 0, 1172.6832,-1777.4250,13.4996, 1172.8854,-1824.3525,13.4990, 4.0);
	PlayerPlaySound(playerid, 5201, 0.0, 0.0, 0.0);
}
CB: bus_stop_21(playerid) {
	SetPlayerRaceCheckpoint(playerid, 0, -1963.9973,-2557.5818,38.6658, -1900.9276,-2677.8350,53.0269, 4.0);
	PlayerPlaySound(playerid, 5201, 0.0, 0.0, 0.0);
}
stock IsPlayerApplyAnimation(playerid, animation[]) {
	new anim_index = GetPlayerAnimationIndex(playerid);
    if(!anim_index) return 0;
    new animlib[32], animname[32];
    GetAnimationName(anim_index, animlib, sizeof(animlib), animname, sizeof(animname));
    if(!strcmp(animname, animation, true)) return 1;
    return 0;
}
stock AddRandomCostBus(playerid) {
	switch(random(6)) {
		case 0: bus_payday[playerid] += 22; case 1: bus_payday[playerid] += 24;
		case 2: bus_payday[playerid] += 26; case 3: bus_payday[playerid] += 28;
		case 4: bus_payday[playerid] += 30; case 5: bus_payday[playerid] += 32;
	}
}
CB: bus_redend_1(playerid) { TogglePlayerControllable(playerid, 1); SPD(playerid, 698, DIALOG_STYLE_MSGBOX, ""CPALEGREEN"√Ñ√®√±√Ø√•√≤√∑√•√∞", ""CWHITE"√Ç√ª √ß√†√¢√•√∞√∏√®√´√® √∞√•√©√±. √ï√Æ√≤√®√≤√• √Ø√∞√Æ√§√Æ√´√¶√®√≤√º √∞√†√°√Æ√≤√≥?", "S√≠", "No"); }
CB: bus_redend_2(playerid) { TogglePlayerControllable(playerid, 1); SPD(playerid, 498, DIALOG_STYLE_MSGBOX, ""CPALEGREEN"√Ñ√®√±√Ø√•√≤√∑√•√∞", ""CWHITE"√Ç√ª √ß√†√¢√•√∞√∏√®√´√® √∞√•√©√±. √ï√Æ√≤√®√≤√• √Ø√∞√Æ√§√Æ√´√¶√®√≤√º √∞√†√°√Æ√≤√≥?", "S√≠", "No"); }
CB: bus_redend_3(playerid) { TogglePlayerControllable(playerid, 1); SPD(playerid, 298, DIALOG_STYLE_MSGBOX, ""CPALEGREEN"√Ñ√®√±√Ø√•√≤√∑√•√∞", ""CWHITE"√Ç√ª √ß√†√¢√•√∞√∏√®√´√® √∞√•√©√±. √ï√Æ√≤√®√≤√• √Ø√∞√Æ√§√Æ√´√¶√®√≤√º √∞√†√°√Æ√≤√≥?", "S√≠", "No"); }
public OnPlayerEnterRaceCheckpoint(playerid) {
	DisablePlayerRaceCheckpoint(playerid);
	new veh = GetPlayerVehicleID(playerid);
	if(bloody_en[playerid] && GetPlayerInterior(playerid) == 15 && GetPlayerVirtualWorld(playerid) == 10) {
		foreach(new i:Player) if(bloody_en[i]) DisablePlayerRaceCheckpoint(i);
		switch(random(10)) {
			case 0: foreach(new i:Player) if(bloody_en[i]) SetPlayerRaceCheckpoint(i, 2, -1471.0645,971.4245,1027.3722, -1471.0645,971.4245,1027.3722, 5.0);
			case 1: foreach(new i:Player) if(bloody_en[i]) SetPlayerRaceCheckpoint(i, 2, -1426.2859,1039.4310,1029.3171, -1426.2859,1039.4310,1029.3171, 5.0);
			case 2: foreach(new i:Player) if(bloody_en[i]) SetPlayerRaceCheckpoint(i, 2, -1454.0847,963.0660,1026.7484, -1454.0847,963.0660,1026.7484, 5.0);
			case 3: foreach(new i:Player) if(bloody_en[i]) SetPlayerRaceCheckpoint(i, 2, -1312.2671,965.5823,1031.9535, -1312.2671,965.5823,1031.9535, 5.0);
			case 4: foreach(new i:Player) if(bloody_en[i]) SetPlayerRaceCheckpoint(i, 2, -1367.9263,1001.8190,1024.1577,-1367.9263,1001.8190,1024.1577, 5.0);
			case 5: foreach(new i:Player) if(bloody_en[i]) SetPlayerRaceCheckpoint(i, 2, -1440.1476,987.6335,1024.0474,-1440.1476,987.6335,1024.0474, 5.0);
			case 6: foreach(new i:Player) if(bloody_en[i]) SetPlayerRaceCheckpoint(i, 2, -1357.5018,932.1769,1036.3202,-1357.5018,932.1769,1036.3202, 5.0);
			case 7: foreach(new i:Player) if(bloody_en[i]) SetPlayerRaceCheckpoint(i, 2, -1489.3121,1043.1935,1038.4030,-1489.3121,1043.1935,1038.4030, 5.0);
			case 8: foreach(new i:Player) if(bloody_en[i]) SetPlayerRaceCheckpoint(i, 2, -1339.5013,1041.4573,1033.7622,-1339.5013,1041.4573,1033.7622, 5.0);
			case 9: foreach(new i:Player) if(bloody_en[i]) SetPlayerRaceCheckpoint(i, 2, -1409.1676,936.8224,1036.4786,-1409.1676,936.8224,1036.4786, 5.0);
		}
		PlayerPlaySound(playerid, 1137, 0.0, 0.0, 0.0);
		timer_plbloody[playerid] += 15;
		new tempstr[15];
		format(tempstr, 15, "~b~%02d", timer_plbloody[playerid]);
		PlayerTextDrawSetString(playerid, td_playerbloody[playerid], tempstr);
		GameTextForPlayer(playerid, "~g~+15 seconds~n~~w~timer", 3000, 1);
	}
	if(player_is_drivebus[playerid]) {
		if(checkpoint_bus_fores[playerid] == 0) {
			if(!VehToPoint(30.0, veh, 1121.8436,-1743.6327,13.5318)) 
				return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CERROR"√Ä√≠√≤√®√∑√®√≤", ""CWHITE"√Ç√ª √Ø√Æ√§√Æ√ß√∞√•√¢√†√•√≤√•√±√º √¢ √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√® √±√≤√Æ√∞√Æ√≠√≠√•√£√Æ √è√é √§√´√ø √Ø√•√∞√•√§√¢√®√¶√•√≠√®√ø √Ø√Æ √∑√•√™√Ø√Æ√®√≠√≤√†√¨.\n√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø √∞√†√°√Æ√≤√ª √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √≥√±√≤√∞√Æ√®√≤√º√±√ø √≠√† √≠√•¬∏ √ß√†√≠√Æ√¢√Æ.", "Cerrar", "");
			checkpoint_bus_fores[playerid] ++;
			PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
			AddRandomCostBus(playerid);
			SCM(playerid, COLOR_LITEBLUE, "√é√±√≤√†√≠√Æ√¢√™√†. √é√¶√®S√≠√©√≤√• √Ø√†√±√±√†√¶√®√∞√Æ√¢");
			GameTextForPlayer(playerid, "~r~stop", 3000, 1);
			ProxDetector(30.0, playerid, "√Ä√¢√≤√Æ√°√≥√± √Ø√Æ √¨√†√∞√∏√∞√≥√≤√≥ ¬´√ã√ë ‚Äî √ã√•√±√Æ√Ø√®√´√™√†¬ª √°√≥√§√•√≤ √Æ√≤√Ø√∞√†√¢√´√•√≠ √∑√•√∞√•√ß 10 √±√•√™√≥√≠√§", COLOR_MAIN);
			timer_bus[playerid] = SetTimerEx("bus_stop_20", 10000, false, "d", playerid);
		}
		else if(checkpoint_bus_fores[playerid] == 1) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 1172.8854,-1824.3525,13.4990, 1104.9995,-1849.9764,13.4834, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 2) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 1104.9995,-1849.9764,13.4834, 976.0992,-1781.3879,14.1899, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 3) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 976.0992,-1781.3879,14.1899, 866.4270,-1768.5999,13.4836, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 4) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 866.4270,-1768.5999,13.4836, 682.8939,-1740.7665,13.4481, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 5) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 682.8939,-1740.7665,13.4481, 551.3588,-1717.3093,13.1236, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 6) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 551.3588,-1717.3093,13.1236, 359.0619,-1699.1129,6.7971, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 7) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 359.0619,-1699.1129,6.7971, 170.3756,-1576.1776,12.8428, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 8) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 170.3756,-1576.1776,12.8428, 14.0950,-1518.7966,3.9251, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 9) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 14.0950,-1518.7966,3.9251, -71.6614,-1609.3834,3.2773, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 10) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -71.6614,-1609.3834,3.2773, -184.1315,-1626.9126,3.1877, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 11) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -184.1315,-1626.9126,3.1877, -254.7958,-1737.0305,4.0786, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 12) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -254.7958,-1737.0305,4.0786, -279.8699,-1914.2687,27.4466, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 13) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -279.8699,-1914.2687,27.4466, -295.5536,-2098.2139,40.3752, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 14) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -295.5536,-2098.2139,40.3752, -443.6474,-2185.3267,59.9546, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 15) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -443.6474,-2185.3267,59.9546, -584.4407,-2165.7805,32.6704, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 16) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -584.4407,-2165.7805,32.6704, -687.8511,-2261.2126,16.0389, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 17) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -687.8511,-2261.2126,16.0389, -786.6061,-2460.8013,75.5098, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 18) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -786.6061,-2460.8013,75.5098, -986.3773,-2607.8601,86.3515, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 19) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -986.3773,-2607.8601,86.3515, -1182.5892,-2446.7053,55.1151, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 20) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -1182.5892,-2446.7053,55.1151, -1103.5214,-2162.2871,34.5002, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 21) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -1103.5214,-2162.2871,34.5002, -978.1715,-1939.4053,79.6183, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 22) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -978.1715,-1939.4053,79.6183, -1032.8594,-1904.9343,78.1886, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 23) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -1032.8594,-1904.9343,78.1886, -1186.1876,-1847.0287,66.6257, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 24) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -1186.1876,-1847.0287,66.6257, -1269.4423,-1720.9949,46.1277, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 25) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -1269.4423,-1720.9949,46.1277, -1381.1029,-1651.1208,45.3514, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 26) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -1381.1029,-1651.1208,45.3514, -1545.2494,-1604.5170,37.8301, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 27) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -1545.2494,-1604.5170,37.8301, -1696.8555,-1647.1547,36.3583, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 28) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -1696.8555,-1647.1547,36.3583, -1873.9769,-1752.0585,29.3124, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 29) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -1873.9769,-1752.0585,29.3124, -2052.9436,-1945.2292,54.1170, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 30) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -2052.9436,-1945.2292,54.1170, -2133.2046,-2111.4968,58.5419, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 31) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -2133.2046,-2111.4968,58.5419, -2260.2378,-2203.2971,32.8998, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 32) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -2260.2378,-2203.2971,32.8998, -2211.2583,-2273.2559,30.5681, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 33) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -2211.2583,-2273.2559,30.5681, -2118.4434,-2346.0259,30.5693, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 34) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -2118.4434,-2346.0259,30.5693, -2135.5308,-2393.5569,30.5694, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 35) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -2135.5308,-2393.5569,30.5694, -2079.8862,-2465.6594,30.5694, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 36) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -2079.8862,-2465.6594,30.5694, -2019.4723,-2514.6792,32.8415, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 37) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 1, -2019.4723,-2514.6792,32.8415, 0.0,0.0,0.0, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 38) {
			if(!VehToPoint(30.0, veh, -2019.4723,-2514.6792,32.8415)) 
				return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CERROR"√Ä√≠√≤√®√∑√®√≤", ""CWHITE"√Ç√ª √Ø√Æ√§√Æ√ß√∞√•√¢√†√•√≤√•√±√º √¢ √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√® √±√≤√Æ√∞√Æ√≠√≠√•√£√Æ √è√é √§√´√ø √Ø√•√∞√•√§√¢√®√¶√•√≠√®√ø √Ø√Æ √∑√•√™√Ø√Æ√®√≠√≤√†√¨.\n√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø √∞√†√°√Æ√≤√ª √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √≥√±√≤√∞√Æ√®√≤√º√±√ø √≠√† √≠√•¬∏ √ß√†√≠√Æ√¢√Æ.", "Cerrar", "");
			checkpoint_bus_fores[playerid] +=2;
			PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
			SCM(playerid, COLOR_LITEBLUE, "√é√±√≤√†√≠√Æ√¢√™√†. √é√¶√®S√≠√©√≤√• √Ø√†√±√±√†√¶√®√∞√Æ√¢");
			GameTextForPlayer(playerid, "~r~stop", 3000, 1);
			ProxDetector(30.0, playerid, "√Ä√¢√≤√Æ√°√≥√± √Ø√Æ √¨√†√∞√∏√∞√≥√≤√≥ ¬´√ã√ë ‚Äî √ã√•√±√Æ√Ø√®√´√™√†¬ª √°√≥√§√•√≤ √Æ√≤√Ø√∞√†√¢√´√•√≠ √∑√•√∞√•√ß 10 √±√•√™√≥√≠√§", COLOR_MAIN);
			timer_bus[playerid] = SetTimerEx("bus_stop_21", 10000, false, "d", playerid);
		}
		else if(checkpoint_bus_fores[playerid] == 40) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -1900.9276,-2677.8350,53.0269, -1826.5602,-2681.6428,54.0948, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 41) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -1826.5602,-2681.6428,54.0948, -1670.9742,-2721.0479,47.0267, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 42) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -1670.9742,-2721.0479,47.0267, -1412.9443,-2930.8362,47.0227, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 43) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -1412.9443,-2930.8362,47.0227, -1149.4730,-2867.0750,67.8195, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 44) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -1149.4730,-2867.0750,67.8195, -747.7457,-2800.3167,52.4923, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 45) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -747.7457,-2800.3167,52.4923, -432.7407,-2821.0479,46.7519, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 46) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -432.7407,-2821.0479,46.7519, -187.8763,-2873.2139,39.2829, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 47) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -187.8763,-2873.2139,39.2829, -1.6794,-2595.4336,39.6820, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 48) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -1.6794,-2595.4336,39.6820, -168.0285,-2376.0110,30.6294, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 49) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -168.0285,-2376.0110,30.6294, -244.3147,-2266.7744,28.3578, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 50) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -244.3147,-2266.7744,28.3578, -335.3633,-2009.5223,26.0822, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 51) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -335.3633,-2009.5223,26.0822, -298.5784,-1795.3741,16.5512, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 52) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -298.5784,-1795.3741,16.5512, -269.0009,-1683.3624,14.6802, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 53) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -269.0009,-1683.3624,14.6802, -186.5260,-1543.1991,14.9097, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 54) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -186.5260,-1543.1991,14.9097, 76.8092,-1300.6981,12.9785, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 55) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 76.8092,-1300.6981,12.9785, 622.7234,-1245.4529,17.9094, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 56) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 622.7234,-1245.4529,17.9094, 627.6843,-1642.0878,15.9989, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 57) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 627.6843,-1642.0878,15.9989, 702.2028,-1767.4674,13.8776, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 58) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 702.2028,-1767.4674,13.8776, 990.3301,-1805.7469,14.1569, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 59) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 990.3301,-1805.7469,14.1569, 1119.2719,-1853.8580,13.4834, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 60) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 1119.2719,-1853.8580,13.4834, 1181.7802,-1783.6689,13.5003, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 61) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 1181.7802,-1783.6689,13.5003, 1115.8749,-1738.6165,13.5899, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 62) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 1, 1115.8749,-1738.6165,13.5899, 0.0,0.0,0.0, 4.0), checkpoint_bus_fores[playerid] ++;
		else if(checkpoint_bus_fores[playerid] == 63) {
			if(!VehToPoint(30.0, veh, 1115.8749,-1738.6165,13.5899)) 
				return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CERROR"√Ä√≠√≤√®√∑√®√≤", ""CWHITE"√Ç√ª √Ø√Æ√§√Æ√ß√∞√•√¢√†√•√≤√•√±√º √¢ √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√® √±√≤√Æ√∞√Æ√≠√≠√•√£√Æ √è√é √§√´√ø √Ø√•√∞√•√§√¢√®√¶√•√≠√®√ø √Ø√Æ √∑√•√™√Ø√Æ√®√≠√≤√†√¨.\n√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø √∞√†√°√Æ√≤√ª √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √≥√±√≤√∞√Æ√®√≤√º√±√ø √≠√† √≠√•¬∏ √ß√†√≠√Æ√¢√Æ.", "Cerrar", "");
			checkpoint_bus_fores[playerid] = 0; checkpoint_bus_mine[playerid] = 999; checkpoint_bus[playerid] = 999;
			PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
			SCM(playerid, COLOR_ORANGE, "√Ç√ª √§√Æ√•√µ√†√´√® √§√Æ √™√Æ√≠√•√∑√≠√Æ√© √Æ√±√≤√†√≠√Æ√¢√™√® √¨√†√∞√∏√∞√≥√≤√†");
			ProxDetector(30.0, playerid, "√Ä√¢√≤√Æ√°√≥√± √Ø√Æ √¨√†√∞√∏√∞√≥√≤√≥ ¬´√ã√ë ‚Äî √ã√•√±√Æ√Ø√®√´√™√†¬ª √ß√†√¢√•√∞√∏√®√´ √≤√•√™√≥√π√®√© √∞√•√©√±", COLOR_MAIN);
			TogglePlayerControllable(playerid, 0);
			timer_bus[playerid] = SetTimerEx("bus_redend_3", 1000, false, "d", playerid);
		}
		if(checkpoint_bus_mine[playerid] == 0) {
			if(!VehToPoint(30.0, veh, 1121.8436,-1743.6327,13.5318)) 
				return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CERROR"√Ä√≠√≤√®√∑√®√≤", ""CWHITE"√Ç√ª √Ø√Æ√§√Æ√ß√∞√•√¢√†√•√≤√•√±√º √¢ √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√® √±√≤√Æ√∞√Æ√≠√≠√•√£√Æ √è√é √§√´√ø √Ø√•√∞√•√§√¢√®√¶√•√≠√®√ø √Ø√Æ √∑√•√™√Ø√Æ√®√≠√≤√†√¨.\n√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø √∞√†√°√Æ√≤√ª √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √≥√±√≤√∞√Æ√®√≤√º√±√ø √≠√† √≠√•¬∏ √ß√†√≠√Æ√¢√Æ.", "Cerrar", "");
			checkpoint_bus_mine[playerid] ++;
			PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
			SCM(playerid, COLOR_LITEBLUE, "√é√±√≤√†√≠√Æ√¢√™√†. √é√¶√®S√≠√©√≤√• √Ø√†√±√±√†√¶√®√∞√Æ√¢");
			GameTextForPlayer(playerid, "~r~stop", 3000, 1);
			ProxDetector(30.0, playerid, "√Ä√¢√≤√Æ√°√≥√± √Ø√Æ √¨√†√∞√∏√∞√≥√≤√≥ ¬´√ã√ë ‚Äî √ò√†√µ√≤√† ‚Äî √Ä√¢√≤√Æ√∏√™√Æ√´√†¬ª √°√≥√§√•√≤ √Æ√≤√Ø√∞√†√¢√´√•√≠ √∑√•√∞√•√ß 10 √±√•√™√≥√≠√§", COLOR_MAIN);
			timer_bus[playerid] = SetTimerEx("bus_stop_10", 10000, false, "d", playerid);
		}
		else if(checkpoint_bus_mine[playerid] == 1) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 1172.9686,-1812.9904,13.4990, 1125.2509,-1849.4973,13.4833, 4.0), checkpoint_bus_mine[playerid] ++;
		else if(checkpoint_bus_mine[playerid] == 2) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 1125.2509,-1849.4973,13.4833, 1056.9767,-1827.1205,13.6824, 4.0), checkpoint_bus_mine[playerid] ++;
		else if(checkpoint_bus_mine[playerid] == 3) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 1056.9767,-1827.1205,13.6824, 958.6982,-1778.0519,14.2096, 4.0), checkpoint_bus_mine[playerid] ++;
		else if(checkpoint_bus_mine[playerid] == 4) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 958.6982,-1778.0519,14.2096, 664.2909,-1736.4429,13.6322, 4.0), checkpoint_bus_mine[playerid] ++;
		else if(checkpoint_bus_mine[playerid] == 5) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 664.2909,-1736.4429,13.6322, 414.4190,-1700.2914,9.4074, 4.0), checkpoint_bus_mine[playerid] ++;
		else if(checkpoint_bus_mine[playerid] == 6) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 414.4190,-1700.2914,9.4074, 170.7111,-1575.5603,12.8255, 4.0), checkpoint_bus_mine[playerid] ++;
		else if(checkpoint_bus_mine[playerid] == 7) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 170.7111,-1575.5603,12.8255, 10.2724,-1517.5270,3.6597, 4.0), checkpoint_bus_mine[playerid] ++;
		else if(checkpoint_bus_mine[playerid] == 8) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 10.2724,-1517.5270,3.6597, -49.3241,-1585.4187,3.1076, 4.0), checkpoint_bus_mine[playerid] ++;
		else if(checkpoint_bus_mine[playerid] == 9) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -49.3241,-1585.4187,3.1076, -169.6736,-1626.7831,3.1883, 4.0), checkpoint_bus_mine[playerid] ++;
		else if(checkpoint_bus_mine[playerid] == 10) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -169.6736,-1626.7831,3.1883, -254.7417,-1738.2068,4.1455, 4.0), checkpoint_bus_mine[playerid] ++;
		else if(checkpoint_bus_mine[playerid] == 11) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -254.7417,-1738.2068,4.1455, -267.9747,-1793.6016,11.4988, 4.0), checkpoint_bus_mine[playerid] ++;
		else if(checkpoint_bus_mine[playerid] == 12) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 1, -267.9747,-1793.6016,11.4988, 0.0,0.0,0.0, 4.0), checkpoint_bus_mine[playerid] ++;
		else if(checkpoint_bus_mine[playerid] == 13) {
			if(!VehToPoint(30.0, veh, -267.9747,-1793.6016,11.4988)) 
				return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CERROR"√Ä√≠√≤√®√∑√®√≤", ""CWHITE"√Ç√ª √Ø√Æ√§√Æ√ß√∞√•√¢√†√•√≤√•√±√º √¢ √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√® √±√≤√Æ√∞√Æ√≠√≠√•√£√Æ √è√é √§√´√ø √Ø√•√∞√•√§√¢√®√¶√•√≠√®√ø √Ø√Æ √∑√•√™√Ø√Æ√®√≠√≤√†√¨.\n√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø √∞√†√°√Æ√≤√ª √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √≥√±√≤√∞√Æ√®√≤√º√±√ø √≠√† √≠√•¬∏ √ß√†√≠√Æ√¢√Æ.", "Cerrar", "");
			checkpoint_bus_mine[playerid] ++;
			PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
			SCM(playerid, COLOR_LITEBLUE, "√é√±√≤√†√≠√Æ√¢√™√†. √é√¶√®S√≠√©√≤√• √Ø√†√±√±√†√¶√®√∞√Æ√¢");
			GameTextForPlayer(playerid, "~r~stop", 3000, 1);
			ProxDetector(30.0, playerid, "√Ä√¢√≤√Æ√°√≥√± √Ø√Æ √¨√†√∞√∏√∞√≥√≤√≥ ¬´√ã√ë ‚Äî √ò√†√µ√≤√† ‚Äî √Ä√¢√≤√Æ√∏√™√Æ√´√†¬ª √°√≥√§√•√≤ √Æ√≤√Ø√∞√†√¢√´√•√≠ √∑√•√∞√•√ß 10 √±√•√™√≥√≠√§", COLOR_MAIN);
			timer_bus[playerid] = SetTimerEx("bus_stop_11", 10000, false, "d", playerid);
		}
		else if(checkpoint_bus_mine[playerid] == 14) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -444.4069,-2185.6306,60.0131, -648.2682,-2196.9529,11.8458, 4.0), checkpoint_bus_mine[playerid] ++;
		else if(checkpoint_bus_mine[playerid] == 15) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -648.2682,-2196.9529,11.8458, -952.2272,-2597.7390,89.0786, 4.0), checkpoint_bus_mine[playerid] ++;
		else if(checkpoint_bus_mine[playerid] == 16) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -952.2272,-2597.7390,89.0786, -1137.2599,-2268.7854,35.3377, 4.0), checkpoint_bus_mine[playerid] ++;
		else if(checkpoint_bus_mine[playerid] == 17) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -1137.2599,-2268.7854,35.3377, -1083.7633,-1901.6095,76.7680, 4.0), checkpoint_bus_mine[playerid] ++;
		else if(checkpoint_bus_mine[playerid] == 18) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -1083.7633,-1901.6095,76.7680, -1327.4596,-1679.6202,45.6331, 4.0), checkpoint_bus_mine[playerid] ++;
		else if(checkpoint_bus_mine[playerid] == 19) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -1327.4596,-1679.6202,45.6331, -1528.9564,-1603.5956,38.0097, 4.0), checkpoint_bus_mine[playerid] ++;
		else if(checkpoint_bus_mine[playerid] == 20) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -1528.9564,-1603.5956,38.0097, -1824.0017,-1417.4617,36.8330, 4.0), checkpoint_bus_mine[playerid] ++;
		else if(checkpoint_bus_mine[playerid] == 21) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -1824.0017,-1417.4617,36.8330, -1899.4873,-1081.5380,38.3354, 4.0), checkpoint_bus_mine[playerid] ++;
		else if(checkpoint_bus_mine[playerid] == 22) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -1899.4873,-1081.5380,38.3354, -1883.6448,-602.7418,25.0765, 4.0), checkpoint_bus_mine[playerid] ++;
		else if(checkpoint_bus_mine[playerid] == 23) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -1883.6448,-602.7418,25.0765, -1990.7144,-577.1207,25.9467, 4.0), checkpoint_bus_mine[playerid] ++;
		else if(checkpoint_bus_mine[playerid] == 24) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -1990.7144,-577.1207,25.9467, -2250.9221,-243.8470,38.4519, 4.0), checkpoint_bus_mine[playerid] ++;
		else if(checkpoint_bus_mine[playerid] == 25) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -2250.9221,-243.8470,38.4519, -2186.5413,-189.8719,35.2765, 4.0), checkpoint_bus_mine[playerid] ++;
		else if(checkpoint_bus_mine[playerid] == 26) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -2186.5413,-189.8719,35.2765, -2150.7451,-72.6722,35.2782, 4.0), checkpoint_bus_mine[playerid] ++;
		else if(checkpoint_bus_mine[playerid] == 27) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -2150.7451,-72.6722,35.2782, -2025.1300,-72.9522,35.2677, 4.0), checkpoint_bus_mine[playerid] ++;
		else if(checkpoint_bus_mine[playerid] == 28) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 1, -2025.1300,-72.9522,35.2677, 0.0,0.0,0.0, 4.0), checkpoint_bus_mine[playerid] ++;
		else if(checkpoint_bus_mine[playerid] == 29) {
			if(!VehToPoint(30.0, veh, -2025.1300,-72.9522,35.2677)) 
				return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CERROR"√Ä√≠√≤√®√∑√®√≤", ""CWHITE"√Ç√ª √Ø√Æ√§√Æ√ß√∞√•√¢√†√•√≤√•√±√º √¢ √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√® √±√≤√Æ√∞√Æ√≠√≠√•√£√Æ √è√é √§√´√ø √Ø√•√∞√•√§√¢√®√¶√•√≠√®√ø √Ø√Æ √∑√•√™√Ø√Æ√®√≠√≤√†√¨.\n√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø √∞√†√°√Æ√≤√ª √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √≥√±√≤√∞√Æ√®√≤√º√±√ø √≠√† √≠√•¬∏ √ß√†√≠√Æ√¢√Æ.", "Cerrar", "");
			checkpoint_bus_mine[playerid] ++;
			PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
			SCM(playerid, COLOR_LITEBLUE, "√é√±√≤√†√≠√Æ√¢√™√†. √é√¶√®S√≠√©√≤√• √Ø√†√±√±√†√¶√®√∞√Æ√¢");
			GameTextForPlayer(playerid, "~r~stop", 3000, 1);
			ProxDetector(30.0, playerid, "√Ä√¢√≤√Æ√°√≥√± √Ø√Æ √¨√†√∞√∏√∞√≥√≤√≥ ¬´√ã√ë ‚Äî √ò√†√µ√≤√† ‚Äî √Ä√¢√≤√Æ√∏√™√Æ√´√†¬ª √°√≥√§√•√≤ √Æ√≤√Ø√∞√†√¢√´√•√≠ √∑√•√∞√•√ß 10 √±√•√™√≥√≠√§", COLOR_MAIN);
			timer_bus[playerid] = SetTimerEx("bus_stop_12", 10000, false, "d", playerid);
		}
		else if(checkpoint_bus_mine[playerid] == 30) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -1822.0120,-557.7122,16.2620, -1764.7927,-591.7914,16.4214, 4.0), checkpoint_bus_mine[playerid] ++;
		else if(checkpoint_bus_mine[playerid] == 31) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -1764.7927,-591.7914,16.4214, -1231.1498,-778.0405,64.2825, 4.0), checkpoint_bus_mine[playerid] ++;
		else if(checkpoint_bus_mine[playerid] == 32) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -1231.1498,-778.0405,64.2825, -910.0193,-1100.5520,98.4349, 4.0), checkpoint_bus_mine[playerid] ++;
		else if(checkpoint_bus_mine[playerid] == 33) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -910.0193,-1100.5520,98.4349, -466.5932,-853.7919,50.8223, 4.0), checkpoint_bus_mine[playerid] ++;
		else if(checkpoint_bus_mine[playerid] == 34) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -466.5932,-853.7919,50.8223, -188.4588,-939.9034,34.1195, 4.0), checkpoint_bus_mine[playerid] ++;
		else if(checkpoint_bus_mine[playerid] == 35) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -188.4588,-939.9034,34.1195, -118.3414,-1167.3033,2.7949, 4.0), checkpoint_bus_mine[playerid] ++;
		else if(checkpoint_bus_mine[playerid] == 36) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -118.3414,-1167.3033,2.7949, -141.9921,-1436.8875,2.7961, 4.0), checkpoint_bus_mine[playerid] ++;
		else if(checkpoint_bus_mine[playerid] == 37) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, -141.9921,-1436.8875,2.7961, 121.0576,-1559.2222,8.6728, 4.0), checkpoint_bus_mine[playerid] ++;
		else if(checkpoint_bus_mine[playerid] == 38) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 121.0576,-1559.2222,8.6728, 1036.0004,-1827.4899,13.7304, 4.0), checkpoint_bus_mine[playerid] ++;
		else if(checkpoint_bus_mine[playerid] == 39) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 1036.0004,-1827.4899,13.7304, 1163.9675,-1855.3002,13.4983, 4.0), checkpoint_bus_mine[playerid] ++;
		else if(checkpoint_bus_mine[playerid] == 40) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 1163.9675,-1855.3002,13.4983, 1182.0663,-1750.0507,13.4991, 4.0), checkpoint_bus_mine[playerid] ++;
		else if(checkpoint_bus_mine[playerid] == 41) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 1182.0663,-1750.0507,13.4991, 1115.7291,-1738.2257,13.6063, 4.0), checkpoint_bus_mine[playerid] ++;
		else if(checkpoint_bus_mine[playerid] == 42) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 1, 1115.7291,-1738.2257,13.6063, 0.0,0.0,0.0, 4.0), checkpoint_bus_mine[playerid] ++;
		else if(checkpoint_bus_mine[playerid] == 43) {
			if(!VehToPoint(30.0, veh, 1115.7291,-1738.2257,13.6063)) 
				return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CERROR"√Ä√≠√≤√®√∑√®√≤", ""CWHITE"√Ç√ª √Ø√Æ√§√Æ√ß√∞√•√¢√†√•√≤√•√±√º √¢ √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√® √±√≤√Æ√∞√Æ√≠√≠√•√£√Æ √è√é √§√´√ø √Ø√•√∞√•√§√¢√®√¶√•√≠√®√ø √Ø√Æ √∑√•√™√Ø√Æ√®√≠√≤√†√¨.\n√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø √∞√†√°√Æ√≤√ª √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √≥√±√≤√∞√Æ√®√≤√º√±√ø √≠√† √≠√•¬∏ √ß√†√≠√Æ√¢√Æ.", "Cerrar", "");
			checkpoint_bus_mine[playerid] = 0; checkpoint_bus[playerid] = 999; checkpoint_bus_fores[playerid] = 999;
			PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
			SCM(playerid, COLOR_ORANGE, "√Ç√ª √§√Æ√•√µ√†√´√® √§√Æ √™√Æ√≠√•√∑√≠√Æ√© √Æ√±√≤√†√≠√Æ√¢√™√® √¨√†√∞√∏√∞√≥√≤√†");
			ProxDetector(30.0, playerid, "√Ä√¢√≤√Æ√°√≥√± √Ø√Æ √¨√†√∞√∏√∞√≥√≤√≥ ¬´√ã√ë ‚Äî √ò√†√µ√≤√† ‚Äî √Ä√¢√≤√Æ√∏√™√Æ√´√†¬ª √ß√†√¢√•√∞√∏√®√´ √≤√•√™√≥√π√®√© √∞√•√©√±", COLOR_MAIN);
			TogglePlayerControllable(playerid, 0);
			timer_bus[playerid] = SetTimerEx("bus_redend_1", 1000, false, "d", playerid);
		}
		if(checkpoint_bus[playerid] == 0) {
			if(!VehToPoint(30.0, veh, 1121.8436,-1743.6327,13.5318)) 
				return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CERROR"√Ä√≠√≤√®√∑√®√≤", ""CWHITE"√Ç√ª √Ø√Æ√§√Æ√ß√∞√•√¢√†√•√≤√•√±√º √¢ √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√® √±√≤√Æ√∞√Æ√≠√≠√•√£√Æ √è√é √§√´√ø √Ø√•√∞√•√§√¢√®√¶√•√≠√®√ø √Ø√Æ √∑√•√™√Ø√Æ√®√≠√≤√†√¨.\n√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø √∞√†√°√Æ√≤√ª √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √≥√±√≤√∞√Æ√®√≤√º√±√ø √≠√† √≠√•¬∏ √ß√†√≠√Æ√¢√Æ.", "Cerrar", "");
			checkpoint_bus[playerid] +=2;
			PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
			SCM(playerid, COLOR_LITEBLUE, "√é√±√≤√†√≠√Æ√¢√™√†. √é√¶√®S√≠√©√≤√• √Ø√†√±√±√†√¶√®√∞√Æ√¢");
			GameTextForPlayer(playerid, "~r~stop", 3000, 1);
			ProxDetector(30.0, playerid, "√Ä√¢√≤√Æ√°√≥√± √Ø√Æ √¨√†√∞√∏√∞√≥√≤√≥ ¬´√ã√ë ‚Äî √ë√°√Æ√∞√™√† √†√¢√≤√Æ¬ª √°√≥√§√•√≤ √Æ√≤√Ø√∞√†√¢√´√•√≠ √∑√•√∞√•√ß 10 √±√•√™√≥√≠√§", COLOR_MAIN);
			timer_bus[playerid] = SetTimerEx("bus_stop_0", 10000, false, "d", playerid);
		}
		else if(checkpoint_bus[playerid] == 2) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 1173.0245,-1809.9047,13.4989, 1241.9915,-1854.4780,13.4836, 4.0), checkpoint_bus[playerid] ++;
		else if(checkpoint_bus[playerid] == 3) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 1241.9915,-1854.4780,13.4836, 1355.5500,-1867.7633,13.4830, 4.0), checkpoint_bus[playerid] ++;
		else if(checkpoint_bus[playerid] == 4) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 1355.5500,-1867.7633,13.4830, 1494.6168,-1874.9211,13.4834, 4.0), checkpoint_bus[playerid] ++;
		else if(checkpoint_bus[playerid] == 5) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 1494.6168,-1874.9211,13.4834, 1527.8490,-1950.7977,19.4621, 4.0), checkpoint_bus[playerid] ++;
		else if(checkpoint_bus[playerid] == 6) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 1527.8490,-1950.7977,19.4621, 1590.4154,-2138.3096,29.9153, 4.0), checkpoint_bus[playerid] ++;
		else if(checkpoint_bus[playerid] == 7) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 1590.4154,-2138.3096,29.9153, 1786.8009,-2168.3738,13.4834, 4.0), checkpoint_bus[playerid] ++;
		else if(checkpoint_bus[playerid] == 8) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 1786.8009,-2168.3738,13.4834, 1919.9713,-2168.7632,13.4834, 4.0), checkpoint_bus[playerid] ++;
		else if(checkpoint_bus[playerid] == 9) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 1919.9713,-2168.7632,13.4834, 2011.6401,-2168.9001,13.4834, 4.0), checkpoint_bus[playerid] ++;
		else if(checkpoint_bus[playerid] == 10) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 2011.6401,-2168.9001,13.4834, 2130.8689,-2214.2026,13.4909, 4.0), checkpoint_bus[playerid] ++;
		else if(checkpoint_bus[playerid] == 11) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 2130.8689,-2214.2026,13.4909, 2183.0771,-2184.2324,13.4629, 4.0), checkpoint_bus[playerid] ++;
		else if(checkpoint_bus[playerid] == 12) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 2183.0771,-2184.2324,13.4629, 2257.5835,-2227.8535,13.4051, 4.0), checkpoint_bus[playerid] ++;
		else if(checkpoint_bus[playerid] == 13) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 1, 2257.5835,-2227.8535,13.4051, 0.0, 0.0, 0.0, 4.0), checkpoint_bus[playerid] ++;
		else if(checkpoint_bus[playerid] == 14) {
			if(!VehToPoint(30.0, veh, 2257.5835,-2227.8535,13.4051)) 
				return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CERROR"√Ä√≠√≤√®√∑√®√≤", ""CWHITE"√Ç√ª √Ø√Æ√§√Æ√ß√∞√•√¢√†√•√≤√•√±√º √¢ √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√® √±√≤√Æ√∞√Æ√≠√≠√•√£√Æ √è√é √§√´√ø √Ø√•√∞√•√§√¢√®√¶√•√≠√®√ø √Ø√Æ √∑√•√™√Ø√Æ√®√≠√≤√†√¨.\n√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø √∞√†√°√Æ√≤√ª √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √≥√±√≤√∞√Æ√®√≤√º√±√ø √≠√† √≠√•¬∏ √ß√†√≠√Æ√¢√Æ.", "Cerrar", "");
			checkpoint_bus[playerid] ++;
			PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
			SCM(playerid, COLOR_LITEBLUE, "√é√±√≤√†√≠√Æ√¢√™√†. √é√¶√®S√≠√©√≤√• √Ø√†√±√±√†√¶√®√∞√Æ√¢");
			GameTextForPlayer(playerid, "~r~stop", 3000, 1);
			ProxDetector(30.0, playerid, "√Ä√¢√≤√Æ√°√≥√± √Ø√Æ √¨√†√∞√∏√∞√≥√≤√≥ ¬´√ã√ë ‚Äî √ë√°√Æ√∞√™√† √†√¢√≤√Æ¬ª √°√≥√§√•√≤ √Æ√≤√Ø√∞√†√¢√´√•√≠ √∑√•√∞√•√ß 10 √±√•√™√≥√≠√§", COLOR_MAIN);
			timer_bus[playerid] = SetTimerEx("bus_stop_1", 10000, false, "d", playerid);
		}
		else if(checkpoint_bus[playerid] == 15) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 2335.3647,-2236.3689,13.4758, 2581.2778,-2168.1846,12.8832, 4.0), checkpoint_bus[playerid] ++;
		else if(checkpoint_bus[playerid] == 16) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 2581.2778,-2168.1846,12.8832, 2716.4917,-2115.5781,11.0061, 4.0), checkpoint_bus[playerid] ++;
		else if(checkpoint_bus[playerid] == 17) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 2716.4917,-2115.5781,11.0061, 2716.3828,-1941.9758,13.4107, 4.0), checkpoint_bus[playerid] ++;
		else if(checkpoint_bus[playerid] == 18) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 2716.3828,-1941.9758,13.4107, 2504.9385,-1929.6426,13.4604, 4.0), checkpoint_bus[playerid] ++;
		else if(checkpoint_bus[playerid] == 19) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 2504.9385,-1929.6426,13.4604, 2427.6677,-1929.8158,13.4708, 4.0), checkpoint_bus[playerid] ++;
		else if(checkpoint_bus[playerid] == 20) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 2427.6677,-1929.8158,13.4708, 2416.3132,-1828.3182,13.4834, 4.0), checkpoint_bus[playerid] ++;
		else if(checkpoint_bus[playerid] == 21) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 2416.3132,-1828.3182,13.4834, 2416.3801,-1755.3927,13.4871, 4.0), checkpoint_bus[playerid] ++;
		else if(checkpoint_bus[playerid] == 22) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 2416.3801,-1755.3927,13.4871, 2364.4407,-1729.6490,13.4837, 4.0), checkpoint_bus[playerid] ++;
		else if(checkpoint_bus[playerid] == 23) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 2364.4407,-1729.6490,13.4837, 2268.0640,-1730.1293,13.4836, 4.0), checkpoint_bus[playerid] ++;
		else if(checkpoint_bus[playerid] == 24) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 2268.0640,-1730.1293,13.4836, 2179.2791,-1748.1898,13.4779, 4.0), checkpoint_bus[playerid] ++;
		else if(checkpoint_bus[playerid] == 25) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 2179.2791,-1748.1898,13.4779, 2013.1875,-1748.9838,13.4834, 4.0), checkpoint_bus[playerid] ++;
		else if(checkpoint_bus[playerid] == 26) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 2013.1875,-1748.9838,13.4834, 1860.3615,-1750.4104,13.4833, 4.0), checkpoint_bus[playerid] ++;
		else if(checkpoint_bus[playerid] == 27) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 1860.3615,-1750.4104,13.4833, 1771.9542,-1729.4901,13.4838, 4.0), checkpoint_bus[playerid] ++;
		else if(checkpoint_bus[playerid] == 28) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 1771.9542,-1729.4901,13.4838, 1567.0834,-1729.9801,13.4824, 4.0), checkpoint_bus[playerid] ++;
		else if(checkpoint_bus[playerid] == 29) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 1, 1567.0834,-1729.9801,13.4824, 0.0, 0.0, 0.0, 4.0), checkpoint_bus[playerid] ++;
		else if(checkpoint_bus[playerid] == 30) {
			if(!VehToPoint(30.0, veh, 1567.0834,-1729.9801,13.4824)) 
				return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CERROR"√Ä√≠√≤√®√∑√®√≤", ""CWHITE"√Ç√ª √Ø√Æ√§√Æ√ß√∞√•√¢√†√•√≤√•√±√º √¢ √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√® √±√≤√Æ√∞√Æ√≠√≠√•√£√Æ √è√é √§√´√ø √Ø√•√∞√•√§√¢√®√¶√•√≠√®√ø √Ø√Æ √∑√•√™√Ø√Æ√®√≠√≤√†√¨.\n√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø √∞√†√°√Æ√≤√ª √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √≥√±√≤√∞√Æ√®√≤√º√±√ø √≠√† √≠√•¬∏ √ß√†√≠√Æ√¢√Æ.", "Cerrar", "");
			checkpoint_bus[playerid] ++;
			PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
			SCM(playerid, COLOR_LITEBLUE, "√é√±√≤√†√≠√Æ√¢√™√†. √é√¶√®S√≠√©√≤√• √Ø√†√±√±√†√¶√®√∞√Æ√¢");
			GameTextForPlayer(playerid, "~r~stop", 3000, 1);
			ProxDetector(30.0, playerid, "√Ä√¢√≤√Æ√°√≥√± √Ø√Æ √¨√†√∞√∏√∞√≥√≤√≥ ¬´√ã√ë ‚Äî √ë√°√Æ√∞√™√† √†√¢√≤√Æ¬ª √°√≥√§√•√≤ √Æ√≤√Ø√∞√†√¢√´√•√≠ √∑√•√∞√•√ß 10 √±√•√™√≥√≠√§", COLOR_MAIN);
			timer_bus[playerid] = SetTimerEx("bus_stop_2", 10000, false, "d", playerid);
		}
		else if(checkpoint_bus[playerid] == 31) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 1325.6018,-1729.2744,13.4835, 1314.7778,-1624.5640,13.4835, 4.0), checkpoint_bus[playerid] ++;
		else if(checkpoint_bus[playerid] == 32) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 1314.7778,-1624.5640,13.4835, 1347.8091,-1485.2773,13.4839, 4.0), checkpoint_bus[playerid] ++;
		else if(checkpoint_bus[playerid] == 33) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 1347.8091,-1485.2773,13.4839, 1313.2859,-1392.9116,13.4089, 4.0), checkpoint_bus[playerid] ++;
		else if(checkpoint_bus[playerid] == 34) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 1313.2859,-1392.9116,13.4089, 1282.5999,-1392.6699,13.3329, 4.0), checkpoint_bus[playerid] ++;
		else if(checkpoint_bus[playerid] == 35) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 1, 1282.5999,-1392.6699,13.3329, 0.0, 0.0, 0.0, 4.0), checkpoint_bus[playerid] ++;
		else if(checkpoint_bus[playerid] == 36) {
			if(!VehToPoint(30.0, veh, 1282.5999,-1392.6699,13.3329)) 
				return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CERROR"√Ä√≠√≤√®√∑√®√≤", ""CWHITE"√Ç√ª √Ø√Æ√§√Æ√ß√∞√•√¢√†√•√≤√•√±√º √¢ √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√® √±√≤√Æ√∞√Æ√≠√≠√•√£√Æ √è√é √§√´√ø √Ø√•√∞√•√§√¢√®√¶√•√≠√®√ø √Ø√Æ √∑√•√™√Ø√Æ√®√≠√≤√†√¨.\n√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø √∞√†√°√Æ√≤√ª √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √≥√±√≤√∞√Æ√®√≤√º√±√ø √≠√† √≠√•¬∏ √ß√†√≠√Æ√¢√Æ.", "Cerrar", "");
			checkpoint_bus[playerid] ++;
			PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
			SCM(playerid, COLOR_LITEBLUE, "√é√±√≤√†√≠√Æ√¢√™√†. √é√¶√®S√≠√©√≤√• √Ø√†√±√±√†√¶√®√∞√Æ√¢");
			GameTextForPlayer(playerid, "~r~stop", 3000, 1);
			ProxDetector(30.0, playerid, "√Ä√¢√≤√Æ√°√≥√± √Ø√Æ √¨√†√∞√∏√∞√≥√≤√≥ ¬´√ã√ë ‚Äî √ë√°√Æ√∞√™√† √†√¢√≤√Æ¬ª √°√≥√§√•√≤ √Æ√≤√Ø√∞√†√¢√´√•√≠ √∑√•√∞√•√ß 10 √±√•√™√≥√≠√§", COLOR_MAIN);
			timer_bus[playerid] = SetTimerEx("bus_stop_3", 10000, false, "d", playerid);
		}
		else if(checkpoint_bus[playerid] == 37) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 1095.6122,-1393.0779,13.6178, 1057.8948,-1455.6560,13.4670, 4.0), checkpoint_bus[playerid] ++;
		else if(checkpoint_bus[playerid] == 38) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 1057.8948,-1455.6560,13.4670, 1035.2920,-1637.6685,13.4835, 4.0), checkpoint_bus[playerid] ++;
		else if(checkpoint_bus[playerid] == 39) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 1035.2920,-1637.6685,13.4835, 1135.1760,-1714.3496,13.7345, 4.0), checkpoint_bus[playerid] ++;
		else if(checkpoint_bus[playerid] == 40) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 1135.1760,-1714.3496,13.7345, 1171.9919,-1731.8236,13.6293, 4.0), checkpoint_bus[playerid] ++;
		else if(checkpoint_bus[playerid] == 41) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 0, 1171.9919,-1731.8236,13.6293, 1115.7291,-1738.2257,13.6063, 4.0), checkpoint_bus[playerid] ++;
		else if(checkpoint_bus[playerid] == 42) AddRandomCostBus(playerid), SetPlayerRaceCheckpoint(playerid, 1, 1115.7291,-1738.2257,13.6063, 0.0, 0.0, 0.0, 4.0), checkpoint_bus[playerid] ++;
		else if(checkpoint_bus[playerid] == 43) {
			if(!VehToPoint(30.0, veh, 1115.7291,-1738.2257,13.6063)) 
				return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CERROR"√Ä√≠√≤√®√∑√®√≤", ""CWHITE"√Ç√ª √Ø√Æ√§√Æ√ß√∞√•√¢√†√•√≤√•√±√º √¢ √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√® √±√≤√Æ√∞√Æ√≠√≠√•√£√Æ √è√é √§√´√ø √Ø√•√∞√•√§√¢√®√¶√•√≠√®√ø √Ø√Æ √∑√•√™√Ø√Æ√®√≠√≤√†√¨.\n√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø √∞√†√°√Æ√≤√ª √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √≥√±√≤√∞√Æ√®√≤√º√±√ø √≠√† √≠√•¬∏ √ß√†√≠√Æ√¢√Æ.", "Cerrar", "");
			checkpoint_bus[playerid] = 0; checkpoint_bus_mine[playerid] = 999; checkpoint_bus_fores[playerid] = 999;
			PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
			SCM(playerid, COLOR_ORANGE, "√Ç√ª √§√Æ√•√µ√†√´√® √§√Æ √™√Æ√≠√•√∑√≠√Æ√© √Æ√±√≤√†√≠√Æ√¢√™√® √¨√†√∞√∏√∞√≥√≤√†");
			ProxDetector(30.0, playerid, "√Ä√¢√≤√Æ√°√≥√± √Ø√Æ √¨√†√∞√∏√∞√≥√≤√≥ ¬´√ã√ë ‚Äî √ë√°√Æ√∞√™√† √†√¢√≤√Æ¬ª √ß√†√¢√•√∞√∏√®√´ √≤√•√™√≥√π√®√© √∞√•√©√±", COLOR_MAIN);
			TogglePlayerControllable(playerid, 0);
			timer_bus[playerid] = SetTimerEx("bus_redend_2", 1000, false, "d", playerid);
		}
	}

	return 1;
}
CB: lead_meria_show(playerid) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SCM(playerid, COLOR_LIGHTGREY, "√ç√† √Ø√Æ√±√≤√≥ √¨√Ω√∞√† √¢ S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤ √≠√®√™√≤√Æ √≠√• √±√≤√Æ√®√≤");

	new name[MAX_PLAYER_NAME], lvl, bad, good;
	cache_get_value_name(0, "Name", name);
	cache_get_value_name_int(0, "pLevel", lvl);
	cache_get_value_name_int(0, "bad_rate_meria", bad);
	cache_get_value_name_int(0, "good_rate_meria", good);

	new _str[144];
	format(_str,sizeof(_str),"\n"CWHITE"√à√¨√ø: %s\n√è√∞√Æ√¶√®√¢√†√•√≤ √¢ √∏√≤√†√≤√• (√≥√∞√Æ√¢√•√≠√º): %d √´√•√≤\n\n√ï√Æ√∞√Æ√∏√®√µ √Æ√∂√•√≠√Æ√™: {00cc00}%i\n"CWHITE"√è√´√Æ√µ√®√µ √Æ√∂√•√≠√Æ√™: {fa1010}%i\n",name,lvl,good,bad);

	return SPD(playerid, 0, DIALOG_STYLE_LIST, "{FFCD00}√ë√≤√†√≤√®√±√≤√®√™√† √¨√Ω√∞√† √£√Æ√∞√ÆS√≠", _str, "Cerrar", "");
}
CB: lead_meria_check(playerid) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SCM(playerid, COLOR_LIGHTGREY, "√ç√† √Ø√Æ√±√≤√≥ √¨√Ω√∞√† √¢ S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤ √≠√®√™√≤√Æ √≠√• √±√≤√Æ√®√≤");
	return SPD(playerid, 1926, DIALOG_STYLE_LIST, "{FFCD00}√é√∂√•√≠√®√≤√• √∞√†√°√Æ√≤√≥ √¨√Ω√∞√†", "{00cc00}√ï√Æ√∞√Æ√∏√Æ\n{fa1010}√è√´√Æ√µ√Æ", "Seleccione", "Cerrar");
}
stock CreateBarsTD(playerid) {
	if(BizEnter{playerid} == 255) 
		return 1;

	for(new i = 0; i < 6; i ++) 
		PlayerTextDrawDestroy(playerid, barTDS_PLAYER[playerid][i]);

	new str[15];

	format(str,sizeof(str),"$%i",BizInfo[BizEnter{playerid}][bCena][0]);
	barTDS_PLAYER[playerid][5] = CreatePlayerTextDraw(playerid, 450.000000, 125.000000, str);
	PlayerTextDrawLetterSize(playerid, barTDS_PLAYER[playerid][5], 0.560000, 2.142500);
	PlayerTextDrawTextSize(playerid, barTDS_PLAYER[playerid][5], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, barTDS_PLAYER[playerid][5], 1);
	PlayerTextDrawColor(playerid, barTDS_PLAYER[playerid][5], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, barTDS_PLAYER[playerid][5], 0);
	PlayerTextDrawBoxColor(playerid, barTDS_PLAYER[playerid][5], 0x80808080);
	PlayerTextDrawSetShadow(playerid, barTDS_PLAYER[playerid][5], 0);
	PlayerTextDrawSetOutline(playerid, barTDS_PLAYER[playerid][5], 1);
	PlayerTextDrawBackgroundColor(playerid, barTDS_PLAYER[playerid][5], 0x00000033);
	PlayerTextDrawFont(playerid, barTDS_PLAYER[playerid][5], 3);
	PlayerTextDrawSetProportional(playerid, barTDS_PLAYER[playerid][5], 1);
	PlayerTextDrawSetSelectable(playerid, barTDS_PLAYER[playerid][5], 0);

	format(str,sizeof(str),"$%i",BizInfo[BizEnter{playerid}][bCena][1]);
	barTDS_PLAYER[playerid][4] = CreatePlayerTextDraw(playerid, 450.000000, 175.000000, str);
	PlayerTextDrawLetterSize(playerid, barTDS_PLAYER[playerid][4], 0.560000, 2.142500);
	PlayerTextDrawTextSize(playerid, barTDS_PLAYER[playerid][4], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, barTDS_PLAYER[playerid][4], 1);
	PlayerTextDrawColor(playerid, barTDS_PLAYER[playerid][4], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, barTDS_PLAYER[playerid][4], 0);
	PlayerTextDrawBoxColor(playerid, barTDS_PLAYER[playerid][4], 0x80808080);
	PlayerTextDrawSetShadow(playerid, barTDS_PLAYER[playerid][4], 0);
	PlayerTextDrawSetOutline(playerid, barTDS_PLAYER[playerid][4], 1);
	PlayerTextDrawBackgroundColor(playerid, barTDS_PLAYER[playerid][4], 0x00000033);
	PlayerTextDrawFont(playerid, barTDS_PLAYER[playerid][4], 3);
	PlayerTextDrawSetProportional(playerid, barTDS_PLAYER[playerid][4], 1);
	PlayerTextDrawSetSelectable(playerid, barTDS_PLAYER[playerid][4], 0);

	format(str,sizeof(str),"$%i",BizInfo[BizEnter{playerid}][bCena][2]);
	barTDS_PLAYER[playerid][3] = CreatePlayerTextDraw(playerid, 450.000000, 225.000000, str);
	PlayerTextDrawLetterSize(playerid, barTDS_PLAYER[playerid][3], 0.560000, 2.142500);
	PlayerTextDrawTextSize(playerid, barTDS_PLAYER[playerid][3], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, barTDS_PLAYER[playerid][3], 1);
	PlayerTextDrawColor(playerid, barTDS_PLAYER[playerid][3], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, barTDS_PLAYER[playerid][3], 0);
	PlayerTextDrawBoxColor(playerid, barTDS_PLAYER[playerid][3], 0x80808080);
	PlayerTextDrawSetShadow(playerid, barTDS_PLAYER[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, barTDS_PLAYER[playerid][3], 1);
	PlayerTextDrawBackgroundColor(playerid, barTDS_PLAYER[playerid][3], 0x00000033);
	PlayerTextDrawFont(playerid, barTDS_PLAYER[playerid][3], 3);
	PlayerTextDrawSetProportional(playerid, barTDS_PLAYER[playerid][3], 1);
	PlayerTextDrawSetSelectable(playerid, barTDS_PLAYER[playerid][3], 0);

	format(str,sizeof(str),"$%i",BizInfo[BizEnter{playerid}][bCena][3]);
	barTDS_PLAYER[playerid][2] = CreatePlayerTextDraw(playerid, 450.000000, 275.000000, str);
	PlayerTextDrawLetterSize(playerid, barTDS_PLAYER[playerid][2], 0.560000, 2.142500);
	PlayerTextDrawTextSize(playerid, barTDS_PLAYER[playerid][2], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, barTDS_PLAYER[playerid][2], 1);
	PlayerTextDrawColor(playerid, barTDS_PLAYER[playerid][2], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, barTDS_PLAYER[playerid][2], 0);
	PlayerTextDrawBoxColor(playerid, barTDS_PLAYER[playerid][2], 0x80808080);
	PlayerTextDrawSetShadow(playerid, barTDS_PLAYER[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, barTDS_PLAYER[playerid][2], 1);
	PlayerTextDrawBackgroundColor(playerid, barTDS_PLAYER[playerid][2], 0x00000033);
	PlayerTextDrawFont(playerid, barTDS_PLAYER[playerid][2], 3);
	PlayerTextDrawSetProportional(playerid, barTDS_PLAYER[playerid][2], 1);
	PlayerTextDrawSetSelectable(playerid, barTDS_PLAYER[playerid][2], 0);

	format(str,sizeof(str),"$%i",BizInfo[BizEnter{playerid}][bCena][4]);
	barTDS_PLAYER[playerid][1] = CreatePlayerTextDraw(playerid, 450.000000, 325.000000, str);
	PlayerTextDrawLetterSize(playerid, barTDS_PLAYER[playerid][1], 0.560000, 2.142500);
	PlayerTextDrawTextSize(playerid, barTDS_PLAYER[playerid][1], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, barTDS_PLAYER[playerid][1], 1);
	PlayerTextDrawColor(playerid, barTDS_PLAYER[playerid][1], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, barTDS_PLAYER[playerid][1], 0);
	PlayerTextDrawBoxColor(playerid, barTDS_PLAYER[playerid][1], 0x80808080);
	PlayerTextDrawSetShadow(playerid, barTDS_PLAYER[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, barTDS_PLAYER[playerid][1], 1);
	PlayerTextDrawBackgroundColor(playerid, barTDS_PLAYER[playerid][1], 0x00000033);
	PlayerTextDrawFont(playerid, barTDS_PLAYER[playerid][1], 3);
	PlayerTextDrawSetProportional(playerid, barTDS_PLAYER[playerid][1], 1);
	PlayerTextDrawSetSelectable(playerid, barTDS_PLAYER[playerid][1], 0);

	format(str,sizeof(str),"$%i",BizInfo[BizEnter{playerid}][bCena][5]);
	barTDS_PLAYER[playerid][0] = CreatePlayerTextDraw(playerid, 450.000000, 375.000000, str);
	PlayerTextDrawLetterSize(playerid, barTDS_PLAYER[playerid][0], 0.560000, 2.142500);
	PlayerTextDrawTextSize(playerid, barTDS_PLAYER[playerid][0], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, barTDS_PLAYER[playerid][0], 1);
	PlayerTextDrawColor(playerid, barTDS_PLAYER[playerid][0], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, barTDS_PLAYER[playerid][0], 0);
	PlayerTextDrawBoxColor(playerid, barTDS_PLAYER[playerid][0], 0x80808080);
	PlayerTextDrawSetShadow(playerid, barTDS_PLAYER[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, barTDS_PLAYER[playerid][0], 1);
	PlayerTextDrawBackgroundColor(playerid, barTDS_PLAYER[playerid][0], 0x00000033);
	PlayerTextDrawFont(playerid, barTDS_PLAYER[playerid][0], 3);
	PlayerTextDrawSetProportional(playerid, barTDS_PLAYER[playerid][0], 1);
	PlayerTextDrawSetSelectable(playerid, barTDS_PLAYER[playerid][0], 0);
	return 1;
}

stock set_preview_market(playerid,num,modidTD,nameidTD,market_buyplace) {
	TDACTION_ITEMSNUMS[playerid][nameidTD]=num;
	if(item_is_Skin[market_buyplace][num]) {
		PlayerTextDrawSetPreviewModel(playerid, INFO_market_player_TD[playerid][modidTD], modelitem[market_buyplace][num]);
		PlayerTextDrawSetPreviewRot(playerid, INFO_market_player_TD[playerid][modidTD], 
		0, 
		0, 
		0, 
		1.5);
		new form[64];
		format(form,sizeof(form),"skin ~y~(id %d)~n~~g~~h~$~w~%d",modelitem[market_buyplace][num],priceitem[market_buyplace][num]);
		PlayerTextDrawSetString(playerid, INFO_market_player_TD[playerid][nameidTD], form);
	}
	else if(item_is_Accessory[market_buyplace][num]) {
		PlayerTextDrawSetPreviewModel(playerid, INFO_market_player_TD[playerid][modidTD], modelitem[market_buyplace][num]);
		PlayerTextDrawSetPreviewRot(playerid, INFO_market_player_TD[playerid][modidTD], 
		acsRotX[market_buyplace][num], 
		acsRotY[market_buyplace][num], 
		acsRotZ[market_buyplace][num], 
		acsZoom[market_buyplace][num]+0.35);
		new form[64];
		format(form,sizeof(form),"accessory~n~~g~~h~$~w~%d",priceitem[market_buyplace][num]);
		PlayerTextDrawSetString(playerid, INFO_market_player_TD[playerid][nameidTD], form);
	}
	else {
		PlayerTextDrawSetPreviewModel(playerid, INFO_market_player_TD[playerid][modidTD], item_data[typeitem[market_buyplace][num]][itemmodel]);
		PlayerTextDrawSetPreviewRot(playerid, INFO_market_player_TD[playerid][modidTD], 
		item_data[typeitem[market_buyplace][num]][itemrotX], 
		item_data[typeitem[market_buyplace][num]][itemrotY], 
		item_data[typeitem[market_buyplace][num]][itemrotZ], 
		item_data[typeitem[market_buyplace][num]][itemzoom]+0.35);
		new form[64];
		new itemenglname[32];
		switch(typeitem[market_buyplace][num]) {
			case 0: itemenglname="lighter";
			case 1: itemenglname="cigarettes";
			case 4: itemenglname="medicine chest";
			case 5: itemenglname="mask";
			case 6: itemenglname="recorder";
			case 7: itemenglname="fuel can";
		}
		if(countitem[market_buyplace][num] > 1) format(form,sizeof(form),"%s ~y~(%d)~n~~g~~h~$~w~%d",itemenglname,countitem[market_buyplace][num],priceitem[market_buyplace][num]);
		else format(form,sizeof(form),"%s~n~~g~~h~$~w~%d",itemenglname,priceitem[market_buyplace][num]);
		PlayerTextDrawSetString(playerid, INFO_market_player_TD[playerid][nameidTD], form);
	}
}

public OnPlayerPickUpPickup(playerid, pickupid) return 1;

public OnPlayerPickUpDynamicPickup(playerid, pickupid) {
	if(pTemp[playerid][pSpectate]) 
		return 1;
	if(antiflood_move[playerid] > gettime()) return 1;

	if(BizEnter{playerid} != 255) {
		if(IsPlayerInRangeOfPoint(playerid, 2.0, BizInfo[BizEnter{playerid}][BarPos][0], BizInfo[BizEnter{playerid}][BarPos][1], BizInfo[BizEnter{playerid}][BarPos][2])) {
			CreateBarsTD(playerid);
			for(new i = 0; i < 14; i ++) {
				if(i <6) PlayerTextDrawShow(playerid, barTDS_PLAYER[playerid][i]);
				TextDrawShowForPlayer(playerid, barTDS[i]);
			}
			SelectTextDraw(playerid, 0x888888AA);
			BIZin_alcMenu[playerid] = true;
			return 1;
		}
	}

	for(new h = 1; h != TOTAL_HOUSE + 1; h ++) {
		if(!IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[h][hEnter][0], HouseInfo[h][hEnter][1], HouseInfo[h][hEnter][2])) continue;
		new dhstr[400];
		new price_pay;
		switch(HouseInfo[h][hKlass]) {
			case 1: price_pay = 1*640;
			case 2: price_pay = 2*640;
			case 3: price_pay = 3*640;
			case 4: price_pay = 4*640;
			case 5: price_pay = 5*640;
			default: price_pay = 1*640;
		}
		if(HouseInfo[h][hOwned]) {
			format(dhstr,sizeof(dhstr),
			""CWHITE"√Ç√´√†√§√•√´√•√∂:\t\t\t{FFCD00}%s\n\
			\n\
			"CWHITE"√ä√´√†√±√±:\t\t\t\t%s\n\
			√ç√Æ√¨√•√∞ √§√Æ√¨√†:\t\t\t%d\n\
			√ë√Æ√±√≤√Æ√ø√≠√®√•:\t\t\t%s\n\
			"CWHITE"√ë√≤√Æ√®√¨√Æ√±√≤√º:\t\t\t%d$\n\
			√Ö√¶√•√§√≠√•√¢√≠√†√ø √™√¢√†√∞√≤√Ø√´√†√≤√†:\t%d$ {4271ff}(%d$)",
			HouseInfo[h][hOwner],
			classhome_names[HouseInfo[h][hKlass]],
			h,
			HouseInfo[h][hLock] ? ("{ff4d4d}√á√†√™√∞√ª√≤") : (""CMAIN"√é√≤√™√∞√ª√≤"),
			HouseInfo[h][hValue],
			price_pay,
			price_pay/2);
		}
		else {
			format(dhstr,sizeof(dhstr),
			""CWHITE"√ç√Æ√¨√•√∞ √§√Æ√¨√†:\t\t\t%d\n\
			\n\
			√ä√´√†√±√±:\t\t\t\t%s\n\
			√ë√≤√Æ√®√¨√Æ√±√≤√º:\t\t\t%d$\n\
			√Ö√¶√•√§√≠√•√¢√≠√†√ø √™√¢√†√∞√≤√Ø√´√†√≤√†:\t%d$",
			h,
			classhome_names[HouseInfo[h][hKlass]],
			HouseInfo[h][hValue],
			price_pay);
		}
		return SPD(playerid, (HouseInfo[h][hOwned] ? (10075) : (10026)), DIALOG_STYLE_MSGBOX, "{ffd770}√Ñ√Æ√¨",dhstr,(HouseInfo[h][hOwned] ? ("√Ç√Æ√©√≤√®") : ("√ä√≥√Ø√®√≤√º")), "Cerrar");
	}
	for(new i = 1; i != BIZES + 1; i ++) {
		if(!IsPlayerInRangeOfPoint( playerid, 2.0, BizInfo[ i ][EnterBiz][0], BizInfo[ i ][EnterBiz][1], BizInfo[ i ][EnterBiz][2] ) ) continue;
		if(BizInfo[i][bLock] && pData[playerid][pBusiness] != i) {
			SCM(playerid, COLOR_ERROR, "√ù√≤√Æ√≤ √°√®√ß√≠√•√± √ß√†√™√∞√ª√≤. √Ç√µ√Æ√§ √¢ √≠√•√£√Æ √≠√•√¢√Æ√ß√¨√Æ√¶√•√≠");
			return GameTextForPlayer(playerid, "~r~Closed", 4000, 1);
		}
		if(BizInfo[i][bVhod] && strcmp(BizInfo[i][bOwner], pData[playerid][pName])) {
			new str_vhodbiz[30];
			format(str_vhodbiz, sizeof(str_vhodbiz), "biz_vhodda_%d", i);
			if(!GetPVarInt(playerid, str_vhodbiz)) {
				SetPVarInt(playerid, "biz_vhod", i);
				format(string, 116, ""CWHITE"√Ç√µ√Æ√§ √Ø√´√†√≤√≠√ª√© √® √±√Æ√±√≤√†√¢√´√ø√•√≤ "CORANGE"%d$\n{99ff00}√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √¢√Æ√©√≤√® √±√æS√≠?", BizInfo[i][bVhod]);
				return SPD(playerid, 741, DIALOG_STYLE_MSGBOX, BizInfo[i][bName], string, "S√≠", "No");
			}
		}

		BizEnter{playerid} = i;
        new type = BizInfo[i][bTypeBiz];
        if(type == 40 || type == 2 || type == 4 || type == 21 || i == 76 || i == 70 || type == 59) 
        	load_mode(playerid);
        if(i == 94) {
        	if(GetPVarInt(playerid, "binco")) 
        		DeletePVar(playerid, "binco");
        	SetPVarInt(playerid, "victim", 1);
        }
        if(i == 95) {
        	if(GetPVarInt(playerid, "victim")) 
        		DeletePVar(playerid, "victim");
        	if(GetPVarInt(playerid, "binco")) 
        		DeletePVar(playerid, "binco");
        }
        if(i == 96) {
        	if(GetPVarInt(playerid, "victim")) 
        		DeletePVar(playerid, "victim");
        	SetPVarInt(playerid, "binco", 1);
        }
        if(type == 33) {
        	load_mode(playerid);
        	SCM(playerid, -1, "√Ñ√Æ√°√∞√Æ √Ø√Æ√¶√†√´√Æ√¢√†√≤√º √¢ √å√•√°√•√´√º√≠√ª√© √±√†√´√Æ√≠! Usar√≤√• "CCYAN"/buyobj "CWHITE"√§√´√ø √Ø√Æ√™√≥√Ø√Æ√™");
        }
		if(type == 31) {
			load_mode(playerid);
			SetPlayerPos( playerid, 1417.6107,-22.4425,1004.3643 );
			SetPlayerFacingAngle(playerid, 90.0);
		}
		else {
			SetPlayerPos( playerid, BizInfo[ i ][IntExitBiz][0], BizInfo[ i ][IntExitBiz][1], BizInfo[ i ][IntExitBiz][2] );
			SetPlayerFacingAngle(playerid, BizInfo[ i ][IntExitBiz][3]);
		}
		SetPlayerInterior( playerid, BizInfo[ i ][ bInt ] );
		SetPlayerVirtualWorld( playerid, BizInfo[ i ][ bVW ]);
		
		if(i == 70) antiflood_move[playerid] = gettime() + 5;
		else antiflood_move[playerid] = gettime() + 3;
		return SetCameraBehindPlayer(playerid);
	}
	for(new i = 1; i != BIZES + 1; i ++) {
		if(!IsPlayerInRangeOfPoint(playerid, 2.0, BizInfo[i][ExitBiz][0], BizInfo[i][ExitBiz][1], BizInfo[i][ExitBiz][2])) continue;
		if(BizInfo[i][ bVW ] != GetPlayerVirtualWorld(playerid)) continue;
		new id = BizInfo[i][ bID ];
		if(id == 46) 
			load_mode(playerid);
		SetPlayerInterior( playerid, 0 );
		SetPlayerPos( playerid, BizInfo[i][EntBizVh][0], BizInfo[i][EntBizVh][1], BizInfo[i][EntBizVh][2] );
		SetPlayerFacingAngle(playerid, BizInfo[i][EntBizVh][3]);
		SetCameraBehindPlayer(playerid);
		SetPlayerVirtualWorld( playerid, 0 );
		BizEnter{playerid} = 255;
		antiflood_move[playerid] = gettime() + 3;

		return 1;
	}
	for(new i = 1; i != 49; i ++) {
		if(!IsPlayerInRangeOfPoint(playerid, 2.0, flat_info[i][fl_enterposX], flat_info[i][fl_enterposY], flat_info[i][fl_enterposZ])) continue;

		new fl_str[195];
		if(flat_info[i][fl_owned] && flat_info[i][fl_rentstatus]) {
			format(fl_str, sizeof(fl_str), ""CWHITE"√ç√Æ√¨√•√∞ √™√¢√†√∞√≤√®√∞√ª: "CMAIN"%d\n\n"CWHITE"√ä√´√†√±√±: "CMAIN"%d √™√Æ√¨√≠√†√≤√ª\n"CWHITE"√Ç√´√†√§√•√´√•√∂: "CMAIN"%s\n"CWHITE"√ñ√•√≠√† √ß√† √†√∞√•√≠√§√≥: "CMAIN"%d$\n"CWHITE"√É√Æ√±. √∂√•√≠√†: "CMAIN"%d$", i, flat_info[i][fl_rooms], flat_info[i][fl_owner], flat_info[i][fl_rentprice], flat_info[i][fl_price]);
			SPD(playerid, 1303, DIALOG_STYLE_MSGBOX, "{ffffad}√ä√¢√†√∞√≤√®√∞√†", fl_str, "√å√•√≠√æ", "Cerrar");
		}
		else if(flat_info[i][fl_owned] && !flat_info[i][fl_rentstatus]) {
			format(fl_str, sizeof(fl_str), ""CWHITE"√ç√Æ√¨√•√∞ √™√¢√†√∞√≤√®√∞√ª: "CMAIN"%d\n\n"CWHITE"√ä√´√†√±√±: "CMAIN"%d √™√Æ√¨√≠√†√≤√ª\n"CWHITE"√Ç√´√†√§√•√´√•√∂: "CMAIN"%s\n"CWHITE"√É√Æ√±. √∂√•√≠√†: "CMAIN"%d$", i, flat_info[i][fl_rooms], flat_info[i][fl_owner], flat_info[i][fl_price]);
			SPD(playerid, 1305, DIALOG_STYLE_MSGBOX, "{ffffad}√ä√¢√†√∞√≤√®√∞√†", fl_str, "√Ç√Æ√©√≤√®", "Cerrar");
		}
		else {
			format(fl_str, sizeof(fl_str), ""CWHITE"√ç√Æ√¨√•√∞ √™√¢√†√∞√≤√®√∞√ª: "CMAIN"%d\n\n"CWHITE"√ä√´√†√±√±: "CMAIN"%d √™√Æ√¨√≠√†√≤√ª\n"CWHITE"√ñ√•√≠√†: "CMAIN"%d$", i, flat_info[i][fl_rooms], flat_info[i][fl_price]);
			SPD(playerid, 1306, DIALOG_STYLE_MSGBOX, "{ffffad}√ä√¢√†√∞√≤√®√∞√†", fl_str, "√ä√≥√Ø√®√≤√º", "Cerrar");
		}
	}

	for(new i = 1; i != 13; i ++) { 
		if(!IsPlayerInRangeOfPoint(playerid, 2, garage[i][grposition][0],garage[i][grposition][1],garage[i][grposition][2])) continue;
		new str_tittle[40];
		format(str_tittle,sizeof(str_tittle),"{ffffad}√É√†√∞√†√¶ {4271ff}¬π %d",i);
		if(garage[i][gbuyed]) {
			new str[240];
			format(str,sizeof(str),"\n \n"CWHITE"√ù√≤√Æ√≤ √£√†√∞√†√¶ √ß√†√≠√ø√≤.\n√Ç√´√†√§√•√´√•√∂: {00a329}%s\n"CWHITE"√Ñ√≠√•√© √Æ√Ø√´√†√∑√•√≠√Æ: {7e57ff}%d\n \n{ffdb70}√à√≠√¥√Æ√∞√¨√†√∂√®√ø: "CWHITE"√É√†√∞√†√¶√® √Ø√∞√•√§√≠√†√ß√≠√†√∑√•√≠√ª √≤√Æ√´√º√™√Æ √§√´√ø √≤√•√µ, √™√≤√Æ √†√∞√•√≠√§√≥√•√≤ √™√Æ√¨√≠√†√≤√ª √¢ √∑√†√±√≤√≠√ª√µ √§√Æ√¨√†√µ √®√´√® √≠√• √®√¨√•√•√≤ √§√Æ√¨√†\n \n ", garage[i][ownerNAME],garage[i][gdays]);
			SPD(playerid,0,DIALOG_STYLE_MSGBOX,str_tittle,str,"Cerrar","");
		}
		else {
			SetPVarInt(playerid, "garage_select", i);
			SPD(playerid,5865,DIALOG_STYLE_MSGBOX,str_tittle,"\n \n"CWHITE"√ù√≤√Æ√≤ √£√†√∞√†√¶ √±√¢√Æ√°√Æ√§√•√≠.\n√ñ√•√≠√†: {00a329}240000$\n \n ","√ä√≥√Ø√®√≤√º","Cerrar");
		}
		return 1;
	}

	mafia_menu(playerid); // √§√´√ø √Ø√®√™√†√Ø√Æ√¢ √±√™√´√†√§√Æ√¢ √≥ √¨√†√¥√®√©

	if(pickupid == casinopic) {
		new fmt[85];
		format(fmt,sizeof(fmt),"√ä√Æ√´√®√∑√•√±√≤√¢√Æ √Ç√†√∏√®√µ √¥√®√∏√•√™: %d √∏√≤.\n[1] √ä√≥√Ø√®√≤√º √¥√®√∏√™√®\n[2] √è√∞√ÆS√≠√≤√º √¥√®√∏√™√®",pData[playerid][casino_amount]);
		SPD(playerid,2207,DIALOG_STYLE_TABLIST_HEADERS,"{ffd770}√ä√†√ß√®√≠√Æ ¬´4 √§√∞√†√™√Æ√≠√†¬ª",fmt,"Seleccione","Cerrar");
	}

	if(pickupid == lesop_start) {
		if(JobL[playerid] == true) SPD(playerid, 950, DIALOG_STYLE_MSGBOX, "{FFCD00}√ã√•√±√Æ√Ø√®√´√™√†", ""CWHITE"Quieres √ß√†√¢√•√∞√∏√®√≤√º √∞√†√°√Æ√≤√≥ √≠√† √´√•√±√Æ√Ø√®√´√™√•?", "S√≠", "No");
		else SPD(playerid, 578, DIALOG_STYLE_MSGBOX, "{40bf40}√ã√•√±√Æ√Ø√®√´√™√†", ""CWHITE"Quieres √≥√±√≤√∞√Æ√®√≤√º√±√ø √∞√†√°√Æ√∑√®√¨ √≠√† √´√•√±√Æ√Ø√®√´√™√•?", "S√≠", "No");
	}
	if(pickupid == changecolor_pic || pickupid == changecolor_pic + 1 || pickupid == changecolor_pic + 2 || pickupid == changecolor_pic + 3) {
		if((pData[playerid][pHotel] != -1 || pData[playerid][pFlat] != -1 || pData[playerid][have_garage] != -1) && pData[playerid][pCar][0] != 0) 
			return SPD(playerid,524,DIALOG_STYLE_MSGBOX,"{FFCD00}√è√•√∞√•√™√∞√†√±√™√† √≤√∞√†√≠√±√Ø√Æ√∞√≤√†",""CWHITE"Quieres √Ø√Æ√™√∞√†√±√®√≤√º √±√¢√Æ√© √§√Æ√¨√†√∏√≠√®√© √≤√∞√†√≠√±√Ø√Æ√∞√≤?\n√ë√≤√Æ√®√¨√Æ√±√≤√º √≥√±√´√≥√£√® 500$","S√≠","No");
		if(pData[playerid][pHouse] == -1 && pData[playerid][pHotel] == -1 && pData[playerid][pFlat] == -1 && pData[playerid][have_garage] == -1) 
			return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √§√Æ√¨√†√∏√≠√•√£√Æ √≤√∞√†√≠√±√Ø√Æ√∞√≤√†");
		if(pData[playerid][pCar][0] == 0 && pData[playerid][pCar][1] == 0 && pData[playerid][pCar][2] == 0)
			return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √§√Æ√¨√†√∏√≠√•√£√Æ √≤√∞√†√≠√±√Ø√Æ√∞√≤√†");
		string[0] = EOS;
		new text_car_1[140], text_car_2[140], text_car_3[140];
		if(pData[playerid][pCar][0] != 0) format(text_car_1, 140, "(√¨√†√∞√™√†: %s)", VehicleNames[pData[playerid][pCar][0] - 400]);
		else strcat(text_car_1, "{ff4d4d}(√Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤)");
		if(pData[playerid][pCar][1] != 0) format(text_car_2, 140, "(√¨√†√∞√™√†: %s)", VehicleNames[pData[playerid][pCar][1] - 400]);
		else strcat(text_car_2, "{ff4d4d}(√Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤)");
		if(pData[playerid][pCar][2] != 0) format(text_car_3, 140, "(√¨√†√∞√™√†: %s)", VehicleNames[pData[playerid][pCar][2] - 400]);
		else strcat(text_car_3, "{ff4d4d}(√Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤)");
		format(string, 400, ""CLITEBLUE"√Ç√ª√°√•√∞√®√≤√• √†√¢√≤√Æ√¨√Æ√°√®√´√º √®√ß √±√Ø√®√±√™√† √≠√®√¶√•:\n"CWHITE"√è√•√∞√¢√ª√© √†√¢√≤√Æ√¨√Æ√°√®√´√º "CMAIN"%s\n"CWHITE"√Ç√≤√Æ√∞√Æ√© √†√¢√≤√Æ√¨√Æ√°√®√´√º "CMAIN"%s\n"CWHITE"√í√∞√•√≤√®√© √†√¢√≤√Æ√¨√Æ√°√®√´√º "CMAIN"%s", text_car_1, text_car_2, text_car_3);
		SPD(playerid, 129, DIALOG_STYLE_LIST, ""CPALEGREEN"√à√ß√¨√•√≠√•√≠√®√• √∂√¢√•√≤√Æ√¢ √†√¢√≤√Æ√¨√Æ√°√®√´√ø {ff9945}(√±√≤√Æ√®√≤ 500$)", string, "Seleccione", "Cerrar");
	}

	if(pickupid == voenk_work) {
		if(!GetPVarInt(playerid, "prizivnik")) SPD(playerid,1220,DIALOG_STYLE_MSGBOX,"√ê√†√ß√§√•√¢√†√´√™√†",""CWHITE"Quieres √Ø√•√∞√•√Æ√§√•√≤√º√±√ø √¢ √¥√Æ√∞√¨√≥ √Ø√∞√®√ß√ª√¢√≠√®√™√†?","S√≠","No");
		else SPD(playerid,1221,DIALOG_STYLE_MSGBOX,"√ê√†√ß√§√•√¢√†√´√™√†",""CWHITE"Quieres √Ø√•√∞√•√Æ√§√•√≤√º√±√ø √¢ √±√¢√Æ√æ √Æ√°√ª√∑√≠√≥√æ √Æ√§√•√¶√§√≥?","S√≠","No");
	}

	if(pickupid == cexEnter) {
		SetPlayerPos(playerid, 2575.5264,-1286.3477,1044.1250);
		SetPlayerVirtualWorld(playerid, 10);
		SetPlayerInterior(playerid, 2);
		SetPlayerFacingAngle(playerid, 180);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == cexExit) {
		SetPlayerPos(playerid, -88.8072,-300.4609,2.7646);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 87);
		SetCameraBehindPlayer(playerid);
	}

	if(pickupid == zavodm || 
		pickupid == zavodm+1 || 
		pickupid == zavodm+2 || 
		pickupid == zavodm+3 || 
		pickupid == zavodm+4 || 
		pickupid == zavodm+5) {
		if(!workzavod[playerid]) return 1;
	    if(GetPVarInt(playerid, "mymetal") > 0) 
	    	return SCM(playerid, COLOR_GREY, "√Ç√ª √≥√¶√• √¢√ß√ø√´√® √¨√•√≤√†√´√´");
		switch(random(4))
	    {
	    	case 0:
	        {
	            SetPVarInt(playerid, "mymetal", 2);
		        GameTextForPlayer(playerid, "~b~+2 kg", 1500, 1);
	        }
	        case 1,2,3:
	        {
	            SetPVarInt(playerid, "mymetal", 1);
		        GameTextForPlayer(playerid, "~b~+1 kg", 1500, 1);
	        }
	    }
	}
	if(pickupid == zavodwork || pickupid == zavodwork+1 || pickupid == zavodwork+2) {
		if(!workzavod[playerid]) SPD(playerid,7990,DIALOG_STYLE_MSGBOX,"{FFCD00}√á√†√¢√Æ√§",""CWHITE"Quieres √≠√†√∑√†√≤√º √∞√†√°√Æ√≤√≥ √¢ √Ø√∞√Æ√®√ß√¢√Æ√§√±√≤√¢√•√≠√≠√Æ√¨ √∂√•√µ√≥?","S√≠","No");
		else SPD(playerid,7991,DIALOG_STYLE_MSGBOX,"{FFCD00}√á√†√¢√Æ√§",""CWHITE"√á√†√™√Æ√≠√∑√®√≤√º √∞√†√°√Æ√≤√≥ √¢ √Ø√∞√Æ√®√ß√¢√Æ√§√±√≤√¢√•√≠√≠√Æ√¨ √∂√•√µ√≥?","S√≠","No");
	}

	if(pickupid == zavodinfo) {
		SPD(playerid,0,DIALOG_STYLE_MSGBOX,"{FFCD00}√á√†√¢√Æ√§ - √è√∞√Æ√®√ß√¢√Æ√§√±√≤√¢√•√≠√≠√ª√© √∂√•√µ",
			""CWHITE"√ó√≤√Æ√°√ª √≠√†√∑√†√≤√º √∞√†√°√Æ√∑√®√© √§√•√≠√º, √Ø√∞√Æ√©√§√®√≤√• √™ √´√æ√°√Æ√© √∞√†√ß√§√•√¢√†√´√™√•. √í√†√¨ √¶√•\n\
			√¨√Æ√¶√≠√Æ √ß√†√™√Æ√≠√∑√®√≤√º √•√£√Æ √® √Ø√Æ√´√≥√∑√®√≤√º √¢√ª√∞√≥√∑√™√≥. S√≠√´√•√• √Ø√∞√Æ√©√§√®√≤√• √™\n\
			√∞√†√ßS√≠√≤√Æ√∑√≠√Æ√¨√≥ √±√≤√Æ√´√≥ (√Æ√≤√¨√•√∑√•√≠√ª √¶¬∏√´√≤√ª√¨√® √¨√†√∞√™√•√∞√†√¨√®), √¢√Æ√ß√º√¨√®√≤√•\n\
			√¨√•√≤√†√´√´, √Ø√Æ√±√´√• √∑√•√£√Æ √Æ√≤√Ø√∞√†√¢√´√ø√©√≤√•√±√º √≠√† √´√æ√°√Æ√• √±√¢√Æ√°√Æ√§√≠√Æ√• √¨√•√±√≤√Æ √¢ √∂√•√≠√≤√∞√•\n\
			√∂√•√µ√†. √í√Æ√Ø√´√®√¢√Æ, √≠√•√Æ√°√µ√Æ√§√®√¨√Æ√• √§√´√ø √®√ß√£√Æ√≤√Æ√¢√´√•√≠√®√ø √Ø√∞√Æ√§√≥√™√≤√†, √†√¢√≤√Æ√¨√†√≤√®√∑√•√±√™√®\n\
			√Ø√ÆS√≠¬∏√≤√±√ø √™ √™√†√¶√§√Æ√¨√≥ √±√≤√Æ√´√≥, √® √Ç√†√¨ √≠√• √≠√≥√¶√≠√Æ √°√∞√†√≤√º √•√£√Æ √§√Æ√Ø√Æ√´√≠√®√≤√•√´√º√≠√Æ.\n\
			\n\
			√ó√•√¨ √°√Æ√´√º√∏√• √Ç√ª √∞√†√°√Æ√≤√†√•√≤√• √¢ √∂√•√µ√≥, √≤√•√¨ √¢√ª√∏√• √¢√†√∏√® √≠√†√¢√ª√™√® √Ø√∞√Æ√®√ß√¢√Æ√§√±√≤√¢√†,\n\
			√® √≤√•√¨ √¨√•√≠√º√∏√• √∏√†√≠√± √±√Æ√ßS√≠√≤√º √°√∞√†√™√Æ√¢√†√≠√≠√ª√© √Ø√∞√Æ√§√≥√™√≤. √ç√†√¢√ª√™ √°√≥√§√•√≤\n\
			√≥√¢√•√´√®√∑√®√¢√†√≤√º√±√ø √Ø√Æ √¨√•√∞√• √±√Æ√ßS√≠√≠√®√ø √≠√Æ√¢√ª√µ √Ø√∞√Æ√§√≥√™√≤√Æ√¢.",
		"Cerrar","");
	}

	if(pickupid == barrackexit) {
		switch(GetPlayerVirtualWorld(playerid)) {
			case 1: {
				SetPlayerPos(playerid, 157.6, 1903.2, 18.6);
				SetPlayerFacingAngle(playerid, 270.0);
			}
			case 2: {
				SetPlayerPos(playerid, 422.7, 2545.5, 16.3);
				SetPlayerFacingAngle(playerid, 180.0);
			}
			case 3: {
				SetPlayerPos(playerid, -2241.6, 2292.7, 5.2);
				SetPlayerFacingAngle(playerid, 180.0);
			}
			default: return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [061]");
		}
		SetCameraBehindPlayer(playerid);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
	}

	if(pickupid == workcasino) {
		if(is_work_casino[playerid]) SPD(playerid,1051,DIALOG_STYLE_MSGBOX,""CERROR"√è√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√•",""CWHITE"Quieres √≥√¢√Æ√´√®√≤√º√±√ø √± √§√Æ√´√¶√≠√Æ√±√≤√® √™√∞√≥√Ø√º√•?","S√≠","No");
		else SPD(playerid,1050,DIALOG_STYLE_MSGBOX,"{ffcc33}√ì√±√≤√∞√Æ√©√±√≤√¢√Æ","\n"CWHITE"Quieres √≥√±√≤√∞√Æ√®√≤√º√±√ø √™√∞√≥√Ø√º√• √¢ √Ω√≤√Æ√¨ √™√†√ß√®√≠√Æ?\n√ä√†√¶√§√ª√© √∑√†√± √Ç√ª √°√≥√§√•√≤√• √Ø√Æ√´√≥√∑√†√≤√º √Ø√Æ "CPALEGREEN"15 "CWHITE"√®√£√∞√Æ√¢√ª√µ √¥√®√∏√•√™","S√≠","No");
	}

	if(pickupid == voenk_enter) {
		SetPlayerPos(playerid, 1163.1942,1359.2538,10.8800);
		antiflood_move[playerid] = gettime() + 3;
	}
	if(pickupid == voenk_exit) {
		if(GetPVarInt(playerid, "prizivnik")) {
			DeletePVar(playerid, "prizivnik");
			if(pData[playerid][pMember]) SetPlayerSkin(playerid, pData[playerid][pModel]);
			else SetPlayerSkin(playerid, pData[playerid][pChar]);
		}
		SetPlayerPos(playerid, 1163.2997,1366.5961,10.8125);
		antiflood_move[playerid] = gettime() + 3;
	}

	if(pickupid == army_guns) {
		switch(GetPlayerVirtualWorld(playerid)) {
			case 1: {
				if((pData[playerid][pMember] != 26 || pData[playerid][pRank] != 8) && pData[playerid][pMember] != 19) 
					return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Ω√≤√Æ");
				new str_storeg[255];
				format(str_storeg, 255, "√é√∞√≥√¶√®√•\t\t√Ñ√Æ√±√≤√≥√Ø√≠√Æ √±\t\t√ç√† √±√™√´√†√§√•\n\
					Desert Eagle\t\t1 √∞√†√≠√£√†\t\t{ff9966}%d √∏√≤.\n\
					"CWHITE"MP5\t\t\t2 √∞√†√≠√£√†\t\t{ff9966}%d √∏√≤.\n\
					"CWHITE"M4\t\t\t3 √∞√†√≠√£√†\t\t{ff9966}%d √∏√≤.\n\
					"CWHITE"Sniper Rifle\t\t7 √∞√†√≠√£√†\t\t{ff9966}%d √∏√≤.", 
				deaglesv_status, mp5sv_status, m4sv_status, snipersv_status);
				SPD(playerid, 2841, DIALOG_STYLE_TABLIST_HEADERS, ""CMAIN"√ë√™√´√†√§ √Æ√∞√≥√¶√®√ø", str_storeg, "√Ç√ß√ø√≤√º", "Cerrar");
			}
			case 2: {
				if((pData[playerid][pMember] != 26 || pData[playerid][pRank] != 8) && pData[playerid][pMember] != 20) 
					return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Ω√≤√Æ");
				new str_storeg[255];
				format(str_storeg, 255, "√é√∞√≥√¶√®√•\t\t√Ñ√Æ√±√≤√≥√Ø√≠√Æ √±\t\t√ç√† √±√™√´√†√§√•\n\
					Desert Eagle\t\t1 √∞√†√≠√£√†\t\t{ff9966}%d √∏√≤.\n\
					"CWHITE"MP5\t\t\t2 √∞√†√≠√£√†\t\t{ff9966}%d √∏√≤.\n\
					"CWHITE"M4\t\t\t3 √∞√†√≠√£√†\t\t{ff9966}%d √∏√≤.\n\
					"CWHITE"Sniper Rifle\t\t7 √∞√†√≠√£√†\t\t{ff9966}%d √∏√≤.", 
				deaglevvc_status, mp5vvc_status, m4vvc_status, snipervvc_status);
				SPD(playerid, 2842, DIALOG_STYLE_TABLIST_HEADERS, ""CMAIN"√ë√™√´√†√§ √Æ√∞√≥√¶√®√ø", str_storeg, "√Ç√ß√ø√≤√º", "Cerrar");
			}
			case 3: {
				if((pData[playerid][pMember] != 26 || pData[playerid][pRank] != 8) && pData[playerid][pMember] != 27) 
					return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Ω√≤√Æ");
				new str_storeg[255];
				format(str_storeg, 255, "√é√∞√≥√¶√®√•\t\t√Ñ√Æ√±√≤√≥√Ø√≠√Æ √±\t\t√ç√† √±√™√´√†√§√•\n\
					Desert Eagle\t\t1 √∞√†√≠√£√†\t\t{ff9966}%d √∏√≤.\n\
					"CWHITE"MP5\t\t\t2 √∞√†√≠√£√†\t\t{ff9966}%d √∏√≤.\n\
					"CWHITE"M4\t\t\t3 √∞√†√≠√£√†\t\t{ff9966}%d √∏√≤.\n\
					"CWHITE"Sniper Rifle\t\t7 √∞√†√≠√£√†\t\t{ff9966}%d √∏√≤.", 
				deaglevmf_status, mp5vmf_status, m4vmf_status, snipervmf_status);
				SPD(playerid, 2843, DIALOG_STYLE_TABLIST_HEADERS, ""CMAIN"√ë√™√´√†√§ √Æ√∞√≥√¶√®√ø", str_storeg, "√Ç√ß√ø√≤√º", "Cerrar");
			}
		}
	}

	if(pickupid == slot_casino_info) {
		SPD(playerid,0,DIALOG_STYLE_MSGBOX,"{ffcc33}√é√§√≠√Æ√∞√≥√™√®√© √°√†√≠√§√®√≤",
			"\n\
			"CWHITE"√Ñ√´√ø √≠√†√∑√†√´√† √®√£√∞√ª:\n\
			1. √è√Æ√§√Æ√©√§√®√≤√• √™ √Æ√§√≠√Æ√¨√≥ √®√ß √†√¢√≤√Æ√¨√†√≤√Æ√¢\n\
			2. √Ç√ª√°√•√∞√®√≤√• √±√≤√†√¢√™√≥ ({ffcc33}BET"CWHITE")\n\
			\n\
			√Ä√¢√≤√Æ√¨√†√≤ √®√¨√•√•√≤ {7094ff}3 "CWHITE"√°√†√∞√†√°√†√≠√†, √™√†√¶√§√ª√© √®√ß √™√Æ√≤√Æ√∞√ª√µ √®√¨√•√•√≤ {7094ff}6 "CWHITE"√∞√†√ß√´√®√∑√≠√ª√µ √®√ß√Æ√°√∞√†√¶√•√≠√®√©\n\
			\n\
			√Ç√ª√®√£√∞√ª√∏√≠√ª√• √™√Æ√¨√°√®√≠√†√∂√®√®:\n\
			{744d99}1. "CWHITE"√Ñ√¢√• √ß√Æ√´√Æ√≤√ª√µ √Ø√´√®√≤√™√® √≠√† √°√†√∞√†√°√†√≠√†√µ - √¢√†√∏√† √±√≤√†√¢√™√† {336633}√≥√§√¢√†√®√¢√†√•√≤√±√ø\n\
			{744d99}2. "CWHITE"√Ñ√¢√• √§√¢√Æ√©√≠√ª√µ √ß√Æ√´√Æ√≤√ª√µ √Ø√´√®√≤√™√® √≠√† √°√†√∞√†√°√†√≠√†√µ - √¢√†√∏√† √±√≤√†√¢√™√† {336633}√≥√≤√∞√†√®√¢√†√•√≤√±√ø\n\
			{744d99}3. "CWHITE"√í√∞√® √Æ√§√®√≠√†√™√Æ√¢√ª√µ √®√ß√Æ√°√∞√†√¶√•√≠√®√ø √≠√† √°√†√∞√†√°√†√≠√†√µ - √¢√†√∏√† √±√≤√†√¢√™√† √≥√¢√•√´√®√∑√®√¢√†√•√≤√±√ø √¢ {336633}20 √∞√†√ß\n",
		"Cerrar","");
	}

	if(pickupid == bigint_enter) {
		load_mode(playerid);
		SetPlayerPos(playerid, -1027.1439,-1302.7921,3110.2124);
		SetPlayerVirtualWorld(playerid, 1);
		SetPlayerInterior(playerid, 1);
		SetPlayerFacingAngle(playerid, 270.0);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	if(pickupid == bigint_exit) {
		load_mode(playerid);
		SetPlayerPos(playerid, -1103.6141,-1007.7399,131.0641);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 180.0);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}

	if(pickupid == charity_pic) 
		SPD(playerid, 115, DIALOG_STYLE_INPUT, "{40bf80}√Å√´√†√£√Æ√≤√¢√Æ√∞√®√≤√•√´√º√≠√Æ√±√≤√º", ""CWHITE"√è√∞√•√§√´√†√£√†√•√¨ √Ç√†√¨ √Ø√•√∞√•√∑√®√±√´√®√≤√º √´√æ√°√≥√æ √±√≥√¨√¨√≥ √¢ √°√´√†√£√Æ√≤√¢√Æ√∞√®√≤√•√´√º√≠√ª√©\n√¥√Æ√≠√§ √∏√≤√†√≤√†. √Ç√±√• √Ø√Æ√´√≥√∑√•√≠√≠√ª√• √±√∞√•√§√±√≤√¢√† √Ø√Æ√©√§√≥√≤ √≠√† √≥√´√≥√∑√∏√•√≠√®√•\n√Ω√™√Æ√≠√Æ√¨√®√™√® √® √±√Æ√±√≤√Æ√ø√≠√®√ø √∏√≤√†√≤√†. √è√Æ√¨√®√¨√Æ √Ω√≤√Æ√£√Æ, √Ç√ª √±√¨√Æ√¶√•√≤√• √Ø√Æ√Ø√†√±√≤√º\n√¢ √±√Ø√®√±√Æ√™ √´√≥√∑√∏√®√µ √°√´√†√£√Æ√≤√¢√Æ√∞√®√≤√•√´√•√©, √±√§√•√´√†√¢√∏√®√µ √≠√†√®√°√Æ√´√º√∏√®√• √¢√ß√≠√Æ√±√ª.\n\n√è√Æ√±√¨√Æ√≤√∞√•√≤√º √Ω√≤√Æ√≤ √±√Ø√®√±√Æ√™ √¨√Æ√¶√≠√Æ √®√±√Ø√Æ√´√º√ß√≥√ø /charity.\n√í√†√¨ √¶√• √Ç√ª √±√¨√Æ√¶√•√≤√• √Ø√Æ√±√¨√Æ√≤√∞√•√≤√º √Æ√°√π√≥√æ √±√≥√¨√¨√≥ √Ç√†√∏√®√µ √Ø√Æ√¶√•√∞√≤√¢√Æ√¢√†√≠√®√©.", "√Ç√≠√•√±√≤√®", "Cerrar");

	if(pickupid == jailfree) {
		if(pData[playerid][pWanted] == 0) 
			return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¢ √∞√Æ√ß√ª√±√™√•");
		SPD(playerid,826,DIALOG_STYLE_MSGBOX,"{ffaa00}√ëS√≠√∑√† √± √Ø√Æ√¢√®√≠√≠√Æ√©",
			""CWHITE"√è√∞√® √≠√†√´√®√∑√®√® √∞√Æ√ß√ª√±√™√† √Ç√ª √¨√Æ√¶√•√≤√• √±S√≠√≤√º√±√ø √Ø√Æ√´√®√∂√®√® √§√Æ√°√∞√Æ√¢√Æ√´√º√≠√Æ.\n\
			√è√∞√® √Ω√≤√Æ√¨ √¢√†√∏ √±√∞√Æ√™ √¢ √≤√æ√∞√º√¨√• √°√≥√§√•√≤ √≥√¨√•√≠√º√∏√•√≠. √Ç√ª √§√•√©√±√≤√¢√®√≤√•√´√º√≠√Æ\n\
			√µ√Æ√≤√®√≤√• √Ø√∞√®√ß√≠√†√≤√º √±√¢√Æ√æ √¢√®√≠√≥ √® √Æ√≤√Ø√∞√†√¢√®√≤√º√±√ø √Æ√≤√°√ª√¢√†√≤√º √≠√†√™√†√ß√†√≠√®√•?",
		"√ëS√≠√≤√º√±√ø","Cerrar");
	}

	if(pickupid == zalenter) {
		load_mode(playerid);
		SetPlayerPos(playerid, 936.6019,-198.9430,959.3950);
		SetPlayerFacingAngle(playerid, 90);
		SetCameraBehindPlayer(playerid);
		SetPlayerVirtualWorld(playerid, 22);
	}
	if(pickupid == zalexit) {
		load_mode(playerid);
		SetPlayerPos(playerid, 1387.4630,-25.5769,1000.9299);
		SetPlayerFacingAngle(playerid, 90);
		SetCameraBehindPlayer(playerid);
		SetPlayerVirtualWorld(playerid, 0);
	}

	if(pickupid == wantedpic) {
		new strf[110],
			wanted,
			prisoners,
			all;
		foreach(new i:Player) {
			all++;
			if(pData[i][pWanted] > 0) 
				wanted++;
			if(pData[i][pPrisonTime] > 0 || pData[i][pJailTime] > 0) 
				prisoners++;
		}
		format(strf,sizeof(strf),"\n\n"CWHITE"√ì√∞√Æ√¢√•√≠√º √Ø√∞√•√±√≤√≥√Ø√≠√Æ√±√≤√®: "CMAIN"%0.1f%%\n"CWHITE"√á√†√™√´√æ√∑√•√≠√≠√ª√µ: "CBLUE"%d\n\n",(Float:wanted*100)/Float:all,prisoners);
		SPD(playerid,0,DIALOG_STYLE_MSGBOX,""CMAIN"√ì√∞√Æ√¢√•√≠√º √Ø√∞√•√±√≤√≥√Ø√≠√Æ√±√≤√®",strf,"Cerrar","");
	}

	if(pickupid == unikPicAuto) {
		if(unikautoOwner == -1) {
			if(pData[playerid][unikauto_Have] != 0 || pData[playerid][autoHave] != 0 || pData[playerid][pBusiness] != -1 || pData[playerid][pFilling] != -1 || pData[playerid][food_have] != 0 || pData[playerid][prok_have] != 0 || pData[playerid][kiosk_have] != 0) 
				return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≥√¶√• √•√±√≤√º √°√®√ß√≠√•√± √®√´√® √Ä√á√ë");
			else return SPD(playerid, 5845, DIALOG_STYLE_MSGBOX, "{ffd770}√è√Æ√™√≥√Ø√™√† √°√®√ß√≠√•√±√†", ""CWHITE"√ç√†√ß√¢√†√≠√®√•:\t\t{009900}√Ä√¢√≤√Æ√±√†√´√Æ√≠ √Ω√™√±√™√´√æ√ß√®√¢√≠√ª√µ √†√¢√≤√Æ\n"CWHITE"√ë√≤√Æ√®√¨√Æ√±√≤√º:\t\t{009900}36000000$\n\n{ccff66}Quieres √™√≥√Ø√®√≤√º √Ω√≤√Æ√≤ √°√®√ß√≠√•√±?", "S√≠", "No");
		}
		if(unikautoOwner != pData[playerid][pID]) return SCM(playerid, COLOR_LIGHTGREY, "√ì√Ø√∞√†√¢√´√•√≠√®√• √°√®√ß√≠√•√±√Æ√¨ √§√Æ√±√≤√≥√Ø√≠√Æ √≤√Æ√´√º√™√Æ √•√£√Æ √¢√´√†√§√•√´√º√∂√≥");
		SPD(playerid, 5962, DIALOG_STYLE_LIST, ""CMAIN"√ì√Ø√∞√†√¢√´√•√≠√®√•", "[1] √ë√Æ√±√≤√Æ√ø√≠√®√• √Æ√Ø√´√†√≤√ª\n[2] √ä√†√±√±√† √°√®√ß√≠√•√±√†\n[3] √è√∞√ÆS√≠√≤√º √°√®√ß√≠√•√± √£√Æ√±√≥S√≠√∞√±√≤√¢√≥\n[4] √è√∞√ÆS√≠√≤√º √°√®√ß√≠√•√± √§√∞√≥√£√Æ√¨√≥ √®√£√∞√Æ√™√≥", "Seleccione", "Cerrar");
	}

	if(pickupid == menuAsh) 
		SPD(playerid,9900,2, "{FFCD00}√è√Æ√´√≥√∑√•√≠√®√• √´√®√∂√•√≠√ß√®√©", "√ç√†√ß√•√¨√≠√ª√© √≤√∞√†√≠√±√Ø√Æ√∞√≤\n√Ç√Æ√ß√§√≥√∏√≠√ª√© √≤√∞√†√≠√±√Ø√Æ√∞√≤\n√Ç√Æ√§√≠√ª√© √≤√∞√†√≠√±√Ø√Æ√∞√≤ "CCYAN"(25000$)\n"CWHITE"√é√∞√≥√¶√®√• "CCYAN"(50000$)", "Seleccione", "Cerrar");

	if(pickupid == pick_kiosk_1) {
		if(kiosk1_owner == -1) {
			if(pData[playerid][unikauto_Have] != 0 || pData[playerid][autoHave] != 0 || pData[playerid][pBusiness] != -1 || pData[playerid][pFilling] != -1 || pData[playerid][food_have] != 0 || pData[playerid][prok_have] != 0 || pData[playerid][kiosk_have] != 0) 
				return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≥√¶√• √•√±√≤√º √°√®√ß√≠√•√± √®√´√® √Ä√á√ë");
			else return SPD(playerid, 5645, DIALOG_STYLE_MSGBOX, "{ffd770}√è√Æ√™√≥√Ø√™√† √°√®√ß√≠√•√±√†", ""CWHITE"√ç√†√ß√¢√†√≠√®√•:\t\t{009900}√ä√®√Æ√±√™\n"CWHITE"√ë√≤√Æ√®√¨√Æ√±√≤√º:\t\t{009900}500000$\n\n{ccff66}Quieres √™√≥√Ø√®√≤√º √Ω√≤√Æ√≤ √°√®√ß√≠√•√±?", "S√≠", "No");
		}
		if(kiosk1_owner != pData[playerid][pID]) return SCM(playerid, COLOR_LIGHTGREY, "√ì√Ø√∞√†√¢√´√•√≠√®√• √™√®√Æ√±√™√Æ√¨ √§√Æ√±√≤√≥√Ø√≠√Æ √≤√Æ√´√º√™√Æ √•√£√Æ √¢√´√†√§√•√´√º√∂√≥");
		SPD(playerid, 5662, DIALOG_STYLE_LIST, ""CMAIN"√ì√Ø√∞√†√¢√´√•√≠√®√•", "[1] √ë√Æ√±√≤√Æ√ø√≠√®√• √Æ√Ø√´√†√≤√ª\n[2] √ä√†√±√±√† √°√®√ß√≠√•√±√†\n[3] √è√∞√ÆS√≠√≤√º √°√®√ß√≠√•√± √£√Æ√±√≥S√≠√∞√±√≤√¢√≥\n[4] √è√∞√ÆS√≠√≤√º √°√®√ß√≠√•√± √§√∞√≥√£√Æ√¨√≥ √®√£√∞√Æ√™√≥", "Seleccione", "Cerrar");
	}
	if(pickupid == pick_kiosk_2) {
		if(kiosk2_owner == -1) {
			if(pData[playerid][unikauto_Have] != 0 || pData[playerid][autoHave] != 0 || pData[playerid][pBusiness] != -1 || pData[playerid][pFilling] != -1 || pData[playerid][food_have] != 0 || pData[playerid][prok_have] != 0 || pData[playerid][kiosk_have] != 0) 
				return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≥√¶√• √•√±√≤√º √°√®√ß√≠√•√± √®√´√® √Ä√á√ë");
			else return SPD(playerid, 5646, DIALOG_STYLE_MSGBOX, "{ffd770}√è√Æ√™√≥√Ø√™√† √°√®√ß√≠√•√±√†", ""CWHITE"√ç√†√ß√¢√†√≠√®√•:\t\t{009900}√ä√®√Æ√±√™\n"CWHITE"√ë√≤√Æ√®√¨√Æ√±√≤√º:\t\t{009900}500000$\n\n{ccff66}Quieres √™√≥√Ø√®√≤√º √Ω√≤√Æ√≤ √°√®√ß√≠√•√±?", "S√≠", "No");
		}
		if(kiosk2_owner != pData[playerid][pID]) return SCM(playerid, COLOR_LIGHTGREY, "√ì√Ø√∞√†√¢√´√•√≠√®√• √™√®√Æ√±√™√Æ√¨ √§√Æ√±√≤√≥√Ø√≠√Æ √≤√Æ√´√º√™√Æ √•√£√Æ √¢√´√†√§√•√´√º√∂√≥");
		SPD(playerid, 5663, DIALOG_STYLE_LIST, ""CMAIN"√ì√Ø√∞√†√¢√´√•√≠√®√•", "[1] √ë√Æ√±√≤√Æ√ø√≠√®√• √Æ√Ø√´√†√≤√ª\n[2] √ä√†√±√±√† √°√®√ß√≠√•√±√†\n[3] √è√∞√ÆS√≠√≤√º √°√®√ß√≠√•√± √£√Æ√±√≥S√≠√∞√±√≤√¢√≥\n[4] √è√∞√ÆS√≠√≤√º √°√®√ß√≠√•√± √§√∞√≥√£√Æ√¨√≥ √®√£√∞√Æ√™√≥", "Seleccione", "Cerrar");
	}
	if(pickupid == pick_kiosk_3) {
		if(kiosk3_owner == -1) {
			if(pData[playerid][unikauto_Have] != 0 || pData[playerid][autoHave] != 0 || pData[playerid][pBusiness] != -1 || pData[playerid][pFilling] != -1 || pData[playerid][food_have] != 0 || pData[playerid][prok_have] != 0 || pData[playerid][kiosk_have] != 0) 
				return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≥√¶√• √•√±√≤√º √°√®√ß√≠√•√± √®√´√® √Ä√á√ë");
			else return SPD(playerid, 5647, DIALOG_STYLE_MSGBOX, "{ffd770}√è√Æ√™√≥√Ø√™√† √°√®√ß√≠√•√±√†", ""CWHITE"√ç√†√ß√¢√†√≠√®√•:\t\t{009900}√ä√®√Æ√±√™\n"CWHITE"√ë√≤√Æ√®√¨√Æ√±√≤√º:\t\t{009900}500000$\n\n{ccff66}Quieres √™√≥√Ø√®√≤√º √Ω√≤√Æ√≤ √°√®√ß√≠√•√±?", "S√≠", "No");
		}
		if(kiosk3_owner != pData[playerid][pID]) return SCM(playerid, COLOR_LIGHTGREY, "√ì√Ø√∞√†√¢√´√•√≠√®√• √™√®√Æ√±√™√Æ√¨ √§√Æ√±√≤√≥√Ø√≠√Æ √≤√Æ√´√º√™√Æ √•√£√Æ √¢√´√†√§√•√´√º√∂√≥");
		SPD(playerid, 5664, DIALOG_STYLE_LIST, ""CMAIN"√ì√Ø√∞√†√¢√´√•√≠√®√•", "[1] √ë√Æ√±√≤√Æ√ø√≠√®√• √Æ√Ø√´√†√≤√ª\n[2] √ä√†√±√±√† √°√®√ß√≠√•√±√†\n[3] √è√∞√ÆS√≠√≤√º √°√®√ß√≠√•√± √£√Æ√±√≥S√≠√∞√±√≤√¢√≥\n[4] √è√∞√ÆS√≠√≤√º √°√®√ß√≠√•√± √§√∞√≥√£√Æ√¨√≥ √®√£√∞√Æ√™√≥", "Seleccione", "Cerrar");
	}
	if(pickupid == pick_kiosk_4) {
		if(kiosk4_owner == -1) {
			if(pData[playerid][unikauto_Have] != 0 || pData[playerid][autoHave] != 0 || pData[playerid][pBusiness] != -1 || pData[playerid][pFilling] != -1 || pData[playerid][food_have] != 0 || pData[playerid][prok_have] != 0 || pData[playerid][kiosk_have] != 0) 
				return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≥√¶√• √•√±√≤√º √°√®√ß√≠√•√± √®√´√® √Ä√á√ë");
			else return SPD(playerid, 5648, DIALOG_STYLE_MSGBOX, "{ffd770}√è√Æ√™√≥√Ø√™√† √°√®√ß√≠√•√±√†", ""CWHITE"√ç√†√ß√¢√†√≠√®√•:\t\t{009900}√ä√®√Æ√±√™\n"CWHITE"√ë√≤√Æ√®√¨√Æ√±√≤√º:\t\t{009900}500000$\n\n{ccff66}Quieres √™√≥√Ø√®√≤√º √Ω√≤√Æ√≤ √°√®√ß√≠√•√±?", "S√≠", "No");
		}
		if(kiosk4_owner != pData[playerid][pID]) return SCM(playerid, COLOR_LIGHTGREY, "√ì√Ø√∞√†√¢√´√•√≠√®√• √™√®√Æ√±√™√Æ√¨ √§√Æ√±√≤√≥√Ø√≠√Æ √≤√Æ√´√º√™√Æ √•√£√Æ √¢√´√†√§√•√´√º√∂√≥");
		SPD(playerid, 5665, DIALOG_STYLE_LIST, ""CMAIN"√ì√Ø√∞√†√¢√´√•√≠√®√•", "[1] √ë√Æ√±√≤√Æ√ø√≠√®√• √Æ√Ø√´√†√≤√ª\n[2] √ä√†√±√±√† √°√®√ß√≠√•√±√†\n[3] √è√∞√ÆS√≠√≤√º √°√®√ß√≠√•√± √£√Æ√±√≥S√≠√∞√±√≤√¢√≥\n[4] √è√∞√ÆS√≠√≤√º √°√®√ß√≠√•√± √§√∞√≥√£√Æ√¨√≥ √®√£√∞√Æ√™√≥", "Seleccione", "Cerrar");
	}

	if(pickupid == int_krisha_pic) {
		if(!IsAMedic(playerid)) 
			return SCM(playerid,COLOR_ERROR,"√Ç√†√¨ √≠√•√§√Æ√±√≤√≥√Ø√•√≠ √Ω√≤√Æ√≤ √Ø√∞√Æ√µ√Æ√§");
		switch(GetPlayerVirtualWorld(playerid)) {
			case 1: {
				SetPlayerPos(playerid, 1161.2695,-1328.1919,31.5004);
				SetPlayerFacingAngle(playerid, 0.0);
			}
			case 2: {
				SetPlayerPos(playerid, -2683.3335,591.3527+2,66.0938);
				SetPlayerFacingAngle(playerid, 0.0);
			}
			case 3: {
				SetPlayerPos(playerid, 1607.8799,1787.4456,30.4688);
				SetPlayerFacingAngle(playerid, 0.0);
			}
		}
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, 0);
		return SetPlayerVirtualWorld(playerid, 0);
	}
	if(pickupid == bolkkrishals) {
		load_mode(playerid);
		SetPlayerPos(playerid, 1493.2175,-1845.8031,2994.7290);
		SetPlayerFacingAngle(playerid, 90);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, 1);
		return SetPlayerVirtualWorld(playerid, 1);
	}
	if(pickupid == bolkkrishasf) {
		load_mode(playerid);
		SetPlayerPos(playerid, 1493.2175,-1845.8031,2994.7290);
		SetPlayerFacingAngle(playerid, 90);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, 1);
		return SetPlayerVirtualWorld(playerid, 2);
	}
	if(pickupid == bolkkrishalv) {
		load_mode(playerid);
		SetPlayerPos(playerid, 1493.2175,-1845.8031,2994.7290);
		SetPlayerFacingAngle(playerid, 90);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, 1);
		return SetPlayerVirtualWorld(playerid, 3);
	}
	if(pickupid == additbolk_enter) {
		load_mode(playerid);
		SetPlayerPos(playerid, 1481.0603,-1845.9260,2994.7292);
		SetPlayerFacingAngle(playerid, 0.0);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	if(pickupid == additbolk_exit) {
		load_mode(playerid);
		SetPlayerPos(playerid, 1191.7015,-1342.3525,1584.9778);
		SetPlayerFacingAngle(playerid, 180.0);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}

	if(pickupid == menu_cent_bank) show_menu_bank(playerid);

	new market_buyplace = -1, count_items;
	for(new i =0; i < 9; i++) {
		if(in_buymenu_market[playerid]) return 1;
		if(pickupid != rinok_pick[i]) continue;
		if(selleritemid[i] == -1) 
			return SCM(playerid, COLOR_LIGHTGREY, "√á√† √Ω√≤√Æ√© √Ø√†√´√†√≤√™√Æ√© √≠√®√∑√•√£√Æ √≠√• √Ø√∞√ÆSNo√±√ø");
		market_buyplace= i;
		break;
	}
	if(market_buyplace != -1) {
		for(new i =0; i < 5; i++) {
			if(modelitem[market_buyplace][i] == -1) 
				continue;
			count_items ++;
		}
		switch(count_items) {
			case 1: {
				#include <market_TDs_1>
			}
			case 2: {
				#include <market_TDs_2>
			}
			case 3: {
				#include <market_TDs_3>
			}
			case 4: {
				#include <market_TDs_4>
			}
			case 5: {
				#include <market_TDs_5>
			}
		}
		#include <info_TDs_market>
		new modeltd,texttd=1;
		for(new i =0; i < 5; i++) {
			if(modelitem[market_buyplace][i] == -1) 
				continue;
			set_preview_market(playerid,i,modeltd,texttd,market_buyplace);
			modeltd+=2;
			texttd+=2;
		}
		SetPVarInt(playerid, "mark_count_items", count_items);
		for(new i = 0; i < 41; i++) PlayerTextDrawShow(playerid, market_player_TD[playerid][i]);
		for(new i = 0; i < count_items; i++) PlayerTextDrawShow(playerid, BUTTON_BUY_MARKET[playerid][i]);
		for(new i = 0,s=0; i < count_items; i++,s+=2) {
			PlayerTextDrawShow(playerid, INFO_market_player_TD[playerid][s]);
			PlayerTextDrawShow(playerid, INFO_market_player_TD[playerid][s+1]);
		}
		in_buymenu_market[playerid]=true;
		return SelectTextDraw(playerid, 0x3399FFAA);
	}

	if(pickupid == oplata_bank_cent) SPD(playerid, 157, DIALOG_STYLE_LIST, ""CMAIN"√é√Ø√´√†√≤√†", ""CWHITE"[1] √á√†√Ø√´√†√≤√®√≤√º √ß√† √§√Æ√¨\n[2] √á√†√Ø√´√†√≤√®√≤√º √ß√† √£√†√∞√†√¶\n[3] √á√†√Ø√´√†√≤√®√≤√º √ß√† √™√¢√†√∞√≤√®√∞√≥\n[4] √é√Ø√´√†√≤√®√≤√º √†√∞√•√≠√§√≥ √°√®√ß√≠√•√±√†\n[5] √é√Ø√´√†√≤√®√≤√º √†√∞√•√≠√§√≥ √Ä√á√ë", "Seleccione", "Cerrar");
	if(pickupid == help_cent_bank) {
		new str_l[] = 
		""CWHITE"√è√∞√®√¢√•√≤√±√≤√¢√≥√•√¨ √Ç√†√± √¢ √≠√†√∏√•√¨ √°√†√≠√™√•! √Ç √Ω√≤√Æ√¨ √∞√†√ß√§√•√´√•\n\
		√Ç√ª √¨√Æ√¶√•√≤√• √≥√ß√≠√†√≤√º √¢√±√æ √≠√•√Æ√°√µ√Æ√§√®√¨√≥√æ √®√≠√¥√Æ√∞√¨√†√∂√®√æ √Æ √§√•√©√±√≤√¢√®√ø√µ\n\
		√¢ √°√†√≠√™√• √® √°√†√≠√™√Æ√¢√±√™√®√µ √±√∑√•√≤√†√µ.\n\n\
		"CPALEGREEN"√é√±√≠√Æ√¢√≠√Æ√© √±√∑¬∏√≤ "CWHITE"‚Äî √£√´√†√¢√≠√ª√© √±√∑¬∏√≤, √™√Æ√≤√Æ√∞√ª√© √•√±√≤√º √≥ √™√†√¶√§√Æ√£√Æ.\n\
		√í√†√™√¶√•, √Ø√∞√® √§√Æ√±√≤√®√¶√•√≠√®√® 3-√£√Æ √≥√∞√Æ√¢√≠√ø, √®√£√∞√Æ√™ √¨√Æ√¶√•√≤ √Æ√≤√™√∞√ª√≤√º\n\
		√§√Æ 10-√≤√® √§√Æ√Ø√Æ√´√≠√®√≤√•√´√º√≠√ª√µ √°√†√≠√™√Æ√¢√±√™√®√µ √±√∑¬∏√≤√Æ√¢. √ä√†√¶√§√Æ√¨√≥\n\
		√≤√†√™√Æ√¨√≥ √±√∑¬∏√≤√≥ √¨√Æ√¶√≠√Æ √≥√±√≤√†√≠√Æ√¢√®√≤√º PIN-√™√Æ√§ √® √Ø√∞√®√§√≥√¨√†√≤√º\n\
		√´√æ√°√Æ√• √≠√†√ß√¢√†√≠√®√•. √Ñ√Æ√Ø√Æ√´√≠√®√≤√•√´√º√≠√ª√© √±√∑¬∏√≤ √®√¨√•√•√≤ √±√¢√Æ√© √≠√Æ√¨√•√∞,\n\
		√Ø√Æ√Ω√≤√Æ√¨√≥ √§√•√≠√º√£√® √≠√† √≠√•√£√Æ √¨√Æ√¶√≠√Æ √Ø√•√∞√•√¢√•√±√≤√®, S√≠√¶√• √≤√Æ√£S√≠,\n\
		√™√Æ√£S√≠ √•√£√Æ √¢√´√†√§√•√´√•√∂ √≠√†√µ√Æ√§√®√≤√±√ø √Æ√¥√¥√´√†√©√≠.\n\n\
		√Ö√±√´√® √Ç√ª √≠√• √Ø√´√†√≠√®√∞√≥√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Æ√§√®√≠ √®√´√® √≠√•√±√™√Æ√´√º√™√Æ\n\
		√±√∑√•√≤√Æ√¢, √Ç√ª √¨√Æ√¶√•√≤√• √±√™√∞√ª√≤√º √®√µ √®√ß √Æ√°√π√•√£√Æ √±√Ø√®√±√™√†. √Ç √´√æ√°√Æ√©\n\
		√¨√Æ√¨√•√≠√≤ √¨√Æ√¶√≠√Æ √¢√Æ√±√±√≤√†√≠√Æ√¢√®√≤√º √§√Æ√±√≤√≥√Ø, √¢√ª√°√∞√†√¢\n\
		√±√Æ√Æ√≤√¢√•√≤√±√≤√¢√≥√æ√π√®√© √Ø√≥√≠√™√≤ √¢ √Æ√±√≠√Æ√¢√≠√Æ√¨ √¨√•√≠√æ √°√†√≠√™√†.";

		SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{3cb300}√à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ √°√†√≠√™√•", str_l, "Cerrar", "");
	}
	if(pickupid == help_cent_bank) {
		new str_l[] = 
		""CWHITE"√è√∞√®√¢√•√≤√±√≤√¢√≥√•√¨ √Ç√†√± √¢ √≠√†√∏√•√¨ √°√†√≠√™√•! √Ç √Ω√≤√Æ√¨ √∞√†√ß√§√•√´√•\n\
		√Ç√ª √¨√Æ√¶√•√≤√• √≥√ß√≠√†√≤√º √¢√±√æ √≠√•√Æ√°√µ√Æ√§√®√¨√≥√æ √®√≠√¥√Æ√∞√¨√†√∂√®√æ √Æ √§√•√©√±√≤√¢√®√ø√µ\n\
		√¢ √°√†√≠√™√• √® √°√†√≠√™√Æ√¢√±√™√®√µ √±√∑√•√≤√†√µ.\n\n\
		"CPALEGREEN"√é√±√≠√Æ√¢√≠√Æ√© √±√∑¬∏√≤ "CWHITE"‚Äî √£√´√†√¢√≠√ª√© √±√∑¬∏√≤, √™√Æ√≤√Æ√∞√ª√© √•√±√≤√º √≥ √™√†√¶√§√Æ√£√Æ.\n\
		√í√†√™√¶√•, √Ø√∞√® √§√Æ√±√≤√®√¶√•√≠√®√® 3-√£√Æ √≥√∞√Æ√¢√≠√ø, √®√£√∞√Æ√™ √¨√Æ√¶√•√≤ √Æ√≤√™√∞√ª√≤√º\n\
		√§√Æ 10-√≤√® √§√Æ√Ø√Æ√´√≠√®√≤√•√´√º√≠√ª√µ √°√†√≠√™√Æ√¢√±√™√®√µ √±√∑¬∏√≤√Æ√¢. √ä√†√¶√§√Æ√¨√≥\n\
		√≤√†√™√Æ√¨√≥ √±√∑¬∏√≤√≥ √¨√Æ√¶√≠√Æ √≥√±√≤√†√≠√Æ√¢√®√≤√º PIN-√™√Æ√§ √® √Ø√∞√®√§√≥√¨√†√≤√º\n\
		√´√æ√°√Æ√• √≠√†√ß√¢√†√≠√®√•. √Ñ√Æ√Ø√Æ√´√≠√®√≤√•√´√º√≠√ª√© √±√∑¬∏√≤ √®√¨√•√•√≤ √±√¢√Æ√© √≠√Æ√¨√•√∞,\n\
		√Ø√Æ√Ω√≤√Æ√¨√≥ √§√•√≠√º√£√® √≠√† √≠√•√£√Æ √¨√Æ√¶√≠√Æ √Ø√•√∞√•√¢√•√±√≤√®, S√≠√¶√• √≤√Æ√£S√≠,\n\
		√™√Æ√£S√≠ √•√£√Æ √¢√´√†√§√•√´√•√∂ √≠√†√µ√Æ√§√®√≤√±√ø √Æ√¥√¥√´√†√©√≠.\n\n\
		√Ö√±√´√® √Ç√ª √≠√• √Ø√´√†√≠√®√∞√≥√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Æ√§√®√≠ √®√´√® √≠√•√±√™√Æ√´√º√™√Æ\n\
		√±√∑√•√≤√Æ√¢, √Ç√ª √¨√Æ√¶√•√≤√• √±√™√∞√ª√≤√º √®√µ √®√ß √Æ√°√π√•√£√Æ √±√Ø√®√±√™√†. √Ç √´√æ√°√Æ√©\n\
		√¨√Æ√¨√•√≠√≤ √¨√Æ√¶√≠√Æ √¢√Æ√±√±√≤√†√≠√Æ√¢√®√≤√º √§√Æ√±√≤√≥√Ø, √¢√ª√°√∞√†√¢\n\
		√±√Æ√Æ√≤√¢√•√≤√±√≤√¢√≥√æ√π√®√© √Ø√≥√≠√™√≤ √¢ √Æ√±√≠√Æ√¢√≠√Æ√¨ √¨√•√≠√æ √°√†√≠√™√†.";

		SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{3cb300}√à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ √°√†√≠√™√•", str_l, "Cerrar", "");
	}
	if(pickupid == centrbank_enter) {
		SetPlayerPos(playerid, 1467.3160,-1005.0304,26.8291);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 0.0);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	if(pickupid == centrbank_exit) {
		SetPlayerPos(playerid, 1467.2814,-1011.7748,26.8433);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 180.0);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	if(pickupid == kiosk_buy_pic || 
		pickupid == kiosk_buy_pic + 1 || 
		pickupid == kiosk_buy_pic + 2 || 
		pickupid == kiosk_buy_pic + 3) {
		SPD(playerid,1865,DIALOG_STYLE_TABLIST,"{0099cc}√ä√®√Æ√±√™", 
			"√Ç√ÆS√≠\t"CMAIN"50$\n\
			"CWHITE"√ë√Æ√™\t"CMAIN"100$\n\
			"CWHITE"√í√∞√Æ√±√≤√º\t"CMAIN"250$\n\
			"CWHITE"√ñ√¢√•√≤√ª\t"CMAIN"300$\n\
			"CWHITE"√ë√®√£√†√∞√•√≤√ª\t"CMAIN"600$\n\
			"CWHITE"Hajigalk\t"CMAIN"450$",
		"Seleccione", "Cerrar");
	}
	if(pickupid == AF_startpic) {
		
		if(af_player_status[playerid]) {
			SCM(playerid, COLOR_LIGHTGREY,"√Ä√¢√≤√Æ√¨√Æ√°√®√´√º √§√´√ø √±√°√Æ√∞√™√® √≥√¶√• √¢√ª√°√∞√†√≠");
			if(GetPVarInt(playerid, "veh_rent") != -1) 
				SCM(playerid, COLOR_LIGHTGREY,"√è√Æ√§√±√™√†√ß√™√†: √¢√¢√•√§√®√≤√• "CBLUE"/unrent {cecece}√∑√≤√Æ√°√ª √ß√†√≠√Æ√¢√Æ √≠√†√∑√†√≤√º √∞√†√°√Æ√≤√≥");
			return 1;
		}
		SPD(playerid,4985,DIALOG_STYLE_MSGBOX,""CMAIN"√Ä√¢√≤√Æ√¨√Æ√°√®√´√º√≠√†√ø √¥√†√°√∞√®√™√†",""CWHITE"√è√∞√®√¢√•√≤√±√≤√¢√≥√•√¨ √Ç√†√± √≠√† √†√¢√≤√Æ√¨√Æ√°√®√´√º√≠√Æ√© √¥√†√°√∞√®√™√•! √á√§√•√±√º √Ç√ª √¨√Æ√¶√•√≤√•\n√∞√†√°√Æ√≤√†√≤√º √Ø√∞√Æ√®√ß√¢√Æ√§√®√≤√•√´√•√¨ √†√¢√≤√Æ√¨√Æ√°√®√´√ø. √ë√≥√¨√¨√† √¢√ª√Ø√´√†√≤√ª √±√¢√ø√ß√†√≠√†\n√± √™√´√†√±√±√Æ√¨ √†√¢√≤√Æ√¨√Æ√°√®√´√ø √® √•√£√Æ √±√≤√Æ√®√¨√Æ√±√≤√º√æ, √† √≤√†√™√¶√• √± √≠√†√§√Æ√°√≠√Æ√±√≤√º√æ\n√†√¢√≤√Æ√±√†√´√Æ√≠√† √¢ √Ø√Æ√™√≥√Ø√™√• √¢√ª√°√∞√†√≠√≠√Æ√© √¨√†√∞√™√®. √è√∞√Æ√§√Æ√´√¶√®√¢, √Ç√ª √±√¨√Æ√¶√•√≤√•\nSeleccione √¶√•√´√†√•√¨√ª√© √§√´√ø √®√ß√£√Æ√≤√Æ√¢√´√•√≠√®√ø √†√¢√≤√Æ√¨√Æ√°√®√´√º √® √Ø√∞√®√±√≤√≥√Ø√®√≤√º\n√™ √∞√†√°√Æ√≤√•.","S√≠√´√•√•","Cerrar");
		antiflood_move[playerid] = gettime() + 3;
	}
	if(pickupid == prop_info_pic) 
		SPD(playerid, 1118, DIALOG_STYLE_TABLIST_HEADERS, ""CPALEGREEN"√è√∞√Æ√±√¨√Æ√≤√∞ √®√≠√¥√Æ√∞√¨√†√∂√®√®", "{9966ff}√ë√≤√Æ√®√¨√Æ√±√≤√º √≥√±√´√≥√£√®: 400$. √Ç√ª√°√•√∞√®√≤√• √≤√®√Ø √®√¨√≥√π√•√±√≤√¢√†:\n"CWHITE"√Ñ√Æ√¨\n√Å√®√ß√≠√•√±", "Seleccione", "Cerrar");
	if(pickupid == acs_pic) {
		if(BizEnter{playerid} == 255) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [015]");
		if(BizInfo[BizEnter{playerid}][bProd] < 15) 
			return SCM(playerid, COLOR_LIGHTGREY, "√Ç √¨√†√£√†√ß√®√≠√• √Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤ √≤√Æ√¢√†√∞");
		for(new i = 0; i <= MAX_PLAYER_ATTACHED_OBJECTS; i ++) {
			if(!IsPlayerAttachedObjectSlotUsed(playerid, i)) continue;
			RemovePlayerAttachedObject(playerid, i);
		}
		SetPlayerPos(playerid, 421.0189,-80.3096,1002.0976-0.3);
		SetPlayerFacingAngle(playerid,270);
		SetPVarInt(playerid, "acs_vw", GetPlayerVirtualWorld(playerid));
		SetPlayerVirtualWorld(playerid, playerid + 45);
		SetPVarInt(playerid, "selecting_acs", 1);
		TogglePlayerControllable(playerid, 0);
		ApplyAnimation(playerid, "PED", "SEAT_IDLE", 4.1, 1, 0, 0, 0, 0, 1);
		for(new i;i<18;i++) TextDrawShowForPlayer(playerid, main_acs_TD[i]);
		SelectTextDraw(playerid, 0x000000AA);
		new Float: fPX, Float: fPY, Float: fPZ,
			Float: fVX, Float: fVY, Float: fVZ;
		GetPlayerCameraPos(playerid, fPX, fPY, fPZ);
		GetPlayerCameraLookAt(playerid, fVX, fVY, fVZ);
		InterpolateCameraPos(playerid, fPX, fPY, fPZ, 422.647003, -80.311164, 1003.405456-0.42, 1500);
		InterpolateCameraLookAt(playerid, fVX, fVY, fVZ, 421.0189,-80.3096,1002.0976-0.3, 1500);
		SCM(playerid,-1,"√Ç√ª√°√•√∞√®√≤√• {FFCD00}√™√†√≤√•√£√Æ√∞√®√æ"CWHITE", √ß√†√≤√•√¨ √π¬∏√´√™√≠√®√≤√• √Ø√Æ {cc33ff}√´√æ√°√Æ√© √¢√•√π√® "CWHITE"√§√´√ø √Ø√∞√®√¨√•√∞√™√®");
		SCM(playerid,-1,"√ó√≤√Æ√°√ª √±√Æ√¢√•√∞√∏√®√≤√º √Ø√Æ√™√≥√Ø√™√≥ √™√´√®√™√≠√®√≤√• {0099ff}√®√™√Æ√≠√™√≥ \"√ë√Æ√µ√∞√†√≠√®√≤√º\"");
		SCM(playerid,COLOR_GREY,"√ë√Æ√¢√•√≤: √å√Æ√¶√≠√Æ √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º {66CC00}F7 "CGREY"√§√´√ø √Æ√≤√™√´√æ√∑√•√≠√®√ø √∑√†√≤√†");
	}
	if(pickupid == pic_prokat_1) {
		PlayerTextDrawSetString(playerid, prokattd_p[playerid][0], "Faggio");
		PlayerTextDrawSetString(playerid, prokattd_p[playerid][1], "420$");
		PlayerTextDrawSetPreviewRot(playerid, prokattd_p[playerid][2], 0.000000, 0.000000, -13.000000, 1.0);
		PlayerTextDrawSetPreviewRot(playerid, prokattd_p[playerid][3], 0.000000, 0.000000, 0.000000, 1.0);
		PlayerTextDrawSetPreviewRot(playerid, prokattd_p[playerid][4], 0.000000, 0.000000, 13.000000, 1.0);
		PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][4], 439);
		PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][3], 462);
		PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][2], 410);
		for(new i = 0; i < 8; i ++) {
			if(i < 5) {
				PlayerTextDrawSetPreviewVehCol(playerid, prokattd_p[playerid][i], 145, 145);
				PlayerTextDrawShow(playerid, prokattd_p[playerid][i]);
			}
			TextDrawShowForPlayer(playerid, prokattd[i]);
		}
		td_prokat_used[playerid] = true;
		prokat_choose[playerid] = 462;
		prokat_price[playerid] = 420;
		SelectTextDraw(playerid, COLOR_WHITE);
		prokat_num[playerid] = 1;
	}
	if(pickupid == pic_prokat_2) {
		PlayerTextDrawSetString(playerid, prokattd_p[playerid][0], "Faggio");
		PlayerTextDrawSetString(playerid, prokattd_p[playerid][1], "420$");
		PlayerTextDrawSetPreviewRot(playerid, prokattd_p[playerid][2], 0.000000, 0.000000, -13.000000, 1.0);
		PlayerTextDrawSetPreviewRot(playerid, prokattd_p[playerid][3], 0.000000, 0.000000, 0.000000, 1.0);
		PlayerTextDrawSetPreviewRot(playerid, prokattd_p[playerid][4], 0.000000, 0.000000, 13.000000, 1.0);
		PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][4], 439);
		PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][3], 462);
		PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][2], 410);
		for(new i = 0; i < 8; i ++) {
			if(i < 5) {
				PlayerTextDrawSetPreviewVehCol(playerid, prokattd_p[playerid][i], 145, 145);
				PlayerTextDrawShow(playerid, prokattd_p[playerid][i]);
			}
			TextDrawShowForPlayer(playerid, prokattd[i]);
		}
		td_prokat_used[playerid] = true;
		prokat_choose[playerid] = 462;
		prokat_price[playerid] = 420;
		SelectTextDraw(playerid, COLOR_WHITE);
		prokat_num[playerid] = 2;
	}
	if(pickupid == pic_prokat_3) {
		PlayerTextDrawSetString(playerid, prokattd_p[playerid][0], "Faggio");
		PlayerTextDrawSetString(playerid, prokattd_p[playerid][1], "420$");
		PlayerTextDrawSetPreviewRot(playerid, prokattd_p[playerid][2], 0.000000, 0.000000, -13.000000, 1.0);
		PlayerTextDrawSetPreviewRot(playerid, prokattd_p[playerid][3], 0.000000, 0.000000, 0.000000, 1.0);
		PlayerTextDrawSetPreviewRot(playerid, prokattd_p[playerid][4], 0.000000, 0.000000, 13.000000, 1.0);
		PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][4], 439);
		PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][3], 462);
		PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][2], 410);
		for(new i = 0; i < 8; i ++) {
			if(i < 5) {
				PlayerTextDrawSetPreviewVehCol(playerid, prokattd_p[playerid][i], 145, 145);
				PlayerTextDrawShow(playerid, prokattd_p[playerid][i]);
			}
			TextDrawShowForPlayer(playerid, prokattd[i]);
		}
		td_prokat_used[playerid] = true;
		prokat_choose[playerid] = 462;
		prokat_price[playerid] = 420;
		SelectTextDraw(playerid, COLOR_WHITE);
		prokat_num[playerid] = 3;
	}
	if(pickupid == pic_prokat_4) {
		PlayerTextDrawSetString(playerid, prokattd_p[playerid][0], "Faggio");
		PlayerTextDrawSetString(playerid, prokattd_p[playerid][1], "420$");
		PlayerTextDrawSetPreviewRot(playerid, prokattd_p[playerid][2], 0.000000, 0.000000, -13.000000, 1.0);
		PlayerTextDrawSetPreviewRot(playerid, prokattd_p[playerid][3], 0.000000, 0.000000, 0.000000, 1.0);
		PlayerTextDrawSetPreviewRot(playerid, prokattd_p[playerid][4], 0.000000, 0.000000, 13.000000, 1.0);
		PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][4], 439);
		PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][3], 462);
		PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][2], 410);
		for(new i = 0; i < 8; i ++) {
			if(i < 5) {
				PlayerTextDrawSetPreviewVehCol(playerid, prokattd_p[playerid][i], 145, 145);
				PlayerTextDrawShow(playerid, prokattd_p[playerid][i]);
			}
			TextDrawShowForPlayer(playerid, prokattd[i]);
		}
		td_prokat_used[playerid] = true;
		prokat_choose[playerid] = 462;
		prokat_price[playerid] = 420;
		SelectTextDraw(playerid, COLOR_WHITE);
		prokat_num[playerid] = 4;
	}
	if(pickupid == pic_prokat_5) {
		PlayerTextDrawSetString(playerid, prokattd_p[playerid][0], "Faggio");
		PlayerTextDrawSetString(playerid, prokattd_p[playerid][1], "420$");
		PlayerTextDrawSetPreviewRot(playerid, prokattd_p[playerid][2], 0.000000, 0.000000, -13.000000, 1.0);
		PlayerTextDrawSetPreviewRot(playerid, prokattd_p[playerid][3], 0.000000, 0.000000, 0.000000, 1.0);
		PlayerTextDrawSetPreviewRot(playerid, prokattd_p[playerid][4], 0.000000, 0.000000, 13.000000, 1.0);
		PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][4], 439);
		PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][3], 462);
		PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][2], 410);
		for(new i = 0; i < 8; i ++) {
			if(i < 5) {
				PlayerTextDrawSetPreviewVehCol(playerid, prokattd_p[playerid][i], 145, 145);
				PlayerTextDrawShow(playerid, prokattd_p[playerid][i]);
			}
			TextDrawShowForPlayer(playerid, prokattd[i]);
		}
		td_prokat_used[playerid] = true;
		prokat_choose[playerid] = 462;
		prokat_price[playerid] = 420;
		SelectTextDraw(playerid, COLOR_WHITE);
		prokat_num[playerid] = 5;
	}
	if(pickupid == pic_prokat_6) {
		PlayerTextDrawSetString(playerid, prokattd_p[playerid][0], "Faggio");
		PlayerTextDrawSetString(playerid, prokattd_p[playerid][1], "420$");
		PlayerTextDrawSetPreviewRot(playerid, prokattd_p[playerid][2], 0.000000, 0.000000, -13.000000, 1.0);
		PlayerTextDrawSetPreviewRot(playerid, prokattd_p[playerid][3], 0.000000, 0.000000, 0.000000, 1.0);
		PlayerTextDrawSetPreviewRot(playerid, prokattd_p[playerid][4], 0.000000, 0.000000, 13.000000, 1.0);
		PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][4], 439);
		PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][3], 462);
		PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][2], 410);
		for(new i = 0; i < 8; i ++) {
			if(i < 5) {
				PlayerTextDrawSetPreviewVehCol(playerid, prokattd_p[playerid][i], 145, 145);
				PlayerTextDrawShow(playerid, prokattd_p[playerid][i]);
			}
			TextDrawShowForPlayer(playerid, prokattd[i]);
		}
		td_prokat_used[playerid] = true;
		prokat_choose[playerid] = 462;
		prokat_price[playerid] = 420;
		SelectTextDraw(playerid, COLOR_WHITE);
		prokat_num[playerid] = 6;
	}
	if(pickupid == pic_prokat_7) {
		PlayerTextDrawSetString(playerid, prokattd_p[playerid][0], "Faggio");
		PlayerTextDrawSetString(playerid, prokattd_p[playerid][1], "420$");
		PlayerTextDrawSetPreviewRot(playerid, prokattd_p[playerid][2], 0.000000, 0.000000, -13.000000, 1.0);
		PlayerTextDrawSetPreviewRot(playerid, prokattd_p[playerid][3], 0.000000, 0.000000, 0.000000, 1.0);
		PlayerTextDrawSetPreviewRot(playerid, prokattd_p[playerid][4], 0.000000, 0.000000, 13.000000, 1.0);
		PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][4], 439);
		PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][3], 462);
		PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][2], 410);
		for(new i = 0; i < 8; i ++) {
			if(i < 5) {
				PlayerTextDrawSetPreviewVehCol(playerid, prokattd_p[playerid][i], 145, 145);
				PlayerTextDrawShow(playerid, prokattd_p[playerid][i]);
			}
			TextDrawShowForPlayer(playerid, prokattd[i]);
		}
		td_prokat_used[playerid] = true;
		prokat_choose[playerid] = 462;
		prokat_price[playerid] = 420;
		SelectTextDraw(playerid, COLOR_WHITE);
		prokat_num[playerid] = 7;
	}
	if(pickupid == statrate_meria) {
		new num_org;
		switch(GetPlayerVirtualWorld(playerid)) {
			case 1: num_org = 7;
			case 2: num_org = 9;
			case 3: num_org = 8;
			default: return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [090]");
		}

		new str_[70];
		mysql_format(mysql_Handle, str_, sizeof(str_), "SELECT * FROM `accounts` WHERE `pLeader` = %i LIMIT 1", num_org);
		mysql_tquery(mysql_Handle, str_, "lead_meria_show", "i", playerid);
	}
	if(pickupid == rate_meria) {
		if(pData[playerid][pLevel] < 2) return SCM(playerid, COLOR_LIGHTGREY, "√é√∂√•√≠√®√¢√†√≤√º √∞√†√°√Æ√≤√≥ √¨√Ω√∞√† √∞√†√ß√∞√•√∏√•√≠√Æ √± 2-√£√Æ √≥√∞√Æ√¢√≠√ø");
		if(GetPVarInt(playerid, "rate_meria_delay") > gettime()) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √±√≤√†√¢√®√≤√º √Æ√∂√•√≠√™√≥ √≤√†√™ √∑√†√±√≤√Æ");

		new num_org;
		switch(GetPlayerVirtualWorld(playerid)) {
			case 1: num_org = 7;
			case 2: num_org = 9;
			case 3: num_org = 8;
			default: return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [090]");
		}

		new str_[70];
		mysql_format(mysql_Handle, str_, sizeof(str_), "SELECT * FROM `accounts` WHERE `pLeader` = %i LIMIT 1", num_org);
		mysql_tquery(mysql_Handle, str_, "lead_meria_check", "i", playerid);
	}
	
	if(pickupid == inv_sport) {
		if(!GetPVarInt(playerid, "abonement")) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √†√°√Æ√≠√•√¨√•√≠√≤√† √≠√† √Ø√Æ√±√•√π√•√≠√®√• √Ω√≤√Æ√£√Æ √±√Ø√Æ√∞√≤√ß√†√´√†");
		SetPlayerAttachedObject(playerid, 2, 2916, 6, 0.049000, 0.044999, -0.010999, -93.799987, 40.499973, -84.099876, 1.000000, 1.000000, 1.000000, 0, 0);
		SetPlayerAttachedObject(playerid, 3, 2916, 5, 0.049000, 0.044999, -0.010999, -93.799987, 40.499973, -84.099876, 1.000000, 1.000000, 1.000000, 0, 0);
		SetPVarInt(playerid, "sport-inventory", 1);
		SCM(playerid, COLOR_BLUE, "√ä√Æ√¨√†√≠√§√ª: "CERROR"/set "CBLUE"- √≠√†√∑√†√≤√º/√Ø√∞√®√Æ√±√≤√†√≠√Æ√¢√®√≤√º √≥√Ø√∞√†√¶√≠√•√≠√®√•. "CERROR"/reset "CBLUE"- √Ø√Æ√´√Æ√¶√®√≤√º √®√≠√¢√•√≠√≤√†√∞√º");
		SCM(playerid, COLOR_BLUE, "√Ñ√´√ø √Ø√Æ√§√≠√ø√≤√®√ø √£√∞√≥√ß√Æ√¢ √ß√†√¶√¨√®√≤√• √® √≥√§√•√∞√¶√®√¢√†√©√≤√• √™√´√†√¢√®√∏√≥ "CERROR"√Ç√¢√•√∞√µ");
	}
	if(pickupid == help_sport) {
		new info_str[] = 
		""CWHITE"√Ç √±√Ø√Æ√∞√≤√ß√†√´√†√µ √Ç√ª √¨√Æ√¶√•√≤√•:\n\
		- √¢√ª√Ø√Æ√´√≠√ø√≤√º √±√®√´√Æ√¢√ª√• √≥√Ø√∞√†√¶√≠√•√≠√®√ø;\n\
		- √≥√¢√•√´√®√∑√®√¢√†√≤√º √±√¢√Æ√® √±√®√´√Æ√¢√ª√• √µ√†√∞√†√™√≤√•√∞√®√±√≤√®√™√®.\n\
		\n\
		√Ñ√´√ø √≠√†√∑√†√´√† √ß√†√≠√ø√≤√®√©, √™√≥√Ø√®√≤√• √•√§√®√≠√Æ√∞√†√ß√Æ√¢√ª√© √†√°√Æ√≠√•√¨√•√≠√≤. √Ç√†√¨ √¢√ªS√≠√§√≥√≤ √±√Ø√Æ√∞√≤√®√¢√≠√≥√æ √¥√Æ√∞√¨√≥, √®\n\
		√Ç√ª √°√≥√§√•√≤√• √£√Æ√≤√Æ√¢√ª √™ √≤√∞√•√≠√®√∞√Æ√¢√™√•. √Ç√Æ√ß√º√¨√®√≤√• √±√Ø√Æ√∞√≤√®√¢√≠√ª√© √®√≠√¢√•√≠√≤√†√∞√º √® √±√´√•√§√≥√©√≤√•\n\
		√®√≠√±√≤√∞√≥√™√∂√®√ø√¨. √Ç√ª√Ø√Æ√´√≠√ø√©√≤√• √≥√Ø√∞√†√¶√≠√•√≠√®√ø √°√•√ß √∞√ª√¢√™√Æ√¢, √≠√• √±√Ø√•√∏√† √® √± √Æ√§√®√≠√†√™√Æ√¢√Æ√©\n\
		√†√¨√Ø√´√®√≤√≥√§√Æ√©. √é√≤ √Ω√≤√Æ√£√Æ √ß√†√¢√®√±√®√≤ √±√™√Æ√∞√Æ√±√≤√º √≥√¢√•√´√®√∑√•√≠√®√ø √±√®√´√ª. √ä√†√™ √≤√Æ√´√º√™√Æ √±√®√´√† √®√ß√¨√•√≠√®√≤√±√ø, √¢√ª\n\
		√Ø√Æ√´√≥√∑√®√≤√• √®√≠√¥√Æ√∞√¨√†√∂√®√æ √Æ√° √Ω√≤√Æ√¨. √ë√®√´√† √¨√Æ√¶√•√≤ √™√†√™ √∞√†√±√≤√®, √≤√†√™ √® √≥√¨√•√≠√º√∏√†√≤√º√±√ø, √•√±√´√® √¢√ª √Æ√∑√•√≠√º\n\
		√§√Æ√´√£√Æ √≠√• √Ø√Æ√±√•√π√†√´√® √±√Ø√Æ√∞√≤√®√¢√≠√ª√© √ß√†√´. √Ñ√´√®√≤√•√´√º√≠√ª√• √≤√∞√•√≠√®√∞√Æ√¢√™√® √¨√Æ√£√≥√≤ √°√ª√≤√º √¢√∞√•√§√≠√ª √§√´√ø\n\
		√ß√§√Æ√∞√Æ√¢√º√ø. √ç√†√∏√® √≤√∞√•√≠√•√∞√† √Ø√Æ√§√±√™√†√¶√≥√≤, √™√Æ√£S√≠ √Ø√Æ√∞√† √Æ√±√≤√†√≠√Æ√¢√®√≤√º√±√ø.";

		SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{FFCD00}√ë√Ø√Æ√∞√≤√®√¢√≠√ª√© √ß√†√´", info_str, "Cerrar", "");
	}
	if(pickupid == help_adcenter) SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{FFCD00}√à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ √∞√†√ß√¨√•√π√•√≠√®√® √∞√•√™√´√†√¨√ª", ""CWHITE"√Ç √∞√•√™√´√†√¨√≠√ª√µ √†√£√•√≠√≤√±√≤√¢√†√µ √¢√ª √¨√Æ√¶√•√≤√• √¢√ß√ø√≤√º √¢ √†√∞√•√≠√§√≥ √°√®√´√°√Æ√∞√§√ª √® √∞√†√ß√¨√•√±√≤√®√≤√º √≠√† √≠√®√µ √¢√†√∏√≥ √∞√•√™√´√†√¨√≥.\n√Ñ√´√ø √Ω√≤√Æ√£√Æ √¢√Æ√±√Ø√Æ√´√º√ß√≥√©√≤√•√±√º √®√≠√≤√•√∞√¥√•√©√±√Æ√¨ √Æ√™√Æ√´√Æ √Ç√†√±.\n\n√í√•√™√±√≤ √Æ√°√∫√ø√¢√´√•√≠√®√ø √¨√Æ√¶√•√≤ √±√Æ√§√•√∞√¶√†√≤√º √±√Ø√•√∂√®√†√´√º√≠√ª√• √±√®√¨√¢√Æ√´√ª:\n/ - √Ø√•√∞√•√≠√Æ√± √±√≤√∞√Æ√™√®\n{......} - √∂√¢√•√≤√Æ√¢√Æ√© RGB √™√Æ√§. √Ç√±√≤√†√¢√º√≤√• √•√£√Æ √Ø√•√∞√•√§ √≤√•√™√±√≤√Æ√¨, √∑√≤√Æ√°√ª Cambio √∂√¢√•√≤ √≠√≥√¶√≠√Æ√£√Æ √¥√∞√†√£√¨√•√≠√≤√†.\n√Å√Æ√´√•√• √Ø√Æ√§√∞√Æ√°√≠√≥√æ √®√≠√¥√Æ√∞√¨√†√∂√®√æ √Ç√ª √¨√Æ√¶√•√≤√• √≥√ß√≠√†√≤√º √¢ √à√≠√≤√•√∞No√• √± √Ø√Æ√¨√Æ√π√º√æ √ß√†√Ø√∞√Æ√±√† '√ñ√¢√•√≤√† RGB'.", "Cerrar", "");
	if(pickupid == pick_vibor) {
		if(startvibor == false) return SCM(playerid, COLOR_LIGHTGREY, "√Ç S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤ √¢√ª√°√Æ√∞√ª √≠√• √Ø√∞√Æ√¢√Æ√§√ø√≤√±√ø");
		string[0] = EOS;
		if(pData[playerid][pLevel] < 3) return SCM(playerid, COLOR_LIGHTGREY, "√Ñ√´√ø √£√Æ√´√Æ√±√Æ√¢√†√≠√®√ø √¢ √¢√ª√°√Æ√∞√†√µ √≠√•√Æ√°√µ√Æ√§√®√¨ 3 √≥√∞√Æ√¢√•√≠√º");
		if(pData[playerid][pVotedVibor] == 1) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≥√¶√• √£√Æ√´√Æ√±√Æ√¢√†√´√® √¢ S√≠√≠√≠√ª√µ √¢√ª√°√Æ√∞√†√µ");
		format(string, 320, "√Ç√ª√°√•√∞√®√≤√•, √ß√† √™√Æ√£√Æ √µ√Æ√≤√®√≤√• √Ø√∞√Æ√£√Æ√´√Æ√±√Æ√¢√†√≤√º\n\
			"CWHITE"[1] %s\n[2] %s\n[3] %s\n[4] %s\n[5] %s", kandidat1, kandidat2, kandidat3, kandidat4, kandidat5);
		new str[40];
		format(str,40,""CBLUE"%s",electionname);
		SPD(playerid, 178, DIALOG_STYLE_TABLIST_HEADERS, str, string, "Seleccione", "Cerrar");
	}

	if(pickupid == help_mebel) 
		SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{FFCD00}√å√•√°√•√´√º√≠√ª√© √±√†√´√Æ√≠", ""CWHITE"√á√§√•√±√º √Ç√ª √¨√Æ√¶√•√≤√• √Ø√∞√®√Æ√°√∞√•√±√≤√® √¨√•√°√•√´√º √§√´√ø √±√¢√Æ√•√£√Æ √§√Æ√¨√†.\n√å√†√™√±√®√¨√≥√¨ √Ç√ª √±√¨√Æ√¶√•√≤√• √∞√†√ß√¨√•√±√≤√®√≤√º √§√Æ 20 √™√≥√Ø√´√•√≠√≠√ª√µ\n√Ø√∞√•√§√¨√•√≤√Æ√¢ √¢ √±√¢√Æ√•√¨ √§√Æ√¨√•.\n\n√ä√≥√Ø√®√≤√º √Ø√∞√•√§√¨√•√≤ √¨√•√°√•√´√®: {aa80ff}/buyobj"CWHITE".\n√ì√±√≤√†√≠√Æ√¢√®√≤√º √®√´√® √¢√ª√°√∞√Æ√±√®√≤√º √Ø√∞√•√§√¨√•√≤: {aa80ff}/allobj"CWHITE".", "Cerrar", "");
	if(pickupid == salon_pick) {
    	if(pData[playerid][pPnumber] == -1) SPD(playerid, 231, DIALOG_STYLE_MSGBOX, ""CPALEGREEN"√ë√†√´√Æ√≠ √±√¢√ø√ß√®", ""CWHITE"√è√∞√®√¢√•√≤√±√≤√¢√≥√•√¨ √Ç√†√± √¢ √≠√†√∏√•√¨ √±√†√´√Æ√≠√• √±√¢√ø√ß√®!\n\nQuieres √Ø√∞√®√Æ√°√∞√•√±√≤√® √≤√•√´√•√¥√Æ√≠ √± SIM-√™√†√∞√≤√Æ√©?\n√ë√≤√Æ√®√¨√Æ√±√≤√º: "CLITEBLUE"500$", "S√≠", "No");
		else SPD(playerid, 261, DIALOG_STYLE_LIST, ""CPALEGREEN"√å√•√≠√æ √±√†√´√Æ√≠√†", 
			"[1] √è√Æ√Ø√Æ√´√≠√®√≤√º √±√∑¬∏√≤ √≤√•√´√•√¥√Æ√≠√†\n\
			[2] √ë√¨√•√≠√®√≤√º √∂√¢√•√≤ √≤√•√´√•√¥√Æ√≠√† "CBLUE"(300$)\n\
			"CWHITE"[3] Cambio √≠√Æ√¨√•√∞ √≤√•√´√•√¥√Æ√≠√† "CBLUE"(300$)",
		"Seleccione", "Cerrar");
    }
	if(pickupid == colored_guns_maf) {
		if(!IsAMafia(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Ω√≤√Æ");
		new bool: weap_status, weaponid, ammo;
		for(new i = 0; i <= 12; i ++) {
			GetPlayerWeaponData(playerid, i, weaponid, ammo);
			if(weaponid == 0 || ammo == 0) continue;
			weap_status = true;
			break;
		}
		if(!weap_status) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √Æ√∞√≥√¶√®√ø");
		new gun_id = GetPlayerWeapon(playerid);
		if(gun_id == 0) return SCM(playerid, COLOR_LIGHTGREY, "√ó√≤√Æ√°√ª √Ø√•√∞√•√™√∞√†√±√®√≤√º √Æ√∞√≥√¶√®√• √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √§√•√∞√¶√†√≤√º √•√£√Æ √¢ √∞√≥√™√†√µ");
		if(gun_id != 24 && gun_id != 25 && gun_id != 30 && gun_id != 31) return SCM(playerid, COLOR_GREY, "√ù√≤√Æ √Æ√∞√≥√¶√®√• √≠√•√´√º√ß√ø √Ø√•√∞√•√™√∞√†√±√®√≤√º");
		for(new i = 0; i < 7; i ++) TextDrawShowForPlayer(playerid, color_guns_td[i]);
		SelectTextDraw(playerid, 0x888888AA);
		SetPVarInt(playerid, "in_colored_menu", 1);
		SCM(playerid, -1, "√Ç√ª√°√•√∞√®√≤√• √∂√¢√•√≤, √¢ √™√Æ√≤√Æ√∞√ª√© Quieres √Ø√•√∞√•√™√∞√†√±√®√≤√º √Æ√∞√≥√¶√®√•");
	}
	if(pickupid == alco_pick_maf || pickupid == alco_pick_maf + 1 || pickupid == alco_pick_maf + 2 || pickupid == alco_pick_maf + 3) {
		if(!IsAMafia(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Ω√≤√Æ");
		SPD(playerid, 134, DIALOG_STYLE_LIST, "{FFCD00}√Å√†√∞ √¨√†√¥√®√®", "[1] √è√®√¢√Æ\n[2] √Ç√®√≠√Æ\n[3] √ò√†√¨√Ø√†√≠√±√™√Æ√•\n[4] √Ç√Æ√§√™√†\n[5] √ä√Æ√≠√º√ø√™\n[6] √Ç√®√±√™√®\n[7] √Ä√°√±√•√≠√≤", "Seleccione", "Cerrar");
	}
	if(pickupid == med_maf) {
		if(!IsAMafia(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Ω√≤√Æ");
		if(pData[playerid][pAptech] > 0) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √¢√ß√ø√≤√º √°√Æ√´√•√• 1 √†√Ø√≤√•√∑√™√® √ß√§√•√±√º");
		pData[playerid][pAptech] ++;
		AddItemToInventory(playerid, 1, 4);
		UpdatePlayerData(playerid, "pAptech", pData[playerid][pAptech]);
		SCM(playerid, COLOR_BLUE, "√Ç√ª √¢√ß√ø√´√® √†√Ø√≤√•√∑√™√≥. √Ç√¢√•√§√®√≤√• √™√Æ√¨√†√≠√§√≥ {FFCD00}/healme "CBLUE"√§√´√ø √•¬∏ √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√ø");
	}
	if(pickupid == mass_enter) {
		load_mode(playerid,6000);
		SetPlayerPos(playerid, 1659.6329,-1636.9280,63.7672);
		SetPlayerVirtualWorld(playerid, 1);
		SetPlayerFacingAngle(playerid, 90.0);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	if(pickupid == mass_exit) {
		SetPlayerPos(playerid, 1653.9104,-1656.6517,22.5156);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 90.0);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	if(pickupid == good_works_mass) mysql_tquery(mysql_Handle, "SELECT `Name`, `pMember`, `ads_smi_count` FROM `accounts` WHERE `ads_smi_count` <> '0' ORDER BY `ads_smi_count` LIMIT 10", "SMI_sotr", "i", playerid);
	if(pickupid == meriiorug_pick_exit || pickupid == meriiorug_pick_exit + 1 || pickupid == meriiorug_pick_exit + 2) {
    	load_mode(playerid);
		SetPlayerPos(playerid, 1526.5386,-1751.5111,996.2879);
		SetPlayerFacingAngle(playerid, 180.0);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
    }
    if(pickupid == meriiorug_pick_enter || pickupid == meriiorug_pick_enter + 1 || pickupid == meriiorug_pick_enter + 2) {
    	if(!IsAGover(playerid)) return SCM(playerid, COLOR_ERROR, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Ø√∞√Æ√©√≤√® √±√æS√≠");
		load_mode(playerid);
		SetPlayerPos(playerid, 384.2859,-2048.2764,3001.0859);
		SetPlayerFacingAngle(playerid, 90.0);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
    }
	if(pickupid == prtex_info || pickupid == prtex_info + 1 || pickupid == prtex_info + 2 || pickupid == prtex_info + 3) 
		mysql_tquery(mysql_Handle, "SELECT `Name`,`pRank` FROM `accounts` WHERE `pMember` = 26", "info_state", "d", playerid);
    
	if(pickupid == yarder_pick) {
		if(pData[playerid][pJailTime] <= 0 && pData[playerid][pPrisonTime] <= 0) 
			return SCM(playerid, 0xCC9966FF, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √≠√†√∑√†√≤√º √ß√§√•√±√º √∞√†√°√Æ√≤√≥");
		if(is_yarder[playerid]) {
			PlayerPlaySound(playerid, 6802, 0.0, 0.0, 0.0);
			if(IsValidDynamicObject(yard_obj[playerid])) 
				DestroyDynamicObject(yard_obj[playerid]);
			if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) 
				RemovePlayerAttachedObject(playerid, 1);
			if(GetPVarInt(playerid, "yard_processings")) 
				TogglePlayerControllable(playerid, 1);
			SCM(playerid, 0xCC9966FF, "√ê√†√°√Æ√≤√† √§√¢√Æ√∞√≠√®√™√† √ß√†√¢√•√∞√∏√•√≠√†");
			DeletePVar(playerid, "yardcount");
			is_yarder[playerid] = false;
		}
		else {
			SetPlayerAttachedObject(playerid, 1, 19622, 6, 0.024999, 0.024999, 0.026000, 0.000000, -64.999992, 0.000000, 1.000000, 1.000000, 1.000000, 0, 0);
			PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
			SCM(playerid, -1, "√Ç√ª √≠√†√∑√†√´√® √∞√†√°√Æ√≤√≥ √§√¢√Æ√∞√≠√®√™√†. √ç√†√¶√¨√®√≤√• {cc9966}H"CWHITE", √∑√≤√Æ√°√ª √≠√†√∑√†√≤√º √Ø√Æ√§√¨√•√≤√†√≤√º");
			is_yarder[playerid] = true;
		}
	}
	if(pickupid == enter_jail_pick) {
		if(!IsACop(playerid) && !IsAMayor(playerid)) 
			return SCM(playerid, COLOR_ERROR, "√Ç√µ√Æ√§ √≤√Æ√´√º√™√Æ √§√´√ø √Ø√•√∞√±√Æ√≠√†√´√†");
		load_mode(playerid);
		SetPlayerPos(playerid, -95.8767,2447.0569,1179.3195);
		SetPlayerVirtualWorld(playerid, 8);
		SetPlayerInterior(playerid, 8);
		SetPlayerFacingAngle(playerid, 180.0);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	if(pickupid == exit_jail_pick) {
		if(!IsACop(playerid) && !IsAMayor(playerid)) 
			return SCM(playerid, COLOR_ERROR, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Ø√∞√Æ√©√≤√® √±√æS√≠");
		load_mode(playerid);
		SetPlayerPos(playerid, 1034.5771,2438.6047 - 4,10.9085);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 180.0);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	if(pickupid == enter_yard_pick) {
		if(!IsACop(playerid) && !IsAMayor(playerid) && pData[playerid][pJailTime] <= 0 && pData[playerid][pPrisonTime] <= 0) 
			return SCM(playerid, COLOR_ERROR, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Ø√∞√Æ√©√≤√® √±√æS√≠");
		load_mode(playerid);
		SetPlayerPos(playerid, -59.6832,2435.0493,1179.3195);
		SetPlayerVirtualWorld(playerid, 8);
		SetPlayerInterior(playerid, 8);
		SetPlayerFacingAngle(playerid, 90.0);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	if(pickupid == exit_yard_pick) {
		load_mode(playerid);
		SetPlayerPos(playerid, 948.4911,2454.8225 - 4,11.7239);
		if(IsPlayerAttachedObjectSlotUsed(playerid, 6)) 
			RemovePlayerAttachedObject(playerid, 6);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 180.0);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	if(pickupid == kitchen_jail_1) {
		SetPlayerPos(playerid, -104.4370,2430.4487,1179.3196);
		SetPlayerFacingAngle(playerid, 0.0);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	if(pickupid == kitchen_jail_2) {
		SetPlayerPos(playerid, -103.1504,2447.4988,1179.3196);
		SetPlayerFacingAngle(playerid, 270.0);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	if(pickupid == addit_jail_1) {
		SetPlayerPos(playerid, -101.0295,2440.1318,1179.3196);
		antiflood_move[playerid] = gettime() + 3;
	}
	if(pickupid == addit_jail_2) {
		SetPlayerPos(playerid, -92.9520,2439.2327,1179.3195);
		antiflood_move[playerid] = gettime() + 3;
	}
	if(pickupid == strong_pick_jail_1) {
		if(!IsACop(playerid)) 
			return SCM(playerid, COLOR_ERROR, "√Ç√µ√Æ√§ √≤√Æ√´√º√™√Æ √§√´√ø √Ø√•√∞√±√Æ√≠√†√´√†");
		SetPlayerPos(playerid, -106.7946,2436.4202,1186.3364);
		SetPlayerFacingAngle(playerid, 270.0);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	if(pickupid == strong_pick_jail_2) {
		SetPlayerPos(playerid, -91.2112,2444.9875,1179.3195);
		SetPlayerFacingAngle(playerid, 90.0);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}

	if(pickupid == pick_prok_1) {
		if(prok1_owner == -1) {
			if(pData[playerid][unikauto_Have] != 0 || pData[playerid][autoHave] != 0 || pData[playerid][pBusiness] != -1 || pData[playerid][pFilling] != -1 || pData[playerid][food_have] != 0 || pData[playerid][prok_have] != 0 || pData[playerid][kiosk_have] != 0) 
				return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≥√¶√• √•√±√≤√º √°√®√ß√≠√•√± √®√´√® √Ä√á√ë");
			else return SPD(playerid, 9432, DIALOG_STYLE_MSGBOX, "{ffd770}√è√Æ√™√≥√Ø√™√† √°√®√ß√≠√•√±√†", ""CWHITE"√ç√†√ß√¢√†√≠√®√•:\t\t{009900}√è√≥√≠√™√≤ √Ø√∞√Æ√™√†√≤√†\n"CWHITE"√ë√≤√Æ√®√¨√Æ√±√≤√º:\t\t{009900}2000000$\n\n{ccff66}Quieres √™√≥√Ø√®√≤√º √Ω√≤√Æ√≤ √Ø√≥√≠√™√≤?", "S√≠", "No");
		}
		if(prok1_owner != pData[playerid][pID]) return SCM(playerid, COLOR_LIGHTGREY, "√ì√Ø√∞√†√¢√´√•√≠√®√• √Ø√≥√≠√™√≤√Æ√¨ √Ø√∞√Æ√™√†√≤√† √§√Æ√±√≤√≥√Ø√≠√Æ √≤√Æ√´√º√™√Æ √•√£√Æ √¢√´√†√§√•√´√º√∂√≥");
		SPD(playerid, 9433, DIALOG_STYLE_LIST, ""CMAIN"√ì√Ø√∞√†√¢√´√•√≠√®√• √Ø√≥√≠√™√≤√Æ√¨", "[1] √ë√Æ√±√≤√Æ√ø√≠√®√• √Æ√Ø√´√†√≤√ª\n[2] √ä√†√±√±√† √°√®√ß√≠√•√±√†\n[3] √è√∞√ÆS√≠√≤√º √Ø√≥√≠√™√≤ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥\n[4] √è√∞√ÆS√≠√≤√º √Ø√≥√≠√™√≤ √§√∞√≥√£√Æ√¨√≥ √®√£√∞√Æ√™√≥", "Seleccione", "Cerrar");
	}
	if(pickupid == pick_prok_2) {
		if(prok2_owner == -1) {
			if(pData[playerid][unikauto_Have] != 0 || pData[playerid][autoHave] != 0 || pData[playerid][pBusiness] != -1 || pData[playerid][pFilling] != -1 || pData[playerid][food_have] != 0 || pData[playerid][prok_have] != 0 || pData[playerid][kiosk_have] != 0) 
				return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≥√¶√• √•√±√≤√º √°√®√ß√≠√•√± √®√´√® √Ä√á√ë");
			else return SPD(playerid, 9438, DIALOG_STYLE_MSGBOX, "{ffd770}√è√Æ√™√≥√Ø√™√† √°√®√ß√≠√•√±√†", ""CWHITE"√ç√†√ß√¢√†√≠√®√•:\t\t{009900}√è√≥√≠√™√≤ √Ø√∞√Æ√™√†√≤√†\n"CWHITE"√ë√≤√Æ√®√¨√Æ√±√≤√º:\t\t{009900}2000000$\n\n{ccff66}Quieres √™√≥√Ø√®√≤√º √Ω√≤√Æ√≤ √Ø√≥√≠√™√≤?", "S√≠", "No");
		}
		if(prok2_owner != pData[playerid][pID]) return SCM(playerid, COLOR_LIGHTGREY, "√ì√Ø√∞√†√¢√´√•√≠√®√• √Ø√≥√≠√™√≤√Æ√¨ √Ø√∞√Æ√™√†√≤√† √§√Æ√±√≤√≥√Ø√≠√Æ √≤√Æ√´√º√™√Æ √•√£√Æ √¢√´√†√§√•√´√º√∂√≥");
		SPD(playerid, 9439, DIALOG_STYLE_LIST, ""CMAIN"√ì√Ø√∞√†√¢√´√•√≠√®√• √Ø√≥√≠√™√≤√Æ√¨", "[1] √ë√Æ√±√≤√Æ√ø√≠√®√• √Æ√Ø√´√†√≤√ª\n[2] √ä√†√±√±√† √°√®√ß√≠√•√±√†\n[3] √è√∞√ÆS√≠√≤√º √Ø√≥√≠√™√≤ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥\n[4] √è√∞√ÆS√≠√≤√º √Ø√≥√≠√™√≤ √§√∞√≥√£√Æ√¨√≥ √®√£√∞√Æ√™√≥", "Seleccione", "Cerrar");
	}
	if(pickupid == pick_prok_3) {
		if(prok3_owner == -1) {
			if(pData[playerid][unikauto_Have] != 0 || pData[playerid][autoHave] != 0 || pData[playerid][pBusiness] != -1 || pData[playerid][pFilling] != -1 || pData[playerid][food_have] != 0 || pData[playerid][prok_have] != 0 || pData[playerid][kiosk_have] != 0) 
				return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≥√¶√• √•√±√≤√º √°√®√ß√≠√•√± √®√´√® √Ä√á√ë");
			else return SPD(playerid, 9444, DIALOG_STYLE_MSGBOX, "{ffd770}√è√Æ√™√≥√Ø√™√† √°√®√ß√≠√•√±√†", ""CWHITE"√ç√†√ß√¢√†√≠√®√•:\t\t{009900}√è√≥√≠√™√≤ √Ø√∞√Æ√™√†√≤√†\n"CWHITE"√ë√≤√Æ√®√¨√Æ√±√≤√º:\t\t{009900}2000000$\n\n{ccff66}Quieres √™√≥√Ø√®√≤√º √Ω√≤√Æ√≤ √Ø√≥√≠√™√≤?", "S√≠", "No");
		}
		if(prok3_owner != pData[playerid][pID]) return SCM(playerid, COLOR_LIGHTGREY, "√ì√Ø√∞√†√¢√´√•√≠√®√• √Ø√≥√≠√™√≤√Æ√¨ √Ø√∞√Æ√™√†√≤√† √§√Æ√±√≤√≥√Ø√≠√Æ √≤√Æ√´√º√™√Æ √•√£√Æ √¢√´√†√§√•√´√º√∂√≥");
		SPD(playerid, 9445, DIALOG_STYLE_LIST, ""CMAIN"√ì√Ø√∞√†√¢√´√•√≠√®√• √Ø√≥√≠√™√≤√Æ√¨", "[1] √ë√Æ√±√≤√Æ√ø√≠√®√• √Æ√Ø√´√†√≤√ª\n[2] √ä√†√±√±√† √°√®√ß√≠√•√±√†\n[3] √è√∞√ÆS√≠√≤√º √Ø√≥√≠√™√≤ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥\n[4] √è√∞√ÆS√≠√≤√º √Ø√≥√≠√™√≤ √§√∞√≥√£√Æ√¨√≥ √®√£√∞√Æ√™√≥", "Seleccione", "Cerrar");
	}
	if(pickupid == pick_prok_4) {
		if(prok4_owner == -1) {
			if(pData[playerid][unikauto_Have] != 0 || pData[playerid][autoHave] != 0 || pData[playerid][pBusiness] != -1 || pData[playerid][pFilling] != -1 || pData[playerid][food_have] != 0 || pData[playerid][prok_have] != 0 || pData[playerid][kiosk_have] != 0) 
				return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≥√¶√• √•√±√≤√º √°√®√ß√≠√•√± √®√´√® √Ä√á√ë");
			else return SPD(playerid, 9450, DIALOG_STYLE_MSGBOX, "{ffd770}√è√Æ√™√≥√Ø√™√† √°√®√ß√≠√•√±√†", ""CWHITE"√ç√†√ß√¢√†√≠√®√•:\t\t{009900}√è√≥√≠√™√≤ √Ø√∞√Æ√™√†√≤√†\n"CWHITE"√ë√≤√Æ√®√¨√Æ√±√≤√º:\t\t{009900}2000000$\n\n{ccff66}Quieres √™√≥√Ø√®√≤√º √Ω√≤√Æ√≤ √Ø√≥√≠√™√≤?", "S√≠", "No");
		}
		if(prok4_owner != pData[playerid][pID]) return SCM(playerid, COLOR_LIGHTGREY, "√ì√Ø√∞√†√¢√´√•√≠√®√• √Ø√≥√≠√™√≤√Æ√¨ √Ø√∞√Æ√™√†√≤√† √§√Æ√±√≤√≥√Ø√≠√Æ √≤√Æ√´√º√™√Æ √•√£√Æ √¢√´√†√§√•√´√º√∂√≥");
		SPD(playerid, 9451, DIALOG_STYLE_LIST, ""CMAIN"√ì√Ø√∞√†√¢√´√•√≠√®√• √Ø√≥√≠√™√≤√Æ√¨", "[1] √ë√Æ√±√≤√Æ√ø√≠√®√• √Æ√Ø√´√†√≤√ª\n[2] √ä√†√±√±√† √°√®√ß√≠√•√±√†\n[3] √è√∞√ÆS√≠√≤√º √Ø√≥√≠√™√≤ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥\n[4] √è√∞√ÆS√≠√≤√º √Ø√≥√≠√™√≤ √§√∞√≥√£√Æ√¨√≥ √®√£√∞√Æ√™√≥", "Seleccione", "Cerrar");
	}
	if(pickupid == pick_prok_5) {
		if(prok5_owner == -1) {
			if(pData[playerid][unikauto_Have] != 0 || pData[playerid][autoHave] != 0 || pData[playerid][pBusiness] != -1 || pData[playerid][pFilling] != -1 || pData[playerid][food_have] != 0 || pData[playerid][prok_have] != 0 || pData[playerid][kiosk_have] != 0) 
				return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≥√¶√• √•√±√≤√º √°√®√ß√≠√•√± √®√´√® √Ä√á√ë");
			else return SPD(playerid, 9456, DIALOG_STYLE_MSGBOX, "{ffd770}√è√Æ√™√≥√Ø√™√† √°√®√ß√≠√•√±√†", ""CWHITE"√ç√†√ß√¢√†√≠√®√•:\t\t{009900}√è√≥√≠√™√≤ √Ø√∞√Æ√™√†√≤√†\n"CWHITE"√ë√≤√Æ√®√¨√Æ√±√≤√º:\t\t{009900}2000000$\n\n{ccff66}Quieres √™√≥√Ø√®√≤√º √Ω√≤√Æ√≤ √Ø√≥√≠√™√≤?", "S√≠", "No");
		}
		if(prok5_owner != pData[playerid][pID]) return SCM(playerid, COLOR_LIGHTGREY, "√ì√Ø√∞√†√¢√´√•√≠√®√• √Ø√≥√≠√™√≤√Æ√¨ √Ø√∞√Æ√™√†√≤√† √§√Æ√±√≤√≥√Ø√≠√Æ √≤√Æ√´√º√™√Æ √•√£√Æ √¢√´√†√§√•√´√º√∂√≥");
		SPD(playerid, 9457, DIALOG_STYLE_LIST, ""CMAIN"√ì√Ø√∞√†√¢√´√•√≠√®√• √Ø√≥√≠√™√≤√Æ√¨", "[1] √ë√Æ√±√≤√Æ√ø√≠√®√• √Æ√Ø√´√†√≤√ª\n[2] √ä√†√±√±√† √°√®√ß√≠√•√±√†\n[3] √è√∞√ÆS√≠√≤√º √Ø√≥√≠√™√≤ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥\n[4] √è√∞√ÆS√≠√≤√º √Ø√≥√≠√™√≤ √§√∞√≥√£√Æ√¨√≥ √®√£√∞√Æ√™√≥", "Seleccione", "Cerrar");
	}
	if(pickupid == pick_prok_6) {
		if(prok6_owner == -1) {
			if(pData[playerid][unikauto_Have] != 0 || pData[playerid][autoHave] != 0 || pData[playerid][pBusiness] != -1 || pData[playerid][pFilling] != -1 || pData[playerid][food_have] != 0 || pData[playerid][prok_have] != 0 || pData[playerid][kiosk_have] != 0) 
				return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≥√¶√• √•√±√≤√º √°√®√ß√≠√•√± √®√´√® √Ä√á√ë");
			else return SPD(playerid, 9462, DIALOG_STYLE_MSGBOX, "{ffd770}√è√Æ√™√≥√Ø√™√† √°√®√ß√≠√•√±√†", ""CWHITE"√ç√†√ß√¢√†√≠√®√•:\t\t{009900}√è√≥√≠√™√≤ √Ø√∞√Æ√™√†√≤√†\n"CWHITE"√ë√≤√Æ√®√¨√Æ√±√≤√º:\t\t{009900}2000000$\n\n{ccff66}Quieres √™√≥√Ø√®√≤√º √Ω√≤√Æ√≤ √Ø√≥√≠√™√≤?", "S√≠", "No");
		}
		if(prok6_owner != pData[playerid][pID]) return SCM(playerid, COLOR_LIGHTGREY, "√ì√Ø√∞√†√¢√´√•√≠√®√• √Ø√≥√≠√™√≤√Æ√¨ √Ø√∞√Æ√™√†√≤√† √§√Æ√±√≤√≥√Ø√≠√Æ √≤√Æ√´√º√™√Æ √•√£√Æ √¢√´√†√§√•√´√º√∂√≥");
		SPD(playerid, 9463, DIALOG_STYLE_LIST, ""CMAIN"√ì√Ø√∞√†√¢√´√•√≠√®√• √Ø√≥√≠√™√≤√Æ√¨", "[1] √ë√Æ√±√≤√Æ√ø√≠√®√• √Æ√Ø√´√†√≤√ª\n[2] √ä√†√±√±√† √°√®√ß√≠√•√±√†\n[3] √è√∞√ÆS√≠√≤√º √Ø√≥√≠√™√≤ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥\n[4] √è√∞√ÆS√≠√≤√º √Ø√≥√≠√™√≤ √§√∞√≥√£√Æ√¨√≥ √®√£√∞√Æ√™√≥", "Seleccione", "Cerrar");
	}
	if(pickupid == pick_prok_7) {
		if(prok7_owner == -1) {
			if(pData[playerid][unikauto_Have] != 0 || pData[playerid][autoHave] != 0 || pData[playerid][pBusiness] != -1 || pData[playerid][pFilling] != -1 || pData[playerid][food_have] != 0 || pData[playerid][prok_have] != 0 || pData[playerid][kiosk_have] != 0) 
				return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≥√¶√• √•√±√≤√º √°√®√ß√≠√•√± √®√´√® √Ä√á√ë");
			else return SPD(playerid, 9468, DIALOG_STYLE_MSGBOX, "{ffd770}√è√Æ√™√≥√Ø√™√† √°√®√ß√≠√•√±√†", ""CWHITE"√ç√†√ß√¢√†√≠√®√•:\t\t{009900}√è√≥√≠√™√≤ √Ø√∞√Æ√™√†√≤√†\n"CWHITE"√ë√≤√Æ√®√¨√Æ√±√≤√º:\t\t{009900}2000000$\n\n{ccff66}Quieres √™√≥√Ø√®√≤√º √Ω√≤√Æ√≤ √Ø√≥√≠√™√≤?", "S√≠", "No");
		}
		if(prok7_owner != pData[playerid][pID]) return SCM(playerid, COLOR_LIGHTGREY, "√ì√Ø√∞√†√¢√´√•√≠√®√• √Ø√≥√≠√™√≤√Æ√¨ √Ø√∞√Æ√™√†√≤√† √§√Æ√±√≤√≥√Ø√≠√Æ √≤√Æ√´√º√™√Æ √•√£√Æ √¢√´√†√§√•√´√º√∂√≥");
		SPD(playerid, 9469, DIALOG_STYLE_LIST, ""CMAIN"√ì√Ø√∞√†√¢√´√•√≠√®√• √Ø√≥√≠√™√≤√Æ√¨", "[1] √ë√Æ√±√≤√Æ√ø√≠√®√• √Æ√Ø√´√†√≤√ª\n[2] √ä√†√±√±√† √°√®√ß√≠√•√±√†\n[3] √è√∞√ÆS√≠√≤√º √Ø√≥√≠√™√≤ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥\n[4] √è√∞√ÆS√≠√≤√º √Ø√≥√≠√™√≤ √§√∞√≥√£√Æ√¨√≥ √®√£√∞√Æ√™√≥", "Seleccione", "Cerrar");
	}

	if(pickupid == alco_pick) {
		for(new i = 0; i < 18; i ++) TextDrawShowForPlayer(playerid, alcotd[i]);
		SelectTextDraw(playerid, 0x888888AA);
		in_alcMenu[playerid] = true;
	}
	if(pickupid == hotel_reg_pick) {
		if(pData[playerid][pHotel] != -1) SPD(playerid, 1196, DIALOG_STYLE_LIST, "{FFCD00}√å√•√≠√æ √Æ√≤√•√´√ø", "√ë√Ø√®√±√Æ√™ √≠√Æ√¨√•√∞√Æ√¢\n√ê√•√£√®√±√≤√∞√†√∂√®√ø\n√é√Ø√´√†√≤√®√≤√º √Ø√∞√Æ√¶√®√¢√†√≠√®√•\n√Ñ√Æ√±√≤√†√¢√®√≤√º √≤√∞√†√≠√±√Ø√Æ√∞√≤ √™ √Æ√≤√•√´√æ {ff6640}(500$)\n{ff6640}√è√∞√ÆS√≠√≤√º "CWHITE"√≤√∞√†√≠√±√Ø√Æ√∞√≤ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥\n{fa1010}√è√∞√ÆS√≠√≤√º "CWHITE"√≤√∞√†√≠√±√Ø√Æ√∞√≤ √§√∞√≥√£√Æ√¨√≥ √®√£√∞√Æ√™√≥\n√Ç√ª√±√•√´√®√≤√º√±√ø", "Seleccione", "Cerrar");
		else SPD(playerid, 1196, DIALOG_STYLE_LIST, "{FFCD00}√å√•√≠√æ √Æ√≤√•√´√ø", "√ë√Ø√®√±√Æ√™ √≠√Æ√¨√•√∞√Æ√¢\n√ê√•√£√®√±√≤√∞√†√∂√®√ø", "Seleccione", "Cerrar");
	}
	if(pickupid == hotel_lift_pick || pickupid == hotel_lift_pick + 1 || pickupid == hotel_lift_pick + 2 || pickupid == hotel_lift_pick + 3 || 
	pickupid == hotel_lift_pick_2 || pickupid == hotel_lift_pick_2 + 1 || pickupid == hotel_lift_pick_2 + 2 || pickupid == hotel_lift_pick_2 + 3) 
		SPD(playerid, 5994, DIALOG_STYLE_LIST, "√ã√®√¥√≤", "√ã√Æ√°√°√®\n1 √Ω√≤√†√¶\n2 √Ω√≤√†√¶\n3 √Ω√≤√†√¶", "Seleccione", "Cerrar");
	if(pickupid == hotel_pick) {
		SetPlayerInterior( playerid, 0 );
		SetPlayerPos( playerid, BizInfo[77][EntBizVh][0], BizInfo[77][EntBizVh][1], BizInfo[77][EntBizVh][2] );
		SetPlayerFacingAngle(playerid, BizInfo[77][EntBizVh][3]);
		SetCameraBehindPlayer(playerid);
		SetPlayerVirtualWorld( playerid, 0 );
		antiflood_move[playerid] = gettime() + 3;
	}
	if(pickupid == good_sotr || pickupid == good_sotr + 1 || pickupid == good_sotr + 2) 
		return SPD(playerid, 1829, DIALOG_STYLE_LIST, "{FFCD00}√ã√≥√∑√∏√®√• √±√Æ√≤√∞√≥√§√≠√®√™√® √°√Æ√´√º√≠√®√∂", "√Å√Æ√´√º√≠√®√∂√† √ã√ë\n√Å√Æ√´√º√≠√®√∂√† √ë√î\n√Å√Æ√´√º√≠√®√∂√† √ã√Ç\n√Ç√±√• √°√Æ√´√º√≠√®√∂√ª", "Seleccione", "Cerrar");
	if(pickupid == allmeds || pickupid == allmeds + 1 || pickupid == allmeds + 2) {
		new fmt_am[90], count_meds;
		foreach(new i:Player) {
			if(!ProxDetectorS(100.0, playerid, i)) continue;
			if(!IsAMedic(i)) continue;
			if(GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(i)) continue;
			if(GetPlayerInterior(playerid) != GetPlayerInterior(i)) continue;
			count_meds ++;
		}
		format(fmt_am, sizeof(fmt_am), "\n\n\n"CWHITE"√ë√•√©√∑√†√± √¢ √°√Æ√´√º√≠√®√∂√• "CMAIN"%d "CWHITE"√±√Æ√≤√∞√≥√§√≠√®√™√Æ√¢\n\n\n", count_meds);
		SPD(playerid, 0, DIALOG_STYLE_MSGBOX, " ", fmt_am, "Cerrar", "");
	}
	if(pickupid == automed || pickupid == automed + 1 || pickupid == automed + 2) {
		new bool: is_meds;
		foreach(new i:Player) {
			if(!ProxDetectorS(100.0, playerid, i)) continue;
			if(!IsAMedic(i)) continue;
			if(GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(i)) continue;
			if(GetPlayerInterior(playerid) != GetPlayerInterior(i)) continue;
			is_meds = true;
			break;
		}
		if(is_meds) return SCM(playerid, COLOR_GREY, "√ã√•√∑√•√≠√®√• √ß√§√•√±√º √≠√•√¢√Æ√ß√¨√Æ√¶√≠√Æ, √™√Æ√£S√≠ √¢ √°√Æ√´√º√≠√®√∂√• √•√±√≤√º √¢√∞√†√∑√®");
		if(!pTemp[playerid][pInHospital]) return SCM(playerid, COLOR_GREY, "√Ñ√´√ø √´√•√∑√•√≠√®√ø √≠√≥√¶√≠√Æ √ß√†√≠√ø√≤√º √™√Æ√©√™√≥");
		SPD(playerid, 9654, DIALOG_STYLE_MSGBOX, "{FFCD00}√ã√•√∑√•√≠√®√•", "\n\n"CWHITE"√Ç S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤ √¢ √°√Æ√´√º√≠√®√∂√• No √¢√∞√†√∑√•√©\n\n√Ç√ª √¨√Æ√¶√•√≤√• √Ø√∞√Æ√©√≤√® √†√¢√≤√Æ√¨√†√≤√®√∑√•√±√™√Æ√• √´√•√∑√•√≠√®√•\n√ë√≤√Æ√®√¨√Æ√±√≤√º: "CPALEGREEN"400$\n\n", "√ã√•√∑√•√≠√®√•", "Cerrar");
	}
	if(pickupid == marker_bomj || pickupid == marker_bomj_2) {
		if(pickupid == marker_bomj_2) SetPVarInt(playerid, "twomarker", 1);
		for(new i = 0; i < 7; i ++) TextDrawShowForPlayer(playerid, foodbomj_[i]);
		bomjfood_use[playerid] = true;
		SelectTextDraw(playerid, COLOR_WHITE);
	}
	if(pickupid == proppick_house || pickupid == proppick_house + 1) show_house_lists(playerid, 1, 35);
	if(pickupid == proppick_business || pickupid == proppick_business + 1) show_biz_lists(playerid, 1, 20);
	if(pickupid == numplate_buy) {
		new mes[300], text_car_1[140], text_car_2[140], text_car_3[140];
		if(pData[playerid][pHouse] == -1) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √Ø√∞√Æ√¶√®√¢√†√≤√º √¢ √§√Æ√¨√•");
		if(pData[playerid][pCar][0] != 0) format(text_car_1, 140, "(√¨√†√∞√™√†: %s)", VehicleNames[pData[playerid][pCar][0] - 400]);
		else strcat(text_car_1, "{ff4d4d}(√Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤)");
		if(pData[playerid][pCar][1] != 0) format(text_car_2, 140, "(√¨√†√∞√™√†: %s)", VehicleNames[pData[playerid][pCar][1] - 400]);
		else strcat(text_car_2, "{ff4d4d}(√Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤)");
		if(pData[playerid][pCar][2] != 0) format(text_car_3, 140, "(√¨√†√∞√™√†: %s)", VehicleNames[pData[playerid][pCar][2] - 400]);
		else strcat(text_car_3, "{ff4d4d}(√Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤)");
		format(mes, sizeof(mes), ""CLITEBLUE"√Ç√ª√°√•√∞√®√≤√• √≤√∞√†√≠√±√Ø√Æ√∞√≤ √®√ß √±√Ø√®√±√™√† √≠√®√¶√•:\n"CWHITE"√è√•√∞√¢√ª√© "CMAIN"%s\n"CWHITE"√Ç√≤√Æ√∞√Æ√© "CMAIN"%s\n"CWHITE"√í√∞√•√≤√®√© "CMAIN"%s", text_car_1, text_car_2, text_car_3);
		return SPD(playerid, 188, DIALOG_STYLE_LIST, ""CPALEGREEN"√ç√Æ√¨√•√∞√† √≠√† √≤√∞√†√≠√±√Ø√Æ√∞√≤", mes, "Seleccione", "Cerrar");
	}
	if(pickupid == air_lsenter) {
		load_mode(playerid);
		SetPlayerPos(playerid, -1862.2107, 70.1504, 1055.1296);
		SetPlayerVirtualWorld(playerid, 1);
		SetPlayerInterior(playerid, 14);
		SetPlayerFacingAngle(playerid, 180.0);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	if(pickupid == air_lsexit) {
		SetPlayerPos(playerid, 1642.2861,-2239.0095,13.4969);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 180.0);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	if(pickupid == air_L_lsenter) {
		load_mode(playerid);
		SetPlayerPos(playerid, -1895.6058, 59.6874, 1055.1296);
		SetPlayerVirtualWorld(playerid, 1);
		SetPlayerInterior(playerid, 14);
		SetPlayerFacingAngle(playerid, 270.0);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	if(pickupid == air_L_lsexit) {
		SetPlayerPos(playerid, 1767.5345,-2433.8484,13.5547);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 180.0);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	if(pickupid == air_sfenter) {
		load_mode(playerid);
		SetPlayerPos(playerid, -1862.2107, 70.1504, 1055.1296);
		SetPlayerVirtualWorld(playerid, 2);
		SetPlayerInterior(playerid, 14);
		SetPlayerFacingAngle(playerid, 180.0);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	if(pickupid == air_sfexit) {
		SetPlayerPos(playerid, -1418.9697, -291.2208, 14.1484);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 136.0712);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	if(pickupid == air_L_sfenter) {
		load_mode(playerid);
		SetPlayerPos(playerid, -1895.6058, 59.6874, 1055.1296);
		SetPlayerVirtualWorld(playerid, 2);
		SetPlayerInterior(playerid, 14);
		SetPlayerFacingAngle(playerid, 270.0);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	if(pickupid == air_L_sfexit) {
		SetPlayerPos(playerid, -1378.3290, -257.7047, 14.1440);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 320.3611);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	if(pickupid == air_lventer) {
		load_mode(playerid);
		SetPlayerPos(playerid, -1862.2107, 70.1504, 1055.1296);
		SetPlayerVirtualWorld(playerid, 3);
		SetPlayerInterior(playerid, 14);
		SetPlayerFacingAngle(playerid, 180.0);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	if(pickupid == air_lvexit) {
		SetPlayerPos(playerid, 1675.1791, 1447.7621, 10.7882);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 270.0);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	if(pickupid == air_L_lventer) {
		load_mode(playerid);
		SetPlayerPos(playerid, -1895.6058, 59.6874, 1055.1296);
		SetPlayerVirtualWorld(playerid, 3);
		SetPlayerInterior(playerid, 14);
		SetPlayerFacingAngle(playerid, 270.0);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	if(pickupid == air_L_lvexit) {
		SetPlayerPos(playerid, 1596.9635, 1448.3235, 10.8270);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 90.0);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}

	for(new i = 0; i < 10; i++)
	{
		if(pickupid == ammo_av[i])
		{
			if(!IsAArm(playerid) && !IsAMafia(playerid)) 
				return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Ω√≤√Æ");
			if(box_object[playerid]) 
				return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≥√¶√• √¢√ß√ø√´√® √ø√π√®√™ √± √Ø√†√≤√∞√Æ√≠√†√¨√®");

			DestroyDynamicPickup(ammo_av[i]);
			ApplyAnimation(playerid, "CARRY", "LIFTUP", 4.0, 0, 0, 0, 0, 0, 1);
			SetPlayerSpecialAction(playerid, 25);
			SetPlayerAttachedObject(playerid, 2, 2358, 6, -0.031999, 0.068999, -0.239000, -109.999885, -17.999992, -95.200019, 0.861999, 0.916999, 0.984000);
			box_object[playerid] = true;

			SCM(playerid, COLOR_BLUE, "√Ç√ª √¢√ß√ø√´√® √ø√π√®√™ √± √Ø√†√≤√∞√Æ√≠√†√¨√®");
			SCM(playerid, COLOR_BLUE, "√ó√≤√Æ√°√ª √ß√†√£√∞√≥√ß√®√≤√º √•√£√Æ, √¢√¢√•√§√®√≤√• "CORANGE"/putammo"CBLUE", √¢√ª√™√®√≠√≥√≤√º - "CYELLOW"/dropammo");
			if(pData[playerid][pSex] == 1) 
				SetPlayerChatBubble(playerid, "√¢√ß√ø√´ √ø√π√®√™ √± √Ø√†√≤√∞√Æ√≠√†√¨√®", 0x996633FF, 4.0, 5000);
			else 
				SetPlayerChatBubble(playerid, "√¢√ß√ø√´√† √ø√π√®√™ √± √Ø√†√≤√∞√Æ√≠√†√¨√®", 0x996633FF, 4.0, 5000);

			SetTimerEx("spawn_ammoav", 30000, 0, "i", i);
		}
	}

	if(pickupid == tune_pick) {
		if(bilet_tune[playerid]) {
			SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≥√¶√• √ß√†√Ø√®√±√†√´√®√±√º √≠√† √Æ√°√±√´√≥√¶√®√¢√†√≠√®√•");
			SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√• "CORANGE"/tune {cecece}√§√´√ø √≤√æ√≠√®√≠√£√† √†√¢√≤√Æ√¨√Æ√°√®√´√ø");
			SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√• "CORANGE"/power {cecece}√§√´√ø √Ø√∞√Æ√™√†√∑√™√® √µ√†√∞√†√™√≤√•√∞√®√±√≤√®√™ √†√¢√≤√Æ√¨√Æ√°√®√´√ø");
		}
		else SPD(playerid, 182, DIALOG_STYLE_MSGBOX, "{00ff00}√í√æ√≠√®√≠√£ √†√¢√≤√Æ√¨√Æ√°√®√´√ø", ""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √ß√†√Ø√®√±√†√≤√º√±√ø √≠√† √Æ√°√±√´√≥√¶√®√¢√†√≠√®√• √†√¢√≤√Æ√¨√Æ√°√®√´√ø\n√¢ √Ω√≤√Æ√¨ √≤√æ√≠√®√≠√£-√†√≤√•√´√º√•? √á√†√Ø√®√±√º √±√≤√Æ√®√≤ "CMAIN"600$"CWHITE".", "S√≠", "No");
	}
	else if(pickupid == info_pirot) {
		SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CPALEGREEN"√å√†√£√†√ß√®√≠√ª √Ø√®√∞√Æ√≤√•√µ√≠√®√™√®", 
			""CWHITE"√í√≥√≤ √Ç√ª √¨√Æ√¶√•√≤√• √Ø√∞√®√Æ√°√∞√•√±√≤√® √∞√†√ß√´√®√∑√≠√ª√• √Ø√®√∞√Æ√≤√•√µ√≠√®√∑√•√±√™√®√• √®√ß√§√•√´√®√ø √§√´√ø\n\
			√≥√™√∞√†√∏√•√≠√®√ø √Ø√∞√†√ß√§√≠√®√™√† √®√´√® √Ø√∞√Æ√±√≤√Æ √§√´√ø √∞√†√ß√¢√´√•√∑√•√≠√®√ø. √è√Æ√¨√≠√®√≤√•, √∑√≤√Æ √±√∞√†√ß√≥\n\
			√Ø√Æ√±√´√• √Ø√Æ√§√¶√Æ√£√† √¥√®√≤√®√´√ø √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √Æ√≤√Æ√©√≤√® √≠√† √°√•√ß√Æ√Ø√†√±√≠√≥√æ √§√®√±√≤√†√≠√∂√®√æ.\n\
			√Ç √Ø√∞√Æ√≤√®√¢√≠√Æ√¨ √±√´√≥√∑√†√• √¢√Æ√ß√¨√Æ√¶√≠√ª √≤√∞√†√¢√¨√ª √® √Æ√¶√Æ√£√®.\n\n\
			√î√•√©√•√∞√¢√•√∞√™√® √® √±√†√´√æ√≤√ª √∞√†√ß√≠√ª√µ √¢√®√§√Æ√¢ √Æ√≤√´√®√∑√†√æ√≤√±√ø √±√™√Æ√∞√Æ√±√≤√º√æ √ß√†√´√Ø√Æ√¢ √®\n\
			√¢√∞√•√¨√•√≠√•√¨ √∞√†√°√Æ√≤√ª. √Å√Æ√´√º√∏√®√• √¥√•√©√¢√•√∞√™√® √≠√•√±√Æ√¨√≠√•√≠√≠√Æ √™√∞√†√±√Æ√∑√≠√•√• √¨√†√´√ª√µ.\n\
			√è√∞√® √®√µ √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√® √±√´√•√§√≥√•√≤ √≠√• √ß√†√°√ª√¢√†√≤√º √Æ √≤√•√µ√≠√®√™√• √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√®.", 
		"Cerrar", "");
	}
	else if(pickupid == ustr_work || pickupid == ustr_work + 1 || pickupid == ustr_work + 2) SPD(playerid, 10092, DIALOG_STYLE_MSGBOX, "{FFCD00}√ì√±√≤√∞√Æ√©√±√≤√¢√Æ √≠√† √∞√†√°√Æ√≤√≥", ""CWHITE"√Ü√•√´√†√•√≤√• √Ø√Æ√±√¨√Æ√≤√∞√•√≤√º √±√Ø√®√±√Æ√™ √§√Æ√±√≤√≥√Ø√≠√ª√µ √∞√†√°√Æ√≤?", "S√≠", "No");
	else if(pickupid == posob_ash) SPD(playerid, 251, DIALOG_STYLE_TABLIST_HEADERS, "{cccc00}√Ä√¢√≤√Æ√∏√™√Æ√´√†", "{aa80ff}√Ç√ª√°√•√∞√®√≤√• √≠√•√Æ√°√µ√Æ√§√®√¨√Æ√• √Ç√†√¨ √Ø√Æ√±√Æ√°√®√•:\n"CWHITE"√è√∞√†√¢√®√´√† √Ñ√Æ√∞√Æ√¶√≠√Æ√£√Æ √Ñ√¢√®√¶√•√≠√®√ø (√è√Ñ√Ñ)\n√è√∞√†√¢√®√´√† √è√Æ√´¬∏√≤√† √≠√† √Ç√Æ√ß√§√≥√∏√≠√Æ√¨ √í√∞√†√≠√±√Ø√Æ√∞√≤√• (√è√è√≠√Ç√í)\n√ì√Ø√∞√†√¢√´√•√≠√®√• √≤√∞√†√≠√±√Ø√Æ√∞√≤√Æ√¨", "Seleccione", "Cerrar");
	else if(pickupid == bloodyr_pckup) show_bloodyring_dialog(playerid);
	else if(pickupid == met_player) SPD(playerid, 1844, DIALOG_STYLE_INPUT, "{FFCD00}√è√Æ√™√≥√Ø√™√† √¨√•√≤√†√´√´√†", ""CWHITE"√ë√™√Æ√´√º√™√Æ √™√®√´√Æ√£√∞√†√¨√¨ √¨√•√≤√†√´√´√† Quieres √™√≥√Ø√®√≤√º?\n{99bbff}1 √™√£ √±√≤√Æ√®√≤ 15$", "√Ç√¢√•√±√≤√®", "Cerrar");
	else if(pickupid == ammo_tir) {
		return SPD(playerid, 767, DIALOG_STYLE_TABLIST_HEADERS, "{009966}√é√∞√≥√¶√®√• √§√´√ø √≤√®√∞√† {FFCD00}(+ 1000 √Ø√†√≤√∞.)",
		"{9966ff}√é√∞√≥√¶√®√•\t{9966ff}√ñ√•√≠√†\n\
			"CWHITE"Desert Eagle\t1.500$\n\
			Colt 45\t1.000$\n\
			Silenced 9mm\t1.300$\n\
			M4\t2.000$\n\
			AK47\t2.000$\n\
			Sniper Rifle\t3.200$\n\
			Rifle\t2.500$\n\
			MP5\t2.000$\n\
			Shotgun\t2.200$\n\
			UZI\t2.400$\n\
			Sawnoff\t2.700$\n\
			Combat SG\t2.500$\n\
			Minigun\t4.900$",
		"√ä√≥√Ø√®√≤√º", "Cerrar");
	}
	else if(pickupid == lcnosob_enter) {
		load_mode(playerid);
		SetPlayerPos(playerid, 2622.0266,1294.3978,1051.7072);
		SetPlayerVirtualWorld(playerid, 2);
		SetPlayerInterior(playerid, 5);
		SetPlayerFacingAngle(playerid, 90.0);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	else if(pickupid == rusosob_enter) {
		load_mode(playerid);
		SetPlayerPos(playerid, 2622.0266,1294.3978,1051.7072);
		SetPlayerVirtualWorld(playerid, 5);
		SetPlayerInterior(playerid, 5);
		SetPlayerFacingAngle(playerid, 90.0);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	else if(pickupid == yakosob_enter) {
		load_mode(playerid);
		SetPlayerPos(playerid, 2622.0266,1294.3978,1051.7072);
		SetPlayerVirtualWorld(playerid, 3);
		SetPlayerInterior(playerid, 5);
		SetPlayerFacingAngle(playerid, 90.0);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	else if(pickupid == lcnosob_exit) {
		SetPlayerPos(playerid, 1453.875000, 751.060363, 11.023437);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 90.0);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	else if(pickupid == rusosob_exit) {
		SetPlayerPos(playerid, 940.002502, 1733.218383, 8.851562);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 270.0);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	else if(pickupid == yakosob_exit) {
		SetPlayerPos(playerid, 1459.558349, 2773.406494, 10.820312);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 270.0);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	else if(pickupid == shtab_sv_enter) {
		SetPlayerPos(playerid, 420.8768,2536.5298,10.0000);
		SetPlayerVirtualWorld(playerid, 1); SetPlayerInterior(playerid, 10);
		SetPlayerFacingAngle(playerid, 90.0); SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	else if(pickupid == shtab_sv_exit) {
		SetPlayerPos(playerid, 164.6, 1881.2, 20.2);
		SetPlayerVirtualWorld(playerid, 0); SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 180.0); SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	else if(pickupid == shtab_vmf_exit) {
		SetPlayerPos(playerid, -2238.8, 2352.6, 4.9);
		SetPlayerVirtualWorld(playerid, 0); SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 131.5); SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	else if(pickupid == shtab_vmf_enter) {
		SetPlayerPos(playerid, 420.8768,2536.5298,10.0000);
		SetPlayerVirtualWorld(playerid, 3); SetPlayerInterior(playerid, 10);
		SetPlayerFacingAngle(playerid, 90.0); SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	else if(pickupid == stolovka_sventer) {
		if(!IsAArm(playerid)) return SCM(playerid, COLOR_ERROR, "√Ç√µ√Æ√§√®√≤√º √±√æS√≠ √¨√Æ√£√≥√≤ √≤√Æ√´√º√™√Æ √¢√Æ√•√≠√≠√ª√•");
		SetPlayerPos(playerid, 458.0067,-88.5324,999.5547);
		SetPlayerVirtualWorld(playerid, 1); SetPlayerInterior(playerid, 4);
		SetPlayerFacingAngle(playerid, 90.0); SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	else if(pickupid == meriyals_enter) {
		load_mode(playerid);
		SetPlayerPos(playerid, 1526.6863,-1809.3170,997.4130);
		SetPlayerVirtualWorld(playerid, 1); SetPlayerInterior(playerid, 3);
		SetPlayerFacingAngle(playerid, 0.0); SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	else if(pickupid == meriyals_exit) {
		SetPlayerPos(playerid, 1481.1498,-1767.5710,18.7958);
		SetPlayerVirtualWorld(playerid, 0); SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 0.0); SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	else if(pickupid == meriyasf_enter) {
		load_mode(playerid);
		SetPlayerPos(playerid, 1526.6863,-1809.3170,997.4130);
		SetPlayerVirtualWorld(playerid, 3); SetPlayerInterior(playerid, 3);
		SetPlayerFacingAngle(playerid, 0.0); SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	else if(pickupid == meriyasf_exit) {
		SetPlayerPos(playerid, -2763.222167, 375.718078, 5.948976);
		SetPlayerVirtualWorld(playerid, 0); SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 270.0); SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	else if(pickupid == meriyalv_enter) {
		load_mode(playerid);
		SetPlayerPos(playerid, 1526.6863,-1809.3170,997.4130);
		SetPlayerVirtualWorld(playerid, 2); SetPlayerInterior(playerid, 3);
		SetPlayerFacingAngle(playerid, 0.0); SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	else if(pickupid == meriyalv_exit) {
		SetPlayerPos(playerid, 2385.850097, 2465.998291, 10.820312);
		SetPlayerVirtualWorld(playerid, 0); SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 90.0); SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	else if(pickupid == stolovka_vvcenter) {
		if(!IsAArm(playerid)) return SCM(playerid, COLOR_ERROR, "√Ç√µ√Æ√§√®√≤√º √±√æS√≠ √¨√Æ√£√≥√≤ √≤√Æ√´√º√™√Æ √¢√Æ√•√≠√≠√ª√•");
		SetPlayerPos(playerid, 458.0067,-88.5324,999.5547);
		SetPlayerVirtualWorld(playerid, 2); SetPlayerInterior(playerid, 4);
		SetPlayerFacingAngle(playerid, 90.0); SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	else if(pickupid == stolovka_vvcexit) {
		SetPlayerPos(playerid, 424.7, 2528.5, 16.6);
		SetPlayerVirtualWorld(playerid, 0); SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 360.0); SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	else if(pickupid == stolovka_svexit) {
		SetPlayerPos(playerid, 177.4, 1844.8, 17.6);
		SetPlayerVirtualWorld(playerid, 0); SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 0.0); SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}

	else if(pickupid == ash_enter) {
		load_mode(playerid);
		SetPlayerPos(playerid,-896.8524,951.1500,1134.5349);
		SetPlayerVirtualWorld(playerid, 229); SetPlayerInterior(playerid, 3);
		SetPlayerFacingAngle(playerid, 0.0); SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	else if(pickupid == ash_exit) {
		SetPlayerPos(playerid, -2059.7102,-189.8152,35.3203);
		SetPlayerVirtualWorld(playerid, 0); SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 270.0); SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}

	else if(pickupid == stolovka_vmfenter) {
		if(!IsAArm(playerid)) return SCM(playerid, COLOR_ERROR, "√Ç√µ√Æ√§√®√≤√º √±√æS√≠ √¨√Æ√£√≥√≤ √≤√Æ√´√º√™√Æ √¢√Æ√•√≠√≠√ª√•");
		SetPlayerPos(playerid, 458.0067,-88.5324,999.5547);
		SetPlayerVirtualWorld(playerid, 3); SetPlayerInterior(playerid, 4);
		SetPlayerFacingAngle(playerid, 90.0); SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	else if(pickupid == ballas_enter) {
		SetPlayerPos(playerid, 2751.0171,-1962.4402,662.6328);
		SetPlayerVirtualWorld(playerid, 34); SetPlayerInterior(playerid, 6);
		SetPlayerFacingAngle(playerid, 90.0); SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	else if(pickupid == ballas_exit) {
		load_mode(playerid);
		SetPlayerPos(playerid, 1917.5049,-1080.5438,24.3156);
		SetPlayerVirtualWorld(playerid, 0); SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 175.8111); SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	else if(pickupid == aztec_enter) {
		SetPlayerPos(playerid, 2751.0171,-1962.4402,662.6328);
		SetPlayerVirtualWorld(playerid, 36); SetPlayerInterior(playerid, 8);
		SetPlayerFacingAngle(playerid, 90.0); SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	else if(pickupid == aztec_exit) {
		SetPlayerPos(playerid, 2185.781494, -1812.364501, 13.560417);
		SetPlayerVirtualWorld(playerid, 0); SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 0.0); SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	else if(pickupid == rifa_enter) {
		SetPlayerPos(playerid, 2751.0171,-1962.4402,662.6328);
		SetPlayerVirtualWorld(playerid, 63); SetPlayerInterior(playerid, 18);
		SetPlayerFacingAngle(playerid, 90.0); SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	else if(pickupid == rifa_exit) {
		SetPlayerPos(playerid, 2755.431152, -1935.268798, 13.546773);
		SetPlayerVirtualWorld(playerid, 0); SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 270.0); SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	else if(pickupid == stolovka_vmfexit) {
		load_mode(playerid);
		SetPlayerPos(playerid, -2221.9399,2299.8203,5.5045);
		SetPlayerVirtualWorld(playerid, 0); SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 0.0); SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	else if(pickupid == tir_enter) 
		SPD(playerid, 361, DIALOG_STYLE_MSGBOX, ""CPALEGREEN"√è√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√•", ""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √¢√Æ√©√≤√® √¢ √≤√®√∞?\n"CMAIN"√Ç√±¬∏ √Ç√†√∏√• √Æ√∞√≥√¶√®√• √°√≥√§√•√≤ √™√Æ√≠√¥√®√±√™√Æ√¢√†√≠√Æ.", "S√≠", "No");
	else if(pickupid == ttir_exit) {
		SetPlayerPos(playerid, 301.5928,-78.3169,1001.5156);
		SetPlayerFacingAngle(playerid, 176.6687);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	else if(pickupid == ttir_enter) {
		SetPlayerPos(playerid, 301.8523,-73.7526,1001.5156);
		SetPlayerFacingAngle(playerid, 0.0);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	else if(pickupid == tir_exit) {
		if(player_in_tir[playerid]) {
			ResetPlayerWeapons(playerid);
			player_in_tir[playerid] = false;
		}
		SetPlayerPos(playerid, -2666.9075,-7.4158,6.1328);
		SetPlayerVirtualWorld(playerid, 0); SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 90.0);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	else if(pickupid == ad_pickenter) {
		SetPlayerPos(playerid, 2307.1340,-15.8246,26.7496);
		SetPlayerVirtualWorld(playerid, 3); SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 270.0);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	else if(pickupid == ad_pickexit) {
		SetPlayerPos(playerid, 815.4471,-1586.2626,13.5469);
		SetPlayerVirtualWorld(playerid, 0); SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 160.0);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	else if(pickupid == PickInfoL) {
		SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CPALEGREEN"√à√≠√¥√Æ√∞√¨√†√∂√®√ø", 
			""CWHITE"√è√∞√®√¢√•√≤√±√≤√¢√≥√•√¨ √Ç√†√± √≠√† √´√•√±√Æ√Ø√®√´√™√•! √Ç√Æ√ß√´√• √Ç√†√±\n\
			√≠√†√µ√Æ√§√®√≤√±√ø √ß√≠√†√∑√Æ√™ √¥√Æ√∞√¨√ª, √∑√≤√Æ√°√ª √Ø√•√∞√•√Æ√§√•√≤√º√±√ø √® √≠√†√∑√†√≤√º √∞√†√°√Æ√≤√≥,\n\
			√Ø√Æ√§√Æ√©√§√®√≤√• √™ √≠√•√¨√≥. √ñ√•√´√º √Ç√†√∏√•√© √∞√†√°√Æ√≤√ª √ß√†√™√´√æ√∑√†√•√≤√±√ø √¢ √∞√≥√°√™√•\n\
			√§√•√∞√•√¢√º√•√¢ √® √®√µ √§√Æ√±√≤√†√¢√™√• √≠√† √±√™√´√†√§ √´√•√±√Æ√Ø√®√´√™√®. √Ü√•√´√†√•√¨ √≥S√≠√∑√®",
		"Cerrar", "");
	}
	else if(pickupid == loader_job) {
		if(GetPVarInt(playerid, "loader_bags_in_hands")) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √ß√†√¢√•√∞√∏√®√≤√º √∞√†√°√Æ√≤√≥ √± √£√∞√≥√ß√Æ√¨ √¢ √∞√≥√™√†√µ");
		if(GetPVarInt(playerid, "loader_job") < 1) SPD(playerid, 1458, DIALOG_STYLE_MSGBOX, ""CPALEGREEN"√ê√†√ß√§√•√¢√†√´√™√†", ""CWHITE"Quieres √≠√†√∑√†√≤√º √∞√†√°√Æ√∑√®√© √§√•√≠√º?", "S√≠", "No");
		else SPD(playerid, 1458, DIALOG_STYLE_MSGBOX, ""CPALEGREEN"√ê√†√ß√§√•√¢√†√´√™√†", ""CWHITE"Quieres √ß√†√¢√•√∞√∏√®√≤√º √∞√†√°√Æ√∑√®√© √§√•√≠√º?", "S√≠", "No");
	}
	else if(pickupid == bolkasf_enter) {
		SetPlayerInterior(playerid, 1);
		load_mode(playerid);
		SetPlayerPos(playerid, 1482.8531,-1767.2990,2982.6953);
		SetPlayerVirtualWorld(playerid, 2);
		SetPlayerFacingAngle(playerid, 180.0);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	else if(pickupid == bolkasf_exit) {	
		new Float: hp_pl; GetPlayerHealth(playerid, hp_pl);
		if(hp_pl < 60.0) return SCM(playerid, -1, "√å√•√§√Ø√•√∞√±√Æ√≠√†√´ √≠√• √¨√Æ√¶√•√≤ √Æ√≤√Ø√≥√±√≤√®√≤√º √Ç√†√± √¢ √≤√†√™√Æ√¨ √±√Æ√±√≤√Æ√ø√≠√®√®. √é√≤√Ø√∞√†√¢√´√ø√©√≤√•√±√º √≠√† √´√•√∑√•√≠√®√•");
		SetPlayerPos(playerid, -2655.0620,640.1656,14.4545);
		if(pTemp[playerid][pInHospital]) {
			SCM(playerid, -1, "√Ç√ª √¢√ª√Ø√®√±√†√´√®√±√º √®√ß √°√Æ√´√º√≠√®√∂√ª");
			if(pData[playerid][pSex] == 1) SetPlayerChatBubble(playerid, "√Ç√ª√Ø√®√±√†√≠", 0x00FF00FF, 4.0, 5000);
			else SetPlayerChatBubble(playerid, "√Ç√ª√Ø√®√±√†√≠√†", 0x00FF00FF, 4.0, 5000);
			UpdateKoykaSvobodin(playerid, GetPVarInt(playerid, "KoykoUsed"));
			pTemp[playerid][pInHospital] = false;
		}
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 180);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	else if(pickupid == bolkalv_enter) {
		SetPlayerInterior(playerid, 1);
		load_mode(playerid);
		SetPlayerPos(playerid, 1482.8531,-1767.2990,2982.6953);
		SetPlayerVirtualWorld(playerid, 3);
		SetPlayerFacingAngle(playerid, 180.0);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	else if(pickupid == bolkalv_exit) {
		new Float: hp_pl; GetPlayerHealth(playerid, hp_pl);
		if(hp_pl < 60.0) return SCM(playerid, -1, "√å√•√§√Ø√•√∞√±√Æ√≠√†√´ √≠√• √¨√Æ√¶√•√≤ √Æ√≤√Ø√≥√±√≤√®√≤√º √Ç√†√± √¢ √≤√†√™√Æ√¨ √±√Æ√±√≤√Æ√ø√≠√®√®. √é√≤√Ø√∞√†√¢√´√ø√©√≤√•√±√º √≠√† √´√•√∑√•√≠√®√•");
		SetPlayerPos(playerid, 1607.3977,1815.2407,10.8203);
		if(pTemp[playerid][pInHospital]) {
			SCM(playerid, -1, "√Ç√ª √¢√ª√Ø√®√±√†√´√®√±√º √®√ß √°√Æ√´√º√≠√®√∂√ª");
			if(pData[playerid][pSex] == 1) SetPlayerChatBubble(playerid, "√Ç√ª√Ø√®√±√†√≠", 0x00FF00FF, 4.0, 5000);
			else SetPlayerChatBubble(playerid, "√Ç√ª√Ø√®√±√†√≠√†", 0x00FF00FF, 4.0, 5000);
			UpdateKoykaSvobodin(playerid, GetPVarInt(playerid, "KoykoUsed"));
			pTemp[playerid][pInHospital] = false;
		}
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
		antiflood_move[playerid] = gettime() + 3;
	}
	else if(pickupid == bankls_enter) {
		load_mode(playerid);
		SetPlayerPos(playerid, 5.2137,153.1358,1243.1780);
		SetPlayerTime(playerid, 12, 0);
		SetPlayerWeather(playerid, 1);
		SetPlayerVirtualWorld(playerid, 1);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 0.0);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	else if(pickupid == bank_sf_enter) {
		load_mode(playerid);
		SetPlayerPos(playerid, 5.2137,153.1358,1243.1780);
		SetPlayerTime(playerid, 12, 0);
		SetPlayerWeather(playerid, 1);
		SetPlayerVirtualWorld(playerid, 2);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 0.0);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	else if(pickupid == bank_lv_enter) {
		load_mode(playerid);
		SetPlayerPos(playerid, 5.2137,153.1358,1243.1780);
		SetPlayerTime(playerid, 12, 0);
		SetPlayerWeather(playerid, 1);
		SetPlayerVirtualWorld(playerid, 3);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 0.0);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	else if(pickupid == bronik_cv) {
		if(!IsAArm(playerid)) return SCM(playerid, COLOR_GREY, "√Å√∞√†√≤√º √°√∞√Æ√≠√•√¶√®√´√•√≤√ª √¢ √Ω√≤√Æ√¨ √¨√•√±√≤√• √¨√Æ√£√≥√≤ √≤√Æ√´√º√™√Æ √¢√Æ√•√≠√≠√ª√•");
		SetPlayerArmour(playerid, 100);
		if(pData[playerid][pSex] == 1) SetPlayerChatBubble(playerid, "√Ç√ß√ø√´ √°√∞√Æ√≠√•√¶√®√´√•√≤", 0x00CC00FF, 4.0, 5000);
		else SetPlayerChatBubble(playerid, "√Ç√ß√ø√´√† √°√∞√Æ√≠√•√¶√®√´√•√≤", 0x00CC00FF, 4.0, 5000);
	}
	else if(pickupid == bronik_vvc) {
		if(!IsAArm(playerid)) return SCM(playerid, COLOR_GREY, "√Å√∞√†√≤√º √°√∞√Æ√≠√•√¶√®√´√•√≤√ª √¢ √Ω√≤√Æ√¨ √¨√•√±√≤√• √¨√Æ√£√≥√≤ √≤√Æ√´√º√™√Æ √¢√Æ√•√≠√≠√ª√•");
		SetPlayerArmour(playerid, 100);
		if(pData[playerid][pSex] == 1) SetPlayerChatBubble(playerid, "√Ç√ß√ø√´ √°√∞√Æ√≠√•√¶√®√´√•√≤", 0x00CC00FF, 4.0, 5000);
		else SetPlayerChatBubble(playerid, "√Ç√ß√ø√´√† √°√∞√Æ√≠√•√¶√®√´√•√≤", 0x00CC00FF, 4.0, 5000);
	}
	else if(pickupid == bronik_vmf) {
		if(!IsAArm(playerid)) return SCM(playerid, COLOR_GREY, "√Å√∞√†√≤√º √°√∞√Æ√≠√•√¶√®√´√•√≤√ª √¢ √Ω√≤√Æ√¨ √¨√•√±√≤√• √¨√Æ√£√≥√≤ √≤√Æ√´√º√™√Æ √¢√Æ√•√≠√≠√ª√•");
		SetPlayerArmour(playerid, 100);
		if(pData[playerid][pSex] == 1) SetPlayerChatBubble(playerid, "√Ç√ß√ø√´ √°√∞√Æ√≠√•√¶√®√´√•√≤", 0x00CC00FF, 4.0, 5000);
		else SetPlayerChatBubble(playerid, "√Ç√ß√ø√´√† √°√∞√Æ√≠√•√¶√®√´√•√≤", 0x00CC00FF, 4.0, 5000);
	}
	else if(pickupid == Pmine[0]) {
		if(pData[playerid][pLowSkill] == 1) {
			if(GetPVarInt(playerid, "InstMine")) return SCM(playerid, COLOR_LIGHTGREY, "√Ñ√´√ø √ß√†√¢√•√∞√∏√•√≠√®√ø √∞√†√°√Æ√≤√ª √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √±S√≠√≤√º √®√≠√±√≤√∞√≥√¨√•√≠√≤ √Æ√°√∞√†√≤√≠√Æ");
			SPD(playerid, 624, DIALOG_STYLE_MSGBOX, ""CERROR"√è√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√•", ""CWHITE"Quieres √ß√†√¢√•√∞√∏√®√≤√º √∞√†√°√Æ√≤√≥ √∏√†√µ√≤¬∏√∞√†?", "S√≠", "No");
		}
		else {
			if(pData[playerid][pHighSkill] == 1) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≥√¶√• √∞√†√°√Æ√≤√†√•√≤√• "CBLUE"√Ø√∞√Æ√¢√•√∞√•√≠√≠√ª√¨ "CLIGHTGREY"√∏√†√µ√≤¬∏√∞√Æ√¨. √ì√¢√Æ√´√º√≤√•√±√º, √∑√≤√Æ√°√ª √≥√±√≤√∞√Æ√®√≤√º√±√ø "CMAIN"√Æ√°√ª√∑√≠√ª√¨");
			SPD(playerid, 625, DIALOG_STYLE_MSGBOX, ""CPALEGREEN"√ì√±√≤√∞√Æ√©√±√≤√¢√Æ √≠√† √∞√†√°√Æ√≤√≥ √∏√†√µ√≤¬∏√∞√Æ√¨", ""CWHITE"Quieres √≥√±√≤√∞√Æ√®√≤√º√±√ø √≠√† √∞√†√°√Æ√≤√≥ √Æ√°√ª√∑√≠√ª√¨ √∏√†√µ√≤¬∏√∞√Æ√¨?", "S√≠", "No");
		}
	}
	else if(pickupid == Pmine[1]) {
		if(pData[playerid][pLowSkill] != 1) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √∏√†√µ√≤¬∏√∞. √ì√±√≤√∞√Æ√©√≤√•√±√º, √∑√≤√Æ√°√ª √¢√ß√ø√≤√º √®√≠√±√≤√∞√≥√¨√•√≠√≤");
		if(GetPVarInt(playerid, "InstMine")) {
			RemovePlayerAttachedObject(playerid, 0);
			SCM(playerid, COLOR_ERROR, "√Ç√ª √Ø√Æ√´√Æ√¶√®√´√® √®√≠√±√≤√∞√≥√¨√•√≠√≤");
			PlayerPlaySound(playerid, 6802, 0.0, 0.0, 0.0);
			DisablePlayerCheckpoint(playerid);
			SetPVarInt(playerid, "InstMine", false);
		}
		else {
			SetPlayerAttachedObject(playerid, 0, 18634, 6, 0.112000, 0.022000, 0.181000, 91.799827, -81.699905, 5.900005, 1.000000, 1.000000, 1.000000);
			switch(random(4)) {
				case 0: SetPlayerCheckpoint(playerid, -732.7345, -1816.6523, -39.0421-1.0, 2.0);
				case 1: SetPlayerCheckpoint(playerid, -727.9667, -1816.1974, -39.0421-1.0, 2.0);
				case 2: SetPlayerCheckpoint(playerid, -724.5775, -1815.4325, -39.0421-1.0, 2.0);
				case 3: SetPlayerCheckpoint(playerid, -724.8226, -1813.5508, -39.0421-1.0, 2.0);
			}
			SCM(playerid, -1, "√Ç√ª √¢√ß√ø√´√® √®√≠√±√≤√∞√≥√¨√•√≠√≤. √ë√´√•√§√≥√©√≤√• √™ "CCYAN"√¨√•√±√≤√Æ√∞√Æ√¶√§√•√≠√®√æ "CWHITE"√∞√≥√§√ª √§√´√ø √•¬∏ √§√Æ√°√ª√∑√®");
			PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
			SetPVarInt(playerid, "InstMine", true);
		}
	}
	else if(pickupid == Pmine[2]) {
		if(pData[playerid][pWorkSkill][0] < 6000) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√†√¨ √≠√•√§√Æ√±√≤√≥√Ø√≠√† S√≠√≠√≠√†√ø √∏√†√µ√≤√†. √ë√≤√†√≠√º√≤√• √Ø√∞√Æ√¢√•√∞√•√≠√≠√ª√¨ √∞√†√°√Æ√∑√®√¨ {FFCD00}(√Æ√≤√≠√•√±√®√≤√• √°√Æ√´√•√• 6000 √™√£)");
		if(pData[playerid][pHighSkill] == 1) {
			if(GetPVarInt(playerid, "InstMine")) return SCM(playerid, COLOR_LIGHTGREY, "√Ñ√´√ø √ß√†√¢√•√∞√∏√•√≠√®√ø √∞√†√°√Æ√≤√ª √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √±S√≠√≤√º √®√≠√±√≤√∞√≥√¨√•√≠√≤ √Æ√°√∞√†√≤√≠√Æ");
			SPD(playerid, 626, DIALOG_STYLE_MSGBOX, ""CERROR"√è√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√•", ""CWHITE"Quieres √ß√†√¢√•√∞√∏√®√≤√º √∞√†√°√Æ√≤√≥ √∏√†√µ√≤¬∏√∞√†?", "S√≠", "No");
		}
		else {
			if(pData[playerid][pLowSkill] == 1) return SCM(playerid, COLOR_GREY, "√Ç√ª √≥√¶√• √∞√†√°√Æ√≤√†√•√≤√• "CMAIN"√Æ√°√ª√∑√≠√ª√¨ "CLIGHTGREY"√∏√†√µ√≤¬∏√∞√Æ√¨. √ì√¢√Æ√´√º√≤√•√±√º, √∑√≤√Æ√°√ª √≥√±√≤√∞√Æ√®√≤√º√±√ø "CBLUE"√Ø√∞√Æ√¢√•√∞√•√≠√≠√ª√¨");
			SPD(playerid, 627, DIALOG_STYLE_MSGBOX, ""CPALEGREEN"√ì√±√≤√∞√Æ√©√±√≤√¢√Æ √≠√† √∞√†√°√Æ√≤√≥ √Ø√∞√Æ√¢√•√∞√•√≠√≠√ª√¨ √∏√†√µ√≤¬∏√∞√Æ√¨", ""CWHITE"Quieres √≥√±√≤√∞√Æ√®√≤√º√±√ø √≠√† √∞√†√°√Æ√≤√≥ √Ø√∞√Æ√¢√•√∞√•√≠√≠√ª√¨ √∏√†√µ√≤¬∏√∞√Æ√¨?", "S√≠", "No");
		}
	}
	else if(pickupid == Pmine[3]) {
		if(pData[playerid][pHighSkill] != 1) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √Ø√∞√Æ√¢√•√∞√•√≠√≠√ª√© √∏√†√µ√≤¬∏√∞. √ì√±√≤√∞√Æ√©√≤√•√±√º, √∑√≤√Æ√°√ª √¢√ß√ø√≤√º √®√≠√±√≤√∞√≥√¨√•√≠√≤");
		if(GetPVarInt(playerid, "InstMine")) {
			RemovePlayerAttachedObject(playerid, 0);
			SCM(playerid, COLOR_ERROR, "√Ç√ª √Ø√Æ√´√Æ√¶√®√´√® √®√≠√±√≤√∞√≥√¨√•√≠√≤");
			PlayerPlaySound(playerid, 6802, 0.0, 0.0, 0.0);
			DisablePlayerCheckpoint(playerid);
			SetPVarInt(playerid, "InstMine", false);
		}
		else {
			SetPlayerAttachedObject(playerid, 0, 18634, 6, 0.112000, 0.022000, 0.181000, 91.799827, -81.699905, 5.900005, 1.000000, 1.000000, 1.000000);
			switch(random(3)) {
				case 0: SetPlayerCheckpoint(playerid, -801.7944, -1794.7133, -89.0200-1.0, 2.0);
				case 1: SetPlayerCheckpoint(playerid, -799.5901, -1796.3623, -89.0200-1.0, 2.0);
				case 2: SetPlayerCheckpoint(playerid, -799.8171, -1798.7997, -89.0200-1.0, 2.0);
			}
			SCM(playerid, -1, "√Ç√ª √¢√ß√ø√´√® √®√≠√±√≤√∞√≥√¨√•√≠√≤. √ë√´√•√§√≥√©√≤√• √™ "CCYAN"√¨√•√±√≤√Æ√∞√Æ√¶√§√•√≠√®√æ "CWHITE"√∞√≥√§√ª √§√´√ø √•¬∏ √§√Æ√°√ª√∑√®");
			PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
			SetPVarInt(playerid, "InstMine", true);
		}
	}
	else if(pickupid == spmineone) // √¨√•√´√™√Æ√£√Æ √ß√†√´√Æ√¶√•√≠√®√ø
	{
		SetPlayerPos(playerid,-768.9981, -1785.9940, -39.0421);
		SetPlayerVirtualWorld(playerid, 1);
		SetPlayerInterior(playerid, 1);
	}
	else if(pickupid == spminetwo) // √£√´√≥√°√Æ√™√Æ√£√Æ √ß√†√´√Æ√¶√•√≠√®√ø
	{
		SetPlayerPos(playerid, -751.7194, -1779.4302, -89.0200);
		SetPlayerVirtualWorld(playerid, 1);
		SetPlayerInterior(playerid, 1);
	}
	else if(pickupid == cercov_enter) {
		load_mode(playerid);
		SetPlayerPos(playerid,2216.7886, -36.0060, 606.8281);
		SetPlayerFacingAngle(playerid, 270.6);
		SetCameraBehindPlayer(playerid);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 1);
		antiflood_move[playerid] = gettime() + 3;
	}
	else if(pickupid == cercov_exit) {
		SetPlayerPos(playerid, -1987.3282,1117.9648,54.2285);
		SetPlayerFacingAngle(playerid, 270.0);
		SetCameraBehindPlayer(playerid);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
		antiflood_move[playerid] = gettime() + 3;
	}
	else if(pickupid == helpmine) {
		SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{FFCD00}√à√≠√¥√Æ√∞√¨√†√∂√®√ø",
			""CWHITE"√ì √≠√†√± √®√¨√•√•√≤√±√ø 2 √∏√†√µ√≤√ª ‚Äî √£√´√≥√°√Æ√™√Æ√£√Æ √® √¨√•√´√™√Æ√£√Æ √ß√†√´√Æ√¶√•√≠√®√ø.\n\
			√ä √™√†√¶√§√Æ√© √∏√†√µ√≤√• √®√§√≥√≤ 2 √∏√†√µ√≤¬∏√∞√±√™√®√µ √´√®√¥√≤√†. √ë√Ø√≥√±√≤√®√¢√∏√®√±√º √¢ √∏√†√µ√≤√≥,\n\
			√Ç√ª √¨√Æ√¶√•√≤√• √¢√ß√ø√≤√º √®√≠√±√≤√∞√≥√¨√•√≠√≤ √§√´√ø √§√Æ√°√ª√∑√® √® √Ø√∞√®√±√≤√≥√Ø√®√≤√º √™ √∞√†√°√Æ√≤√•.\n\
			√ó√≤√Æ√°√ª √Ø√Æ√´√≥√∑√®√≤√º √§√Æ√±√≤√≥√Ø √™ √∏√†√µ√≤√• √£√´√≥√°√Æ√™√Æ√£√Æ √ß√†√´√Æ√¶√•√≠√®√ø, √Ç√†√¨\n\
			√≠√•√Æ√°√µ√Æ√§√®√¨√Æ √§√Æ√°√ª√≤√º "CCYAN"6000 √™√£ "CWHITE"√∞√≥√§√ª √≠√† √∏√†√µ√≤√• √¨√•√´√™√Æ√£√Æ √ß√†√´√Æ√¶√•√≠√®√ø.\n\
			√á√†√∞√Ø√´√†√≤√† √ß√†√¢√®√±√®√≤ √Æ√≤ √¨√†√±√±√ª √§√Æ√°√ª√≤√Æ√© √∞√≥√§√ª. √ç√† √∏√†√µ√≤√• √£√´√≥√°√Æ√™√Æ√£√Æ\n\
			√ß√†√´√Æ√¶√•√≠√®√ø √ß√†√∞√Ø√´√†√≤√† √°√Æ√´√º√∏√•, √¢ √±√¢√ø√ß√® √± √°√Æ√´√•√• √™√†√∑√•√±√≤√¢√•√≠√≠√Æ√© √∞√≥√§√Æ√©.",
		"Cerrar", "");
	}
	else if(pickupid == salonhelp) {
		SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CPALEGREEN"√ë√†√´√Æ√≠ √±√¢√ø√ß√®", 
			""CWHITE"√Ç√ª √≠√†√µ√Æ√§√®√≤√•√±√º √¢ √±√†√´√Æ√≠√• √¨√Æ√°√®√´√º√≠√Æ√© √±√¢√ø√ß√®. √á√§√•√±√º √Ç√ª √¨√Æ√¶√•√≤√•:\n\n\
			- √Æ√°√¨√•√≠√ø√≤√º√±√ø SIM-√™√†√∞√≤√†√¨√® √± √§√∞√≥√£√®√¨ √®√£√∞√Æ√™√Æ√¨ (√™√Æ√¨√†√≠S√≠ /tradesim)\n\
			- √Ø√∞√ÆS√≠√≤√º SIM-√™√†√∞√≤√≥ √§√∞√≥√£√Æ√¨√≥ √®√£√∞√Æ√™√≥ (√™√Æ√¨√†√≠S√≠ /sellsim)\n\
			- √Ø√Æ√Ø√Æ√´√≠√®√≤√º √±√∑¬∏√≤ √¨√Æ√°√®√´√º√≠√Æ√£√Æ √≤√•√´√•√¥√Æ√≠√†\n\
			- √Ø√Æ√¨√•√≠√ø√≤√º √∂√¢√•√≤ √±√¢√Æ√•√£√Æ √≤√•√´√•√¥√Æ√≠√†\n\
			- √™√≥√Ø√®√≤√º 6-√≤√® √ß√≠√†√∑√≠√ª√© √≠√Æ√¨√•√∞ √≤√•√´√•√¥√Æ√≠√†. √ë√≤√Æ√®√¨√Æ√±√≤√º: 300$", "Cerrar", "");
	}
	else if(pickupid == mineenter) {
		SetPlayerPos(playerid, -769.7730,-1792.7549,13.9054);
		SetPlayerFacingAngle(playerid, 0.0);
		SetPlayerVirtualWorld(playerid, 1);
		SetPlayerInterior(playerid, 1);
		SetCameraBehindPlayer(playerid);
		load_mode(playerid);
	}
	else if(pickupid == mineexit) {
		SetPlayerPos(playerid, -777.2842,-1856.8042,11.8699);
		SetPlayerFacingAngle(playerid, 200.0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
		SetCameraBehindPlayer(playerid);
	}
	else if(pickupid == salonenter) {
		load_mode(playerid);
		SetPlayerVirtualWorld(playerid, 32);
		SetPlayerInterior(playerid, 8);
		SetPlayerPos(playerid, 2342.5452,-800.0167,3001.0930);
		SetPlayerFacingAngle(playerid, 180.0);
		antiflood_move[playerid] = gettime() + 3;
		return 1;
	}
	else if(pickupid == salonexit) {
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid, 1379.9033,-1753.1613,14.1406);
		SetPlayerFacingAngle(playerid, 270.0);
		SetPlayerInterior(playerid, 0);
		antiflood_move[playerid] = gettime() + 3;
		return 1;
	}
	else if(pickupid == podnos_lvpd) {
		if(!IsACop(playerid)) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Ω√≤√Æ");
		if(GetPVarInt(playerid, "TrayInfo_Use")) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≥√¶√• √¢√ß√ø√´√® √Ø√Æ√§√≠√Æ√± √± √•√§√Æ√©");
		switch(random(4)) {
			case 0: {
				if(pData[playerid][pSex] == 1) MeAction(playerid, "√¢√ß√ø√´ √≤√†√∞√•√´√™√≥ √£√∞√•√∑√≠√•√¢√Æ√© √™√†√∏√® √® √™√Æ√¨√Ø√Æ√≤");
				else MeAction(playerid, "√¢√ß√ø√´√† √≤√†√∞√•√´√™√≥ √£√∞√•√∑√≠√•√¢√Æ√© √™√†√∏√® √® √™√Æ√¨√Ø√Æ√≤");
			}
			case 1: {
				if(pData[playerid][pSex] == 1) MeAction(playerid, "√¢√ß√ø√´ √°√≥√´√™√≥ √±√Æ √±√£√≥√π¬∏√≠√™√Æ√© √® √∑√†√©");
				else MeAction(playerid, "√¢√ß√ø√´√† √°√≥√´√™√≥ √±√Æ √±√£√≥√π¬∏√≠√™√Æ√© √® √∑√†√©");
			}
			case 2: {
				if(pData[playerid][pSex] == 1) MeAction(playerid, "√¢√ß√ø√´ √Ø√Æ√≠√∑√®√™ √± √±√†√µ√†√∞√≠√Æ√© √Ø√≥√§√∞√Æ√© √® √™√Æ√¥√•");
				else MeAction(playerid, "√¢√ß√ø√´√† √Ø√Æ√≠√∑√®√™ √± √±√†√µ√†√∞√≠√Æ√© √Ø√≥√§√∞√Æ√© √® √™√Æ√¥√•");
			}
			case 3: {
				if(pData[playerid][pSex] == 1) MeAction(playerid, "√¢√ß√ø√´ √∑√†√∏√™√≥ √¶√†√∞√•√≠√Æ√© √™√†√∞√≤√Æ√∏√™√® √® √™√®√±√•√´√º");
				else MeAction(playerid, "√¢√ß√ø√´√† √∑√†√∏√™√≥ √¶√†√∞√•√≠√Æ√© √™√†√∞√≤√Æ√∏√™√® √® √™√®√±√•√´√º");
			}
		}
		SetPVarInt(playerid,"TrayInfo_Use", true);
		SetPlayerSpecialAction(playerid, 25);
		SetPlayerAttachedObject(playerid, 0, 2355, 1, 0.096313, 0.334523, -0.267872, 109.200798, 122.924514, 313.923736, 1.025472, 1.000000, 1.000000);
		return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√• {6699ff}/eat {cecece}√∑√≤√Æ√°√ª √Ø√Æ√•√±√≤√º √®√´√® {6699ff}/put {cecece}√∑√≤√Æ√°√ª √Ø√Æ√´√Æ√¶√®√≤√º √Ø√Æ√§√≠√Æ√± √± √•√§√Æ√©");
	}
	else if(pickupid == podnos_sfpd) {
		if(!IsACop(playerid)) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Ω√≤√Æ");
		if(GetPVarInt(playerid, "TrayInfo_Use")) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≥√¶√• √¢√ß√ø√´√® √Ø√Æ√§√≠√Æ√± √± √•√§√Æ√©");
		switch(random(4)) {
			case 0: {
				if(pData[playerid][pSex] == 1) MeAction(playerid, "√¢√ß√ø√´ √≤√†√∞√•√´√™√≥ √£√∞√•√∑√≠√•√¢√Æ√© √™√†√∏√® √® √™√Æ√¨√Ø√Æ√≤");
				else MeAction(playerid, "√¢√ß√ø√´√† √≤√†√∞√•√´√™√≥ √£√∞√•√∑√≠√•√¢√Æ√© √™√†√∏√® √® √™√Æ√¨√Ø√Æ√≤");
			}
			case 1: {
				if(pData[playerid][pSex] == 1) MeAction(playerid, "√¢√ß√ø√´ √°√≥√´√™√≥ √±√Æ √±√£√≥√π¬∏√≠√™√Æ√© √® √∑√†√©");
				else MeAction(playerid, "√¢√ß√ø√´√† √°√≥√´√™√≥ √±√Æ √±√£√≥√π¬∏√≠√™√Æ√© √® √∑√†√©");
			}
			case 2: {
				if(pData[playerid][pSex] == 1) MeAction(playerid, "√¢√ß√ø√´ √Ø√Æ√≠√∑√®√™ √± √±√†√µ√†√∞√≠√Æ√© √Ø√≥√§√∞√Æ√© √® √™√Æ√¥√•");
				else MeAction(playerid, "√¢√ß√ø√´√† √Ø√Æ√≠√∑√®√™ √± √±√†√µ√†√∞√≠√Æ√© √Ø√≥√§√∞√Æ√© √® √™√Æ√¥√•");
			}
			case 3: {
				if(pData[playerid][pSex] == 1) MeAction(playerid, "√¢√ß√ø√´ √∑√†√∏√™√≥ √¶√†√∞√•√≠√Æ√© √™√†√∞√≤√Æ√∏√™√® √® √™√®√±√•√´√º");
				else MeAction(playerid, "√¢√ß√ø√´√† √∑√†√∏√™√≥ √¶√†√∞√•√≠√Æ√© √™√†√∞√≤√Æ√∏√™√® √® √™√®√±√•√´√º");
			}
		}
		SetPVarInt(playerid,"TrayInfo_Use", true);
		SetPlayerSpecialAction(playerid, 25);
		SetPlayerAttachedObject(playerid, 0, 2355, 1, 0.096313, 0.334523, -0.267872, 109.200798, 122.924514, 313.923736, 1.025472, 1.000000, 1.000000);
		return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√• {6699ff}/eat {cecece}√∑√≤√Æ√°√ª √Ø√Æ√•√±√≤√º √®√´√® {6699ff}/put {cecece}√∑√≤√Æ√°√ª √Ø√Æ√´√Æ√¶√®√≤√º √Ø√Æ√§√≠√Æ√± √± √•√§√Æ√©");
	}
	else if(pickupid == podnos_lspd) {
		if(!IsACop(playerid)) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Ω√≤√Æ");
		if(GetPVarInt(playerid, "TrayInfo_Use")) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≥√¶√• √¢√ß√ø√´√® √Ø√Æ√§√≠√Æ√± √± √•√§√Æ√©");
		switch(random(4)) {
			case 0: {
				if(pData[playerid][pSex] == 1) MeAction(playerid, "√¢√ß√ø√´ √≤√†√∞√•√´√™√≥ √£√∞√•√∑√≠√•√¢√Æ√© √™√†√∏√® √® √™√Æ√¨√Ø√Æ√≤");
				else MeAction(playerid, "√¢√ß√ø√´√† √≤√†√∞√•√´√™√≥ √£√∞√•√∑√≠√•√¢√Æ√© √™√†√∏√® √® √™√Æ√¨√Ø√Æ√≤");
			}
			case 1: {
				if(pData[playerid][pSex] == 1) MeAction(playerid, "√¢√ß√ø√´ √°√≥√´√™√≥ √±√Æ √±√£√≥√π¬∏√≠√™√Æ√© √® √∑√†√©");
				else MeAction(playerid, "√¢√ß√ø√´√† √°√≥√´√™√≥ √±√Æ √±√£√≥√π¬∏√≠√™√Æ√© √® √∑√†√©");
			}
			case 2: {
				if(pData[playerid][pSex] == 1) MeAction(playerid, "√¢√ß√ø√´ √Ø√Æ√≠√∑√®√™ √± √±√†√µ√†√∞√≠√Æ√© √Ø√≥√§√∞√Æ√© √® √™√Æ√¥√•");
				else MeAction(playerid, "√¢√ß√ø√´√† √Ø√Æ√≠√∑√®√™ √± √±√†√µ√†√∞√≠√Æ√© √Ø√≥√§√∞√Æ√© √® √™√Æ√¥√•");
			}
			case 3: {
				if(pData[playerid][pSex] == 1) MeAction(playerid, "√¢√ß√ø√´ √∑√†√∏√™√≥ √¶√†√∞√•√≠√Æ√© √™√†√∞√≤√Æ√∏√™√® √® √™√®√±√•√´√º");
				else MeAction(playerid, "√¢√ß√ø√´√† √∑√†√∏√™√≥ √¶√†√∞√•√≠√Æ√© √™√†√∞√≤√Æ√∏√™√® √® √™√®√±√•√´√º");
			}
		}
		SetPVarInt(playerid,"TrayInfo_Use", true);
		SetPlayerSpecialAction(playerid, 25);
		SetPlayerAttachedObject(playerid, 0, 2355, 1, 0.096313, 0.334523, -0.267872, 109.200798, 122.924514, 313.923736, 1.025472, 1.000000, 1.000000);
		return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√• {6699ff}/eat {cecece}√∑√≤√Æ√°√ª √Ø√Æ√•√±√≤√º √®√´√® {6699ff}/put {cecece}√∑√≤√Æ√°√ª √Ø√Æ√´√Æ√¶√®√≤√º √Ø√Æ√§√≠√Æ√± √± √•√§√Æ√©");
	}
	else if(pickupid == podnos_fbi) {
		if(!IsACop(playerid)) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Ω√≤√Æ");
		if(GetPVarInt(playerid, "TrayInfo_Use")) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≥√¶√• √¢√ß√ø√´√® √Ø√Æ√§√≠√Æ√± √± √•√§√Æ√©");
		switch(random(4)) {
			case 0: {
				if(pData[playerid][pSex] == 1) MeAction(playerid, "√¢√ß√ø√´ √≤√†√∞√•√´√™√≥ √£√∞√•√∑√≠√•√¢√Æ√© √™√†√∏√® √® √™√Æ√¨√Ø√Æ√≤");
				else MeAction(playerid, "√¢√ß√ø√´√† √≤√†√∞√•√´√™√≥ √£√∞√•√∑√≠√•√¢√Æ√© √™√†√∏√® √® √™√Æ√¨√Ø√Æ√≤");
			}
			case 1: {
				if(pData[playerid][pSex] == 1) MeAction(playerid, "√¢√ß√ø√´ √°√≥√´√™√≥ √±√Æ √±√£√≥√π¬∏√≠√™√Æ√© √® √∑√†√©");
				else MeAction(playerid, "√¢√ß√ø√´√† √°√≥√´√™√≥ √±√Æ √±√£√≥√π¬∏√≠√™√Æ√© √® √∑√†√©");
			}
			case 2: {
				if(pData[playerid][pSex] == 1) MeAction(playerid, "√¢√ß√ø√´ √Ø√Æ√≠√∑√®√™ √± √±√†√µ√†√∞√≠√Æ√© √Ø√≥√§√∞√Æ√© √® √™√Æ√¥√•");
				else MeAction(playerid, "√¢√ß√ø√´√† √Ø√Æ√≠√∑√®√™ √± √±√†√µ√†√∞√≠√Æ√© √Ø√≥√§√∞√Æ√© √® √™√Æ√¥√•");
			}
			case 3: {
				if(pData[playerid][pSex] == 1) MeAction(playerid, "√¢√ß√ø√´ √∑√†√∏√™√≥ √¶√†√∞√•√≠√Æ√© √™√†√∞√≤√Æ√∏√™√® √® √™√®√±√•√´√º");
				else MeAction(playerid, "√¢√ß√ø√´√† √∑√†√∏√™√≥ √¶√†√∞√•√≠√Æ√© √™√†√∞√≤√Æ√∏√™√® √® √™√®√±√•√´√º");
			}
		}
		SetPVarInt(playerid,"TrayInfo_Use", true);
		SetPlayerSpecialAction(playerid, 25);
		SetPlayerAttachedObject(playerid, 0, 2355, 1, 0.096313, 0.334523, -0.267872, 109.200798, 122.924514, 313.923736, 1.025472, 1.000000, 1.000000);
		return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√• {6699ff}/eat {cecece}√∑√≤√Æ√°√ª √Ø√Æ√•√±√≤√º √®√´√® {6699ff}/put {cecece}√∑√≤√Æ√°√ª √Ø√Æ√´√Æ√¶√®√≤√º √Ø√Æ√§√≠√Æ√± √± √•√§√Æ√©");
	}
	else if(pickupid == motobuy_p) {
		if(pData[playerid][have_garage] == -1 && pData[playerid][pHouse] == -1 && pData[playerid][pHotel] == -1 && pData[playerid][pFlat] == -1) 
			return SCM(playerid, COLOR_GREY, "√Ñ√´√ø √Ø√Æ√™√≥√Ø√™√® √≤√∞√†√≠√±√Ø√Æ√∞√≤√† √≥ √Ç√†√± √§√Æ√´√¶√•√≠ √°√ª√≤√º √£√†√∞√†√¶, √§√Æ√¨, √™√¢√†√∞√≤√®√∞√† √®√´√® √≠√Æ√¨√•√∞ √¢ √Æ√≤√•√´√•");
		SPD(playerid, 4849, DIALOG_STYLE_TABLIST_HEADERS, "{005b96}√å√Æ√≤√Æ√±√†√´√Æ√≠", 
			"{ff9945}√å√Æ√§√•√´√º\t\t{ff9945}√ñ√•√≠√†\n\
			"CWHITE"BMX\t2.000$\n\
			Bike\t2.100$\n\
			Mountain Bike\t5.000$\n\
			Faggio\t10.000$\n\
			PCJ-600\t120.000$\n\
			FCR-900\t150.000$\n\
			Freeway\t100.000$\n\
			Wayfarer\t30.000$\n\
			Quad\t50.000$\n\
			Sanchez\t80.000$\n\
			NRG-500\t2.500.000$", 
		"Seleccione", "Cerrar");
	}
	else if(pickupid == autolsbuy_p) {
		if(pData[playerid][have_garage] == -1 && pData[playerid][pHouse] == -1 && pData[playerid][pHotel] == -1 && pData[playerid][pFlat] == -1) 
			return SCM(playerid, COLOR_GREY, "√Ñ√´√ø √Ø√Æ√™√≥√Ø√™√® √≤√∞√†√≠√±√Ø√Æ√∞√≤√† √≥ √Ç√†√± √§√Æ√´√¶√•√≠ √°√ª√≤√º √£√†√∞√†√¶, √§√Æ√¨, √™√¢√†√∞√≤√®√∞√† √®√´√® √≠√Æ√¨√•√∞ √¢ √Æ√≤√•√´√•");
		SPD(playerid, 4848, DIALOG_STYLE_TABLIST_HEADERS, "{005b96}√Ä√¢√≤√Æ√±√†√´√Æ√≠ √ã√Æ√±-√ë√†√≠√≤√Æ√±√†", 
			"{ff9945}√å√Æ√§√•√´√º\t\t{ff9945}√ñ√•√≠√†\n\
			"CWHITE"Esperanto\t90.000$\n\
			Perenniel\t19.000$\n\
			Bravura\t30.000$\n\
			Manana\t25.000$\n\
			Voodoo\t100.000$\n\
			Pony\t115.000$\n\
			Bobcat\t36.000$\n\
			Stallion\t25.000$\n\
			Oceanic\t28.000$\n\
			Glendale\t34.000$\n\
			Hermes\t39.000$\n\
			Regina\t28.000$\n\
			Greenwood\t30.000$\n\
			Virgo\t38.000$\n\
			Majestic\t19.000$\n\
			Buccaneer\t40.000$\n\
			Clover\t15.000$\n\
			Sadler\t15.000$\n\
			Hustler\t20.000$\n\
			Tampa\t33.000$\n\
			Broadway\t35.000$\n\
			Tornado\t33.000$\n\
			Picador\t25.000$\n\
			Emperor\t30.000$", 
		"Seleccione", "Cerrar");
	}
	else if(pickupid == autosfbuy_p) {
		if(pData[playerid][have_garage] == -1 && pData[playerid][pHouse] == -1 && pData[playerid][pHotel] == -1 && pData[playerid][pFlat] == -1) 
			return SCM(playerid, COLOR_GREY, "√Ñ√´√ø √Ø√Æ√™√≥√Ø√™√® √≤√∞√†√≠√±√Ø√Æ√∞√≤√† √≥ √Ç√†√± √§√Æ√´√¶√•√≠ √°√ª√≤√º √£√†√∞√†√¶, √§√Æ√¨, √™√¢√†√∞√≤√®√∞√† √®√´√® √≠√Æ√¨√•√∞ √¢ √Æ√≤√•√´√•");
		SPD(playerid, 4850, DIALOG_STYLE_TABLIST_HEADERS, "{005b96}√Ä√¢√≤√Æ√±√†√´√Æ√≠ √ë√†√≠-√î√®√•√∞√∞√Æ", 
			"{ff9945}√å√Æ√§√•√´√º\t\t{ff9945}√ñ√•√≠√†\n\
			"CWHITE"Phoenix\t300.000$\n\
			Huntley\t205.000$\n\
			Club\t200.000$\n\
			Stafford\t250.000$\n\
			Savanna\t150.000$\n\
			Tahoma\t150.000$\n\
			Stratum\t120.000$\n\
			Uranus\t160.000$\n\
			Windsor\t120.000$\n\
			Yosemite\t165.000$\n\
			Merit\t130.000$\n\
			Remington\t200.000$\n\
			Cadrona\t100.000$\n\
			Slamvan\t18.000$\n\
			Elegant\t140.000$\n\
			Rancher\t180.000$\n\
			Fortune\t150.000$\n\
			Feltzer\t150.000$\n\
			Mesa\t120.000$\n\
			Blista Compact\t120.000$\n\
			Sabre\t40.000$\n\
			Admiral\t100.000$\n\
			Premier\t150.000$\n\
			Washington\t190.000$\n\
			Sentinel\t160.000$\n\
			Landstalker\t150.000$", 
		"Seleccione", "Cerrar");
	}
	else if(pickupid == autolvbuy_p) {
		if(pData[playerid][have_garage] == -1 && pData[playerid][pHouse] == -1 && pData[playerid][pHotel] == -1 && pData[playerid][pFlat] == -1) 
			return SCM(playerid, COLOR_GREY, "√Ñ√´√ø √Ø√Æ√™√≥√Ø√™√® √≤√∞√†√≠√±√Ø√Æ√∞√≤√† √≥ √Ç√†√± √§√Æ√´√¶√•√≠ √°√ª√≤√º √£√†√∞√†√¶, √§√Æ√¨, √™√¢√†√∞√≤√®√∞√† √®√´√® √≠√Æ√¨√•√∞ √¢ √Æ√≤√•√´√•");
		SPD(playerid, 4855, DIALOG_STYLE_TABLIST_HEADERS, "{005b96}√Ä√¢√≤√Æ√±√†√´√Æ√≠ √ã√†√±-√Ç√•√≠√≤√≥√∞√†√±√†", 
			"{ff9945}√å√Æ√§√•√´√º\t\t{ff9945}√ñ√•√≠√†\n\
			"CWHITE"Alpha\t395.000$\n\
			Euros\t450.000$\n\
			Jester\t540.000$\n\
			Sultan\t570.000$\n\
			Elegy\t400.000$\n\
			Bullet\t1.100.000$\n\
			Super GT\t700.000$\n\
			Comet\t555.000$\n\
			Hotknife\t1.300.000$\n\
			ZR-350\t810.000$\n\
			Hotring Racer\t950.000$\n\
			Hotring Racer A\t950.000$\n\
			Hotring Racer B\t950.000$\n\
			Cheetah\t1.600.000$\n\
			Banshee\t900.000$\n\
			Buffalo\t900.000$\n\
			Turismo\t2.000.000$\n\
			Infernus\t5.000.000$", 
		"Seleccione", "Cerrar");
	}
	else if(pickupid == mvd_ammos) {
		if(!IsACop(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √±√Æ√±√≤√Æ√®√≤√• √¢ √å√Ç√Ñ");
		return SPD(playerid, 454, DIALOG_STYLE_TABLIST_HEADERS, "{40bf40}√é√∞√≥√¶√•√©√≠√†√ø", 
			"√ç√Æ√¨√•√∞\t√é√∞√≥√¶√®√•\t\t√è√†√≤√∞√Æ√≠√ª\n\
			"CWHITE"1\t\t{cccc66}√Ñ√≥√°√®√≠√™√†\t\t\t"CLITEBLUE"‚Äî\n\
			"CWHITE"2\t\t{cccc66}√Å√∞√Æ√≠√•√¶√®√´√•√≤\t\t"CLITEBLUE"‚Äî\n\
			"CWHITE"3\t\t{cccc66}SD pistol\t\t"CLITEBLUE"40\n\
			"CWHITE"4\t\t{cccc66}Desert Eagle\t"CLITEBLUE"40\n\
			"CWHITE"5\t\t{cccc66}Shotgun\t\t"CLITEBLUE"40\n\
			"CWHITE"6\t\t{cccc66}MP5\t\t\t"CLITEBLUE"60\n\
			"CWHITE"7\t\t{cccc66}AK47\t\t\t"CLITEBLUE"60\n\
			"CWHITE"8\t\t{cccc66}M4\t\t\t"CLITEBLUE"60\n\
			"CWHITE"9\t\t{cccc66}√ô√®√≤\t\t\t"CLITEBLUE"‚Äî\n\
			"CWHITE"10\t\t{cccc66}√å√†√±√™√†\t\t"CLITEBLUE"1 √∏√≤.",
		"√Ç√ß√ø√≤√º", "Cerrar");
	}
	else if(pickupid == gover_ammos) {
		if(!IsAGover(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √∞√†√°√Æ√≤√†√•√≤√• √¢ √Ä√§√¨√®√≠√®√±√≤√∞√†√∂√®√® √è√∞√•√ß√®√§√•√≠√≤√†");
		return SPD(playerid, 454, DIALOG_STYLE_TABLIST_HEADERS, "{40bf40}√é√∞√≥√¶√•√©√≠√†√ø", 
			"√ç√Æ√¨√•√∞\t√é√∞√≥√¶√®√•\t\t√è√†√≤√∞√Æ√≠√ª\n\
			"CWHITE"1\t\t{cccc66}√Ñ√≥√°√®√≠√™√†\t\t\t"CLITEBLUE"‚Äî\n\
			"CWHITE"2\t\t{cccc66}√Å√∞√Æ√≠√•√¶√®√´√•√≤\t\t"CLITEBLUE"‚Äî\n\
			"CWHITE"3\t\t{cccc66}SD pistol\t\t"CLITEBLUE"40\n\
			"CWHITE"4\t\t{cccc66}Desert Eagle\t"CLITEBLUE"40\n\
			"CWHITE"5\t\t{cccc66}Shotgun\t\t"CLITEBLUE"40\n\
			"CWHITE"6\t\t{cccc66}MP5\t\t\t"CLITEBLUE"60\n\
			"CWHITE"7\t\t{cccc66}AK47\t\t\t"CLITEBLUE"60\n\
			"CWHITE"8\t\t{cccc66}M4\t\t\t"CLITEBLUE"60\n\
			"CWHITE"9\t\t{cccc66}√ô√®√≤\t\t\t"CLITEBLUE"‚Äî\n\
			"CWHITE"10\t\t{cccc66}√å√†√±√™√†\t\t"CLITEBLUE"1 √∏√≤.",
		"√Ç√ß√ø√≤√º", "Cerrar");
	}
	else if(pickupid == lspd_ammos) {
		if(pData[playerid][pMember] != 1) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √±√Æ√±√≤√Æ√®√≤√• √¢ LSPD");
		return SPD(playerid, 454, DIALOG_STYLE_TABLIST_HEADERS, "{40bf40}√é√∞√≥√¶√•√©√≠√†√ø", 
			"√ç√Æ√¨√•√∞\t√é√∞√≥√¶√®√•\t\t√è√†√≤√∞√Æ√≠√ª\n\
			"CWHITE"1\t\t{cccc66}√Ñ√≥√°√®√≠√™√†\t\t\t"CLITEBLUE"‚Äî\n\
			"CWHITE"2\t\t{cccc66}√Å√∞√Æ√≠√•√¶√®√´√•√≤\t\t"CLITEBLUE"‚Äî\n\
			"CWHITE"3\t\t{cccc66}SD pistol\t\t"CLITEBLUE"40\n\
			"CWHITE"4\t\t{cccc66}Desert Eagle\t"CLITEBLUE"40\n\
			"CWHITE"5\t\t{cccc66}Shotgun\t\t"CLITEBLUE"40\n\
			"CWHITE"6\t\t{cccc66}MP5\t\t\t"CLITEBLUE"60\n\
			"CWHITE"7\t\t{cccc66}AK47\t\t\t"CLITEBLUE"60\n\
			"CWHITE"8\t\t{cccc66}M4\t\t\t"CLITEBLUE"60\n\
			"CWHITE"9\t\t{cccc66}√ô√®√≤\t\t\t"CLITEBLUE"‚Äî\n\
			"CWHITE"10\t\t{cccc66}√å√†√±√™√†\t\t"CLITEBLUE"1 √∏√≤.",
		"√Ç√ß√ø√≤√º", "Cerrar");
	}
	else if(pickupid == sfpd_ammos) {
		if(pData[playerid][pMember] != 10) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √±√Æ√±√≤√Æ√®√≤√• √¢ SFPD");
		return SPD(playerid, 454, DIALOG_STYLE_TABLIST_HEADERS, "{40bf40}√é√∞√≥√¶√•√©√≠√†√ø", 
			"√ç√Æ√¨√•√∞\t√é√∞√≥√¶√®√•\t\t√è√†√≤√∞√Æ√≠√ª\n\
			"CWHITE"1\t\t{cccc66}√Ñ√≥√°√®√≠√™√†\t\t\t"CLITEBLUE"‚Äî\n\
			"CWHITE"2\t\t{cccc66}√Å√∞√Æ√≠√•√¶√®√´√•√≤\t\t"CLITEBLUE"‚Äî\n\
			"CWHITE"3\t\t{cccc66}SD pistol\t\t"CLITEBLUE"40\n\
			"CWHITE"4\t\t{cccc66}Desert Eagle\t"CLITEBLUE"40\n\
			"CWHITE"5\t\t{cccc66}Shotgun\t\t"CLITEBLUE"40\n\
			"CWHITE"6\t\t{cccc66}MP5\t\t\t"CLITEBLUE"60\n\
			"CWHITE"7\t\t{cccc66}AK47\t\t\t"CLITEBLUE"60\n\
			"CWHITE"8\t\t{cccc66}M4\t\t\t"CLITEBLUE"60\n\
			"CWHITE"9\t\t{cccc66}√ô√®√≤\t\t\t"CLITEBLUE"‚Äî\n\
			"CWHITE"10\t\t{cccc66}√å√†√±√™√†\t\t"CLITEBLUE"1 √∏√≤.",
		"√Ç√ß√ø√≤√º", "Cerrar");
	}
	else if(pickupid == lvpd_ammos) {
		if(pData[playerid][pMember] != 21) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √±√Æ√±√≤√Æ√®√≤√• √¢ LVPD");
		return SPD(playerid, 454, DIALOG_STYLE_TABLIST_HEADERS, "{40bf40}√é√∞√≥√¶√•√©√≠√†√ø", 
			"√ç√Æ√¨√•√∞\t√é√∞√≥√¶√®√•\t\t√è√†√≤√∞√Æ√≠√ª\n\
			"CWHITE"1\t\t{cccc66}√Ñ√≥√°√®√≠√™√†\t\t\t"CLITEBLUE"‚Äî\n\
			"CWHITE"2\t\t{cccc66}√Å√∞√Æ√≠√•√¶√®√´√•√≤\t\t"CLITEBLUE"‚Äî\n\
			"CWHITE"3\t\t{cccc66}SD pistol\t\t"CLITEBLUE"40\n\
			"CWHITE"4\t\t{cccc66}Desert Eagle\t"CLITEBLUE"40\n\
			"CWHITE"5\t\t{cccc66}Shotgun\t\t"CLITEBLUE"40\n\
			"CWHITE"6\t\t{cccc66}MP5\t\t\t"CLITEBLUE"60\n\
			"CWHITE"7\t\t{cccc66}AK47\t\t\t"CLITEBLUE"60\n\
			"CWHITE"8\t\t{cccc66}M4\t\t\t"CLITEBLUE"60\n\
			"CWHITE"9\t\t{cccc66}√ô√®√≤\t\t\t"CLITEBLUE"‚Äî\n\
			"CWHITE"10\t\t{cccc66}√å√†√±√™√†\t\t"CLITEBLUE"1 √∏√≤.",
		"√Ç√ß√ø√≤√º", "Cerrar");
	}
	else if(pickupid == fbi_ammos) {
		if(pData[playerid][pMember] != 2) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √±√Æ√±√≤√Æ√®√≤√• √¢ FBI");
		return SPD(playerid, 454, DIALOG_STYLE_TABLIST_HEADERS, "{40bf40}√é√∞√≥√¶√•√©√≠√†√ø", 
			"√ç√Æ√¨√•√∞\t√é√∞√≥√¶√®√•\t\t√è√†√≤√∞√Æ√≠√ª\n\
			"CWHITE"1\t\t{cccc66}√Ñ√≥√°√®√≠√™√†\t\t\t"CLITEBLUE"‚Äî\n\
			"CWHITE"2\t\t{cccc66}√Å√∞√Æ√≠√•√¶√®√´√•√≤\t\t"CLITEBLUE"‚Äî\n\
			"CWHITE"3\t\t{cccc66}SD pistol\t\t"CLITEBLUE"40\n\
			"CWHITE"4\t\t{cccc66}Desert Eagle\t"CLITEBLUE"40\n\
			"CWHITE"5\t\t{cccc66}Shotgun\t\t"CLITEBLUE"40\n\
			"CWHITE"6\t\t{cccc66}MP5\t\t\t"CLITEBLUE"60\n\
			"CWHITE"7\t\t{cccc66}AK47\t\t\t"CLITEBLUE"60\n\
			"CWHITE"8\t\t{cccc66}M4\t\t\t"CLITEBLUE"60\n\
			"CWHITE"9\t\t{cccc66}√ô√®√≤\t\t\t"CLITEBLUE"‚Äî\n\
			"CWHITE"10\t\t{cccc66}√å√†√±√™√†\t\t"CLITEBLUE"1 √∏√≤.",
		"√Ç√ß√ø√≤√º", "Cerrar");
	}
	else if(pickupid == pickup_meria_gunses || pickupid == pickup_meria_gunses + 1 || pickupid == pickup_meria_gunses + 2) {
		if(GetPlayerVirtualWorld(playerid) == 1 && pData[playerid][pMember] != 7) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √∞√†√°√Æ√≤√†√•√≤√• √¢ √Ω√≤√Æ√© √¨√Ω√∞√®√®");
		if(GetPlayerVirtualWorld(playerid) == 2 && pData[playerid][pMember] != 9) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √∞√†√°√Æ√≤√†√•√≤√• √¢ √Ω√≤√Æ√© √¨√Ω√∞√®√®");
		if(GetPlayerVirtualWorld(playerid) == 3 && pData[playerid][pMember] != 8) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √∞√†√°√Æ√≤√†√•√≤√• √¢ √Ω√≤√Æ√© √¨√Ω√∞√®√®");
		if(GetPlayerVirtualWorld(playerid) != 1 && GetPlayerVirtualWorld(playerid) != 2 && GetPlayerVirtualWorld(playerid) != 3) 
			return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [053]");
		return SPD(playerid, 454, DIALOG_STYLE_TABLIST_HEADERS, "{40bf40}√é√∞√≥√¶√•√©√≠√†√ø", 
			"√ç√Æ√¨√•√∞\t√é√∞√≥√¶√®√•\t\t√è√†√≤√∞√Æ√≠√ª\n\
			"CWHITE"1\t\t{cccc66}√Ñ√≥√°√®√≠√™√†\t\t\t"CLITEBLUE"‚Äî\n\
			"CWHITE"2\t\t{cccc66}√Å√∞√Æ√≠√•√¶√®√´√•√≤\t\t"CLITEBLUE"‚Äî\n\
			"CWHITE"3\t\t{cccc66}SD pistol\t\t"CLITEBLUE"40\n\
			"CWHITE"4\t\t{cccc66}Desert Eagle\t"CLITEBLUE"40\n\
			"CWHITE"5\t\t{cccc66}Shotgun\t\t"CLITEBLUE"40\n\
			"CWHITE"6\t\t{cccc66}MP5\t\t\t"CLITEBLUE"60\n\
			"CWHITE"7\t\t{cccc66}AK47\t\t\t"CLITEBLUE"60\n\
			"CWHITE"8\t\t{cccc66}M4\t\t\t"CLITEBLUE"60\n\
			"CWHITE"9\t\t{cccc66}√ô√®√≤\t\t\t"CLITEBLUE"‚Äî\n\
			"CWHITE"10\t\t{cccc66}√å√†√±√™√†\t\t"CLITEBLUE"1 √∏√≤.",
		"√Ç√ß√ø√≤√º", "Cerrar");
	}

	else if(pickupid == fam_pick || pickupid == fam_pick + 1 || pickupid == fam_pick + 2) {
		if(pData[playerid][familyID] != -1) 
			return callcmd::family(playerid);
		return SPD(playerid,414,DIALOG_STYLE_LIST,"{FFCD00}√ë√•√¨√º√®","[1] √à√≠√¥√Æ√∞√¨√†√∂√®√ø\n[2] √ë√Æ√ßS√≠√≤√º √±√•√¨√º√æ","Seleccione","Cerrar");
	}
	else if(pickupid == medpic[0]) // √°√Æ√´√º√≠√®√∂√† √¢√µ√Æ√§
	{
		SetPlayerInterior(playerid, 1);
		load_mode(playerid);
		SetPlayerPos(playerid,1482.8531,-1767.2990,2982.6953);
		SetPlayerFacingAngle(playerid, 180.0);
		SetPlayerVirtualWorld(playerid, 1);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	else if(pickupid == medpic[1]) // √°√Æ√´√º√≠√®√∂√† √¢√ª√µ√Æ√§
	{
		new Float: hp_pl; GetPlayerHealth(playerid, hp_pl);
		if(hp_pl < 60.0) return SCM(playerid, -1, "√å√•√§√Ø√•√∞√±√Æ√≠√†√´ √≠√• √¨√Æ√¶√•√≤ √Æ√≤√Ø√≥√±√≤√®√≤√º √Ç√†√± √¢ √≤√†√™√Æ√¨ √±√Æ√±√≤√Æ√ø√≠√®√®. √é√≤√Ø√∞√†√¢√´√ø√©√≤√•√±√º √≠√† √´√•√∑√•√≠√®√•");
		SetPlayerPos(playerid,1176.7679,-1323.6791,14.0374);
		if(pTemp[playerid][pInHospital]) {
			SCM(playerid, -1, "√Ç√ª √¢√ª√Ø√®√±√†√´√®√±√º √®√ß √°√Æ√´√º√≠√®√∂√ª");
			if(pData[playerid][pSex] == 1) SetPlayerChatBubble(playerid, "√Ç√ª√Ø√®√±√†√≠", 0x00FF00FF, 4.0, 5000);
			else SetPlayerChatBubble(playerid, "√Ç√ª√Ø√®√±√†√≠√†", 0x00FF00FF, 4.0, 5000);
			UpdateKoykaSvobodin(playerid, GetPVarInt(playerid, "KoykoUsed"));
			pTemp[playerid][pInHospital] = false;
		}
		SetPlayerFacingAngle(playerid, 271.3294);
		SetCameraBehindPlayer(playerid);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
		return antiflood_move[playerid] = gettime() + 3;
	}
	else if(pickupid == sv_kazarma) {
		if(!IsAArm(playerid)) return SCM(playerid, COLOR_ERROR, "√Ç√µ√Æ√§√®√≤√º √±√æS√≠ √¨√Æ√£√≥√≤ √≤√Æ√´√º√™√Æ √¢√Æ√•√≠√≠√ª√•");
		load_mode(playerid);
		SetPlayerPos(playerid,2599.6230,-1280.4454,1008.1899);
		SetPlayerFacingAngle(playerid, 180.0);
		SetCameraBehindPlayer(playerid);
		SetPlayerVirtualWorld(playerid, 1);
		SetPlayerInterior(playerid, 2);
		antiflood_move[playerid] = gettime() + 3;
		return 1;
	}
	else if(pickupid == vvc_kazarma) {
		if(!IsAArm(playerid)) return SCM(playerid, COLOR_ERROR, "√Ç√µ√Æ√§√®√≤√º √±√æS√≠ √¨√Æ√£√≥√≤ √≤√Æ√´√º√™√Æ √¢√Æ√•√≠√≠√ª√•");
		load_mode(playerid);
		SetPlayerPos(playerid,2599.6230,-1280.4454,1008.1899);
		SetPlayerFacingAngle(playerid, 180.0);
		SetCameraBehindPlayer(playerid);
		SetPlayerVirtualWorld(playerid, 2);
		SetPlayerInterior(playerid, 2);
		antiflood_move[playerid] = gettime() + 3;
		return 1;
	}
	else if(pickupid == vmf_kazarma) {
		if(!IsAArm(playerid)) return SCM(playerid, COLOR_ERROR, "√Ç√µ√Æ√§√®√≤√º √±√æS√≠ √¨√Æ√£√≥√≤ √≤√Æ√´√º√™√Æ √¢√Æ√•√≠√≠√ª√•");
		load_mode(playerid);
		SetPlayerPos(playerid,2599.6230,-1280.4454,1008.1899);
		SetPlayerVirtualWorld(playerid, 3);
		SetPlayerFacingAngle(playerid, 180.0);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, 2);
		antiflood_move[playerid] = gettime() + 3;
		return 1;
	}
	else if(pickupid == fbidoor[0]) {
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,-2453.0078,503.5850,30.0811);
		SetPlayerFacingAngle(playerid, 180.0);
		SetCameraBehindPlayer(playerid);
	}
	else if(pickupid == fbidoor[1]) //fbi √¢√µ√Æ√§
	{
		SetPlayerInterior(playerid, 1);
		SetPlayerPos(playerid,834.1067,-1048.5062,2101.0859);
		SetPlayerFacingAngle(playerid, 180.0);
		load_mode(playerid);
		return 1;
	}
	else if(pickupid == lspd[0]) //LSPD √¢√µ√Æ√§ √¢ √£√Æ√∞√Æ√§√•
	{
		load_mode(playerid);
		SetPlayerInterior(playerid,1);
		SetPlayerVirtualWorld(playerid,1);
		SetPlayerPos(playerid,-1495.1744,-1191.5052,1300.9893);
		SetPlayerFacingAngle(playerid,136.47);
		return 1;
	}
	else if(pickupid == lspd[1])///LSPD √¢√ª√µ√Æ√§ √¢ √£√Æ√∞√Æ√§√•
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,1547.14,-1675.85,13.95);
		SetPlayerFacingAngle(playerid, 91.8310);
		SetPlayerVirtualWorld(playerid, 0);
		return 1;
	}
	else if(pickupid == sf[2])//
	{
		load_mode(playerid);
		SetPlayerInterior(playerid,1);
		SetPlayerVirtualWorld(playerid,2);
		SetPlayerPos(playerid,-1494.7655,-1214.7107,1300.9688);
		SetPlayerFacingAngle(playerid, 0);
		return 1;
	}
	else if(pickupid == sfpd_enter) {
		load_mode(playerid);
		SetPlayerInterior(playerid,1);
		SetPlayerVirtualWorld(playerid, 2);
		SetPlayerPos(playerid,-1495.1744,-1191.5052,1300.9893);
		SetPlayerFacingAngle(playerid, 136.47);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
	}
	else if(pickupid == sf[3])//
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,-1605.3511,713.9568,13.1704);
		SetPlayerFacingAngle(playerid, 13.2017);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
		return 1;
	}
	else if(pickupid == lspd[5]) {
		load_mode(playerid);
		SetPlayerInterior(playerid,1);
		SetPlayerVirtualWorld(playerid, 1);
		SetPlayerPos(playerid,-1494.7655,-1214.7107,1300.9688);
		SetPlayerFacingAngle(playerid, 0);
		return 1;
	}
	else if(pickupid == sf[1])//√Ç√µ√Æ√§ √®√ß √£√†√∞√†√¶√† √¢ LSPD
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,-1590.8289,716.0479,-5.2422);
		SetPlayerFacingAngle(playerid, 270);
		SetPlayerVirtualWorld(playerid, 0);
		return 1;
	}
	else if(pickupid == lspd[3])//LSPD √¢√ª√µ√Æ√§ √¢ √£√†√∞√†√¶√•
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,1568.6962,-1692.2069,5.8906);
		SetPlayerFacingAngle(playerid, 180);
		SetPlayerVirtualWorld(playerid, 0);
		return 1;
	}
	else if(pickupid == lvpdpic[0]) //lvpd 1 √¢√µ√Æ√§ √¢ √ßS√≠√≠√®√• √± √£√†√∞√†√¶√†
	{
		load_mode(playerid);
		SetPlayerInterior(playerid,1);
		SetPlayerVirtualWorld(playerid, 3);
		SetPlayerPos(playerid,-1494.7655,-1214.7107,1300.9688);
		SetPlayerFacingAngle(playerid, 0);
		return 1;
	}
	else if(pickupid == lvpdpic[1])//lvpd 2 √¢√µ√Æ√§ √¢ √£√†√∞√†√¶..
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,2295.1934,2451.8459,10.8203);
		SetPlayerFacingAngle(playerid, 94.8742);
		return 1;
	}
	else if(pickupid == lvpdpic[2]) //lvpd 3 √¢ √ßS√≠√≠√®√•
	{
		load_mode(playerid);
		SetPlayerInterior(playerid,1);
		SetPlayerVirtualWorld(playerid, 3);
		SetPlayerPos(playerid,-1495.1744,-1191.5052,1300.9893);
		SetPlayerFacingAngle(playerid, 136.47);
		return 1;
	}
	else if(pickupid == lvpdpic[3])//lvpd  4 √≠√† √≥√´√®√∂√≥
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,2287.0247,2429.4792,10.8203);
		SetPlayerFacingAngle(playerid, 180);
		return 1;
	}
	else if(pickupid == lvpdpic[4]) {
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,2283.3425,2461.5078,38.6875);
		SetPlayerFacingAngle(playerid, 0);
		SetCameraBehindPlayer(playerid);
		return 1;
	}
	else if(pickupid == lvpdpic[6]) {
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,2294.0447,2468.8052,10.8203);
		SetPlayerFacingAngle(playerid, 90);
		return 1;
	}
	else if(pickupid == skinshop[0] || pickupid == skinshop[1] || pickupid == skinshop[2])
	{
		if(GetPVarInt(playerid, "victim")) {
			SetPlayerPos(playerid, 222.3489,-8.5845,1002.2109);
			SetPlayerFacingAngle(playerid, 266.7302);
			SetPlayerCameraPos(playerid,222.3489 + 3, -8.5845, 1002.2109);
			SetPlayerCameraLookAt(playerid,222.3489, -8.5845, 1002.2109);
			SetPlayerInterior(playerid, 5);
		}
		else if(GetPVarInt(playerid, "binco")) {
			SetPlayerPos(playerid, 217.1416,-101.2271,1005.2578);
			SetPlayerFacingAngle(playerid, 43.6968);
			SetPlayerCameraPos(playerid,214.6556,-99.7134,1005.2578);
			SetPlayerCameraLookAt(playerid,217.1416,-101.2271,1005.2578);
			SetPlayerInterior(playerid, 15);
		}
		else {
			SetPlayerPos(playerid, 148.7846,-73.6173,1001.8047);
			SetPlayerFacingAngle(playerid, 226.2650);
			SetPlayerCameraPos(playerid,150.8490, -75.6590, 1001.8047);
			SetPlayerCameraLookAt(playerid,148.7846,-73.6173,1001.8047);
			SetPlayerInterior(playerid, 18);
		}
		if(pData[playerid][pSex] == 1) PlayerTextDrawSetString(playerid, text_selectskin[playerid], "Homeless");
		else PlayerTextDrawSetString(playerid, text_selectskin[playerid], "Bottomless");
		SetPlayerVirtualWorld(playerid, playerid + 9);
		PlayerTextDrawShow(playerid, price_clothes[playerid]);
		TogglePlayerControllable(playerid, 0);
		player_isselectskin[playerid] = true;
		selectedskin[playerid] = 0;
		for(new i = 0; i < 17; i ++) TextDrawShowForPlayer(playerid, td_select_skin[i]);
		PlayerTextDrawShow(playerid, text_selectskin[playerid]);
		return SelectTextDraw(playerid, COLOR_PALEGREEN);
	}
	else if(pickupid == mo[0]) //√Ç√µ√Æ√§ √¢√≠√≥√≤√∞√º √Ä√§√¨. √è√∞√•√ß√®√§√•√≠√≤√†
	{
		load_mode(playerid);
		SetPlayerInterior(playerid,1);
		SetPlayerPos(playerid,-797.1011,1101.6531,2742.6157);
		SetPlayerFacingAngle(playerid, 90.0);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
		return 1;
	}
	else if(pickupid == mo[1]) //√¢√ª√µ√Æ√§ √®√ß √Ä√§√¨. √è√∞√•√ß√®√§√•√≠√≤√†
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,1126.2311,-2036.8313,69.8837);
		SetPlayerFacingAngle(playerid, 270.3625);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
		return 1;
	}
	else if(pickupid == vagospic[0])//Vagos √¢√µ√Æ√§ √¢ √®√≠√≤√•√∞√º√•√∞
	{
		SetPlayerInterior(playerid,4);
		SetPlayerVirtualWorld(playerid, 75);
		SetPlayerPos(playerid,2751.0171,-1962.4402,662.6328);
		SetPlayerFacingAngle(playerid, 90.0);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
		return 1;
	}
	else if(pickupid == vagospic[1])//Vagos √¢√ª√µ√Æ√§
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,2773.8826,-1628.3629,12.1775);
		SetPlayerFacingAngle(playerid, 270.0);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
		return 1;
	}
	else if(pickupid == grooveenter) {
		SetPlayerInterior(playerid, 2);
		SetPlayerPos(playerid, 2751.0171,-1962.4402,662.6328);
		SetPlayerFacingAngle(playerid, 90.0);
		SetCameraBehindPlayer(playerid);
		SetPlayerVirtualWorld(playerid, 1);
		antiflood_move[playerid] = gettime() + 3;
	}
	else if(pickupid == grooveexit) {
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 2511.467773, -1689.199707, 13.544111);
		SetPlayerFacingAngle(playerid, 49.331039);
		SetCameraBehindPlayer(playerid);
		SetPlayerVirtualWorld(playerid, 0);
		antiflood_move[playerid] = gettime() + 3;
	}
	else if(pickupid == sklad[1]) //
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,338.1549,1949.2233,22.0171);
		SetPlayerFacingAngle(playerid, 90.0);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
		return 1;
	}
	else if(pickupid == sklad_vmf_exit) //
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,-2244.0000,2382.5942,5.0612);
		SetPlayerFacingAngle(playerid, 310.9117);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
		return 1;
	}
	else if(pickupid == sklad_vmf) //
	{
		SetPlayerInterior(playerid,6);
		SetPlayerPos(playerid,316.4159,-169.6378,999.6010);
		SetPlayerFacingAngle(playerid, 0.0);
		SetPlayerVirtualWorld(playerid, 23);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
		return 1;
	}
	else if(pickupid == sklad_vvc_exit) //
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,426.7858,2536.4583,16.5391);
		SetPlayerFacingAngle(playerid, 270.0);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
		return 1;
	}
	else if(pickupid == sklad_vvc) //
	{
		SetPlayerInterior(playerid,6);
		SetPlayerPos(playerid,316.4159,-169.6378,999.6010);
		SetPlayerFacingAngle(playerid, 0.0);
		SetPlayerVirtualWorld(playerid, 74);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
		return 1;
	}
	else if(pickupid == sklad[0]) //
	{
		SetPlayerInterior(playerid,6);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,316.4159,-169.6378,999.6010);
		SetPlayerFacingAngle(playerid, 0.0);
		SetPlayerVirtualWorld(playerid, 229);
		SetCameraBehindPlayer(playerid);
		antiflood_move[playerid] = gettime() + 3;
		return 1;
	} return 1;
}
public OnPlayerSelectObject(playerid, type, objectid, modelid, Float:fX, Float:fY, Float:fZ) {

	for(new i = 0, n = lego_countobj[playerid]; i < n; i ++) {
		if(objectid != lego_objid[playerid][i]) continue;
		if(!IsValidObject(lego_objid[playerid][i])) continue;
		new Float:x,Float:y,Float:z,
			Float: rx, Float: ry, Float: rz;
		GetObjectPos(objectid, x,y,z);
		GetObjectRot(objectid, rx, ry, rz);
		lego_editobjX[playerid]=x;
		lego_editobjY[playerid]=y;
		lego_editobjZ[playerid]=z;
		lego_editRX[playerid]=rx;
		lego_editRY[playerid]=ry;
		lego_editRZ[playerid]=rz;
		SetPVarInt(playerid, "legoobj_edit", 1);
		return EditObject(playerid, objectid);
	}
	if(GetPVarInt(playerid, "SelectingObjects")) {
		new Float: pX, Float: pY, Float: pZ, 
			Float: rX, Float: rY, Float: rZ;
		GetObjectPos(objectid, pX, pY, pZ);
		GetObjectRot(objectid, rX, rY, rZ);
		return SCMF(playerid, -1, "%d %f %f %f %f %f %f", GetObjectModel(objectid), pX, pY, pZ, rX, rY, rZ);
	}
	if(GetPVarInt(playerid, "AdmEditObjects")) {
		return EditObject(playerid, objectid);
	}
	return 1;
}
public OnPlayerEditDynamicObject(playerid, objectid, response, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz)
{
	new Float:oldX, Float:oldY, Float:oldZ,
        Float:oldRotX, Float:oldRotY, Float:oldRotZ;
    GetDynamicObjectPos(objectid, oldX, oldY, oldZ);
    GetDynamicObjectRot(objectid, oldRotX, oldRotY, oldRotZ);

	if(GetPVarInt(playerid, "AdmEditObjects"))
	{
		if(response == EDIT_RESPONSE_CANCEL)
		{
			SetDynamicObjectPos(objectid, oldX, oldY, oldZ);
			SetDynamicObjectRot(objectid, oldRotX, oldRotY, oldRotZ);
		}
		else if(response == EDIT_RESPONSE_FINAL)
		{
			SetDynamicObjectPos(objectid, x, y, z);
			SetDynamicObjectRot(objectid, rx, ry, rz);
		}
		DeletePVar(playerid, "AdmEditObjects");
		return 1;
	}

	if(GetPVarInt(playerid, "installmbl_IsEditing")) {
		new h = pData[playerid][pHouse];
		if(h == -1) return 1;

		if(response == EDIT_RESPONSE_FINAL) {
			DestroyDynamicObject(tmp_o_install[playerid]);
			new model = GetPVarInt(playerid, "installmbl_model");
			new nameObj[40];
			GetPVarString(playerid, "installmbl_name", nameObj, 40);
			format(mebel_info[total_count_mebel][mObjName],40,nameObj);
			mebel_info[total_count_mebel][mObjModel] = model;
			mebel_info[total_count_mebel][mHouseID] = h;
			mebel_info[total_count_mebel][mPX] = x;
			mebel_info[total_count_mebel][mPY] = y;
			mebel_info[total_count_mebel][mPZ] = z;
			mebel_info[total_count_mebel][mRX] = rx;
			mebel_info[total_count_mebel][mRY] = ry;
			mebel_info[total_count_mebel][mRZ] = rz;

			DeletePVar(playerid,"installmbl_model");
			DeletePVar(playerid,"installmbl_name");
			DeletePVar(playerid,"installmbl_IsEditing");
			
			mebel_info[total_count_mebel][mObjectID]= CreateDynamicObject(model, x,y,z, rx,ry,rz, h +50);
			Streamer_Update(playerid);

			new query[255];
			format(query,128, "DELETE FROM `buy_mebel` WHERE `obj_name` = '%s' AND `id_owner`=%d LIMIT 1",nameObj,pData[playerid][pID]);
			mysql_tquery(mysql_Handle, query);

			format(query, sizeof(query), "INSERT INTO `ownmebel` (`nameObj`,`modelObj`, `homeOwn`, `mPX`,`mPY`,`mPZ`,`mRX`,`mRY`,`mRZ`) VALUES ('%s',%i,%i,%f,%f,%f,%f,%f,%f)",nameObj, model,h, x,y,z, rx,ry,rz);
			mysql_tquery(mysql_Handle, query);
			total_count_mebel++;
			return 1;
		}
		if(response == EDIT_RESPONSE_CANCEL) {
			DeletePVar(playerid,"installmbl_IsEditing");
			DeletePVar(playerid,"installmbl_model");
			DeletePVar(playerid,"installmbl_name");
			DestroyDynamicObject(tmp_o_install[playerid]);
			return 1;
		}
	}
	new value_editownobj = GetPVarInt(playerid, "inedit_ownedobj")-1;
	if(GetPVarInt(playerid, "inedit_ownedobj") > 0) {
		if(response == EDIT_RESPONSE_FINAL) {
			DestroyDynamicObject(objectid);
			mebel_info[value_editownobj][mPX] = x;
			mebel_info[value_editownobj][mPY] = y;
			mebel_info[value_editownobj][mPZ] = z;
			mebel_info[value_editownobj][mRX] = rx;
			mebel_info[value_editownobj][mRY] = ry;
			mebel_info[value_editownobj][mRZ] = rz;

			mebel_info[value_editownobj][mObjectID]= CreateDynamicObject(mebel_info[value_editownobj][mObjModel], x,y,z, rx,ry,rz, mebel_info[value_editownobj][mHouseID] +50);
			Streamer_Update(playerid);

			new query[260];
			format(query, sizeof(query), "UPDATE `ownmebel` SET `mPX`=%f,`mPY`=%f,`mPZ`=%f,`mRX`=%f,`mRY`=%f,`mRZ`=%f WHERE `modelObj`=%d AND `homeOwn`=%d LIMIT 1",
			x,y,z,rx,ry,rz,mebel_info[value_editownobj][mObjModel],mebel_info[value_editownobj][mHouseID]);
			mysql_tquery(mysql_Handle, query);

			DeletePVar(playerid, "inedit_ownedobj");
			SCM(playerid,COLOR_YELLOW,"√è√∞√•√§√¨√•√≤ √Æ√≤√∞√•S√≠√™√≤√®√∞√Æ√¢√†√≠");
			return 1;
		}
		if(response == EDIT_RESPONSE_CANCEL) {
			DeletePVar(playerid, "inedit_ownedobj");

			SetPVarInt(playerid, "accept_ownedobj", value_editownobj);
			SetPVarInt(playerid, "modelaccept_ownob", mebel_info[value_editownobj][mObjModel]);
			SPD(playerid, 196, DIALOG_STYLE_MSGBOX, "{ff6666}√è√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√•", ""CWHITE"√ì√°√∞√†√≤√º √Ω√≤√Æ√≤ √Ø√∞√•√§√¨√•√≤ √®√ß √§√Æ√¨√†?", "S√≠","No");
			
			DestroyDynamicObject(objectid);
			mebel_info[value_editownobj][mObjectID]= CreateDynamicObject(mebel_info[value_editownobj][mObjModel], mebel_info[value_editownobj][mPX],mebel_info[value_editownobj][mPY],mebel_info[value_editownobj][mPZ], mebel_info[value_editownobj][mRX],mebel_info[value_editownobj][mRY],mebel_info[value_editownobj][mRZ], mebel_info[value_editownobj][mHouseID] +50);
			return Streamer_Update(playerid);
		}
	}
	return 1;
}
public OnPlayerEditObject(playerid, playerobject, objectid, response, Float:fX, Float:fY, Float:fZ, Float:fRotX, Float:fRotY, Float:fRotZ)
{
	if(GetPVarInt(playerid, "legoobj_edit")) {
		if(response == EDIT_RESPONSE_FINAL) {
			DeletePVar(playerid, "legoobj_edit");

			new model=GetObjectModel(objectid);
			DestroyObject(objectid);

			lego_objid[playerid][lego_countobj[playerid] - 1]= CreateDynamicObject(model, fX, fY, fZ, fRotX, fRotY, fRotZ);
			Streamer_Update(playerid);
			return 1;
		}
		if(response == EDIT_RESPONSE_CANCEL) {
			DeletePVar(playerid, "legoobj_edit");

			new model=GetObjectModel(objectid);
			DestroyObject(objectid);

			lego_objid[playerid][lego_countobj[playerid] - 1]= CreateDynamicObject(model, lego_editobjX[playerid],lego_editobjY[playerid],lego_editobjZ[playerid], lego_editRX[playerid],lego_editRY[playerid],lego_editRZ[playerid]);
			Streamer_Update(playerid);
			return 1;
		}
		return 1;
	}
	
	if(GetPVarInt(playerid, "market_IsEditing")) {
		new invslot=GetPVarInt(playerid, "market_inv_slot");

		new market = -1;
		new nummarket;
		for(new i =0; i<9; i++) {
			if(selleritemid[i] != playerid) continue;
			market=i;
			break;
		}
		new freenum = GetPVarInt(playerid,"market_NumProd");
		if(market != -1) {
			if(!IsPlayerInRangeOfPoint(playerid, 6.5, posMarket[market][markX],posMarket[market][markY],posMarket[market][markZ])) {
				DeletePVar(playerid, "count_prod");
				DeletePVar(playerid, "market_priceitem");
				DeletePVar(playerid, "market_numset");
				DeletePVar(playerid, "market_inv_slot");
				DeletePVar(playerid, "market_IsEditing");
				DeletePVar(playerid, "market_inv_isaccessory");
				DeletePVar(playerid, "market_inv_isskin");
				return DestroyObject(install_market_obj[playerid][freenum]);
			}
			nummarket=market;
		}
		else {
			new bool:status;
			for(new i = 0; i < sizeof(posMarket); i ++) {
				if(!IsPlayerInRangeOfPoint(playerid, 6.5, posMarket[i][markX],posMarket[i][markY],posMarket[i][markZ])) 
					continue;
				if(selleritemid[i] != -1) 
					continue;
				status = true;
			}
			nummarket=GetPVarInt(playerid, "market_numset");
			if(!status) {
				DeletePVar(playerid, "count_prod");
				DeletePVar(playerid, "market_priceitem");
				DeletePVar(playerid, "market_numset");
				DeletePVar(playerid, "market_inv_slot");
				DeletePVar(playerid, "market_IsEditing");
				DeletePVar(playerid, "market_inv_isaccessory");
				DeletePVar(playerid, "market_inv_isskin");
				return DestroyObject(install_market_obj[playerid][freenum]);
			}
		}
		
		if(invslot == -1) {
			DeletePVar(playerid, "count_prod");
			DeletePVar(playerid, "market_priceitem");
			DeletePVar(playerid, "market_numset");
			DeletePVar(playerid, "market_inv_slot");
			DeletePVar(playerid, "market_IsEditing");
			DeletePVar(playerid, "market_inv_isaccessory");
			DeletePVar(playerid, "market_inv_isskin");
			return DestroyObject(install_market_obj[playerid][freenum]);
		}

		if(response == EDIT_RESPONSE_FINAL) {
			if(PointToPoint3D(fX, fY, fZ, posMarket[nummarket][markX],posMarket[nummarket][markY],posMarket[nummarket][markZ]) > 2.85) {
				DeletePVar(playerid, "count_prod");
				DeletePVar(playerid, "market_priceitem");
				DeletePVar(playerid, "market_numset");
				DeletePVar(playerid, "market_inv_slot");
				DeletePVar(playerid, "market_IsEditing");
				DeletePVar(playerid, "market_inv_isaccessory");
				DeletePVar(playerid, "market_inv_isskin");
				DestroyObject(install_market_obj[playerid][freenum]);
				SCM(playerid, COLOR_GREY, "√Ç√ª √Ø√ª√≤√†√•√≤√•√±√º √≥√±√≤√†√≠√Æ√¢√®√≤√º √≤√Æ√¢√†√∞ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ø√†√´√†√≤√™√®");
				return SCM(playerid, COLOR_GREY, "√Ç√ª√±√≤√†√¢√´√•√≠√®√• √≤√Æ√¢√†√∞√† √≠√† √Ø√∞√ÆS√≠√¶√≥ √°√ª√´√Æ √Æ√≤√¨√•√≠√•√≠√Æ. √è√Æ√Ø√∞√Æ√°√≥√©√≤√• √•√π¬∏ √∞√†√ß");
			}

			selleritemid[nummarket]=playerid;
			priceitem[nummarket][freenum]=GetPVarInt(playerid, "market_priceitem");
			DeletePVar(playerid, "market_priceitem");
			countitem[nummarket][freenum]=GetPVarInt(playerid, "count_prod");
			DeletePVar(playerid, "count_prod");
			if(GetPVarInt(playerid, "market_inv_isskin")) {
				item_is_Skin[nummarket][freenum]=true;
				format(marketname[nummarket][freenum],32,"√é√§√•√¶S√≠");

				acsRotX[nummarket][freenum]=0;
				acsRotY[nummarket][freenum]=0;
				acsRotZ[nummarket][freenum]=0;
				acsZoom[nummarket][freenum]=1.5;

				modelitem[nummarket][freenum]=inv_info[playerid][in_amodel][invslot];
				RemoveItemFromInventory(playerid, inv_info[playerid][i_type][invslot]);
			}
			else if(GetPVarInt(playerid, "market_inv_isaccessory")) {
				item_is_Accessory[nummarket][freenum]=true;
				format(marketname[nummarket][freenum],32,"√Ä√™√±√•√±√±√≥√†√∞√ª");

				new index=inv_info[playerid][in_aindex][invslot];
				
				indexmark[nummarket][freenum]=index;
				acsRotX[nummarket][freenum]=inv_info[playerid][in_apx][invslot];
				acsRotY[nummarket][freenum]=inv_info[playerid][in_apy][invslot];
				acsRotZ[nummarket][freenum]=inv_info[playerid][in_apz][invslot];
				acsZoom[nummarket][freenum]=inv_info[playerid][in_azoom][invslot];

				boneitem[nummarket][freenum]=inv_info[playerid][in_bone][invslot];
				osetX[nummarket][freenum]=inv_info[playerid][in_offsX][invslot];
				osetY[nummarket][freenum]=inv_info[playerid][in_offsY][invslot];
				osetZ[nummarket][freenum]=inv_info[playerid][in_offsZ][invslot];
				itemfRotX[nummarket][freenum]=inv_info[playerid][in_afrotX][invslot];
				itemfRotY[nummarket][freenum]=inv_info[playerid][in_afrotY][invslot];
				itemfRotZ[nummarket][freenum]=inv_info[playerid][in_afrotZ][invslot];
				fitemScaleX[nummarket][freenum]=inv_info[playerid][in_afscaleX][invslot];
				fitemScaleY[nummarket][freenum]=inv_info[playerid][in_afscaleY][invslot];
				fitemScaleZ[nummarket][freenum]=inv_info[playerid][in_afscaleZ][invslot];

				modelitem[nummarket][freenum]=inv_info[playerid][in_amodel][invslot];
				RemoveAccessoryFromInv(playerid,inv_info[playerid][i_type][invslot]);
			}
			else {
				typeitem[nummarket][freenum]=inv_info[playerid][i_type][invslot];
				format(marketname[nummarket][freenum],32,item_data[inv_info[playerid][i_type][invslot]][itemname]);
				modelitem[nummarket][freenum]=item_data[inv_info[playerid][i_type][invslot]][itemmodel];

				switch(inv_info[playerid][i_type][invslot]) {
					case 0: {
						pData[playerid][pSpal]-=countitem[nummarket][freenum];
						UpdatePlayerData(playerid,"spal",pData[playerid][pSpal]);
					}
					case 1: {
						pData[playerid][pSiga]-=countitem[nummarket][freenum];
						UpdatePlayerData(playerid,"sigar",pData[playerid][pSiga]);
					}
					case 4: {
						pData[playerid][pAptech]-=countitem[nummarket][freenum];
						UpdatePlayerData(playerid,"pAptech",pData[playerid][pAptech]);
					}
					case 5: {
						pData[playerid][pMasks]-=countitem[nummarket][freenum];
						UpdatePlayerData(playerid,"pMasks",pData[playerid][pMasks]);
					}
					case 6: {
						pData[playerid][pRec]=false;
						UpdatePlayerData(playerid,"pRec",0);
					}
					case 7: {
						fuelcan_buyed[playerid] = false;
						if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) 
							RemovePlayerAttachedObject(playerid, 2);
					}
					case 8: {
						pData[playerid][casino_amount]-=countitem[nummarket][freenum];
						UpdatePlayerData(playerid,"casino_amount",pData[playerid][casino_amount]);
					}
				}

				RemoveItemFromInventory(playerid, inv_info[playerid][i_type][invslot], countitem[nummarket][freenum]);
			}

			DestroyObject(install_market_obj[playerid][freenum]);
			if(GetPVarInt(playerid, "market_inv_isskin")) 
				install_market_obj[playerid][freenum] = CreateObject(GetPVarInt(playerid, "market_inv_skinobj"), fX,fY,fZ, fRotX,fRotY,fRotZ);
			else install_market_obj[playerid][freenum] = CreateObject(modelitem[nummarket][freenum], fX,fY,fZ, fRotX,fRotY,fRotZ);
			Streamer_Update(playerid);

			DeletePVar(playerid, "market_inv_slot");
			DeletePVar(playerid, "market_numset");
			DeletePVar(playerid, "market_IsEditing");
			DeletePVar(playerid, "market_inv_isaccessory");
			DeletePVar(playerid, "market_inv_isskin");
			new fmt[128];
			format(fmt,sizeof(fmt),"√è√†√´√†√≤√™√† ¬π%d\n%s\n√è√∞√ÆS√≠¬∏√≤:",
			nummarket+1,GetName(playerid));
			for(new i = 0; i < 5; i++) {
				if(modelitem[nummarket][i] == -1) 
					continue;
				format(fmt,sizeof(fmt),"%s\n%s",fmt,marketname[nummarket][i]);
			}

			UpdateDynamic3DTextLabelText(rinok_3d[nummarket], COLOR_LIGHTGREY, fmt);
			PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
			SCM(playerid,COLOR_PALEGREEN,"√í√Æ√¢√†√∞ √≥√±√Ø√•√∏√≠√Æ √¢√ª√±√≤√†√¢√´√•√≠ √≠√† √Ø√∞√ÆS√≠√¶√≥");
			SCM(playerid,COLOR_PALEGREEN,"√ó√≤√Æ√°√ª √±√≠√ø√≤√º √™√†√™√Æ√©-√´√®√°√Æ √≤√Æ√¢√†√∞ √± √Ø√∞√ÆS√≠√¶√®, Usar√≤√• "CBLUE"/remmarket");
			return 1;
		}
		else if(PointToPoint3D(fX, fY, fZ, posMarket[nummarket][markX],posMarket[nummarket][markY],posMarket[nummarket][markZ]) > 2.85) 
			GameTextForPlayer(playerid, "~r~LONG DISTANCE", 1000, 4);

		if(response == EDIT_RESPONSE_CANCEL) {
			DeletePVar(playerid, "count_prod");
			DeletePVar(playerid, "market_priceitem");
			DeletePVar(playerid, "market_numset");
			DeletePVar(playerid, "market_inv_slot");
			DeletePVar(playerid, "market_IsEditing");
			DeletePVar(playerid, "market_inv_isaccessory");
			DestroyObject(install_market_obj[playerid][freenum]);
			return 1;
		}
	}
	if(g_iVehicleCarID[playerid] != -1)
	{
		new v = g_iVehicleCarID[playerid];
		if(response == EDIT_RESPONSE_CANCEL)
		{
			if(GetPVarInt(playerid, "isInstalling"))
			{
				DestroyObject(g_iVehicleIDObject[playerid]);
				g_iVehicleIDObject[playerid] = -1;
				g_iVehicleCarID[playerid] = -1;
				DeletePVar(playerid, "isInstalling");
			}
			return 1;
		}
		if(response == EDIT_RESPONSE_FINAL)
		{
	        new slot = GetFirstDetailSlot(v);
	        g_iVehicleDetails[v][slot][eObject] = g_iVehicleComponents[GetPVarInt(playerid, "categoryTune")][GetPVarInt(playerid, "idxModel")];
	        g_iVehicleDetails[v][slot][eObjectID] = objectid;
	        g_iVehicleDetails[v][slot][eCategory] = GetPVarInt(playerid, "categoryTune");
	        new Float:fRelativePos[3];
	        new Float:fCarPos[3];
			GetVehiclePos(v, fCarPos[0], fCarPos[1], fCarPos[2]);
			fRelativePos[0] = fX - fCarPos[0];
			fRelativePos[1] = fY - fCarPos[1];
			fRelativePos[2] = fZ - fCarPos[2];
			g_iVehicleDetails[v][slot][ePos][0] = fRelativePos[0];
			g_iVehicleDetails[v][slot][ePos][1] = fRelativePos[1];
			g_iVehicleDetails[v][slot][ePos][2] = fRelativePos[2];
			g_iVehicleDetails[v][slot][eRot][0] = fRotX;
			g_iVehicleDetails[v][slot][eRot][1] = fRotY;
			g_iVehicleDetails[v][slot][eRot][2] = fRotZ;
			AttachObjectToVehicle(objectid, v, fRelativePos[0], fRelativePos[1], fRelativePos[2], fRotX, fRotY, fRotZ);
			
			PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);

			new query[300];
			new num_car;
			if(house_carid[playerid][0] && v == house_carid[playerid][0]) num_car = 0;
			if(house_carid[playerid][1] && v == house_carid[playerid][1]) num_car = 1;
			if(house_carid[playerid][2] && v == house_carid[playerid][2]) num_car = 2;
			mysql_format(mysql_Handle, query, sizeof(query), "DELETE FROM `tuneobjects` WHERE `accountid`='%d' AND `numcar` = '%d' AND `objslot`='%d'",
			pData[playerid][pID],num_car,slot);
			mysql_tquery(mysql_Handle, query);
			mysql_format(mysql_Handle, query, sizeof(query), "INSERT INTO `tuneobjects` (`accountid`, `numcar`, `objslot`,`category`, `modelid`, `posX`, `posY`, `posZ`, `rotX`, `rotY`, `rotZ`) VALUES ('%d','%d','%d','%d','%d','%f','%f','%f','%f','%f','%f')",
			pData[playerid][pID],num_car,slot,GetPVarInt(playerid, "categoryTune"),g_iVehicleComponents[GetPVarInt(playerid, "categoryTune")][GetPVarInt(playerid, "idxModel")],fRelativePos[0], fRelativePos[1], fRelativePos[2], fRotX, fRotY, fRotZ);
			mysql_tquery(mysql_Handle, query);

			if(GetPVarInt(playerid, "isInstalling")) {
				Hook_GivePlayerMoney(playerid, -10000);
				GameTextForPlayer(playerid, "~r~-10000$", 3000, 1);
				SCM(playerid, 0x00FF99FF, "√é√°√∫√•√™√≤ √≥√±√≤√†√≠√Æ√¢√´√•√≠ √ß√† 10000$");
				DeletePVar(playerid, "isInstalling");
			}
			else SCM(playerid, 0x00FF99FF, "√é√°√∫√•√™√≤ √Æ√≤√∞√•S√≠√™√≤√®√∞√Æ√¢√†√≠");

			ao_edit_menu(playerid);
			return 1;
	    }
	}
	return 1;
}
stock ao_attach_menu(playerid) {
    new vid = GetPlayerVehicleID(playerid);
    if(vid == 0) return 1;
    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
    SCM(playerid, -1, "√è√Æ√§√±√™√†√ß√™√†: √¢√±√≤√†√≠√º√≤√• √≠√† √∞√Æ√¢√≠√≥√æ √Ø√Æ√¢√•√∞√µ√≠√Æ√±√≤√º √§√´√ø √´√≥√∑√∏√•√£√Æ √Ø√Æ√ß√®√∂√®√Æ√≠√®√∞√Æ√¢√†√≠√®√ø √§√•√≤√†√´√®");
    g_iVehicleCarID[playerid] = vid;
	new str[300];
	new tempStr[35];
	for(new i = 0; i < sizeof(g_szVehicleCategories); i++)
	{
	    format(tempStr, sizeof(tempStr), "[%d] %s\n", i+1, g_szVehicleCategories[i]);
	    strcat(str, tempStr);
	}
	SetVehicleZAngle(vid, 0.0);
	return ShowPlayerDialog(playerid, 18256, DIALOG_STYLE_LIST, "{0099CC}√Ç√ª√°√•√∞√®√≤√• √™√†√≤√•√£√Æ√∞√®√æ", str, "Seleccione", "Cerrar");
}
	
stock ao_edit_menu(playerid) {
	new vid = GetPlayerVehicleID(playerid);
    if(vid == 0) return 1;
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;

    new bigstr[512]="√ë√´√Æ√≤\tID √¨√Æ√§√•√´√®\n";
    SCM(playerid, -1, "√è√Æ√§√±√™√†√ß√™√†: √¢√±√≤√†√≠√º√≤√• √≠√† √∞√Æ√¢√≠√≥√æ √Ø√Æ√¢√•√∞√µ√≠√Æ√±√≤√º √§√´√ø √´√≥√∑√∏√•√£√Æ √Ø√Æ√ß√®√∂√®√Æ√≠√®√∞√Æ√¢√†√≠√®√ø √§√•√≤√†√´√®");
    g_iVehicleCarID[playerid] = vid;
    SetVehicleZAngle(vid, 0.0);
    new tempStr[50];
    new num=1;
    for(new i = 0; i < MAX_DETAILS_ON_VEHICLE; i++)
    {
        if(g_iVehicleDetails[vid][i][eObjectID] == -1) 
        	format(tempStr, sizeof(tempStr), "%i\t-\n", num);
        else format(tempStr, sizeof(tempStr), "%i\t%i\n", num, g_iVehicleDetails[vid][i][eObject]);
    	strcat(bigstr, tempStr);
    	num++;
    }
	return ShowPlayerDialog(playerid, 18257, DIALOG_STYLE_TABLIST_HEADERS, "√Ç√ª√°√•√∞√®√≤√• √Æ√°√∫√•√™√≤", bigstr, "Seleccione", "Cerrar");
}
public OnPlayerExitedMenu(playerid) {
	if(pTemp[playerid][pSpectate]) 
		ShowMenuForPlayer(sp_menu, playerid);
	return 1;
}
public OnPlayerSelectedMenuRow(playerid, row) {
	if(GetPlayerMenu(playerid) == sp_menu) {
		new idspec = pTemp[playerid][pSpectateID];
		switch(row) {
			case 0: // next player
			{
				ShowMenuForPlayer(sp_menu, playerid);

				new idnext=Get_Next_SpecID(playerid,idspec);

				pTemp[playerid][pSpectateID] = idnext;
				SetPlayerInterior(playerid,GetPlayerInterior(idnext));
				SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(idnext));
				if(IsPlayerInAnyVehicle(idnext)) PlayerSpectateVehicle(playerid,GetPlayerVehicleID(idnext));
				else PlayerSpectatePlayer(playerid, idnext);
				new str[50];
				format(str, sizeof(str), "~y~SPECTATE TO~n~~b~%s",GetName(idnext));
				GameTextForPlayer(playerid, str, 3000, 3);
			}
			case 1: // update
			{
				SetPlayerInterior(playerid,GetPlayerInterior(idspec));
				SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(idspec));
				if(IsPlayerInAnyVehicle(idspec)) PlayerSpectateVehicle(playerid, GetPlayerVehicleID(idspec));
				else PlayerSpectatePlayer(playerid, idspec);
				ShowMenuForPlayer(sp_menu, playerid);
			}
			case 2: // mute
			{
				if(pData[playerid][pAdmin] < 3) {
					ShowMenuForPlayer(sp_menu, playerid);
					return SCM(playerid, COLOR_ERROR, "S√≠√≠√≠√†√ø √¥√≥√≠√™√∂√®√ø √≠√•√§√Æ√±√≤√≥√Ø√≠√† √≠√† √Ç√†√∏√•√¨ √≥√∞√Æ√¢√≠√• √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√†");
				}
				if(pData[idspec][pMuteTime] > 0) {
					ShowMenuForPlayer(sp_menu, playerid);
					return SCM(playerid, COLOR_ERROR, "√ì √®√£√∞√Æ√™√† √≥√¶√• √•√±√≤√º √°√´√Æ√™√®√∞√Æ√¢√™√† √∑√†√≤√†");
				}
				SPD(playerid, 459, DIALOG_STYLE_INPUT, "√Å√ª√±√≤√∞√†√ø √°√´√Æ√™√®√∞√Æ√¢√™√† √∑√†√≤√†", "√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø, √¢√¢√•√§√®√≤√• √±√∞√Æ√™ √¢ √¨√®√≠√≥√≤√†√µ √¢ √Ø√Æ√´√• √≠√®√¶√•:", "S√≠√´√•√•", "Cerrar");
				ShowMenuForPlayer(sp_menu, playerid);
			}
			case 3: // slap
			{
				if(slap_delay[playerid] > gettime()) {
					ShowMenuForPlayer(sp_menu, playerid);
					return SCM(playerid, COLOR_ERROR, "√è√Æ√§√Æ√¶√§√®√≤√• √≠√•√±√™√Æ√´√º√™√Æ √±√•√™√≥√≠√§...");
				}
				new Float: slx, Float: sly, Float: slz; string[0] = EOS;
				GetPlayerPos(idspec, slx, sly, slz); SetPlayerPos(idspec, slx, sly, slz+5); PlayerPlaySound(idspec, 1130, slx, sly, slz+5);
				format(string,128, "[SP] %s[%d] √Ø√≠√≥√´ √®√£√∞√Æ√™√† %s[%d]",pData[playerid][pName],playerid, pData[idspec][pName],idspec);
				AdminMessage(COLOR_GREY, string);
				if(GetPVarInt(playerid, "AdminMessages")) SCM(playerid, COLOR_GREY, string);
				slap_delay[playerid] = gettime() + 10;
				ShowMenuForPlayer(sp_menu, playerid);
			}
			case 4: // weap
			{
				if(pData[playerid][pAdmin] < 2) {
					ShowMenuForPlayer(sp_menu, playerid);
					return SCM(playerid, COLOR_ERROR, "S√≠√≠√≠√†√ø √¥√≥√≠√™√∂√®√ø √≠√•√§√Æ√±√≤√≥√Ø√≠√† √≠√† √Ç√†√∏√•√¨ √≥√∞√Æ√¢√≠√• √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√†");
				}
				new query1[1240], weapons[13][2], temp1[440], titleweap[48], temp2[440];
				strcat(query1, ""CLITEBLUE"S√≠√≠√≠√ª√• √™√´√®√•√≠√≤√†:\n\n");
				static const fmt_query1[] = ""CWHITE"√ë√´√Æ√≤ ¬π%d\tID √Æ√∞√≥√¶√®√ø: %d\t\t√è√†√≤√∞√Æ√≠√ª: %d\n", 
							 fmt_query2[] = "√ë√´√Æ√≤ ¬π%d\tID √Æ√∞√≥√¶√®√ø: %d\t\t√è√†√≤√∞√Æ√≠√ª: %d\n";
				for(new i = 0; i <= 12; i ++) {
					GetPlayerWeaponData(idspec, i, weapons[i][0], weapons[i][1]);
					if(weapons[i][1] == 0)
						weapons[i][0] = 0;
					format(temp1, sizeof temp1, fmt_query1, i, weapons[i][0], weapons[i][1]);
					strcat(query1, temp1);
				}
				strcat(query1, "\n\n"CLITEBLUE"S√≠√≠√≠√ª√• √†√≠√≤√®√∑√®√≤√†:\n\n{66cc33}");
				for(new i = 0; i <= 12; i ++) {
					AntiCheatGetWeaponData(idspec, i, weapons[i][0], weapons[i][1]);
					if(weapons[i][1] == 0)
						weapons[i][0] = 0;
					format(temp2, sizeof temp2, fmt_query2, i, weapons[i][0], weapons[i][1]);
					strcat(query1, temp2);
				}
				format(titleweap, sizeof titleweap, "√ë√≤√†√≤√®√±√≤√®√™√† √Æ√∞√≥√¶√®√ø %s", pData[idspec][pName]);
				SPD(playerid, 0, DIALOG_STYLE_MSGBOX, titleweap, query1, "Cerrar", "");
				ShowMenuForPlayer(sp_menu, playerid);
			}
			case 5: // freeze
			{
				if(AntiCheatIsFrozen(playerid)) {
					TogglePlayerControllable(idspec, 1);
					format(string, 144, "[SP] %s[%d] √∞√†√ß√¨√Æ√∞√Æ√ß√®√´ %s[%d]", pData[playerid][pName], playerid, pData[idspec][pName], idspec);
				}
				else {
					TogglePlayerControllable(idspec, 0);
					format(string, 144, "[SP] %s[%d] √ß√†√¨√Æ√∞√Æ√ß√®√´ %s[%d]", pData[playerid][pName], playerid, pData[idspec][pName], idspec);
				}
				if(GetPVarInt(playerid, "AdminMessages")) SCM(playerid, COLOR_YELLOW, string);
				AdminMessage(COLOR_YELLOW, string);
				ShowMenuForPlayer(sp_menu, playerid);
			}
			case 6: // info
			{
				if(pData[playerid][pAdmin] >= 4) SCMF(playerid, 0xFF5C33FF, "[SP] %s[%i]  |  PING %d  |  IP %s", pData[idspec][pName], idspec, GetPlayerPing(idspec), pData[idspec][pIP]);
				else SCMF(playerid, 0xFF5C33FF, "[SP] %s[%i]  |  PING %d", pData[idspec][pName], idspec, GetPlayerPing(idspec));
				ShowMenuForPlayer(sp_menu, playerid);
			}
			case 7: { // stat
				player_stats(idspec, playerid); 
				ShowMenuForPlayer(sp_menu, playerid);
			}
			case 8: TogglePlayerSpectating(playerid, false); // exit
		}
	}
	return 1;
}
CB: info_state(playerid) {
	new rows;
	new leadername[24]="No",
		secondname[24]="No",
		rankid;
	cache_get_row_count(rows);
	for(new i = 0; i < rows; i ++) {
		cache_get_value_name_int(i, "pRank", rankid);
		if(rankid == 10) cache_get_value_name(i, "Name", leadername);
		else if(rankid == 9) cache_get_value_name(i, "Name", secondname);
	}

	format(string,700, 
		"\n\
		\n\
		\t\t\t{99bbff}√ò√≤√†√≤ "CBLUE"Centurion\n\
		\n\
		\n"CWHITE"√è√∞√•√ß√®√§√•√≠√≤:\t\t\t{ffcc66}%s\n\
		"CWHITE"√Ç√®√∂√•-√Ø√∞√•√ß√®√§√•√≠√≤:\t\t{ffcc66}%s\n\
		\n\
		"CWHITE"√Å√æ√§√¶√•√≤ √∏√≤√†√≤√†:\t\t{00a329}%d$\n\
		\n\
		"CWHITE"√è√•√≠√±√®√Æ√≠√≠√ª√© √¢√Æ√ß√∞√†√±√≤:\t\t{79f84b}20 "CWHITE"√´√•√≤ (√£√ÆS√≠)\n\
		√ê√†√ß√¨√•√∞ √Ø√•√≠√±√®√®:\t\t{00a329}2000$\n\
		"CWHITE"√ç√†√´√Æ√£ √®√¨√≥√π√•√±√≤√¢√†:\t\t"CLITEBLUE"%d$\n\
		"CWHITE"√É√Æ√±√≥S√≠√∞√±√≤√¢√•√≠√≠√ª√© √≠√†√´√Æ√£:\t"CLITEBLUE"%d$\n\
		\n\
		"CWHITE"√á√†√∞√Ø√´√†√≤√† √≠√†√∑√†√´√º√≠√ª√µ √∞√†√°√Æ√≤:\n \
		- √ò√†√µ√≤√†\t\t\t{00a329}%d$/√™√£\n \
		"CWHITE"- √ã√•√±√Æ√Ø√®√´√™√†\t\t\t{00a329}%d$/√™√£\n \
		"CWHITE"- √ë√™√´√†√§\t\t\t{00a329}%d$/√™√£\n\
		\n\
		"CWHITE"√é√∂√•√≠√™√† √§√•√ø√≤√•√´√º√≠√Æ√±√≤√® √Ä√§√¨√®√≠√®√±√≤√∞√†√∂√®√® √è√∞√•√ß√®√§√•√≠√≤√†:\n\
		\t√è√Æ√´√Æ√¶√®√≤√•√´√º√≠√Æ: {79f84b}57.8%%\n\
		\t"CWHITE"√é√≤√∞√®√∂√†√≤√•√´√º√≠√Æ: {fa1010}42.1%%\n\
		\n", 
	leadername,secondname,Gos_Nalog[1],Business_Nalog, Gos_Nalog[0],oneprod_mine,oneprod_lesop,oneprod_gruz);
	return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CMAIN"√à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ √∏√≤√†√≤√•", string, "Cerrar", "");
}
CB: SMI_sotr(playerid) {
	new rows, name_player[MAX_PLAYER_NAME], member_id, ads_count, fstring[700] = "¬π  √à√¨√ø\t\t\t√è√∞√Æ√¢√•√∞√•√≠√Æ √Æ√°√∫√ø√¢√´√•√≠√®√©\n\n"CWHITE"";
	cache_get_row_count(rows);
	if(!rows) return SCM(playerid, COLOR_LIGHTGREY, "√ë√Ø√®√±√Æ√™ √´√≥√∑√∏√®√µ √±√Æ√≤√∞√≥√§√≠√®√™√Æ√¢ √Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤");
	for(new i = 0; i < rows; i ++) {
		cache_get_value_name(i, "Name", name_player);
		cache_get_value_name_int(i, "pMember", member_id);
		if(member_id != 16) {
			mysql_format(mysql_Handle, string, 128, "UPDATE `accounts` SET `ads_smi_count` = '0' WHERE `Name` = '%s'", name_player);
			mysql_tquery(mysql_Handle, string);
			continue;
		}
		cache_get_value_name_int(i, "ads_smi_count", ads_count);
		format(fstring, sizeof(fstring), "%s%d %s\t\t%d\n", fstring, i + 1, name_player, ads_count);
	}
	return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{FFCD00}√ã√≥√∑√∏√®√• √±√Æ√≤√∞√≥√§√≠√®√™√® √ë√å√à", fstring, "Cerrar", "");
}
CB: sotr_LS(playerid) {
	new rows, name_player[MAX_PLAYER_NAME], member_id, healths, fstring[700] = "¬π  √à√¨√ø\t\t\t√Ç√ª√´√•√∑√•√≠√Æ √Ø√†√∂√®√•√≠√≤√Æ√¢\n\n"CWHITE"";
	cache_get_row_count(rows);
	if(!rows) return SCM(playerid, COLOR_LIGHTGREY, "√ë√Ø√®√±√Æ√™ √´√≥√∑√∏√®√µ √±√Æ√≤√∞√≥√§√≠√®√™√Æ√¢ √Ω√≤√Æ√© √°√Æ√´√º√≠√®√∂√ª √Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤");
	for(new i = 0; i < rows; i ++) {
		cache_get_value_name(i, "Name", name_player);
		cache_get_value_name_int(i, "pMember", member_id);
		if(member_id != 4) {
			if(member_id != 28 && member_id != 23 && member_id != 29) {
				mysql_format(mysql_Handle, string, 128, "UPDATE `accounts` SET `healths_count` = '0' WHERE `Name` = '%s'", name_player);
				mysql_tquery(mysql_Handle, string);
			}
			continue;
		}
		cache_get_value_name_int(i, "healths_count", healths);
		format(fstring, sizeof(fstring), "%s%d %s\t\t%d\n", fstring, i + 1, name_player, healths);
	}
	return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{FFCD00}√ã√≥√∑√∏√®√• √±√Æ√≤√∞√≥√§√≠√®√™√® √°√Æ√´√º√≠√®√∂√ª √ã√ë", fstring, "Cerrar", "");
}
CB: sotr_SF(playerid) {
	new rows, name_player[MAX_PLAYER_NAME], member_id, healths, fstring[700] = "¬π  √à√¨√ø\t\t\t√Ç√ª√´√•√∑√•√≠√Æ √Ø√†√∂√®√•√≠√≤√Æ√¢\n\n"CWHITE"";
	cache_get_row_count(rows);
	if(!rows) return SCM(playerid, COLOR_LIGHTGREY, "√ë√Ø√®√±√Æ√™ √´√≥√∑√∏√®√µ √±√Æ√≤√∞√≥√§√≠√®√™√Æ√¢ √Ω√≤√Æ√© √°√Æ√´√º√≠√®√∂√ª √Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤");
	for(new i = 0; i < rows; i ++) {
		cache_get_value_name(i, "Name", name_player);
		cache_get_value_name_int(i, "pMember", member_id);
		if(member_id != 28) {
			if(member_id != 4 && member_id != 23 && member_id != 29) {
				mysql_format(mysql_Handle, string, 128, "UPDATE `accounts` SET `healths_count` = '0' WHERE `Name` = '%s'", name_player);
				mysql_tquery(mysql_Handle, string);
			}
			continue;
		}
		cache_get_value_name_int(i, "healths_count", healths);
		format(fstring, sizeof(fstring), "%s%d %s\t\t%d\n", fstring, i + 1, name_player, healths);
	}
	return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{FFCD00}√ã√≥√∑√∏√®√• √±√Æ√≤√∞√≥√§√≠√®√™√® √°√Æ√´√º√≠√®√∂√ª √ë√î", fstring, "Cerrar", "");
}
CB: sotr_LV(playerid) {
	new rows, name_player[MAX_PLAYER_NAME], member_id, healths, fstring[700] = "¬π  √à√¨√ø\t\t\t√Ç√ª√´√•√∑√•√≠√Æ √Ø√†√∂√®√•√≠√≤√Æ√¢\n\n"CWHITE"";
	cache_get_row_count(rows);
	if(!rows) return SCM(playerid, COLOR_LIGHTGREY, "√ë√Ø√®√±√Æ√™ √´√≥√∑√∏√®√µ √±√Æ√≤√∞√≥√§√≠√®√™√Æ√¢ √Ω√≤√Æ√© √°√Æ√´√º√≠√®√∂√ª √Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤");
	for(new i = 0; i < rows; i ++) {
		cache_get_value_name(i, "Name", name_player);
		cache_get_value_name_int(i, "pMember", member_id);
		if(member_id != 29) {
			if(member_id != 28 && member_id != 23 && member_id != 4) {
				mysql_format(mysql_Handle, string, 128, "UPDATE `accounts` SET `healths_count` = '0' WHERE `Name` = '%s'", name_player);
				mysql_tquery(mysql_Handle, string);
			}
			continue;
		}
		cache_get_value_name_int(i, "healths_count", healths);
		format(fstring, sizeof(fstring), "%s%d %s\t\t%d\n", fstring, i + 1, name_player, healths);
	}
	return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{FFCD00}√ã√≥√∑√∏√®√• √±√Æ√≤√∞√≥√§√≠√®√™√® √°√Æ√´√º√≠√®√∂√ª √ã√Ç", fstring, "Cerrar", "");
}
CB: sotr_all(playerid) {
	new rows, name_player[MAX_PLAYER_NAME], member_id, healths, fstring[700] = "¬π  √à√¨√ø\t\t\t√Ç√ª√´√•√∑√•√≠√Æ √Ø√†√∂√®√•√≠√≤√Æ√¢\n\n"CWHITE"";
	cache_get_row_count(rows);
	if(!rows) return SCM(playerid, COLOR_LIGHTGREY, "√ë√Ø√®√±√Æ√™ √´√≥√∑√∏√®√µ √±√Æ√≤√∞√≥√§√≠√®√™√Æ√¢ √Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤");
	for(new i = 0; i < rows; i ++) {
		cache_get_value_name(i, "Name", name_player);
		cache_get_value_name_int(i, "pMember", member_id);
		if(member_id != 29 && member_id != 28 && member_id != 23 && member_id != 4) {
			mysql_format(mysql_Handle, string, 128, "UPDATE `accounts` SET `healths_count` = '0' WHERE `Name` = '%s'", name_player);
			mysql_tquery(mysql_Handle, string);
			continue;
		}
		cache_get_value_name_int(i, "healths_count", healths);
		format(fstring, sizeof(fstring), "%s%d %s\t\t%d\n", fstring, i + 1, name_player, healths);
	}
	return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{FFCD00}√ã√≥√∑√∏√®√• √±√Æ√≤√∞√≥√§√≠√®√™√® √¢√±√•√µ √°√Æ√´√º√≠√®√∂", fstring, "Cerrar", "");
}

CB: spawn_ammoav(num)
{
	switch(num)
	{
		case 0: ammo_av[0] = CreateDynamicPickup(2358, 23, -1326.0697,512.4340,11.1953, 0, 0);
		case 1: ammo_av[1] = CreateDynamicPickup(2358, 23, -1309.1107,511.5924,11.1953, 0, 0);
		case 2: ammo_av[2] = CreateDynamicPickup(2358, 23, -1297.2577,499.2943,11.1953, 0, 0);
		case 3: ammo_av[3] = CreateDynamicPickup(2358, 23, -1326.0554,499.6330,11.1953, 0, 0);
		case 4: ammo_av[4] = CreateDynamicPickup(2358, 23, -1368.8206,502.8233,11.1953, 0, 0);
		case 5: ammo_av[5] = CreateDynamicPickup(2358, 23, -1404.0162,496.7310,11.1953, 0, 0);
		case 6: ammo_av[6] = CreateDynamicPickup(2358, 23, -1403.7605,495.5191,3.0391, 0, 0);
		case 7: ammo_av[7] = CreateDynamicPickup(2358, 23, -1390.3484,507.2364,3.0391, 0, 0);
		case 8: ammo_av[8] = CreateDynamicPickup(2358, 23, -1411.3452,506.5847,3.0391, 0, 0);
		case 9: ammo_av[9] = CreateDynamicPickup(2358, 23, -1416.3575,488.9122,3.0391, 0, 0);
	}
}

CB: create_pickrep_bloody() {
	switch(random(10)) {
		case 0: {
			repair_bloody = CreateDynamicSphere(-1490.0823,952.4370,1036.8997, 2.0, 10, 15, -1);
			repair_bloody_1 = CreatePickup(3096, 23, -1490.0823,952.4370,1036.8997, 10);
		}
		case 1: {
			repair_bloody = CreateDynamicSphere(-1514.3767,1001.8585,1037.7556, 2.0, 10, 15, -1);
			repair_bloody_1 = CreatePickup(3096, 23, -1514.3767,1001.8585,1037.7556, 10);
		}
		case 2: {
			repair_bloody = CreateDynamicSphere(-1435.6036,1057.7676,1038.5536, 2.0, 10, 15, -1);
			repair_bloody_1 = CreatePickup(3096, 23, -1435.6036,1057.7676,1038.5536, 10);
		}
		case 3: {
			repair_bloody = CreateDynamicSphere(-1318.8802,1044.1705,1038.1294, 2.0, 10, 15, -1);
			repair_bloody_1 = CreatePickup(3096, 23, -1318.8802,1044.1705,1038.1294, 10);
		}
		case 4: {
			repair_bloody = CreateDynamicSphere(-1290.9775,972.7509,1036.8885, 2.0, 10, 15, -1);
			repair_bloody_1 = CreatePickup(3096, 23, -1290.9775,972.7509,1036.8885, 10);
		}
		case 5: {
			repair_bloody = CreateDynamicSphere(-1337.5209,938.0268,1036.3894, 2.0, 10, 15, -1);
			repair_bloody_1 = CreatePickup(3096, 23, -1337.5209,938.0268,1036.3894, 10);
		}
		case 6: {
			repair_bloody = CreateDynamicSphere(-1315.8054,960.9956,1032.8367, 2.0, 10, 15, -1);
			repair_bloody_1 = CreatePickup(3096, 23, -1315.8054,960.9956,1032.8367, 10);
		}
		case 7: {
			repair_bloody = CreateDynamicSphere(-1468.5375,952.7410,1033.5916, 2.0, 10, 15, -1);
			repair_bloody_1 = CreatePickup(3096, 23, -1468.5375,952.7410,1033.5916, 10);
		}
		case 8: {
			repair_bloody = CreateDynamicSphere(-1425.5181,1043.4906,1030.5936, 2.0, 10, 15, -1);
			repair_bloody_1 = CreatePickup(3096, 23, -1425.5181,1043.4906,1030.5936, 10);
		}
		case 9: {
			repair_bloody = CreateDynamicSphere(-1395.7319,1000.4270,1024.1799, 2.0, 10, 15, -1);
			repair_bloody_1 = CreatePickup(3096, 23, -1395.7319,1000.4270,1024.1799, 10);
		}
	}
}
CB: tariff_taxi(playerid, driverid) {
	if(player_is_taxi[playerid] && GetPlayerVehicleID(playerid) != 420) return DeletePVar(playerid, "driver_taxi"), passenger_taxien[playerid] = false, KillTimer(timer_taxipas[playerid]);
	if(pData[playerid][pCash] < taxi_tarif[driverid]) {
		KillTimer(timer_taxipas[playerid]); passenger_taxien[playerid] = false; DeletePVar(playerid, "driver_taxi");
		SCMF(driverid, COLOR_ORANGE, "√ì %s √ß√†√™√Æ√≠√∑√®√´√®√±√º √±√∞√•√§√±√≤√¢√† √≠√† √Æ√Ø√´√†√≤√≥ √≤√†√∞√®√¥√†", GetName(playerid));
		return SCM(playerid, COLOR_ORANGE, "√ì √Ç√†√± √ß√†√™√Æ√≠√∑√®√´√®√±√º √±√∞√•√§√±√≤√¢√† √≠√† √Æ√Ø√´√†√≤√≥ √≤√†√∞√®√¥√†");
	}
    if(taxi_tarif[driverid] == -1) {
        KillTimer(timer_taxipas[playerid]);
        passenger_taxien[playerid] = false;
        return DeletePVar(playerid, "driver_taxi");
    }
	format(string, 32, "~r~-%d$ ~n~~b~ +30 sec", taxi_tarif[driverid]);
	GameTextForPlayer(playerid, string, 2000, 1);
	Hook_GivePlayerMoney(playerid, -taxi_tarif[driverid]);
	taxi_payday[driverid] += taxi_tarif[driverid];
	format(string, 32, "~g~+%d$", taxi_tarif[driverid]);
	return GameTextForPlayer(driverid, string, 2000, 1);
}

public OnPlayerStateChange(playerid, newstate, oldstate) {
	Derby_OnPlayerStateChange(playerid, newstate, oldstate);

	new vehicleid = GetPVarInt(playerid, "car_state_id");
	DeletePVar(playerid, "car_state_id");

	if(newstate == PLAYER_STATE_DRIVER) { 
		if(vehicleid == af_carID[playerid]) 
    		TogglePlayerAllDynamicCPs(playerid, 0);
		if(GetPVarInt(playerid, "SIGNAL") == vehicleid && alarm_vehicle[vehicleid] != 60605) {
			new engine, lights, alarm, doors, bonnet, boot, objective;
	        GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	        SetVehicleParamsEx(vehicleid, engine, lights, VEHICLE_PARAMS_OFF, doors, bonnet, boot, objective);
	    }
	    CarEnter(playerid, vehicleid);
        if(GetPVarInt(playerid, "loader_bags_in_hands")) {
            SCM(playerid, COLOR_ERROR, "√Ç√ª √≥√∞√Æ√≠√®√´√® √£√∞√≥√ß");
            RemovePlayerAttachedObject(playerid, 2);
            TogglePlayerControllable(playerid, 1);
            SetPlayerSpecialAction(playerid, 0);
            SetPlayerCheckpoint(playerid, 2222.4976,-2278.0466,13.5469, 2.0);
            ApplyAnimation(playerid, "PED", "IDLE_tired", 4.1, 0, 1, 1, 0, 1);
            DeletePVar(playerid, "loader_bags_in_hands");
        }
	}
	if(newstate == PLAYER_STATE_PASSENGER) {
		switch(GetPlayerWeapon(playerid)) { case 24, 26, 28..31, 33: SetPlayerArmedWeapon(playerid, 0); }
		if(bus_driverid[vehicleid] != INVALID_PLAYER_ID) bus_passengers[vehicleid] ++;
		if(vehicleid >= veh_taxi[0] && vehicleid <= veh_taxi[1])
		{
			new tid;

			foreach(new i:Player)
			{
				if(vehicleid != GetPlayerVehicleID(i)) continue;
				if(GetPlayerState(i) != PLAYER_STATE_DRIVER) continue;
				tid = i;
				break;
			}

			if(taxi_type[tid] == 1)
			{
				if(pData[playerid][pCash] < taxi_tarif[tid])
				{
					RemovePlayerFromVehicle(playerid);
					return SCM(playerid, COLOR_ERROR, "√ì √Ç√†√± √Æ√≤√±√≥√≤√±√≤√¢√≥√æ√≤ √±√∞√•√§√±√≤√¢√† √§√´√ø √Æ√Ø√´√†√≤√ª √≤√†√∞√®√¥√†");
				}

				Hook_GivePlayerMoney(playerid, -taxi_tarif[tid]);
				format(string, 32, "~r~-%d$ ~n~~b~ +30 sec", taxi_tarif[tid]);
				GameTextForPlayer(playerid, string, 2000, 1);
				format(string, 32, "~g~+%d$", taxi_tarif[tid]);
				GameTextForPlayer(tid, string, 2000, 1);
				taxi_payday[tid] += taxi_tarif[tid];
				timer_taxipas[playerid] = SetTimerEx("tariff_taxi", 30000, 1, "dd", playerid, tid);
	
				SCMF(playerid, COLOR_BLUE, "√Ç√ª √±√•√´√® √¢ √≤√†√™√±√® %s. √í√†√∞√®√¥: %d$ (√Æ√Ø√´√†√≤√† √ß√† √™√†√¶√§√ª√• 30 √±√•√™√≥√≠√§ La carretera√™√®)", GetName(tid), taxi_tarif[tid]);
				SCMF(tid, COLOR_BLUE, "%s √±√•√´ √¢ √Ç√†√∏√• √≤√†√™√±√®", GetName(playerid));
			}
			taxi_passengers[tid] ++;
			passenger_taxien[playerid] = true;

			SetPVarInt(playerid, "driver_taxi", tid);
		}
	}
	if(newstate == PLAYER_STATE_ONFOOT) {
		if(GetPVarInt(playerid, "ShowSpeed")) {
			DeletePVar(playerid, "fuelisshow");
			if(pData[playerid][p_setting][5] == 1) {
				for(new i = 0; i < 14; i ++) {
					if(i < 7) PlayerTextDrawDestroy(playerid, new_player_speedTD[playerid][i]);
					TextDrawHideForPlayer(playerid, new_global_speedTD[i]);
				}
			}
			else if(pData[playerid][p_setting][5] == 2) {
				for(new i = 0; i < 7; i ++) {
					if(i < 6) PlayerTextDrawHide(playerid, speed_playertd[playerid][i]);
					TextDrawHideForPlayer(playerid, speed_global[i]);
				}
				PlayerTextDrawHide(playerid, al_indichome[playerid]);
			}
			DeletePVar(playerid,"ShowSpeed");
			DeletePVar(playerid, "fuelisshow");
		}
		if(GetPVarInt(playerid, "TalkingLivels") == 2) {
			SCM(playerid, COLOR_BLUE, "√ù√¥√®√∞ √ß√†√¢√•√∞√∏¬∏√≠");
			SCM(GetPVarInt(playerid, "TalkingLivels"), COLOR_BLUE, "√ù√¥√®√∞ √ß√†√¢√•√∞√∏¬∏√≠");
			TogglePlayerControllable(playerid, true);
			TogglePlayerControllable(GetPVarInt(playerid, "TalkingLivels"), 1);
			SetPVarInt(GetPVarInt(playerid, "TalkingLivels"), "TalkingLivels", 999);
			SetPVarInt(playerid, "TalkingLivels", 999);
		}
	}
    if(oldstate == PLAYER_STATE_DRIVER) {
    	
    	if(af_carID[playerid] != 0) {
			TogglePlayerAllDynamicCPs(playerid, 1);
			DisablePlayerCheckpoint(playerid);
		}
		if(player_gameveh[playerid] != INVALID_VEHICLE_ID && 
			house_carid[playerid][0] != player_gameveh[playerid] && 
			house_carid[playerid][1] != player_gameveh[playerid] && 
			house_carid[playerid][2] != player_gameveh[playerid]) {
			DestroyVehicle(player_gameveh[playerid]);
	        player_gameveh[playerid] = INVALID_VEHICLE_ID;
		}
	    if(inadmcar[playerid] != INVALID_VEHICLE_ID && 
			house_carid[playerid][0] != inadmcar[playerid] && 
			house_carid[playerid][1] != inadmcar[playerid] && 
			house_carid[playerid][2] != inadmcar[playerid]) {
	        DestroyVehicle(inadmcar[playerid]);
	        inadmcar[playerid] = INVALID_VEHICLE_ID;
	    }
	}
	return 1;
}

public OnPlayerLeaveDynamicCP(playerid, checkpointid)
{
	return 1;
}

public OnPlayerExitVehicle(playerid, vehicleid) {

	if(bloody_en[playerid]) {
		SetPlayerInterior(playerid, 0); SetPlayerVirtualWorld(playerid, 0);
		TogglePlayerControllable(playerid, 1);
		SetPlayerPos(playerid, 2690.8135, -1704.8428, 11.2370);
		SetPlayerFacingAngle(playerid, 45);
		bloody_players --;
		DisablePlayerRaceCheckpoint(playerid);
		bloody_en[playerid] = false;
        format(string, 128, "[√ä√∞√Æ√¢√†√¢√Æ√• √™√Æ√´√º√∂√Æ] "CBLUE"%s √Ø√Æ√™√®√≠√≥√´ √®√£√∞√≥ (√¢√ª√∏√•√´ √®√ß √¨√†√∏√®√≠√ª)", GetName(playerid));
        send_bloodring_mes(COLOR_MAIN, string);
        if(bloody_players == 1) {
            new id_bloodywinner = -1;
            foreach(new i:Player) {
            	if(!bloody_en[i]) continue;
            	id_bloodywinner = i;
            	break;
            }
            if(id_bloodywinner != -1 && timer_bloody == 0) {
                bloody_players --;
                new ubet_players, bloody_winmoney = bet_bloody[id_bloodywinner] * 3 / 2;
                foreach(new i:Player) {
                	if(!bet_bloody[i]) continue;
                	if(i == playerid) continue;
                	ubet_players = bet_bloody[i] / 2;
                	bloody_winmoney += ubet_players;
                }
                SCM(id_bloodywinner, COLOR_MAIN, "[√ä√∞√Æ√¢√†√¢√Æ√• √™√Æ√´√º√∂√Æ] "CBLUE"√è√Æ√ß√§√∞√†√¢√´√ø√•√¨ √Ç√†√± √± √Ø√Æ√°√•√§√Æ√©");
                SCMF(id_bloodywinner, COLOR_MAIN, "[√ä√∞√Æ√¢√†√¢√Æ√• √™√Æ√´√º√∂√Æ] "CBLUE"√Ç√†√∏ √Ø√∞√®√ß: {00cc00}%d$", bloody_winmoney);
                Hook_GivePlayerMoney(id_bloodywinner, bloody_winmoney);
                new gametext_hook[50]; format(gametext_hook, 50, "~g~+%d$", bloody_winmoney);
				GameTextForPlayer(id_bloodywinner, gametext_hook, 3000, 1);
                SetPlayerInterior(id_bloodywinner, 0); SetPlayerVirtualWorld(id_bloodywinner, 0);
                TogglePlayerControllable(id_bloodywinner, 1);
                SetPlayerPos(id_bloodywinner, 2690.8135, -1704.8428, 11.2370);
                SetPlayerFacingAngle(id_bloodywinner, 45);
                TextDrawHideForPlayer(id_bloodywinner, wait_bloodyst);
                DisablePlayerRaceCheckpoint(id_bloodywinner);
                bet_bloody[id_bloodywinner] = 0;
                SetCameraBehindPlayer(id_bloodywinner);
                PlayerTextDrawHide(id_bloodywinner, td_playerbloody[id_bloodywinner]);
                timer_plbloody[id_bloodywinner] = -1;
                SetPlayerColor(id_bloodywinner, FractionInfo[pData[id_bloodywinner][pMember]][fColor]);
                bloody_en[id_bloodywinner] = false;
                if(GetPlayerVehicleID(id_bloodywinner) >= bloody_car[1] && GetPlayerVehicleID(id_bloodywinner) <= bloody_car[60]) DestroyVehicle(GetPlayerVehicleID(id_bloodywinner));
                TextDrawHideForPlayer(id_bloodywinner, usebox_playerbloody);
            }
        }
		if(bloody_players <= 1 && timer_bloody == 0) {
			start_bloodyring = false, bloody_players = 0;
			foreach(new i:Player) {
				if(!bloody_en[i]) continue;
				DisablePlayerRaceCheckpoint(i);
				bloody_en[i] = false; 
			}
			foreach(new i:Player) bet_bloody[i] = 0;
			DestroyPickup(repair_bloody_1); DestroyDynamicArea(repair_bloody);
			KillTimer(reppictime); timer_bloody = 0; timebreakc_bloody = 0; breakblood_time = 0;
			for(new i = 0, ps = GetVehiclePoolSize(); i <= ps; i++) if(i >= bloody_car[1] && i <= bloody_car[60]) DestroyVehicle(i);
		}
		TextDrawHideForPlayer(playerid, wait_bloodyst);
		SetPlayerFacingAngle(playerid, 15.0);
		SetCameraBehindPlayer(playerid);
		PlayerTextDrawHide(playerid, td_playerbloody[playerid]);
		timer_plbloody[playerid] = -1;
		SetPlayerColor(playerid, FractionInfo[pData[playerid][pMember]][fColor]);
		if(GetPlayerVehicleID(playerid) >= bloody_car[1] && GetPlayerVehicleID(playerid) <= bloody_car[60]) DestroyVehicle(GetPlayerVehicleID(playerid));
		TextDrawHideForPlayer(playerid, usebox_playerbloody);
	}

	if(passenger_taxien[playerid]) KillTimer(timer_taxipas[playerid]), DeletePVar(playerid, "driver_taxi"), passenger_taxien[playerid] = false;
	if(prodworker_status[playerid] && vehicleid >= prodworker[0] && vehicleid <= prodworker[1]) {
		SetPVarInt(playerid, "time_workerexit", 30);
		SCM(playerid, COLOR_ERROR, "√ì √Ç√†√± √•√±√≤√º "CPALEGREEN"30 √±√•√™√≥√≠√§ "CERROR"√∑√≤√Æ√°√ª √¢√•√∞√≠√≥√≤√º√±√ø √¢ √£√∞√≥√ß√Æ√¢√Æ√© √†√¢√≤√Æ√¨√Æ√°√®√´√º");
	}
	if(player_is_drivebus[playerid] && vehicleid >= veh_bus[0] && vehicleid <= veh_bus[1]) {
		SetPVarInt(playerid, "time_busexit", 30);
		SCM(playerid, COLOR_ERROR, "√ì √Ç√†√± √•√±√≤√º "CPALEGREEN"30 √±√•√™√≥√≠√§ "CERROR"√∑√≤√Æ√°√ª √¢√•√∞√≠√≥√≤√º√±√ø √¢ √†√¢√≤√Æ√°√≥√±");
	}
	if(player_is_taxi[playerid] && vehicleid >= veh_taxi[0] && vehicleid <= veh_taxi[1]) {
		SetPVarInt(playerid, "time_taxiexit", 30);
		SCM(playerid, COLOR_ERROR, "√ì √Ç√†√± √•√±√≤√º "CPALEGREEN"30 √±√•√™√≥√≠√§ "CERROR"√∑√≤√Æ√°√ª √¢√•√∞√≠√≥√≤√º√±√ø √¢ √†√¢√≤√Æ√¨√Æ√°√®√´√º");
	}
	return 1;
}

CB: check_banks(playerid, number_banks) {
	new rows, name_banks[32], banks_owner[24], balance_banks;
	cache_get_row_count(rows);
	cache_get_value_name(0, "NAME", name_banks);
	cache_get_value_name(0, "OWNER", banks_owner);
	cache_get_value_name_int(0, "BALANCE", balance_banks);
	if(!rows) return SCM(playerid, COLOR_LIGHTGREY, "√ë√∑¬∏√≤ √± √≤√†√™√®√¨ √≠√Æ√¨√•√∞√Æ√¨ √≠√• √ß√†√∞√•√£√®√±√≤√∞√®√∞√Æ√¢√†√≠"), SPD(playerid, 348, DIALOG_STYLE_INPUT, ""CLITEBLUE"√è√•√∞√•√¢√Æ√§ √±√∞√•√§√±√≤√¢", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¨√•√∞ √±√∑¬∏√≤√†, √≠√† √™√Æ√≤√Æ√∞√ª√©\n√µ√Æ√≤√®√≤√• √Æ√±√≥√π√•√±√≤√¢√®√≤√º √Ø√•√∞√•√¢√Æ√§ √±√∞√•√§√±√≤√¢:", "S√≠√´√•√•", "Siguiente");
	if(number_banks == _INFO[playerid][NUMBER][GetPVarInt(playerid, "_banklogin")]) return SCM(playerid, COLOR_ERROR, "Usar√≤√• √§√•√©√±√≤√¢√®√• "CMAIN"\"√è√Æ√´√Æ√¶√®√≤√º √§√•√≠√º√£√®\" "CERROR"√§√´√ø √Ø√Æ√Ø√Æ√´√≠√•√≠√®√ø √±√¢√Æ√•√£√Æ √°√†√≠√™√Æ√¢√±√™√Æ√£√Æ √±√∑¬∏√≤√†"),SPD(playerid, 348, DIALOG_STYLE_INPUT, ""CLITEBLUE"√è√•√∞√•√¢√Æ√§ √±√∞√•√§√±√≤√¢", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¨√•√∞ √±√∑¬∏√≤√†, √≠√† √™√Æ√≤√Æ√∞√ª√©\n√µ√Æ√≤√®√≤√• √Æ√±√≥√π√•√±√≤√¢√®√≤√º √Ø√•√∞√•√¢√Æ√§ √±√∞√•√§√±√≤√¢:", "S√≠√´√•√•", "Siguiente");
	format(string, 160, ""CWHITE"√ç√Æ√¨√•√∞ √±√∑√•√≤√†:\t\t\t"CMAIN"%d\n"CWHITE"√ç√†√ß√¢√†√≠√®√• √±√∑√•√≤√†:\t\t"CMAIN"%s\n\n"CWHITE"√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø, √¢√¢√•√§√®√≤√• √±√≥√¨√¨√≥ √Ø√•√∞√•√¢√ÆS√≠ √¢ √Ø√Æ√´√• √≠√®√¶√•:", number_banks, name_banks);
	SetPVarInt(playerid, "numb_bank", number_banks); SetPVarString(playerid, "nme_bank", name_banks); SetPVarString(playerid, "bnks_owner", banks_owner);
	SetPVarInt(playerid, "balance_bnk", balance_banks);
	return SPD(playerid, 3446, DIALOG_STYLE_INPUT, ""CLITEBLUE"√è√•√∞√•√¢√Æ√§ √±√∞√•√§√±√≤√¢", string, "√è√•√∞√•√¢√•√±√≤√®", "Cerrar");
}
CB: check_banks_cs(playerid, number_banks) {
	new rows, name_banks[32], banks_owner[24], balance_banks;
	cache_get_row_count(rows);
	cache_get_value_name(0, "NAME", name_banks);
	cache_get_value_name(0, "OWNER", banks_owner);
	cache_get_value_name_int(0, "BALANCE", balance_banks);
	if(!rows) return SCM(playerid, COLOR_LIGHTGREY, "√ë√∑¬∏√≤ √± √≤√†√™√®√¨ √≠√Æ√¨√•√∞√Æ√¨ √≠√• √ß√†√∞√•√£√®√±√≤√∞√®√∞√Æ√¢√†√≠"), SPD(playerid, 3499, DIALOG_STYLE_INPUT,"{40bf80}√Å√•√ß√≠√†√´√®√∑√≠√ª√© √Ø√•√∞√•√¢√Æ√§",""CWHITE"√É√Æ√±√≥S√≠√∞√±√≤√¢√•√≠√≠√†√ø √™√Æ√¨√®√±√±√®√ø √Ø√•√∞√•√¢√ÆS√≠: {99ff66}1%\n\n"CWHITE"√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø, √¢√¢√•√§√®√≤√• √≠√Æ√¨√•√∞ √°√†√≠√™√Æ√¢√±√™√Æ√£√Æ √±√∑¬∏√≤√†, √≠√† √™√Æ√≤√Æ√∞√ª√©\n√µ√Æ√≤√®√≤√• √Æ√±√≥√π√•√±√≤√¢√®√≤√º √Ø√•√∞√•√¢√Æ√§ √±√∞√•√§√±√≤√¢ √¢ √Ø√Æ√´√• √≠√®√¶√•:", "S√≠√´√•√•","Siguiente");
	format(string, 160, ""CWHITE"√ç√Æ√¨√•√∞ √±√∑√•√≤√†:\t\t\t"CMAIN"%d\n"CWHITE"√ç√†√ß√¢√†√≠√®√• √±√∑√•√≤√†:\t\t"CMAIN"%s\n\n"CWHITE"√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø, √¢√¢√•√§√®√≤√• √±√≥√¨√¨√≥ √Ø√•√∞√•√¢√ÆS√≠ √¢ √Ø√Æ√´√• √≠√®√¶√•:", number_banks, name_banks);
	SetPVarInt(playerid, "numb_bank", number_banks); SetPVarString(playerid, "nme_bank", name_banks); SetPVarString(playerid, "bnks_owner", banks_owner);
	SetPVarInt(playerid, "balance_bnk", balance_banks);
	return SPD(playerid, 3447, DIALOG_STYLE_INPUT, "{40bf80}√Å√•√ß√≠√†√´√®√∑√≠√ª√© √Ø√•√∞√•√¢√Æ√§", string, "√è√•√∞√•√¢√•√±√≤√®", "Cerrar");
}
CB: bank_c_check(playerid) {
	new rows; cache_get_row_count(rows);
	if(rows >= 10) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √±√Æ√ßS√≠√≤√º √°√Æ√´√•√• 10-√≤√® √§√Æ√Ø√Æ√´√≠√®√≤√•√´√º√≠√ª√µ √°√†√≠√™√Æ√¢√±√™√®√µ √±√∑√•√≤√Æ√¢");
	return SPD(playerid, 342, DIALOG_STYLE_INPUT, ""CMAIN"√é√≤√™√∞√ª√≤√®√• √≠√Æ√¢√Æ√£√Æ √±√∑√•√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√†√ß√¢√†√≠√®√• √§√´√ø √≠√Æ√¢√Æ√£√Æ √±√∑√•√≤√†: (√¨√†√™√±. √§√´√®√≠√†: 20 √±√®√¨√¢√Æ√´√Æ√¢)", "S√≠√´√•√•", "Cerrar");
}
CB: CheckBanList(playerid) {
	new rows;
	cache_get_row_count(rows);
	string[0] = EOS;
	if(rows) {
		new new_gettime, new_data[16];
		cache_get_value_name_int(0, "UnBanDate", new_gettime);
		format(new_data,sizeof(new_data), "%s",date("%dd.%mm.%yyyy",new_gettime));
		if(new_gettime && new_gettime < gettime()) {
			mysql_format(mysql_Handle, string, 86, "DELETE FROM `banlist` WHERE `Nick` = '%s'",pData[playerid][pName]);
			mysql_tquery(mysql_Handle, string);
		}
		else {
			new data[16], unban_days, admin[24], email[32];
			cache_get_value_name(0, "Admin", admin);
			cache_get_value_name(0, "Date", data);
			cache_get_value_name(0, "Reason", email);
			cache_get_value_name_int(0, "Days", unban_days);
			if(unban_days == 1000) format(string, 130, ""CWHITE"√Ç√†√∏ √†√™√™√†√≥√≠√≤ "CORANGE"%s "CWHITE"√ß√†√°√´√Æ√™√®√∞√Æ√¢√†√≠. √Ç√¢√•√§√®√≤√• {99cc33}/q (/quit)"CWHITE" √∑√≤√Æ√°√ª √¢√ª√©√≤√®.", pData[playerid][pName]);
			else format(string, 300, ""CWHITE"√Ç√†√∏ √†√™√™√†√≥√≠√≤ "CORANGE"%s "CWHITE"√ß√†√°√´√Æ√™√®√∞√Æ√¢√†√≠."CWHITE"\n\n"CWHITE"√ç√®√™ √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√†: %s\n√è√∞√®√∑√®√≠√† √°√´√Æ√™√®√∞√Æ√¢√™√®: %s\nS√≠√≤√† √°√´√Æ√™√®√∞√Æ√¢√™√®: %s\nS√≠√≤√† √∞√†√ß√°√´√Æ√™√®√∞√Æ√¢√™√®: %s\n\n√Ç√¢√•√§√®√≤√• {99cc33}/q (/quit)"CWHITE" √∑√≤√Æ√°√ª √¢√ª√©√≤√®.",pData[playerid][pName],admin,email,data,new_data);
			SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{bbaa00}Normative Role Play", string, "Cerrar", "");
			return Kick(playerid);
		}
	}

	mysql_format(mysql_Handle, string, 190, "SELECT `p_setting_6`, `pModel`, `pMember`, `pChar`, `id`, `pLogOff` FROM `accounts` WHERE `Name` = '%s'", pData[playerid][pName]);
	return mysql_tquery(mysql_Handle, string, "FindPlayerInTable", "d", playerid);
}
CB: UnBan(playerid) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No √¢ √°√†√≠-√´√®√±√≤√•");
	new string_last[24], idacc, query_mysql[80];
	cache_get_value_name(0, "Nick", string_last);
	cache_get_value_name_int(0, "id_acc", idacc);
	if(pData[playerid][pSex] == 1) format(string, 128, "[A] %s[%d] √∞√†√ß√°√†√≠√®√´ √®√£√∞√Æ√™√† "CBLUE"%s "CMAIN"(√†√™√™√†√≥√≠√≤ %d)", pData[playerid][pName], playerid, string_last, idacc);
	else format(string, 128, "[A] %s[%d] √∞√†√ß√°√†√≠√®√´√† √®√£√∞√Æ√™√† "CBLUE"%s "CMAIN"(√†√™√™√†√≥√≠√≤ %d)", pData[playerid][pName], playerid, string_last, idacc);
	AdminMessage(COLOR_GREY, string);
	if(GetPVarInt(playerid, "AdminMessages")) SCM(playerid, COLOR_GREY, string);
	mysql_format(mysql_Handle, query_mysql, sizeof(query_mysql), "DELETE FROM `banlist` WHERE `Nick` = '%s'", string_last);
	mysql_tquery(mysql_Handle, query_mysql);
	new day, month, year, hour, minuite, second;
	getdate(year, month, day);
	gettime(hour, minuite, second);
	FixHour(hour);
	hour = shifthour;
	new data2[22];
	format(data2, 22, "%02d.%02d.%02d √¢ %02d:%02d",day, month, year, hour, minuite);
	string[0] = EOS;
	mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('%s[%d] √∞√†√ß√°√†√≠√®√´ √®√£√∞√Æ√™√† %s (√†√™√™√†√≥√≠√≤ %d)',%d,'%s')", pData[playerid][pName], playerid, string_last,idacc,idacc, data2);
	return mysql_tquery(mysql_Handle, string);
}
public OnPlayerRequestClass(playerid, classid) {
	if(IsPlayerNPC(playerid)) {
		new npcname[MAX_PLAYER_NAME];
		GetPlayerName(playerid,npcname,sizeof(npcname));

		if(!strcmp(npcname, "Andrey_Ringo", true))
		{
	        PutPlayerInVehicle(playerid, train[0], 0);
	        SetPlayerColor(playerid, 0xFFFFFFFF);
	        SetPlayerSkin(playerid, 259);
	 	}
		else if(!strcmp(npcname, "Tony_Barrera", true))
		{
		    PutPlayerInVehicle(playerid, train[1], 0);
		    SetPlayerColor(playerid, 0xFFFFFFFF);
		    SetPlayerSkin(playerid, 259);
		}
		else if(!strcmp(npcname, "El_Capone", true))
		{
		    PutPlayerInVehicle(playerid, train[2], 0);
		    SetPlayerColor(playerid, 0xFFFFFFFF);
		    SetPlayerSkin(playerid, 259);
		}
		return 1;
	}

    if(pData[playerid][pLogin])
    {
        TogglePlayerSpectating(playerid, 1);
        SetSpawnInfo(playerid, 255, pData[playerid][pChar], 1763.2140, -1894.0676, 13.5612, 270, 0,0,0,0,0,0);
        TogglePlayerSpectating(playerid, 0);
        TogglePlayerControllable(playerid, 0);
		SetTimerEx("unfreeze_fix_Spawn", 2000, 0, "i", playerid);
		SpawnPlayer(playerid);
        return 0;
    }
	logining[playerid] = true;

	string[0] = EOS;
	mysql_format(mysql_Handle, string, 70, "SELECT * FROM `banlist` WHERE Nick = '%s'", pData[playerid][pName]);
	mysql_tquery(mysql_Handle, string, "CheckBanList", "d", playerid);
	return 1;
}
stock updatesalarys() {
	new lcn_affection = (maf_zone[5] / MAFIA_ZONES) * 100,
		yak_affection = (maf_zone[6] / MAFIA_ZONES) * 100,
		rus_affection = (maf_zone[14] / MAFIA_ZONES) * 100;

	lcn_salary = 180*maf_zone[5];
	yak_salary = 180*maf_zone[6];
	rus_salary = 180*maf_zone[14];

	new text_str[90];
	format(text_str, sizeof(text_str), "√Ç√´√®√ø√≠√®√• √¨√†√¥√®√®: "CLIGHTBLUE"%i%%\n"CWHITE"√Ñ√Æ√µ√Æ√§√ª: "CMAIN"%i$ √¢ √∑√†√± √≠√† √∑√•√´.", lcn_affection, lcn_salary);
	UpdateDynamic3DTextLabelText(mafia_vi_LCN, -1, text_str);
	format(text_str, sizeof(text_str), "√Ç√´√®√ø√≠√®√• √¨√†√¥√®√®: "CLIGHTBLUE"%i%%\n"CWHITE"√Ñ√Æ√µ√Æ√§√ª: "CMAIN"%i$ √¢ √∑√†√± √≠√† √∑√•√´.", yak_affection, yak_salary);
	UpdateDynamic3DTextLabelText(mafia_vi_YAK, -1, text_str);
	format(text_str, sizeof(text_str), "√Ç√´√®√ø√≠√®√• √¨√†√¥√®√®: "CLIGHTBLUE"%i%%\n"CWHITE"√Ñ√Æ√µ√Æ√§√ª: "CMAIN"%i$ √¢ √∑√†√± √≠√† √∑√•√´.", rus_affection, rus_salary);
	UpdateDynamic3DTextLabelText(mafia_vi_RUS, -1, text_str);
}
stock show_biz_lists(playerid, page, max_page) {
	new fmt_str[220 + 640 + 180 + 8] = ""CWHITE"", title_str[45], status[9],
	last_iter = page * max_page + 1,
    i = last_iter - max_page;
	for(; i < last_iter; i ++) {
		if(i > BIZES) break;
		if(!strcmp(BizInfo[i][bOwner], "None", true)) status = "√±√¢√Æ√°√Æ√§√•√≠";
		else status = "√™√≥√Ø√´√•√≠";
		format(fmt_str, sizeof(fmt_str), "%s¬π%d. %s (%s)\n", fmt_str, i, BizInfo[i][bName], status);
	}
	format(title_str, sizeof(title_str), "{FFCD00}√ë√Ø√®√±√Æ√™ √°√®√ß√≠√•√±√Æ√¢ {bf8040}(%d-%d)", last_iter - max_page, i - 1);
	if(last_iter < BIZES) {
		SetPVarInt(playerid, "prop_2_page", page);
		SPD(playerid, 1162, DIALOG_STYLE_MSGBOX, title_str, fmt_str, "S√≠√´√•√• >>", "Cerrar");
	}
	else SPD(playerid, 0, DIALOG_STYLE_MSGBOX, title_str, fmt_str, "Cerrar", "");
}
stock show_house_lists(playerid, page, max_page) {
    new fmt_str[700 + 35 + 1 + 8] = ""CWHITE"", title_str[45], status[9], 
    last_iter = page * max_page + 1,
    i = last_iter - max_page;
    for(; i < last_iter; i ++) {
        if(i > TOTAL_HOUSE) break;
        if(HouseInfo[i][hOwned]) status = "√ß√†√≠√ø√≤";
        else status = "√±√¢√Æ√°√Æ√§√•√≠";
        format(fmt_str, sizeof(fmt_str), "%s¬π%d - %s\n", fmt_str, i, status);
    }
    format(title_str, sizeof(title_str), "{FFCD00}√ë√Ø√®√±√Æ√™ √§√Æ√¨√Æ√¢ {bf8040}(%d-%d)", last_iter - max_page, i - 1);
    if(last_iter < TOTAL_HOUSE) {
        SetPVarInt(playerid, "prop_1_page", page);
        SPD(playerid, 1161, DIALOG_STYLE_MSGBOX, title_str, fmt_str, "S√≠√´√•√• >>", "Cerrar");
    }
    else SPD(playerid, 0, DIALOG_STYLE_MSGBOX, title_str, fmt_str, "Cerrar", "");
}

stock player_stats(targetid, showid = -1) {

	if(showid == -1) 
		showid = targetid;

	if(!IsPlayerConnected(targetid) || !pData[targetid][pLogin]) 
		return SCM(showid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √≠√• √†√¢√≤√Æ√∞√®√ß√Æ√¢√†√≠");
	new hotel = pData[targetid][pHotel];
	new playerJob = pData[targetid][pJob], house = pData[targetid][pHouse];
	new string_last[70];
	string[0] = EOS;
	format(string_last,70,""CWHITE"√à√¨√ø:\t\t\t\t"CBLUE"%s\n",pData[targetid][pName]);
	strcat(string,string_last);
	format(string_last,70,""CWHITE"√ì√∞√Æ√¢√•√≠√º:\t\t\t%i\n",pData[targetid][pLevel]);
	strcat(string,string_last);
	format(string_last,70,""CWHITE"√é√∑√™√® √Æ√Ø√ª√≤√†:\t\t\t%d √®√ß %d\n",pData[targetid][pExp],get_max_exp(pData[targetid][pLevel]));
	strcat(string,string_last);
	if(pData[targetid][pPnumber] != -1) format(string_last,70,""CWHITE"√ç√Æ√¨√•√∞ √≤√•√´√•√¥√Æ√≠√†:\t\t%i\n",pData[targetid][pPnumber]);
	else format(string_last,70,""CWHITE"√ç√Æ√¨√•√∞ √≤√•√´√•√¥√Æ√≠√†:\t\tNo\n");
	strcat(string,string_last);
	format(string_last,70,""CWHITE"√ç√† √±√∑√•√≤√≥ √≤√•√´√•√¥√Æ√≠√†:\t\t%i$\n",pData[targetid][pCashNumber]);
	strcat(string,string_last);
	format(string_last,70,""CWHITE"√á√†√™√Æ√≠√Æ√Ø√Æ√±√´√≥√∏√≠√Æ√±√≤√º:\t\t%i √•√§\n",pData[targetid][pZakonp]);
	strcat(string,string_last);
	format(string_last,70,""CWHITE"√ë√®√´√†:\t\t\t\t%i √•√§\n",pData[targetid][p_strengh]);
	strcat(string,string_last);
	if(pData[targetid][pWarns] != 0) {
		format(string_last,70,""CWHITE"√è√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√ø:\t\t%i\n",pData[targetid][pWarns]);
		strcat(string,string_last);
	}
	format(string_last,70,""CWHITE"√ì√∞√Æ√¢√•√≠√º √∞√Æ√ß√ª√±√™√†:\t\t%i\n",pData[targetid][pWanted]);
	strcat(string,string_last);
	format(string_last,70,""CWHITE"√è√†√≤√∞√Æ√≠√ª:\t\t\t%i √∏√≤\n",pData[targetid][pPatr]);
	strcat(string,string_last);
	format(string_last,70,""CWHITE"√ç√†√∞√™√Æ√≤√®√™√®:\t\t\t%i √£√∞\n",pData[targetid][pDrugs]);
	strcat(string,string_last);
	format(string_last,70,""CWHITE"√å√•√≤√†√´√´:\t\t\t%i √™√£\n",pData[targetid][pMetal]);
	strcat(string,string_last);
	format(string_last,70,""CWHITE"√Ä√Ø√≤√•√∑√™√®:\t\t\t%i √∏√≤\n",pData[targetid][pAptech]);
	strcat(string,string_last);
	format(string_last,70,""CWHITE"√å√†√±√™√®:\t\t\t\t%i √∏√≤\n",pData[targetid][pMasks]);
	strcat(string,string_last);
	format(string_last,70,""CWHITE"√è√Æ√´:\t\t\t\t%s\n",(pData[targetid][pSex] == 1 ? ("√å√≥√¶√±√™√Æ√©") : ("√Ü√•√≠√±√™√®√©")));
	strcat(string,string_last);
	if(pData[targetid][pSex] == 2) {
		if(!strcmp(pData[targetid][pFamilyName],"None", true)) format(string_last,70,""CWHITE"√á√†√¨√≥√¶√•√¨ √ß√†:\t\t\tNo\n\n");
		else format(string_last,70,""CWHITE"√á√†√¨√≥√¶√•√¨ √ß√†:\t\t\t%s\n\n",pData[targetid][pFamilyName]);
	}
	else {
		if(!strcmp(pData[targetid][pFamilyName],"None", true)) format(string_last,70,""CWHITE"√Ü√•√≠√†√≤ √≠√†:\t\t\tNo\n\n");
		else format(string_last,70,""CWHITE"√Ü√•√≠√†√≤ √≠√†:\t\t\t%s\n\n",pData[targetid][pFamilyName]);
	}
	strcat(string,string_last);
	if(pData[targetid][pMember] == 1 ||  pData[targetid][pMember] == 2 || pData[targetid][pMember] == 10 || pData[targetid][pMember] == 21) {
		format(string_last,70,""CWHITE"√é√∞√£√†√≠√®√ß√†√∂√®√ø:\t\t\t√å√®√≠√®√±√≤√•√∞√±√≤√¢√Æ √¢√≠√≥√≤√∞√•√≠√≠√®√µ √§√•√´\n");
		strcat(string,string_last);
		format(string_last,70,""CWHITE"√è√Æ√§√∞√†√ß√§√•√´√•√≠√®√•:\t\t%s\n",GetMember[pData[targetid][pMember] - 1]);
		strcat(string,string_last);
		format(string_last,70,""CWHITE"√Ñ√Æ√´√¶√≠√Æ√±√≤√º / √∞√†√≠√£:\t\t%s (%d √∞√†√≠√£)\n",new_rank_name[pData[targetid][pMember] - 1][pData[targetid][pRank] - 1], pData[targetid][pRank]);
		strcat(string,string_last);
	}
	else if(pData[targetid][pMember] == 4 || pData[targetid][pMember] == 28 || pData[targetid][pMember] == 29) {
		format(string_last,70,""CWHITE"√é√∞√£√†√≠√®√ß√†√∂√®√ø:\t\t\t√å√®√≠√®√±√≤√•√∞√±√≤√¢√Æ √ß√§√∞√†√¢√Æ√Æ√µ√∞√†√≠√•√≠√®√ø\n");
		strcat(string,string_last);
		format(string_last,70,""CWHITE"√è√Æ√§√∞√†√ß√§√•√´√•√≠√®√•:\t\t%s\n",GetMember[pData[targetid][pMember] - 1]);
		strcat(string,string_last);
		format(string_last,70,""CWHITE"√Ñ√Æ√´√¶√≠√Æ√±√≤√º / √∞√†√≠√£:\t\t%s (%d √∞√†√≠√£)\n",new_rank_name[pData[targetid][pMember] - 1][pData[targetid][pRank] - 1], pData[targetid][pRank]);
		strcat(string,string_last);
	}
	else if(pData[targetid][pMember] == 7 || pData[targetid][pMember] == 8 || pData[targetid][pMember] == 9) {
		format(string_last,70,""CWHITE"√é√∞√£√†√≠√®√ß√†√∂√®√ø:\t\t\tAdministraci√≥n residente\n");
		strcat(string,string_last);
		format(string_last,70,""CWHITE"√è√Æ√§√∞√†√ß√§√•√´√•√≠√®√•:\t\t%s\n",GetMember[pData[targetid][pMember] - 1]);
		strcat(string,string_last);
		format(string_last,70,""CWHITE"√Ñ√Æ√´√¶√≠√Æ√±√≤√º / √∞√†√≠√£:\t\t%s (%d √∞√†√≠√£)\n",new_rank_name[pData[targetid][pMember] - 1][pData[targetid][pRank] - 1], pData[targetid][pRank]);
		strcat(string,string_last);
	}
	else if(pData[targetid][pMember] == 19 || pData[targetid][pMember] == 20 || pData[targetid][pMember] == 27) {
		format(string_last,70,""CWHITE"√é√∞√£√†√≠√®√ß√†√∂√®√ø:\t\t\t√å√®√≠√®√±√≤√•√∞√±√≤√¢√Æ √Æ√°√Æ√∞√Æ√≠√ª\n");
		strcat(string,string_last);
		format(string_last,70,""CWHITE"√è√Æ√§√∞√†√ß√§√•√´√•√≠√®√•:\t\t%s\n",GetMember[pData[targetid][pMember] - 1]);
		strcat(string,string_last);
		format(string_last,70,""CWHITE"√Ñ√Æ√´√¶√≠√Æ√±√≤√º / √∞√†√≠√£:\t\t%s (%d √∞√†√≠√£)\n",new_rank_name[pData[targetid][pMember] - 1][pData[targetid][pRank] - 1], pData[targetid][pRank]);
		strcat(string,string_last);
	}
	else {
		if(pData[targetid][pMember] == 0) {
			format(string_last,70,""CWHITE"√é√∞√£√†√≠√®√ß√†√∂√®√ø:\t\t\tNo\n");
			strcat(string,string_last);
			format(string_last,70,""CWHITE"√Ñ√Æ√´√¶√≠√Æ√±√≤√º / √∞√†√≠√£:\t\t‚Äî\n");
			strcat(string,string_last);
		}
		else {
			format(string_last,70,""CWHITE"√é√∞√£√†√≠√®√ß√†√∂√®√ø:\t\t\t%s\n",GetMember[pData[targetid][pMember] - 1]);
			strcat(string,string_last);
			format(string_last,70,""CWHITE"√è√Æ√§√∞√†√ß√§√•√´√•√≠√®√•:\t\tNo\n");
			strcat(string,string_last);
			format(string_last,70,""CWHITE"√Ñ√Æ√´√¶√≠√Æ√±√≤√º / √∞√†√≠√£:\t\t%s (%d √∞√†√≠√£)\n",new_rank_name[pData[targetid][pMember] - 1][pData[targetid][pRank] - 1], pData[targetid][pRank]);
			strcat(string,string_last);
		}
	}
	format(string_last,70,""CWHITE"√ê√†√°√Æ√≤√†:\t\t\t%s\n\n",GetJobName(playerJob));
	strcat(string,string_last);
	if(hotel != -1) format(string_last,70,""CWHITE"√è√∞√Æ√¶√®√¢√†√≠√®√•:\t\t\t√ç√Æ√¨√•√∞ %d √≠√† %d √Ω√≤√†√¶√•\n", get_orig_num_hotel(hotel), hotel_info[hotel][hotel_floor]), strcat(string,string_last);
	else if(pData[targetid][pFlat] != -1) format(string_last,70,""CWHITE"√è√∞√Æ√¶√®√¢√†√≠√®√•:\t\t\t√ä√¢√†√∞√≤√®√∞√† ¬π%d\n", pData[targetid][pFlat]), strcat(string,string_last);
	else if(pData[targetid][p_rent_flat] != -1) format(string_last,70,""CWHITE"√è√∞√Æ√¶√®√¢√†√≠√®√•:\t\t\t√ä√¢√†√∞√≤√®√∞√† ¬π%d (√†√∞√•√≠S√≠)\n", pData[targetid][p_rent_flat]), strcat(string,string_last);
	else if(house != -1) format(string_last,70,""CWHITE"√è√∞√Æ√¶√®√¢√†√≠√®√•:\t\t\t√Ñ√Æ√¨ ¬π%d. %s √™√´√†√±√±\n", house, classhome_names[HouseInfo[house][hKlass]]), strcat(string,string_last);
	else strcat(string, ""CWHITE"√è√∞√Æ√¶√®√¢√†√≠√®√•:\t\t\t√Å√•√ß√§√Æ√¨√≠√ª√©\n");
	if(pData[targetid][pBusiness] != -1) format(string_last,70,""CWHITE"√Å√®√ß√≠√•√±:\t\t\t%s\n",BizInfo[pData[targetid][pBusiness]][bName]);
	else if(pData[targetid][pFilling] != -1) format(string_last,70,""CWHITE"√Ä√á√ë:\t\t\t\t%s\n", Filling[pData[targetid][pFilling]][ffName]);
	else if(pData[targetid][autoHave] != 0) format(string_last,70,""CWHITE"√Å√®√ß√≠√•√±:\t\t\t√Ä√¢√≤√Æ√¨√Æ√°√®√´√º√≠√†√ø √¥√†√°√∞√®√™√†\n");
	else if(pData[targetid][unikauto_Have] != 0) format(string_last,70,""CWHITE"√Å√®√ß√≠√•√±:\t\t\t√Ä√¢√≤√Æ√±√†√´√Æ√≠ √Ω√™√±√™√´√æ√ß√®√¢√≠√ª√µ √†√¢√≤√Æ\n");
	else if(pData[targetid][food_have] != 0) format(string_last,70,""CWHITE"√Å√®√ß√≠√•√±:\t\t\t√ã√†√∞√•√™ √± √•√§√Æ√©\n");
	else if(pData[targetid][kiosk_have] != 0) format(string_last,70,""CWHITE"√Å√®√ß√≠√•√±:\t\t\t√ä√®√Æ√±√™\n");
	else if(pData[targetid][prok_have] != 0) format(string_last,70,""CWHITE"√Å√®√ß√≠√•√±:\t\t\t√è√≥√≠√™√≤ √Ø√∞√Æ√™√†√≤√†\n");
	else format(string_last,70,""CWHITE"√Å√®√ß√≠√•√± / √Ä√á√ë:\t\t\tNo\n");
	strcat(string,string_last);
	if(pData[targetid][p_premium]) strcat(string,""CWHITE"√à√£√∞√Æ√¢√Æ√© √±√≤√†√≤√≥√±:\t\t{0499da}√è√∞√•√¨√®√≥√¨\n");
	else if(pData[targetid][pLeader] >= 1) strcat(string,""CWHITE"√à√£√∞√Æ√¢√Æ√© √±√≤√†√≤√≥√±:\t\t√ã√®√§√•√∞\n");
	else {
		new statuspl[15];
		switch(pData[targetid][pLevel]) {
		    case 1..5: statuspl = "√ç√Æ√¢√®√∑√Æ√™";
		    case 6..9: statuspl = "√ê√†√ß√¢√®√¢√†√æ√π√®√©√±√ø";
		    case 10..14: statuspl = "√é√±√¢√Æ√®√¢√∏√®√©√±√ø";
		    case 15..19: statuspl = "√é√Ø√ª√≤√≠√ª√© √®√£√∞√Æ√™";
		    case 20..29: statuspl = "√Ä√™√≤√®√¢√≠√ª√© √®√£√∞√Æ√™";
		    default: statuspl = "√ã√•√£√•√≠S√≠√∞√≠√ª√©";
		}
		format(string_last,70,""CWHITE"√à√£√∞√Æ√¢√Æ√© √±√≤√†√≤√≥√±:\t\t%s\n",statuspl);
		strcat(string,string_last);
	}

	return SPD(showid, 0, DIALOG_STYLE_MSGBOX, ""CPALEGREEN"√ë√≤√†√≤√®√±√≤√®√™√† √®√£√∞√Æ√™√†", string, "Cerrar", "");
}
CB: load_instrument() {
	new rows;
	cache_get_row_count(rows);
	if(!rows) return print("√ù√™√Æ√≠√Æ√¨√®√™√† √≠√• √ß√†√£√∞√≥√¶√•√≠√†"), mysql_tquery(mysql_Handle, "SELECT * FROM `bank_orgs`", "load_orgbanks", "");
	new time = GetTickCount();
	cache_get_value_name_int(0, "business_nalog", Business_Nalog);
	cache_get_value_name_int(0, "gos_nalog", Gos_Nalog[0]);
	cache_get_value_name_int(0, "gos_kazna", Gos_Nalog[1]);
	if(Gos_Nalog[1] > 800000000 || Gos_Nalog[1] < 0) Gos_Nalog[1] = ((Gos_Nalog[1] > 800000000) ? (800000000) : (0)), SaveInstrument();
	printf("√ù√™√Æ√≠√Æ√¨√®√™√† √ß√†√£√∞√≥√¶√•√≠√† [%d √¨√±]", GetTickCount() - time);

	return mysql_tquery(mysql_Handle, "SELECT * FROM `bank_orgs`", "load_orgbanks", "");
}
CB: load_orgbanks() {
	new rows, time = GetTickCount(); cache_get_row_count(rows);
	for(new ob; ob < rows; ob ++) {
		cache_get_value_name_int(ob, "balance", org_bank[ob + 1][o_money]);
		cache_get_value_name_bool(ob, "status", org_bank[ob + 1][o_status]);
	} printf("√Å√†√≠√™√® √Æ√∞√£√†√≠√®√ß√†√∂√®√© √ß√†√£√∞√≥√¶√•√≠√ª [%d √¨√±]", GetTickCount() - time);
	mysql_tquery(mysql_Handle, "SELECT * FROM `materials_org`", "load_orgmaterials", "");
}
CB: load_orgmaterials() {
	new rows, time = GetTickCount(); cache_get_row_count(rows);
	for(new ob; ob < rows; ob ++) {
		cache_get_value_name_int(ob, "count_ammo", org_ammo[ob + 1]);
		cache_get_value_name_int(ob, "count_materials", org_materials[ob + 1]);
		cache_get_value_name_int(ob, "count_drugs", org_drugs[ob + 1]);
	}
	printf("√ë√™√´√†√§√ª √°√†√≠√§ √ß√†√£√∞√≥√¶√•√≠√ª [%d √¨√±]", GetTickCount() - time);
	mysql_tquery(mysql_Handle, "SELECT * FROM `billboards`", "load_billboards", "");
}
CB: load_billboards() {
	new rows; cache_get_row_count(rows);
	if(!rows) return print("√Å√®√´√°√Æ√∞√§√ª √≠√• √≠√†√©√§√•√≠√ª"), mysql_tquery(mysql_Handle, "SELECT * FROM `filling`","LoadFilling","");
	new time = GetTickCount(), b_num_str[100] = "√ê√•√™√´√†√¨√≠√ª√© √°√†√≠√≠√•√∞\n√Ä√∞√•√≠S√≠ - GPS 8-62",
	b_num_str_LV[100] = "√ê√•√™√´√†√¨√≠√ª√© √°√†√≠√≠√•√∞\n√Ä√∞√•√≠S√≠ - GPS 8-63",
	b_num_str_SF[100] = "√ê√•√™√´√†√¨√≠√ª√© √°√†√≠√≠√•√∞\n√Ä√∞√•√≠S√≠ - GPS 8-64";
	for(new bs; bs < rows; bs ++) {
		cache_get_value_name_int(bs, "bs_id", billboard_info[bs + 1][bs_id]);
		cache_get_value_name(bs, "bs_name", billboard_info[bs + 1][bs_name]);
		cache_get_value_name(bs, "bs_renter", billboard_info[bs + 1][bs_renter]);
		cache_get_value_name_int(bs, "bs_rental_days", billboard_info[bs + 1][bs_rental_days]);
		cache_get_value_name(bs, "bs_text", billboard_info[bs + 1][bs_text]);
		cache_get_value_name_float(bs, "bs_cordX", billboard_info[bs + 1][bs_cord][0]);
		cache_get_value_name_float(bs, "bs_cordY", billboard_info[bs + 1][bs_cord][1]);
		cache_get_value_name_float(bs, "bs_cordZ", billboard_info[bs + 1][bs_cord][2]);
		cache_get_value_name_float(bs, "bs_cordA", billboard_info[bs + 1][bs_cord][3]);
		billboard_obj[bs + 1] = CreateObject(7606, billboard_info[bs + 1][bs_cord][0], billboard_info[bs + 1][bs_cord][1], billboard_info[bs + 1][bs_cord][2], 0.0, 0.0, billboard_info[bs + 1][bs_cord][3]);
		if(!strcmp(billboard_info[bs + 1][bs_renter], "None")) {
			if(billboard_info[bs + 1][bs_id] <= 10) SetObjectMaterialText(billboard_obj[bs + 1], b_num_str, 0, 130, "Arial", 48, 0, 0xFFFFFFFF, 0x131114, 1);
			else if(billboard_info[bs + 1][bs_id] <= 20) SetObjectMaterialText(billboard_obj[bs + 1], b_num_str_LV, 0, 130, "Arial", 48, 0, 0xFFFFFFFF, 0x131114, 1);
			else if(billboard_info[bs + 1][bs_id] <= 30) SetObjectMaterialText(billboard_obj[bs + 1], b_num_str_SF, 0, 130, "Arial", 48, 0, 0xFFFFFFFF, 0x131114, 1);
		}
		else {
			new br_str[122];
			if(!strcmp(billboard_info[bs + 1][bs_text], "None")) br_str = "";
			else {
				format(br_str, 122, "%s", billboard_info[bs + 1][bs_text]);
				for(new i = 0; i < 4; i ++) {
					new find = strfind(br_str, "/", true);
					if(find != -1) strdel(br_str, find, find + 1), strins(br_str, "\n", find, find + 2);
				}
				new delother = strfind(br_str, "/", true);
				if(delother != -1) strdel(br_str, delother, 122);
			}
			SetObjectMaterialText(billboard_obj[bs + 1], br_str, 0, 130, "Arial", 48, 0, 0xFFFFFFFF, 0x131114, 1);
		}
	} printf("√Å√®√´√°√Æ√∞√§√ª √ß√†√£√∞√≥√¶√•√≠√ª [%d √∏√≤.] [%d √¨√±]", rows, GetTickCount() - time);
	return mysql_tquery(mysql_Handle, "SELECT * FROM `filling`","LoadFilling","");
}
CB: LoadHouses(bizes_is_free, bizes_is_buyed) {
	cache_get_row_count(TOTAL_HOUSE);

	if(!TOTAL_HOUSE) {
		mysql_tquery(mysql_Handle, "SELECT * FROM `zone`", "LoadGZ","");
		return print("√Ñ√Æ√¨√† √≠√• √ß√†√£√∞√≥√¶√•√≠√ª");
	}

	new time = GetTickCount(), houses_is_free, houses_is_buyed;
	string[0] = EOS;

	for(new he = 0; he < TOTAL_HOUSE; he ++) {
		cache_get_value_name_int(he, "hID", HouseInfo[he + 1][hID]);
		cache_get_value_name_float(he, "hEntrancex", HouseInfo[he + 1][hEnter][0]);
		cache_get_value_name_float(he, "hEntrancey", HouseInfo[he + 1][hEnter][1]);
		cache_get_value_name_float(he, "hEntrancez", HouseInfo[he + 1][hEnter][2]);
		cache_get_value_name_int(he, "hPay", HouseInfo[he + 1][hPay]);
		cache_get_value_name_float(he, "hExitx", HouseInfo[he + 1][hExit][0]);
		cache_get_value_name_float(he, "hExity", HouseInfo[he + 1][hExit][1]);
		cache_get_value_name_float(he, "hExitz", HouseInfo[he + 1][hExit][2]);
		cache_get_value_name(he, "hOwner", HouseInfo[he + 1][hOwner]);
		cache_get_value_name_int(he, "hValue", HouseInfo[he + 1][hValue]);
		cache_get_value_name_int(he, "hInt", HouseInfo[he + 1][hInt]);
		cache_get_value_name_int(he, "hLock", HouseInfo[he + 1][hLock]);
		cache_get_value_name_int(he, "hOwned", HouseInfo[he + 1][hOwned]);
		cache_get_value_name_int(he, "hKlass", HouseInfo[he + 1][hKlass]);
		cache_get_value_name_float(he, "hCarx", HouseInfo[he + 1][hCar][0]);
		cache_get_value_name_float(he, "hCary", HouseInfo[he + 1][hCar][1]);
		cache_get_value_name_float(he, "hCarz", HouseInfo[he + 1][hCar][2]);
		cache_get_value_name_float(he, "hCarc", HouseInfo[he + 1][hCar][3]);
		cache_get_value_name_float(he, "hOrigCarx", HouseInfo[he + 1][hOrigCar][0]);
		cache_get_value_name_float(he, "hOrigCary", HouseInfo[he + 1][hOrigCar][1]);
		cache_get_value_name_float(he, "hOrigCarz", HouseInfo[he + 1][hOrigCar][2]);
		cache_get_value_name_float(he, "hOrigCarc", HouseInfo[he + 1][hOrigCar][3]);
		cache_get_value_name_int(he, "hSafe", HouseInfo[he + 1][hSafe]);
		cache_get_value_name_int(he, "hGun1", HouseInfo[he + 1][hGun][0]);
		cache_get_value_name_int(he, "hGun2", HouseInfo[he + 1][hGun][1]);
		cache_get_value_name_int(he, "hGun3", HouseInfo[he + 1][hGun][2]);
		cache_get_value_name_int(he, "hGun4", HouseInfo[he + 1][hGun][3]);
		cache_get_value_name_int(he, "hGun5", HouseInfo[he + 1][hGun][4]);
		cache_get_value_name_int(he, "hGunAmmo1", HouseInfo[he + 1][hGunAmmo][0]);
		cache_get_value_name_int(he, "hGunAmmo2", HouseInfo[he + 1][hGunAmmo][1]);
		cache_get_value_name_int(he, "hGunAmmo3", HouseInfo[he + 1][hGunAmmo][2]);
		cache_get_value_name_int(he, "hGunAmmo4", HouseInfo[he + 1][hGunAmmo][3]);
		cache_get_value_name_int(he, "hGunAmmo5", HouseInfo[he + 1][hGunAmmo][4]);
		cache_get_value_name_int(he, "hADoor", HouseInfo[he + 1][hADoor]);
		cache_get_value_name_int(he, "hSub", HouseInfo[he + 1][hSub]);
		cache_get_value_name_int(he, "hPool", HouseInfo[he + 1][hPool]);

		if(HouseInfo[he + 1][hADoor]) HouseInfo[he + 1][LabelText] = CreateDynamic3DTextLabel("√Ç√ª√µ√Æ√§ √®√ß √§√Æ√¨√†\n"CMAIN"(√™√´√†√¢√®√∏√† ALT)", COLOR_WHITE,HouseInfo[he + 1][hExit][0],HouseInfo[he + 1][hExit][1],HouseInfo[he + 1][hExit][2]-0.5,9.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,he + 50 + 1,HouseInfo[he+1][hInt]);
		else HouseInfo[he + 1][LabelText] = CreateDynamic3DTextLabel("√Ç√ª√µ√Æ√§ √®√ß √§√Æ√¨√†\n"CMAIN"(√™√Æ√¨√†√≠S√≠ /exit)", COLOR_WHITE,HouseInfo[he + 1][hExit][0],HouseInfo[he + 1][hExit][1],HouseInfo[he + 1][hExit][2]-0.5,9.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,he + 50 + 1,HouseInfo[he + 1][hInt]);

		CreateDynamic3DTextLabel("√Ç√ª√µ√Æ√§ √®√ß √°√†√±√±√•√©√≠√†\n"CMAIN"(√™√´√†√¢√®√∏√† ALT)", COLOR_WHITE, -1051.0314,453.9560,2.0479,9.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,he + 50);
		
		if(!HouseInfo[he + 1][hOwned]) {
			houses_is_free ++;
			HouseInfo[he + 1][hPickup] = CreateDynamicPickup(1273, 23, HouseInfo[he + 1][hEnter][0], HouseInfo[he + 1][hEnter][1], HouseInfo[he + 1][hEnter][2], 0);
			HouseInfo[he + 1][hMIcon] = CreateDynamicMapIcon(HouseInfo[he + 1][hEnter][0], HouseInfo[he + 1][hEnter][1], HouseInfo[he+1][hEnter][2], 31, -1, 0, -1, -1, 200.0);
		}
		else {
			houses_is_buyed ++;
			HouseInfo[he + 1][hPickup] = CreateDynamicPickup(1272, 23, HouseInfo[he + 1][hEnter][0], HouseInfo[he + 1][hEnter][1], HouseInfo[he + 1][hEnter][2], 0);
			HouseInfo[he + 1][hMIcon] = CreateDynamicMapIcon(HouseInfo[he + 1][hEnter][0], HouseInfo[he + 1][hEnter][1], HouseInfo[he + 1][hEnter][2], 32, -1, 0, -1, -1, 200.0);
		}
	}

	new fmt_prop[170];
	format(fmt_prop, sizeof(fmt_prop), "√ç√•√§√¢√®√¶√®√¨√Æ√±√≤√º\n\n"CWHITE"√Ç√±√•√£√Æ √§√Æ√¨√Æ√¢: %d\n{99ff00}√ë√¢√Æ√°√Æ√§√≠√Æ: %d\n"CERROR"√ä√≥√Ø√´√•√≠√Æ: %d\n\n"CWHITE"√Ç√±√•√£√Æ √°√®√ß√≠√•√±√Æ√¢: %d\n{99ff00}√ë√¢√Æ√°√Æ√§√≠√Æ: %d\n"CERROR"√ä√≥√Ø√´√•√≠√Æ: %d", TOTAL_HOUSE, houses_is_free, houses_is_buyed, BIZES, bizes_is_free, bizes_is_buyed);
	UpdateDynamic3DTextLabelText(prop_info, COLOR_LITEBLUE, fmt_prop);
	UpdateDynamic3DTextLabelText(prop_info + Text3D: 1, COLOR_LITEBLUE, fmt_prop);
	
	printf("LoadHouses | √á√†√£√∞√≥√¶√•√≠√Æ %d | %d √¨√±", TOTAL_HOUSE, GetTickCount() - time);

	mysql_tquery(mysql_Handle, "SELECT * FROM `zone`", "LoadGZ","");
	return 1;
}
stock updatetex_home(homenum) {
	DestroyDynamic3DTextLabel(HouseInfo[homenum][LabelText]);
	if(HouseInfo[homenum][hADoor]) HouseInfo[homenum][LabelText] = CreateDynamic3DTextLabel("√Ç√ª√µ√Æ√§ √®√ß √§√Æ√¨√†\n"CMAIN"(√™√´√†√¢√®√∏√† ALT)", COLOR_WHITE,HouseInfo[homenum][hExit][0],HouseInfo[homenum][hExit][1],HouseInfo[homenum][hExit][2]-0.5,9.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,homenum+50,HouseInfo[homenum][hInt]);
	else HouseInfo[homenum][LabelText] = CreateDynamic3DTextLabel("√Ç√ª√µ√Æ√§ √®√ß √§√Æ√¨√†\n"CMAIN"(√™√Æ√¨√†√≠S√≠ /exit)", COLOR_WHITE,HouseInfo[homenum][hExit][0],HouseInfo[homenum][hExit][1],HouseInfo[homenum][hExit][2]-0.5,9.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,homenum+50,HouseInfo[homenum][hInt]);
}
CB: LoadFilling() {
	new name_fowner[24];
	new strfill[430];

	cache_get_row_count(FILLING_TOTAL);

	if(FILLING_TOTAL <= 0) {
		print("[LoadFilling] √à√≠√¥√Æ√∞√¨√†√∂√®√æ √ß√†√£√∞√≥√ß√®√≤√º √≠√• √≥S√≠√´√Æ√±√º");
		return mysql_tquery(mysql_Handle, "SELECT * FROM `ownmebel`", "load_mebel", "");
	}

	for(new i = 0, is = 1; i < FILLING_TOTAL; i ++) {
		cache_get_value_name_int(i, "fPrice", Filling[is][fPrice]);
		cache_get_value_name_bool(i, "fLock", Filling[is][fLock]);
		cache_get_value_name(i, "ffName", Filling[is][ffName]);
		cache_get_value_name(i, "fOwner", Filling[is][fOwner]);
		cache_get_value_name_int(i, "fBankMoney", Filling[is][fBankMoney]);
		cache_get_value_name_int(i, "fBenz", Filling[is][fBenz]);
		cache_get_value_name_int(i, "fMaxBenz", Filling[is][fMaxBenz]);
		cache_get_value_name_int(i, "fPriceBenz", Filling[is][fPriceBenz]);
		cache_get_value_name_float(i, "fPos", Filling[is][fPos][0]);
		cache_get_value_name_float(i, "fPos1", Filling[is][fPos][1]);
		cache_get_value_name_int(i, "fPay", Filling[is][fPay]);
		cache_get_value_name_float(i, "fPos2", Filling[is][fPos][2]);
		if(!strcmp(Filling[is][fOwner], "None", true)) name_fowner = "No";
		else format(name_fowner, 24, Filling[is][fOwner]);
		format(strfill, 302,"%s\n{edffcc}√Ç√´√†√§√•√´√•√∂: {ccd4ff}%s\n{ffd24d}√ç√Æ√¨√•√∞ √ß√†√Ø√∞√†√¢√™√®: "CWHITE"%d\n{edffcc}√ë√≤√†√≤√≥√±: "CWHITE"%s\n{edffcc}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"%i$\n{edffcc}√ñ√•√≠√† √ß√† 1 √´√®√≤√∞ √≤√Æ√Ø√´√®√¢√†: {ccd4ff}%i$\n{edffcc}√ä√≥√Ø√®√≤√º √™√†√≠√®√±√≤√∞√≥: "CWHITE"/fuelcan\n{edffcc}√á√†√Ø√∞√†√¢√®√≤√º√±√ø: "CWHITE"/fill",
			Filling[is][ffName], name_fowner, is, (Filling[is][fLock] ? ("√á√†√™√∞√ª√≤√†") : ("√é√≤√™√∞√ª√≤√†")), Filling[is][fPrice], Filling[is][fPriceBenz]);
		if(!strcmp(Filling[is][fOwner], "None", true)) format(strfill,430,"%s\n{ffd24d}√ä√≥√Ø√®√≤√º √ß√†√Ø√∞√†√¢√™√≥: "CWHITE"/buyfuel", strfill);
		Filling[is][fText] = CreateDynamic3DTextLabel(strfill,-1,Filling[is][fPos][0], Filling[is][fPos][1], Filling[is][fPos][2]+1.0,20);
		CreateDynamicMapIcon(Filling[is][fPos][0], Filling[is][fPos][1], Filling[is][fPos][2], 47, 0);

		switch(is) {
			case 1: {
				fillobj_id[is][0] = CreateDynamicObject(19483, 997.719116, -950.084655, 43.839450, 0.000008, 0.000007, 5.798948, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][1] = CreateDynamicObject(19483, 997.510864, -950.697570, 43.789455, 0.000008, 0.000007, 5.798948, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][2] = CreateDynamicObject(19483, 997.739624, -950.674377, 43.789455, 0.000008, 0.000007, 5.798948, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][3] = CreateDynamicObject(19483, 997.529724, -950.997985, 43.839450, -0.000008, -0.000007, -174.098968, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][4] = CreateDynamicObject(19483, 997.546752, -951.247497, 43.419452, -0.000008, -0.000007, -174.198959, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][5] = CreateDynamicObject(19483, 997.546752, -951.247497, 44.209453, -0.000008, -0.000007, -174.198959, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][6] = CreateDynamicObject(11453, 997.579101, -951.301696, 43.791454, -0.000007, 0.000008, -84.250007, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][7] = CreateDynamicObject(19483, 997.835388, -951.218750, 43.419452, 0.000008, 0.000007, 5.798948, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][8] = CreateDynamicObject(19483, 997.835388, -951.218750, 44.209453, 0.000008, 0.000007, 5.798948, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][9] = CreateDynamicObject(19483, 997.876647, -951.626770, 43.839450, 0.000008, 0.000007, 5.798948, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][10] = CreateDynamicObject(19483, 997.638732, -951.963073, 43.789455, 0.000008, 0.000007, 5.798948, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][11] = CreateDynamicObject(19483, 997.858520, -951.938842, 43.789455, 0.000008, 0.000007, 5.798948, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][12] = CreateDynamicObject(19483, 997.679199, -952.550903, 43.839450, -0.000008, -0.000007, -174.198959, -1, -1, -1, 300.00, 300.00); 
			}
			case 2: {
				fillobj_id[is][0] = CreateDynamicObject(19483, -109.775772, -1175.876586, 4.580311, 0.000007, -0.000000, 61.098979, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][1] = CreateDynamicObject(19483, -109.390441, -1176.396606, 4.530313, 0.000007, -0.000000, 61.098979, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][2] = CreateDynamicObject(19483, -109.279205, -1176.195312, 4.530313, 0.000007, -0.000000, 61.098979, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][3] = CreateDynamicObject(19483, -109.132659, -1176.552124, 4.580311, -0.000007, 0.000000, -118.798988, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][4] = CreateDynamicObject(19483, -108.917823, -1176.680175, 4.160312, -0.000007, 0.000000, -118.898986, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][5] = CreateDynamicObject(19483, -108.917823, -1176.680175, 4.950311, -0.000007, 0.000000, -118.898986, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][6] = CreateDynamicObject(11453, -108.854904, -1176.684448, 4.532313, 0.000000, 0.000007, -28.950012, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][7] = CreateDynamicObject(19483, -108.777175, -1176.426513, 4.160312, 0.000007, -0.000000, 61.098979, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][8] = CreateDynamicObject(19483, -108.777175, -1176.426513, 4.950311, 0.000007, -0.000000, 61.098979, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][9] = CreateDynamicObject(19483, -108.418289, -1176.624877, 4.580311, 0.000007, -0.000000, 61.098979, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][10] = CreateDynamicObject(19483, -108.277183, -1177.011962, 4.530313, 0.000007, -0.000000, 61.098979, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][11] = CreateDynamicObject(19483, -108.172004, -1176.817504, 4.530313, 0.000007, -0.000000, 61.098979, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][12] = CreateDynamicObject(19483, -107.770851, -1177.313232, 4.580311, -0.000007, 0.000000, -118.898986, -1, -1, -1, 300.00, 300.00); 
			}
			case 3: {
				fillobj_id[is][0] = CreateDynamicObject(19483, 2613.281738, 1123.547729, 12.415314, 0.000015, -0.000000, 90.298957, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][1] = CreateDynamicObject(19483, 2613.871826, 1123.281738, 12.365317, 0.000015, -0.000000, 90.298957, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][2] = CreateDynamicObject(19483, 2613.870849, 1123.511718, 12.365317, 0.000015, -0.000000, 90.298957, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][3] = CreateDynamicObject(19483, 2614.172851, 1123.271728, 12.415314, -0.000015, 0.000000, -89.598953, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][4] = CreateDynamicObject(19483, 2614.422851, 1123.264770, 11.995315, -0.000015, 0.000000, -89.698951, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][5] = CreateDynamicObject(19483, 2614.422851, 1123.264770, 12.785314, -0.000015, 0.000000, -89.698951, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][6] = CreateDynamicObject(11453, 2614.479736, 1123.291748, 12.367317, 0.000000, 0.000015, 0.249999, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][7] = CreateDynamicObject(19483, 2614.421875, 1123.554809, 11.995315, 0.000015, -0.000000, 90.298957, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][8] = CreateDynamicObject(19483, 2614.421875, 1123.554809, 12.785314, 0.000015, -0.000000, 90.298957, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][9] = CreateDynamicObject(19483, 2614.831787, 1123.556762, 12.415314, 0.000015, -0.000000, 90.298957, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][10] = CreateDynamicObject(19483, 2615.143798, 1123.287719, 12.365317, 0.000015, -0.000000, 90.298957, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][11] = CreateDynamicObject(19483, 2615.140625, 1123.508789, 12.365317, 0.000015, -0.000000, 90.298957, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][12] = CreateDynamicObject(19483, 2615.732666, 1123.271728, 12.415314, -0.000015, 0.000000, -89.698951, -1, -1, -1, 300.00, 300.00); 
			}
			case 4: {
				fillobj_id[is][0] = CreateDynamicObject(19483, -2256.743164, -2572.194335, 33.907287, 0.000007, -0.000000, 87.898986, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][1] = CreateDynamicObject(19483, -2256.164550, -2572.484863, 33.857292, 0.000007, -0.000000, 87.898986, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][2] = CreateDynamicObject(19483, -2256.156005, -2572.255126, 33.857292, 0.000007, -0.000000, 87.898986, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][3] = CreateDynamicObject(19483, -2255.864257, -2572.507568, 33.907287, -0.000007, 0.000000, -91.998970, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][4] = CreateDynamicObject(19483, -2255.614746, -2572.524902, 33.487289, -0.000007, 0.000000, -92.098968, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][5] = CreateDynamicObject(19483, -2255.614746, -2572.524902, 34.277290, -0.000007, 0.000000, -92.098968, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][6] = CreateDynamicObject(11453, -2255.556640, -2572.500244, 33.859291, 0.000000, 0.000007, -2.149993, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][7] = CreateDynamicObject(19483, -2255.603515, -2572.235107, 33.487289, 0.000007, -0.000000, 87.898986, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][8] = CreateDynamicObject(19483, -2255.603515, -2572.235107, 34.277290, 0.000007, -0.000000, 87.898986, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][9] = CreateDynamicObject(19483, -2255.193847, -2572.250488, 33.907287, 0.000007, -0.000000, 87.898986, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][10] = CreateDynamicObject(19483, -2254.893310, -2572.532226, 33.857292, 0.000007, -0.000000, 87.898986, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][11] = CreateDynamicObject(19483, -2254.887207, -2572.311279, 33.857292, 0.000007, -0.000000, 87.898986, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][12] = CreateDynamicObject(19483, -2254.305664, -2572.572753, 33.907287, -0.000007, 0.000000, -92.098968, -1, -1, -1, 300.00, 300.00); 
			}
			case 5: {
				fillobj_id[is][0] = CreateDynamicObject(19483, 2084.911132, 943.069274, 11.881358, 0.000007, -0.000000, 90.298980, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][1] = CreateDynamicObject(19483, 2085.501220, 942.803283, 11.831360, 0.000007, -0.000000, 90.298980, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][2] = CreateDynamicObject(19483, 2085.500244, 943.033264, 11.831360, 0.000007, -0.000000, 90.298980, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][3] = CreateDynamicObject(19483, 2085.802246, 942.793273, 11.881358, -0.000007, 0.000000, -89.598976, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][4] = CreateDynamicObject(19483, 2086.052246, 942.786315, 11.461359, -0.000007, 0.000000, -89.698974, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][5] = CreateDynamicObject(19483, 2086.052246, 942.786315, 12.251358, -0.000007, 0.000000, -89.698974, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][6] = CreateDynamicObject(11453, 2086.109130, 942.813293, 11.833360, 0.000000, 0.000007, 0.249999, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][7] = CreateDynamicObject(19483, 2086.051269, 943.076354, 11.461359, 0.000007, -0.000000, 90.298980, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][8] = CreateDynamicObject(19483, 2086.051269, 943.076354, 12.251358, 0.000007, -0.000000, 90.298980, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][9] = CreateDynamicObject(19483, 2086.461181, 943.078308, 11.881358, 0.000007, -0.000000, 90.298980, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][10] = CreateDynamicObject(19483, 2086.773193, 942.809265, 11.831360, 0.000007, -0.000000, 90.298980, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][11] = CreateDynamicObject(19483, 2086.770019, 943.030334, 11.831360, 0.000007, -0.000000, 90.298980, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][12] = CreateDynamicObject(19483, 2087.362060, 942.793273, 11.881358, -0.000007, 0.000000, -89.698974, -1, -1, -1, 300.00, 300.00); 
			}
			case 6: {
				fillobj_id[is][0] = CreateDynamicObject(19483, 1950.396972, -1771.707031, 14.885999, 0.000000, 0.000000, 90.299003, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][1] = CreateDynamicObject(19483, 1950.987060, -1771.973022, 14.836000, 0.000000, 0.000000, 90.299003, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][2] = CreateDynamicObject(19483, 1950.985961, -1771.743041, 14.836000, 0.000000, 0.000000, 90.299003, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][3] = CreateDynamicObject(19483, 1951.287963, -1771.983032, 14.885999, 0.000000, 0.000000, -89.598999, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][4] = CreateDynamicObject(19483, 1951.537963, -1771.989990, 14.465999, 0.000000, 0.000000, -89.698997, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][5] = CreateDynamicObject(19483, 1951.537963, -1771.989990, 15.255999, 0.000000, 0.000000, -89.698997, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][6] = CreateDynamicObject(11453, 1951.594970, -1771.963012, 14.838000, 0.000000, 0.000000, 0.250000, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][7] = CreateDynamicObject(19483, 1951.536987, -1771.699951, 14.465999, 0.000000, 0.000000, 90.299003, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][8] = CreateDynamicObject(19483, 1951.536987, -1771.699951, 15.255999, 0.000000, 0.000000, 90.299003, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][9] = CreateDynamicObject(19483, 1951.947021, -1771.697998, 14.885999, 0.000000, 0.000000, 90.299003, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][10] = CreateDynamicObject(19483, 1952.259033, -1771.967041, 14.836000, 0.000000, 0.000000, 90.299003, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][11] = CreateDynamicObject(19483, 1952.255981, -1771.745971, 14.836000, 0.000000, 0.000000, 90.299003, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][12] = CreateDynamicObject(19483, 1952.848022, -1771.983032, 14.885999, 0.000000, 0.000000, -89.698997, -1, -1, -1, 300.00, 300.00); 
			}
			case 7: {
				fillobj_id[is][0] = CreateDynamicObject(19483, 647.965454, -573.289245, 17.416711, 0.000007, -0.000000, 90.298980, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][1] = CreateDynamicObject(19483, 648.555541, -573.555236, 17.366712, 0.000007, -0.000000, 90.298980, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][2] = CreateDynamicObject(19483, 648.554443, -573.325256, 17.366712, 0.000007, -0.000000, 90.298980, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][3] = CreateDynamicObject(19483, 648.856445, -573.565246, 17.416711, -0.000007, 0.000000, -89.598976, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][4] = CreateDynamicObject(19483, 649.106445, -573.572204, 16.996711, -0.000007, 0.000000, -89.698974, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][5] = CreateDynamicObject(19483, 649.106445, -573.572204, 17.786710, -0.000007, 0.000000, -89.698974, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][6] = CreateDynamicObject(11453, 649.163452, -573.545227, 17.368713, 0.000000, 0.000007, 0.249999, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][7] = CreateDynamicObject(19483, 649.105468, -573.282165, 16.996711, 0.000007, -0.000000, 90.298980, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][8] = CreateDynamicObject(19483, 649.105468, -573.282165, 17.786710, 0.000007, -0.000000, 90.298980, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][9] = CreateDynamicObject(19483, 649.515502, -573.280212, 17.416711, 0.000007, -0.000000, 90.298980, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][10] = CreateDynamicObject(19483, 649.827514, -573.549255, 17.366712, 0.000007, -0.000000, 90.298980, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][11] = CreateDynamicObject(19483, 649.824462, -573.328186, 17.366712, 0.000007, -0.000000, 90.298980, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][12] = CreateDynamicObject(19483, 650.416503, -573.565246, 17.416711, -0.000007, 0.000000, -89.698974, -1, -1, -1, 300.00, 300.00); 
			}
			case 8: {
				fillobj_id[is][0] = CreateDynamicObject(19483, 1360.278198, 462.642669, 21.517467, 0.000008, -0.000007, 176.498901, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][1] = CreateDynamicObject(19483, 1360.582763, 463.213867, 21.467468, 0.000008, -0.000007, 176.498901, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][2] = CreateDynamicObject(19483, 1360.353149, 463.227996, 21.467468, 0.000008, -0.000007, 176.498901, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][3] = CreateDynamicObject(19483, 1360.612548, 463.513427, 21.517467, -0.000008, 0.000007, -3.399017, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][4] = CreateDynamicObject(19483, 1360.636108, 463.762420, 21.097467, -0.000008, 0.000007, -3.499014, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][5] = CreateDynamicObject(19483, 1360.636108, 463.762420, 21.887466, -0.000008, 0.000007, -3.499014, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][6] = CreateDynamicObject(11453, 1360.613037, 463.821105, 21.469469, 0.000007, 0.000008, 86.449935, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][7] = CreateDynamicObject(19483, 1360.346801, 463.780670, 21.097467, 0.000008, -0.000007, 176.498901, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][8] = CreateDynamicObject(19483, 1360.346801, 463.780670, 21.887466, 0.000008, -0.000007, 176.498901, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][9] = CreateDynamicObject(19483, 1360.371948, 464.189941, 21.517467, 0.000008, -0.000007, 176.498901, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][10] = CreateDynamicObject(19483, 1360.661132, 464.483428, 21.467468, 0.000008, -0.000007, 176.498901, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][11] = CreateDynamicObject(19483, 1360.440307, 464.495025, 21.467468, 0.000008, -0.000007, 176.498901, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][12] = CreateDynamicObject(19483, 1360.715942, 465.070068, 21.517467, -0.000008, 0.000007, -3.499014, -1, -1, -1, 300.00, 300.00); 
			}
			case 9: {
				fillobj_id[is][0] = CreateDynamicObject(19483, 2188.736816, 2462.957763, 12.336876, 0.000007, -0.000000, 90.298980, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][1] = CreateDynamicObject(19483, 2189.326904, 2462.691894, 12.286879, 0.000007, -0.000000, 90.298980, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][2] = CreateDynamicObject(19483, 2189.325927, 2462.921630, 12.286879, 0.000007, -0.000000, 90.298980, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][3] = CreateDynamicObject(19483, 2189.627929, 2462.681884, 12.336876, -0.000007, 0.000000, -89.598976, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][4] = CreateDynamicObject(19483, 2189.877929, 2462.674804, 11.916877, -0.000007, 0.000000, -89.698974, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][5] = CreateDynamicObject(19483, 2189.877929, 2462.674804, 12.706876, -0.000007, 0.000000, -89.698974, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][6] = CreateDynamicObject(11453, 2189.934814, 2462.701904, 12.288879, 0.000000, 0.000007, 0.249999, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][7] = CreateDynamicObject(19483, 2189.876953, 2462.964843, 11.916877, 0.000007, -0.000000, 90.298980, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][8] = CreateDynamicObject(19483, 2189.876953, 2462.964843, 12.706876, 0.000007, -0.000000, 90.298980, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][9] = CreateDynamicObject(19483, 2190.286865, 2462.966796, 12.336876, 0.000007, -0.000000, 90.298980, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][10] = CreateDynamicObject(19483, 2190.598876, 2462.697753, 12.286879, 0.000007, -0.000000, 90.298980, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][11] = CreateDynamicObject(19483, 2190.595703, 2462.918701, 12.286879, 0.000007, -0.000000, 90.298980, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][12] = CreateDynamicObject(19483, 2191.187744, 2462.681884, 12.336876, -0.000007, 0.000000, -89.698974, -1, -1, -1, 300.00, 300.00); 
			}
			case 10: {
				fillobj_id[is][0] = CreateDynamicObject(19483, 1577.871582, 2213.290283, 12.545314, 0.000007, -0.000000, 154.198944, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][1] = CreateDynamicObject(19483, 1578.369995, 2213.703125, 12.495317, 0.000007, -0.000000, 154.198944, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][2] = CreateDynamicObject(19483, 1578.163208, 2213.803222, 12.495317, 0.000007, -0.000000, 154.198944, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][3] = CreateDynamicObject(19483, 1578.511352, 2213.968994, 12.545314, -0.000007, 0.000000, -25.699012, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][4] = CreateDynamicObject(19483, 1578.627685, 2214.190429, 12.125315, -0.000007, 0.000000, -25.799009, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][5] = CreateDynamicObject(19483, 1578.627685, 2214.190429, 12.915314, -0.000007, 0.000000, -25.799009, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][6] = CreateDynamicObject(11453, 1578.628540, 2214.253662, 12.497317, 0.000000, 0.000007, 64.149978, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][7] = CreateDynamicObject(19483, 1578.366821, 2214.317138, 12.125315, 0.000007, -0.000000, 154.198944, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][8] = CreateDynamicObject(19483, 1578.366821, 2214.317138, 12.915314, 0.000007, -0.000000, 154.198944, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][9] = CreateDynamicObject(19483, 1578.545410, 2214.686035, 12.545314, 0.000007, -0.000000, 154.198944, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][10] = CreateDynamicObject(19483, 1578.924316, 2214.847900, 12.495317, 0.000007, -0.000000, 154.198944, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][11] = CreateDynamicObject(19483, 1578.724609, 2214.942382, 12.495317, 0.000007, -0.000000, 154.198944, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][12] = CreateDynamicObject(19483, 1579.197753, 2215.370117, 12.545314, -0.000007, 0.000000, -25.799009, -1, -1, -1, 300.00, 300.00); 
			}
			case 11: {
				fillobj_id[is][0] = CreateDynamicObject(19483, 2166.831542, 2763.752441, 12.456881, 0.000007, -0.000000, 152.798950, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][1] = CreateDynamicObject(19483, 2167.339843, 2764.153076, 12.406884, 0.000007, -0.000000, 152.798950, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][2] = CreateDynamicObject(19483, 2167.135742, 2764.258544, 12.406884, 0.000007, -0.000000, 152.798950, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][3] = CreateDynamicObject(19483, 2167.487792, 2764.415527, 12.456881, -0.000007, 0.000000, -27.099004, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][4] = CreateDynamicObject(19483, 2167.609375, 2764.634033, 12.036882, -0.000007, 0.000000, -27.199003, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][5] = CreateDynamicObject(19483, 2167.609375, 2764.634033, 12.826881, -0.000007, 0.000000, -27.199003, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][6] = CreateDynamicObject(11453, 2167.611816, 2764.697021, 12.408884, 0.000000, 0.000007, 62.749980, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][7] = CreateDynamicObject(19483, 2167.351806, 2764.767089, 12.036882, 0.000007, -0.000000, 152.798950, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][8] = CreateDynamicObject(19483, 2167.351806, 2764.767089, 12.826881, 0.000007, -0.000000, 152.798950, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][9] = CreateDynamicObject(19483, 2167.539550, 2765.131591, 12.456881, 0.000007, -0.000000, 152.798950, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][10] = CreateDynamicObject(19483, 2167.922119, 2765.283935, 12.406884, 0.000007, -0.000000, 152.798950, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][11] = CreateDynamicObject(19483, 2167.724609, 2765.383300, 12.406884, 0.000007, -0.000000, 152.798950, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][12] = CreateDynamicObject(19483, 2168.208251, 2765.799072, 12.456881, -0.000007, 0.000000, -27.199003, -1, -1, -1, 300.00, 300.00); 
			}
			case 12: {
				fillobj_id[is][0] = CreateDynamicObject(19483, -1326.182495, 2655.745849, 51.467479, 0.000006, -0.000007, -174.600936, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][1] = CreateDynamicObject(19483, -1325.969970, 2656.357421, 51.417484, 0.000006, -0.000007, -174.600936, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][2] = CreateDynamicObject(19483, -1326.198852, 2656.335693, 51.417484, 0.000006, -0.000007, -174.600936, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][3] = CreateDynamicObject(19483, -1325.986816, 2656.657958, 51.467479, -0.000006, 0.000007, 5.500974, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][4] = CreateDynamicObject(19483, -1326.001953, 2656.907470, 51.047481, -0.000006, 0.000007, 5.400977, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][5] = CreateDynamicObject(19483, -1326.001953, 2656.907470, 51.837482, -0.000006, 0.000007, 5.400977, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][6] = CreateDynamicObject(11453, -1326.034057, 2656.961914, 51.419483, 0.000007, 0.000006, 95.349929, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][7] = CreateDynamicObject(19483, -1326.290771, 2656.880859, 51.047481, 0.000006, -0.000007, -174.600936, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][8] = CreateDynamicObject(19483, -1326.290771, 2656.880859, 51.837482, 0.000006, -0.000007, -174.600936, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][9] = CreateDynamicObject(19483, -1326.329101, 2657.289062, 51.467479, 0.000006, -0.000007, -174.600936, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][10] = CreateDynamicObject(19483, -1326.088989, 2657.623779, 51.417484, 0.000006, -0.000007, -174.600936, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][11] = CreateDynamicObject(19483, -1326.308715, 2657.601074, 51.417484, 0.000006, -0.000007, -174.600936, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][12] = CreateDynamicObject(19483, -1326.125488, 2658.211914, 51.467479, -0.000006, 0.000007, 5.400977, -1, -1, -1, 300.00, 300.00); 
			}
			case 13: {
				fillobj_id[is][0] = CreateDynamicObject(19483, -2403.322509, 955.138061, 47.088909, 0.000007, -0.000000, 56.398994, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][1] = CreateDynamicObject(19483, -2402.981201, 954.588134, 47.038913, 0.000007, -0.000000, 56.398994, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][2] = CreateDynamicObject(19483, -2402.853515, 954.779602, 47.038913, 0.000007, -0.000000, 56.398994, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][3] = CreateDynamicObject(19483, -2402.736816, 954.411926, 47.088909, -0.000007, 0.000000, -123.498977, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][4] = CreateDynamicObject(19483, -2402.533203, 954.266784, 46.668910, -0.000007, 0.000000, -123.598976, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][5] = CreateDynamicObject(19483, -2402.533203, 954.266784, 47.458911, -0.000007, 0.000000, -123.598976, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][6] = CreateDynamicObject(11453, -2402.470947, 954.257385, 47.040912, 0.000000, 0.000007, -33.649997, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][7] = CreateDynamicObject(19483, -2402.372314, 954.508056, 46.668910, 0.000007, -0.000000, 56.398994, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][8] = CreateDynamicObject(19483, -2402.372314, 954.508056, 47.458911, 0.000007, -0.000000, 56.398994, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][9] = CreateDynamicObject(19483, -2402.030761, 954.281005, 47.088909, 0.000007, -0.000000, 56.398994, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][10] = CreateDynamicObject(19483, -2401.921875, 953.883728, 47.038913, 0.000007, -0.000000, 56.398994, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][11] = CreateDynamicObject(19483, -2401.801269, 954.068969, 47.038913, 0.000007, -0.000000, 56.398994, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][12] = CreateDynamicObject(19483, -2401.442138, 953.541931, 47.088909, -0.000007, 0.000000, -123.598976, -1, -1, -1, 300.00, 300.00); 
			}
			case 14: {
				fillobj_id[is][0] = CreateDynamicObject(19483, -1701.923583, 374.865112, 8.680122, 0.000007, -0.000007, 179.398864, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][1] = CreateDynamicObject(19483, -1701.648315, 375.450988, 8.630124, 0.000007, -0.000007, 179.398864, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][2] = CreateDynamicObject(19483, -1701.878295, 375.453491, 8.630124, 0.000007, -0.000007, 179.398864, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][3] = CreateDynamicObject(19483, -1701.633544, 375.751647, 8.680122, -0.000007, 0.000007, -0.499053, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][4] = CreateDynamicObject(19483, -1701.622680, 376.001525, 8.260123, -0.000007, 0.000007, -0.599052, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][5] = CreateDynamicObject(19483, -1701.622680, 376.001525, 9.050122, -0.000007, 0.000007, -0.599052, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][6] = CreateDynamicObject(11453, -1701.648803, 376.058959, 8.632123, 0.000007, 0.000007, 89.349899, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][7] = CreateDynamicObject(19483, -1701.912719, 376.005096, 8.260123, 0.000007, -0.000007, 179.398864, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][8] = CreateDynamicObject(19483, -1701.912719, 376.005096, 9.050122, 0.000007, -0.000007, 179.398864, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][9] = CreateDynamicObject(19483, -1701.908203, 376.415130, 8.680122, 0.000007, -0.000007, 179.398864, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][10] = CreateDynamicObject(19483, -1701.634277, 376.722869, 8.630124, 0.000007, -0.000007, 179.398864, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][11] = CreateDynamicObject(19483, -1701.855346, 376.723266, 8.630124, 0.000007, -0.000007, 179.398864, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][12] = CreateDynamicObject(19483, -1701.609008, 377.311523, 8.680122, -0.000007, 0.000007, -0.599052, -1, -1, -1, 300.00, 300.00); 
			}
			case 15: {
				fillobj_id[is][0] = CreateDynamicObject(19483, -2019.681884, 151.903244, 29.612503, 0.000007, -0.000000, 67.798995, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][1] = CreateDynamicObject(19483, -2019.238403, 151.431686, 29.562503, 0.000007, -0.000000, 67.798995, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][2] = CreateDynamicObject(19483, -2019.151489, 151.644561, 29.562503, 0.000007, -0.000000, 67.798995, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][3] = CreateDynamicObject(19483, -2018.964233, 151.307281, 29.612503, -0.000007, 0.000000, -112.098976, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][4] = CreateDynamicObject(19483, -2018.735961, 151.205184, 29.192502, -0.000007, 0.000000, -112.198974, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][5] = CreateDynamicObject(19483, -2018.735961, 151.205184, 29.982501, -0.000007, 0.000000, -112.198974, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][6] = CreateDynamicObject(11453, -2018.672973, 151.208297, 29.564504, 0.000000, 0.000007, -22.249996, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][7] = CreateDynamicObject(19483, -2018.625854, 151.473510, 29.192502, 0.000007, -0.000000, 67.798995, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][8] = CreateDynamicObject(19483, -2018.625854, 151.473510, 29.982501, 0.000007, -0.000000, 67.798995, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][9] = CreateDynamicObject(19483, -2018.246215, 151.318420, 29.612503, 0.000007, -0.000000, 67.798995, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][10] = CreateDynamicObject(19483, -2018.061035, 150.950439, 29.562503, 0.000007, -0.000000, 67.798995, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][11] = CreateDynamicObject(19483, -2017.979248, 151.155853, 29.562503, 0.000007, -0.000000, 67.798995, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][12] = CreateDynamicObject(19483, -2017.522949, 150.710281, 29.612503, -0.000007, 0.000000, -112.198974, -1, -1, -1, 300.00, 300.00); 
			}
			case 16: {
				fillobj_id[is][0] = CreateDynamicObject(19483, 609.092651, 1716.487670, 8.747196, 0.000007, -0.000000, 58.198989, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][1] = CreateDynamicObject(19483, 609.451232, 1715.948852, 8.697197, 0.000007, -0.000000, 58.198989, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][2] = CreateDynamicObject(19483, 609.572448, 1716.144287, 8.697197, 0.000007, -0.000000, 58.198989, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][3] = CreateDynamicObject(19483, 609.700744, 1715.780395, 8.747196, -0.000007, 0.000000, -121.698982, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][4] = CreateDynamicObject(19483, 609.908874, 1715.641723, 8.327197, -0.000007, 0.000000, -121.798980, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][5] = CreateDynamicObject(19483, 609.908874, 1715.641723, 9.117196, -0.000007, 0.000000, -121.798980, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][6] = CreateDynamicObject(11453, 609.971496, 1715.634277, 8.699197, 0.000000, 0.000007, -31.850002, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][7] = CreateDynamicObject(19483, 610.062133, 1715.887939, 8.327197, 0.000007, -0.000000, 58.198989, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][8] = CreateDynamicObject(19483, 610.062133, 1715.887939, 9.117196, 0.000007, -0.000000, 58.198989, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][9] = CreateDynamicObject(19483, 610.410522, 1715.671630, 8.747196, 0.000007, -0.000000, 58.198989, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][10] = CreateDynamicObject(19483, 610.531921, 1715.277954, 8.697197, 0.000007, -0.000000, 58.198989, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][11] = CreateDynamicObject(19483, 610.646728, 1715.466796, 8.697197, 0.000007, -0.000000, 58.198989, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][12] = CreateDynamicObject(19483, 611.022277, 1714.951416, 8.747196, -0.000007, 0.000000, -121.798980, -1, -1, -1, 300.00, 300.00); 
			}
			case 17: {
				fillobj_id[is][0] = CreateDynamicObject(19483, -1651.604858, -2698.152832, 50.648822, 0.000016, -0.000012, 146.198989, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][1] = CreateDynamicObject(19483, -1651.053955, -2697.813476, 50.598827, 0.000016, -0.000012, 146.198989, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][2] = CreateDynamicObject(19483, -1651.244750, -2697.685546, 50.598827, 0.000016, -0.000012, 146.198989, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][3] = CreateDynamicObject(19483, -1650.876953, -2697.569824, 50.648822, -0.000016, 0.000012, -33.699001, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][4] = CreateDynamicObject(19483, -1650.730957, -2697.366943, 50.228824, -0.000016, 0.000012, -33.798988, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][5] = CreateDynamicObject(19483, -1650.730957, -2697.366943, 51.018825, -0.000016, 0.000012, -33.798988, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][6] = CreateDynamicObject(11453, -1650.721313, -2697.304443, 50.600826, 0.000012, 0.000016, 56.149967, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][7] = CreateDynamicObject(19483, -1650.971557, -2697.205078, 50.228824, 0.000016, -0.000012, 146.198989, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][8] = CreateDynamicObject(19483, -1650.971557, -2697.205078, 51.018825, 0.000016, -0.000012, 146.198989, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][9] = CreateDynamicObject(19483, -1650.743286, -2696.864501, 50.648822, 0.000016, -0.000012, 146.198989, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][10] = CreateDynamicObject(19483, -1650.345581, -2696.757080, 50.598827, 0.000016, -0.000012, 146.198989, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][11] = CreateDynamicObject(19483, -1650.530273, -2696.635498, 50.598827, 0.000016, -0.000012, 146.198989, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][12] = CreateDynamicObject(19483, -1650.002319, -2696.278076, 50.648822, -0.000016, 0.000012, -33.798988, -1, -1, -1, 300.00, 300.00); 
			}
			case 18: {
				fillobj_id[is][0] = CreateDynamicObject(19483, -1449.000610, 1856.429565, 34.300125, 0.000007, -0.000000, 150.898956, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][1] = CreateDynamicObject(19483, -1448.479125, 1856.812988, 34.250129, 0.000007, -0.000000, 150.898956, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][2] = CreateDynamicObject(19483, -1448.679931, 1856.925048, 34.250129, 0.000007, -0.000000, 150.898956, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][3] = CreateDynamicObject(19483, -1448.322753, 1857.070312, 34.300125, -0.000007, 0.000000, -28.999004, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][4] = CreateDynamicObject(19483, -1448.193847, 1857.284667, 33.880126, -0.000007, 0.000000, -29.099004, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][5] = CreateDynamicObject(19483, -1448.193847, 1857.284667, 34.670127, -0.000007, 0.000000, -29.099004, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][6] = CreateDynamicObject(11453, -1448.189453, 1857.347534, 34.252128, 0.000000, 0.000007, 60.849975, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][7] = CreateDynamicObject(19483, -1448.447021, 1857.426147, 33.880126, 0.000007, -0.000000, 150.898956, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][8] = CreateDynamicObject(19483, -1448.447021, 1857.426147, 34.670127, 0.000007, -0.000000, 150.898956, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][9] = CreateDynamicObject(19483, -1448.247436, 1857.784423, 34.300125, 0.000007, -0.000000, 150.898956, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][10] = CreateDynamicObject(19483, -1447.859863, 1857.924194, 34.250129, 0.000007, -0.000000, 150.898956, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][11] = CreateDynamicObject(19483, -1448.054077, 1858.030029, 34.250129, 0.000007, -0.000000, 150.898956, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][12] = CreateDynamicObject(19483, -1447.556884, 1858.429443, 34.300125, -0.000007, 0.000000, -29.099004, -1, -1, -1, 300.00, 300.00); 
			}
			case 19: {
				fillobj_id[is][0] = CreateDynamicObject(19483, 88.831123, 1217.226806, 21.398529, 0.000007, -0.000000, 83.798980, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][1] = CreateDynamicObject(19483, 89.387306, 1216.895629, 21.348529, 0.000007, -0.000000, 83.798980, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][2] = CreateDynamicObject(19483, 89.412246, 1217.124267, 21.348529, 0.000007, -0.000000, 83.798980, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][3] = CreateDynamicObject(19483, 89.685142, 1216.851562, 21.398529, -0.000007, 0.000000, -96.098976, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][4] = CreateDynamicObject(19483, 89.932746, 1216.816406, 20.978528, -0.000007, 0.000000, -96.198974, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][5] = CreateDynamicObject(19483, 89.932746, 1216.816406, 21.768527, -0.000007, 0.000000, -96.198974, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][6] = CreateDynamicObject(11453, 89.992439, 1216.836791, 21.350530, 0.000000, 0.000007, -6.249998, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][7] = CreateDynamicObject(19483, 89.964607, 1217.104614, 20.978528, 0.000007, -0.000000, 83.798980, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][8] = CreateDynamicObject(19483, 89.964607, 1217.104614, 21.768527, 0.000007, -0.000000, 83.798980, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][9] = CreateDynamicObject(19483, 90.372230, 1217.060180, 21.398529, 0.000007, -0.000000, 83.798980, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][10] = CreateDynamicObject(19483, 90.651779, 1216.757568, 21.348529, 0.000007, -0.000000, 83.798980, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][11] = CreateDynamicObject(19483, 90.673767, 1216.977661, 21.348529, 0.000007, -0.000000, 83.798980, -1, -1, -1, 300.00, 300.00); 
				fillobj_id[is][12] = CreateDynamicObject(19483, 91.235168, 1216.674926, 21.398529, -0.000007, 0.000000, -96.198974, -1, -1, -1, 300.00, 300.00);
			}
		}

		update_text_fill(is);
		is++;
	}
	printf("√á√†√£√∞√≥√¶√•√≠√Æ %i √ß√†√Ø√∞√†√¢√Æ√∑√≠√ª√µ √±√≤√†√≠√∂√®√©", FILLING_TOTAL);

	return mysql_tquery(mysql_Handle, "SELECT * FROM `ownmebel`", "load_mebel", "");
}

stock update_3dtext_fill(fillingid) {
	new name_fowner[24],fillingstr[430];
	if(!strcmp(Filling[fillingid][fOwner], "None", true)) name_fowner = "No";
	else format(name_fowner, 24, Filling[fillingid][fOwner]);
	format(fillingstr, 302, "%s\n{edffcc}√Ç√´√†√§√•√´√•√∂: {ccd4ff}%s\n{ffd24d}√ç√Æ√¨√•√∞ √ß√†√Ø√∞√†√¢√™√®: "CWHITE"%d\n{edffcc}√ë√≤√†√≤√≥√±: "CWHITE"%s\n{edffcc}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"%i$\n{edffcc}√ñ√•√≠√† √ß√† 1 √´√®√≤√∞ √≤√Æ√Ø√´√®√¢√†: {ccd4ff}%i$\n{edffcc}√ä√≥√Ø√®√≤√º √™√†√≠√®√±√≤√∞√≥: "CWHITE"/fuelcan\n{edffcc}√á√†√Ø√∞√†√¢√®√≤√º√±√ø: "CWHITE"/fill",
		Filling[fillingid][ffName], name_fowner, fillingid, (Filling[fillingid][fLock] ? ("√á√†√™√∞√ª√≤√†") : ("√é√≤√™√∞√ª√≤√†")), Filling[fillingid][fPrice], Filling[fillingid][fPriceBenz]);
	
	if(!strcmp(Filling[fillingid][fOwner], "None", true))
		strcat(fillingstr,"\n{ffd24d}√ä√≥√Ø√®√≤√º √ß√†√Ø√∞√†√¢√™√≥: "CWHITE"/buyfuel");
	
	UpdateDynamic3DTextLabelText(Filling[fillingid][fText],-1,fillingstr);
}

stock update_text_fill(fillid) {
	new str_g[30];
	format(str_g, 20, "√Ä√á√ë ¬π%d", fillid);
	SetDynamicObjectMaterialText(fillobj_id[fillid][5], 0, str_g, 130, "Ariel", 80, 1, 0xFFFFFFFF, 0, 1);
	SetDynamicObjectMaterialText(fillobj_id[fillid][8], 0, str_g, 130, "Ariel", 80, 1, 0xFFFFFFFF, 0, 1);
	if(Filling[fillid][fLock]) {
		SetDynamicObjectMaterialText(fillobj_id[fillid][0], 0, " ", 130, "Ariel", 65, 1, 0xFFFFFFFF, 0, 1);
		SetDynamicObjectMaterialText(fillobj_id[fillid][3], 0, " ", 130, "Ariel", 65, 1, 0xFFFFFFFF, 0, 1);
		SetDynamicObjectMaterialText(fillobj_id[fillid][4], 0, "√á√Ä√ä√ê√õ√í√é", 130, "Ariel", 90, 1, 0xFFFF3300, 0, 1);
		SetDynamicObjectMaterialText(fillobj_id[fillid][7], 0, "√á√Ä√ä√ê√õ√í√é", 130, "Ariel", 90, 1, 0xFFFF3300, 0, 1);
		SetDynamicObjectMaterialText(fillobj_id[fillid][9], 0, " ", 130, "Ariel", 65, 1, 0xFFFFFFFF, 0, 1);
		SetDynamicObjectMaterialText(fillobj_id[fillid][12], 0, " ", 130, "Ariel", 65, 1, 0xFFFFFFFF, 0, 1);
	}
	else {
		format(str_g, 30, "{CCD4FF}$%d", Filling[fillid][fPriceBenz]);
		SetDynamicObjectMaterialText(fillobj_id[fillid][0], 0, str_g, 130, "Ariel", 65, 1, 0xFFFFFFFF, 0, 1);
		SetDynamicObjectMaterialText(fillobj_id[fillid][3], 0, "√ñ√Ö√ç√Ä √á√Ä 1 √ã√à√í√ê -", 130, "Ariel", 65, 1, 0xFFFFFFFF, 0, 1);
		SetDynamicObjectMaterialText(fillobj_id[fillid][4], 0, "√é√í√ä√ê√õ√í√é", 130, "Ariel", 90, 1, 0xFF36D200, 0, 1);
		SetDynamicObjectMaterialText(fillobj_id[fillid][7], 0, "√é√í√ä√ê√õ√í√é", 130, "Ariel", 90, 1, 0xFF36D200, 0, 1);
		SetDynamicObjectMaterialText(fillobj_id[fillid][9], 0, "√ñ√Ö√ç√Ä √á√Ä 1 √ã√à√í√ê -", 130, "Ariel", 65, 1, 0xFFFFFFFF, 0, 1);
		SetDynamicObjectMaterialText(fillobj_id[fillid][12], 0, str_g, 130, "Ariel", 65, 1, 0xFFFFFFFF, 0, 1);
	}
	SetDynamicObjectMaterial(fillobj_id[fillid][1], 0, 18646, "matcolours", "orange", 0);
	SetDynamicObjectMaterial(fillobj_id[fillid][2], 0, 18646, "matcolours", "orange", 0);
	SetDynamicObjectMaterial(fillobj_id[fillid][6], 1, 18646, "matcolours", "grey-50-percent", 0);
	SetDynamicObjectMaterial(fillobj_id[fillid][10], 0, 18646, "matcolours", "orange", 0);
	return SetDynamicObjectMaterial(fillobj_id[fillid][11], 0, 18646, "matcolours", "orange", 0);
}

CB: load_garages() {
	new rows;
	cache_get_row_count(rows);

	if(rows <= 0) {
		print("√É√†√∞√†√¶√® √≠√• √ß√†√£√∞√≥√¶√•√≠√ª");
		return mysql_tquery(mysql_Handle, "SELECT * FROM `hotel`", "load_hotels", "");
	}

	new time = GetTickCount();

	for(new i = 0; i < rows; i ++) {
		cache_get_value_name_bool(i, "buyed", garage[i+1][gbuyed]);
		cache_get_value_name_int(i, "ownerID", garage[i+1][ownerID]);
		cache_get_value_name(i, "ownerNAME", garage[i+1][ownerNAME]);
		cache_get_value_name_int(i, "days", garage[i+1][gdays]);
		cache_get_value_name_float(i, "positionX", garage[i+1][grposition][0]);
		cache_get_value_name_float(i, "positionY", garage[i+1][grposition][1]);
		cache_get_value_name_float(i, "positionZ", garage[i+1][grposition][2]);
		cache_get_value_name_float(i, "car_positionX", garage[i+1][gcarpos][0]);
		cache_get_value_name_float(i, "car_positionY", garage[i+1][gcarpos][1]);
		cache_get_value_name_float(i, "car_positionZ", garage[i+1][gcarpos][2]);
		cache_get_value_name_float(i, "car_positionA", garage[i+1][gcarpos][3]);

		CreateDynamicPickup(1083, 23, garage[i+1][grposition][0],garage[i+1][grposition][1],garage[i+1][grposition][2],0,0);
	}

	printf("√É√†√∞√†√¶√® | √á√†√£√∞√≥√¶√•√≠√Æ %i | %i √¨√±", rows, GetTickCount() - time);

	return mysql_tquery(mysql_Handle, "SELECT * FROM `hotel`", "load_hotels", "");
}

CB: load_familys() {
	cache_get_row_count(TOTAL_FAMILYS);
	if(!TOTAL_FAMILYS)
		return print("√ë√•√¨√º√® √≠√• √ß√†√£√∞√≥√¶√•√≠√ª");
	new time = GetTickCount();
	for(new i = 0; i < TOTAL_FAMILYS; i++)
	{
		cache_get_value_name(i, "name", family_info[i][_fam_name]);
		cache_get_value_name(i, "famdate", family_info[i][_fam_date]);
		cache_get_value_name(i, "owner", family_info[i][_fam_owner]);
		cache_get_value_name_int(i, "colorid", family_info[i][_fam_colorid]);
		cache_get_value_name_int(i, "members", family_info[i][_fam_members]);
	}
	return printf("√ë√•√¨√º√® | √á√†√£√∞√≥√¶√•√≠√Æ %i √∏√≤. | %i √¨√±", TOTAL_FAMILYS, GetTickCount() - time);
}

CB: load_mebel() {
	cache_get_row_count(total_count_mebel);

	if(total_count_mebel <= 0) {
		print("√å√•√°√•√´√º √≠√• √ß√†√£√∞√≥√¶√•√≠√†");
		return mysql_tquery(mysql_Handle, "SELECT * FROM `garage`", "load_garages", "");
	}

	new time = GetTickCount();

	for(new m = 0; m < total_count_mebel; m ++) {
		cache_get_value_name_int(m, "modelObj", mebel_info[m][mObjModel]);
		cache_get_value_name_int(m, "homeOwn", mebel_info[m][mHouseID]);
		cache_get_value_name(m, "nameObj", mebel_info[m][mObjName]);
		cache_get_value_name_float(m, "mPX", mebel_info[m][mPX]);
		cache_get_value_name_float(m, "mPY", mebel_info[m][mPY]);
		cache_get_value_name_float(m, "mPZ", mebel_info[m][mPZ]);
		cache_get_value_name_float(m, "mRX", mebel_info[m][mRX]);
		cache_get_value_name_float(m, "mRY", mebel_info[m][mRY]);
		cache_get_value_name_float(m, "mRZ", mebel_info[m][mRZ]);

		mebel_info[m][mObjectID]= CreateDynamicObject(mebel_info[m][mObjModel], mebel_info[m][mPX],mebel_info[m][mPY],mebel_info[m][mPZ], mebel_info[m][mRX],mebel_info[m][mRY],mebel_info[m][mRZ], mebel_info[m][mHouseID] +50);
	}

	printf("√å√•√°√•√´√º | √á√†√£√∞√≥√¶√•√≠√Æ %i √Æ√°√∫√•√™√≤√Æ√¢ | %i √¨√±", total_count_mebel, GetTickCount() - time);

	return mysql_tquery(mysql_Handle, "SELECT * FROM `garage`", "load_garages", "");
}

CB: load_hotels() {
	cache_get_row_count(total_hotels);

	if(total_hotels <= 0) {
		print("√ç√Æ√¨√•√∞√† √Æ√≤√•√´√•√© √≠√• √ß√†√£√∞√≥√¶√•√≠√ª");
		return mysql_tquery(mysql_Handle, "SELECT * FROM `flats`", "_load_flats", "");
	}

	new time = GetTickCount();

	for(new u = 0; u < total_hotels; u ++) {
		cache_get_value_name(u, "owner", hotel_info[u][hotel_owner]);
		cache_get_value_name_int(u, "days", hotel_info[u][hotel_days]);
		cache_get_value_name_int(u, "using", hotel_info[u][hotel_is_using]);
		switch(u) {
			case 0..11: hotel_info[u][hotel_floor] = 1;
			case 12..23: hotel_info[u][hotel_floor] = 2;
			case 24..35: hotel_info[u][hotel_floor] = 3;
		}
		cache_get_value_name_int(u, "lock", hotel_info[u][hotel_lock]);
	}

	printf("√ç√Æ√¨√•√∞√† √¢ √Æ√≤√•√´√• | √á√†√£√∞√≥√¶√•√≠√Æ: %i | %i √¨√±", total_hotels, GetTickCount() - time);

	return mysql_tquery(mysql_Handle, "SELECT * FROM `flats`", "_load_flats", "");
}

CB: _load_flats() {
	new rows;
	cache_get_row_count(rows);

	if(!rows) {
		print("√ä√¢√†√∞√≤√®√∞√ª √≠√• √ß√†√£√∞√≥√¶√•√≠√ª");
		return mysql_tquery(mysql_Handle, "SELECT * FROM `business`", "LoadBizes", "");
	}

	new time = GetTickCount();
	new model_pick;

	for(new i = 0; i < rows; i ++) {
		cache_get_value_name_int(i, "_fl_days", flat_info[i + 1][fl_days]);
		cache_get_value_name_int(i, "_fl_rooms", flat_info[i + 1][fl_rooms]);
		cache_get_value_name_bool(i, "_fl_lock", flat_info[i + 1][fl_lock]);
		cache_get_value_name_bool(i, "_fl_owned", flat_info[i + 1][fl_owned]);
		cache_get_value_name(i, "_fl_owner", flat_info[i + 1][fl_owner]);
		cache_get_value_name_bool(i, "_fl_rentstatus", flat_info[i + 1][fl_rentstatus]);
		cache_get_value_name_int(i, "_fl_rentprice", flat_info[i + 1][fl_rentprice]);
		cache_get_value_name(i, "_fl_renter", flat_info[i + 1][fl_renter]);
		cache_get_value_name_int(i, "_fl_price", flat_info[i + 1][fl_price]);

		cache_get_value_name_float(i, "_fl_enterposX", flat_info[i + 1][fl_enterposX]);
		cache_get_value_name_float(i, "_fl_enterposY", flat_info[i + 1][fl_enterposY]);
		cache_get_value_name_float(i, "_fl_enterposZ", flat_info[i + 1][fl_enterposZ]);
		cache_get_value_name_float(i, "_fl_exitposX", flat_info[i + 1][fl_exitposX]);
		cache_get_value_name_float(i, "_fl_exitposY", flat_info[i + 1][fl_exitposY]);
		cache_get_value_name_float(i, "_fl_exitposZ", flat_info[i + 1][fl_exitposZ]);

		if(flat_info[i + 1][fl_owned]) model_pick = 19522;
		else model_pick = 19524;
		flat_info[i + 1][fl_pickupID] = CreateDynamicPickup(model_pick, 23, flat_info[i + 1][fl_enterposX], flat_info[i + 1][fl_enterposY], flat_info[i + 1][fl_enterposZ], 1);
		CreateDynamic3DTextLabel("√ç√†√¶√¨√®√≤√•\n{aa80ff}ALT", COLOR_WHITE, flat_info[i + 1][fl_exitposX], flat_info[i + 1][fl_exitposY], flat_info[i + 1][fl_exitposZ] - 0.6, 8.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, i + 2);
	}

	check_icon_flats();
	printf("√ä√¢√†√∞√≤√®√∞√ª | √á√†√£√∞√≥√¶√•√≠√Æ: %i | %i √¨√±", rows, GetTickCount() - time);

	return mysql_tquery(mysql_Handle, "SELECT * FROM `business`", "LoadBizes", "");
}

CB: LoadBizes() {
	cache_get_row_count(BIZES);

	if(BIZES <= 0)
		return print("√Å√®√ß√≠√•√±√ª √≠√• √ß√†√£√∞√≥√¶√•√≠√ª"), mysql_tquery(mysql_Handle, "SELECT * FROM `house`", "LoadHouses","ii", 0,0);

	new time = GetTickCount(), biz_free, biz_buyed;
	string[0] = EOS;
	for(new b; b < BIZES; b ++) {
		cache_get_value_name_int(b, "bID", BizInfo[b+1][bID]);
		cache_get_value_name_float(b, "EnterX", BizInfo[b+1][EnterBiz][0]);
		cache_get_value_name_int(b, "bPay", BizInfo[b+1][bPay]);
		cache_get_value_name_float(b, "EnterY", BizInfo[b+1][EnterBiz][1]);
		cache_get_value_name_float(b, "EnterZ", BizInfo[b+1][EnterBiz][2]);

		cache_get_value_name_float(b, "bEnterVhX", BizInfo[b+1][EntBizVh][0]);
		cache_get_value_name_float(b, "bEnterVhY", BizInfo[b+1][EntBizVh][1]);
		cache_get_value_name_float(b, "bEnterVhZ", BizInfo[b+1][EntBizVh][2]);
		cache_get_value_name_float(b, "bEnterVhA", BizInfo[b+1][EntBizVh][3]);

		cache_get_value_name_float(b, "ExitX", BizInfo[b+1][ExitBiz][0]);
		cache_get_value_name_float(b, "ExitY", BizInfo[b+1][ExitBiz][1]);
		cache_get_value_name_float(b, "ExitZ", BizInfo[b+1][ExitBiz][2]);

		cache_get_value_name_float(b, "bExitVH_X", BizInfo[b+1][IntExitBiz][0]);
		cache_get_value_name_float(b, "bExitVH_Y", BizInfo[b+1][IntExitBiz][1]);
		cache_get_value_name_float(b, "bExitVH_Z", BizInfo[b+1][IntExitBiz][2]);
		cache_get_value_name_float(b, "bExitVH_A", BizInfo[b+1][IntExitBiz][3]);

		cache_get_value_name(b, "bOwner", BizInfo[b+1][bOwner]);
		cache_get_value_name_int(b, "bPrice", BizInfo[b+1][bPrice]);
		cache_get_value_name_int(b, "bInt", BizInfo[b+1][bInt]);
		cache_get_value_name_int(b, "bVW", BizInfo[b+1][bVW]);
		cache_get_value_name_int(b, "bLock", BizInfo[b+1][bLock]);
		cache_get_value_name(b, "bName", BizInfo[b+1][bName]);
		cache_get_value_name_int(b, "bPribil", BizInfo[b+1][bPribil]);
		cache_get_value_name_float(b, "BarX", BizInfo[b+1][BarPos][0]);
		cache_get_value_name_float(b, "BarY", BizInfo[b+1][BarPos][1]);
		cache_get_value_name_float(b, "BarZ", BizInfo[b+1][BarPos][2]);
		cache_get_value_name_int(b, "bCena1", BizInfo[b+1][bCena][0]);
		cache_get_value_name_int(b, "bCena2", BizInfo[b+1][bCena][1]);
		cache_get_value_name_int(b, "bCena3", BizInfo[b+1][bCena][2]);
		cache_get_value_name_int(b, "bCena4", BizInfo[b+1][bCena][3]);
		cache_get_value_name_int(b, "bCena5", BizInfo[b+1][bCena][4]);
		cache_get_value_name_int(b, "bCena6", BizInfo[b+1][bCena][5]);
		cache_get_value_name_int(b, "bCena7", BizInfo[b+1][bCena][6]);
		cache_get_value_name_int(b, "bCena8", BizInfo[b+1][bCena][7]);
		cache_get_value_name_int(b, "bCena9", BizInfo[b+1][bCena][8]);
		cache_get_value_name_int(b, "bVhod", BizInfo[b+1][bVhod]);
		cache_get_value_name_int(b, "bBank", BizInfo[b+1][bBank]);
		cache_get_value_name_int(b, "bTypeBiz", BizInfo[b+1][bTypeBiz]);
		cache_get_value_name_int(b,"bProd", BizInfo[b+1][bProd]);
		cache_get_value_name_int(b,"bProdOrder", BizInfo[b+1][bProdOrder]);
		cache_get_value_name_int(b,"bProdOrderPrice", BizInfo[b+1][bProdOrderPrice]);
		cache_get_value_name_int(b,"bProdMax", BizInfo[b+1][bProdMax]);

		new price[20];
		SplitValue(BizInfo[b+1][bPrice], price, sizeof(price));

		if(!strcmp( BizInfo[b+1][ bOwner ], "None", true ) ) {
			biz_free ++;
			if(BizInfo[b+1][bTypeBiz] == 31) format(string, 160, "√é√≤√•√´√º %s\n√Ç√´√†√§√•√´√•√∂: No\n√ë√≤√Æ√®√¨√Æ√±√≤√º √Æ√≤√•√´√ø: %s$\n/buybiz √§√´√ø √Ø√Æ√™√≥√Ø√™√®", BizInfo[b+1][bName], price);
			else format(string, 160, "%s\n{4682b4}√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"%s$\n{4682b4}/buybiz √§√´√ø √Ø√Æ√™√≥√Ø√™√®", BizInfo[b+1][bName], price);
		}
		else {
			biz_buyed ++;
			if(BizInfo[b+1][bLock]) format(string, 160, "%s\n{4682b4}√Ç√´√†√§√•√´√•√∂: "CWHITE"%s\n√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"%s$\n{ff4530}√á√†√™√∞√ª√≤√Æ", BizInfo[b+1][bName],BizInfo[b+1][bOwner], price);
			else if(BizInfo[b+1][bVhod] > 0) {
				if(BizInfo[b+1][bTypeBiz] == 31) format(string, 160, "√é√≤√•√´√º %s\n√Ç√´√†√§√•√´√•√∂: %s\n√ñ√•√≠√† √ß√† √≠√Æ√¨√•√∞ (√¢ √±√≥√≤√™√®): %i$\n√Ç√µ√Æ√§: %i$", BizInfo[b+1][bName],BizInfo[b+1][bOwner],BizInfo[b+1][bCena][0],BizInfo[b+1][bVhod]);
				else format(string, 160, "%s\n{4682b4}√Ç√´√†√§√•√´√•√∂: "CWHITE"%s\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"%s$\n{4682b4}√Ç√µ√Æ√§: {FFCD00}%i$", BizInfo[b+1][bName],BizInfo[b+1][bOwner], price, BizInfo[b+1][bVhod]);
			}
			else {
				if(BizInfo[b+1][bTypeBiz] == 31) format(string, 160, "√é√≤√•√´√º %s\n√Ç√´√†√§√•√´√•√∂: %s\n√ñ√•√≠√† √ß√† √≠√Æ√¨√•√∞ (√¢ √±√≥√≤√™√®): %i$", BizInfo[b+1][bName],BizInfo[b+1][bOwner],BizInfo[b+1][bCena][0]);
				else format(string, 160, "%s\n{4682b4}√Ç√´√†√§√•√´√•√∂: "CWHITE"%s\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"%s$\n{4682b4}√Ç√µ√Æ√§ √±√¢√Æ√°√Æ√§√≠√ª√©", BizInfo[b+1][bName],BizInfo[b+1][bOwner], price);
			}
		}

		CreateDynamicPickup(19132, 1, BizInfo[b+1][EnterBiz][0], BizInfo[b+1][EnterBiz][1], BizInfo[b+1][EnterBiz][2],0,-1,-1,100.0);
		if(BizInfo[b+1][bTypeBiz] != 31) 
			CreateDynamicPickup(19132, 1, BizInfo[b+1][ExitBiz][0], BizInfo[b+1][ExitBiz][1], BizInfo[b+1][ExitBiz][2],BizInfo[b+1][bVW],-1,-1,100.0);

		new icon = 0, type = BizInfo[b+1][bTypeBiz];
		switch(type)
		{
			case 1: icon = 17;
			case 2: icon = 48;
			case 3: icon = 14;
			case 4: icon = 49;
			case 8: icon = 6;
			case 12, 30: icon = 34;
			case 23: icon = 27;
			case 33: icon = 51;
			case 40: icon = 55;
			case 44: icon = 54;
			case 49: icon = 45;
			case 59: icon = 19;
		}
		if(icon != 0) CreateDynamicMapIcon( BizInfo[b+1] [EnterBiz][0], BizInfo[b+1] [EnterBiz][1], BizInfo[b+1][EnterBiz][2] , icon , -1 );
		if(type == 31) {

			hotel_pick = CreateDynamicPickup(19132, 1, BizInfo[b+1][ExitBiz][0], BizInfo[b+1][ExitBiz][1], BizInfo[b+1][ExitBiz][2],BizInfo[b+1][bVW],BizInfo[b+1][bInt],-1,100.0);
			// √Ø√•√∞√•√§ √§√Æ√°√†√¢√´√•√≠√®√•√¨ √≠√Æ√¢√ª√µ √Æ√≤√•√´√•√© √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √Ø√•√∞√•√§√•√´√†√≤√º

			BizInfo[b+1][bLabel] = CreateDynamic3DTextLabel(string, 0xD9FFB3FF, BizInfo[b+1][EnterBiz][0],BizInfo[b+1][EnterBiz][1],BizInfo[b+1][EnterBiz][2], 15.0,INVALID_PLAYER_ID,INVALID_PLAYER_ID,1,-1,-1,-1,100.0);
		}
		else BizInfo[b+1][bLabel] = CreateDynamic3DTextLabel(string, 0x33AA33FF, BizInfo[b+1][EnterBiz][0],BizInfo[b+1][EnterBiz][1],BizInfo[b+1][EnterBiz][2], 15.0,INVALID_PLAYER_ID,INVALID_PLAYER_ID,1,-1,-1,-1,100.0);

		if(BizInfo[b+1][BarPos][0] != 0.0 && BizInfo[b+1][BarPos][1] != 0.0 && BizInfo[b+1][BarPos][2] != 0.0) {
			if(type == 2 || type == 4 || type == 39) bar_biz_pic[b+1] = CreateDynamicPickup(1239, 23, BizInfo[b+1][BarPos][0], BizInfo[b+1][BarPos][1], BizInfo[b+1][BarPos][2],BizInfo[b+1][ bVW ],BizInfo[b+1][ bInt ]);
			else CreateDynamic3DTextLabel(""CWHITE"√ç√†√¶√¨√®√≤√• √™√´√†√¢√®√∏√≥\n"CMAIN"N\n"CWHITE"√§√´√ø √Ø√Æ√™√≥√Ø√™√®", COLOR_WHITE, BizInfo[b+1][BarPos][0], BizInfo[b+1][BarPos][1], BizInfo[b+1][BarPos][2], 20.0,INVALID_PLAYER_ID,INVALID_PLAYER_ID,0,BizInfo[b+1][ bVW ],BizInfo[b+1][ bInt ],-1,100.0);
		}
	}
	printf("Business | √á√†√£√∞√≥√¶√•√≠√Æ: %i | %i √¨√±", BIZES, GetTickCount() - time);

	return mysql_tquery(mysql_Handle, "SELECT * FROM `house`", "LoadHouses","ii", biz_free, biz_buyed);
}
stock MeAction(playerid,action[],Float:distance = 13.0) {
	string[0] = EOS;
	format(string, 128, "%s %s", pData[playerid][pName], action);
	return ProxDetector(distance, playerid, string, COLOR_PURPLE);
}

stock UpdateBizInfo( i ) {
	new str[160];

	new price[20];
	SplitValue(BizInfo[i][bPrice], price, sizeof(price));

	if(!strcmp(BizInfo[i][bOwner], "None", true)) {
		if(BizInfo[i][bTypeBiz] == 31) format(str, sizeof(str), "√é√≤√•√´√º %s\n√Ç√´√†√§√•√´√•√∂: No\n√ë√≤√Æ√®√¨√Æ√±√≤√º √Æ√≤√•√´√ø: %s$\n/buybiz √§√´√ø √Ø√Æ√™√≥√Ø√™√®", BizInfo[i][bName], price);
		else format(str, sizeof(str), "%s\n{4682b4}√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"%s$\n{4682b4}/buybiz √§√´√ø √Ø√Æ√™√≥√Ø√™√®", BizInfo[i][bName], price);
	}
	else {
		if(BizInfo[i][bLock]) format(str, sizeof(str), "%s\n{4682b4}√Ç√´√†√§√•√´√•√∂: "CWHITE"%s\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"%s$\n{ff4530}√á√†√™√∞√ª√≤√Æ", BizInfo[i][bName],BizInfo[i][bOwner], price);
		else if(BizInfo[i][bVhod] > 0) {
			if(BizInfo[i][bTypeBiz] == 31) format(str, sizeof(str), "√é√≤√•√´√º %s\n√Ç√´√†√§√•√´√•√∂: %s\n√ñ√•√≠√† √ß√† √≠√Æ√¨√•√∞ (√¢ √±√≥√≤√™√®): %i$\n√Ç√µ√Æ√§: %i$", BizInfo[i][bName],BizInfo[i][bOwner],BizInfo[i][bCena][0],BizInfo[i][bVhod]);
			else format(str, sizeof(str), "%s\n{4682b4}√Ç√´√†√§√•√´√•√∂: "CWHITE"%s\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"%s$\n{4682b4}√Ç√µ√Æ√§: {FFCD00}%i$", BizInfo[i][bName],BizInfo[i][bOwner], price, BizInfo[i][bVhod]);
		}
		else {
			if(BizInfo[i][bTypeBiz] == 31) format(str, sizeof(str), "√é√≤√•√´√º %s\n√Ç√´√†√§√•√´√•√∂: %s\n√ñ√•√≠√† √ß√† √≠√Æ√¨√•√∞ (√¢ √±√≥√≤√™√®): %i$", BizInfo[i][bName],BizInfo[i][bOwner],BizInfo[i][bCena][0]);
			else format(str, sizeof(str), "%s\n{4682b4}√Ç√´√†√§√•√´√•√∂: "CWHITE"%s\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"%i$\n{4682b4}√Ç√µ√Æ√§ √±√¢√Æ√°√Æ√§√≠√ª√©", BizInfo[i][bName],BizInfo[i][bOwner], price);
		}
	}
	if(BizInfo[i][bTypeBiz] == 31) UpdateDynamic3DTextLabelText( BizInfo[ i ][bLabel ], 0xD9FFB3FF, str);
	else UpdateDynamic3DTextLabelText( BizInfo[ i ][bLabel ], 0x33AA33FF, str);
	
	return 1;
}
stock actions_ch_skin(playerid, chg_skinid) {
	new name_pvar[16], var_zn = GetPVarInt(playerid, "changed_skin_mode"), actplayerid = GetPVarInt(playerid,"actinplayerid"), fractionid = GetPVarInt(actplayerid, "pOfferFractionid");
	format(name_pvar, sizeof(name_pvar), "chskin_%d", chg_skinid);
	chg_skinid = GetPVarInt(playerid, name_pvar);
	CancelSelectTextDraw(playerid);
	TextDrawHideForPlayer(playerid, chskin_box);
	DeletePVar(playerid, "changed_skin_mode");
	for(new i = 0; i < 16; i ++) {
		format(name_pvar, sizeof(name_pvar), "chskin_%d", i);
		DeletePVar(playerid, name_pvar);
		PlayerTextDrawHide(playerid, chskin_td[playerid][i]);
	}
	switch(var_zn) {
		case 1: {
			if(pData[playerid][pMember] != fractionid) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [054]");
			pData[actplayerid][pModel] = chg_skinid;
			SetPlayerSkin(actplayerid,pData[actplayerid][pModel]);
			UpdatePlayerData(actplayerid,"pModel",pData[actplayerid][pModel]);
			SCMF(actplayerid, COLOR_BLUE, "%s[%d] √®√ß√¨√•√≠√®√´ √Ç√†√∏√≥ √¢√≠√•√∏√≠√Æ√±√≤√º √¢ √Æ√∞√£√†√≠√®√ß√†√∂√®√®",pData[playerid][pName],playerid);
			SCMF(playerid, COLOR_BLUE, "√Ç√ª √®√ß√¨√•√≠√®√´√® √¢√≠√•√∏√≠√Æ√±√≤√º √®√£√∞√Æ√™√† %s[%d]", GetName(actplayerid),actplayerid);
			DeletePVar(actplayerid, "pOfferFractionid");
			DeletePVar(playerid, "actinplayerid");
		}
		case 2: {
			if(pData[playerid][pMember] != fractionid) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [055]");
			pData[actplayerid][pMember] = fractionid;
			pData[actplayerid][pRank] = 1;
			pData[actplayerid][pModel] = chg_skinid;
			pData[actplayerid][pJob] = 0;
			pData[actplayerid][pAdmJob] = 0;
			if(IsAArm(actplayerid)) {
				pData[actplayerid][ArmyPlay] = true;
				strmid(pData[actplayerid][ArmyRank], new_rank_name[pData[actplayerid][pMember] - 1][pData[actplayerid][pRank] - 1], 0, strlen(new_rank_name[pData[actplayerid][pMember] - 1][pData[actplayerid][pRank] - 1]), 255);
			}
			SetPlayerColor(actplayerid, FractionInfo[pData[actplayerid][pMember]][fColor]);
			new query[200];
			mysql_format(mysql_Handle,query,sizeof(query),"UPDATE `accounts` SET `pMember` = %d, `pAdmJob` = '0', `pRank` = '1', `pModel` = %d, `pJob` = '0', `ArmyPlay` = %d, `ArmyRank` = '%s' WHERE `id` = %d", fractionid,chg_skinid,pData[actplayerid][ArmyPlay],pData[actplayerid][ArmyRank],pData[actplayerid][pID]);
			mysql_tquery(mysql_Handle, query);
			new mes[128];
			format(mes,sizeof(mes),"%s √°√ª√´ √Ø√∞√®√≠√ø√≤ √¢ √Æ√∞√£√†√≠√®√ß√†√∂√®√æ \"%s\"", GetName(actplayerid),GetMember[pData[actplayerid][pMember] - 1]);
			SCM(playerid, COLOR_BLUE,mes);
	        PlayerPlaySound(actplayerid, 17000, 0.0, 0.0, 0.0);
			format(mes,sizeof(mes),"√Ç√ª √°√ª√´√® √Ø√∞√®√≠√ø√≤√ª √¢ √Æ√∞√£√†√≠√®√ß√†√∂√®√æ \"%s\"",GetMember[pData[actplayerid][pMember] - 1]);
			SCM(actplayerid,COLOR_BLUE,mes);
	        SCM(actplayerid,COLOR_MAIN, "√Ç√ª √¨√Æ√¶√•√≤√• √Æ√ß√≠√†√™√Æ√¨√®√≤√º√±√ø √± √™√Æ√¨√†√≠S√≠√¨√® √Æ√∞√£√†√≠√®√ß√†√∂√®√® √®√±√Ø√Æ√´√º√ß√≥√ø "CORANGE"/mn > √ë√Ø√®√±√Æ√™ √™√Æ√¨√†√≠√§");
			SetPlayerSkin(actplayerid,chg_skinid);

			pData[actplayerid][pSpawn] = 2;
			UpdatePlayerData(actplayerid, "pSpawn", 2);
		}
		case 3: {
			pData[actplayerid][pModel] = chg_skinid;
			SetPlayerSkin(actplayerid,pData[actplayerid][pModel]);
			UpdatePlayerData(actplayerid,"pModel",pData[actplayerid][pModel]);
			DeletePVar(actplayerid, "pOfferFractionid");
			DeletePVar(playerid, "actinplayerid");
			pData[actplayerid][pSpawn] = 2;
			UpdatePlayerData(actplayerid, "pSpawn", 2);
		}
		case 4: {
			new org_number = GetPVarInt(playerid, "org_number__setleader"), orgen_number = GetPVarInt(playerid, "orgen_number__setleader");
			new player_lead = GetPVarInt(playerid, "id_setleader"), 
			prm_unit = GetPVarInt(playerid, "prm_unit__setleader");
			DeletePVar(playerid, "id_setleader");
			DeletePVar(playerid, "org_number__setleader");
			DeletePVar(playerid, "orgen_number__setleader");
			DeletePVar(playerid, "prm_unit__setleader");
			string[0] = EOS;
			pData[player_lead][pMember] = org_number;
			pData[player_lead][pLeader] = org_number;
			pData[player_lead][pRank] = 10;
			pData[player_lead][pModel] = chg_skinid;
			pData[player_lead][pJob] = 0;
			pData[player_lead][pAdmJob] = 0;
			new query[210];
			mysql_format(mysql_Handle, query, sizeof(query), "UPDATE `accounts` SET `pAdmJob` = '0', `pMember` = %d, `pRank` = '10', `pModel` = %d, `pLeader` = %d, `pJob` = '0' WHERE `id` = %d", org_number, chg_skinid, org_number, pData[player_lead][pID]);
			mysql_tquery(mysql_Handle, query);
			SetPlayerColor(player_lead, FractionInfo[pData[player_lead][pMember]][fColor]);
			new day, month, year, hour, minuite, second;
			getdate(year, month, day);
			gettime(hour, minuite, second);
			FixHour(hour);
			hour = shifthour;
			new data2[22];
			format(data2, 22, "%02d.%02d.%d √¢ %02d:%d", day, month, year, hour, minuite);
			mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('%s[%d] √≠√†√ß√≠√†√∑√®√´ %s[%i] √´√®√§√•√∞√Æ√¨ √Ø√Æ√§√∞√†√ß√§√•√´√•√≠√®√ø / √Æ√∞√£√†√≠√®√ß√†√∂√®√® \"%s\"','‚Äî','%s')", pData[playerid][pName], playerid, GetName(player_lead), player_lead, GetMember[org_number - 1], data2);
			mysql_tquery(mysql_Handle, string);

			pData[player_lead][pSpawn] = 2;
			UpdatePlayerData(player_lead, "pSpawn", 2);

			if(orgen_number == 1 && prm_unit == 0 || orgen_number == 2 && prm_unit == 0 || orgen_number == 3 && prm_unit == 0 || orgen_number == 4 && prm_unit == 0) SCMF(player_lead, COLOR_YELLOW, "%s[%d] √≠√†√ß√≠√†√∑√®√´ √Ç√†√± √´√®√§√•√∞√Æ√¨ √Æ√∞√£√†√≠√®√ß√†√∂√®√® \"%s\"", pData[playerid][pName], playerid, GetMember[org_number - 1]);
			else if(orgen_number == 1 || orgen_number == 2 || orgen_number == 3 || orgen_number == 4) SCMF(player_lead, COLOR_YELLOW, "%s[%d] √≠√†√ß√≠√†√∑√®√´ √Ç√†√± √´√®√§√•√∞√Æ√¨ √Ø√Æ√§√∞√†√ß√§√•√´√•√≠√®√ø \"%s\"", pData[playerid][pName], playerid, GetMember[org_number - 1]);
			else SCMF(player_lead, COLOR_YELLOW, "%s[%d] √≠√†√ß√≠√†√∑√®√´ √Ç√†√± √´√®√§√•√∞√Æ√¨ √Æ√∞√£√†√≠√®√ß√†√∂√®√® \"%s\"", pData[playerid][pName], playerid, GetMember[org_number - 1]);

			if(orgen_number == 1 && prm_unit == 0 || orgen_number == 2 && prm_unit == 0 || orgen_number == 3 && prm_unit == 0 || orgen_number == 4 && prm_unit == 0) SCMF(playerid, COLOR_YELLOW, "√Ç√ª √≠√†√ß√≠√†√∑√®√´√® %s[%d] √´√®√§√•√∞√Æ√¨ √Æ√∞√£√†√≠√®√ß√†√∂√®√® \"%s\"", GetName(player_lead), player_lead, GetMember[org_number - 1]);
			else if(orgen_number == 1 || orgen_number == 2 || orgen_number == 3 || orgen_number == 4) SCMF(playerid, COLOR_YELLOW, "√Ç√ª √≠√†√ß√≠√†√∑√®√´√® %s[%d] √´√®√§√•√∞√Æ√¨ √Ø√Æ√§√∞√†√ß√§√•√´√•√≠√®√ø \"%s\"", GetName(player_lead), player_lead, GetMember[org_number - 1]);
			else SCMF(playerid, COLOR_YELLOW, "√Ç√ª √≠√†√ß√≠√†√∑√®√´√® %s[%d] √´√®√§√•√∞√Æ√¨ √Æ√∞√£√†√≠√®√ß√†√∂√®√® \"%s\"", GetName(player_lead), player_lead, GetMember[org_number - 1]);

			new mes[128];
			if(orgen_number == 1 && prm_unit == 0 || orgen_number == 2 && prm_unit == 0 || orgen_number == 3 && prm_unit == 0 || orgen_number == 4 && prm_unit == 0) format(mes,sizeof(mes),"[A] %s[%d] √≠√†√ß√≠√†√∑√®√´ %s[%i] √´√®√§√•√∞√Æ√¨ √Æ√∞√£√†√≠√®√ß√†√∂√®√® \"%s\"", pData[playerid][pName], playerid, GetName(player_lead), player_lead, GetMember[org_number - 1]);
			else if(orgen_number == 1 || orgen_number == 2 || orgen_number == 3 || orgen_number == 4) format(mes, sizeof(mes), "[A] %s[%d] √≠√†√ß√≠√†√∑√®√´ %s[%i] √´√®√§√•√∞√Æ√¨ √Ø√Æ√§√∞√†√ß√§√•√´√•√≠√®√ø \"%s\"", pData[playerid][pName], playerid, GetName(player_lead), player_lead, GetMember[org_number - 1]);
			else format(mes, sizeof(mes), "[A] %s[%d] √≠√†√ß√≠√†√∑√®√´ %s[%i] √´√®√§√•√∞√Æ√¨ √Æ√∞√£√†√≠√®√ß√†√∂√®√® \"%s\"", pData[playerid][pName], playerid, GetName(player_lead), player_lead, GetMember[org_number - 1]);

			AdminMessage(COLOR_RED, mes);
			if(GetPVarInt(playerid, "AdminMessages")) SCM(playerid, COLOR_RED, mes);
			SetPlayerSkin(player_lead, chg_skinid);
		}
		case 5: {
			SetPVarInt(playerid, "SPY_skin_id", chg_skinid);
			new str_rnk[470];
			for(new i = 0; i < 10; i ++) 
				format(str_rnk, sizeof(str_rnk), "%s%s. %d √∞√†√≠√£\n", str_rnk, new_rank_name[GetPVarInt(playerid, #fraction_id) - 1][i], i + 1);
			SPD(playerid, 1192, DIALOG_STYLE_LIST, "√Ç√ª√°√•√∞√®√≤√• √∞√†√≠√£", str_rnk, "Seleccione", "Cerrar");
		}
	}
	return 1;
}
stock actions_acs_select(playerid, model,PlayerText:playertid) {
	if(pData[playerid][pCash] < price_its_acs[playerid]) 
		return SCMF(playerid, COLOR_LIGHTGREY, "√ë√≤√Æ√®√¨√Æ√±√≤√º √Ω√≤√Æ√£√Æ √Ø√∞√•√§√¨√•√≤√† √±√Æ√±√≤√†√¢√´√ø√•√≤ "CCYAN"%d$", price_its_acs[playerid]);

	new index;
	switch(type_its_acs[playerid]) {
		case 1: index = 0;
		case 2: index = 2;
		case 3: index = 2;
		case 4: index = 5;
		case 5: index = 6;
		case 6: index = 7;
	}

	if(type_its_acs[playerid] == 5 && model == 19472 && !GetPVarInt(playerid, "in_edit_acs"))
		return SCM(playerid,-1, "√ë√≠√†√∑√†√´√† √¢√ª√°√•√∞√®√≤√• {cc8800}√≤√®√Ø √≥√±√Æ√¢");
	else if(type_its_acs[playerid] == 6 && model == 19472 && !GetPVarInt(playerid, "in_edit_acs")) 
		return SCM(playerid,-1, "√ë√≠√†√∑√†√´√† √¢√ª√°√•√∞√®√≤√• {cc8800}√Ø√∞√®√∑¬∏√±√™√≥");
	else if(type_its_acs[playerid] == 5 && model == 19472 && GetPVarInt(playerid, "in_edit_acs")) {
		new color1,color2;
		model =GetPVarInt(playerid, "colorModel");
		switch(GetPVarInt(playerid, "color_acs_select")) {
			case 1: color1 = 0xFFE1E1E1;
			case 2: color1 = 0xFF9E9E9E;
			case 3: color1 = 0xFF4F4F4F;
			case 4: color1 = 0xFF0B0B0B;
			case 5: color1 = 0xFFE1CBB4;
			case 6: color1 = 0xFFE19544;
			case 7: color1 = 0xFFB45D00;
			case 8: color1 = 0xFF5A2F00;
			case 9: color1 = 0xFFD0AFAF;
			case 10: color1 = 0xFFB45A5A;
			case 11: color1 = 0xFF872D2D;
			case 12: color1 = 0xFF551C1C;
			case 13: color1 = 0xFFE1AB9E;
			case 14: color1 = 0xFFE16344;
			case 15: color1 = 0xFFCB2900;
			case 16: color1 = 0xFF871B00;
			case 17: color1 = 0xFF9E9EE1;
			case 18: color1 = 0xFF2D2DE1;
			case 19: color1 = 0xFF00009E;
			case 20: color1 = 0xFF000044;
			case 21: color1 = 0xFFAFD0AF;
			case 22: color1 = 0xFF5AB45A;
			case 23: color1 = 0xFF287628;
			case 24: color1 = 0xFF113211;
			case 25: color1 = 0xFFBF9EE1;
			case 26: color1 = 0xFF9244E1;
			case 27: color1 = 0xFF5A00B4;
			case 28: color1 = 0xFF2D005A;
		}
		SetPVarInt(playerid, "code_colorTYPE_acs", GetPVarInt(playerid, "color_acs_select"));
		DeletePVar(playerid, "color_acs_select");
		color2 = color1;
		SetPVarInt(playerid, "code_color_acs", color1);
		RemovePlayerAttachedObject(playerid, index);
		tmp_ptID_acs[playerid]=playertid;
		set_with_coord_attached_object(playerid,model,index,color1,color2);
		EditAttachedObject(playerid, index);
		return 1; // √¢√ª√°√Æ√∞ √∂√¢√•√≤√† √ì√ë√õ
	}
	else if(type_its_acs[playerid] == 6 && model == 19472 && GetPVarInt(playerid, "in_edit_acs")) {
		new color1,color2;
		model =GetPVarInt(playerid, "colorModel");
		switch(GetPVarInt(playerid, "color_acs_select")) {
			case 1: color1 = 0xFFE1E1E1;
			case 2: color1 = 0xFF9E9E9E;
			case 3: color1 = 0xFF4F4F4F;
			case 4: color1 = 0xFF0B0B0B;
			case 5: color1 = 0xFFE1CBB4;
			case 6: color1 = 0xFFE19544;
			case 7: color1 = 0xFFB45D00;
			case 8: color1 = 0xFF5A2F00;
			case 9: color1 = 0xFFD0AFAF;
			case 10: color1 = 0xFFB45A5A;
			case 11: color1 = 0xFF872D2D;
			case 12: color1 = 0xFF551C1C;
			case 13: color1 = 0xFFE1AB9E;
			case 14: color1 = 0xFFE16344;
			case 15: color1 = 0xFFCB2900;
			case 16: color1 = 0xFF871B00;
			case 17: color1 = 0xFF9E9EE1;
			case 18: color1 = 0xFF2D2DE1;
			case 19: color1 = 0xFF00009E;
			case 20: color1 = 0xFF000044;
			case 21: color1 = 0xFFAFD0AF;
			case 22: color1 = 0xFF5AB45A;
			case 23: color1 = 0xFF287628;
			case 24: color1 = 0xFF113211;
			case 25: color1 = 0xFFBF9EE1;
			case 26: color1 = 0xFF9244E1;
			case 27: color1 = 0xFF5A00B4;
			case 28: color1 = 0xFF2D005A;
		}
		SetPVarInt(playerid, "code_colorTYPE_acs", GetPVarInt(playerid, "color_acs_select"));
		DeletePVar(playerid, "color_acs_select");
		color2 = color1;
		SetPVarInt(playerid, "code_color_acs", color1);
		RemovePlayerAttachedObject(playerid, index);
		set_with_coord_attached_object(playerid,model,index,color1,color2);
		EditAttachedObject(playerid, index);
		return 1; // √¢√ª√°√Æ√∞ √∂√¢√•√≤√† √è√ê√à√ó¬®√ë√ä√Ä
	}

	SetPVarInt(playerid, "colorModel", model);
	RemovePlayerAttachedObject(playerid, index);
	set_with_coord_attached_object(playerid,model,index);
	EditAttachedObject(playerid, index);
	return SetPVarInt(playerid, "in_edit_acs", 1);
}
stock set_with_coord_attached_object(playerid,model,index,color1=0,color2=0) {
	if(type_its_acs[playerid] == 1) SetPlayerAttachedObject(playerid, index, model, 2, 0.087999, 0.047999, 0.000000, 90.000000, 90.000000, 0.000000);
	
	else if(model==19330||model==19331) SetPlayerAttachedObject(playerid, index, model, 2,0.174998,-0.049001,0.012999,-3.299997,2.099982,0.000000);
	else if(model==19163) SetPlayerAttachedObject(playerid, index, model, 2,0.080998,0.054998,-0.001000,90.000000,90.000000,86.000000);
	else if(model==19141||model==19115||model==19116||model==19117||model==19118||model==19119||model==19120||model==19120||model==19101) 
		SetPlayerAttachedObject(playerid, index, model, 2,0.148000,-0.022999,0.005999);
	else if(model==18910||model==18909||model==18908||model==18907||model==18906||model==18905||model==18904||model==18903||model==18902||model==18901||model==18900||model==18899||model==18898||model==18897||model==18896||model==18895||model==18894||model==18893||model==18892||model==18891) 
		SetPlayerAttachedObject(playerid, index, model, 2,0.081999,0.036999,0.004999, -180.000000, 270.000000, 0.000000);
	else if(model==19067||model==18971||model==18972||model==18973||model==18636||model==18967||model==18968||model==18969||model==19488||model==18970) 
		SetPlayerAttachedObject(playerid, index, model, 2,0.081999,0.036999,0.004999, 0.000000, 90.000000, 90.000000);
	else if(model==19352) SetPlayerAttachedObject(playerid, index, model, 2,0.081999,0.036999,0.004999, 0.000000, 90.000000, 0.000000);
	else if(model==18920 || model==18919 || model==18918 || model==18917 || model==18916 || model==18915 || model==18914 || model==18913 || model==18912 || model==18911)
		SetPlayerAttachedObject(playerid, index, model, 2,0.081999,0.036999,0.004999,90.000000,-179.599929,83.600021);
	else if(model==11704) SetPlayerAttachedObject(playerid, index, model, 2,0.087999,0.089999,0.000000,90.000000,87.799972,87.399993,0.390999,0.591000,0.561999);
	else if(model==19472) SetPlayerAttachedObject(playerid, index, model, 2,-0.006999,0.166001,-0.007001,38.399993,58.799980,44.000030);
	else if(model==18974) SetPlayerAttachedObject(playerid, index, model, 2,0.078000,0.072001,-0.003001,0.000000,-89.599983,88.700004);
	else if(model==19469) SetPlayerAttachedObject(playerid, index, model, 2,0.148000,-0.017998,0.038998,174.600036,0.000000,0.000000,1.000000,1.868000,1.675999);
	else if(model==19094||model==19557) SetPlayerAttachedObject(playerid, index, model, 2,0.148000,-0.022999,0.005999, 0.000000, 0.000000, 0.000000);
	else if(type_its_acs[playerid] == 4) SetPlayerAttachedObject(playerid, index, model, 2,0.081999,0.036999,0.004999, 90.000000, 90.000000, 0.000000);
	else if(type_its_acs[playerid] == 5) {
		if(GetPVarInt(playerid, "type_usi") == 2) SetPlayerAttachedObject(playerid, index, model, 2, 0.026000, 0.134999, -0.000999, 0.000000, 0.000000, 90.000000, 1.000000, 1.000000, 1.000000,color1,color2);
		else SetPlayerAttachedObject(playerid, index, model, 2, 0.025000, 0.155000, -0.002999, 0.000000, 0.000000, -58.299991, 1.000000, 1.000000, 1.000000,color1,color2);
	}
	else if(type_its_acs[playerid] == 6) SetPlayerAttachedObject(playerid, index, model, 2,0.148000,-0.022999,0.005999,173.499984,178.500000,-147.599990,1,1,1,color1,color2);
	else SetPlayerAttachedObject(playerid, index, model, 2,0.148000,-0.022999,0.005999);
}
stock closeMenuMarket(playerid) {
	if(!in_buymenu_market[playerid]) return 1;
	in_buymenu_market[playerid]=false;
	for(new i = 0; i < 41; i++) {
		if(i < 5) PlayerTextDrawDestroy(playerid, BUTTON_BUY_MARKET[playerid][i]);
		if(i < 10) PlayerTextDrawDestroy(playerid, INFO_market_player_TD[playerid][i]);
		PlayerTextDrawDestroy(playerid, market_player_TD[playerid][i]);
	}
	return CancelSelectTextDraw(playerid);
}
public OnPlayerClickPlayerTextDraw(playerid, PlayerText: playertextid) {

	if(GetPVarInt(playerid, "table_id") > 0) {
		if(playertextid == table_TD[playerid][12]) {
			new table_id = GetPVarInt(playerid, "table_id");
			if(table_bet_amount[table_id] == 0) 
				return SPD(playerid,1055,DIALOG_STYLE_INPUT,"√ë√≤√†√¢√™√†",""CWHITE"√Ç√¢√•√§√®√≤√• √±√≤√†√¢√™√≥, √≠√† √™√Æ√≤√Æ√∞√≥√æ √µ√Æ√≤√®√≤√• √±√ª√£√∞√†√≤√º:","√É√Æ√≤√Æ√¢√Æ","Cerrar");
		    new bet = table_bet_amount[table_id];

		    if(table_players_amount[table_id] >= 4) 
		    	return SCM(playerid,COLOR_LIGHTGREY,"√à√£√∞√† √≠√† √Ω√≤√Æ√¨ √±√≤√Æ√´√• √≥√¶√• √Ø√∞√Æ√µ√Æ√§√®√≤");

		    new bool:status;
			for(new i=0; i<4; i++) {
				if(table_playerid[table_id][i] != playerid) continue;
				status = true;
				break;
			}
			if(status) 
				return SCM(playerid,COLOR_LIGHTGREY,"√Ç√ª √≥√¶√• √±√§√•√´√†√´√® √±√≤√†√¢√™√≥. √é√¶√®S√≠√©√≤√• √≠√†√∑√†√´√† √®√£√∞√ª");

		    if(pData[playerid][casino_amount] < bet)
		    	return SCM(playerid,COLOR_LIGHTGREY,"√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √¥√®√∏√•√™ √§√´√ø √±√≤√†√¢√™√®");
		    pData[playerid][casino_amount]-=bet;
		    RemoveItemFromInventory(playerid, 8, bet);
		    UpdatePlayerData(playerid, "casino_amount", pData[playerid][casino_amount]);
		    table_playerid[table_id][table_players_amount[table_id]] = playerid;
		    table_players_amount[table_id]++;
		    new fm1[35];
		    format(fm1,sizeof(fm1),"YOUR CHIPS: ~b~~h~~h~%d",pData[playerid][casino_amount]);
		    PlayerTextDrawSetString(playerid, table_TD[playerid][0], fm1);
		    new fm2[35];
		    format(fm2,sizeof(fm2),"PLAYERS: ~r~~h~%d/4",table_players_amount[table_id]);
		    new messtr[50];
		    format(messtr,sizeof(messtr),"%s "CWHITE"√±√§√•√´√†√´ √±√≤√†√¢√™√≥",GetName(playerid));
		    foreach(new i:Player) {
		    	if(GetPVarInt(i, "table_id") != table_id) continue;
		    	PlayerTextDrawSetString(i, table_TD[i][8], fm2);
		    	SCM(i,0xFFCD00FF,messtr);
		    	update_table_info(i);
		    }
		    SCM(playerid,0xE5B090FF,"√Ç√ª √±√§√•√´√†√´√® √±√≤√†√¢√™√≥, √Æ√¶√®S√≠√©√≤√• √≠√†√∑√†√´√† √®√£√∞√ª");
		    SCM(playerid,0xE5B090FF,"√ó√≤√Æ√°√ª √¢√ª√©√≤√® √®√ß √®√£√∞√ª √® √Æ√≤√¨√•√≠√®√≤√º √±√≤√†√¢√™√≥, √≠√†√¶√¨√®√≤√• {ccff00}EXIT");
		    if(table_players_amount[table_id] >= 4) 
		    	SetTimerEx("table_proccess", 500, 0, "i", table_id);
		}
		if(playertextid == table_TD[playerid][4]) {
			new table_id = GetPVarInt(playerid, "table_id");
			CancelSelectTextDraw(playerid);
			for(new i=0; i<19; i++) PlayerTextDrawDestroy(playerid, table_TD[playerid][i]);
			DeletePVar(playerid, "table_id");

			new bool:status;
			for(new i=0; i<4; i++) {
				if(table_playerid[table_id][i] != playerid) continue;
				status = true;
				break;
			}
			if(!status) return 1;

			if(table_players_amount[table_id] >= 4) return 1;

			table_players_amount[table_id]--;
			for(new i=0; i<4; i++) {
				if(table_playerid[table_id][i] != playerid) continue;
				table_playerid[table_id][i] = -1;
			}

			new total;
			new tids[4]=-1;
			for(new i=0; i<4; i++) {
				if(table_playerid[table_id][i] == -1) continue;
				tids[total] = table_playerid[table_id][i];
				total ++;
			}
			for(new i=0; i<4; i++) 
				table_playerid[table_id][i]=-1;
			for(new i=0; i<4; i++) {
				if(tids[i] == 0) break;
				table_playerid[table_id][i] = tids[i];
			}

			table_players_amount[table_id]--;
			new fm2[35];
		    format(fm2,sizeof(fm2),"PLAYERS: ~r~~h~%d/4",table_players_amount[table_id]);
			foreach(new i:Player) {
		    	if(GetPVarInt(i, "table_id") != table_id) continue;
		    	PlayerTextDrawSetString(i, table_TD[i][8], fm2);
		    	update_table_info(i);
		    }

			new summa = table_bet_amount[table_id];
		    pData[playerid][casino_amount] += summa;
		    AddItemToInventory(playerid, summa, 8);
		    UpdatePlayerData(playerid, "casino_amount", pData[playerid][casino_amount]);
		    new fm[35];
		    format(fm,sizeof(fm),"YOUR CHIPS: ~b~~h~~h~%d",pData[playerid][casino_amount]);
		    PlayerTextDrawSetString(playerid, table_TD[playerid][0], fm);
		    SCM(playerid,0xBFBB41FF,"√à√£√∞√† √Æ√≤√¨√•√≠√•√≠√†. √Ç√†√∏√† √±√≤√†√¢√™√† √°√ª√´√† √Ç√†√¨ √¢√Æ√ß√¢√∞√†√π√•√≠√†");
			if(table_players_amount[table_id] < 1) {
				foreach(new i:Player) {
			    	if(GetPVarInt(i, "table_id") != table_id) continue;
			    	PlayerTextDrawSetString(i, table_TD[i][1], "BET: ~g~~h~~h~0 CHIPS");
		    		PlayerTextDrawSetString(i, table_TD[i][8], "PLAYERS: ~r~~h~0/4");
			    }
			    table_bet_amount[table_id] =
				table_players_amount[table_id] = 0;
				for(new i=0; i<4; i++) table_playerid[table_id][i] = -1;
			}
		}
		return 1;
	}

	if(in_slot[playerid]) {
		if(playertextid == casino_slotTD[playerid][21]) {
			if(slots_amount[playerid] != 0) return 1;
			if(slotbet[playerid]==100000) return SCM(playerid, 0xFF9966FF, "√å√†√™√±√®√¨√†√´√º√≠√†√ø √±√≤√†√¢√™√† 100000$");
			slotbet[playerid]+=1000;
			new cstr[30];
			format(cstr,sizeof(cstr),"BET: ~g~~h~%d$",slotbet[playerid]);
			PlayerTextDrawSetString(playerid, casino_slotTD[playerid][17], cstr);
		}
		if(playertextid == casino_slotTD[playerid][20]) {
			if(slots_amount[playerid] != 0) return 1;
			if(slotbet[playerid]==1000) return SCM(playerid, 0xFF9966FF, "√å√®√≠√®√¨√†√´√º√≠√†√ø √±√≤√†√¢√™√† 1000$");
			slotbet[playerid]-=1000;
			new cstr[30];
			format(cstr,sizeof(cstr),"BET: ~g~~h~%d$",slotbet[playerid]);
			PlayerTextDrawSetString(playerid, casino_slotTD[playerid][17], cstr);
		}
		if(playertextid == casino_slotTD[playerid][25]) {
			if(slots_amount[playerid] != 0) return 1;
			if(pData[playerid][pCash] < slotbet[playerid]) 
				return SCM(playerid, 0xFF9966FF, "√ç√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √±√Æ√¢√•√∞√∏√•√≠√®√ø √±√≤√†√¢√™√®");
			Hook_GivePlayerMoney(playerid,-slotbet[playerid]);
			PlayerPlaySound(playerid, 4200, 0, 0, 0);
			SetTimerEx("slots_actions", 150, 0, "i", playerid);
		}
		return 1;
	}	

	if(in_buymenu_market[playerid]) {

		new idmarket = -1;
		for(new i =0; i < 9; i++) {
			if(!IsPlayerInRangeOfPoint(playerid, 5, posMarket[i][markX],posMarket[i][markY],posMarket[i][markZ])) continue;
			if(selleritemid[i] == -1) continue;
			idmarket= i;
			break;
		}
		if(idmarket == -1) {
			closeMenuMarket(playerid);
			return SCM(playerid,COLOR_ERROR,"√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [096]");
		}

		new itemcount;
		for(new i =0; i < 5; i++) {
			if(modelitem[idmarket][i] == -1) 
				continue;
			itemcount ++;
		}
		if(itemcount != GetPVarInt(playerid, "mark_count_items")) {
			closeMenuMarket(playerid);
			return SCM(playerid,COLOR_ERROR,"√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [096]");
		}

		if(selleritemid[idmarket] == playerid) {
			closeMenuMarket(playerid);
			return SCM(playerid,COLOR_LIGHTGREY,"√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Ø√∞√®√Æ√°√∞√•√≤√†√≤√º √±√¢√Æ√® √≤√Æ√¢√†√∞√ª");
		}

		new di_str[90];
		if(playertextid == BUTTON_BUY_MARKET[playerid][0]) {
			SetPVarInt(playerid, "buymarket_num", TDACTION_ITEMSNUMS[playerid][1]);
			format(di_str,sizeof(di_str),""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª √∑√≤√Æ √µ√Æ√≤√®√≤√• √Ø√∞√®√Æ√°√∞√•√±√≤√® √Ω√≤√Æ√≤ √≤√Æ√¢√†√∞ √ß√† {66ccff}%d$?",priceitem[idmarket][TDACTION_ITEMSNUMS[playerid][1]]);
			return SPD(playerid,67,DIALOG_STYLE_MSGBOX,marketname[idmarket][TDACTION_ITEMSNUMS[playerid][1]],di_str,"S√≠","No");
		}
		if(playertextid == BUTTON_BUY_MARKET[playerid][1]) {
			SetPVarInt(playerid, "buymarket_num", TDACTION_ITEMSNUMS[playerid][3]);
			format(di_str,sizeof(di_str),""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª √∑√≤√Æ √µ√Æ√≤√®√≤√• √Ø√∞√®√Æ√°√∞√•√±√≤√® √Ω√≤√Æ√≤ √≤√Æ√¢√†√∞ √ß√† {66ccff}%d$?",priceitem[idmarket][TDACTION_ITEMSNUMS[playerid][3]]);
			return SPD(playerid,67,DIALOG_STYLE_MSGBOX,marketname[idmarket][TDACTION_ITEMSNUMS[playerid][3]],di_str,"S√≠","No");
		}
		if(playertextid == BUTTON_BUY_MARKET[playerid][2]) {
			SetPVarInt(playerid, "buymarket_num", TDACTION_ITEMSNUMS[playerid][5]);
			format(di_str,sizeof(di_str),""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª √∑√≤√Æ √µ√Æ√≤√®√≤√• √Ø√∞√®√Æ√°√∞√•√±√≤√® √Ω√≤√Æ√≤ √≤√Æ√¢√†√∞ √ß√† {66ccff}%d$?",priceitem[idmarket][TDACTION_ITEMSNUMS[playerid][5]]);
			return SPD(playerid,67,DIALOG_STYLE_MSGBOX,marketname[idmarket][TDACTION_ITEMSNUMS[playerid][5]],di_str,"S√≠","No");
		}
		if(playertextid == BUTTON_BUY_MARKET[playerid][3]) {
			SetPVarInt(playerid, "buymarket_num", TDACTION_ITEMSNUMS[playerid][7]);
			format(di_str,sizeof(di_str),""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª √∑√≤√Æ √µ√Æ√≤√®√≤√• √Ø√∞√®√Æ√°√∞√•√±√≤√® √Ω√≤√Æ√≤ √≤√Æ√¢√†√∞ √ß√† {66ccff}%d$?",priceitem[idmarket][TDACTION_ITEMSNUMS[playerid][7]]);
			return SPD(playerid,67,DIALOG_STYLE_MSGBOX,marketname[idmarket][TDACTION_ITEMSNUMS[playerid][7]],di_str,"S√≠","No");
		}
		if(playertextid == BUTTON_BUY_MARKET[playerid][4]) {
			SetPVarInt(playerid, "buymarket_num", TDACTION_ITEMSNUMS[playerid][9]);
			format(di_str,sizeof(di_str),""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª √∑√≤√Æ √µ√Æ√≤√®√≤√• √Ø√∞√®√Æ√°√∞√•√±√≤√® √Ω√≤√Æ√≤ √≤√Æ√¢√†√∞ √ß√† {66ccff}%d$?",priceitem[idmarket][TDACTION_ITEMSNUMS[playerid][9]]);
			return SPD(playerid,67,DIALOG_STYLE_MSGBOX,marketname[idmarket][TDACTION_ITEMSNUMS[playerid][9]],di_str,"S√≠","No");
		}

		return 1;
	}

	if(GetPVarInt(playerid, "selecting_acs")) {
		if(playertextid == td_acs_items[playerid][0]) {
			SetPVarInt(playerid, "color_acs_select", 28);
			return actions_acs_select(playerid, model_its_acs[playerid][0],playertextid);
		}
		if(playertextid == td_acs_items[playerid][1]) {
			SetPVarInt(playerid, "color_acs_select", 24);
			return actions_acs_select(playerid, model_its_acs[playerid][1],playertextid);
		}
		if(playertextid == td_acs_items[playerid][2]) {
			SetPVarInt(playerid, "color_acs_select", 20);
			return actions_acs_select(playerid, model_its_acs[playerid][2],playertextid);
		}
		if(playertextid == td_acs_items[playerid][3]) {
			SetPVarInt(playerid, "color_acs_select", 16);
			return actions_acs_select(playerid, model_its_acs[playerid][3],playertextid);
		}
		if(playertextid == td_acs_items[playerid][4]) {
			SetPVarInt(playerid, "color_acs_select", 12);
			return actions_acs_select(playerid, model_its_acs[playerid][4],playertextid);
		}
		if(playertextid == td_acs_items[playerid][5]) {
			SetPVarInt(playerid, "color_acs_select", 8);
			return actions_acs_select(playerid, model_its_acs[playerid][5],playertextid);
		}
		if(playertextid == td_acs_items[playerid][6]) {
			SetPVarInt(playerid, "color_acs_select", 4);
			return actions_acs_select(playerid, model_its_acs[playerid][6],playertextid);
		}
		if(playertextid == td_acs_items[playerid][7]) {
			SetPVarInt(playerid, "color_acs_select", 27);
			return actions_acs_select(playerid, model_its_acs[playerid][7],playertextid);
		}
		if(playertextid == td_acs_items[playerid][8]) {
			SetPVarInt(playerid, "color_acs_select", 23);
			return actions_acs_select(playerid, model_its_acs[playerid][8],playertextid);
		}
		if(playertextid == td_acs_items[playerid][9]) {
			SetPVarInt(playerid, "color_acs_select", 19);
			return actions_acs_select(playerid, model_its_acs[playerid][9],playertextid);
		}
		if(playertextid == td_acs_items[playerid][10]) {
			SetPVarInt(playerid, "color_acs_select", 15);
			return actions_acs_select(playerid, model_its_acs[playerid][10],playertextid);
		}
		if(playertextid == td_acs_items[playerid][11]) {
			SetPVarInt(playerid, "color_acs_select", 11);
			return actions_acs_select(playerid, model_its_acs[playerid][11],playertextid);
		}
		if(playertextid == td_acs_items[playerid][12]) {
			SetPVarInt(playerid, "color_acs_select", 7);
			return actions_acs_select(playerid, model_its_acs[playerid][12],playertextid);
		}
		if(playertextid == td_acs_items[playerid][13]) {
			SetPVarInt(playerid, "color_acs_select", 3);
			return actions_acs_select(playerid, model_its_acs[playerid][13],playertextid);
		}
		if(playertextid == td_acs_items[playerid][14]) {
			SetPVarInt(playerid, "color_acs_select", 26);
			return actions_acs_select(playerid, model_its_acs[playerid][14],playertextid);
		}
		if(playertextid == td_acs_items[playerid][15]) {
			SetPVarInt(playerid, "color_acs_select", 22);
			return actions_acs_select(playerid, model_its_acs[playerid][15],playertextid);
		}
		if(playertextid == td_acs_items[playerid][16]) {
			SetPVarInt(playerid, "color_acs_select", 18);
			return actions_acs_select(playerid, model_its_acs[playerid][16],playertextid);
		}
		if(playertextid == td_acs_items[playerid][17]) {
			SetPVarInt(playerid, "color_acs_select", 14);
			return actions_acs_select(playerid, model_its_acs[playerid][17],playertextid);
		}
		if(playertextid == td_acs_items[playerid][18]) {
			SetPVarInt(playerid, "color_acs_select", 10);
			return actions_acs_select(playerid, model_its_acs[playerid][18],playertextid);
		}
		if(playertextid == td_acs_items[playerid][19]) {
			SetPVarInt(playerid, "color_acs_select", 6);
			return actions_acs_select(playerid, model_its_acs[playerid][19],playertextid);
		}
		if(playertextid == td_acs_items[playerid][20]) {
			SetPVarInt(playerid, "color_acs_select", 2);
			return actions_acs_select(playerid, model_its_acs[playerid][20],playertextid);
		}
		if(playertextid == td_acs_items[playerid][21]) {
			SetPVarInt(playerid, "color_acs_select", 25);
			return actions_acs_select(playerid, model_its_acs[playerid][21],playertextid);
		}
		if(playertextid == td_acs_items[playerid][22]) {
			SetPVarInt(playerid, "color_acs_select", 21);
			return actions_acs_select(playerid, model_its_acs[playerid][22],playertextid);
		}
		if(playertextid == td_acs_items[playerid][23]) {
			SetPVarInt(playerid, "color_acs_select", 17);
			return actions_acs_select(playerid, model_its_acs[playerid][23],playertextid);
		}
		if(playertextid == td_acs_items[playerid][24]) {
			SetPVarInt(playerid, "color_acs_select", 13);
			return actions_acs_select(playerid, model_its_acs[playerid][24],playertextid);
		}
		if(playertextid == td_acs_items[playerid][25]) {
			SetPVarInt(playerid, "color_acs_select", 9);
			return actions_acs_select(playerid, model_its_acs[playerid][25],playertextid);
		}
		if(playertextid == td_acs_items[playerid][26]) {
			SetPVarInt(playerid, "color_acs_select", 5);
			return actions_acs_select(playerid, model_its_acs[playerid][26],playertextid);
		}
		if(playertextid == td_acs_items[playerid][27]) {
			SetPVarInt(playerid, "color_acs_select", 1);
			return actions_acs_select(playerid, model_its_acs[playerid][27],playertextid);
		}
		if(playertextid == td_acs_items[playerid][28]) return actions_acs_select(playerid, model_its_acs[playerid][28],playertextid);
		if(playertextid == td_acs_items[playerid][29]) return actions_acs_select(playerid, model_its_acs[playerid][29],playertextid);
		if(playertextid == td_acs_items[playerid][30]) return actions_acs_select(playerid, model_its_acs[playerid][30],playertextid);
		if(playertextid == td_acs_items[playerid][31]) return actions_acs_select(playerid, model_its_acs[playerid][31],playertextid);
		if(playertextid == td_acs_items[playerid][32]) return actions_acs_select(playerid, model_its_acs[playerid][32],playertextid);
		if(playertextid == td_acs_items[playerid][33]) {
			DeletePVar(playerid, "type_usi");
			return actions_acs_select(playerid, model_its_acs[playerid][33],playertextid);
		}
		if(playertextid == td_acs_items[playerid][34]) {
			if(type_its_acs[playerid] == 5) SetPVarInt(playerid, "type_usi", 2);
			return actions_acs_select(playerid, model_its_acs[playerid][34],playertextid);
		}
	}

	if(playertextid == lift_td[playerid][29]) {
		if(fl_floor[playerid] == 0) 
			return SCM(playerid,COLOR_GREY,"√Ç√ª √≥√¶√• √≠√†√µ√Æ√§√®√≤√•√±√º √≠√† √Ω√≤√Æ√¨ √Ω√≤√†√¶√•");

		SetPlayerVirtualWorld(playerid, 1);
		SetPlayerPos(playerid, 288.1700,-1609.6801,47.0800);
		SetPlayerFacingAngle(playerid,180.0);
		SetCameraBehindPlayer(playerid);
		PlayerPlaySound(playerid, 6401, 0.0, 0.0, 0.0);

		GameTextForPlayer(playerid, "floor ~b~1", 3000, 1);

		for(new i = 0; i < 34; i ++) PlayerTextDrawDestroy(playerid, lift_td[playerid][i]);
		CancelSelectTextDraw(playerid);
		SetPVarInt(playerid, "delay_lifttd", gettime() + 3);
	}
	if(playertextid == lift_td[playerid][27]) {
		if(fl_floor[playerid] == 1) 
			return SCM(playerid,COLOR_GREY,"√Ç√ª √≥√¶√• √≠√†√µ√Æ√§√®√≤√•√±√º √≠√† √Ω√≤√Æ√¨ √Ω√≤√†√¶√•");

		SetPlayerVirtualWorld(playerid, 1);
		SetPlayerPos(playerid, 288.1700,-1609.6801,51.7800);
		SetPlayerFacingAngle(playerid,180.0);
		SetCameraBehindPlayer(playerid);
		PlayerPlaySound(playerid, 6401, 0.0, 0.0, 0.0);

		GameTextForPlayer(playerid, "floor ~b~2", 3000, 1);

		for(new i = 0; i < 34; i ++) PlayerTextDrawDestroy(playerid, lift_td[playerid][i]);
		CancelSelectTextDraw(playerid);
		SetPVarInt(playerid, "delay_lifttd", gettime() + 3);
	}
	if(playertextid == lift_td[playerid][25]) {
		if(fl_floor[playerid] == 2) 
			return SCM(playerid,COLOR_GREY,"√Ç√ª √≥√¶√• √≠√†√µ√Æ√§√®√≤√•√±√º √≠√† √Ω√≤√Æ√¨ √Ω√≤√†√¶√•");

		SetPlayerVirtualWorld(playerid, 1);
		SetPlayerPos(playerid, 288.1700,-1609.6801,56.2800);
		SetPlayerFacingAngle(playerid,180.0);
		SetCameraBehindPlayer(playerid);
		PlayerPlaySound(playerid, 6401, 0.0, 0.0, 0.0);

		GameTextForPlayer(playerid, "floor ~b~3", 3000, 1);

		for(new i = 0; i < 34; i ++) PlayerTextDrawDestroy(playerid, lift_td[playerid][i]);
		CancelSelectTextDraw(playerid);
		SetPVarInt(playerid, "delay_lifttd", gettime() + 3);
	}
	if(playertextid == lift_td[playerid][23]) {
		if(fl_floor[playerid] == 3) 
			return SCM(playerid,COLOR_GREY,"√Ç√ª √≥√¶√• √≠√†√µ√Æ√§√®√≤√•√±√º √≠√† √Ω√≤√Æ√¨ √Ω√≤√†√¶√•");

		SetPlayerVirtualWorld(playerid, 1);
		SetPlayerPos(playerid, 288.1700,-1609.6801,60.7800);
		SetPlayerFacingAngle(playerid,180.0);
		SetCameraBehindPlayer(playerid);
		PlayerPlaySound(playerid, 6401, 0.0, 0.0, 0.0);

		GameTextForPlayer(playerid, "floor ~b~4", 3000, 1);

		for(new i = 0; i < 34; i ++) PlayerTextDrawDestroy(playerid, lift_td[playerid][i]);
		CancelSelectTextDraw(playerid);
		SetPVarInt(playerid, "delay_lifttd", gettime() + 3);
	}
	if(playertextid == lift_td[playerid][21]) {
		if(fl_floor[playerid] == 4) 
			return SCM(playerid,COLOR_GREY,"√Ç√ª √≥√¶√• √≠√†√µ√Æ√§√®√≤√•√±√º √≠√† √Ω√≤√Æ√¨ √Ω√≤√†√¶√•");

		SetPlayerVirtualWorld(playerid, 1);
		SetPlayerPos(playerid, 288.1700,-1609.6801,65.2800);
		SetPlayerFacingAngle(playerid,180.0);
		SetCameraBehindPlayer(playerid);
		PlayerPlaySound(playerid, 6401, 0.0, 0.0, 0.0);

		GameTextForPlayer(playerid, "floor ~b~5", 3000, 1);

		for(new i = 0; i < 34; i ++) PlayerTextDrawDestroy(playerid, lift_td[playerid][i]);
		CancelSelectTextDraw(playerid);
		SetPVarInt(playerid, "delay_lifttd", gettime() + 3);
	}
	if(playertextid == lift_td[playerid][19]) {
		if(fl_floor[playerid] == 5) 
			return SCM(playerid,COLOR_GREY,"√Ç√ª √≥√¶√• √≠√†√µ√Æ√§√®√≤√•√±√º √≠√† √Ω√≤√Æ√¨ √Ω√≤√†√¶√•");

		SetPlayerVirtualWorld(playerid, 1);
		SetPlayerPos(playerid, 288.1700,-1609.6801,69.7800);
		SetPlayerFacingAngle(playerid,180.0);
		SetCameraBehindPlayer(playerid);
		PlayerPlaySound(playerid, 6401, 0.0, 0.0, 0.0);

		GameTextForPlayer(playerid, "floor ~b~6", 3000, 1);

		for(new i = 0; i < 34; i ++) PlayerTextDrawDestroy(playerid, lift_td[playerid][i]);
		CancelSelectTextDraw(playerid);
		SetPVarInt(playerid, "delay_lifttd", gettime() + 3);
	}
	if(playertextid == lift_td[playerid][17]) {
		if(fl_floor[playerid] == 6) 
			return SCM(playerid,COLOR_GREY,"√Ç√ª √≥√¶√• √≠√†√µ√Æ√§√®√≤√•√±√º √≠√† √Ω√≤√Æ√¨ √Ω√≤√†√¶√•");

		SetPlayerVirtualWorld(playerid, 1);
		SetPlayerPos(playerid, 288.1700,-1609.6801,74.2800);
		SetPlayerFacingAngle(playerid,180.0);
		SetCameraBehindPlayer(playerid);
		PlayerPlaySound(playerid, 6401, 0.0, 0.0, 0.0);

		GameTextForPlayer(playerid, "floor ~b~7", 3000, 1);

		for(new i = 0; i < 34; i ++) PlayerTextDrawDestroy(playerid, lift_td[playerid][i]);
		CancelSelectTextDraw(playerid);
		SetPVarInt(playerid, "delay_lifttd", gettime() + 3);
	}
	if(playertextid == lift_td[playerid][15]) {
		if(fl_floor[playerid] == 7) 
			return SCM(playerid,COLOR_GREY,"√Ç√ª √≥√¶√• √≠√†√µ√Æ√§√®√≤√•√±√º √≠√† √Ω√≤√Æ√¨ √Ω√≤√†√¶√•");

		SetPlayerVirtualWorld(playerid, 1);
		SetPlayerPos(playerid, 288.1700,-1609.6801,78.7800);
		SetPlayerFacingAngle(playerid,180.0);
		SetCameraBehindPlayer(playerid);
		PlayerPlaySound(playerid, 6401, 0.0, 0.0, 0.0);

		GameTextForPlayer(playerid, "floor ~b~8", 3000, 1);

		for(new i = 0; i < 34; i ++) PlayerTextDrawDestroy(playerid, lift_td[playerid][i]);
		CancelSelectTextDraw(playerid);
		SetPVarInt(playerid, "delay_lifttd", gettime() + 3);
	}
	if(playertextid == lift_td[playerid][13]) {
		if(fl_floor[playerid] == 8) 
			return SCM(playerid,COLOR_GREY,"√Ç√ª √≥√¶√• √≠√†√µ√Æ√§√®√≤√•√±√º √≠√† √Ω√≤√Æ√¨ √Ω√≤√†√¶√•");

		SetPlayerVirtualWorld(playerid, 1);
		SetPlayerPos(playerid, 288.1700,-1609.6801,83.2800);
		SetPlayerFacingAngle(playerid,180.0);
		SetCameraBehindPlayer(playerid);
		PlayerPlaySound(playerid, 6401, 0.0, 0.0, 0.0);

		GameTextForPlayer(playerid, "floor ~b~9", 3000, 1);

		for(new i = 0; i < 34; i ++) PlayerTextDrawDestroy(playerid, lift_td[playerid][i]);
		CancelSelectTextDraw(playerid);
		SetPVarInt(playerid, "delay_lifttd", gettime() + 3);
	}
	if(playertextid == lift_td[playerid][11]) {
		if(fl_floor[playerid] == 9) 
			return SCM(playerid,COLOR_GREY,"√Ç√ª √≥√¶√• √≠√†√µ√Æ√§√®√≤√•√±√º √≠√† √Ω√≤√Æ√¨ √Ω√≤√†√¶√•");

		SetPlayerVirtualWorld(playerid, 1);
		SetPlayerPos(playerid, 288.1700,-1609.6801,87.7800);
		SetPlayerFacingAngle(playerid,180.0);
		SetCameraBehindPlayer(playerid);
		PlayerPlaySound(playerid, 6401, 0.0, 0.0, 0.0);

		GameTextForPlayer(playerid, "floor ~b~10", 3000, 1);

		for(new i = 0; i < 34; i ++) PlayerTextDrawDestroy(playerid, lift_td[playerid][i]);
		CancelSelectTextDraw(playerid);
		SetPVarInt(playerid, "delay_lifttd", gettime() + 3);
	}
	if(playertextid == lift_td[playerid][9]) {
		if(fl_floor[playerid] == 10) 
			return SCM(playerid,COLOR_GREY,"√Ç√ª √≥√¶√• √≠√†√µ√Æ√§√®√≤√•√±√º √≠√† √Ω√≤√Æ√¨ √Ω√≤√†√¶√•");

		SetPlayerVirtualWorld(playerid, 1);
		SetPlayerPos(playerid, 288.1700,-1609.6801,92.2800);
		SetPlayerFacingAngle(playerid,180.0);
		SetCameraBehindPlayer(playerid);
		PlayerPlaySound(playerid, 6401, 0.0, 0.0, 0.0);

		GameTextForPlayer(playerid, "floor ~b~11", 3000, 1);

		for(new i = 0; i < 34; i ++) PlayerTextDrawDestroy(playerid, lift_td[playerid][i]);
		CancelSelectTextDraw(playerid);
		SetPVarInt(playerid, "delay_lifttd", gettime() + 3);
	}
	if(playertextid == lift_td[playerid][7]) {
		if(fl_floor[playerid] == 11) 
			return SCM(playerid,COLOR_GREY,"√Ç√ª √≥√¶√• √≠√†√µ√Æ√§√®√≤√•√±√º √≠√† √Ω√≤√Æ√¨ √Ω√≤√†√¶√•");

		SetPlayerVirtualWorld(playerid, 1);
		SetPlayerPos(playerid, 288.1700,-1609.6801,96.7800);
		SetPlayerFacingAngle(playerid,180.0);
		SetCameraBehindPlayer(playerid);
		PlayerPlaySound(playerid, 6401, 0.0, 0.0, 0.0);

		GameTextForPlayer(playerid, "floor ~b~12", 3000, 1);

		for(new i = 0; i < 34; i ++) PlayerTextDrawDestroy(playerid, lift_td[playerid][i]);
		CancelSelectTextDraw(playerid);
		SetPVarInt(playerid, "delay_lifttd", gettime() + 3);
	}

	if(playertextid == lift_td[playerid][0]) {
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid, 288.1700,-1609.6801,33.0750);
		SetPlayerFacingAngle(playerid,180.0);
		SetCameraBehindPlayer(playerid);
		PlayerPlaySound(playerid, 6401, 0.0, 0.0, 0.0);

		GameTextForPlayer(playerid, "~g~street", 3000, 1);

		for(new i = 0; i < 34; i ++) PlayerTextDrawDestroy(playerid, lift_td[playerid][i]);
		CancelSelectTextDraw(playerid);
		SetPVarInt(playerid, "delay_lifttd", gettime() + 3);
	}
	if(playertextid == lift_td[playerid][5]) {
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid, 288.1700,-1609.6801,17.9190);
		SetPlayerFacingAngle(playerid,180.0);
		SetCameraBehindPlayer(playerid);
		PlayerPlaySound(playerid, 6401, 0.0, 0.0, 0.0);

		GameTextForPlayer(playerid, "~g~garage", 3000, 1);

		for(new i = 0; i < 34; i ++) PlayerTextDrawDestroy(playerid, lift_td[playerid][i]);
		CancelSelectTextDraw(playerid);
		SetPVarInt(playerid, "delay_lifttd", gettime() + 3);
	}
	if(playertextid == lift_td[playerid][3]) {
		for(new i = 0; i < 34; i ++) PlayerTextDrawDestroy(playerid, lift_td[playerid][i]);
		CancelSelectTextDraw(playerid);
	}

	if(playertextid == chskin_td[playerid][0]) return actions_ch_skin(playerid, 0);
	if(playertextid == chskin_td[playerid][1]) return actions_ch_skin(playerid, 1);
	if(playertextid == chskin_td[playerid][2]) return actions_ch_skin(playerid, 2);
	if(playertextid == chskin_td[playerid][3]) return actions_ch_skin(playerid, 3);
	if(playertextid == chskin_td[playerid][4]) return actions_ch_skin(playerid, 4);
	if(playertextid == chskin_td[playerid][5]) return actions_ch_skin(playerid, 5);
	if(playertextid == chskin_td[playerid][6]) return actions_ch_skin(playerid, 6);
	if(playertextid == chskin_td[playerid][7]) return actions_ch_skin(playerid, 7);
	if(playertextid == chskin_td[playerid][8]) return actions_ch_skin(playerid, 8);
	if(playertextid == chskin_td[playerid][9]) return actions_ch_skin(playerid, 9);
	if(playertextid == chskin_td[playerid][10]) return actions_ch_skin(playerid, 10);
	if(playertextid == chskin_td[playerid][11]) return actions_ch_skin(playerid, 11);
	if(playertextid == chskin_td[playerid][12]) return actions_ch_skin(playerid, 12);
	if(playertextid == chskin_td[playerid][13]) return actions_ch_skin(playerid, 13);
	if(playertextid == chskin_td[playerid][14]) return actions_ch_skin(playerid, 14);
	if(playertextid == chskin_td[playerid][15]) return actions_ch_skin(playerid, 15);
	if(playertextid == tdplayer_panel_auto[2][playerid]) {
		new vehicleid = GetPlayerVehicleID(playerid), driver, passenger, backleft, backright;
		GetVehicleParamsCarWindows(vehicleid, driver, passenger, backleft, backright);
		if(drivewind_open[vehicleid]) {
			SetVehicleParamsCarWindows(vehicleid, 1, passenger, backleft, backright);
			PlayerTextDrawColor(playerid, tdplayer_panel_auto[2][playerid], 0xFF4400FF);
			drivewind_open[vehicleid] = false;
		}
		else {
			SetVehicleParamsCarWindows(vehicleid, 0, passenger, backleft, backright);
			PlayerTextDrawColor(playerid, tdplayer_panel_auto[2][playerid], 0x00CC00FF);
			drivewind_open[vehicleid] = true;
		} PlayerTextDrawHide(playerid, tdplayer_panel_auto[2][playerid]);
		return PlayerTextDrawShow(playerid, tdplayer_panel_auto[2][playerid]);
	}
	if(playertextid == tdplayer_panel_auto[3][playerid]) {
		new vehicleid = GetPlayerVehicleID(playerid), driver, passenger, backleft, backright;
		GetVehicleParamsCarWindows(vehicleid, driver, passenger, backleft, backright);
		if(passwind_open[vehicleid]) {
			SetVehicleParamsCarWindows(vehicleid, driver, 1, backleft, backright);
			PlayerTextDrawColor(playerid, tdplayer_panel_auto[3][playerid], 0xFF4400FF);
			passwind_open[vehicleid] = false;
		}
		else {
			SetVehicleParamsCarWindows(vehicleid, driver, 0, backleft, backright);
			PlayerTextDrawColor(playerid, tdplayer_panel_auto[3][playerid], 0x00CC00FF);
			passwind_open[vehicleid] = true;
		} PlayerTextDrawHide(playerid, tdplayer_panel_auto[3][playerid]);
		return PlayerTextDrawShow(playerid, tdplayer_panel_auto[3][playerid]);
	}
	if(playertextid == tdplayer_panel_auto[1][playerid]) {
		new vehicleid = GetPlayerVehicleID(playerid), driver, passenger, backleft, backright;
		GetVehicleParamsCarWindows(vehicleid, driver, passenger, backleft, backright);
		if(backleftwind_open[vehicleid]) {
			SetVehicleParamsCarWindows(vehicleid, driver, passenger, 1, backright);
			PlayerTextDrawColor(playerid, tdplayer_panel_auto[1][playerid], 0xFF4400FF);
			backleftwind_open[vehicleid] = false;
		}
		else {
			SetVehicleParamsCarWindows(vehicleid, driver, passenger, 0, backright);
			PlayerTextDrawColor(playerid, tdplayer_panel_auto[1][playerid], 0x00CC00FF);
			backleftwind_open[vehicleid] = true;
		} PlayerTextDrawHide(playerid, tdplayer_panel_auto[1][playerid]);
		return PlayerTextDrawShow(playerid, tdplayer_panel_auto[1][playerid]);
	}
	if(playertextid == tdplayer_panel_auto[0][playerid]) {
		new vehicleid = GetPlayerVehicleID(playerid), driver, passenger, backleft, backright;
		GetVehicleParamsCarWindows(vehicleid, driver, passenger, backleft, backright);
		if(backrightwind_open[vehicleid]) {
			SetVehicleParamsCarWindows(vehicleid, driver, passenger, backleft, 1);
			PlayerTextDrawColor(playerid, tdplayer_panel_auto[0][playerid], 0xFF4400FF);
			backrightwind_open[vehicleid] = false;
		}
		else {
			SetVehicleParamsCarWindows(vehicleid, driver, passenger, backleft, 0);
			PlayerTextDrawColor(playerid, tdplayer_panel_auto[0][playerid], 0x00CC00FF);
			backrightwind_open[vehicleid] = true;
		} PlayerTextDrawHide(playerid, tdplayer_panel_auto[0][playerid]);
		return PlayerTextDrawShow(playerid, tdplayer_panel_auto[0][playerid]);
	}
	if(playertextid == tdplayer_panel_auto[6][playerid]) {
		new vehicleid = GetPlayerVehicleID(playerid), driver, passenger, backleft, backright;
		GetVehicleParamsCarDoors(vehicleid, driver, passenger, backleft, backright);
		if(drivedoor_open[vehicleid]) {
			SetVehicleParamsCarDoors(vehicleid, 0, passenger, backleft, backright);
			PlayerTextDrawColor(playerid, tdplayer_panel_auto[6][playerid], 0xFF4400FF);
			drivedoor_open[vehicleid] = false;
		}
		else {
			SetVehicleParamsCarDoors(vehicleid, 1, passenger, backleft, backright);
			PlayerTextDrawColor(playerid, tdplayer_panel_auto[6][playerid], 0x00CC00FF);
			drivedoor_open[vehicleid] = true;
		} PlayerTextDrawHide(playerid, tdplayer_panel_auto[6][playerid]);
		return PlayerTextDrawShow(playerid, tdplayer_panel_auto[6][playerid]);
	}
	if(playertextid == tdplayer_panel_auto[7][playerid]) {
		new vehicleid = GetPlayerVehicleID(playerid), driver, passenger, backleft, backright;
		GetVehicleParamsCarDoors(vehicleid, driver, passenger, backleft, backright);
		if(passdoor_open[vehicleid]) {
			SetVehicleParamsCarDoors(vehicleid, driver, 0, backleft, backright);
			PlayerTextDrawColor(playerid, tdplayer_panel_auto[7][playerid], 0xFF4400FF);
			passdoor_open[vehicleid] = false;
		}
		else {
			SetVehicleParamsCarDoors(vehicleid, driver, 1, backleft, backright);
			PlayerTextDrawColor(playerid, tdplayer_panel_auto[7][playerid], 0x00CC00FF);
			passdoor_open[vehicleid] = true;
		} PlayerTextDrawHide(playerid, tdplayer_panel_auto[7][playerid]);
		return PlayerTextDrawShow(playerid, tdplayer_panel_auto[7][playerid]);
	}
	if(playertextid == tdplayer_panel_auto[5][playerid]) {
		new vehicleid = GetPlayerVehicleID(playerid), driver, passenger, backleft, backright;
		GetVehicleParamsCarDoors(vehicleid, driver, passenger, backleft, backright);
		if(backleftdoor_open[vehicleid]) {
			SetVehicleParamsCarDoors(vehicleid, driver, passenger, 0, backright);
			PlayerTextDrawColor(playerid, tdplayer_panel_auto[5][playerid], 0xFF4400FF);
			backleftdoor_open[vehicleid] = false;
		}
		else {
			SetVehicleParamsCarDoors(vehicleid, driver, passenger, 1, backright);
			PlayerTextDrawColor(playerid, tdplayer_panel_auto[5][playerid], 0x00CC00FF);
			backleftdoor_open[vehicleid] = true;
		} PlayerTextDrawHide(playerid, tdplayer_panel_auto[5][playerid]);
		return PlayerTextDrawShow(playerid, tdplayer_panel_auto[5][playerid]);
	}
	if(playertextid == tdplayer_panel_auto[4][playerid]) {
		new vehicleid = GetPlayerVehicleID(playerid), driver, passenger, backleft, backright;
		GetVehicleParamsCarDoors(vehicleid, driver, passenger, backleft, backright);
		if(backrightdoor_open[vehicleid]) {
			SetVehicleParamsCarDoors(vehicleid, driver, passenger, backleft, 0);
			PlayerTextDrawColor(playerid, tdplayer_panel_auto[4][playerid], 0xFF4400FF);
			backrightdoor_open[vehicleid] = false;
		}
		else {
			SetVehicleParamsCarDoors(vehicleid, driver, passenger, backleft, 1);
			PlayerTextDrawColor(playerid, tdplayer_panel_auto[4][playerid], 0x00CC00FF);
			backrightdoor_open[vehicleid] = true;
		} PlayerTextDrawHide(playerid, tdplayer_panel_auto[4][playerid]);
		return PlayerTextDrawShow(playerid, tdplayer_panel_auto[4][playerid]);
	}
	return 1;
}
CB: slots_actions(playerid) {
	if(!in_slot[playerid]) 
		return 1;
	if(slots_amount[playerid] >= RandomEx(9, 12))
	{
		slots_amount[playerid]=0;
		new g_m_str[80],
			price;
		if(slots_value[playerid][0] == slots_value[playerid][1] && 
			slots_value[playerid][0] == slots_value[playerid][2]) {
			price = slotbet[playerid]*20;
			PlayerPlaySound(playerid, 4201, 0, 0, 0);
			Hook_GivePlayerMoney(playerid,price);
			format(g_m_str,sizeof(g_m_str),"~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~YOU WIN!~n~+%d$",price);
			return GameTextForPlayer(playerid, g_m_str, 2500, 3);
		}
		new win1,win2;
		for(new i=0; i<3; i++) {
			if(slots_value[playerid][i] == 0) 
				win1++;
			if(slots_value[playerid][i] == 1) 
				win2++;
		}
		if(win1 == 2) {
			PlayerPlaySound(playerid, 4201, 0, 0, 0);
			price = slotbet[playerid]*2;
			Hook_GivePlayerMoney(playerid,price);
			format(g_m_str,sizeof(g_m_str),"~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~YOU WIN!~n~+%d$",price);
			return GameTextForPlayer(playerid, g_m_str, 2500, 3);
		}
		else if(win2 == 2) {
			PlayerPlaySound(playerid, 4201, 0, 0, 0);
			price = slotbet[playerid]*3;
			Hook_GivePlayerMoney(playerid,price);
			format(g_m_str,sizeof(g_m_str),"~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~YOU WIN!~n~+%d$",price);
			return GameTextForPlayer(playerid, g_m_str, 2500, 3);
		}

		PlayerPlaySound(playerid, 4202, 0, 0, 0);
		return 1;
	}

	new rand;

	rand = random(7);
	if(rand == 6 || rand == 7) rand = 5;
	slots_value[playerid][0] = rand;
	switch(rand) {
		case 0: PlayerTextDrawSetString(playerid, casino_slotTD[playerid][11], "LD_SLOT:bar1_o");
		case 1: PlayerTextDrawSetString(playerid, casino_slotTD[playerid][11], "LD_SLOT:bar2_o");
		case 2: PlayerTextDrawSetString(playerid, casino_slotTD[playerid][11], "LD_SLOT:bell");
		case 3: PlayerTextDrawSetString(playerid, casino_slotTD[playerid][11], "LD_SLOT:cherry");
		case 4: PlayerTextDrawSetString(playerid, casino_slotTD[playerid][11], "LD_SLOT:grapes");
		case 5, 6, 7: PlayerTextDrawSetString(playerid, casino_slotTD[playerid][11], "LD_SLOT:r_69");
	}

	rand = random(7);
	if(rand == 6 || rand == 7) rand = 5;
	slots_value[playerid][1] = rand;
	switch(rand) {
		case 0: PlayerTextDrawSetString(playerid, casino_slotTD[playerid][12], "LD_SLOT:bar1_o");
		case 1: PlayerTextDrawSetString(playerid, casino_slotTD[playerid][12], "LD_SLOT:bar2_o");
		case 2: PlayerTextDrawSetString(playerid, casino_slotTD[playerid][12], "LD_SLOT:bell");
		case 3: PlayerTextDrawSetString(playerid, casino_slotTD[playerid][12], "LD_SLOT:cherry");
		case 4: PlayerTextDrawSetString(playerid, casino_slotTD[playerid][12], "LD_SLOT:grapes");
		case 5, 6, 7: PlayerTextDrawSetString(playerid, casino_slotTD[playerid][12], "LD_SLOT:r_69");
	}

	rand = random(7);
	if(rand == 6 || rand == 7) rand = 5;
	slots_value[playerid][2] = rand;
	switch(rand) {
		case 0: PlayerTextDrawSetString(playerid, casino_slotTD[playerid][13], "LD_SLOT:bar1_o");
		case 1: PlayerTextDrawSetString(playerid, casino_slotTD[playerid][13], "LD_SLOT:bar2_o");
		case 2: PlayerTextDrawSetString(playerid, casino_slotTD[playerid][13], "LD_SLOT:bell");
		case 3: PlayerTextDrawSetString(playerid, casino_slotTD[playerid][13], "LD_SLOT:cherry");
		case 4: PlayerTextDrawSetString(playerid, casino_slotTD[playerid][13], "LD_SLOT:grapes");
		case 5, 6, 7: PlayerTextDrawSetString(playerid, casino_slotTD[playerid][13], "LD_SLOT:r_69");
	}

	slots_amount[playerid]++;
	return SetTimerEx("slots_actions", 150, 0, "i", playerid);
}
CB: perevod_phone(playerid, summa_per, nmr_per) {
	new rows, balance_t, namenumber[MAX_PLAYER_NAME];
	cache_get_row_count(rows);
	if(!rows) return SCM(playerid, COLOR_ERROR, "√ç√†√°√∞√†√≠√≠√ª√© √Ç√†√¨√® √≠√Æ√¨√•√∞ √≠√• √Æ√°√±√´√≥√¶√®√¢√†√•√≤√±√ø"), PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
    if(pData[playerid][pCash] < summa_per) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √§√•√≠√•√£ √§√´√ø √Ø√Æ√Ø√Æ√´√≠√•√≠√®√ø √≠√Æ√¨√•√∞√†");
	cache_get_value_name(0, "Name", namenumber);
	cache_get_value_name_int(0, "pCashNumber", balance_t);
    Hook_GivePlayerMoney(playerid, -summa_per);
    new fmt_gmt[30];
    format(fmt_gmt, sizeof(fmt_gmt), "~r~-%d$", summa_per);
    GameTextForPlayer(playerid, fmt_gmt, 3000, 1);
	mysql_format(mysql_Handle, string, 92, "UPDATE `accounts` SET `pCashNumber` = %d WHERE `pPnumber` = %d", balance_t+summa_per, nmr_per);
	mysql_tquery(mysql_Handle, string);
	if(IsPlayerConnected(GetPlayerID(namenumber))) {
		pData[GetPlayerID(namenumber)][pCashNumber] += summa_per;
		SCMF(GetPlayerID(namenumber), 0xff9966AA, "√Ç√†√∏ √°√†√´√†√≠√± √≤√•√´√•√¥√Æ√≠√† √Ø√Æ√Ø√Æ√´√≠√•√≠ √≠√† {00cc00}%d${ff9966}. √é√≤√Ø√∞√†√¢√®√≤√•√´√º: "CLITEBLUE"%s", summa_per, GetName(playerid));
		SCM(GetPlayerID(namenumber), 0xCC3344FF, "√è√•√∞√•√¢√Æ√§ √¢√ª√Ø√Æ√´√≠√•√≠ √∑√•√∞√•√ß √Ø√∞√®√´√Æ√¶√•√≠√®√• "CCYAN"\"PayMents\"");
	}
	format(string, 90, ""CWHITE"√Å√†√´√†√≠√± √≠√Æ√¨√•√∞√† "CPALEGREEN"%d "CWHITE"√≥√±√Ø√•√∏√≠√Æ √Ø√Æ√Ø√Æ√´√≠√•√≠ √≠√† {009900}%d$", nmr_per, summa_per);
	return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{40bf80}√à√≠√¥√Æ√∞√¨√†√∂√®√ø", string, "Cerrar", "");
}
stock PayMentsAuthorization(playerid) {
	if(!pData[playerid][pPayAcc]) {
		SPD(playerid, 476, DIALOG_STYLE_MSGBOX, "{cc3344}√è√∞√®√´√Æ√¶√•√≠√®√• {ff9966}\"PayMents\"",
			""CWHITE"√á√§√∞√†√¢√±√≤√¢√≥√©√≤√•! √ç√†√∏√• √Ø√∞√®√´√Æ√¶√•√≠√®√• √Æ√°√´√•√£√∑√®√≤ √¢√†√¨ √∞√†√°√Æ√≤√≥\n\
			c √Ç√†√∏√®√¨√® √±√∑√•√≤√†√¨√® √¢ √°√†√≠√™√• √® {40bf40}√´√æ√°√ª√¨√® "CWHITE"√§√•√©√±√≤√¢√®√ø√¨√® √± √≠√®√¨√®.\n\
			√å√ª √±√Æ√≤√∞√≥√§√≠√®√∑√†√•√¨ √±√Æ √¢√±√•√¨√® √°√†√≠√™√†√¨√® √∏√≤√†√≤√†, √Ø√Æ√Ω√≤√Æ√¨√≥ √Ç√ª √¨√Æ√¶√•√≤√•\n\
			√Ø√∞√®√¢√ø√ß√†√≤√º √´√æ√°√ª√• √±√¢√Æ√® √±√∑√•√≤√† √™ √Ø√∞√®√´√Æ√¶√•√≠√®√æ. √Ç√ª √±√¨√Æ√¶√•√≤√•:\n\n\
			 "CYELLOW"- √Ø√•√∞√•√¢√Æ√§√®√≤√º √§√•√≠√•√¶√≠√ª√• √±√∞√•√§√±√≤√¢√† √≠√† √§√∞√≥√£√Æ√© √±√∑¬∏√≤;\n\
			 - √±√≠√®√¨√†√≤√º √®√´√® √™√´√†√±√≤√º √§√•√≠√•√¶√≠√ª√• √±√∞√•√§√±√≤√¢√† √≠√† √´√æ√°√Æ√© √®√ß √Ç√†√∏√®√µ √±√∑√•√≤√Æ√¢;\n\
			 - √Ø√Æ√Ø√Æ√´√≠√®√≤√º √°√†√´√†√≠√± √±√¢√Æ√•√£√Æ √´√®√°√Æ √§√∞√≥√£√Æ√£√Æ √¨√Æ√°√®√´√º√≠√Æ√£√Æ √≤√•√´√•√¥√Æ√≠√†."CWHITE"\n\n\
			√ó√≤√Æ√°√ª √≠√†√∑√†√≤√º √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√• √≠√†√∏√• √Ø√∞√®√´√Æ√¶√•√≠√®√•, √¢√†√¨ √≠√•√Æ√°√µ√Æ√§√®√¨√Æ\n\
			√±√Æ√ßS√≠√≤√º √†√™√™√†√≥√≠√≤ √¢ √Ø√∞√®√´√Æ√¶√•√≠√®√®. √è√∞√Æ√∂√•√±√± √±√Æ√ßS√≠√≠√®√ø √°√•√±√Ø√´√†√≤√•√≠,\n\
			√Æ√§√≠√†√™√Æ √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √Ø√∞√Æ√¶√®√¢√†√≤√º √¢ √∏√≤√†√≤√• √¨√®√≠√®√¨√≥√¨ {ff4d4d}6 √´√•√≤"CWHITE".",
		"√ë√Æ√ßS√≠√≤√º", "Cerrar");
	}
	else SPD(playerid, 437, DIALOG_STYLE_INPUT, ""CPALEGREEN"√Ä√¢√≤√Æ√∞√®√ß√†√∂√®√ø √†√™√™√†√≥√≠√≤√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √Ø√†√∞√Æ√´√º √Æ√≤ √†√™√™√†√≥√≠√≤√† √¢ √Ø√∞√®√´√Æ√¶√•√≠√®√® √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
}

stock AddItemToInventory(playerid, count, type) {
	new bool: check, equery[128];
	for(new i = 0; i < MAX_INV_SLOTS; i ++) {
		if(inv_info[playerid][i_type][i] == type) {
			check = true;
			inv_info[playerid][i_count][i] += count;
			if(type != 2 && type != 7) {
				mysql_format(mysql_Handle, equery, 110, "UPDATE `inventory` SET `itemcount` = %d WHERE `owner_id` = %d AND `itemtype` = %d", inv_info[playerid][i_count][i], pData[playerid][pID], type);
				mysql_tquery(mysql_Handle, equery);
			}
			break;
		}
	}
	if(!check) {
		new slot = GetFirstInvSlot(playerid);
		if(slot == -1) return 1;
		inv_info[playerid][i_count][slot] = count;
		inv_info[playerid][i_type][slot] = type;
		if(type != 2 && type != 7) {
			mysql_format(mysql_Handle, equery, sizeof(equery), "INSERT INTO `inventory` (`owner_id`, `itemslot`, `itemcount`, `itemtype`) VALUES (%d, %d, %d, %d)", pData[playerid][pID], slot, count, type);
			mysql_tquery(mysql_Handle, equery);
		}
	}
	return 1;
}
stock AddSkinToInventory(playerid, model) {
	new slot = GetFirstInvSlot(playerid);
	if(slot == -1) return 1;
	new equery[128];
	inv_info[playerid][i_count][slot] = 1;
	inv_info[playerid][i_type][slot] = model+7;
	inv_info[playerid][in_amodel][slot]=model;
	mysql_format(mysql_Handle, equery, sizeof(equery), "INSERT INTO `inventory` (`owner_id`, `itemslot`,`acsmodel`, `itemcount`, `itemtype`) VALUES (%d, %d,%d, 1, %d)", pData[playerid][pID], slot, model, model+7);
	mysql_tquery(mysql_Handle, equery);
	return 1;
}
CB: load_inventory(playerid) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) return 1;
	new slot, count, type;
	new bone;
	new aindex,amodel,Float:apx,Float:apy,Float:apz,Float:azoom;
	new Float:offsX,Float:offsY,Float:offsZ,
	Float:afrotX,Float:afrotY,Float:afrotZ,
	Float:afscaleX,Float:afscaleY,Float:afscaleZ;
	for(new i = 0; i < rows; i ++) {
		cache_get_value_name_int(i, "itemslot", slot);
		cache_get_value_name_int(i, "itemcount", count);
		cache_get_value_name_int(i, "itemtype", type);
		inv_info[playerid][i_count][slot] = count;
		inv_info[playerid][i_type][slot] = type;

		cache_get_value_name_int(i, "acsindex", aindex);
		cache_get_value_name_int(i, "acsbone", bone);
		cache_get_value_name_int(i, "acsmodel", amodel);
		cache_get_value_name_float(i, "tdpx", apx);
		cache_get_value_name_float(i, "tdpy", apy);
		cache_get_value_name_float(i, "tdpz", apz);
		cache_get_value_name_float(i, "tdzoom", azoom);

		cache_get_value_name_float(i, "offsX", offsX);
		cache_get_value_name_float(i, "offsY", offsY);
		cache_get_value_name_float(i, "offsZ", offsZ);
		cache_get_value_name_float(i, "afrotX", afrotX);
		cache_get_value_name_float(i, "afrotY", afrotY);
		cache_get_value_name_float(i, "afrotZ", afrotZ);
		cache_get_value_name_float(i, "afscaleX", afscaleX);
		cache_get_value_name_float(i, "afscaleY", afscaleY);
		cache_get_value_name_float(i, "afscaleZ", afscaleZ);

		inv_info[playerid][in_aindex][slot]=aindex;
		inv_info[playerid][in_amodel][slot]=amodel;
		inv_info[playerid][in_apx][slot]=apx;
		inv_info[playerid][in_apy][slot]=apy;
		inv_info[playerid][in_apz][slot]=apz;
		inv_info[playerid][in_azoom][slot]=azoom;

		inv_info[playerid][in_bone][slot]=bone;
		inv_info[playerid][in_offsX][slot]=offsX;
		inv_info[playerid][in_offsY][slot]=offsY;
		inv_info[playerid][in_offsZ][slot]=offsZ;
		inv_info[playerid][in_afrotX][slot]=afrotX;
		inv_info[playerid][in_afrotY][slot]=afrotY;
		inv_info[playerid][in_afrotZ][slot]=afrotZ;
		inv_info[playerid][in_afscaleX][slot]=afscaleX;
		inv_info[playerid][in_afscaleY][slot]=afscaleY;
		inv_info[playerid][in_afscaleZ][slot]=afscaleZ;
	}
	return 1;
}

stock RemoveItemFromInventory(playerid, type, count = -1) {
	new equery[110], account_id = pData[playerid][pID];
	if(count == -1) {
		for(new i = 0; i < MAX_INV_SLOTS; i ++) {
			if(inv_info[playerid][i_type][i] == type) {
				inv_info[playerid][i_count][i] = 0;
				inv_info[playerid][i_type][i] = -1;
				mysql_format(mysql_Handle, equery, 90, "DELETE FROM `inventory` WHERE `owner_id` = %d AND `itemtype` = %d", account_id, type);
				mysql_tquery(mysql_Handle, equery);
			}
		}
		return 1;
	}
	for(new i = 0; i < MAX_INV_SLOTS; i ++) {
		if(inv_info[playerid][i_type][i] == type) {
			inv_info[playerid][i_count][i] -= count;
			if(inv_info[playerid][i_count][i] < 1) {
				inv_info[playerid][i_count][i] = 0;
				inv_info[playerid][i_type][i] = -1;
				mysql_format(mysql_Handle, equery, 90, "DELETE FROM `inventory` WHERE `owner_id` = %d AND `itemtype` = %d", account_id, type);
			}
			else mysql_format(mysql_Handle, equery, sizeof(equery), "UPDATE `inventory` SET `itemcount` = %d WHERE `owner_id` = %d AND `itemtype` = %d", inv_info[playerid][i_count][i], account_id, type);
			mysql_tquery(mysql_Handle, equery);
		}
	}
	return 1;
}

stock show_inventory(playerid) {
	if(inventory_open[playerid]) return 1;
	close_dialog(playerid);
	update_items_inventory(playerid);

	#include <inventory_player_TD>

	new str[15];
	new Float: health_status;
	GetPlayerHealth(playerid, health_status);
	format(str,10,"HP: %d",floatround(health_status, floatround_ceil));
	PlayerTextDrawSetString(playerid, player_invTD[playerid][21], str);
	PlayerTextDrawSetPreviewModel(playerid, player_invTD[playerid][20], GetPlayerSkin(playerid));
	health_bar[playerid] = CreatePlayerProgressBar(playerid, 393.00, 281.00, 95.50, 3.20, -1157627649, 100.0);
	SetPlayerProgressBarValue(playerid, health_bar[playerid], health_status);
	ShowPlayerProgressBar(playerid, health_bar[playerid]);
	new Float: armour_status;
	GetPlayerArmour(playerid, armour_status);
	if(armour_status > 0.0) {
		format(str,15,"ARMADURA: %d",floatround(armour_status, floatround_ceil));
		PlayerTextDrawSetString(playerid, player_invTD[playerid][22], str);
		PlayerTextDrawShow(playerid, player_invTD[playerid][22]);
		armour_bar[playerid] = CreatePlayerProgressBar(playerid, 393.00, 308.00, 95.50, 3.30, -1347440641, 100.0);
		SetPlayerProgressBarValue(playerid, armour_bar[playerid], armour_status);
		ShowPlayerProgressBar(playerid, armour_bar[playerid]);
	}

	for(new i = 0; i < 6; i ++) 
		TextDrawShowForPlayer(playerid, usedinvClicking[i]);

	for(new i = 0; i < 25; i ++) 
		TextDrawShowForPlayer(playerid, global_invTD[i]);

	for(new i = 0; i < 26; i ++) 
		TextDrawShowForPlayer(playerid, inv_clickingTD[i]);

	new number[5], mass;
	for(new i = 20, s=-1; i < 26; i ++) { // √≠√†√§√•√≤√ª√• √†√™√±√•√±√±√≥√†√∞√ª
		s++;
		if(inv_info[playerid][i_type][i] == -1) continue;
		PlayerTextDrawSetPreviewModel(playerid, inv_previewUSED[playerid][s], inv_info[playerid][in_amodel][i]);
		PlayerTextDrawSetPreviewRot(playerid, inv_previewUSED[playerid][s], 
		inv_info[playerid][in_apx][i], 
		inv_info[playerid][in_apy][i], 
		inv_info[playerid][in_apz][i], 
		inv_info[playerid][in_azoom][i]);
		PlayerTextDrawShow(playerid, inv_previewUSED[playerid][s]);
		mass ++;
	}
	for(new i = 0; i < MAX_INV_SLOTS; i ++) {
		if(inv_info[playerid][i_type][i] == -1) continue;
		if(inv_info[playerid][i_type][i] == inv_info[playerid][in_aindex][i]+inv_info[playerid][in_amodel][i] && 
			inv_info[playerid][i_type][i] != 0) {
			PlayerTextDrawSetPreviewModel(playerid, inv_previewTD[playerid][i], inv_info[playerid][in_amodel][i]);
			PlayerTextDrawSetPreviewRot(playerid, inv_previewTD[playerid][i], 
			inv_info[playerid][in_apx][i], 
			inv_info[playerid][in_apy][i], 
			inv_info[playerid][in_apz][i], 
			inv_info[playerid][in_azoom][i]);
			mass ++;
		}
		else if(inv_info[playerid][i_type][i]==inv_info[playerid][in_amodel][i]+7 && inv_info[playerid][i_type][i] != 0) {
			PlayerTextDrawSetPreviewModel(playerid, inv_previewTD[playerid][i], inv_info[playerid][in_amodel][i]);
			PlayerTextDrawSetPreviewRot(playerid, inv_previewTD[playerid][i], 
			0.000000, 
			0.000000, 
			0.000000, 
			1.5);
			mass +=2;
		}
		else {
			PlayerTextDrawSetPreviewModel(playerid, inv_previewTD[playerid][i], item_data[inv_info[playerid][i_type][i]][itemmodel]);
			PlayerTextDrawSetPreviewRot(playerid, inv_previewTD[playerid][i], 
			item_data[inv_info[playerid][i_type][i]][itemrotX], 
			item_data[inv_info[playerid][i_type][i]][itemrotY], 
			item_data[inv_info[playerid][i_type][i]][itemrotZ], 
			item_data[inv_info[playerid][i_type][i]][itemzoom]);
			if(inv_info[playerid][i_count][i] > 1) {
				format(number, sizeof(number), "%d", inv_info[playerid][i_count][i]);
				PlayerTextDrawSetString(playerid, td_inv_counts[playerid][i], number);
				PlayerTextDrawShow(playerid, td_inv_counts[playerid][i]);
			}
			if(inv_info[playerid][i_type][i] == 0 || inv_info[playerid][i_type][i] == 1) 
				mass += item_data[inv_info[playerid][i_type][i]][itemmass];
			else mass += item_data[inv_info[playerid][i_type][i]][itemmass]*inv_info[playerid][i_count][i];
		}
		PlayerTextDrawShow(playerid, inv_previewTD[playerid][i]);
	}

	new massstr[12];
	format(massstr,sizeof(massstr),"%d KG", mass);
	PlayerTextDrawSetString(playerid, player_invTD[playerid][23], massstr);

	for(new i = 0; i < 30; i ++) {
		if(i == 22) continue;
		PlayerTextDrawShow(playerid, player_invTD[playerid][i]);
	}

	inventory_open[playerid] = true;
	SCM(playerid,0xffd770FF,"Consejo: Presione ESC para seleccionar Cerrar inv.");

	return SelectTextDraw(playerid, 0x3399FFAA);
}

CMD:alladmins(playerid) {
	if(pData[playerid][pAdmin] < 7) return 1;
	return mysql_tquery(mysql_Handle, "SELECT * FROM `admin`", "show_all_admins", "i", playerid);
}
CB: show_all_admins(playerid) {
	new rows,
		admname[24],
		admlvl;
	string = "{FF9945}√ë√Ø√®√±√Æ√™ √¢√±√•√µ √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√Æ√¢:\n\n"CWHITE"";
	cache_get_row_count(rows);
	for(new i = 0; i < rows; i++) {
		if(i>=50) {
			SCM(playerid,0xCCCCFFFF,"√è√Æ√™√†√ß√†√≠√ª √Ø√•√∞√¢√ª√• 50 √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√Æ√¢ √®√ß √°√†√ß√ª S√≠√≠√≠√ª√µ");
			break;
		}
		cache_get_value_name(i, "Name", admname);
		if(IsAFull_nick(admname)) admlvl = 8;
		else cache_get_value_name_int(i, "level", admlvl);
		format(string,1500,"%s%s - %d\n",string,admname,admlvl);
	}
	return SPD(playerid,0,DIALOG_STYLE_MSGBOX," ",string,"Cerrar","");
}

CMD:orgbankadd(playerid) {
	if(pData[playerid][pAdmin] < 7) return 1;
	return SPD(playerid, 7009, DIALOG_STYLE_INPUT, ""CERROR"√è√Æ√§√≤√¢√•√∞√¶√§√•√≠√®√•", ""CWHITE"√Ñ√´√ø √Ø√Æ√´√≥√∑√•√≠√®√ø √§√Æ√±√≤√≥√Ø√† √™ √Ω√≤√Æ√© √¥√≥√≠√™√∂√®√®,\n√¢√¢√•√§√®√≤√• √Ø√†√∞√Æ√´√º:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
}

CMD:tp(playerid) {
	if(pData[playerid][pAdmin] < 1) return 1;
	return SPD(playerid,4005, DIALOG_STYLE_LIST, "√í√•√´√•√Ø√Æ√∞√≤", "[1] √é√°√π√•√±√≤√¢√•√≠√≠√ª√• √¨√•√±√≤√†\n[2] √Å√†√ß√ª √£√Æ√±. √Æ√∞√£√†√≠√®√ß√†√∂√®√©\n[3] √Å√†√ß√ª √≠√•√´√•√£√†√´√º√≠√ª√µ √Æ√∞√£√†√≠√®√ß√†√∂√®√©", "Seleccione", "Cerrar");
}
CMD:admstat(playerid,params[]) {
	if(pData[playerid][pAdmin] < 7) return 1;
	new nameadm[24];
	if(sscanf(params, "s[24]", nameadm)) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /admstat [√≠√®√™ √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√†]");
	string[0] = EOS;
	format(string, 144, "SELECT * FROM `admin` WHERE `Name` = '%s'", nameadm);
	return mysql_tquery(mysql_Handle, string, "admstat_check", "ds",playerid,nameadm);
}
CB: admstat_check(playerid,aname[]) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) 
		return SCM(playerid, COLOR_LIGHTGREY, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√† √± √≤√†√™√®√¨ √≠√®√™√Æ√¨ No");
	new setadmname[24],data[30],
	kickam,banam,muteam,ansam,warnam,jailam;
	cache_get_value_name(0, "Postavil", setadmname);
	cache_get_value_name(0, "Data", data);
	cache_get_value_name_int(0,"kick", kickam);
	cache_get_value_name_int(0,"ban", banam);
	cache_get_value_name_int(0,"mute", muteam);
	cache_get_value_name_int(0,"ans", ansam);
	cache_get_value_name_int(0,"warn", warnam);
	cache_get_value_name_int(0,"jail", jailam);
	new distr[340];
	format(distr,sizeof(distr),
	""CWHITE"√ä√®√™√Æ√¢: {00CCFF}%d\n\
	"CWHITE"√Å√†√≠√Æ√¢: {00CCFF}%d\n\
	"CWHITE"√è√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√© (√¢√†√∞√≠√Æ√¢): {00CCFF}%d\n\
	"CWHITE"√é√≤√¢√•√≤√Æ√¢ √¢ √∞√•√Ø√Æ√∞√≤: {00CCFF}%d\n\
	"CWHITE"√è√Æ√±√†√§√®√´ √¢ √≤√æ√∞√º√¨√≥: {00CCFF}%d √∞√†√ß\n\n\
	"CWHITE"√Ç√ªS√≠√´ √Ø√∞√†√¢√†: {00CCFF}%s\n\
	"CWHITE"S√≠√≤√† √Ø√Æ√´√≥√∑√•√≠√®√ø √Ø√∞√†√¢: {00CCFF}%s",kickam,banam,warnam,ansam,jailam,setadmname,data);
	return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, aname, distr, "Cerrar","");
}

CMD:mark(playerid) {
	new org_id = pData[playerid][pMember];
	if(org_id != 1 && org_id != 10 && org_id != 21) 
		return SCM(playerid,COLOR_LIGHTGREY,"√Ç√†√¨ √≠√•√§√Æ√±√≤√≥√Ø√≠√† √Ω√≤√† √¥√≥√≠√™√∂√®√ø");
	if(pData[playerid][pRank] < 8) return SCM(playerid,COLOR_LIGHTGREY,"√î√≥√≠√™√∂√®√ø √§√Æ√±√≤√≥√Ø√≠√† √± 8-√£√Æ √∞√†√≠√£√†");
	new fstr[200], org;
	switch(org_id) {
		case 1: org = 0;
		case 10: org = 1;
		case 21: org = 2;
	}
	format(fstr,sizeof(fstr),
	"¬π\t√å√Æ√§√•√´√º\t√í√•√™√≥√π√†√ø √¨√†√∞√™√®√∞√Æ√¢√™√†\n\
	1\tSultan\t%s\n\
	2\tSultan\t%s\n\
	3\tSultan\t%s\n\
	4\tSultan\t%s\n\
	5\tSultan\t%s",
	markauto[org][0],
	markauto[org][1],
	markauto[org][2],
	markauto[org][3],
	markauto[org][4]);
	return SPD(playerid,2212,DIALOG_STYLE_TABLIST_HEADERS,"{ffaa00}√å√†√∞√™√®√∞√Æ√¢√™√†",fstr,"Cambio","Cerrar");
}
CMD:remmarket(playerid) {
	new idmarket=-1;
	for(new i =0; i<9; i++) {
		if(selleritemid[i] != playerid) continue;
		idmarket=i;
		break;
	}
	if(idmarket== -1) return SCM(playerid,COLOR_LIGHTGREY,"√Ç√ª √≠√• √Ø√∞√ÆS√≠¬∏√≤√• √≤√Æ√¢√†√∞√ª √≠√† √∞√ª√≠√™√•");
	if(!IsPlayerInRangeOfPoint(playerid, 6.5, posMarket[idmarket][markX],posMarket[idmarket][markY],posMarket[idmarket][markZ])) 
		return SCM(playerid,COLOR_LIGHTGREY,"√è√Æ√§√Æ√©√§√®√≤√• √°√´√®√¶√• √™ √±√¢√Æ√•√© √Ø√†√´√†√≤√™√• √≠√† √∞√ª√≠√™√•");
	new afmt[200];
	new numbering;
	for(new i = 0; i < 5; i++) {
		if(modelitem[idmarket][i] == -1) 
			continue;
		numbering++;
		format(afmt,sizeof(afmt),"%s[%d] %s\n",afmt,numbering,marketname[idmarket][i]);
	}
	return SPD(playerid,83,DIALOG_STYLE_LIST,"√ë√≠√ø√≤√º √± √Ø√∞√ÆS√≠√¶√®",afmt,"Seleccione","Cerrar");
}
CMD:inv(playerid) return show_inventory(playerid);
CMD:loadcar(playerid) {
	if(GetPlayerVehicleID(playerid) != af_carID[playerid] || 
		GetPlayerState(playerid) != PLAYER_STATE_DRIVER || 
		af_load[playerid]) 
		return SCM(playerid,COLOR_LIGHTGREY,"√Ç√†√¨ √≠√•√§√Æ√±√≤√≥√Ø√≠√† √Ω√≤√† √¥√≥√≠√™√∂√®√ø √¢ S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤");
	if(!IsPlayerInRangeOfPoint(playerid, 8, 2195.0046,-2239.5566,13.5469) && 
		!IsPlayerInRangeOfPoint(playerid, 8, 2211.3887,-2223.7554,13.5469)) return SCM(playerid,COLOR_LIGHTGREY,"√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √ß√Æ√≠√ª √ß√†√£√∞√≥√ß√™√®");

	new Float: posx,Float: posy,Float: posz;
	if(IsPlayerInRangeOfPoint(playerid, 8, 2211.3887,-2223.7554,13.5469)) {
		posx = 2214.4915;
		posy = -2227.8118;
		posz = 14.1732;
	}
	else {
		posx = 2198.8621;
		posy = -2243.4385;
		posz = 14.1723;
	}

	new vehicleid = af_carID[playerid];

    SetVehiclePos(vehicleid, posx,posy,posz);
	SetVehicleZAngle(vehicleid, 45);

	new color;

	switch(random(5)) {
		case 0: color = 0xFFFFFFFF;
		case 1: color = 0xFFBB0000;
		case 2: color = 0xFF66CC66;
		case 3: color = 0xFFFF9900;
		case 4: color = 0xFF3399FF;
	}

	af_objcar[vehicleid][0] = CreateDynamicObject(3594,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
	SetDynamicObjectMaterial(af_objcar[vehicleid][0], 0, -1, "none", "none", color);
	SetDynamicObjectMaterial(af_objcar[vehicleid][0], 1, -1, "none", "none", color);
	SetDynamicObjectMaterial(af_objcar[vehicleid][0], 2, -1, "none", "none", color);
	SetDynamicObjectMaterial(af_objcar[vehicleid][0], 3, -1, "none", "none", color);
	SetDynamicObjectMaterial(af_objcar[vehicleid][0], 4, -1, "none", "none", color);
    AttachDynamicObjectToVehicle(af_objcar[vehicleid][0], vehicleid, 0.067, -1.369, 0.720, 0.000, 0.000, -177.100);

    af_objcar[vehicleid][1] = CreateDynamicObject(1084,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(af_objcar[vehicleid][1], vehicleid, 0.990, 0.880, 0.210, 0.000, 0.000, 0.000);
    af_objcar[vehicleid][2] = CreateDynamicObject(1084,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(af_objcar[vehicleid][2], vehicleid, -1.000, 0.840, 0.210, 0.000, 0.000, 0.000);
    af_objcar[vehicleid][3] = CreateDynamicObject(1084,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(af_objcar[vehicleid][3], vehicleid, -1.000, -3.170, 0.200, 0.000, 0.000, 0.000);
    af_objcar[vehicleid][4] = CreateDynamicObject(1084,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(af_objcar[vehicleid][4], vehicleid, 1.140, -3.150, 0.190, 0.000, 0.000, 0.000);

    af_load[playerid] = true;

	switch(random(4)) {
		case 0: {
			SetPlayerCheckpoint(playerid, 549.4506,-1288.6519,17.2482, 5);
			af_cpnum[playerid]=1;
		}
		case 1: {
			SetPlayerCheckpoint(playerid, 2456.5261,1331.5010,10.8203, 5);
			af_cpnum[playerid]=2;
		}
		case 2, 3: {
			SetPlayerCheckpoint(playerid, -1639.0928,1202.4246,7.2246, 5);
			af_cpnum[playerid]=3;
		}
	}
	TogglePlayerAllDynamicCPs(playerid, 0);
	SCM(playerid,COLOR_YELLOW,"√Ä√¢√≤√Æ√¨√Æ√°√®√´√º √≥√±√Ø√•√∏√≠√Æ √Ø√Æ√£√∞√≥√¶√•√≠");
	SCM(playerid,COLOR_YELLOW,"√é√≤√¢√•√ß√®√≤√• √•√£√Æ √¢ √†√¢√≤√Æ√±√†√´√Æ√≠. √Ö√£√Æ √¨√•√±√≤√Æ√Ø√Æ√´√Æ√¶√•√≠√®√• √Æ√≤√¨√•√∑√•√≠√Æ √≥ √Ç√†√± √≠√† GPS");
	return SCM(playerid,0xFF4400FF,"√ë√≤√†√∞√†√©√≤√•√±√º √≠√• √Ø√∞√•√¢√ª√∏√†√≤√º √±√™√Æ√∞√Æ√±√≤√º √°√Æ√´√•√• 60 √™√¨/√∑, √≤√†√™ √™√†√™ √Ç√†√∏ √†√¢√≤√Æ√¨√Æ√°√®√´√º √¨√Æ√¶√•√≤ √Ø√Æ√¢√∞√•√§√®√≤√º√±√ø");
}
CMD:afstart(playerid) {
	if(af_player_lootstatus[playerid]) return SCM(playerid,COLOR_LIGHTGREY,"√Ç√ª √≥√¶√• √≠√†√∑√†√´√® √±√°√Æ√∞√™√≥ √†√¢√≤√Æ√¨√Æ√°√®√´√ø");
	if(!af_player_status[playerid]) return SCM(playerid,COLOR_LIGHTGREY,"√ó√≤√Æ√°√ª √≠√†√∑√†√≤√º √±√°√Æ√∞√™√≥ √≠√≥√¶√≠√Æ Seleccione √†√¢√≤√Æ√¨√Æ√°√®√´√º √¢ √Æ√±√≠√Æ√¢√≠√Æ√¨ √Ø√≥√≠√™√≤√•");
	if(!IsPlayerInRangeOfPoint(playerid, 5, 2157.0752,-2252.6182,14.2094)) return SCM(playerid,COLOR_LIGHTGREY,"√è√Æ√§√Æ√©√§√®√≤√• √°√´√®√¶√• √™ √™√Æ√≠√¢√•√©√•√∞√≥");
	af_player_lootstatus[playerid] = true;
	af_player_detailcount[playerid] = 0;
	af_player_loadready[playerid] = false;
	DisablePlayerCheckpoint(playerid);
	af_show_random_cp(playerid);
	SCM(playerid, COLOR_LITEBLUE,"√ë√°√Æ√∞√™√† √†√¢√≤√Æ√¨√Æ√°√®√´√ø √≠√†√∑√†√≤√†");
	return SCM(playerid, COLOR_LITEBLUE,"√è√Æ√§√Æ√©√§√®√≤√• √™ √Æ√≤√¨√•√∑√•√≠√≠√Æ√© √≤√Æ√∑√™√• √® √Æ√≤√≠√•√±√®√≤√• √§√•√≤√†√´√º");
}
stock af_show_random_cp(playerid) {
	new rand_int = random(6);
	af_player_cptype[playerid] = rand_int;
	switch(rand_int) {
		case 0: SetPlayerCheckpoint(playerid, 2155.5266,-2269.7776,13.3032, 2);
		case 1: SetPlayerCheckpoint(playerid, 2164.8806,-2262.0322,13.3038, 2);
		case 2: SetPlayerCheckpoint(playerid, 2151.1147,-2247.7026,13.2990, 2);
		case 3: SetPlayerCheckpoint(playerid, 2151.1328,-2251.3228,13.2954, 2);
		case 4: SetPlayerCheckpoint(playerid, 2149.4338,-2273.2698,13.3047, 2);
		case 5: SetPlayerCheckpoint(playerid, 2138.1147,-2254.1345,13.3078, 2);
	}
}
CMD:fixcar(playerid) {
	if(pData[playerid][pHotel] != -1 || pData[playerid][pFlat] != -1 || pData[playerid][have_garage] != -1) 
		return SPD(playerid,913,DIALOG_STYLE_MSGBOX,"√Ñ√Æ√±√≤√†√¢√™√† √≤√∞√†√≠√±√Ø√Æ√∞√≤√†",""CWHITE"Quieres √ß√†√™√†√ß√†√≤√º √≥√±√´√≥√£√≥ √§√Æ√±√≤√†√¢√™√® √≤√∞√†√≠√±√Ø√Æ√∞√≤√†? √ë√≤√Æ√®√¨√Æ√±√≤√º √≥√±√´√≥√£√® 500$","S√≠","No");

	if(pData[playerid][pHouse] == -1 && pData[playerid][pHotel] == -1 && pData[playerid][pFlat] == -1 && pData[playerid][have_garage] == -1) 
		return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √§√Æ√¨√†√∏√≠√•√£√Æ √≤√∞√†√≠√±√Ø√Æ√∞√≤√†");
	if(pData[playerid][pCar][0] == 0 && pData[playerid][pCar][1] == 0 && pData[playerid][pCar][2] == 0)
		return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √§√Æ√¨√†√∏√≠√•√£√Æ √≤√∞√†√≠√±√Ø√Æ√∞√≤√†");
	if(pData[playerid][pCash] < 500) return SCM(playerid, COLOR_GREY, "√Ñ√´√ø √§√Æ√±√≤√†√¢√™√® √≤√∞√†√≠√±√Ø√Æ√∞√≤√† √™ √§√Æ√¨√≥ √≤√∞√•√°√≥√•√≤√±√ø 500$ √≠√†√´√®√∑√≠√ª√¨√®");
	string[0] = EOS;
	new text_car_1[140], text_car_2[140], text_car_3[140];
	if(pData[playerid][pCar][0] != 0) format(text_car_1, 140, "(√¨√†√∞√™√†: %s)", VehicleNames[pData[playerid][pCar][0] - 400]);
	else strcat(text_car_1, "{ff4d4d}(√Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤)");
	if(pData[playerid][pCar][1] != 0) format(text_car_2, 140, "(√¨√†√∞√™√†: %s)", VehicleNames[pData[playerid][pCar][1] - 400]);
	else strcat(text_car_2, "{ff4d4d}(√Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤)");
	if(pData[playerid][pCar][2] != 0) format(text_car_3, 140, "(√¨√†√∞√™√†: %s)", VehicleNames[pData[playerid][pCar][2] - 400]);
	else strcat(text_car_3, "{ff4d4d}(√Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤)");
	format(string, 400, ""CLITEBLUE"√Ç√ª√°√•√∞√®√≤√• √†√¢√≤√Æ√¨√Æ√°√®√´√º √®√ß √±√Ø√®√±√™√† √≠√®√¶√•:\n"CWHITE"√è√•√∞√¢√ª√© √†√¢√≤√Æ√¨√Æ√°√®√´√º "CMAIN"%s\n"CWHITE"√Ç√≤√Æ√∞√Æ√© √†√¢√≤√Æ√¨√Æ√°√®√´√º "CMAIN"%s\n"CWHITE"√í√∞√•√≤√®√© √†√¢√≤√Æ√¨√Æ√°√®√´√º "CMAIN"%s", text_car_1, text_car_2, text_car_3);
	return SPD(playerid, 8237, DIALOG_STYLE_LIST, ""CPALEGREEN"√Ñ√Æ√±√≤√†√¢√™√† √†√¢√≤√Æ√¨√Æ√°√®√´√ø √™ √§√Æ√¨√≥ {ff9945}(√±√≤√Æ√®√≤ 500$)", string, "Seleccione", "Cerrar");
}
CMD:garage(playerid) {
	if(pData[playerid][have_garage] == -1) return SCM(playerid, COLOR_LIGHTGREY,"√ì √Ç√†√± No √£√†√∞√†√¶√†");
	return SPD(playerid,5866,DIALOG_STYLE_LIST,"√å√•√≠√æ √≥√Ø√∞√†√¢√´√•√≠√®√ø","√Ñ√Æ√±√≤√†√¢√®√≤√º √≤√∞√†√≠√±√Ø√Æ√∞√≤ √™ √£√†√∞√†√¶√≥ {ff6640}(500$)\n"CWHITE"√è√∞√ÆS√≠√≤√º √≤√∞√†√≠√±√Ø√Æ√∞√≤\n√è√∞√ÆS√≠√≤√º √£√†√∞√†√¶ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥","Seleccione","Cerrar");
}
CMD:allobj(playerid) {
	if(pData[playerid][pHouse] == -1) 
		return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √§√Æ√´√¶√•√≠ √°√ª√≤√º √§√Æ√¨");
	new query[60];
	mysql_format(mysql_Handle, query, sizeof(query), "SELECT * FROM `buy_mebel` WHERE `id_owner` = %i", pData[playerid][pID]);
	return mysql_tquery(mysql_Handle, query, "result_allobj", "i", playerid);
}
CB: result_allobj(playerid) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) 
		return SCM(playerid,COLOR_GREY,"√ì √Ç√†√± No √™√≥√Ø√´√•√≠√≠√Æ√© √¨√•√°√•√´√®");
	new name_obj[40], model_obj;
	string[0] = EOS;
	for(new i=0;i<rows;i++) {
		cache_get_value_name(i, "obj_name", name_obj);
		cache_get_value_name_int(i, "id_object", model_obj);
		format(string,sizeof(string),"%s%s\t√≤√Æ√¢. √≠√Æ√¨√•√∞ %i\n",string,name_obj,model_obj);
	}
	return SPD(playerid, 1194,DIALOG_STYLE_TABLIST,"{FFCD00}√ä√≥√Ø√´√•√≠√≠√†√ø √¨√•√°√•√´√º",string,"√Ñ√•√©√±√≤√¢√®√ø","Cerrar");
}
CB: install_mblobj(playerid) {
	new rows;
	cache_get_row_count(rows);
	new house = pData[playerid][pHouse];
	if(house == -1 || !rows) 
		return SCM(playerid,COLOR_ERROR,"√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [091]");
	new name_obj[40], model_obj;
	cache_get_value_name(0, "obj_name", name_obj);
	cache_get_value_name_int(0, "id_object", model_obj);
	SetPVarInt(playerid, "installmbl_model", model_obj);
	SetPVarString(playerid, "installmbl_name", name_obj);
	new Float:plX,Float: plY,Float:plZ;
	GetPlayerPos(playerid, plX,plY,plZ);
	tmp_o_install[playerid] = CreateDynamicObject(model_obj, plX + 1.0, plY + 1.0, plZ + 1.0, 0.0, 0.0, 0.0,house+50);
	SetPVarInt(playerid, "installmbl_IsEditing", 1);
	EditDynamicObject(playerid, tmp_o_install[playerid]);
	SCM(playerid, -1, "√ì√±√≤√†√≠√Æ√¢√®√≤√• √¨√•√°√•√´√º √¢ √≠√≥√¶√≠√Æ√¨ √Ç√†√¨ √¨√•√±√≤√• √® √≠√†√¶√¨√®√≤√• √®√™√Æ√≠√™√≥ "CBLUE"\"√ë√Æ√µ√∞√†√≠√®√≤√º\"");
	SCM(playerid, -1, "√è√Æ√§√±√™√†√ß√™√†: √Ç√ª √¨√Æ√¶√•√≤√• √§√¢√®√£√†√≤√º √™√†√¨√•√∞√≥, √ß√†√¶√®√¨√†√ø "CYELLOW"√è√ê√é√Å√Ö√ã");
	return 1;
}

CMD:buyobj(playerid,params[]) {
	if(pData[playerid][pHouse] == -1) 
		return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √§√Æ√´√¶√•√≠ √°√ª√≤√º √§√Æ√¨");
	if(!IsPlayerInRangeOfPoint(playerid, 250, 2499.316650, 66.113831, 1055.020508)) 
		return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √¨√•√°√•√´√º√≠√Æ√¨ √±√†√´√Æ√≠√•");
	new number;
	if(sscanf(params, "i", number)) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /buyobj [√≠√Æ√¨√•√∞ √≤√Æ√¢√†√∞√†]");
	new bool: check;
	new fmt_str[140];
	for(new i=0;i<300;i++) {
		if(number != elmebel_idobj[i]) continue;
		if(!IsPlayerInRangeOfPoint(playerid, 5, elmebel_posX[i],elmebel_posY[i],elmebel_posZ[i])) continue;
		check =true;
		SetPVarInt(playerid, "its_mebel_obj", i);
		format(fmt_str,sizeof(fmt_str),""CWHITE"Quieres √Ø√∞√®√Æ√°√∞√•√±√≤√® √Ω√≤√≥ √¢√•√π√º?\n\n√ç√†√ß√¢√†√≠√®√•: {9999ff}%s\n"CWHITE"√ë√≤√Æ√®√¨√Æ√±√≤√º: {33cc33}%d$",
		elmebel_name[i],elmebel_price[i]);
		SPD(playerid,193,DIALOG_STYLE_MSGBOX,"{FFCD00}√å√•√°√•√´√º√≠√ª√© √±√†√´√Æ√≠",fmt_str,"S√≠","No");
		break;
	}
	if(!check) SCM(playerid,COLOR_LIGHTGREY,"√è√Æ√§√Æ√©√§√®√≤√• √°√´√®√¶√• √™ √Ø√∞√•√§√¨√•√≤√≥, √™√Æ√≤√Æ√∞√ª√© √µ√Æ√≤√®√≤√• √™√≥√Ø√®√≤√º");
	return 1;
}
stock RemoveAccessoryFromInv(playerid, type_item) {
	new aquery[90], index,model;
	for(new i = 0; i < 26; i ++) {
		if(inv_info[playerid][i_type][i] != type_item) continue;
		index = inv_info[playerid][in_aindex][i];
		model = inv_info[playerid][in_amodel][i];
		break;
	}
	if(model == PLAYER_AO[playerid][index][g_modelid]) {
		PLAYER_AO[playerid][index][g_modelid]   = 0;
		PLAYER_AO[playerid][index][g_boneid]    = 0;
		PLAYER_AO[playerid][index][g_fOffsetX]  = 0;
		PLAYER_AO[playerid][index][g_fOffsetY]  = 0;
		PLAYER_AO[playerid][index][g_fOffsetZ]  = 0;
		PLAYER_AO[playerid][index][g_fRotX]     = 0;
		PLAYER_AO[playerid][index][g_fRotY]     = 0;
		PLAYER_AO[playerid][index][g_fRotZ]     = 0;
		PLAYER_AO[playerid][index][g_fScaleX]   = 0;
		PLAYER_AO[playerid][index][g_fScaleY]   = 0;
		PLAYER_AO[playerid][index][g_fScaleZ]   = 0;
		PLAYER_AO[playerid][index][g_COLOR1]=0;
		PLAYER_AO[playerid][index][g_COLOR2]=0;
		PLAYER_AO[playerid][index][acs_color_type]=0;
		SaveAccessories(playerid,index+1);
	}
	
	for(new i = 0; i < 26; i++) {
		if(inv_info[playerid][i_type][i] != type_item) continue;
		inv_info[playerid][i_count][i] = 0;
		inv_info[playerid][i_type][i] = -1;
		mysql_format(mysql_Handle, aquery, sizeof(aquery), "DELETE FROM `inventory` WHERE `itemtype`=%d AND `owner_id` = %d", type_item,pData[playerid][pID]);
		mysql_tquery(mysql_Handle, aquery);
		break;
	}
	return 1;
}

stock AddAccessoryToInv(playerid,index,bone,modelid,Float:tdpX,Float:tdpY,Float:tdpZ,Float:tdzoom,Float:offsX,Float:offsY,Float:offsZ,Float:afrotX,Float:afrotY,Float:afrotZ,Float:afscaleX,Float:afscaleY,Float:afscaleZ) {
	if(index==6 || index==7) return 1;

	new aquery[410];
	new slot = GetFirstInvSlot(playerid);
	if(slot == -1) return 1;
	inv_info[playerid][i_count][slot] = 1;
	inv_info[playerid][i_type][slot] = index+modelid;

	inv_info[playerid][in_aindex][slot]=index;
	inv_info[playerid][in_amodel][slot]=modelid;
	inv_info[playerid][in_apx][slot]=tdpX;
	inv_info[playerid][in_apy][slot]=tdpY;
	inv_info[playerid][in_apz][slot]=tdpZ;
	inv_info[playerid][in_azoom][slot]=tdzoom;

	inv_info[playerid][in_bone][slot]=bone;
	inv_info[playerid][in_offsX][slot]=offsX;
	inv_info[playerid][in_offsY][slot]=offsY;
	inv_info[playerid][in_offsZ][slot]=offsZ;
	inv_info[playerid][in_afrotX][slot]=afrotX;
	inv_info[playerid][in_afrotY][slot]=afrotY;
	inv_info[playerid][in_afrotZ][slot]=afrotZ;
	inv_info[playerid][in_afscaleX][slot]=afscaleX;
	inv_info[playerid][in_afscaleY][slot]=afscaleY;
	inv_info[playerid][in_afscaleZ][slot]=afscaleZ;

	mysql_format(mysql_Handle, aquery, sizeof(aquery), "INSERT INTO `inventory` (`owner_id`, `itemslot`,`acsbone`, `itemcount`, `itemtype`,`acsindex`,`acsmodel`,`tdpx`,`tdpy`,`tdpz`,`tdzoom`,`offsX`,`offsY`,`offsZ`,`afrotX`,`afrotY`,`afrotZ`,`afscaleX`,`afscaleY`,`afscaleZ`) VALUES (%d, %d, %d,'1', %d, %d, %d,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f)", 
	pData[playerid][pID], slot,bone,index+modelid,index,modelid,tdpX,tdpY,tdpZ,tdzoom,
	offsX,offsY,offsZ,afrotX,afrotY,afrotZ,afscaleX,afscaleY,afscaleZ);
	mysql_tquery(mysql_Handle, aquery);
	return 1;
}
public OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid, Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ, Float:fRotX, Float:fRotY, Float:fRotZ, Float:fScaleX, Float:fScaleY, Float:fScaleZ) {
	
	if(GetPVarInt(playerid, "acsType_edit")) {
		DeletePVar(playerid, "acsType_edit");
		if(!IsPlayerAttachedObjectSlotUsed(playerid, index)) 
			return SCM(playerid,COLOR_ERROR,"√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [095]");
		if(response == EDIT_RESPONSE_FINAL) {
			PLAYER_AO[playerid][index][g_fOffsetX]  = fOffsetX;
			PLAYER_AO[playerid][index][g_fOffsetY]  = fOffsetY;
			PLAYER_AO[playerid][index][g_fOffsetZ]  = fOffsetZ;
			PLAYER_AO[playerid][index][g_fRotX]     = fRotX;
			PLAYER_AO[playerid][index][g_fRotY]     = fRotY;
			PLAYER_AO[playerid][index][g_fRotZ]     = fRotZ;
			PLAYER_AO[playerid][index][g_fScaleX]   = fScaleX;
			PLAYER_AO[playerid][index][g_fScaleY]   = fScaleY;
			PLAYER_AO[playerid][index][g_fScaleZ]   = fScaleZ;

			new acquery[400];
			for(new i = 20; i < 26; i ++) {
				if(inv_info[playerid][in_aindex][i] != index) continue;
				inv_info[playerid][in_bone][i]=boneid;
				inv_info[playerid][in_offsX][i]=fOffsetX;
				inv_info[playerid][in_offsY][i]=fOffsetY;
				inv_info[playerid][in_offsZ][i]=fOffsetZ;
				inv_info[playerid][in_afrotX][i]=fRotX;
				inv_info[playerid][in_afrotY][i]=fRotY;
				inv_info[playerid][in_afrotZ][i]=fRotZ;
				inv_info[playerid][in_afscaleX][i]=fScaleX;
				inv_info[playerid][in_afscaleY][i]=fScaleY;
				inv_info[playerid][in_afscaleZ][i]=fScaleZ;
				mysql_format(mysql_Handle, acquery, sizeof(acquery), "UPDATE `inventory` SET `acsbone` = %i,`offsX` = %f,`offsY` = %f,`offsZ` = %f,`afrotX` = %f,`afrotY` = %f,`afrotZ` = %f,`afscaleX` = %f,`afscaleY` = %f,`afscaleZ` = %f WHERE `owner_id` = %d AND `itemslot` = %d", boneid,fOffsetX,fOffsetY,fOffsetZ,fRotX,fRotY,fRotZ,fScaleX,fScaleY,fScaleZ, pData[playerid][pID], i);
				mysql_tquery(mysql_Handle, acquery);
				break;
			}
			
			SaveAccessories(playerid,index+1);

			SCM(playerid, 0x99BBFFFF, "√è√Æ√´√Æ√¶√•√≠√®√• √†√™√±√•√±√±√≥√†√∞√† √≥√±√Ø√•√∏√≠√Æ √Æ√≤√∞√•S√≠√™√≤√®√∞√Æ√¢√†√≠√Æ");
		}
		else if(response == EDIT_RESPONSE_CANCEL) {
			RemovePlayerAttachedObject(playerid, index);
			SetPlayerAttachedObject(playerid,index,PLAYER_AO[playerid][index][g_modelid],PLAYER_AO[playerid][index][g_boneid],
				PLAYER_AO[playerid][index][g_fOffsetX],PLAYER_AO[playerid][index][g_fOffsetY],PLAYER_AO[playerid][index][g_fOffsetZ],
				PLAYER_AO[playerid][index][g_fRotX],PLAYER_AO[playerid][index][g_fRotY],PLAYER_AO[playerid][index][g_fRotZ],
				PLAYER_AO[playerid][index][g_fScaleX],PLAYER_AO[playerid][index][g_fScaleY],PLAYER_AO[playerid][index][g_fScaleZ],
				PLAYER_AO[playerid][index][g_COLOR1],PLAYER_AO[playerid][index][g_COLOR2]);
		}
		
		return 1;
	}

	if(response == EDIT_RESPONSE_FINAL && GetPVarInt(playerid, "in_edit_acs") && BizEnter{playerid}) {
		if(pData[playerid][pCash] < price_its_acs[playerid]) {
			if(IsPlayerAttachedObjectSlotUsed(playerid, index)) 
				RemovePlayerAttachedObject(playerid, index);
			return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √±√Æ√¢√•√∞√∏√•√≠√®√ø √Ø√Æ√™√≥√Ø√™√®");
		}
		BizInfo[BizEnter{playerid}][bPribil] += price_its_acs[playerid];
		BizInfo[BizEnter{playerid}][bBank] += price_its_acs[playerid];

		BizInfo[BizEnter{playerid}][bProd] -= 15;
		UpdateBusinessData(BizEnter{playerid}, "bProd", BizInfo[BizEnter{playerid}][bProd]);

		if(BizInfo[BizEnter{playerid}][bBank] > 10000000) BizInfo[BizEnter{playerid}][bBank] = 10000000;
		UpdateBusinessData(BizEnter{playerid}, "bPribil", BizInfo[BizEnter{playerid}][bPribil]);
		UpdateBusinessData(BizEnter{playerid}, "bBank", BizInfo[BizEnter{playerid}][bBank]);

		Hook_GivePlayerMoney(playerid, -price_its_acs[playerid]);
		new str_gametext[50];
		format(str_gametext, 50, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~-%d$", price_its_acs[playerid]);
		GameTextForPlayer(playerid, str_gametext, 3000, 3);
		SCM(playerid, COLOR_BLUE, "√Ä√™√±√•√±√±√≥√†√∞ √≥√±√Ø√•√∏√≠√Æ √Ø√∞√®√Æ√°√∞√•√≤¬∏√≠");
		if(index!=6 && index!=7) SCM(playerid, COLOR_BLUE, "√Ç√ª √¨√Æ√¶√•√≤√• √≠√†√§√•√≤√º √•√£√Æ √∑√•√∞√•√ß √®√≠√¢√•√≠√≤√†√∞√º {FFCD00}(√™√Æ√¨√†√≠S√≠ /inv)");
		
		new PlayerText:tid=tmp_ptID_acs[playerid];
		new Float:acrotX=TDprrot[tid][0],
			Float:acrotY=TDprrot[tid][1],
			Float:acrotZ=TDprrot[tid][2],
			Float:aczoom=TDprrot[tid][3];

		if(index==6 || index==7) {
			PLAYER_AO[playerid][index][g_modelid]   = modelid;
			PLAYER_AO[playerid][index][g_boneid]    = boneid;
			PLAYER_AO[playerid][index][g_fOffsetX]  = fOffsetX;
			PLAYER_AO[playerid][index][g_fOffsetY]  = fOffsetY;
			PLAYER_AO[playerid][index][g_fOffsetZ]  = fOffsetZ;
			PLAYER_AO[playerid][index][g_fRotX]     = fRotX;
			PLAYER_AO[playerid][index][g_fRotY]     = fRotY;
			PLAYER_AO[playerid][index][g_fRotZ]     = fRotZ;
			PLAYER_AO[playerid][index][g_fScaleX]   = fScaleX;
			PLAYER_AO[playerid][index][g_fScaleY]   = fScaleY;
			PLAYER_AO[playerid][index][g_fScaleZ]   = fScaleZ;
			if(!GetPVarInt(playerid, "code_color_acs")) SetPlayerAttachedObject(playerid,index,modelid,boneid,fOffsetX,fOffsetY,fOffsetZ,fRotX,fRotY,fRotZ,fScaleX,fScaleY,fScaleZ);
			else {
				PLAYER_AO[playerid][index][g_COLOR1]   = GetPVarInt(playerid, "code_color_acs");
				PLAYER_AO[playerid][index][acs_color_type]=GetPVarInt(playerid, "code_colorTYPE_acs");
				PLAYER_AO[playerid][index][g_COLOR2]   = GetPVarInt(playerid, "code_color_acs");
				SetPlayerAttachedObject(playerid,index,modelid,boneid,fOffsetX,fOffsetY,fOffsetZ,fRotX,fRotY,fRotZ,fScaleX,fScaleY,fScaleZ,GetPVarInt(playerid, "code_color_acs"),GetPVarInt(playerid, "code_color_acs"));
			}
			SaveAccessories(playerid,index+1);
		}
		else {
			AddAccessoryToInv(playerid,index,boneid,modelid,acrotX,acrotY,acrotZ,aczoom+0.5,
			fOffsetX,fOffsetY,fOffsetZ,
			fRotX,fRotY,fRotZ,
			fScaleX,fScaleY,fScaleZ);
		}
		
		DeletePVar(playerid, "code_colorTYPE_acs");
		DeletePVar(playerid, "code_color_acs");
		DeletePVar(playerid, "colorModel");
		DeletePVar(playerid, "in_edit_acs");
	}
	else if(response == EDIT_RESPONSE_CANCEL && GetPVarInt(playerid, "in_edit_acs") && BizEnter{playerid}) {
		DeletePVar(playerid, "code_color_acs");
		DeletePVar(playerid, "colorModel");
		DeletePVar(playerid, "in_edit_acs");
		DeletePVar(playerid, "code_colorTYPE_acs");
		RemovePlayerAttachedObject(playerid, index);
	}

	return 1;
}
stock close_inventory(playerid) {
	if(!inventory_open[playerid]) return 1;

	for(new i=0; i< 6; i++) {
		TextDrawHideForPlayer(playerid, usedinvClicking[i]);
		PlayerTextDrawDestroy(playerid, inv_previewUSED[playerid][i]);
	}

	for(new i = 0; i < MAX_INV_SLOTS; i ++) {
		inv_info[playerid][is_click][i] = false;
		PlayerTextDrawDestroy(playerid, inv_previewTD[playerid][i]);
		PlayerTextDrawDestroy(playerid, td_inv_counts[playerid][i]);
	}
	for(new i = 0; i < 30; i ++) {
		if(i < 26) 
			TextDrawHideForPlayer(playerid, inv_clickingTD[i]);
		if(i < 25) 
			TextDrawHideForPlayer(playerid, global_invTD[i]);
		PlayerTextDrawDestroy(playerid, player_invTD[playerid][i]);
	}
	DestroyPlayerProgressBar(playerid, health_bar[playerid]);
	DestroyPlayerProgressBar(playerid, armour_bar[playerid]);
	inventory_open[playerid] = false;
	inv_info[playerid][i_clickID] = -1;
	CancelSelectTextDraw(playerid);
	return 1;
}
public OnPlayerClickTextDraw(playerid, Text: clickedid) {

	if(clickedid == Text:INVALID_TEXT_DRAW && GetPVarInt(playerid, "table_id") > 0) {
		new table_id = GetPVarInt(playerid, "table_id");
		for(new i=0; i<19; i++) PlayerTextDrawDestroy(playerid, table_TD[playerid][i]);
		DeletePVar(playerid, "table_id");

		new bool:status;
		for(new i=0; i<4; i++) {
			if(table_playerid[table_id][i] != playerid) continue;
			status = true;
			break;
		}
		if(!status) return 1;

		if(table_players_amount[table_id] >= 4) return 1;

		table_players_amount[table_id]--;
		for(new i=0; i<4; i++) {
			if(table_playerid[table_id][i] != playerid) continue;
			table_playerid[table_id][i] = -1;
		}

		new total;
		new tids[4]=-1;
		for(new i=0; i<4; i++) {
			if(table_playerid[table_id][i] == -1) continue;
			tids[total] = table_playerid[table_id][i];
			total ++;
		}
		for(new i=0; i<4; i++) 
			table_playerid[table_id][i]=-1;
		for(new i=0; i<4; i++) {
			if(tids[i] == 0) break;
			table_playerid[table_id][i] = tids[i];
		}

		foreach(new i:Player) {
	    	if(GetPVarInt(i, "table_id") != table_id) continue;
	    	update_table_info(i);
	    }

		new summa = table_bet_amount[table_id];
	    pData[playerid][casino_amount] += summa;
	    AddItemToInventory(playerid, summa, 8);
	    UpdatePlayerData(playerid, "casino_amount", pData[playerid][casino_amount]);
	    new fm[35];
	    format(fm,sizeof(fm),"YOUR CHIPS: ~b~~h~~h~%d",pData[playerid][casino_amount]);
	    PlayerTextDrawSetString(playerid, table_TD[playerid][0], fm);
	    SCM(playerid,0xBFBB41FF,"√à√£√∞√† √Æ√≤√¨√•√≠√•√≠√†. √Ç√†√∏√† √±√≤√†√¢√™√† √°√ª√´√† √Ç√†√¨ √¢√Æ√ß√¢√∞√†√π√•√≠√†");
		if(table_players_amount[table_id] < 1) {
			foreach(new i:Player) {
		    	if(GetPVarInt(i, "table_id") != table_id) continue;
		    	PlayerTextDrawSetString(i, table_TD[i][1], "BET: ~g~~h~~h~0 CHIPS");
	    		PlayerTextDrawSetString(i, table_TD[i][8], "PLAYERS: ~r~~h~0/4");
		    }
		    table_bet_amount[table_id] =
			table_players_amount[table_id] = 0;
			for(new i=0; i<4; i++) table_playerid[table_id][i] = -1;
		}
	}

	if(clickedid == Text:INVALID_TEXT_DRAW && in_slot[playerid]) {
		if(slots_amount[playerid] != 0) {
			SelectTextDraw(playerid, 0x3399FFAA);
			return SCM(playerid,COLOR_GREY,"√Ñ√Æ√¶√§√®√≤√•√±√º √Æ√™√Æ√≠√∑√†√≠√®√ø √®√£√∞√ª");
		}
		for(new i=0; i<27; i++) PlayerTextDrawDestroy(playerid, casino_slotTD[playerid][i]);
		in_slot[playerid]=false;
	}

	if(clickedid == Text:INVALID_TEXT_DRAW && in_buymenu_market[playerid]) 
		closeMenuMarket(playerid);

	for(new i = 0; i < 6; i ++) {
		if(clickedid != usedinvClicking[i]) continue;
		new inv_clickedslot = inv_info[playerid][i_clickID];
		if(inv_clickedslot != -1) {
			if(i != inv_clickedslot) {
				PlayerTextDrawBoxColor(playerid, player_invTD[playerid][inv_clickedslot], 1025056153);
				PlayerTextDrawHide(playerid, player_invTD[playerid][inv_clickedslot]);
				PlayerTextDrawShow(playerid, player_invTD[playerid][inv_clickedslot]);
				PlayerTextDrawBoxColor(playerid, player_invTD[playerid][inv_clickedslot+4], 1025056153);
				PlayerTextDrawHide(playerid, player_invTD[playerid][inv_clickedslot+4]);
				PlayerTextDrawShow(playerid, player_invTD[playerid][inv_clickedslot+4]);
			}
			PlayerTextDrawBoxColor(playerid, player_invTD[playerid][i+24], 1025056153);
			PlayerTextDrawHide(playerid, player_invTD[playerid][i+24]);
			PlayerTextDrawShow(playerid, player_invTD[playerid][i+24]);
			inv_info[playerid][is_click][i+20] = false;
			inv_info[playerid][i_clickID] = -1;
		}
		else {
			if(inv_info[playerid][i_type][i+20] == -1) break;
			PlayerTextDrawBoxColor(playerid, player_invTD[playerid][i+24], 0x99999999);
			PlayerTextDrawHide(playerid, player_invTD[playerid][i+24]);
			PlayerTextDrawShow(playerid, player_invTD[playerid][i+24]);
			inv_info[playerid][is_click][i+20] = true;
			inv_info[playerid][i_clickID] = i+20;
			PlayerPlaySound(playerid, 6801, 0, 0, 0);
		}
		return 1;
	}

	if(clickedid == global_invTD[21] || clickedid == inv_clickingTD[22]) {
		new inv_clickedslot = inv_info[playerid][i_clickID];
		if(inv_clickedslot != -1) {
			new dstr[350];
			if(inv_info[playerid][i_type][inv_clickedslot] == inv_info[playerid][in_aindex][inv_clickedslot]+inv_info[playerid][in_amodel][inv_clickedslot] && 
				inv_info[playerid][i_type][inv_clickedslot] != 0) {
				if(inv_clickedslot >= 20) 
					return SCM(playerid, COLOR_LIGHTGREY,"√ó√≤√Æ√°√ª √¢√ß√†√®√¨√Æ√§√•√©√±√≤√¢√Æ√¢√†√≤√º √± √†√™√±√•√±√±√≥√†√∞√Æ√¨ √≠√≥√¶√≠√Æ √±√≠√ø√≤√º √•√£√Æ");
				new nameacs[22];
				switch(inv_info[playerid][in_aindex][inv_clickedslot]) {
					case 0: nameacs="√é√∑√™√®";
					case 2: nameacs="√É√Æ√´√Æ√¢√≠√Æ√© √≥√°√Æ√∞";
					case 4: nameacs="√ì√≠√®√™√†√´√º√≠√ª√© √†√™√±√•√±√±√≥√†√∞";
					case 5: nameacs="√å√†√±√™√†";
					case 6: nameacs="√ì√±√ª";
					case 7: nameacs="√è√∞√®√∑¬∏√±√™√†";
				}
				format(dstr,sizeof(dstr),"\n{ff8500}%s\n\n"CWHITE"√ä√Æ√´√®√∑√•√±√≤√¢√Æ: {66cc33}1\n"CWHITE"√Ç√•√±: {66cc33}1 √™√£\n",nameacs);
			}
			else if(inv_info[playerid][i_type][inv_clickedslot]==inv_info[playerid][in_amodel][inv_clickedslot]+7 && inv_info[playerid][i_type][inv_clickedslot] != 0) 
				format(dstr,sizeof(dstr),"\n{ff8500}√ë√™√®√≠ (%d id)\n\n"CWHITE"√ä√Æ√´√®√∑√•√±√≤√¢√Æ: {66cc33}1\n"CWHITE"√Ç√•√±: {66cc33}2 √™√£\n",inv_info[playerid][in_amodel][inv_clickedslot]);
			else {
				if(inv_info[playerid][i_count][inv_clickedslot] > 1 && 
					inv_info[playerid][i_type][inv_clickedslot] != 0 && 
					inv_info[playerid][i_type][inv_clickedslot] != 1) {
					format(dstr,sizeof(dstr),"\n{ff8500}%s\n\n"CWHITE"√ä√Æ√´√®√∑√•√±√≤√¢√Æ: {66cc33}%d\n"CWHITE"√é√°√π√®√© √¢√•√±: {66cc33}%d √™√£\n"CWHITE"√Ç√•√± √ß√† 1 √∏√≤: {66cc33}%d √™√£\n"CWHITE"%s",
					item_data[inv_info[playerid][i_type][inv_clickedslot]][itemname],
					inv_info[playerid][i_count][inv_clickedslot],
					item_data[inv_info[playerid][i_type][inv_clickedslot]][itemmass]*inv_info[playerid][i_count][inv_clickedslot],
					item_data[inv_info[playerid][i_type][inv_clickedslot]][itemmass],
					item_data[inv_info[playerid][i_type][inv_clickedslot]][itemdescription]);
				}
				else {
					format(dstr,sizeof(dstr),"\n{ff8500}%s\n\n"CWHITE"√ä√Æ√´√®√∑√•√±√≤√¢√Æ: {66cc33}%d\n"CWHITE"√Ç√•√±: {66cc33}%d √™√£\n"CWHITE"%s",
					item_data[inv_info[playerid][i_type][inv_clickedslot]][itemname],
					inv_info[playerid][i_count][inv_clickedslot],
					item_data[inv_info[playerid][i_type][inv_clickedslot]][itemmass],
					item_data[inv_info[playerid][i_type][inv_clickedslot]][itemdescription]);
				}
			}
			SPD(playerid,0,DIALOG_STYLE_MSGBOX,"√à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ √Ø√∞√•√§√¨√•√≤√•", dstr, "Cerrar","");
		}
	}
	if(clickedid == global_invTD[22] || clickedid == inv_clickingTD[24]) {
		new inv_clickedslot = inv_info[playerid][i_clickID];
		if(inv_clickedslot != -1) {
			if(inv_info[playerid][i_type][inv_clickedslot] == inv_info[playerid][in_aindex][inv_clickedslot]+inv_info[playerid][in_amodel][inv_clickedslot] && 
				inv_info[playerid][i_type][inv_clickedslot] != 0) {
				if(inv_clickedslot >= 20) 
					return SCM(playerid, COLOR_LIGHTGREY,"√ó√≤√Æ√°√ª √¢√ß√†√®√¨√Æ√§√•√©√±√≤√¢√Æ√¢√†√≤√º √± √†√™√±√•√±√±√≥√†√∞√Æ√¨ √≠√≥√¶√≠√Æ √±√≠√ø√≤√º √•√£√Æ");
				return SPD(playerid,653,DIALOG_STYLE_MSGBOX,"{ff3333}√è√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√•",""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª √∑√≤√Æ √µ√Æ√≤√®√≤√• √¢√ª√°√∞√Æ√±√®√≤√º √Ω√≤√Æ√≤ √†√™√±√•√±√±√≥√†√∞?","S√≠","No");
			}
			SPD(playerid,652,DIALOG_STYLE_MSGBOX,"{ff3333}√è√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√•",""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª √∑√≤√Æ √µ√Æ√≤√®√≤√• √¢√ª√°√∞√Æ√±√®√≤√º √Ω√≤√Æ√≤ √Ø√∞√•√§√¨√•√≤?","S√≠","No");
		}
	}
	if(clickedid == global_invTD[23] || clickedid == inv_clickingTD[23]) {
		new inv_clickedslot = inv_info[playerid][i_clickID];
		if(inv_clickedslot != -1) {
			if(inv_info[playerid][i_type][inv_clickedslot] == inv_info[playerid][in_aindex][inv_clickedslot]+inv_info[playerid][in_amodel][inv_clickedslot] && 
				inv_info[playerid][i_type][inv_clickedslot] != 0) {
				new ind = inv_info[playerid][in_aindex][inv_clickedslot];
				if(PLAYER_AO[playerid][ind][g_modelid]) { // √•√±√´√® √†√™√±√•√±√±√≥√†√∞ √≠√†√§√•√≤
					new slot = GetFirstInvSlot(playerid);
					if(slot == -1) return 1;
					if(inv_clickedslot < 20) 
						return SCM(playerid, COLOR_LIGHTGREY,"√ç√† √Ç√†√± √≥√¶√• √≠√†√§√•√≤ √†√™√±√•√±√±√≥√†√∞ √≤√†√™√Æ√£√Æ √≤√®√Ø√†. √Ö√£√Æ √≠√≥√¶√≠√Æ √±√≠√ø√≤√º");
					inv_info[playerid][i_type][slot] = inv_info[playerid][i_type][inv_clickedslot];
					inv_info[playerid][i_count][slot] = inv_info[playerid][i_count][inv_clickedslot];
					inv_info[playerid][i_type][inv_clickedslot] = -1;
					inv_info[playerid][i_count][inv_clickedslot] = 0;
					inv_info[playerid][in_aindex][slot]=ind;
					inv_info[playerid][in_amodel][slot]=inv_info[playerid][in_amodel][inv_clickedslot];
					inv_info[playerid][in_apx][slot]=inv_info[playerid][in_apx][inv_clickedslot];
					inv_info[playerid][in_apy][slot]=inv_info[playerid][in_apy][inv_clickedslot];
					inv_info[playerid][in_apz][slot]=inv_info[playerid][in_apz][inv_clickedslot];
					inv_info[playerid][in_azoom][slot]=inv_info[playerid][in_azoom][inv_clickedslot];
					inv_info[playerid][in_bone][slot]=inv_info[playerid][in_bone][inv_clickedslot];

					inv_info[playerid][in_offsX][slot]=inv_info[playerid][in_offsX][inv_clickedslot];
					inv_info[playerid][in_offsY][slot]=inv_info[playerid][in_offsY][inv_clickedslot];
					inv_info[playerid][in_offsZ][slot]=inv_info[playerid][in_offsZ][inv_clickedslot];
					inv_info[playerid][in_afrotX][slot]=inv_info[playerid][in_afrotX][inv_clickedslot];
					inv_info[playerid][in_afrotY][slot]=inv_info[playerid][in_afrotY][inv_clickedslot];
					inv_info[playerid][in_afrotZ][slot]=inv_info[playerid][in_afrotZ][inv_clickedslot];
					inv_info[playerid][in_afscaleX][slot]=inv_info[playerid][in_afscaleX][inv_clickedslot];
					inv_info[playerid][in_afscaleY][slot]=inv_info[playerid][in_afscaleY][inv_clickedslot];
					inv_info[playerid][in_afscaleZ][slot]=inv_info[playerid][in_afscaleZ][inv_clickedslot];

					PlayerTextDrawHide(playerid, inv_previewUSED[playerid][inv_clickedslot-20]);

					PlayerTextDrawSetPreviewModel(playerid, inv_previewTD[playerid][slot], inv_info[playerid][in_amodel][slot]);
					PlayerTextDrawSetPreviewRot(playerid, inv_previewTD[playerid][slot], 
					inv_info[playerid][in_apx][slot], 
					inv_info[playerid][in_apy][slot], 
					inv_info[playerid][in_apz][slot], 
					inv_info[playerid][in_azoom][slot]);
					PlayerTextDrawShow(playerid, inv_previewTD[playerid][slot]);

					PlayerTextDrawBoxColor(playerid, player_invTD[playerid][inv_clickedslot+4], 1025056153);
					PlayerTextDrawHide(playerid, player_invTD[playerid][inv_clickedslot+4]);
					PlayerTextDrawShow(playerid, player_invTD[playerid][inv_clickedslot+4]);
					inv_info[playerid][is_click][inv_clickedslot] = false;
					inv_info[playerid][i_clickID] = -1;
					new aquery[400];
					mysql_format(mysql_Handle, aquery, 90, "DELETE FROM `inventory` WHERE `owner_id` = %d AND `itemtype` = %d", pData[playerid][pID], ind+inv_info[playerid][in_amodel][slot]);
					mysql_tquery(mysql_Handle, aquery);
					mysql_format(mysql_Handle, aquery, sizeof(aquery), "INSERT INTO `inventory` (`owner_id`, `acsbone`,`itemslot`, `itemcount`, `itemtype`,`acsindex`,`acsmodel`,`tdpx`,`tdpy`,`tdpz`,`tdzoom`,`offsX`,`offsY`,`offsZ`,`afrotX`,`afrotY`,`afrotZ`,`afscaleX`,`afscaleY`,`afscaleZ`) VALUES (%d,%d, %d, '1', %d, %d, %d,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f)", 
					pData[playerid][pID], inv_info[playerid][in_bone][slot],slot,ind+inv_info[playerid][in_amodel][slot],ind,inv_info[playerid][in_amodel][slot],inv_info[playerid][in_apx][slot],inv_info[playerid][in_apy][slot],inv_info[playerid][in_apz][slot],inv_info[playerid][in_azoom][slot],
					inv_info[playerid][in_offsX][slot],inv_info[playerid][in_offsY][slot],inv_info[playerid][in_offsZ][slot],
					inv_info[playerid][in_afrotX][slot],inv_info[playerid][in_afrotY][slot],inv_info[playerid][in_afrotZ][slot],
					inv_info[playerid][in_afscaleX][slot],inv_info[playerid][in_afscaleY][slot],inv_info[playerid][in_afscaleZ][slot]);
					mysql_tquery(mysql_Handle, aquery);

					if(IsPlayerAttachedObjectSlotUsed(playerid, ind)) 
						RemovePlayerAttachedObject(playerid, ind);

					PLAYER_AO[playerid][ind][g_modelid]   = 0;
					PLAYER_AO[playerid][ind][g_boneid]    = 0;
					PLAYER_AO[playerid][ind][g_fOffsetX]  = 0;
					PLAYER_AO[playerid][ind][g_fOffsetY]  = 0;
					PLAYER_AO[playerid][ind][g_fOffsetZ]  = 0;
					PLAYER_AO[playerid][ind][g_fRotX]     = 0;
					PLAYER_AO[playerid][ind][g_fRotY]     = 0;
					PLAYER_AO[playerid][ind][g_fRotZ]     = 0;
					PLAYER_AO[playerid][ind][g_fScaleX]   = 0;
					PLAYER_AO[playerid][ind][g_fScaleY]   = 0;
					PLAYER_AO[playerid][ind][g_fScaleZ]   = 0;
					PLAYER_AO[playerid][ind][g_COLOR1]=0;
					PLAYER_AO[playerid][ind][g_COLOR2]=0;
					PLAYER_AO[playerid][ind][acs_color_type]=0;
					SaveAccessories(playerid,ind+1);
				}
				else { // √•√±√´√® √†√™√±√•√±√±√≥√†√∞ √ç√Ö √≠√†√§√•√≤
					new newslot=GetFirstSlotInvUsed(playerid);
					if(newslot == -1) return SCM(playerid, COLOR_LIGHTGREY,"√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √≠√†√§√•√≤√º √°√Æ√´√•√• 6 √†√™√±√•√±√±√≥√†√∞√Æ√¢");

					new textid = newslot-20;

					inv_info[playerid][i_type][newslot] = inv_info[playerid][i_type][inv_clickedslot];
					inv_info[playerid][i_count][newslot] = inv_info[playerid][i_count][inv_clickedslot];
					inv_info[playerid][i_type][inv_clickedslot] = -1;
					inv_info[playerid][i_count][inv_clickedslot] = 0;
					inv_info[playerid][in_aindex][newslot]=ind;
					inv_info[playerid][in_amodel][newslot]=inv_info[playerid][in_amodel][inv_clickedslot];
					inv_info[playerid][in_apx][newslot]=inv_info[playerid][in_apx][inv_clickedslot];
					inv_info[playerid][in_apy][newslot]=inv_info[playerid][in_apy][inv_clickedslot];
					inv_info[playerid][in_apz][newslot]=inv_info[playerid][in_apz][inv_clickedslot];
					inv_info[playerid][in_azoom][newslot]=inv_info[playerid][in_azoom][inv_clickedslot];
					inv_info[playerid][in_bone][newslot]=inv_info[playerid][in_bone][inv_clickedslot];

					inv_info[playerid][in_offsX][newslot]=inv_info[playerid][in_offsX][inv_clickedslot];
					inv_info[playerid][in_offsY][newslot]=inv_info[playerid][in_offsY][inv_clickedslot];
					inv_info[playerid][in_offsZ][newslot]=inv_info[playerid][in_offsZ][inv_clickedslot];
					inv_info[playerid][in_afrotX][newslot]=inv_info[playerid][in_afrotX][inv_clickedslot];
					inv_info[playerid][in_afrotY][newslot]=inv_info[playerid][in_afrotY][inv_clickedslot];
					inv_info[playerid][in_afrotZ][newslot]=inv_info[playerid][in_afrotZ][inv_clickedslot];
					inv_info[playerid][in_afscaleX][newslot]=inv_info[playerid][in_afscaleX][inv_clickedslot];
					inv_info[playerid][in_afscaleY][newslot]=inv_info[playerid][in_afscaleY][inv_clickedslot];
					inv_info[playerid][in_afscaleZ][newslot]=inv_info[playerid][in_afscaleZ][inv_clickedslot];

					PlayerTextDrawHide(playerid, inv_previewTD[playerid][inv_clickedslot]);

					PlayerTextDrawSetPreviewModel(playerid, inv_previewUSED[playerid][textid], inv_info[playerid][in_amodel][newslot]);
					PlayerTextDrawSetPreviewRot(playerid, inv_previewUSED[playerid][textid], 
					inv_info[playerid][in_apx][newslot], 
					inv_info[playerid][in_apy][newslot], 
					inv_info[playerid][in_apz][newslot], 
					inv_info[playerid][in_azoom][newslot]);
					PlayerTextDrawShow(playerid, inv_previewUSED[playerid][textid]);

					PlayerTextDrawBoxColor(playerid, player_invTD[playerid][inv_clickedslot], 1025056153);
					PlayerTextDrawHide(playerid, player_invTD[playerid][inv_clickedslot]);
					PlayerTextDrawShow(playerid, player_invTD[playerid][inv_clickedslot]);
					inv_info[playerid][is_click][inv_clickedslot] = false;
					inv_info[playerid][i_clickID] = -1;
					new aquery[400];
					mysql_format(mysql_Handle, aquery, 90, "DELETE FROM `inventory` WHERE `owner_id` = %d AND `itemtype` = %d", pData[playerid][pID], ind+inv_info[playerid][in_amodel][newslot]);
					mysql_tquery(mysql_Handle, aquery);
					mysql_format(mysql_Handle, aquery, sizeof(aquery), "INSERT INTO `inventory` (`acsbone`,`owner_id`, `itemslot`, `itemcount`, `itemtype`,`acsindex`,`acsmodel`,`tdpx`,`tdpy`,`tdpz`,`tdzoom`,`offsX`,`offsY`,`offsZ`,`afrotX`,`afrotY`,`afrotZ`,`afscaleX`,`afscaleY`,`afscaleZ`) VALUES (%d,%d, %d, '1', %d, %d, %d,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f)", 
					inv_info[playerid][in_bone][newslot],pData[playerid][pID], newslot,ind+inv_info[playerid][in_amodel][newslot],ind,inv_info[playerid][in_amodel][newslot],inv_info[playerid][in_apx][newslot],inv_info[playerid][in_apy][newslot],inv_info[playerid][in_apz][newslot],inv_info[playerid][in_azoom][newslot],
					inv_info[playerid][in_offsX][newslot],inv_info[playerid][in_offsY][newslot],inv_info[playerid][in_offsZ][newslot],
					inv_info[playerid][in_afrotX][newslot],inv_info[playerid][in_afrotY][newslot],inv_info[playerid][in_afrotZ][newslot],
					inv_info[playerid][in_afscaleX][newslot],inv_info[playerid][in_afscaleY][newslot],inv_info[playerid][in_afscaleZ][newslot]);
					mysql_tquery(mysql_Handle, aquery);

					if(IsPlayerAttachedObjectSlotUsed(playerid, ind)) 
						RemovePlayerAttachedObject(playerid, ind);

					PLAYER_AO[playerid][ind][g_modelid]   = inv_info[playerid][in_amodel][newslot];
					PLAYER_AO[playerid][ind][g_boneid]    = inv_info[playerid][in_bone][newslot];
					PLAYER_AO[playerid][ind][g_fOffsetX]  = inv_info[playerid][in_offsX][newslot];
					PLAYER_AO[playerid][ind][g_fOffsetY]  = inv_info[playerid][in_offsY][newslot];
					PLAYER_AO[playerid][ind][g_fOffsetZ]  = inv_info[playerid][in_offsZ][newslot];
					PLAYER_AO[playerid][ind][g_fRotX]     = inv_info[playerid][in_afrotX][newslot];
					PLAYER_AO[playerid][ind][g_fRotY]     = inv_info[playerid][in_afrotY][newslot];
					PLAYER_AO[playerid][ind][g_fRotZ]     = inv_info[playerid][in_afrotZ][newslot];
					PLAYER_AO[playerid][ind][g_fScaleX]   = inv_info[playerid][in_afscaleX][newslot];
					PLAYER_AO[playerid][ind][g_fScaleY]   = inv_info[playerid][in_afscaleY][newslot];
					PLAYER_AO[playerid][ind][g_fScaleZ]   = inv_info[playerid][in_afscaleZ][newslot];
					SaveAccessories(playerid,ind+1);

					SetPlayerAttachedObject(playerid,ind,PLAYER_AO[playerid][ind][g_modelid],PLAYER_AO[playerid][ind][g_boneid],
					PLAYER_AO[playerid][ind][g_fOffsetX],PLAYER_AO[playerid][ind][g_fOffsetY],PLAYER_AO[playerid][ind][g_fOffsetZ],
					PLAYER_AO[playerid][ind][g_fRotX],PLAYER_AO[playerid][ind][g_fRotY],PLAYER_AO[playerid][ind][g_fRotZ],
					PLAYER_AO[playerid][ind][g_fScaleX],PLAYER_AO[playerid][ind][g_fScaleY],PLAYER_AO[playerid][ind][g_fScaleZ],
					PLAYER_AO[playerid][ind][g_COLOR1],PLAYER_AO[playerid][ind][g_COLOR2]);

					PlayerPlaySound(playerid, 6801, 0, 0, 0);
					SCM(playerid, -1, "√è√∞√®√¨√•√∑√†√≠√®√•: √Ö√±√´√® √≠√†√§√•√≤√ª√© √†√™√±√•√±√±√≥√†√∞ √Æ√≤√Æ√°√∞√†√¶¬∏√≠ √≠√•√™√Æ√∞√∞√•√™√≤√≠√Æ, √¢√ª √¨√Æ√¶√•√≤√• √Æ√≤√∞√•S√≠√™√≤√®√∞√Æ√¢√†√≤√º √•√£√Æ √Ø√Æ√´√Æ√¶√•√≠√®√•");
					SCM(playerid, -1, "√Ñ√´√ø √Ω√≤√Æ√£√Æ Usar√≤√• √™√Æ√¨√†√≠√§√≥ "CBLUE"/fixaccessory");
				}
				return 1;
			}
			if(inv_info[playerid][i_type][inv_clickedslot]==inv_info[playerid][in_amodel][inv_clickedslot]+7 && inv_info[playerid][i_type][inv_clickedslot] != 0) {

				new skin = GetPlayerSkin(playerid);
				if(skin != pData[playerid][pChar]) return SCM(playerid,COLOR_GREY,"No dejes a tu hijo");
				new newskin = inv_info[playerid][in_amodel][inv_clickedslot];
				pData[playerid][pChar] = newskin;
				UpdatePlayerData(playerid,"pChar",newskin);
				if(pData[playerid][pMember] == 0)
				{
					pData[playerid][pModel] = newskin;
					UpdatePlayerData(playerid, "pModel", newskin);
				}
				SetPlayerSkin(playerid, newskin);
				RemoveItemFromInventory(playerid, inv_info[playerid][i_type][inv_clickedslot]);
				AddSkinToInventory(playerid, skin);
				return close_inventory(playerid);
			}
			switch(inv_info[playerid][i_type][inv_clickedslot]) {
				case 0, 1: callcmd::smoke(playerid);
				case 2: return SCM(playerid, 0xCCCC99FF, "Usa /lock 3 Leer Cerrar o Abrir un puerto aprobado");
				case 3: SetTimerEx("open_phone_inv", 700, 0, "i", playerid);
				case 4: callcmd::healme(playerid);
				case 5: callcmd::mask(playerid);
				case 6: return SPD(playerid,132,DIALOG_STYLE_MSGBOX,"Magnet√≥fono",""CWHITE"Quieres revisar tu casa en la pared?","S√≠","No");
				case 7: return SCM(playerid, 0xCCCC99FF, "Ir al coche, al cual quieres darte de alta y entrar /canfilling");
				case 8: return SCM(playerid, 0xCCCC99FF, "No intercambie los archivos por un d√≠a o para guardar. Disponible en casino");
			}
			close_inventory(playerid);
		}
	}
	if(clickedid == global_invTD[24] || clickedid == inv_clickingTD[25]) {
		if(pData[playerid][pLevel] < 3) 
			return SCM(playerid,COLOR_LIGHTGREY,"√Ç√ª√±√≤√†√¢√´√ø√≤√º √≤√Æ√¢√†√∞√ª √≠√† √Ø√∞√ÆS√≠√¶√≥ √∞√†√ß√∞√•√∏√•√≠√Æ √± 3-√£√Æ √≥√∞√Æ√¢√≠√ø");
		new idmarket=-1;
		for(new i =0; i<9; i++) {
			if(selleritemid[i] != playerid) continue;
			idmarket=i;
			SetPVarInt(playerid, "market_numset", i); 
			break;
		}
		if(idmarket!= -1) {
			if(!IsPlayerInRangeOfPoint(playerid, 6.5, posMarket[idmarket][markX],posMarket[idmarket][markY],posMarket[idmarket][markZ])) 
				return SCM(playerid,COLOR_LIGHTGREY,"√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √±√¢√Æ√•√© √Ø√†√´√†√≤√™√®");
		}
		else {
			new nump =-1;
			for(new i = 0; i < sizeof(posMarket); i ++) {
				if(!IsPlayerInRangeOfPoint(playerid, 6.5, posMarket[i][markX],posMarket[i][markY],posMarket[i][markZ])) 
					continue;
				if(selleritemid[i] != -1) 
					continue;
				nump =i;
			}
			if(nump==-1) 
				return SCM(playerid,COLOR_LIGHTGREY,"√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √±√¢√Æ√°√Æ√§√≠√Æ√© √Ø√†√´√†√≤√™√® √≠√† √∞√ª√≠√™√•");
			SetPVarInt(playerid, "market_numset", nump); 
		}

		new inv_clickedslot = inv_info[playerid][i_clickID];
		if(inv_clickedslot != -1) {
			
			if(inv_info[playerid][i_type][inv_clickedslot] == inv_info[playerid][in_aindex][inv_clickedslot]+inv_info[playerid][in_amodel][inv_clickedslot] && 
				inv_info[playerid][i_type][inv_clickedslot] != 0) {
				if(inv_clickedslot >= 20) 
					return SCM(playerid, COLOR_LIGHTGREY,"√ó√≤√Æ√°√ª √¢√ß√†√®√¨√Æ√§√•√©√±√≤√¢√Æ√¢√†√≤√º √± √†√™√±√•√±√±√≥√†√∞√Æ√¨ √≠√≥√¶√≠√Æ √±√≠√ø√≤√º √•√£√Æ");
				SetPVarInt(playerid, "market_inv_slot", inv_clickedslot);
				SetPVarInt(playerid, "market_inv_isaccessory", 1);
				return SPD(playerid,147,DIALOG_STYLE_INPUT,"√è√∞√ÆS√≠√¶√†",""CWHITE"Quieres √¢√ª√±√≤√†√¢√®√≤√º √≤√Æ√¢√†√∞ √≠√† √Ø√∞√ÆS√≠√¶√≥.\n√Ç√¢√•√§√®√≤√• √∂√•√≠√≥ √§√´√ø √Ω√≤√Æ√£√Æ √≤√Æ√¢√†√∞√† √¢ √Ø√Æ√´√• √≠√®√¶√•:","√É√Æ√≤√Æ√¢√Æ","Cerrar");
			}
			if(inv_info[playerid][i_type][inv_clickedslot]==inv_info[playerid][in_amodel][inv_clickedslot]+7 && inv_info[playerid][i_type][inv_clickedslot] != 0) {
				SetPVarInt(playerid, "market_inv_slot", inv_clickedslot);
				SetPVarInt(playerid, "market_inv_isskin", 1);
				return SPD(playerid,147,DIALOG_STYLE_INPUT,"√è√∞√ÆS√≠√¶√†",""CWHITE"Quieres √¢√ª√±√≤√†√¢√®√≤√º √≤√Æ√¢√†√∞ √≠√† √Ø√∞√ÆS√≠√¶√≥.\n√Ç√¢√•√§√®√≤√• √∂√•√≠√≥ √§√´√ø √Ω√≤√Æ√£√Æ √≤√Æ√¢√†√∞√† √¢ √Ø√Æ√´√• √≠√®√¶√•:","√É√Æ√≤√Æ√¢√Æ","Cerrar");
			}
			SetPVarInt(playerid, "market_inv_slot", inv_clickedslot);
			SPD(playerid,147,DIALOG_STYLE_INPUT,"√è√∞√ÆS√≠√¶√†",""CWHITE"Quieres √¢√ª√±√≤√†√¢√®√≤√º √≤√Æ√¢√†√∞ √≠√† √Ø√∞√ÆS√≠√¶√≥.\n√Ç√¢√•√§√®√≤√• √∂√•√≠√≥ √§√´√ø √Ω√≤√Æ√£√Æ √≤√Æ√¢√†√∞√† √¢ √Ø√Æ√´√• √≠√®√¶√•:","√É√Æ√≤√Æ√¢√Æ","Cerrar");
		}
		else SCM(playerid, COLOR_LIGHTGREY,"√ç√≥√¶√≠√Æ Seleccione √Ø√∞√•√§√¨√•√≤ √™√Æ√≤√Æ√∞√ª√© √µ√Æ√≤√®√≤√• √¢√ª√±√≤√†√¢√®√≤√º √≠√† √Ø√∞√ÆS√≠√¶√≥");
	}

	new inv_clickedslot;
	for(new i = 0; i < 20; i ++) {
		if(clickedid != inv_clickingTD[i]) continue;
		inv_clickedslot = inv_info[playerid][i_clickID];
		if(inv_clickedslot != -1) {
			if(!inv_info[playerid][is_click][i] && inv_info[playerid][i_type][i] == -1 && inv_clickedslot < 20) {
				inv_info[playerid][i_type][i] = inv_info[playerid][i_type][inv_clickedslot];
				inv_info[playerid][i_count][i] = inv_info[playerid][i_count][inv_clickedslot];
				inv_info[playerid][i_type][inv_clickedslot] = -1;
				inv_info[playerid][i_count][inv_clickedslot] = 0;
				inv_info[playerid][in_aindex][i]=inv_info[playerid][in_aindex][inv_clickedslot];
				inv_info[playerid][in_amodel][i]=inv_info[playerid][in_amodel][inv_clickedslot];
				inv_info[playerid][in_apx][i]=inv_info[playerid][in_apx][inv_clickedslot];
				inv_info[playerid][in_apy][i]=inv_info[playerid][in_apy][inv_clickedslot];
				inv_info[playerid][in_apz][i]=inv_info[playerid][in_apz][inv_clickedslot];
				inv_info[playerid][in_azoom][i]=inv_info[playerid][in_azoom][inv_clickedslot];
				inv_info[playerid][in_bone][i]=inv_info[playerid][in_bone][inv_clickedslot];

				inv_info[playerid][in_offsX][i]=inv_info[playerid][in_offsX][inv_clickedslot];
				inv_info[playerid][in_offsY][i]=inv_info[playerid][in_offsY][inv_clickedslot];
				inv_info[playerid][in_offsZ][i]=inv_info[playerid][in_offsZ][inv_clickedslot];
				inv_info[playerid][in_afrotX][i]=inv_info[playerid][in_afrotX][inv_clickedslot];
				inv_info[playerid][in_afrotY][i]=inv_info[playerid][in_afrotY][inv_clickedslot];
				inv_info[playerid][in_afrotZ][i]=inv_info[playerid][in_afrotZ][inv_clickedslot];
				inv_info[playerid][in_afscaleX][i]=inv_info[playerid][in_afscaleX][inv_clickedslot];
				inv_info[playerid][in_afscaleY][i]=inv_info[playerid][in_afscaleY][inv_clickedslot];
				inv_info[playerid][in_afscaleZ][i]=inv_info[playerid][in_afscaleZ][inv_clickedslot];

				PlayerTextDrawHide(playerid, inv_previewTD[playerid][inv_clickedslot]);

				if(inv_info[playerid][i_type][i] == inv_info[playerid][in_aindex][i]+inv_info[playerid][in_amodel][i] && 
					inv_info[playerid][i_type][i] != 0) {
					PlayerTextDrawSetPreviewModel(playerid, inv_previewTD[playerid][i], inv_info[playerid][in_amodel][i]);
					PlayerTextDrawSetPreviewRot(playerid, inv_previewTD[playerid][i], 
					inv_info[playerid][in_apx][i], 
					inv_info[playerid][in_apy][i], 
					inv_info[playerid][in_apz][i], 
					inv_info[playerid][in_azoom][i]);
				}
				else if(inv_info[playerid][i_type][i]==inv_info[playerid][in_amodel][i]+7 && inv_info[playerid][i_type][i] != 0) {
					PlayerTextDrawSetPreviewModel(playerid, inv_previewTD[playerid][i], inv_info[playerid][in_amodel][i]);
					PlayerTextDrawSetPreviewRot(playerid, inv_previewTD[playerid][i], 
					0, 
					0, 
					0, 
					1.5);
				}
				else {
					PlayerTextDrawSetPreviewModel(playerid, inv_previewTD[playerid][i], item_data[inv_info[playerid][i_type][i]][itemmodel]);
					PlayerTextDrawSetPreviewRot(playerid, inv_previewTD[playerid][i], 
					item_data[inv_info[playerid][i_type][i]][itemrotX], 
					item_data[inv_info[playerid][i_type][i]][itemrotY], 
					item_data[inv_info[playerid][i_type][i]][itemrotZ], 
					item_data[inv_info[playerid][i_type][i]][itemzoom]);
				}

				PlayerTextDrawShow(playerid, inv_previewTD[playerid][i]);
				if(inv_info[playerid][i_count][i] > 1) {
					PlayerTextDrawHide(playerid, td_inv_counts[playerid][inv_clickedslot]);
					new number[5];
					format(number, sizeof(number), "%d", inv_info[playerid][i_count][i]);
					PlayerTextDrawSetString(playerid, td_inv_counts[playerid][i], number);
					PlayerTextDrawShow(playerid, td_inv_counts[playerid][i]);
				}
				PlayerTextDrawBoxColor(playerid, player_invTD[playerid][inv_clickedslot], 1025056153);
				PlayerTextDrawHide(playerid, player_invTD[playerid][inv_clickedslot]);
				PlayerTextDrawShow(playerid, player_invTD[playerid][inv_clickedslot]);
				inv_info[playerid][is_click][inv_clickedslot] = false;
				new equery[128], aquery[400];
				if(inv_info[playerid][i_type][i] == inv_info[playerid][in_aindex][i]+inv_info[playerid][in_amodel][i] && 
					inv_info[playerid][i_type][i] != 0) {
					mysql_format(mysql_Handle, aquery, 90, "DELETE FROM `inventory` WHERE `owner_id` = %d AND `itemtype` = %d", pData[playerid][pID], inv_info[playerid][in_aindex][i]+inv_info[playerid][in_amodel][i]);
					mysql_tquery(mysql_Handle, aquery);
					mysql_format(mysql_Handle, aquery, sizeof(aquery), "INSERT INTO `inventory` (`acsbone`,`owner_id`, `itemslot`, `itemcount`, `itemtype`,`acsindex`,`acsmodel`,`tdpx`,`tdpy`,`tdpz`,`tdzoom`,`offsX`,`offsY`,`offsZ`,`afrotX`,`afrotY`,`afrotZ`,`afscaleX`,`afscaleY`,`afscaleZ`) VALUES (%d,%d, %d, '1', %d, %d, %d,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f)", 
					inv_info[playerid][in_bone][i],pData[playerid][pID], i,inv_info[playerid][in_aindex][i]+inv_info[playerid][in_amodel][i],inv_info[playerid][in_aindex][i],inv_info[playerid][in_amodel][i],inv_info[playerid][in_apx][i],inv_info[playerid][in_apy][i],inv_info[playerid][in_apz][i],inv_info[playerid][in_azoom][i],
					inv_info[playerid][in_offsX][i],inv_info[playerid][in_offsY][i],inv_info[playerid][in_offsZ][i],
					inv_info[playerid][in_afrotX][i],inv_info[playerid][in_afrotY][i],inv_info[playerid][in_afrotZ][i],
					inv_info[playerid][in_afscaleX][i],inv_info[playerid][in_afscaleY][i],inv_info[playerid][in_afscaleZ][i]);
					mysql_tquery(mysql_Handle, aquery);
				}
				else if(inv_info[playerid][i_type][i]==inv_info[playerid][in_amodel][i]+7 && inv_info[playerid][i_type][i] != 0) {
					mysql_format(mysql_Handle, equery, 90, "DELETE FROM `inventory` WHERE `owner_id` = %d AND `itemtype` = %d", pData[playerid][pID], inv_info[playerid][i_type][i]);
					mysql_tquery(mysql_Handle, equery);
					mysql_format(mysql_Handle, equery, sizeof(equery), "INSERT INTO `inventory` (`acsbone`,`owner_id`, `itemslot`,`acsmodel`, `itemcount`, `itemtype`) VALUES (%d,%d, %d,%d, 1, %d)", inv_info[playerid][in_bone][i],pData[playerid][pID], i, inv_info[playerid][i_type][i]-7, inv_info[playerid][i_type][i]);
					mysql_tquery(mysql_Handle, equery);
				}
				else {
					mysql_format(mysql_Handle, equery, 90, "DELETE FROM `inventory` WHERE `owner_id` = %d AND `itemslot` = %d", pData[playerid][pID], inv_clickedslot);
					mysql_tquery(mysql_Handle, equery);
					mysql_format(mysql_Handle, equery, sizeof(equery), "INSERT INTO `inventory` (`acsbone`,`owner_id`, `itemslot`, `itemcount`, `itemtype`) VALUES (%d,%d, %d, %d, %d)", inv_info[playerid][in_bone][i],pData[playerid][pID], i, inv_info[playerid][i_count][i], inv_info[playerid][i_type][i]);
					mysql_tquery(mysql_Handle, equery);
				}
			}
			else {
				if(inv_clickedslot >= 20) {
					if(i != inv_clickedslot) {
						PlayerTextDrawBoxColor(playerid, player_invTD[playerid][inv_clickedslot+4], 1025056153);
						PlayerTextDrawHide(playerid, player_invTD[playerid][inv_clickedslot+4]);
						PlayerTextDrawShow(playerid, player_invTD[playerid][inv_clickedslot+4]);
					}
					PlayerTextDrawBoxColor(playerid, player_invTD[playerid][i+4], 1025056153);
					PlayerTextDrawHide(playerid, player_invTD[playerid][i+4]);
					PlayerTextDrawShow(playerid, player_invTD[playerid][i+4]);
					inv_info[playerid][is_click][i] = false;
					inv_info[playerid][i_clickID] = -1;
				}
				else if(i != inv_clickedslot) {
					PlayerTextDrawBoxColor(playerid, player_invTD[playerid][inv_clickedslot], 1025056153);
					PlayerTextDrawHide(playerid, player_invTD[playerid][inv_clickedslot]);
					PlayerTextDrawShow(playerid, player_invTD[playerid][inv_clickedslot]);
				}
				PlayerTextDrawBoxColor(playerid, player_invTD[playerid][i], 1025056153);
				PlayerTextDrawHide(playerid, player_invTD[playerid][i]);
				PlayerTextDrawShow(playerid, player_invTD[playerid][i]);
				inv_info[playerid][is_click][i] = false;
			}
			inv_info[playerid][i_clickID] = -1;
		}
		else {
			if(inv_info[playerid][i_type][i] == -1) break;
			PlayerTextDrawBoxColor(playerid, player_invTD[playerid][i], 0x99999999);
			PlayerTextDrawHide(playerid, player_invTD[playerid][i]);
			PlayerTextDrawShow(playerid, player_invTD[playerid][i]);
			inv_info[playerid][is_click][i] = true;
			inv_info[playerid][i_clickID] = i;
			PlayerPlaySound(playerid, 6801, 0, 0, 0);
		}
		return 1;
	}

	if(clickedid == global_invTD[19] || clickedid == inv_clickingTD[20]) {
		close_inventory(playerid);
		show_donate_menu(playerid);
	}
	if(clickedid == global_invTD[20] || clickedid == inv_clickingTD[21]) {
		close_inventory(playerid);
		callcmd::menu(playerid);
	}
	if(clickedid == Text:INVALID_TEXT_DRAW && inventory_open[playerid]) 
		close_inventory(playerid);

	if(clickedid == barTDS[6]) {
		for(new i = 0; i < 14; i ++) {
			if(i <6) PlayerTextDrawDestroy(playerid, barTDS_PLAYER[playerid][i]);
			TextDrawHideForPlayer(playerid, barTDS[i]);
		}
		CancelSelectTextDraw(playerid);
		new str[90];
		format(str,sizeof(str),""CWHITE"¬øQu√© necesitar√°s en %d$\nLo quieres?", BizInfo[BizEnter{playerid}][bCena][0]);
		SPD(playerid, 6236, DIALOG_STYLE_MSGBOX, "Ivo", str, "S√≠", "No");
	}
	if(clickedid == barTDS[5]) {
		for(new i = 0; i < 14; i ++) {
			if(i <6) PlayerTextDrawDestroy(playerid, barTDS_PLAYER[playerid][i]);
			TextDrawHideForPlayer(playerid, barTDS[i]);
		}
		CancelSelectTextDraw(playerid);
		new str[90];
		format(str,sizeof(str),""CWHITE"¬øQu√© necesitar√°s en% d $ \ nLo quieres?", BizInfo[BizEnter{playerid}][bCena][1]);
		SPD(playerid, 6237, DIALOG_STYLE_MSGBOX, "Agua", str, "S√≠", "No");
	}
	if(clickedid == barTDS[4]) {
		for(new i = 0; i < 14; i ++) {
			if(i <6) PlayerTextDrawDestroy(playerid, barTDS_PLAYER[playerid][i]);
			TextDrawHideForPlayer(playerid, barTDS[i]);
		}
		CancelSelectTextDraw(playerid);
		new str[90];
		format(str,sizeof(str),""CWHITE"¬øQu√© necesitar√°s en %d$\nLo quieres?", BizInfo[BizEnter{playerid}][bCena][2]);
		SPD(playerid, 6238, DIALOG_STYLE_MSGBOX, "√ä√Æ√≠√º√ø√™", str, "S√≠", "No"); //No traduce
	}
	if(clickedid == barTDS[3]) {
		for(new i = 0; i < 14; i ++) {
			if(i <6) PlayerTextDrawDestroy(playerid, barTDS_PLAYER[playerid][i]);
			TextDrawHideForPlayer(playerid, barTDS[i]);
		}
		CancelSelectTextDraw(playerid);
		new str[90];
		format(str,sizeof(str),""CWHITE"¬øQu√© necesitar√°s en %d$\nLo quieres?", BizInfo[BizEnter{playerid}][bCena][3]);
		SPD(playerid, 6239, DIALOG_STYLE_MSGBOX, "Vino", str, "S√≠", "No");
	}
	if(clickedid == barTDS[2]) {
		for(new i = 0; i < 14; i ++) {
			if(i <6) PlayerTextDrawDestroy(playerid, barTDS_PLAYER[playerid][i]);
			TextDrawHideForPlayer(playerid, barTDS[i]);
		}
		CancelSelectTextDraw(playerid);
		new str[90];
		format(str,sizeof(str),""CWHITE"¬øQu√© necesitar√°s en %d$\nLo quieres?", BizInfo[BizEnter{playerid}][bCena][4]);
		SPD(playerid, 6240, DIALOG_STYLE_MSGBOX, "√ò√†√≥√∞√¨√†", str, "S√≠", "No"); //No traduce
	}
	if(clickedid == barTDS[1]) {
		for(new i = 0; i < 14; i ++) {
			if(i <6) PlayerTextDrawDestroy(playerid, barTDS_PLAYER[playerid][i]);
			TextDrawHideForPlayer(playerid, barTDS[i]);
		}
		CancelSelectTextDraw(playerid);
		new str[90];
		format(str,sizeof(str),""CWHITE"¬øQu√© necesitar√°s en %d$\nLo quieres?", BizInfo[BizEnter{playerid}][bCena][5]);
		SPD(playerid, 6241, DIALOG_STYLE_MSGBOX, "Sigara", str, "S√≠", "No");
	}
	if(clickedid == main_acs_TD[17]) {
		if(type_its_acs[playerid] == 1) return 1;
		if(GetPVarInt(playerid, "in_edit_acs")) {
			for(new index = 0; index < MAX_PLAYER_ATTACHED_OBJECTS; index ++) {
				if(!IsPlayerAttachedObjectSlotUsed(playerid, index)) continue;
				RemovePlayerAttachedObject(playerid, index);
			}
			DeletePVar(playerid, "in_edit_acs");
		}

		for(new i = 0;i<35;i ++) PlayerTextDrawDestroy(playerid, td_acs_items[playerid][i]);
		price_its_acs[playerid] = 1290;
		type_its_acs[playerid] = 1;

		td_acs_items[playerid][34] = CreatePlayerTextDraw(playerid, 420.000000, 140.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][34], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][34], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][34], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][34], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][34], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][34], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][34], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][34], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][34], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][34], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][34], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][34], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][34], 19006);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][34], 0.000000, 0.000000, 90.000000, 0.600000);
		model_its_acs[playerid][34] = 19006;

		td_acs_items[playerid][33] = CreatePlayerTextDraw(playerid, 450.000000, 140.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][33], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][33], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][33], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][33], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][33], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][33], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][33], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][33], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][33], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][33], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][33], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][33], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][33], 19007);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][33], 0.000000, 0.000000, 90.000000, 0.600000);
		model_its_acs[playerid][33] = 19007;

		td_acs_items[playerid][32] = CreatePlayerTextDraw(playerid, 480.000000, 140.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][32], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][32], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][32], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][32], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][32], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][32], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][32], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][32], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][32], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][32], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][32], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][32], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][32], 19008);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][32], 0.000000, 0.000000, 90.000000, 0.600000);
		model_its_acs[playerid][32] = 19008;

		td_acs_items[playerid][31] = CreatePlayerTextDraw(playerid, 510.000000, 140.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][31], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][31], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][31], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][31], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][31], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][31], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][31], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][31], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][31], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][31], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][31], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][31], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][31], 19009);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][31], 0.000000, 0.000000, 90.000000, 0.600000);
		model_its_acs[playerid][31] = 19009;

		td_acs_items[playerid][30] = CreatePlayerTextDraw(playerid, 540.000000, 140.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][30], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][30], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][30], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][30], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][30], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][30], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][30], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][30], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][30], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][30], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][30], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][30], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][30], 19010);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][30], 0.000000, 0.000000, 90.000000, 0.600000);
		model_its_acs[playerid][30] = 19010;

		td_acs_items[playerid][29] = CreatePlayerTextDraw(playerid, 570.000000, 140.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][29], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][29], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][29], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][29], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][29], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][29], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][29], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][29], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][29], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][29], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][29], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][29], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][29], 19011);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][29], 0.000000, 0.000000, 90.000000, 0.600000);
		model_its_acs[playerid][29] = 19011;

		td_acs_items[playerid][28] = CreatePlayerTextDraw(playerid, 600.000000, 140.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][28], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][28], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][28], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][28], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][28], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][28], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][28], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][28], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][28], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][28], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][28], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][28], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][28], 19012);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][28], 0.000000, 0.000000, 90.000000, 0.600000);
		model_its_acs[playerid][28] = 19012;

		td_acs_items[playerid][27] = CreatePlayerTextDraw(playerid, 420.000000, 170.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][27], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][27], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][27], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][27], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][27], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][27], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][27], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][27], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][27], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][27], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][27], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][27], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][27], 19013);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][27], 0.000000, 0.000000, 90.000000, 0.600000);
		model_its_acs[playerid][27] = 19013;

		td_acs_items[playerid][26] = CreatePlayerTextDraw(playerid, 450.000000, 170.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][26], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][26], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][26], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][26], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][26], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][26], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][26], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][26], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][26], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][26], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][26], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][26], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][26], 19014);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][26], 0.000000, 0.000000, 90.000000, 0.600000);
		model_its_acs[playerid][26] = 19014;

		td_acs_items[playerid][25] = CreatePlayerTextDraw(playerid, 480.000000, 170.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][25], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][25], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][25], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][25], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][25], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][25], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][25], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][25], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][25], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][25], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][25], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][25], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][25], 19015);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][25], 0.000000, 0.000000, 90.000000, 0.600000);
		model_its_acs[playerid][25] = 19015;

		td_acs_items[playerid][24] = CreatePlayerTextDraw(playerid, 510.000000, 170.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][24], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][24], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][24], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][24], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][24], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][24], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][24], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][24], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][24], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][24], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][24], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][24], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][24], 19016);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][24], 0.000000, 0.000000, 90.000000, 0.600000);
		model_its_acs[playerid][24] = 19016;

		td_acs_items[playerid][23] = CreatePlayerTextDraw(playerid, 540.000000, 170.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][23], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][23], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][23], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][23], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][23], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][23], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][23], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][23], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][23], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][23], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][23], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][23], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][23], 19017);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][23], 0.000000, 0.000000, 90.000000, 0.600000);
		model_its_acs[playerid][23] = 19017;

		td_acs_items[playerid][22] = CreatePlayerTextDraw(playerid, 570.000000, 170.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][22], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][22], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][22], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][22], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][22], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][22], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][22], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][22], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][22], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][22], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][22], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][22], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][22], 19018);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][22], 0.000000, 0.000000, 90.000000, 0.600000);
		model_its_acs[playerid][22] = 19018;

		td_acs_items[playerid][21] = CreatePlayerTextDraw(playerid, 600.000000, 170.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][21], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][21], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][21], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][21], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][21], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][21], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][21], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][21], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][21], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][21], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][21], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][21], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][21], 19019);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][21], 0.000000, 0.000000, 90.000000, 0.600000);
		model_its_acs[playerid][21] = 19019;

		td_acs_items[playerid][20] = CreatePlayerTextDraw(playerid, 420.000000, 200.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][20], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][20], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][20], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][20], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][20], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][20], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][20], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][20], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][20], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][20], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][20], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][20], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][20], 19020);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][20], 0.000000, 0.000000, 90.000000, 0.600000);
		model_its_acs[playerid][20] = 19020;

		td_acs_items[playerid][19] = CreatePlayerTextDraw(playerid, 450.000000, 200.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][19], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][19], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][19], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][19], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][19], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][19], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][19], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][19], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][19], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][19], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][19], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][19], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][19], 19021);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][19], 0.000000, 0.000000, 90.000000, 0.600000);
		model_its_acs[playerid][19] = 19021;

		td_acs_items[playerid][18] = CreatePlayerTextDraw(playerid, 480.000000, 200.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][18], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][18], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][18], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][18], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][18], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][18], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][18], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][18], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][18], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][18], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][18], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][18], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][18], 19022);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][18], 0.000000, 0.000000, 90.000000, 0.600000);
		model_its_acs[playerid][18] = 19022;

		td_acs_items[playerid][17] = CreatePlayerTextDraw(playerid, 510.000000, 200.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][17], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][17], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][17], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][17], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][17], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][17], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][17], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][17], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][17], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][17], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][17], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][17], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][17], 19023);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][17], 0.000000, 0.000000, 90.000000, 0.600000);
		model_its_acs[playerid][17] = 19023;

		td_acs_items[playerid][16] = CreatePlayerTextDraw(playerid, 540.000000, 200.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][16], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][16], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][16], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][16], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][16], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][16], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][16], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][16], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][16], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][16], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][16], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][16], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][16], 19024);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][16], 0.000000, 0.000000, 90.000000, 0.600000);
		model_its_acs[playerid][16] = 19024;

		td_acs_items[playerid][15] = CreatePlayerTextDraw(playerid, 570.000000, 200.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][15], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][15], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][15], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][15], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][15], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][15], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][15], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][15], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][15], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][15], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][15], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][15], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][15], 19025);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][15], 0.000000, 0.000000, 90.000000, 0.600000);
		model_its_acs[playerid][15] = 19025;

		td_acs_items[playerid][14] = CreatePlayerTextDraw(playerid, 600.000000, 200.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][14], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][14], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][14], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][14], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][14], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][14], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][14], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][14], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][14], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][14], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][14], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][14], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][14], 19026);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][14], 0.000000, 0.000000, 90.000000, 0.600000);
		model_its_acs[playerid][14] = 19026;

		td_acs_items[playerid][13] = CreatePlayerTextDraw(playerid, 420.000000, 230.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][13], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][13], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][13], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][13], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][13], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][13], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][13], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][13], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][13], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][13], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][13], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][13], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][13], 19027);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][13], 0.000000, 0.000000, 90.000000, 0.600000);
		model_its_acs[playerid][13] = 19027;

		td_acs_items[playerid][12] = CreatePlayerTextDraw(playerid, 450.000000, 230.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][12], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][12], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][12], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][12], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][12], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][12], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][12], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][12], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][12], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][12], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][12], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][12], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][12], 19028);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][12], 0.000000, 0.000000, 90.000000, 0.600000);
		model_its_acs[playerid][12] = 19028;

		td_acs_items[playerid][11] = CreatePlayerTextDraw(playerid, 480.000000, 230.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][11], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][11], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][11], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][11], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][11], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][11], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][11], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][11], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][11], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][11], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][11], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][11], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][11], 19029);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][11], 0.000000, 0.000000, 90.000000, 0.600000);
		model_its_acs[playerid][11] = 19029;

		td_acs_items[playerid][10] = CreatePlayerTextDraw(playerid, 510.000000, 230.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][10], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][10], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][10], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][10], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][10], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][10], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][10], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][10], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][10], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][10], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][10], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][10], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][10], 19030);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][10], 0.000000, 0.000000, 90.000000, 0.600000);
		model_its_acs[playerid][10] = 19030;

		td_acs_items[playerid][9] = CreatePlayerTextDraw(playerid, 540.000000, 230.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][9], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][9], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][9], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][9], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][9], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][9], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][9], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][9], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][9], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][9], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][9], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][9], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][9], 19031);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][9], 0.000000, 0.000000, 90.000000, 0.600000);
		model_its_acs[playerid][9] = 19031;

		td_acs_items[playerid][8] = CreatePlayerTextDraw(playerid, 570.000000, 230.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][8], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][8], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][8], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][8], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][8], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][8], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][8], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][8], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][8], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][8], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][8], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][8], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][8], 19032);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][8], 0.000000, 0.000000, 90.000000, 0.600000);
		model_its_acs[playerid][8] = 19032;

		td_acs_items[playerid][7] = CreatePlayerTextDraw(playerid, 600.000000, 230.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][7], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][7], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][7], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][7], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][7], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][7], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][7], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][7], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][7], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][7], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][7], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][7], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][7], 19033);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][7], 0.000000, 0.000000, 90.000000, 0.600000);
		model_its_acs[playerid][7] = 19033;

		td_acs_items[playerid][6] = CreatePlayerTextDraw(playerid, 420.000000, 260.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][6], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][6], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][6], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][6], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][6], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][6], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][6], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][6], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][6], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][6], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][6], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][6], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][6], 19034);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][6], 0.000000, 0.000000, 90.000000, 0.600000);
		model_its_acs[playerid][6] = 19034;

		td_acs_items[playerid][5] = CreatePlayerTextDraw(playerid, 450.000000, 260.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][5], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][5], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][5], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][5], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][5], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][5], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][5], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][5], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][5], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][5], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][5], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][5], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][5], 19035);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][5], 0.000000, 0.000000, 90.000000, 0.600000);
		model_its_acs[playerid][5] = 19035;

		td_acs_items[playerid][4] = CreatePlayerTextDraw(playerid, 480.000000, 260.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][4], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][4], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][4], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][4], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][4], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][4], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][4], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][4], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][4], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][4], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][4], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][4], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][4], 19138);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][4], 0.000000, 0.000000, 90.000000, 0.600000);
		model_its_acs[playerid][4] = 19138;

		td_acs_items[playerid][3] = CreatePlayerTextDraw(playerid, 510.000000, 260.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][3], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][3], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][3], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][3], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][3], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][3], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][3], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][3], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][3], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][3], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][3], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][3], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][3], 19139);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][3], 0.000000, 0.000000, 90.000000, 0.600000);
		model_its_acs[playerid][3] = 19139;

		td_acs_items[playerid][2] = CreatePlayerTextDraw(playerid, 540.000000, 260.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][2], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][2], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][2], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][2], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][2], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][2], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][2], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][2], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][2], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][2], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][2], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][2], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][2], 19140);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][2], 0.000000, 0.000000, 90.000000, 0.600000);
		model_its_acs[playerid][2] = 19140;

		td_acs_items[playerid][1] = CreatePlayerTextDraw(playerid, 570.000000, 260.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][1], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][1], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][1], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][1], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][1], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][1], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][1], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][1], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][1], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][1], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][1], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][1], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][1], 19085);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][1], 0.000000, 0.000000, 90.000000, 0.600000);
		model_its_acs[playerid][1] = 19085;

		td_acs_items[playerid][0] = CreatePlayerTextDraw(playerid, 600.000000, 260.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][0], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][0], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][0], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][0], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][0], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][0], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][0], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][0], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][0], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][0], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][0], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][0], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][0], 11750);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][0], 90.000000, 45.000000, 165.000000, 0.900000);
		model_its_acs[playerid][0] = 11750;

		for(new i = 0;i<35;i ++) PlayerTextDrawShow(playerid, td_acs_items[playerid][i]);
		for(new i = 18;i<21;i ++) TextDrawShowForPlayer(playerid, main_acs_TD[i]);
	}
	if(clickedid == main_acs_TD[16]) {
		if(type_its_acs[playerid] == 2) return 1;
		DeletePVar(playerid, "in_edit_acs");

		for(new i = 0;i<35;i ++) PlayerTextDrawDestroy(playerid, td_acs_items[playerid][i]);
		price_its_acs[playerid] = 1900;
		type_its_acs[playerid] = 2;

		td_acs_items[playerid][34] = CreatePlayerTextDraw(playerid, 420.000000, 140.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][34], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][34], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][34], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][34], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][34], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][34], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][34], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][34], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][34], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][34], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][34], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][34], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][34], 18944);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][34], 0.000000, -90.000000, 0.000000, 0.600000);
		model_its_acs[playerid][34] = 18944;

		td_acs_items[playerid][33] = CreatePlayerTextDraw(playerid, 450.000000, 140.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][33], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][33], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][33], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][33], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][33], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][33], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][33], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][33], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][33], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][33], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][33], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][33], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][33], 18945);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][33], 0.000000, -90.000000, 0.000000, 0.600000);
		model_its_acs[playerid][33] = 18945;

		td_acs_items[playerid][32] = CreatePlayerTextDraw(playerid, 480.000000, 140.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][32], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][32], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][32], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][32], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][32], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][32], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][32], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][32], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][32], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][32], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][32], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][32], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][32], 18946);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][32], 0.000000, -90.000000, 0.000000, 0.600000);
		model_its_acs[playerid][32] = 18946;

		td_acs_items[playerid][31] = CreatePlayerTextDraw(playerid, 510.000000, 140.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][31], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][31], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][31], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][31], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][31], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][31], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][31], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][31], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][31], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][31], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][31], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][31], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][31], 18947);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][31], 0.000000, -90.000000, 0.000000, 0.600000);
		model_its_acs[playerid][31] = 18947;

		td_acs_items[playerid][30] = CreatePlayerTextDraw(playerid, 540.000000, 140.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][30], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][30], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][30], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][30], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][30], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][30], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][30], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][30], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][30], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][30], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][30], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][30], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][30], 18948);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][30], 0.000000, -90.000000, 0.000000, 0.600000);
		model_its_acs[playerid][30] = 18948;

		td_acs_items[playerid][29] = CreatePlayerTextDraw(playerid, 570.000000, 140.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][29], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][29], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][29], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][29], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][29], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][29], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][29], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][29], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][29], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][29], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][29], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][29], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][29], 18949);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][29], 0.000000, -90.000000, 0.000000, 0.600000);
		model_its_acs[playerid][29] = 18949;

		td_acs_items[playerid][28] = CreatePlayerTextDraw(playerid, 600.000000, 140.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][28], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][28], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][28], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][28], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][28], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][28], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][28], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][28], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][28], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][28], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][28], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][28], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][28], 18950);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][28], 0.000000, -90.000000, 0.000000, 0.600000);
		model_its_acs[playerid][28] = 18950;

		td_acs_items[playerid][27] = CreatePlayerTextDraw(playerid, 420.000000, 170.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][27], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][27], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][27], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][27], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][27], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][27], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][27], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][27], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][27], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][27], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][27], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][27], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][27], 18951);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][27], 0.000000, -90.000000, 0.000000, 0.600000);
		model_its_acs[playerid][27] = 18951;

		td_acs_items[playerid][26] = CreatePlayerTextDraw(playerid, 450.000000, 170.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][26], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][26], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][26], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][26], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][26], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][26], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][26], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][26], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][26], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][26], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][26], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][26], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][26], 19136);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][26], 0.000000, -90.000000, 0.000000, 0.600000);
		model_its_acs[playerid][26] = 19136;

		td_acs_items[playerid][25] = CreatePlayerTextDraw(playerid, 480.000000, 170.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][25], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][25], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][25], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][25], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][25], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][25], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][25], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][25], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][25], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][25], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][25], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][25], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][25], 19098);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][25], 0.000000, -90.000000, 0.000000, 0.600000);
		model_its_acs[playerid][25] = 19098;

		td_acs_items[playerid][24] = CreatePlayerTextDraw(playerid, 510.000000, 170.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][24], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][24], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][24], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][24], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][24], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][24], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][24], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][24], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][24], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][24], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][24], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][24], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][24], 19097);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][24], 0.000000, -90.000000, 0.000000, 0.600000);
		model_its_acs[playerid][24] = 19097;

		td_acs_items[playerid][23] = CreatePlayerTextDraw(playerid, 540.000000, 170.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][23], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][23], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][23], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][23], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][23], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][23], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][23], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][23], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][23], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][23], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][23], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][23], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][23], 19096);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][23], 0.000000, -90.000000, 0.000000, 0.600000);
		model_its_acs[playerid][23] = 19096;

		td_acs_items[playerid][22] = CreatePlayerTextDraw(playerid, 570.000000, 170.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][22], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][22], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][22], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][22], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][22], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][22], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][22], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][22], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][22], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][22], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][22], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][22], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][22], 19553);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][22], 0.000000, -90.000000, 0.000000, 0.600000);
		model_its_acs[playerid][22] = 19553;

		td_acs_items[playerid][21] = CreatePlayerTextDraw(playerid, 600.000000, 170.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][21], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][21], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][21], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][21], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][21], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][21], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][21], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][21], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][21], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][21], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][21], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][21], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][21], 18639);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][21], 0.000000, -90.000000, 0.000000, 0.600000);
		model_its_acs[playerid][21] = 18639;

		td_acs_items[playerid][20] = CreatePlayerTextDraw(playerid, 420.000000, 200.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][20], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][20], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][20], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][20], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][20], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][20], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][20], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][20], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][20], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][20], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][20], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][20], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][20], 18962);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][20], 0.000000, -90.000000, 0.000000, 0.600000);
		model_its_acs[playerid][20] = 18962;

		td_acs_items[playerid][19] = CreatePlayerTextDraw(playerid, 450.000000, 200.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][19], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][19], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][19], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][19], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][19], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][19], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][19], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][19], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][19], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][19], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][19], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][19], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][19], 19200);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][19], 0.000000, -90.000000, 0.000000, 0.600000);
		model_its_acs[playerid][19] = 19200;

		td_acs_items[playerid][18] = CreatePlayerTextDraw(playerid, 480.000000, 200.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][18], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][18], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][18], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][18], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][18], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][18], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][18], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][18], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][18], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][18], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][18], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][18], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][18], 18943);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][18], 0.000000, -90.000000, 0.000000, 0.600000);
		model_its_acs[playerid][18] = 18943;

		td_acs_items[playerid][17] = CreatePlayerTextDraw(playerid, 510.000000, 200.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][17], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][17], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][17], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][17], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][17], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][17], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][17], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][17], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][17], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][17], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][17], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][17], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][17], 18953);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][17], 0.000000, -90.000000, 0.000000, 0.600000);
		model_its_acs[playerid][17] = 18953;

		td_acs_items[playerid][16] = CreatePlayerTextDraw(playerid, 540.000000, 200.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][16], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][16], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][16], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][16], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][16], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][16], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][16], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][16], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][16], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][16], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][16], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][16], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][16], 18954);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][16], 0.000000, -90.000000, 0.000000, 0.600000);
		model_its_acs[playerid][16] = 18954;

		td_acs_items[playerid][15] = CreatePlayerTextDraw(playerid, 570.000000, 200.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][15], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][15], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][15], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][15], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][15], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][15], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][15], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][15], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][15], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][15], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][15], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][15], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][15], 19554);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][15], 0.000000, -90.000000, 0.000000, 0.600000);
		model_its_acs[playerid][15] = 19554;

		td_acs_items[playerid][14] = CreatePlayerTextDraw(playerid, 600.000000, 200.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][14], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][14], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][14], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][14], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][14], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][14], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][14], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][14], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][14], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][14], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][14], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][14], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][14], 18952);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][14], 0.000000, -90.000000, 0.000000, 0.600000);
		model_its_acs[playerid][14] = 18952;

		td_acs_items[playerid][13] = CreatePlayerTextDraw(playerid, 420.000000, 230.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][13], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][13], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][13], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][13], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][13], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][13], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][13], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][13], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][13], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][13], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][13], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][13], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][13], 19161);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][13], 0.000000, -90.000000, 0.000000, 0.600000);
		model_its_acs[playerid][13] = 19161;

		td_acs_items[playerid][12] = CreatePlayerTextDraw(playerid, 450.000000, 230.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][12], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][12], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][12], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][12], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][12], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][12], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][12], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][12], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][12], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][12], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][12], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][12], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][12], 19520);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][12], 0.000000, -90.000000, 0.000000, 0.600000);
		model_its_acs[playerid][12] = 19520;

		td_acs_items[playerid][11] = CreatePlayerTextDraw(playerid, 480.000000, 230.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][11], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][11], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][11], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][11], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][11], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][11], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][11], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][11], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][11], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][11], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][11], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][11], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][11], 19521);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][11], 0.000000, -90.000000, 0.000000, 0.600000);
		model_its_acs[playerid][11] = 19521;

		td_acs_items[playerid][10] = CreatePlayerTextDraw(playerid, 510.000000, 230.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][10], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][10], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][10], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][10], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][10], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][10], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][10], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][10], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][10], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][10], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][10], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][10], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][10], 19067);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][10], 0.000000, 0.000000, 90.000000, 0.600000);
		model_its_acs[playerid][10] = 19067;

		td_acs_items[playerid][9] = CreatePlayerTextDraw(playerid, 540.000000, 230.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][9], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][9], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][9], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][9], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][9], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][9], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][9], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][9], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][9], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][9], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][9], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][9], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][9], 18971);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][9], 0.000000, 0.000000, 90.000000, 0.600000);
		model_its_acs[playerid][9] = 18971;
		
		td_acs_items[playerid][8] = CreatePlayerTextDraw(playerid, 570.000000, 230.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][8], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][8], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][8], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][8], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][8], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][8], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][8], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][8], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][8], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][8], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][8], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][8], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][8], 18972);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][8], 0.000000, 0.000000, 90.000000, 0.600000);
		model_its_acs[playerid][8] = 18972;

		td_acs_items[playerid][7] = CreatePlayerTextDraw(playerid, 600.000000, 230.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][7], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][7], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][7], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][7], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][7], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][7], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][7], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][7], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][7], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][7], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][7], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][7], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][7], 18973);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][7], 0.000000, 0.000000, 90.000000, 0.600000);
		model_its_acs[playerid][7] = 18973;

		td_acs_items[playerid][6] = CreatePlayerTextDraw(playerid, 420.000000, 260.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][6], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][6], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][6], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][6], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][6], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][6], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][6], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][6], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][6], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][6], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][6], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][6], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][6], 18636);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][6], 0.000000, 0.000000, 90.000000, 0.600000);
		model_its_acs[playerid][6] = 18636;

		td_acs_items[playerid][5] = CreatePlayerTextDraw(playerid, 450.000000, 260.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][5], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][5], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][5], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][5], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][5], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][5], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][5], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][5], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][5], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][5], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][5], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][5], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][5], 18967);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][5], 0.000000, 0.000000, 90.000000, 0.600000);
		model_its_acs[playerid][5] = 18967;

		td_acs_items[playerid][4] = CreatePlayerTextDraw(playerid, 480.000000, 260.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][4], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][4], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][4], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][4], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][4], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][4], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][4], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][4], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][4], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][4], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][4], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][4], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][4], 18968);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][4], 0.000000, 0.000000, 90.000000, 0.600000);
		model_its_acs[playerid][4] = 18968;

		td_acs_items[playerid][3] = CreatePlayerTextDraw(playerid, 510.000000, 260.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][3], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][3], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][3], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][3], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][3], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][3], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][3], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][3], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][3], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][3], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][3], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][3], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][3], 18969);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][3], 0.000000, 0.000000, 90.000000, 0.600000);
		model_its_acs[playerid][3] = 18969;

		td_acs_items[playerid][2] = CreatePlayerTextDraw(playerid, 540.000000, 260.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][2], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][2], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][2], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][2], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][2], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][2], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][2], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][2], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][2], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][2], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][2], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][2], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][2], 19488);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][2], 0.000000, 0.000000, 90.000000, 0.600000);
		model_its_acs[playerid][2] = 19488;

		td_acs_items[playerid][1] = CreatePlayerTextDraw(playerid, 570.000000, 260.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][1], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][1], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][1], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][1], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][1], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][1], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][1], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][1], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][1], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][1], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][1], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][1], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][1], 18970);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][1], 0.000000, 0.000000, 90.000000, 0.600000);
		model_its_acs[playerid][1] = 18970;

		td_acs_items[playerid][0] = CreatePlayerTextDraw(playerid, 600.000000, 260.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][0], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][0], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][0], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][0], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][0], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][0], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][0], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][0], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][0], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][0], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][0], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][0], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][0], 19352);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][0], 0.000000, 0.000000, 0.000000, 0.900000);
		model_its_acs[playerid][0] = 19352;
			
		for(new i = 0;i<35;i ++) PlayerTextDrawShow(playerid, td_acs_items[playerid][i]);
		for(new i = 18;i<21;i ++) TextDrawShowForPlayer(playerid, main_acs_TD[i]);
	}
	if(clickedid == main_acs_TD[15]) {
		if(type_its_acs[playerid] == 3) return 1;
		DeletePVar(playerid, "in_edit_acs");

		for(new i = 0;i<35;i ++) PlayerTextDrawDestroy(playerid, td_acs_items[playerid][i]);
		price_its_acs[playerid] = 1500;
		type_its_acs[playerid] = 3;

		td_acs_items[playerid][34] = CreatePlayerTextDraw(playerid, 420.000000, 140.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][34], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][34], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][34], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][34], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][34], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][34], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][34], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][34], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][34], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][34], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][34], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][34], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][34], 18891);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][34], 0.000000, 270.000000, 0.000000, 0.600000);
		model_its_acs[playerid][34] = 18891;

		td_acs_items[playerid][33] = CreatePlayerTextDraw(playerid, 450.000000, 140.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][33], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][33], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][33], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][33], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][33], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][33], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][33], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][33], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][33], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][33], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][33], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][33], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][33], 18892);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][33], 0.000000, 270.000000, 0.000000, 0.600000);
		model_its_acs[playerid][33] = 18892;

		td_acs_items[playerid][32] = CreatePlayerTextDraw(playerid, 480.000000, 140.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][32], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][32], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][32], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][32], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][32], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][32], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][32], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][32], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][32], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][32], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][32], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][32], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][32], 18893);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][32], 0.000000, 270.000000, 0.000000, 0.600000);
		model_its_acs[playerid][32] = 18893;

		td_acs_items[playerid][31] = CreatePlayerTextDraw(playerid, 510.000000, 140.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][31], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][31], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][31], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][31], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][31], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][31], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][31], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][31], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][31], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][31], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][31], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][31], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][31], 18894);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][31], 0.000000, 270.000000, 0.000000, 0.600000);
		model_its_acs[playerid][31] = 18894;

		td_acs_items[playerid][30] = CreatePlayerTextDraw(playerid, 540.000000, 140.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][30], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][30], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][30], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][30], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][30], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][30], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][30], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][30], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][30], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][30], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][30], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][30], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][30], 18895);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][30], 0.000000, 270.000000, 0.000000, 0.600000);
		model_its_acs[playerid][30] = 18895;

		td_acs_items[playerid][29] = CreatePlayerTextDraw(playerid, 570.000000, 140.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][29], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][29], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][29], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][29], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][29], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][29], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][29], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][29], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][29], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][29], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][29], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][29], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][29], 18896);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][29], 0.000000, 270.000000, 0.000000, 0.600000);
		model_its_acs[playerid][29] = 18896;

		td_acs_items[playerid][28] = CreatePlayerTextDraw(playerid, 600.000000, 140.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][28], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][28], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][28], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][28], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][28], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][28], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][28], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][28], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][28], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][28], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][28], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][28], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][28], 18897);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][28], 0.000000, 270.000000, 0.000000, 0.600000);
		model_its_acs[playerid][28] = 18897;

		td_acs_items[playerid][27] = CreatePlayerTextDraw(playerid, 420.000000, 170.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][27], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][27], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][27], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][27], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][27], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][27], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][27], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][27], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][27], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][27], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][27], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][27], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][27], 18898);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][27], 0.000000, 270.000000, 0.000000, 0.600000);
		model_its_acs[playerid][27] = 18898;

		td_acs_items[playerid][26] = CreatePlayerTextDraw(playerid, 450.000000, 170.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][26], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][26], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][26], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][26], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][26], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][26], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][26], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][26], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][26], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][26], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][26], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][26], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][26], 18899);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][26], 0.000000, 270.000000, 0.000000, 0.600000);
		model_its_acs[playerid][26] = 18899;

		td_acs_items[playerid][25] = CreatePlayerTextDraw(playerid, 480.000000, 170.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][25], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][25], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][25], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][25], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][25], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][25], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][25], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][25], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][25], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][25], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][25], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][25], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][25], 18900);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][25], 0.000000, 270.000000, 0.000000, 0.600000);
		model_its_acs[playerid][25] = 18900;

		td_acs_items[playerid][24] = CreatePlayerTextDraw(playerid, 510.000000, 170.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][24], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][24], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][24], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][24], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][24], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][24], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][24], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][24], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][24], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][24], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][24], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][24], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][24], 18901);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][24], 0.000000, 270.000000, 0.000000, 0.600000);
		model_its_acs[playerid][24] = 18901;

		td_acs_items[playerid][23] = CreatePlayerTextDraw(playerid, 540.000000, 170.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][23], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][23], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][23], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][23], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][23], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][23], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][23], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][23], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][23], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][23], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][23], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][23], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][23], 18902);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][23], 0.000000, 270.000000, 0.000000, 0.600000);
		model_its_acs[playerid][23] = 18902;

		td_acs_items[playerid][22] = CreatePlayerTextDraw(playerid, 570.000000, 170.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][22], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][22], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][22], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][22], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][22], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][22], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][22], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][22], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][22], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][22], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][22], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][22], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][22], 18903);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][22], 0.000000, 270.000000, 0.000000, 0.600000);
		model_its_acs[playerid][22] = 18903;

		td_acs_items[playerid][21] = CreatePlayerTextDraw(playerid, 600.000000, 170.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][21], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][21], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][21], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][21], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][21], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][21], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][21], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][21], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][21], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][21], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][21], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][21], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][21], 18904);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][21], 0.000000, 270.000000, 0.000000, 0.600000);
		model_its_acs[playerid][21] = 18904;

		td_acs_items[playerid][20] = CreatePlayerTextDraw(playerid, 420.000000, 200.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][20], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][20], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][20], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][20], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][20], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][20], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][20], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][20], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][20], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][20], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][20], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][20], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][20], 18905);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][20], 0.000000, 270.000000, 0.000000, 0.600000);
		model_its_acs[playerid][20] = 18905;

		td_acs_items[playerid][19] = CreatePlayerTextDraw(playerid, 450.000000, 200.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][19], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][19], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][19], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][19], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][19], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][19], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][19], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][19], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][19], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][19], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][19], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][19], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][19], 18906);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][19], 0.000000, 270.000000, 0.000000, 0.600000);
		model_its_acs[playerid][19] = 18906;

		td_acs_items[playerid][18] = CreatePlayerTextDraw(playerid, 480.000000, 200.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][18], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][18], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][18], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][18], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][18], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][18], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][18], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][18], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][18], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][18], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][18], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][18], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][18], 18907);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][18], 0.000000, 270.000000, 0.000000, 0.600000);
		model_its_acs[playerid][18] = 18907;

		td_acs_items[playerid][17] = CreatePlayerTextDraw(playerid, 510.000000, 200.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][17], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][17], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][17], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][17], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][17], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][17], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][17], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][17], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][17], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][17], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][17], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][17], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][17], 18908);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][17], 0.000000, 270.000000, 0.000000, 0.600000);
		model_its_acs[playerid][17] = 18908;

		td_acs_items[playerid][16] = CreatePlayerTextDraw(playerid, 540.000000, 200.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][16], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][16], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][16], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][16], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][16], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][16], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][16], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][16], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][16], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][16], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][16], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][16], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][16], 18909);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][16], 0.000000, 270.000000, 0.000000, 0.600000);
		model_its_acs[playerid][16] = 18909;

		td_acs_items[playerid][15] = CreatePlayerTextDraw(playerid, 570.000000, 200.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][15], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][15], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][15], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][15], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][15], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][15], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][15], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][15], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][15], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][15], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][15], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][15], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][15], 18910);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][15], 0.000000, 270.000000, 0.000000, 0.600000);
		model_its_acs[playerid][15] = 18910;

		td_acs_items[playerid][14] = CreatePlayerTextDraw(playerid, 600.000000, 200.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][14], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][14], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][14], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][14], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][14], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][14], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][14], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][14], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][14], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][14], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][14], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][14], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][14], 18926);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][14], 0.000000, 270.000000, 0.000000, 0.600000);
		model_its_acs[playerid][14] = 18926;

		td_acs_items[playerid][13] = CreatePlayerTextDraw(playerid, 420.000000, 230.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][13], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][13], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][13], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][13], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][13], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][13], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][13], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][13], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][13], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][13], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][13], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][13], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][13], 18927);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][13], 0.000000, 270.000000, 0.000000, 0.600000);
		model_its_acs[playerid][13] = 18927;

		td_acs_items[playerid][12] = CreatePlayerTextDraw(playerid, 450.000000, 230.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][12], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][12], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][12], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][12], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][12], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][12], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][12], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][12], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][12], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][12], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][12], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][12], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][12], 18928);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][12], 0.000000, 270.000000, 0.000000, 0.600000);
		model_its_acs[playerid][12] = 18928;

		td_acs_items[playerid][11] = CreatePlayerTextDraw(playerid, 480.000000, 230.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][11], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][11], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][11], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][11], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][11], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][11], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][11], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][11], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][11], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][11], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][11], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][11], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][11], 18929);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][11], 0.000000, 270.000000, 0.000000, 0.600000);
		model_its_acs[playerid][11] = 18929;

		td_acs_items[playerid][10] = CreatePlayerTextDraw(playerid, 510.000000, 230.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][10], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][10], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][10], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][10], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][10], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][10], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][10], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][10], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][10], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][10], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][10], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][10], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][10], 18930);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][10], 0.000000, 270.000000, 0.000000, 0.600000);
		model_its_acs[playerid][10] = 18930;

		td_acs_items[playerid][9] = CreatePlayerTextDraw(playerid, 540.000000, 230.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][9], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][9], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][9], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][9], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][9], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][9], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][9], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][9], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][9], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][9], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][9], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][9], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][9], 18931);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][9], 0.000000, 270.000000, 0.000000, 0.600000);
		model_its_acs[playerid][9] = 18931;

		td_acs_items[playerid][8] = CreatePlayerTextDraw(playerid, 570.000000, 230.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][8], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][8], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][8], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][8], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][8], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][8], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][8], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][8], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][8], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][8], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][8], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][8], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][8], 18932);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][8], 0.000000, 270.000000, 0.000000, 0.600000);
		model_its_acs[playerid][8] = 18932;

		td_acs_items[playerid][7] = CreatePlayerTextDraw(playerid, 600.000000, 230.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][7], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][7], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][7], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][7], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][7], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][7], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][7], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][7], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][7], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][7], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][7], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][7], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][7], 18933);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][7], 0.000000, 270.000000, 0.000000, 0.600000);
		model_its_acs[playerid][7] = 18933;

		td_acs_items[playerid][6] = CreatePlayerTextDraw(playerid, 420.000000, 260.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][6], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][6], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][6], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][6], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][6], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][6], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][6], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][6], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][6], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][6], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][6], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][6], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][6], 18935);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][6], 0.000000, 270.000000, 0.000000, 0.600000);
		model_its_acs[playerid][6] = 18935;

		td_acs_items[playerid][5] = CreatePlayerTextDraw(playerid, 450.000000, 260.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][5], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][5], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][5], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][5], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][5], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][5], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][5], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][5], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][5], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][5], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][5], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][5], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][5], 18941);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][5], 0.000000, 270.000000, 0.000000, 0.600000);
		model_its_acs[playerid][5] = 18941;

		td_acs_items[playerid][4] = CreatePlayerTextDraw(playerid, 480.000000, 260.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][4], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][4], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][4], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][4], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][4], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][4], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][4], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][4], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][4], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][4], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][4], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][4], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][4], 18921);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][4], 0.000000, 270.000000, 0.000000, 0.600000);
		model_its_acs[playerid][4] = 18921;

		td_acs_items[playerid][3] = CreatePlayerTextDraw(playerid, 510.000000, 260.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][3], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][3], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][3], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][3], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][3], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][3], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][3], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][3], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][3], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][3], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][3], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][3], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][3], 18922);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][3], 0.000000, 270.000000, 0.000000, 0.600000);
		model_its_acs[playerid][3] = 18922;

		td_acs_items[playerid][2] = CreatePlayerTextDraw(playerid, 540.000000, 260.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][2], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][2], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][2], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][2], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][2], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][2], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][2], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][2], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][2], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][2], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][2], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][2], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][2], 18923);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][2], 0.000000, 270.000000, 0.000000, 0.600000);
		model_its_acs[playerid][2] = 18923;

		td_acs_items[playerid][1] = CreatePlayerTextDraw(playerid, 570.000000, 260.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][1], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][1], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][1], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][1], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][1], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][1], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][1], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][1], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][1], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][1], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][1], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][1], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][1], 18924);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][1], 0.000000, 270.000000, 0.000000, 0.600000);
		model_its_acs[playerid][1] = 18924;

		td_acs_items[playerid][0] = CreatePlayerTextDraw(playerid, 600.000000, 260.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][0], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][0], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][0], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][0], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][0], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][0], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][0], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][0], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][0], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][0], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][0], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][0], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][0], 18925);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][0], 0.000000, 270.000000, 0.000000, 0.600000);
		model_its_acs[playerid][0] = 18925;

		for(new i = 0;i<35;i ++) PlayerTextDrawShow(playerid, td_acs_items[playerid][i]);
		for(new i = 18;i<21;i ++) TextDrawShowForPlayer(playerid, main_acs_TD[i]);
	}
	if(clickedid == main_acs_TD[14]) {
		if(type_its_acs[playerid] == 4) return 1;
		DeletePVar(playerid, "in_edit_acs");

		for(new i = 0;i<35;i ++) PlayerTextDrawDestroy(playerid, td_acs_items[playerid][i]);
		price_its_acs[playerid] = 1350;
		type_its_acs[playerid] = 4;

		td_acs_items[playerid][34] = CreatePlayerTextDraw(playerid, 420.000000, 140.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][34], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][34], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][34], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][34], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][34], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][34], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][34], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][34], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][34], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][34], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][34], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][34], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][34], 18911);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][34], 0.000000, 0.000000, 250.000000, 0.600000);
		model_its_acs[playerid][34] = 18911;

		td_acs_items[playerid][33] = CreatePlayerTextDraw(playerid, 450.000000, 140.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][33], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][33], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][33], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][33], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][33], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][33], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][33], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][33], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][33], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][33], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][33], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][33], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][33], 18912);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][33], 0.000000, 0.000000, 250.000000, 0.600000);
		model_its_acs[playerid][33] = 18912;

		td_acs_items[playerid][32] = CreatePlayerTextDraw(playerid, 480.000000, 140.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][32], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][32], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][32], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][32], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][32], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][32], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][32], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][32], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][32], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][32], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][32], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][32], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][32], 18913);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][32], 0.000000, 0.000000, 250.000000, 0.600000);
		model_its_acs[playerid][32] = 18913;

		td_acs_items[playerid][31] = CreatePlayerTextDraw(playerid, 510.000000, 140.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][31], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][31], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][31], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][31], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][31], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][31], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][31], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][31], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][31], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][31], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][31], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][31], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][31], 18914);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][31], 0.000000, 0.000000, 250.000000, 0.600000);
		model_its_acs[playerid][31] = 18914;

		td_acs_items[playerid][30] = CreatePlayerTextDraw(playerid, 540.000000, 140.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][30], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][30], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][30], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][30], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][30], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][30], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][30], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][30], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][30], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][30], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][30], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][30], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][30], 18915);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][30], 0.000000, 0.000000, 250.000000, 0.600000);
		model_its_acs[playerid][30] = 18915;

		td_acs_items[playerid][29] = CreatePlayerTextDraw(playerid, 570.000000, 140.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][29], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][29], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][29], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][29], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][29], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][29], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][29], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][29], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][29], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][29], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][29], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][29], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][29], 18916);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][29], 0.000000, 0.000000, 250.000000, 0.600000);
		model_its_acs[playerid][29] = 18916;

		td_acs_items[playerid][28] = CreatePlayerTextDraw(playerid, 600.000000, 140.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][28], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][28], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][28], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][28], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][28], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][28], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][28], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][28], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][28], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][28], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][28], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][28], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][28], 18917);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][28], 0.000000, 0.000000, 250.000000, 0.600000);
		model_its_acs[playerid][28] = 18917;

		td_acs_items[playerid][27] = CreatePlayerTextDraw(playerid, 420.000000, 170.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][27], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][27], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][27], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][27], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][27], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][27], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][27], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][27], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][27], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][27], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][27], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][27], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][27], 18918);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][27], 0.000000, 0.000000, 250.000000, 0.600000);
		model_its_acs[playerid][27] = 18918;

		td_acs_items[playerid][26] = CreatePlayerTextDraw(playerid, 450.000000, 170.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][26], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][26], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][26], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][26], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][26], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][26], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][26], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][26], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][26], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][26], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][26], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][26], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][26], 18919);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][26], 0.000000, 0.000000, 250.000000, 0.600000);
		model_its_acs[playerid][26] = 18919;

		td_acs_items[playerid][25] = CreatePlayerTextDraw(playerid, 480.000000, 170.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][25], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][25], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][25], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][25], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][25], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][25], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][25], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][25], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][25], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][25], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][25], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][25], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][25], 18920);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][25], 0.000000, 0.000000, 250.000000, 0.600000);
		model_its_acs[playerid][25] = 18920;

		td_acs_items[playerid][24] = CreatePlayerTextDraw(playerid, 510.000000, 170.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][24], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][24], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][24], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][24], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][24], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][24], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][24], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][24], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][24], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][24], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][24], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][24], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][24], 18974);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][24], 0.000000, 0.000000, 250.000000, 0.600000);
		model_its_acs[playerid][24] = 18974;

		td_acs_items[playerid][23] = CreatePlayerTextDraw(playerid, 540.000000, 170.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][23], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][23], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][23], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][23], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][23], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][23], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][23], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][23], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][23], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][23], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][23], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][23], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][23], 11704);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][23], 0.000000, 0.000000, 0.000000, 0.600000);
		model_its_acs[playerid][23] = 11704;

		td_acs_items[playerid][22] = CreatePlayerTextDraw(playerid, 570.000000, 170.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][22], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][22], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][22], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][22], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][22], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][22], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][22], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][22], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][22], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][22], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][22], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][22], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][22], 19557);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][22], 0.000000, 0.000000, 0.000000, 0.600000);
		model_its_acs[playerid][22] = 19557;

		td_acs_items[playerid][21] = CreatePlayerTextDraw(playerid, 600.000000, 170.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][21], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][21], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][21], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][21], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][21], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][21], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][21], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][21], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][21], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][21], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][21], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][21], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][21], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][21], 90.000000, 90.000000, 0.000000, 0.700000);
		model_its_acs[playerid][21] = 19472;

		td_acs_items[playerid][20] = CreatePlayerTextDraw(playerid, 420.000000, 200.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][20], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][20], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][20], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][20], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][20], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][20], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][20], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][20], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][20], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][20], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][20], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][20], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][20], 19330);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][20], 0.000000, 0.000000, 0.000000, 0.600000);
		model_its_acs[playerid][20] = 19330;

		td_acs_items[playerid][19] = CreatePlayerTextDraw(playerid, 450.000000, 200.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][19], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][19], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][19], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][19], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][19], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][19], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][19], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][19], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][19], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][19], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][19], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][19], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][19], 19331);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][19], 0.000000, 0.000000, 0.000000, 0.600000);
		model_its_acs[playerid][19] = 19331;

		td_acs_items[playerid][18] = CreatePlayerTextDraw(playerid, 480.000000, 200.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][18], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][18], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][18], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][18], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][18], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][18], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][18], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][18], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][18], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][18], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][18], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][18], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][18], 19036);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][18], 0.000000, 0.000000, 0.000000, 0.600000);
		model_its_acs[playerid][18] = 19036;

		td_acs_items[playerid][17] = CreatePlayerTextDraw(playerid, 510.000000, 200.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][17], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][17], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][17], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][17], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][17], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][17], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][17], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][17], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][17], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][17], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][17], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][17], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][17], 19037);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][17], 0.000000, 0.000000, 0.000000, 0.600000);
		model_its_acs[playerid][17] = 19037;

		td_acs_items[playerid][16] = CreatePlayerTextDraw(playerid, 540.000000, 200.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][16], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][16], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][16], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][16], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][16], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][16], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][16], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][16], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][16], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][16], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][16], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][16], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][16], 19038);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][16], 0.000000, 0.000000, 0.000000, 0.600000);
		model_its_acs[playerid][16] = 19038;

		td_acs_items[playerid][15] = CreatePlayerTextDraw(playerid, 570.000000, 200.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][15], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][15], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][15], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][15], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][15], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][15], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][15], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][15], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][15], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][15], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][15], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][15], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][15], 18645);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][15], 0.000000, 0.000000, 0.000000, 0.600000);
		model_its_acs[playerid][15] = 18645;

		td_acs_items[playerid][14] = CreatePlayerTextDraw(playerid, 600.000000, 200.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][14], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][14], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][14], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][14], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][14], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][14], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][14], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][14], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][14], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][14], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][14], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][14], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][14], 18977);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][14], 0.000000, 0.000000, 0.000000, 0.600000);
		model_its_acs[playerid][14] = 18977;

		td_acs_items[playerid][13] = CreatePlayerTextDraw(playerid, 420.000000, 230.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][13], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][13], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][13], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][13], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][13], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][13], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][13], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][13], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][13], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][13], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][13], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][13], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][13], 18978);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][13], 0.000000, 0.000000, 0.000000, 0.600000);
		model_its_acs[playerid][13] = 18978;

		td_acs_items[playerid][12] = CreatePlayerTextDraw(playerid, 450.000000, 230.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][12], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][12], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][12], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][12], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][12], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][12], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][12], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][12], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][12], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][12], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][12], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][12], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][12], 18979);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][12], 0.000000, 0.000000, 0.000000, 0.600000);
		model_its_acs[playerid][12] = 18979;

		td_acs_items[playerid][11] = CreatePlayerTextDraw(playerid, 480.000000, 230.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][11], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][11], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][11], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][11], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][11], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][11], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][11], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][11], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][11], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][11], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][11], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][11], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][11], 19094);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][11], 0.000000, 0.000000, 0.000000, 0.600000);
		model_its_acs[playerid][11] = 19094;

		td_acs_items[playerid][10] = CreatePlayerTextDraw(playerid, 510.000000, 230.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][10], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][10], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][10], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][10], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][10], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][10], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][10], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][10], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][10], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][10], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][10], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][10], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][10], 19469);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][10], 0.000000, 0.000000, 0.000000, 0.600000);
		model_its_acs[playerid][10] = 19469;

		td_acs_items[playerid][9] = CreatePlayerTextDraw(playerid, 540.000000, 230.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][9], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][9], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][9], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][9], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][9], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][9], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][9], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][9], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][9], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][9], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][9], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][9], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][9], 19163);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][9], 0.000000, 0.000000, 0.000000, 0.600000);
		model_its_acs[playerid][9] = 19163;

		td_acs_items[playerid][8] = CreatePlayerTextDraw(playerid, 570.000000, 230.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][8], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][8], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][8], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][8], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][8], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][8], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][8], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][8], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][8], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][8], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][8], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][8], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][8], 18963);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][8], 0.000000, 0.000000, 0.000000, 0.600000);
		model_its_acs[playerid][8] = 18963;

		td_acs_items[playerid][7] = CreatePlayerTextDraw(playerid, 600.000000, 230.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][7], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][7], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][7], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][7], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][7], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][7], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][7], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][7], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][7], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][7], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][7], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][7], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][7], 19141);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][7], 0.000000, 0.000000, 0.000000, 0.600000);
		model_its_acs[playerid][7] = 19141;

		td_acs_items[playerid][6] = CreatePlayerTextDraw(playerid, 420.000000, 260.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][6], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][6], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][6], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][6], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][6], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][6], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][6], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][6], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][6], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][6], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][6], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][6], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][6], 19115);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][6], 0.000000, 0.000000, 0.000000, 0.600000);
		model_its_acs[playerid][6] = 19115;

		td_acs_items[playerid][5] = CreatePlayerTextDraw(playerid, 450.000000, 260.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][5], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][5], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][5], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][5], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][5], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][5], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][5], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][5], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][5], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][5], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][5], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][5], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][5], 19116);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][5], 0.000000, 0.000000, 0.000000, 0.600000);
		model_its_acs[playerid][5] = 19116;

		td_acs_items[playerid][4] = CreatePlayerTextDraw(playerid, 480.000000, 260.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][4], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][4], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][4], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][4], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][4], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][4], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][4], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][4], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][4], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][4], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][4], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][4], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][4], 19117);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][4], 0.000000, 0.000000, 0.000000, 0.600000);
		model_its_acs[playerid][4] = 19117;

		td_acs_items[playerid][3] = CreatePlayerTextDraw(playerid, 510.000000, 260.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][3], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][3], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][3], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][3], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][3], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][3], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][3], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][3], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][3], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][3], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][3], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][3], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][3], 19118);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][3], 0.000000, 0.000000, 0.000000, 0.600000);
		model_its_acs[playerid][3] = 19118;

		td_acs_items[playerid][2] = CreatePlayerTextDraw(playerid, 540.000000, 260.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][2], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][2], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][2], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][2], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][2], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][2], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][2], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][2], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][2], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][2], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][2], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][2], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][2], 19119);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][2], 0.000000, 0.000000, 0.000000, 0.600000);
		model_its_acs[playerid][2] = 19119;

		td_acs_items[playerid][1] = CreatePlayerTextDraw(playerid, 570.000000, 260.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][1], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][1], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][1], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][1], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][1], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][1], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][1], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][1], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][1], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][1], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][1], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][1], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][1], 19120);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][1], 0.000000, 0.000000, 0.000000, 0.600000);
		model_its_acs[playerid][1] = 19120;

		td_acs_items[playerid][0] = CreatePlayerTextDraw(playerid, 600.000000, 260.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][0], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][0], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][0], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][0], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][0], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][0], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][0], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][0], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][0], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][0], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][0], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][0], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][0], 19101);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][0], 0.000000, 0.000000, 0.000000, 0.600000);
		model_its_acs[playerid][0] = 19101;
			
		for(new i = 0;i<35;i ++) PlayerTextDrawShow(playerid, td_acs_items[playerid][i]);
		for(new i = 18;i<21;i ++) TextDrawShowForPlayer(playerid, main_acs_TD[i]);
	}
	if(clickedid == main_acs_TD[13]) {
		if(type_its_acs[playerid] == 5) return 1;
		DeletePVar(playerid, "in_edit_acs");

		for(new i = 0;i<35;i ++) PlayerTextDrawDestroy(playerid, td_acs_items[playerid][i]);
		price_its_acs[playerid] = 2600;
		type_its_acs[playerid] = 5;

		td_acs_items[playerid][34] = CreatePlayerTextDraw(playerid, 420.000000, 140.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][34], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][34], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][34], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][34], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][34], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][34], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][34], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][34], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][34], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][34], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][34], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][34], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][34], 19138);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][34], 110.000000, 0.000000, 90.000000, 0.700000);
		model_its_acs[playerid][34] = 19350;

		td_acs_items[playerid][33] = CreatePlayerTextDraw(playerid, 450.000000, 140.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][33], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][33], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][33], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][33], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][33], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][33], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][33], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][33], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][33], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][33], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][33], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][33], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][33], 19138);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][33], 110.000000, 0.000000, 90.000000, 0.900000);
		model_its_acs[playerid][33] = 19351;

		td_acs_items[playerid][32] = CreatePlayerTextDraw(playerid, 480.000000, 140.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][32], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][32], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][32], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][32], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][32], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][32], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][32], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][32], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][32], 0x00000000);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][32], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][32], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][32], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][32], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][32], 0.000000, 0.000000, 0.000000, 0.010000);

		for(new i = 0; i <33;i++) model_its_acs[playerid][i] = 19472;

		td_acs_items[playerid][31] = CreatePlayerTextDraw(playerid, 510.000000, 140.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][31], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][31], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][31], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][31], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][31], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][31], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][31], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][31], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][31], 0x00000000);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][31], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][31], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][31], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][31], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][31], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][30] = CreatePlayerTextDraw(playerid, 540.000000, 140.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][30], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][30], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][30], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][30], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][30], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][30], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][30], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][30], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][30], 0x00000000);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][30], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][30], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][30], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][30], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][30], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][29] = CreatePlayerTextDraw(playerid, 570.000000, 140.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][29], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][29], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][29], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][29], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][29], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][29], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][29], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][29], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][29], 0x00000000);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][29], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][29], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][29], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][29], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][29], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][28] = CreatePlayerTextDraw(playerid, 600.000000, 140.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][28], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][28], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][28], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][28], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][28], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][28], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][28], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][28], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][28], 0x00000000);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][28], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][28], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][28], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][28], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][28], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][27] = CreatePlayerTextDraw(playerid, 420.000000, 170.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][27], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][27], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][27], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][27], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][27], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][27], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][27], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][27], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][27], 0xFFFFFFFF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][27], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][27], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][27], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][27], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][27], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][26] = CreatePlayerTextDraw(playerid, 450.000000, 170.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][26], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][26], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][26], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][26], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][26], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][26], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][26], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][26], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][26], 0xFFE6CCFF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][26], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][26], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][26], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][26], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][26], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][25] = CreatePlayerTextDraw(playerid, 480.000000, 170.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][25], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][25], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][25], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][25], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][25], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][25], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][25], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][25], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][25], 0xECC6C6FF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][25], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][25], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][25], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][25], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][25], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][24] = CreatePlayerTextDraw(playerid, 510.000000, 170.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][24], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][24], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][24], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][24], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][24], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][24], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][24], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][24], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][24], 0xFFC2B3FF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][24], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][24], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][24], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][24], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][24], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][23] = CreatePlayerTextDraw(playerid, 540.000000, 170.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][23], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][23], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][23], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][23], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][23], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][23], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][23], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][23], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][23], 0xB3B3FFFF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][23], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][23], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][23], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][23], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][23], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][22] = CreatePlayerTextDraw(playerid, 570.000000, 170.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][22], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][22], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][22], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][22], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][22], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][22], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][22], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][22], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][22], 0xC6ECC6FF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][22], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][22], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][22], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][22], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][22], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][21] = CreatePlayerTextDraw(playerid, 600.000000, 170.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][21], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][21], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][21], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][21], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][21], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][21], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][21], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][21], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][21], 0xD9B3FFFF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][21], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][21], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][21], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][21], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][21], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][20] = CreatePlayerTextDraw(playerid, 420.000000, 200.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][20], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][20], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][20], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][20], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][20], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][20], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][20], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][20], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][20], 0xB3B3B3FF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][20], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][20], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][20], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][20], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][20], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][19] = CreatePlayerTextDraw(playerid, 450.000000, 200.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][19], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][19], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][19], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][19], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][19], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][19], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][19], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][19], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][19], 0xFFA94DFF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][19], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][19], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][19], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][19], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][19], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][18] = CreatePlayerTextDraw(playerid, 480.000000, 200.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][18], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][18], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][18], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][18], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][18], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][18], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][18], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][18], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][18], 0xCC6666FF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][18], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][18], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][18], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][18], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][18], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][17] = CreatePlayerTextDraw(playerid, 510.000000, 200.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][17], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][17], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][17], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][17], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][17], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][17], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][17], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][17], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][17], 0xFF704DFF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][17], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][17], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][17], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][17], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][17], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][16] = CreatePlayerTextDraw(playerid, 540.000000, 200.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][16], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][16], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][16], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][16], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][16], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][16], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][16], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][16], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][16], 0x3333FFFF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][16], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][16], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][16], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][16], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][16], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][15] = CreatePlayerTextDraw(playerid, 570.000000, 200.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][15], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][15], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][15], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][15], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][15], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][15], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][15], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][15], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][15], 0x66CC66FF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][15], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][15], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][15], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][15], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][15], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][14] = CreatePlayerTextDraw(playerid, 600.000000, 200.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][14], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][14], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][14], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][14], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][14], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][14], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][14], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][14], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][14], 0xA64DFFFF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][14], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][14], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][14], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][14], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][14], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][13] = CreatePlayerTextDraw(playerid, 420.000000, 230.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][13], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][13], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][13], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][13], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][13], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][13], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][13], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][13], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][13], 0x595959FF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][13], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][13], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][13], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][13], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][13], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][12] = CreatePlayerTextDraw(playerid, 450.000000, 230.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][12], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][12], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][12], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][12], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][12], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][12], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][12], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][12], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][12], 0xCC6900FF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][12], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][12], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][12], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][12], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][12], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][11] = CreatePlayerTextDraw(playerid, 480.000000, 230.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][11], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][11], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][11], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][11], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][11], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][11], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][11], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][11], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][11], 0x993333FF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][11], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][11], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][11], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][11], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][11], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][10] = CreatePlayerTextDraw(playerid, 510.000000, 230.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][10], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][10], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][10], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][10], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][10], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][10], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][10], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][10], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][10], 0xE62E00FF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][10], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][10], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][10], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][10], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][10], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][9] = CreatePlayerTextDraw(playerid, 540.000000, 230.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][9], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][9], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][9], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][9], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][9], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][9], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][9], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][9], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][9], 0x0000B3FF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][9], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][9], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][9], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][9], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][9], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][8] = CreatePlayerTextDraw(playerid, 570.000000, 230.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][8], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][8], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][8], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][8], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][8], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][8], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][8], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][8], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][8], 0x2D862DFF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][8], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][8], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][8], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][8], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][8], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][7] = CreatePlayerTextDraw(playerid, 600.000000, 230.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][7], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][7], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][7], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][7], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][7], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][7], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][7], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][7], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][7], 0x6600CCFF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][7], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][7], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][7], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][7], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][7], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][6] = CreatePlayerTextDraw(playerid, 420.000000, 260.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][6], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][6], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][6], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][6], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][6], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][6], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][6], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][6], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][6], 0x0D0D0DFF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][6], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][6], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][6], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][6], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][6], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][5] = CreatePlayerTextDraw(playerid, 450.000000, 260.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][5], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][5], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][5], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][5], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][5], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][5], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][5], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][5], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][5], 0x663500FF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][5], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][5], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][5], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][5], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][5], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][4] = CreatePlayerTextDraw(playerid, 480.000000, 260.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][4], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][4], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][4], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][4], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][4], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][4], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][4], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][4], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][4], 0x602020FF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][4], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][4], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][4], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][4], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][4], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][3] = CreatePlayerTextDraw(playerid, 510.000000, 260.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][3], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][3], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][3], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][3], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][3], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][3], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][3], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][3], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][3], 0x991F00FF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][3], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][3], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][3], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][3], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][3], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][2] = CreatePlayerTextDraw(playerid, 540.000000, 260.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][2], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][2], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][2], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][2], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][2], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][2], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][2], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][2], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][2], 0x00004DFF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][2], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][2], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][2], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][2], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][2], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][1] = CreatePlayerTextDraw(playerid, 570.000000, 260.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][1], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][1], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][1], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][1], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][1], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][1], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][1], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][1], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][1], 0x133913FF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][1], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][1], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][1], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][1], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][1], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][0] = CreatePlayerTextDraw(playerid, 600.000000, 260.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][0], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][0], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][0], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][0], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][0], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][0], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][0], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][0], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][0], 0x330066FF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][0], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][0], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][0], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][0], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][0], 0.000000, 0.000000, 0.000000, 0.010000);
			
		for(new i = 0;i<35;i ++) PlayerTextDrawShow(playerid, td_acs_items[playerid][i]);
		for(new i = 18;i<21;i ++) TextDrawShowForPlayer(playerid, main_acs_TD[i]);
	}
	if(clickedid == main_acs_TD[12]) {
		if(type_its_acs[playerid] == 6) return 1;
		DeletePVar(playerid, "in_edit_acs");

		for(new i = 0;i<35;i ++) PlayerTextDrawDestroy(playerid, td_acs_items[playerid][i]);
		price_its_acs[playerid] = 3800;
		type_its_acs[playerid] = 6;

		td_acs_items[playerid][34] = CreatePlayerTextDraw(playerid, 420.000000, 140.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][34], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][34], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][34], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][34], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][34], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][34], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][34], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][34], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][34], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][34], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][34], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][34], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][34], 19516);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][34], 0.000000, -90.000000, 0.000000, 0.600000);
		model_its_acs[playerid][34] = 19516;

		td_acs_items[playerid][33] = CreatePlayerTextDraw(playerid, 450.000000, 140.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][33], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][33], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][33], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][33], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][33], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][33], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][33], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][33], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][33], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][33], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][33], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][33], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][33], 19517);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][33], 0.000000, -90.000000, 0.000000, 0.600000);
		model_its_acs[playerid][33] = 19517;

		td_acs_items[playerid][32] = CreatePlayerTextDraw(playerid, 480.000000, 140.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][32], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][32], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][32], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][32], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][32], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][32], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][32], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][32], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][32], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][32], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][32], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][32], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][32], 19518);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][32], 0.000000, -90.000000, 0.000000, 0.600000);
		model_its_acs[playerid][32] = 19518;

		td_acs_items[playerid][31] = CreatePlayerTextDraw(playerid, 510.000000, 140.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][31], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][31], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][31], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][31], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][31], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][31], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][31], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][31], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][31], 0x00000044);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][31], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][31], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][31], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][31], 19519);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][31], 0.000000, -90.000000, 0.000000, 0.600000);
		model_its_acs[playerid][31] = 19519;

		td_acs_items[playerid][30] = CreatePlayerTextDraw(playerid, 540.000000, 140.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][30], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][30], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][30], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][30], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][30], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][30], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][30], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][30], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][30], 0x00000000);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][30], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][30], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][30], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][30], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][30], 0.000000, 0.000000, 0.000000, 0.010000);

		for(new i = 0; i <31;i++) model_its_acs[playerid][i] = 19472;

		td_acs_items[playerid][29] = CreatePlayerTextDraw(playerid, 570.000000, 140.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][29], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][29], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][29], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][29], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][29], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][29], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][29], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][29], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][29], 0x00000000);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][29], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][29], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][29], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][29], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][29], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][28] = CreatePlayerTextDraw(playerid, 600.000000, 140.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][28], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][28], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][28], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][28], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][28], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][28], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][28], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][28], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][28], 0x00000000);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][28], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][28], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][28], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][28], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][28], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][27] = CreatePlayerTextDraw(playerid, 420.000000, 170.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][27], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][27], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][27], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][27], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][27], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][27], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][27], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][27], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][27], 0xFFFFFFFF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][27], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][27], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][27], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][27], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][27], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][26] = CreatePlayerTextDraw(playerid, 450.000000, 170.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][26], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][26], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][26], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][26], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][26], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][26], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][26], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][26], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][26], 0xFFE6CCFF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][26], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][26], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][26], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][26], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][26], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][25] = CreatePlayerTextDraw(playerid, 480.000000, 170.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][25], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][25], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][25], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][25], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][25], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][25], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][25], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][25], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][25], 0xECC6C6FF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][25], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][25], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][25], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][25], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][25], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][24] = CreatePlayerTextDraw(playerid, 510.000000, 170.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][24], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][24], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][24], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][24], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][24], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][24], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][24], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][24], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][24], 0xFFC2B3FF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][24], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][24], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][24], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][24], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][24], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][23] = CreatePlayerTextDraw(playerid, 540.000000, 170.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][23], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][23], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][23], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][23], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][23], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][23], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][23], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][23], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][23], 0xB3B3FFFF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][23], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][23], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][23], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][23], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][23], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][22] = CreatePlayerTextDraw(playerid, 570.000000, 170.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][22], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][22], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][22], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][22], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][22], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][22], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][22], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][22], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][22], 0xC6ECC6FF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][22], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][22], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][22], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][22], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][22], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][21] = CreatePlayerTextDraw(playerid, 600.000000, 170.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][21], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][21], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][21], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][21], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][21], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][21], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][21], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][21], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][21], 0xD9B3FFFF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][21], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][21], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][21], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][21], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][21], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][20] = CreatePlayerTextDraw(playerid, 420.000000, 200.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][20], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][20], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][20], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][20], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][20], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][20], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][20], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][20], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][20], 0xB3B3B3FF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][20], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][20], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][20], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][20], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][20], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][19] = CreatePlayerTextDraw(playerid, 450.000000, 200.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][19], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][19], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][19], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][19], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][19], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][19], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][19], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][19], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][19], 0xFFA94DFF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][19], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][19], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][19], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][19], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][19], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][18] = CreatePlayerTextDraw(playerid, 480.000000, 200.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][18], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][18], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][18], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][18], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][18], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][18], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][18], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][18], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][18], 0xCC6666FF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][18], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][18], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][18], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][18], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][18], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][17] = CreatePlayerTextDraw(playerid, 510.000000, 200.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][17], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][17], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][17], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][17], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][17], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][17], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][17], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][17], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][17], 0xFF704DFF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][17], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][17], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][17], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][17], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][17], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][16] = CreatePlayerTextDraw(playerid, 540.000000, 200.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][16], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][16], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][16], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][16], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][16], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][16], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][16], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][16], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][16], 0x3333FFFF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][16], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][16], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][16], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][16], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][16], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][15] = CreatePlayerTextDraw(playerid, 570.000000, 200.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][15], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][15], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][15], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][15], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][15], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][15], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][15], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][15], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][15], 0x66CC66FF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][15], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][15], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][15], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][15], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][15], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][14] = CreatePlayerTextDraw(playerid, 600.000000, 200.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][14], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][14], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][14], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][14], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][14], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][14], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][14], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][14], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][14], 0xA64DFFFF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][14], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][14], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][14], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][14], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][14], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][13] = CreatePlayerTextDraw(playerid, 420.000000, 230.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][13], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][13], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][13], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][13], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][13], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][13], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][13], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][13], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][13], 0x595959FF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][13], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][13], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][13], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][13], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][13], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][12] = CreatePlayerTextDraw(playerid, 450.000000, 230.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][12], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][12], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][12], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][12], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][12], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][12], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][12], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][12], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][12], 0xCC6900FF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][12], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][12], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][12], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][12], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][12], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][11] = CreatePlayerTextDraw(playerid, 480.000000, 230.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][11], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][11], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][11], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][11], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][11], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][11], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][11], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][11], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][11], 0x993333FF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][11], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][11], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][11], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][11], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][11], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][10] = CreatePlayerTextDraw(playerid, 510.000000, 230.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][10], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][10], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][10], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][10], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][10], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][10], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][10], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][10], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][10], 0xE62E00FF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][10], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][10], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][10], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][10], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][10], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][9] = CreatePlayerTextDraw(playerid, 540.000000, 230.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][9], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][9], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][9], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][9], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][9], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][9], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][9], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][9], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][9], 0x0000B3FF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][9], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][9], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][9], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][9], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][9], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][8] = CreatePlayerTextDraw(playerid, 570.000000, 230.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][8], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][8], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][8], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][8], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][8], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][8], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][8], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][8], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][8], 0x2D862DFF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][8], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][8], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][8], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][8], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][8], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][7] = CreatePlayerTextDraw(playerid, 600.000000, 230.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][7], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][7], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][7], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][7], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][7], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][7], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][7], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][7], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][7], 0x6600CCFF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][7], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][7], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][7], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][7], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][7], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][6] = CreatePlayerTextDraw(playerid, 420.000000, 260.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][6], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][6], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][6], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][6], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][6], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][6], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][6], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][6], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][6], 0x0D0D0DFF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][6], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][6], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][6], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][6], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][6], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][5] = CreatePlayerTextDraw(playerid, 450.000000, 260.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][5], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][5], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][5], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][5], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][5], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][5], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][5], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][5], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][5], 0x663500FF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][5], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][5], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][5], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][5], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][5], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][4] = CreatePlayerTextDraw(playerid, 480.000000, 260.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][4], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][4], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][4], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][4], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][4], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][4], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][4], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][4], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][4], 0x602020FF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][4], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][4], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][4], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][4], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][4], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][3] = CreatePlayerTextDraw(playerid, 510.000000, 260.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][3], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][3], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][3], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][3], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][3], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][3], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][3], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][3], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][3], 0x991F00FF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][3], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][3], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][3], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][3], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][3], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][2] = CreatePlayerTextDraw(playerid, 540.000000, 260.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][2], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][2], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][2], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][2], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][2], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][2], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][2], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][2], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][2], 0x00004DFF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][2], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][2], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][2], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][2], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][2], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][1] = CreatePlayerTextDraw(playerid, 570.000000, 260.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][1], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][1], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][1], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][1], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][1], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][1], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][1], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][1], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][1], 0x133913FF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][1], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][1], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][1], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][1], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][1], 0.000000, 0.000000, 0.000000, 0.010000);

		td_acs_items[playerid][0] = CreatePlayerTextDraw(playerid, 600.000000, 260.000000, "-");
		PlayerTextDrawLetterSize(playerid, td_acs_items[playerid][0], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, td_acs_items[playerid][0], 30.000000, 30.000000);
		PlayerTextDrawAlignment(playerid, td_acs_items[playerid][0], 0);
		PlayerTextDrawColor(playerid, td_acs_items[playerid][0], 0xE1E1E1FF);
		PlayerTextDrawUseBox(playerid, td_acs_items[playerid][0], 0);
		PlayerTextDrawBoxColor(playerid, td_acs_items[playerid][0], 0x80808080);
		PlayerTextDrawSetShadow(playerid, td_acs_items[playerid][0], 2);
		PlayerTextDrawSetOutline(playerid, td_acs_items[playerid][0], 0);
		PlayerTextDrawBackgroundColor(playerid, td_acs_items[playerid][0], 0x330066FF);
		PlayerTextDrawFont(playerid, td_acs_items[playerid][0], 5);
		PlayerTextDrawSetProportional(playerid, td_acs_items[playerid][0], 1);
		PlayerTextDrawSetSelectable(playerid, td_acs_items[playerid][0], 1);
		PlayerTextDrawSetPreviewModel(playerid, td_acs_items[playerid][0], 19472);
		PlayerTextDrawSetPreviewRot(playerid, td_acs_items[playerid][0], 0.000000, 0.000000, 0.000000, 0.010000);

		for(new i = 0;i<35;i ++) PlayerTextDrawShow(playerid, td_acs_items[playerid][i]);
		for(new i = 18;i<21;i ++) TextDrawShowForPlayer(playerid, main_acs_TD[i]);
	}
	if((clickedid == Text:INVALID_TEXT_DRAW && GetPVarInt(playerid, "selecting_acs")) || 
		clickedid == main_acs_TD[18]) {
		for(new i = 0; i < 21; i ++) TextDrawHideForPlayer(playerid, main_acs_TD[i]);
		for(new i = 0;i<35;i ++) PlayerTextDrawDestroy(playerid, td_acs_items[playerid][i]);
		DeletePVar(playerid, "selecting_acs");
		SetPlayerVirtualWorld(playerid, GetPVarInt(playerid, "acs_vw"));
		DeletePVar(playerid, "acs_vw");
		CancelSelectTextDraw(playerid);
		SetPlayerPos(playerid, 419.2940,-79.0359,1001.8047);
		SetPlayerFacingAngle(playerid,90);
		SetCameraBehindPlayer(playerid);
		TogglePlayerControllable(playerid, 1);
		type_its_acs[playerid] = 0;
		for(new vindex = 0; vindex < MAX_PLAYER_ATTACHED_OBJECTS; vindex ++) {
			if(IsPlayerAttachedObjectSlotUsed(playerid, vindex)) RemovePlayerAttachedObject(playerid, vindex);
			if(!PLAYER_AO[playerid][vindex][g_modelid]) continue;
			SetPlayerAttachedObject(playerid,vindex,PLAYER_AO[playerid][vindex][g_modelid],PLAYER_AO[playerid][vindex][g_boneid],
				PLAYER_AO[playerid][vindex][g_fOffsetX],PLAYER_AO[playerid][vindex][g_fOffsetY],PLAYER_AO[playerid][vindex][g_fOffsetZ],
				PLAYER_AO[playerid][vindex][g_fRotX],PLAYER_AO[playerid][vindex][g_fRotY],PLAYER_AO[playerid][vindex][g_fRotZ],
				PLAYER_AO[playerid][vindex][g_fScaleX],PLAYER_AO[playerid][vindex][g_fScaleY],PLAYER_AO[playerid][vindex][g_fScaleZ],
				PLAYER_AO[playerid][vindex][g_COLOR1],PLAYER_AO[playerid][vindex][g_COLOR2]);
		}
	}
	if(clickedid == Text: INVALID_TEXT_DRAW && GetPVarInt(playerid, "in_colored_menu")) {
		for(new i = 0; i < 7; i ++) TextDrawHideForPlayer(playerid, color_guns_td[i]);
		DeletePVar(playerid, "in_colored_menu");
		CancelSelectTextDraw(playerid);
	}
	if(clickedid == color_guns_td[2]) { // √¶√•√´√≤√ª√©
		switch(GetPlayerWeapon(playerid)) {
			case 24: {
				color_gun_deagle[playerid] = 0;
				UpdatePlayerData(playerid, "color_gun_deagle", 0);
			}
			case 25: {
				color_gun_shotgun[playerid] = 0;
				UpdatePlayerData(playerid, "color_gun_shotgun", 0);
			}
			case 30: {
				color_gun_ak47[playerid] = 0;
				UpdatePlayerData(playerid, "color_gun_ak47", 0);
			}
			case 31: {
				color_gun_m4[playerid] = 0;
				UpdatePlayerData(playerid, "color_gun_m4", 0);
			}
		}
		SCM(playerid, COLOR_MAIN, "√é√∞√≥√¶√®√• √≥√±√Ø√•√∏√≠√Æ √Ø√•√∞√•√™√∞√†√∏√•√≠√Æ");
		color_current_weapon[playerid] = 0;

		for(new i = 0; i < 7; i ++) TextDrawHideForPlayer(playerid, color_guns_td[i]);
		DeletePVar(playerid, "in_colored_menu");
		CancelSelectTextDraw(playerid);
	}
	if(clickedid == color_guns_td[3]) { // √™√∞√†√±√≠√ª√©
		switch(GetPlayerWeapon(playerid)) {
			case 24: {
				color_gun_deagle[playerid] = 1;
				UpdatePlayerData(playerid, "color_gun_deagle", 1);
			}
			case 25: {
				color_gun_shotgun[playerid] = 1;
				UpdatePlayerData(playerid, "color_gun_shotgun", 1);
			}
			case 30: {
				color_gun_ak47[playerid] = 1;
				UpdatePlayerData(playerid, "color_gun_ak47", 1);
			}
			case 31: {
				color_gun_m4[playerid] = 1;
				UpdatePlayerData(playerid, "color_gun_m4", 1);
			}
		}
		SCM(playerid, COLOR_MAIN, "√é√∞√≥√¶√®√• √≥√±√Ø√•√∏√≠√Æ √Ø√•√∞√•√™√∞√†√∏√•√≠√Æ");
		color_current_weapon[playerid] = 0;

		for(new i = 0; i < 7; i ++) TextDrawHideForPlayer(playerid, color_guns_td[i]);
		DeletePVar(playerid, "in_colored_menu");
		CancelSelectTextDraw(playerid);
	}
	if(clickedid == color_guns_td[4]) { // √±√®√≠√®√©
		switch(GetPlayerWeapon(playerid)) {
			case 24: {
				color_gun_deagle[playerid] = 2;
				UpdatePlayerData(playerid, "color_gun_deagle", 2);
			}
			case 25: {
				color_gun_shotgun[playerid] = 2;
				UpdatePlayerData(playerid, "color_gun_shotgun", 2);
			}
			case 30: {
				color_gun_ak47[playerid] = 2;
				UpdatePlayerData(playerid, "color_gun_ak47", 2);
			}
			case 31: {
				color_gun_m4[playerid] = 2;
				UpdatePlayerData(playerid, "color_gun_m4", 2);
			}
		}
		SCM(playerid, COLOR_MAIN, "√é√∞√≥√¶√®√• √≥√±√Ø√•√∏√≠√Æ √Ø√•√∞√•√™√∞√†√∏√•√≠√Æ");
		color_current_weapon[playerid] = 0;

		for(new i = 0; i < 7; i ++) TextDrawHideForPlayer(playerid, color_guns_td[i]);
		DeletePVar(playerid, "in_colored_menu");
		CancelSelectTextDraw(playerid);
	}
	if(clickedid == color_guns_td[5]) { // √ß√•√´√•√≠√ª√©
		switch(GetPlayerWeapon(playerid)) {
			case 24: {
				color_gun_deagle[playerid] = 3;
				UpdatePlayerData(playerid, "color_gun_deagle", 3);
			}
			case 25: {
				color_gun_shotgun[playerid] = 3;
				UpdatePlayerData(playerid, "color_gun_shotgun", 3);
			}
			case 30: {
				color_gun_ak47[playerid] = 3;
				UpdatePlayerData(playerid, "color_gun_ak47", 3);
			}
			case 31: {
				color_gun_m4[playerid] = 3;
				UpdatePlayerData(playerid, "color_gun_m4", 3);
			}
		}
		SCM(playerid, COLOR_MAIN, "√é√∞√≥√¶√®√• √≥√±√Ø√•√∏√≠√Æ √Ø√•√∞√•√™√∞√†√∏√•√≠√Æ");
		color_current_weapon[playerid] = 0;

		for(new i = 0; i < 7; i ++) TextDrawHideForPlayer(playerid, color_guns_td[i]);
		DeletePVar(playerid, "in_colored_menu");
		CancelSelectTextDraw(playerid);
	}
	if(clickedid == color_guns_td[6]) { // √¥√®√Æ√´√•√≤√Æ√¢√ª√©
		switch(GetPlayerWeapon(playerid)) {
			case 24: {
				color_gun_deagle[playerid] = 4;
				UpdatePlayerData(playerid, "color_gun_deagle", 4);
			}
			case 25: {
				color_gun_shotgun[playerid] = 4;
				UpdatePlayerData(playerid, "color_gun_shotgun", 4);
			}
			case 30: {
				color_gun_ak47[playerid] = 4;
				UpdatePlayerData(playerid, "color_gun_ak47", 4);
			}
			case 31: {
				color_gun_m4[playerid] = 4;
				UpdatePlayerData(playerid, "color_gun_m4", 4);
			}
		}
		SCM(playerid, COLOR_MAIN, "√é√∞√≥√¶√®√• √≥√±√Ø√•√∏√≠√Æ √Ø√•√∞√•√™√∞√†√∏√•√≠√Æ");
		color_current_weapon[playerid] = 0;

		for(new i = 0; i < 7; i ++) TextDrawHideForPlayer(playerid, color_guns_td[i]);
		DeletePVar(playerid, "in_colored_menu");
		CancelSelectTextDraw(playerid);
	}
	if(clickedid == tune_td[53]) {
		new veh_id = GetPlayerVehicleID(playerid), num_car;
		if(house_carid[playerid][0] && veh_id == house_carid[playerid][0]) num_car = 0;
		if(house_carid[playerid][1] && veh_id == house_carid[playerid][1]) num_car = 1;
		if(house_carid[playerid][2] && veh_id == house_carid[playerid][2]) num_car = 2;
		in_menutune[playerid] = false;
		TogglePlayerControllable(playerid, 1);
		CancelSelectTextDraw(playerid);
		SetCameraBehindPlayer(playerid);
		for(new i = 0; i < 55; i ++) TextDrawHideForPlayer(playerid, tune_td[i]);
		if(TUNE_wheel_component[playerid] != 0) 
			RemoveVehicleComponent(veh_id, TUNE_wheel_component[playerid]);
		if(TUNE_hydraulics[playerid]) 
			RemoveVehicleComponent(veh_id, 1087);
		if(TUNE_stereo[playerid]) 
			RemoveVehicleComponent(veh_id, veh_id);
		if(TUNE_paintjob[playerid] != -1) 
			ChangeVehiclePaintjob(veh_id, 3);
		if(TUNE_neon_component[playerid] != -1) 
			RemoveNeonFromVehicle(veh_id);
		if(TUNE_carcolor_1[playerid] != -1 || TUNE_carcolor_2[playerid] != -1) 
			ChangeVehicleColor(veh_id, pData[playerid][t_color_1][num_car], pData[playerid][t_color_2][num_car]);
		if(pData[playerid][t_wheel][num_car] != 0) 
			AddVehicleComponent(veh_id, pData[playerid][t_wheel][num_car]);
		if(pData[playerid][t_neon_num][num_car] != -1) {
			switch(pData[playerid][t_neon_num][num_car]) {
				case 1: AddNeonToVehicle(veh_id, NEON_COLOR_RED);
				case 2: AddNeonToVehicle(veh_id, NEON_COLOR_BLUE);
				case 3: AddNeonToVehicle(veh_id, NEON_COLOR_GREEN);
				case 4: AddNeonToVehicle(veh_id, NEON_COLOR_YELLOW);
			}
		}
		if(pData[playerid][t_hydraulics][num_car]) 
			AddVehicleComponent(veh_id, 1087);
		if(pData[playerid][t_stereo][num_car]) 
			AddVehicleComponent(veh_id, 1086);
		if(pData[playerid][t_paintjob][num_car] != -1) 
			ChangeVehiclePaintjob(veh_id, pData[playerid][t_paintjob][num_car]);
		if(pData[playerid][t_color_1][num_car] != -1 || pData[playerid][t_color_2][num_car] != -1)
			ChangeVehicleColor(veh_id, pData[playerid][t_color_1][num_car], pData[playerid][t_color_2][num_car]);
		TUNE_wheel_component[playerid] = 0;
		TUNE_paintjob[playerid] = -1;
		TUNE_hydraulics[playerid] = false;
		TUNE_stereo[playerid] = false;
		TUNE_carcolor_1[playerid] = -1;
		TUNE_carcolor_2[playerid] = -1;
		TUNE_neon_component[playerid] = -1;

		SetTimerEx("edit_menu_fix", 200, 0, "i", playerid);
	}
	if(clickedid == tune_td[38]) {
		if(TUNE_neon_component[playerid] == 1) return 1;
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_ERROR, "√éshibka. No use el men√∫ de tonificaci√≥n");

		TUNE_neon_component[playerid] = 1;
		new vehicleid = GetPlayerVehicleID(playerid);
		RemoveNeonFromVehicle(vehicleid);
		AddNeonToVehicle(vehicleid, NEON_COLOR_RED);
		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	}
	if(clickedid == tune_td[42]) {
		if(TUNE_neon_component[playerid] == 2) return 1;
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_ERROR, "√éshibka. No use el men√∫ de tonificaci√≥n");

		TUNE_neon_component[playerid] = 2;
		new vehicleid = GetPlayerVehicleID(playerid);
		RemoveNeonFromVehicle(vehicleid);
		AddNeonToVehicle(vehicleid, NEON_COLOR_BLUE);
		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	}
	if(clickedid == tune_td[45]) {
		if(TUNE_neon_component[playerid] == 3) return 1;
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_ERROR, "√éshibka. No use el men√∫ de tonificaci√≥n");

		TUNE_neon_component[playerid] = 3;
		new vehicleid = GetPlayerVehicleID(playerid);
		RemoveNeonFromVehicle(vehicleid);
		AddNeonToVehicle(vehicleid, NEON_COLOR_GREEN);
		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	}
	if(clickedid == tune_td[46]) {
		if(TUNE_neon_component[playerid] == 4) return 1;
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_ERROR, "√éshibka. No use el men√∫ de tonificaci√≥n");

		TUNE_neon_component[playerid] = 4;
		new vehicleid = GetPlayerVehicleID(playerid);
		RemoveNeonFromVehicle(vehicleid);
		AddNeonToVehicle(vehicleid, NEON_COLOR_YELLOW);
		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	}
	if(clickedid == prokattd[2]) {
		switch(prokat_choose[playerid]) {
			case 462: {
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][0], "Manana");
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][1], "550$");
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][4], 462);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][3], 410);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][2], 542);
				for(new i = 0; i < 5; i ++) {
					PlayerTextDrawHide(playerid, prokattd_p[playerid][i]);
					PlayerTextDrawShow(playerid, prokattd_p[playerid][i]);
				}
				prokat_choose[playerid] = 410;
				prokat_price[playerid] = 550;
			}
			case 410: {
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][0], "Clover");
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][1], "680$");
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][4], 410);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][3], 542);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][2], 545);
				for(new i = 0; i < 5; i ++) {
					PlayerTextDrawHide(playerid, prokattd_p[playerid][i]);
					PlayerTextDrawShow(playerid, prokattd_p[playerid][i]);
				}
				prokat_choose[playerid] = 542;
				prokat_price[playerid] = 680;
			}
			case 542: {
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][0], "Hustler");
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][1], "700$");
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][4], 542);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][3], 545);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][2], 543);
				for(new i = 0; i < 5; i ++) {
					PlayerTextDrawHide(playerid, prokattd_p[playerid][i]);
					PlayerTextDrawShow(playerid, prokattd_p[playerid][i]);
				}
				prokat_choose[playerid] = 545;
				prokat_price[playerid] = 700;
			}
			case 545: {
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][0], "Sadler");
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][1], "720$");
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][4], 545);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][3], 543);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][2], 474);
				for(new i = 0; i < 5; i ++) {
					PlayerTextDrawHide(playerid, prokattd_p[playerid][i]);
					PlayerTextDrawShow(playerid, prokattd_p[playerid][i]);
				}
				prokat_choose[playerid] = 543;
				prokat_price[playerid] = 720;
			}
			case 543: {
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][0], "Hermes");
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][1], "750$");
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][4], 543);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][3], 474);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][2], 600);
				for(new i = 0; i < 5; i ++) {
					PlayerTextDrawHide(playerid, prokattd_p[playerid][i]);
					PlayerTextDrawShow(playerid, prokattd_p[playerid][i]);
				}
				prokat_choose[playerid] = 474;
				prokat_price[playerid] = 750;
			}
			case 474: {
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][0], "Picador");
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][1], "800$");
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][4], 474);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][3], 600);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][2], 404);
				for(new i = 0; i < 5; i ++) {
					PlayerTextDrawHide(playerid, prokattd_p[playerid][i]);
					PlayerTextDrawShow(playerid, prokattd_p[playerid][i]);
				}
				prokat_choose[playerid] = 600;
				prokat_price[playerid] = 800;
			}
			case 600: {
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][0], "Perenniel");
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][1], "830$");
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][4], 600);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][3], 404);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][2], 549);
				for(new i = 0; i < 5; i ++) {
					PlayerTextDrawHide(playerid, prokattd_p[playerid][i]);
					PlayerTextDrawShow(playerid, prokattd_p[playerid][i]);
				}
				prokat_choose[playerid] = 404;
				prokat_price[playerid] = 830;
			}
			case 404: {
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][0], "Tampa");
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][1], "850$");
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][4], 404);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][3], 549);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][2], 517);
				for(new i = 0; i < 5; i ++) {
					PlayerTextDrawHide(playerid, prokattd_p[playerid][i]);
					PlayerTextDrawShow(playerid, prokattd_p[playerid][i]);
				}
				prokat_choose[playerid] = 549;
				prokat_price[playerid] = 850;
			}
			case 549: {
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][0], "Majestic");
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][1], "900$");
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][4], 549);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][3], 517);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][2], 422);
				for(new i = 0; i < 5; i ++) {
					PlayerTextDrawHide(playerid, prokattd_p[playerid][i]);
					PlayerTextDrawShow(playerid, prokattd_p[playerid][i]);
				}
				prokat_choose[playerid] = 517;
				prokat_price[playerid] = 900;
			}
			case 517: {
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][0], "Bobcat");
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][1], "970$");
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][4], 517);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][3], 422);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][2], 466);
				for(new i = 0; i < 5; i ++) {
					PlayerTextDrawHide(playerid, prokattd_p[playerid][i]);
					PlayerTextDrawShow(playerid, prokattd_p[playerid][i]);
				}
				prokat_choose[playerid] = 422;
				prokat_price[playerid] = 970;
			}
			case 422: {
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][0], "Glendale");
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][1], "1050$");
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][4], 422);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][3], 466);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][2], 535);
				for(new i = 0; i < 5; i ++) {
					PlayerTextDrawHide(playerid, prokattd_p[playerid][i]);
					PlayerTextDrawShow(playerid, prokattd_p[playerid][i]);
				}
				prokat_choose[playerid] = 466;
				prokat_price[playerid] = 1050;
			}
			case 466: {
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][0], "Slamvan");
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][1], "1100$");
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][4], 466);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][3], 535);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][2], 439);
				for(new i = 0; i < 5; i ++) {
					PlayerTextDrawHide(playerid, prokattd_p[playerid][i]);
					PlayerTextDrawShow(playerid, prokattd_p[playerid][i]);
				}
				prokat_choose[playerid] = 535;
				prokat_price[playerid] = 1100;
			}
			case 535: {
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][0], "Stallion");
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][1], "1300$");
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][4], 535);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][3], 439);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][2], 462);
				for(new i = 0; i < 5; i ++) {
					PlayerTextDrawHide(playerid, prokattd_p[playerid][i]);
					PlayerTextDrawShow(playerid, prokattd_p[playerid][i]);
				}
				prokat_choose[playerid] = 439;
				prokat_price[playerid] = 1300;
			}
			case 439: {
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][0], "Faggio");
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][1], "420$");
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][4], 439);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][3], 462);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][2], 410);
				for(new i = 0; i < 5; i ++) {
					PlayerTextDrawHide(playerid, prokattd_p[playerid][i]);
					PlayerTextDrawShow(playerid, prokattd_p[playerid][i]);
				}
				prokat_choose[playerid] = 462;
				prokat_price[playerid] = 420;
			}
		}
	}
	if(clickedid == prokattd[3]) {
		switch(prokat_choose[playerid]) {
			case 462: {
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][0], "Stallion");
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][1], "1300$");
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][4], 535);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][3], 439);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][2], 462);
				for(new i = 0; i < 5; i ++) {
					PlayerTextDrawHide(playerid, prokattd_p[playerid][i]);
					PlayerTextDrawShow(playerid, prokattd_p[playerid][i]);
				}
				prokat_choose[playerid] = 439;
				prokat_price[playerid] = 1300;
			}
			case 439: {
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][0], "Slamvan");
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][1], "1100$");
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][4], 466);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][3], 535);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][2], 439);
				for(new i = 0; i < 5; i ++) {
					PlayerTextDrawHide(playerid, prokattd_p[playerid][i]);
					PlayerTextDrawShow(playerid, prokattd_p[playerid][i]);
				}
				prokat_choose[playerid] = 535;
				prokat_price[playerid] = 1100;
			}
			case 535: {
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][0], "Glendale");
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][1], "1050$");
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][4], 422);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][3], 466);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][2], 535);
				for(new i = 0; i < 5; i ++) {
					PlayerTextDrawHide(playerid, prokattd_p[playerid][i]);
					PlayerTextDrawShow(playerid, prokattd_p[playerid][i]);
				}
				prokat_choose[playerid] = 466;
				prokat_price[playerid] = 1050;
			}
			case 466: {
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][0], "Bobcat");
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][1], "970$");
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][4], 517);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][3], 422);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][2], 466);
				for(new i = 0; i < 5; i ++) {
					PlayerTextDrawHide(playerid, prokattd_p[playerid][i]);
					PlayerTextDrawShow(playerid, prokattd_p[playerid][i]);
				}
				prokat_choose[playerid] = 422;
				prokat_price[playerid] = 970;
			}
			case 422: {
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][0], "Majestic");
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][1], "900$");
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][4], 549);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][3], 517);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][2], 422);
				for(new i = 0; i < 5; i ++) {
					PlayerTextDrawHide(playerid, prokattd_p[playerid][i]);
					PlayerTextDrawShow(playerid, prokattd_p[playerid][i]);
				}
				prokat_choose[playerid] = 517;
				prokat_price[playerid] = 900;
			}
			case 517: {
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][0], "Tampa");
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][1], "850$");
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][4], 404);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][3], 549);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][2], 517);
				for(new i = 0; i < 5; i ++) {
					PlayerTextDrawHide(playerid, prokattd_p[playerid][i]);
					PlayerTextDrawShow(playerid, prokattd_p[playerid][i]);
				}
				prokat_choose[playerid] = 549;
				prokat_price[playerid] = 850;
			}
			case 549: {
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][0], "Perenniel");
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][1], "830$");
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][4], 600);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][3], 404);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][2], 549);
				for(new i = 0; i < 5; i ++) {
					PlayerTextDrawHide(playerid, prokattd_p[playerid][i]);
					PlayerTextDrawShow(playerid, prokattd_p[playerid][i]);
				}
				prokat_choose[playerid] = 404;
				prokat_price[playerid] = 830;
			}
			case 404: {
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][0], "Picador");
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][1], "800$");
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][4], 474);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][3], 600);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][2], 404);
				for(new i = 0; i < 5; i ++) {
					PlayerTextDrawHide(playerid, prokattd_p[playerid][i]);
					PlayerTextDrawShow(playerid, prokattd_p[playerid][i]);
				}
				prokat_choose[playerid] = 600;
				prokat_price[playerid] = 800;
			}
			case 600: {
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][0], "Hermes");
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][1], "750$");
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][4], 543);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][3], 474);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][2], 600);
				for(new i = 0; i < 5; i ++) {
					PlayerTextDrawHide(playerid, prokattd_p[playerid][i]);
					PlayerTextDrawShow(playerid, prokattd_p[playerid][i]);
				}
				prokat_choose[playerid] = 474;
				prokat_price[playerid] = 750;
			}
			case 474: {
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][0], "Sadler");
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][1], "720$");
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][4], 545);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][3], 543);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][2], 474);
				for(new i = 0; i < 5; i ++) {
					PlayerTextDrawHide(playerid, prokattd_p[playerid][i]);
					PlayerTextDrawShow(playerid, prokattd_p[playerid][i]);
				}
				prokat_choose[playerid] = 543;
				prokat_price[playerid] = 720;
			}
			case 543: {
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][0], "Hustler");
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][1], "700$");
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][4], 542);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][3], 545);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][2], 543);
				for(new i = 0; i < 5; i ++) {
					PlayerTextDrawHide(playerid, prokattd_p[playerid][i]);
					PlayerTextDrawShow(playerid, prokattd_p[playerid][i]);
				}
				prokat_choose[playerid] = 545;
				prokat_price[playerid] = 700;
			}
			case 545: {
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][0], "Clover");
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][1], "680$");
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][4], 410);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][3], 542);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][2], 545);
				for(new i = 0; i < 5; i ++) {
					PlayerTextDrawHide(playerid, prokattd_p[playerid][i]);
					PlayerTextDrawShow(playerid, prokattd_p[playerid][i]);
				}
				prokat_choose[playerid] = 542;
				prokat_price[playerid] = 680;
			}
			case 542: {
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][0], "Manana");
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][1], "550$");
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][4], 462);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][3], 410);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][2], 542);
				for(new i = 0; i < 5; i ++) {
					PlayerTextDrawHide(playerid, prokattd_p[playerid][i]);
					PlayerTextDrawShow(playerid, prokattd_p[playerid][i]);
				}
				prokat_choose[playerid] = 410;
				prokat_price[playerid] = 550;
			}
			case 410: {
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][0], "Faggio");
				PlayerTextDrawSetString(playerid, prokattd_p[playerid][1], "420$");
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][4], 439);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][3], 462);
				PlayerTextDrawSetPreviewModel(playerid, prokattd_p[playerid][2], 410);
				for(new i = 0; i < 5; i ++) {
					PlayerTextDrawHide(playerid, prokattd_p[playerid][i]);
					PlayerTextDrawShow(playerid, prokattd_p[playerid][i]);
				}
				prokat_choose[playerid] = 462;
				prokat_price[playerid] = 420;
			}
		}
	}
	if(clickedid == Text: INVALID_TEXT_DRAW && td_prokat_used[playerid]) {
		for(new i = 0; i < 8; i ++) {
			if(i < 5) PlayerTextDrawHide(playerid, prokattd_p[playerid][i]);
			TextDrawHideForPlayer(playerid, prokattd[i]);
		}
		td_prokat_used[playerid] = false;
		prokat_choose[playerid] = 0;
		prokat_price[playerid] = 0;
		CancelSelectTextDraw(playerid);
	}
	if(clickedid == prokattd[0]) {
		if(GetPVarInt(playerid, "veh_rent") != -1) {
			SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≥√¶√• √•√±√≤√º √†√∞√•√≠√§√Æ√¢√†√≠√≠√ª√© √≤√∞√†√≠√±√Ø√Æ√∞√≤");
			return SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§√®√≤√• "CLITEBLUE"/unrent {cecece}√§√´√ø √∞√†√±√≤√Æ√∞√¶√•√≠√®√ø √Ø√∞√•√§√ª√§√≥√π√•√£√Æ √§√Æ√£√Æ√¢√Æ√∞√†");
		}
		if(!pData[playerid][pLicenses][0]) return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± √§√Æ√´√¶√≠√ª √°√ª√≤√º √¢√Æ√§√®√≤√•√´√º√±√™√®√• √Ø√∞√†√¢√†");
		if(pData[playerid][pCash] < prokat_price[playerid]) 
			return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √§√•√≠√•√£ √∑√≤√Æ√°√ª √¢√ß√ø√≤√º √≠√†√Ø√∞√Æ√™√†√≤ √Ω√≤√≥ √¨√Æ√§√•√´√º");
		new actorID, Float: vpos_X, Float: vpos_Y, Float: vpos_Z, Float: vpos_A;
		new price_for_biz = prokat_price[playerid]/2;
		switch(prokat_num[playerid]) {
			case 1: {
				vpos_X = 1803.6227;
				vpos_Y = -1928.0414;
				vpos_Z = 13.0605;
				vpos_A = 0.0;
				actorID = npc_prokat_1;
				prok1_bank += price_for_biz;
				mysql_format(mysql_Handle, string, 60, "UPDATE `otherfuncs` SET `prok1_bank` = %d", prok1_bank);
				mysql_tquery(mysql_Handle, string);
			}
			case 2: {
				vpos_X = 1189.6602;
				vpos_Y = -1361.3113;
				vpos_Z = 13.1782;
				vpos_A = 270.0;
				actorID = npc_prokat_2;
				prok2_bank += price_for_biz;
				mysql_format(mysql_Handle, string, 60, "UPDATE `otherfuncs` SET `prok2_bank` = %d", prok2_bank);
				mysql_tquery(mysql_Handle, string);
			}
			case 3: {
				vpos_X = -1991.2151;
				vpos_Y = 104.1343;
				vpos_Z = 27.2554;
				vpos_A = 0.0;
				actorID = npc_prokat_3;
				prok3_bank += price_for_biz;
				mysql_format(mysql_Handle, string, 60, "UPDATE `otherfuncs` SET `prok3_bank` = %d", prok3_bank);
				mysql_tquery(mysql_Handle, string);
			}
			case 4: {
				vpos_X = -2591.7400;
				vpos_Y = 610.4911;
				vpos_Z = 14.1526;
				vpos_A = 270.0;
				actorID = npc_prokat_4;
				prok4_bank += price_for_biz;
				mysql_format(mysql_Handle, string, 60, "UPDATE `otherfuncs` SET `prok4_bank` = %d", prok4_bank);
				mysql_tquery(mysql_Handle, string);
			}
			case 5: {
				vpos_X = 2813.6921;
				vpos_Y = 1282.0902;
				vpos_Z = 10.4588;
				vpos_A = 0.0;
				actorID = npc_prokat_5;
				prok5_bank += price_for_biz;
				mysql_format(mysql_Handle, string, 60, "UPDATE `otherfuncs` SET `prok5_bank` = %d", prok5_bank);
				mysql_tquery(mysql_Handle, string);
			}
			case 6: {
				vpos_X = 1622.0885;
				vpos_Y = 1848.7770;
				vpos_Z = 10.5250;
				vpos_A = 180.0;
				actorID = npc_prokat_6;
				prok6_bank += price_for_biz;
				mysql_format(mysql_Handle, string, 60, "UPDATE `otherfuncs` SET `prok6_bank` = %d", prok6_bank);
				mysql_tquery(mysql_Handle, string);
			}
			case 7: {
				vpos_X = 1161.5428;
				vpos_Y = -1735.9556;
				vpos_Z = 13.3694;
				vpos_A = 90.0;
				actorID = npc_prokat_7;
				prok7_bank += price_for_biz;
				mysql_format(mysql_Handle, string, 60, "UPDATE `otherfuncs` SET `prok7_bank` = %d", prok7_bank);
				mysql_tquery(mysql_Handle, string);
			}
		}
		new vehicleid = CreateVehicleEx(prokat_choose[playerid], vpos_X, vpos_Y, vpos_Z, vpos_A, 145, 145, CAR_SPAWN);
		SetPlayerPos(playerid, vpos_X, vpos_Y, vpos_Z);
		PutPlayerInVehicle(playerid, vehicleid, 0);
		Hook_GivePlayerMoney(playerid, -prokat_price[playerid]);
		new gamet[30];
		format(gamet, sizeof(gamet), "~r~-%d$", prokat_price[playerid]);
		GameTextForPlayer(playerid, gamet, 3000, 1);
		rentID[vehicleid] = playerid;
		SetPVarInt(playerid, "veh_rent", vehicleid);
		ApplyDynamicActorAnimation(actorID, "CRIB", "CRIB_Use_Switch", 4.1, 0, 0, 0, 0, -1);
		for(new i = 0; i < 8; i ++) {
			if(i < 5) PlayerTextDrawHide(playerid, prokattd_p[playerid][i]);
			TextDrawHideForPlayer(playerid, prokattd[i]);
		}
		td_prokat_used[playerid] = false;
		CancelSelectTextDraw(playerid);
		SCMF(playerid, COLOR_BLUE, "√Ç√ª √¢√ß√ø√´√® {FFCC00}%s "CBLUE"√≠√†√Ø√∞√Æ√™√†√≤ √ß√† {00cc00}%d$", VehicleNames[prokat_choose[playerid] - 400], prokat_price[playerid]);
        prokat_choose[playerid] = 0;
		prokat_price[playerid] = 0;
		SCM(playerid, -1, "Usar√≤√• "CCYAN"/lock 2 "CWHITE"√§√´√ø √Æ√≤√™√∞√ª√≤√®√ø √® √ß√†√™√∞√ª√≤√®√ø √§√¢√•√∞√•√©");
        SCM(playerid, -1, "√ó√≤√Æ√°√ª √∞√†√ß√Æ√∞√¢√†√≤√º √§√Æ√£√Æ√¢√Æ√∞ √†√∞√•√≠√§√ª √Ø√∞√Æ√™√†√≤√† √¢√¢√•√§√®√≤√• "CCYAN"/unrent");
	}
	if(clickedid == Text: INVALID_TEXT_DRAW && BIZin_alcMenu[playerid]) {
		for(new i = 0; i < 14; i ++) {
			if(i <6) PlayerTextDrawDestroy(playerid, barTDS_PLAYER[playerid][i]);
			TextDrawHideForPlayer(playerid, barTDS[i]);
		}
		BIZin_alcMenu[playerid] = false;
	}
	if(clickedid == Text: INVALID_TEXT_DRAW && in_alcMenu[playerid]) {
		for(new i = 0; i < 18; i ++) TextDrawHideForPlayer(playerid, alcotd[i]);
		in_alcMenu[playerid] = false;
	}
	if(clickedid == alcotd[9]) {
		for(new i = 0; i < 18; i ++) TextDrawHideForPlayer(playerid, alcotd[i]);
		CancelSelectTextDraw(playerid);
		SPD(playerid, 19561, DIALOG_STYLE_MSGBOX, "√ç√†√Ø√®√≤√Æ√™", ""CWHITE"√ù√≤√Æ√≤ √≤√Æ√¢√†√∞ √Æ√°√Æ√©√§√•√≤√±√ø √Ç√†√¨ √¢ 100$\n√Ç√ª √¶√•√´√†√•√≤√• √Ø√∞√®√Æ√°√∞√•√±√≤√® √•√£√Æ?", "S√≠", "No");
	}
	if(clickedid == alcotd[8]) {
		for(new i = 0; i < 18; i ++) TextDrawHideForPlayer(playerid, alcotd[i]);
		CancelSelectTextDraw(playerid);
		SPD(playerid, 19562, DIALOG_STYLE_MSGBOX, "√è√®√¢√Æ", ""CWHITE"√ù√≤√Æ√≤ √≤√Æ√¢√†√∞ √Æ√°√Æ√©√§√•√≤√±√ø √Ç√†√¨ √¢ 200$\n√Ç√ª √¶√•√´√†√•√≤√• √Ø√∞√®√Æ√°√∞√•√±√≤√® √•√£√Æ?", "S√≠", "No");
	}
	if(clickedid == alcotd[7]) {
		for(new i = 0; i < 18; i ++) TextDrawHideForPlayer(playerid, alcotd[i]);
		CancelSelectTextDraw(playerid);
		SPD(playerid, 19563, DIALOG_STYLE_MSGBOX, "√Ç√Æ√§√™√†", ""CWHITE"√ù√≤√Æ√≤ √≤√Æ√¢√†√∞ √Æ√°√Æ√©√§√•√≤√±√ø √Ç√†√¨ √¢ 400$\n√Ç√ª √¶√•√´√†√•√≤√• √Ø√∞√®√Æ√°√∞√•√±√≤√® √•√£√Æ?", "S√≠", "No");
	}
	if(clickedid == alcotd[6]) {
		for(new i = 0; i < 18; i ++) TextDrawHideForPlayer(playerid, alcotd[i]);
		CancelSelectTextDraw(playerid);
		SPD(playerid, 19564, DIALOG_STYLE_MSGBOX, "√Ç√®√±√™√®", ""CWHITE"√ù√≤√Æ√≤ √≤√Æ√¢√†√∞ √Æ√°√Æ√©√§√•√≤√±√ø √Ç√†√¨ √¢ 2000$\n√Ç√ª √¶√•√´√†√•√≤√• √Ø√∞√®√Æ√°√∞√•√±√≤√® √•√£√Æ?", "S√≠", "No");
	}
	if(clickedid == alcotd[5]) {
		for(new i = 0; i < 18; i ++) TextDrawHideForPlayer(playerid, alcotd[i]);
		CancelSelectTextDraw(playerid);
		SPD(playerid, 19565, DIALOG_STYLE_MSGBOX, "√Å√≥√∞√£√•√∞", ""CWHITE"√ù√≤√Æ√≤ √≤√Æ√¢√†√∞ √Æ√°√Æ√©√§√•√≤√±√ø √Ç√†√¨ √¢ 500$\n√Ç√ª √¶√•√´√†√•√≤√• √Ø√∞√®√Æ√°√∞√•√±√≤√® √•√£√Æ?", "S√≠", "No");
	}
	if(clickedid == rec_td[17]) {
		if(GetPVarType(playerid, "PlacedBB")) {
			foreach(new i:Player) {
				if(!IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea"))) continue;
				PlayStream(i, "https://normative-rp.ru/files/media/Ramil'%20-%20Pokazhi%20gde%20spat'.mp3", GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
			}
			SetPVarString(playerid, "BBStation", "https://normative-rp.ru/files/media/Ramil'%20-%20Pokazhi%20gde%20spat'.mp3");
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~TRACK ENABLED", 1500, 3);
		}
	}
	if(clickedid == rec_td[18]) {
		if(GetPVarType(playerid, "PlacedBB")) {
			foreach(new i:Player) {
				if(!IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea"))) continue;
				PlayStream(i, "https://normative-rp.ru/files/media/Tanir,%20Tyomcha%20-%20Da%20Da%20Da.mp3", GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
			}
			SetPVarString(playerid, "BBStation", "https://normative-rp.ru/files/media/Tanir,%20Tyomcha%20-%20Da%20Da%20Da.mp3");
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~TRACK ENABLED", 1500, 3);
		}
	}
	if(clickedid == rec_td[19]) {
		if(GetPVarType(playerid, "PlacedBB")) {
			foreach(new i:Player) {
				if(!IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea"))) continue;
				PlayStream(i, "https://normative-rp.ru/files/media/Ramil'%20-%20Pogibal.mp3", GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
			}
			SetPVarString(playerid, "BBStation", "https://normative-rp.ru/files/media/Ramil'%20-%20Pogibal.mp3");
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~TRACK ENABLED", 1500, 3);
		}
	}
	if(clickedid == rec_td[20]) {
		if(GetPVarType(playerid, "PlacedBB")) {
			foreach(new i:Player) {
				if(!IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea"))) continue;
				PlayStream(i, "https://normative-rp.ru/files/media/MORGENSHTERN%20-%20Novyy%20Merin.mp3", GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
			}
			SetPVarString(playerid, "BBStation", "https://normative-rp.ru/files/media/MORGENSHTERN%20-%20Novyy%20Merin.mp3");
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~TRACK ENABLED", 1500, 3);
		}
	}
	if(clickedid == rec_td[21]) {
		if(GetPVarType(playerid, "PlacedBB")) {
			foreach(new i:Player) {
				if(!IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea"))) continue;
				PlayStream(i, "https://normative-rp.ru/files/media/Miko%20-%20Devochka%20v%20trende.mp3", GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
			}
			SetPVarString(playerid, "BBStation", "https://normative-rp.ru/files/media/Miko%20-%20Devochka%20v%20trende.mp3");
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~TRACK ENABLED", 1500, 3);
		}
	}
	if(clickedid == rec_td[22]) {
		if(GetPVarType(playerid, "PlacedBB")) {
			foreach(new i:Player) {
				if(!IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea"))) continue;
				PlayStream(i, "https://normative-rp.ru/files/media/HammAli%20_%20Navai%20-%20Pryatki.mp3", GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
			}
			SetPVarString(playerid, "BBStation", "https://normative-rp.ru/files/media/HammAli%20_%20Navai%20-%20Pryatki.mp3");
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~TRACK ENABLED", 1500, 3);
		}
	}
	if(clickedid == rec_td[23]) {
		if(GetPVarType(playerid, "PlacedBB")) {
			foreach(new i:Player) {
				if(!IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea"))) continue;
				PlayStream(i, "https://normative-rp.ru/files/media/Bonsai%20-%20Ona.mp3", GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
			}
			SetPVarString(playerid, "BBStation", "https://normative-rp.ru/files/media/Bonsai%20-%20Ona.mp3");
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~TRACK ENABLED", 1500, 3);
		}
	}
	if(clickedid == rec_td[24]) {
		if(GetPVarType(playerid, "PlacedBB")) {
			foreach(new i:Player) {
				if(!IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea"))) continue;
				PlayStream(i, "https://normative-rp.ru/files/media/ATL%20-%20Serpantyn.mp3", GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
			}
			SetPVarString(playerid, "BBStation", "https://normative-rp.ru/files/media/ATL%20-%20Serpantyn.mp3");
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~TRACK ENABLED", 1500, 3);
		}
	}
	if(clickedid == rec_td[25]) {
		if(GetPVarType(playerid, "PlacedBB")) {
			foreach(new i:Player) {
				if(!IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea"))) continue;
				PlayStream(i, "https://normative-rp.ru/files/media/10AGE%20-%20Tak%20nel'zya.mp3", GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
			}
			SetPVarString(playerid, "BBStation", "https://normative-rp.ru/files/media/10AGE%20-%20Tak%20nel'zya.mp3");
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~TRACK ENABLED", 1500, 3);
		}
	}
	if(clickedid == rec_td[28]) {
		if(GetPVarType(playerid, "BBArea")) {
			foreach(new i:Player) {
				if(!IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea"))) continue;
				StopStream(i);
			}
			DeletePVar(playerid, "BBStation");
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~MUSIC STOPPED", 1500, 3);
			for(new i = 0; i < 29; i ++) {
				if(i < 17) TextDrawShowForPlayer(playerid, rec_td[i]);
				else TextDrawHideForPlayer(playerid, rec_td[i]);
			}
		}
	}
	if(clickedid == rec_td[26]) {
		if(GetPVarType(playerid, "BBArea")) {
			foreach(new i:Player) {
				if(!IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea"))) continue;
				StopStream(i);
			}
			DeletePVar(playerid, "BBStation");
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~TRACK STOPPED", 1500, 3);
		}
	}
	if(clickedid == rec_td[15]) {
		if(GetPVarType(playerid, "PlacedBB")) {
			foreach(new i:Player) {
				if(!IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea"))) continue;
				PlayStream(i, "http://icecast.vgtrk.cdnvideo.ru/kulturafm_mp3_192kbps", GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
			}
			SetPVarString(playerid, "BBStation", "http://icecast.vgtrk.cdnvideo.ru/kulturafm_mp3_192kbps");
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~RADIO ENABLED", 1500, 3);
		}
	}
	if(clickedid == Text: INVALID_TEXT_DRAW && GetPVarInt(playerid, "is_placed_BB")) {
		for(new i = 0; i < 29; i ++) TextDrawHideForPlayer(playerid, rec_td[i]);
		DeletePVar(playerid, "is_placed_BB");
	}
	if(clickedid == rec_td[16]) {
		if(GetPVarType(playerid, "BBArea")) {
			foreach(new i:Player) {
				if(!IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea"))) continue;
				StopStream(i);
			}
			DeletePVar(playerid, "BBStation");
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~RADIO STOPPED", 1500, 3);
		}
	}
	if(clickedid == rec_td[4]) {
		if(GetPVarInt(playerid, "is_placed_BB")) {
			for(new i = 0; i < 29; i ++) {
				if(i < 17) TextDrawShowForPlayer(playerid, rec_td[i]);
				else TextDrawHideForPlayer(playerid, rec_td[i]);
			}
			DeletePVar(playerid, "bbox_mtype");
		}
	}
	if(clickedid == rec_td[5]) {
		if(GetPVarInt(playerid, "is_placed_BB")) {
			for(new i = 0; i < 29; i ++) {
				if((i > 6 && i < 17) || (i > 26)) TextDrawHideForPlayer(playerid, rec_td[i]);
				else TextDrawShowForPlayer(playerid, rec_td[i]);
			}
			SetPVarInt(playerid, "bbox_mtype", 2);
		}
	}
	if(clickedid == rec_td[6]) 
		SPD(playerid, 545, DIALOG_STYLE_INPUT, ""CMAIN"√è√∞√Æ√®√£√∞√ª√¢√†√≠√®√• √Ø√Æ √±√±√ª√´√™√•", ""CWHITE"√Ç√¢√•√§√®√≤√• √Ø√∞√ø√¨√≥√æ √±√±√ª√´√™√≥ √≠√† √Ç√†√∏ √†√≥√§√®√Æ√¥√†√©√´ √®√´√® √∞√†√§√®√Æ√±√≤√†√≠√∂√®√æ\n√ë√±√ª√´√™√† √§√Æ√´√¶√≠√† √Æ√™√†√≠√∑√®√¢√†√≤√º√±√ø √≠√† "CMAIN".ogg"CWHITE", "CMAIN".mp3"CWHITE", "CMAIN".m3u"CWHITE" √® √≤. √Ø.\n√è√∞√®√¨√•√∞: "CCYAN"https://normative-rp.ru/files/media/sample.mp3", "√Ç√™√´√æ√∑√®√≤√º", "Cerrar");
	if(clickedid == rec_td[7]) {
		if(GetPVarType(playerid, "PlacedBB")) {
			foreach(new i:Player) {
				if(!IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea"))) continue;
				PlayStream(i, "http://ep256.hostingradio.ru:8052/europaplus256.mp3", GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
			}
			SetPVarString(playerid, "BBStation", "http://ep256.hostingradio.ru:8052/europaplus256.mp3");
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~RADIO ENABLED", 1500, 3);
		}
	}
	if(clickedid == rec_td[8]) {
		if(GetPVarType(playerid, "PlacedBB")) {
			foreach(new i:Player) {
				if(!IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea"))) continue;
				PlayStream(i, "http://chanson.hostingradio.ru:8041/chanson256.mp3", GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
			}
			SetPVarString(playerid, "BBStation", "http://chanson.hostingradio.ru:8041/chanson256.mp3");
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~RADIO ENABLED", 1500, 3);
		}
	}
	if(clickedid == rec_td[9]) {
		if(GetPVarType(playerid, "PlacedBB")) {
			foreach(new i:Player) {
				if(!IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea"))) continue;
				PlayStream(i, "http://online-radiomelodia.tavrmedia.ua/RadioMelodia.m3u", GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
			}
			SetPVarString(playerid, "BBStation", "http://online-radiomelodia.tavrmedia.ua/RadioMelodia.m3u");
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~RADIO ENABLED", 1500, 3);
		}
	}
	if(clickedid == rec_td[10]) {
		if(GetPVarType(playerid, "PlacedBB")) {
			foreach(new i:Player) {
				if(!IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea"))) continue;
				PlayStream(i, "http://air2.radiorecord.ru:805/rr_320", GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
			}
			SetPVarString(playerid, "BBStation", "http://air2.radiorecord.ru:805/rr_320");
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~RADIO ENABLED", 1500, 3);
		}
	}
	if(clickedid == rec_td[11]) {
		if(GetPVarType(playerid, "PlacedBB")) {
			foreach(new i:Player) {
				if(!IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea"))) continue;
				PlayStream(i, "http://retroserver.streamr.ru:8043/retro256.mp3", GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
			}
			SetPVarString(playerid, "BBStation", "http://retroserver.streamr.ru:8043/retro256.mp3");
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~RADIO ENABLED", 1500, 3);
		}
	}
	if(clickedid == rec_td[12]) {
		if(GetPVarType(playerid, "PlacedBB")) {
			foreach(new i:Player) {
				if(!IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea"))) continue;
				PlayStream(i, "http://dorognoe.hostingradio.ru:8000/dorognoe", GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
			}
			SetPVarString(playerid, "BBStation", "http://dorognoe.hostingradio.ru:8000/dorognoe");
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~RADIO ENABLED", 1500, 3);
		}
	}
	if(clickedid == rec_td[13]) {
		if(GetPVarType(playerid, "PlacedBB")) {
			foreach(new i:Player) {
				if(!IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea"))) continue;
				PlayStream(i, "http://nashe1.hostingradio.ru/nashe-256", GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
			}
			SetPVarString(playerid, "BBStation", "http://nashe1.hostingradio.ru/nashe-256");
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~RADIO ENABLED", 1500, 3);
		}
	}
	if(clickedid == rec_td[14]) {
		if(GetPVarType(playerid, "PlacedBB")) {
			foreach(new i:Player) {
				if(!IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea"))) continue;
				PlayStream(i, "https://blackstarradio.hostingradio.ru:8024/blackstarradio128.mp3?radiostatistica=radiopotok", GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
			}
			SetPVarString(playerid, "BBStation", "https://blackstarradio.hostingradio.ru:8024/blackstarradio128.mp3?radiostatistica=radiopotok");
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~RADIO ENABLED", 1500, 3);
		}
	}
	if(clickedid == Text: INVALID_TEXT_DRAW && GetPVarInt(playerid, "changed_skin_mode") != 0) {
		TextDrawHideForPlayer(playerid, chskin_box);
		new name_pvar[16];
		for(new i = 0; i < 16; i ++) {
			format(name_pvar, sizeof(name_pvar), "chskin_%d", i);
			DeletePVar(playerid, name_pvar);
			PlayerTextDrawHide(playerid, chskin_td[playerid][i]);
		}
		if(GetPVarInt(playerid, "changed_skin_mode") == 4) {
			DeletePVar(playerid, "id_setleader");
			DeletePVar(playerid, "org_number__setleader");
			DeletePVar(playerid, "orgen_number__setleader");
			DeletePVar(playerid, "prm_unit__setleader");
		}
		if(GetPVarInt(playerid, "changed_skin_mode") == 5) DeletePVar(playerid, #fraction_id);
		DeletePVar(playerid, "changed_skin_mode");
	}
	if(clickedid == Text: INVALID_TEXT_DRAW && in_menutune[playerid]) {
		if(TUNE_neon_component[playerid] != -1 || TUNE_wheel_component[playerid] != 0 || TUNE_hydraulics[playerid] || TUNE_stereo[playerid] || TUNE_paintjob[playerid] != -1 || TUNE_carcolor_1[playerid] != -1 || TUNE_carcolor_2[playerid] != -1) 
			return SPD(playerid, 164, DIALOG_STYLE_MSGBOX, ""CERROR"√è√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√•", ""CWHITE"√ì √Ç√†√± √≠√† √†√¢√≤√Æ√¨√Æ√°√®√´√• √•√±√≤√º √≠√•√±√Æ√µ√∞√†√≠¬∏√≠√≠√ª√© √≤√æ√≠√®√≠√£. √Ö√±√´√® √Ç√ª √¢√ª√©√§√®√≤√• √®√ß √∞√•√¶√®√¨√†,\n√≥√±√≤√†√≠√Æ√¢√´√•√≠√≠√ª√© √≤√æ√≠√®√≠√£ √°√≥√§√•√≤ √≥S√≠√´¬∏√≠. Quieres √Ø√∞√Æ√§√Æ√´√¶√®√≤√º?", "S√≠", "No");
		in_menutune[playerid] = false;
		TogglePlayerControllable(playerid, 1);
		CancelSelectTextDraw(playerid);
		SetCameraBehindPlayer(playerid);
		for(new i = 0; i < 55; i ++) TextDrawHideForPlayer(playerid, tune_td[i]);
		SCM(playerid, 0xFF6640FF, "√Ç√ª √¢√ª√∏√´√® √®√ß √∞√•√¶√®√¨√† √≤√æ√≠√®√≠√£√† √†√¢√≤√Æ√¨√Æ√°√®√´√ø");
	}
	if(clickedid == tune_td[5]) {
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_ERROR, "√éshibka. No use el men√∫ de tonificaci√≥n");
		if(TUNE_neon_component[playerid] == -1 && TUNE_wheel_component[playerid] == 0 && !TUNE_hydraulics[playerid] && !TUNE_stereo[playerid] && TUNE_paintjob[playerid] == -1 && TUNE_carcolor_1[playerid] == -1 && TUNE_carcolor_2[playerid] == -1) 
			return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CERROR"√é√∏√®√°√™√†", ""CWHITE"√Ç√ª √≠√• √≥√±√≤√†√≠√Æ√¢√®√´√® √≠√® √Æ√§√≠√Æ√£√Æ √™√Æ√¨√Ø√Æ√≠√•√≠√≤√† √≤√æ√≠√®√≠√£√† √≠√† √†√¢√≤√Æ√¨√Æ√°√®√´√º", "Cerrar", "");
		new str_tunesave[390] = ""CWHITE"√ç√† √Ç√†√∏√•√¨ √†√¢√≤√Æ√¨√Æ√°√®√´√• √≥√±√≤√†√≠√Æ√¢√´√•√≠ √±√´√•√§√≥√æ√π√®√© √≤√æ√≠√®√≠√£:\n\n", price_tune = 0;
		if(TUNE_wheel_component[playerid] != 0) {
			strcat(str_tunesave, "- √≤√æ√≠√®√≠√£ √™√Æ√´¬∏√±\n");
			price_tune += 4000;
		}
		if(TUNE_hydraulics[playerid]) {
			strcat(str_tunesave, "- √£√®√§√∞√†√¢√´√®√™√†\n");
			price_tune += 2500;
		}
		if(TUNE_stereo[playerid]) {
			strcat(str_tunesave, "- √±√≤√•√∞√•√Æ√±√®√±√≤√•√¨√†\n");
			price_tune += 2000;
		}
		if(TUNE_paintjob[playerid] != -1) {
			strcat(str_tunesave, "- √Ø√Æ√™√∞√†√±√Æ√∑√≠√†√ø √∞√†√°√Æ√≤√†\n");
			price_tune += 6500;
		}
		if(TUNE_carcolor_1[playerid] != -1 || TUNE_carcolor_2[playerid] != -1) {
			strcat(str_tunesave, "- √±√¨√•√≠√† √∂√¢√•√≤√Æ√¢ √†√¢√≤√Æ√¨√Æ√°√®√´√ø\n");
			price_tune += 400;
		}
		if(TUNE_neon_component[playerid] != -1) {
			strcat(str_tunesave, "- √≥√±√≤√†√≠√Æ√¢√™√† √≠√•√Æ√≠√Æ√¢\n");
			price_tune += 20000;
		}
		format(str_tunesave, sizeof(str_tunesave), "%s\n"CWHITE"√ë√≤√Æ√®√¨√Æ√±√≤√º √±√Æ√µ√∞√†√≠√•√≠√®√ø √¢√±√•√µ √™√Æ√¨√Ø√Æ√≠√•√≠√≤√Æ√¢ √±√Æ√±√≤√†√¢√®√≤ {009900}%d$\n"CWHITE"√ç√†√¶√¨√®√≤√• \"√ë√Æ√µ√∞√†√≠√®√≤√º\" √§√´√ø √±√Æ√µ√∞√†√≠√•√≠√®√ø √≤√æ√≠√®√≠√£√† √®√´√® \"Cerrar\" √§√´√ø √¢√Æ√ß√¢√∞√†√≤√† √¢ √¨√•√≠√æ √≥√±√≤√†√≠√Æ√¢√™√®", str_tunesave, price_tune);
		SPD(playerid, 632, DIALOG_STYLE_MSGBOX, "{ffcc33}√ë√Æ√µ√∞√†√≠√•√≠√®√• √≤√æ√≠√®√≠√£√†", str_tunesave, "√ë√Æ√µ√∞√†√≠√®√≤√º", "Cerrar");
	}
	if(clickedid == tune_td[6]) {
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_ERROR, "√éshibka. No use el men√∫ de tonificaci√≥n");
		new veh_id = GetPlayerVehicleID(playerid), num_car;
		if(house_carid[playerid][0] && veh_id == house_carid[playerid][0]) num_car = 0;
		else if(house_carid[playerid][1] && veh_id == house_carid[playerid][1]) num_car = 1;
		else if(house_carid[playerid][2] && veh_id == house_carid[playerid][2]) num_car = 2;
		if(pData[playerid][t_neon_num][num_car] == -1 && pData[playerid][t_wheel][num_car] == 0 && !pData[playerid][t_hydraulics][num_car] && !pData[playerid][t_stereo][num_car] && pData[playerid][t_paintjob][num_car] == -1) 
			return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CERROR"√é√∏√®√°√™√†", ""CWHITE"√ì √Ç√†√± No √±√Æ√µ√∞√†√≠¬∏√≠√≠√Æ√£√Æ √≤√æ√≠√®√≠√£√† √≠√† √†√¢√≤√Æ√¨√Æ√°√®√´√•\n\n√Ö√±√´√® Quieres √Æ√≤√¨√•√≠√®√≤√º √≥√±√≤√†√≠√Æ√¢√™√≥ √≤√æ√≠√®√≠√£√†,\n√™√Æ√≤√Æ√∞√ª√© √•√π¬∏ √≠√• √°√ª√´ √≥√±√≤√†√≠√Æ√¢√´√•√≠, Usar√≤√•\n√™√≠√Æ√Ø√™√≥ CANCEL", "Cerrar", "");
		new str_removetune[70];
		if(pData[playerid][t_wheel][num_car] != 0) 
			strcat(str_removetune, "√í√æ√≠√®√≠√£ √™√Æ√´¬∏√±\n");
		if(pData[playerid][t_hydraulics][num_car]) 
			strcat(str_removetune, "√É√®√§√∞√†√¢√´√®√™√†\n");
		if(pData[playerid][t_stereo][num_car]) 
			strcat(str_removetune, "√ë√≤√•√∞√•√Æ√±√®√±√≤√•√¨√†\n");
		if(pData[playerid][t_paintjob][num_car] != -1) 
			strcat(str_removetune, "√è√Æ√™√∞√†√±√Æ√∑√≠√†√ø √∞√†√°√Æ√≤√†\n");
		if(pData[playerid][t_neon_num][num_car] != -1) 
			strcat(str_removetune, "√ç√•√Æ√≠√ª\n");
		SPD(playerid, 282, DIALOG_STYLE_LIST, "{ff3333}√ä√†√™√Æ√© √™√Æ√¨√Ø√Æ√≠√•√≠√≤ √≤√æ√≠√®√≠√£√† Quieres √≥S√≠√´√®√≤√º?", str_removetune, "Seleccione", "Cerrar");
	}
	if(clickedid == tune_td[8]) {
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_ERROR, "√éshibka. No use el men√∫ de tonificaci√≥n");
		for(new i = 4; i < 30; i ++) {
			if(i < 17) TextDrawHideForPlayer(playerid, tune_td[i]);
			else TextDrawShowForPlayer(playerid, tune_td[i]);
		}
	}
	if(clickedid == tune_td[17]) {
		for(new i = 4; i < 55; i ++) {
			if(i < 17) TextDrawShowForPlayer(playerid, tune_td[i]);
			else TextDrawHideForPlayer(playerid, tune_td[i]);
		}
	}
	if(clickedid == tune_td[41]) {
		for(new i = 4; i < 30; i ++) TextDrawHideForPlayer(playerid, tune_td[i]);
		for(new i = 38; i < 53; i ++) TextDrawHideForPlayer(playerid, tune_td[i]);
		TextDrawHideForPlayer(playerid, tune_td[41]);
		TextDrawShowForPlayer(playerid, tune_td[34]);
		TextDrawShowForPlayer(playerid, tune_td[17]);
		TextDrawShowForPlayer(playerid, tune_td[35]);
		TextDrawShowForPlayer(playerid, tune_td[36]);

		TextDrawShowForPlayer(playerid, tune_td[53]);
		TextDrawShowForPlayer(playerid, tune_td[14]);
	}
	if(clickedid == tune_td[10]) {
		if(TUNE_hydraulics[playerid]) return 1;
		new veh_id = GetPlayerVehicleID(playerid), num_car;
		if(house_carid[playerid][0] && veh_id == house_carid[playerid][0]) num_car = 0;
		else if(house_carid[playerid][1] && veh_id == house_carid[playerid][1]) num_car = 1;
		else if(house_carid[playerid][2] && veh_id == house_carid[playerid][2]) num_car = 2;
		if(pData[playerid][t_hydraulics][num_car]) return SCM(playerid, COLOR_LIGHTGREY, "√É√®√§√∞√†√¢√´√®√™√† √≥√¶√• √≥√±√≤√†√≠√Æ√¢√´√•√≠√† √≠√† √Ç√†√∏√•√¨ √†√¢√≤√Æ√¨√Æ√°√®√´√•");
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_ERROR, "√éshibka. No use el men√∫ de tonificaci√≥n");
		TUNE_hydraulics[playerid] = true;
		AddVehicleComponent(veh_id, 1087);
		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		SCM(playerid, 0x00FF99FF, "√É√®√§√∞√†√¢√´√®√™√† √≥√±√≤√†√≠√Æ√¢√´√•√≠√†");
	}
	if(clickedid == tune_td[11]) {
		if(TUNE_stereo[playerid]) return 1;
		new veh_id = GetPlayerVehicleID(playerid), num_car;
		if(house_carid[playerid][0] && veh_id == house_carid[playerid][0]) num_car = 0;
		else if(house_carid[playerid][1] && veh_id == house_carid[playerid][1]) num_car = 1;
		else if(house_carid[playerid][2] && veh_id == house_carid[playerid][2]) num_car = 2;
		if(pData[playerid][t_stereo][num_car]) return SCM(playerid, COLOR_LIGHTGREY, "√ë√≤√•√∞√•√Æ√±√®√±√≤√•√¨√† √≥√¶√• √≥√±√≤√†√≠√Æ√¢√´√•√≠√† √≠√† √Ç√†√∏√•√¨ √†√¢√≤√Æ√¨√Æ√°√®√´√•");
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_ERROR, "√éshibka. No use el men√∫ de tonificaci√≥n");
		TUNE_stereo[playerid] = true;
		AddVehicleComponent(veh_id, 1086);
		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		SCM(playerid, 0x00FF99FF, "√ë√≤√•√∞√•√Æ√±√®√±√≤√•√¨√† √≥√±√≤√†√≠√Æ√¢√´√•√≠√†");
	}
	if(clickedid == tune_td[12]) {
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_ERROR, "√éshibka. No use el men√∫ de tonificaci√≥n");
		switch(GetVehicleModel(GetPlayerVehicleID(playerid))) {
			case 483: TextDrawShowForPlayer(playerid, tune_td[30]);
			case 575: {
				TextDrawShowForPlayer(playerid, tune_td[30]);
				TextDrawShowForPlayer(playerid, tune_td[31]);
				TextDrawShowForPlayer(playerid, tune_td[33]);
			}
			case 534, 535, 536, 558, 559, 560, 561, 562, 565, 567, 576: for(new i = 30; i < 35; i ++) TextDrawShowForPlayer(playerid, tune_td[i]);
			default: return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CERROR"√ê√†√ß√§√•√´ √≠√•√§√Æ√±√≤√≥√Ø√•√≠", ""CWHITE"√Ñ√´√ø √Ç√†√∏√•√© √¨√Æ√§√•√´√® √†√¢√≤√Æ√¨√Æ√°√®√´√ø √≠√•√§√Æ√±√≤√≥√Ø√≠√ª √Ø√Æ√™√∞√†√±√Æ√∑√≠√ª√• √∞√†√°√Æ√≤√ª", "Cerrar", "");
		}
		for(new i = 4; i < 30; i ++) TextDrawHideForPlayer(playerid, tune_td[i]);
		TextDrawShowForPlayer(playerid, tune_td[17]);
	}
	if(clickedid == tune_td[30]) {
		if(TUNE_paintjob[playerid] == 0) return 1;
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_ERROR, "√éshibka. No use el men√∫ de tonificaci√≥n");
		TUNE_paintjob[playerid] = 0;
		ChangeVehiclePaintjob(GetPlayerVehicleID(playerid), 0);
		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		SCM(playerid, 0x00FF99FF, "√è√Æ√™√∞√†√±√Æ√∑√≠√†√ø √∞√†√°√Æ√≤√† √≥√±√≤√†√≠√Æ√¢√´√•√≠√†");
		SCM(playerid, 0x00FF99FF, "√Ñ√´√ø √•¬∏ √°√Æ√´√•√• √≤√Æ√∑√≠√Æ√£√Æ √Æ√≤√Æ√°√∞√†√¶√•√≠√®√ø √†√¢√≤√Æ√¨√Æ√°√®√´√º √§√Æ√´√¶√•√≠ √°√ª√≤√º √°√•√´√Æ√£√Æ √∂√¢√•√≤√†");
	}
	if(clickedid == tune_td[31]) {
		if(TUNE_paintjob[playerid] == 1) return 1;
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_ERROR, "√éshibka. No use el men√∫ de tonificaci√≥n");
		TUNE_paintjob[playerid] = 1;
		ChangeVehiclePaintjob(GetPlayerVehicleID(playerid), 1);
		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		SCM(playerid, 0x00FF99FF, "√è√Æ√™√∞√†√±√Æ√∑√≠√†√ø √∞√†√°√Æ√≤√† √≥√±√≤√†√≠√Æ√¢√´√•√≠√†");
		SCM(playerid, 0x00FF99FF, "√Ñ√´√ø √•¬∏ √°√Æ√´√•√• √≤√Æ√∑√≠√Æ√£√Æ √Æ√≤√Æ√°√∞√†√¶√•√≠√®√ø √†√¢√≤√Æ√¨√Æ√°√®√´√º √§√Æ√´√¶√•√≠ √°√ª√≤√º √°√•√´√Æ√£√Æ √∂√¢√•√≤√†");
	}
	if(clickedid == tune_td[32]) {
		if(TUNE_paintjob[playerid] == 2) return 1;
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_ERROR, "√éshibka. No use el men√∫ de tonificaci√≥n");
		TUNE_paintjob[playerid] = 2;
		ChangeVehiclePaintjob(GetPlayerVehicleID(playerid), 2);
		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		SCM(playerid, 0x00FF99FF, "√è√Æ√™√∞√†√±√Æ√∑√≠√†√ø √∞√†√°√Æ√≤√† √≥√±√≤√†√≠√Æ√¢√´√•√≠√†");
		SCM(playerid, 0x00FF99FF, "√Ñ√´√ø √•¬∏ √°√Æ√´√•√• √≤√Æ√∑√≠√Æ√£√Æ √Æ√≤√Æ√°√∞√†√¶√•√≠√®√ø √†√¢√≤√Æ√¨√Æ√°√®√´√º √§√Æ√´√¶√•√≠ √°√ª√≤√º √°√•√´√Æ√£√Æ √∂√¢√•√≤√†");
	}
	if(clickedid == tune_td[13]) {
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_ERROR, "√éshibka. No use el men√∫ de tonificaci√≥n");
		for(new i = 4; i < 30; i ++) TextDrawHideForPlayer(playerid, tune_td[i]);
		TextDrawShowForPlayer(playerid, tune_td[34]);
		TextDrawShowForPlayer(playerid, tune_td[17]);
		TextDrawShowForPlayer(playerid, tune_td[35]);
		TextDrawShowForPlayer(playerid, tune_td[36]);

		TextDrawShowForPlayer(playerid, tune_td[53]);
		TextDrawShowForPlayer(playerid, tune_td[14]);

	}
	if(clickedid == tune_td[36]) {
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_ERROR, "√éshibka. No use el men√∫ de tonificaci√≥n");
		for(new i = 4; i < 55; i ++) {
			if(i < 37) TextDrawHideForPlayer(playerid, tune_td[i]);
			else TextDrawShowForPlayer(playerid, tune_td[i]);
		}
		TextDrawHideForPlayer(playerid, tune_td[53]);
		TextDrawShowForPlayer(playerid, tune_td[41]);
	}
	if(clickedid == tune_td[35]) {
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_ERROR, "√éshibka. No use el men√∫ de tonificaci√≥n");
		SPD(playerid, 924, DIALOG_STYLE_TABLIST_HEADERS, "{FFCD00}√ë√¨√•√≠√† √∂√¢√•√≤√Æ√¢ √†√¢√≤√Æ√¨√Æ√°√®√´√ø", "√Ç√ª√°√•√∞√®√≤√• √∂√¢√•√≤ ¬π1:\n{000000}√ó¬∏√∞√≠√ª√©\n"CWHITE"√Å√•√´√ª√©\n{336699}√ë√®√≠√®√©\n{cc0000}√ä√∞√†√±√≠√ª√©\n{cc3370}√î√®√Æ√´√•√≤√Æ√¢√ª√©\n{ff8800}√é√∞√†√≠√¶√•√¢√ª√©\n{339900}√á√•√´¬∏√≠√ª√©\n{ff66cc}√ê√Æ√ß√Æ√¢√ª√©\n"CWHITE"√Ñ√∞√≥√£√Æ√© √∂√¢√•√≤...", "Seleccione", "Cerrar");
	}
	if(clickedid == tune_td[18]) {
		if(TUNE_wheel_component[playerid] == 1077) return 1;
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_ERROR, "√éshibka. No use el men√∫ de tonificaci√≥n");
		TUNE_wheel_component[playerid] = 1077;
		AddVehicleComponent(GetPlayerVehicleID(playerid), 1077);
		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	}
	if(clickedid == tune_td[19]) {
		if(TUNE_wheel_component[playerid] == 1081) return 1;
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_ERROR, "√éshibka. No use el men√∫ de tonificaci√≥n");
		TUNE_wheel_component[playerid] = 1081;
		AddVehicleComponent(GetPlayerVehicleID(playerid), 1081);
		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	}
	if(clickedid == tune_td[20]) {
		if(TUNE_wheel_component[playerid] == 1073) return 1;
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_ERROR, "√éshibka. No use el men√∫ de tonificaci√≥n");
		TUNE_wheel_component[playerid] = 1073;
		AddVehicleComponent(GetPlayerVehicleID(playerid), 1073);
		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	}
	if(clickedid == tune_td[21]) {
		if(TUNE_wheel_component[playerid] == 1078) return 1;
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_ERROR, "√éshibka. No use el men√∫ de tonificaci√≥n");
		TUNE_wheel_component[playerid] = 1078;
		AddVehicleComponent(GetPlayerVehicleID(playerid), 1078);
		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	}
	if(clickedid == tune_td[22]) {
		if(TUNE_wheel_component[playerid] == 1074) return 1;
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_ERROR, "√éshibka. No use el men√∫ de tonificaci√≥n");
		TUNE_wheel_component[playerid] = 1074;
		AddVehicleComponent(GetPlayerVehicleID(playerid), 1074);
		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	}
	if(clickedid == tune_td[23]) {
		if(TUNE_wheel_component[playerid] == 1082) return 1;
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_ERROR, "√éshibka. No use el men√∫ de tonificaci√≥n");
		TUNE_wheel_component[playerid] = 1082;
		AddVehicleComponent(GetPlayerVehicleID(playerid), 1082);
		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	}
	if(clickedid == tune_td[24]) {
		if(TUNE_wheel_component[playerid] == 1079) return 1;
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_ERROR, "√éshibka. No use el men√∫ de tonificaci√≥n");
		TUNE_wheel_component[playerid] = 1079;
		AddVehicleComponent(GetPlayerVehicleID(playerid), 1079);
		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	}
	if(clickedid == tune_td[25]) {
		if(TUNE_wheel_component[playerid] == 1075) return 1;
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_ERROR, "√éshibka. No use el men√∫ de tonificaci√≥n");
		TUNE_wheel_component[playerid] = 1075;
		AddVehicleComponent(GetPlayerVehicleID(playerid), 1075);
		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	}
	if(clickedid == tune_td[26]) {
		if(TUNE_wheel_component[playerid] == 1083) return 1;
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_ERROR, "√éshibka. No use el men√∫ de tonificaci√≥n");
		TUNE_wheel_component[playerid] = 1083;
		AddVehicleComponent(GetPlayerVehicleID(playerid), 1083);
		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	}
	if(clickedid == tune_td[27]) {
		if(TUNE_wheel_component[playerid] == 1084) return 1;
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_ERROR, "√éshibka. No use el men√∫ de tonificaci√≥n");
		TUNE_wheel_component[playerid] = 1084;
		AddVehicleComponent(GetPlayerVehicleID(playerid), 1084);
		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	}
	if(clickedid == tune_td[28]) {
		if(TUNE_wheel_component[playerid] == 1080) return 1;
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_ERROR, "√éshibka. No use el men√∫ de tonificaci√≥n");
		TUNE_wheel_component[playerid] = 1080;
		AddVehicleComponent(GetPlayerVehicleID(playerid), 1080);
		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	}
	if(clickedid == tune_td[29]) {
		if(TUNE_wheel_component[playerid] == 1076) return 1;
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_ERROR, "√éshibka. No use el men√∫ de tonificaci√≥n");
		TUNE_wheel_component[playerid] = 1076;
		AddVehicleComponent(GetPlayerVehicleID(playerid), 1076);
		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	}
	if(clickedid == tune_td[7]) {
		if(TUNE_neon_component[playerid] != -1 || TUNE_wheel_component[playerid] != 0 || TUNE_hydraulics[playerid] || TUNE_stereo[playerid] || TUNE_paintjob[playerid] != -1 || TUNE_carcolor_1[playerid] != -1 || TUNE_carcolor_2[playerid] != -1) 
			return SPD(playerid, 164, DIALOG_STYLE_MSGBOX, ""CERROR"√è√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√•", ""CWHITE"√ì √Ç√†√± √≠√† √†√¢√≤√Æ√¨√Æ√°√®√´√• √•√±√≤√º √≠√•√±√Æ√µ√∞√†√≠¬∏√≠√≠√ª√© √≤√æ√≠√®√≠√£. √Ö√±√´√® √Ç√ª √¢√ª√©√§√®√≤√• √®√ß √∞√•√¶√®√¨√†,\n√≥√±√≤√†√≠√Æ√¢√´√•√≠√≠√ª√© √≤√æ√≠√®√≠√£ √°√≥√§√•√≤ √≥S√≠√´¬∏√≠. Quieres √Ø√∞√Æ√§√Æ√´√¶√®√≤√º?", "S√≠", "No");
		in_menutune[playerid] = false;
		TogglePlayerControllable(playerid, 1);
		CancelSelectTextDraw(playerid);
		SetCameraBehindPlayer(playerid);
		for(new i = 0; i < 55; i ++) TextDrawHideForPlayer(playerid, tune_td[i]);
		SCM(playerid, 0xFF6640FF, "√Ç√ª √¢√ª√∏√´√® √®√ß √∞√•√¶√®√¨√† √≤√æ√≠√®√≠√£√† √†√¢√≤√Æ√¨√Æ√°√®√´√ø");
	}
	if(clickedid == Text: INVALID_TEXT_DRAW && panelauto_en[playerid]) {
		if(podpanel_in[playerid]) {
			for(new i = 0; i < 16; i ++) {
				if(i <= 7) PlayerTextDrawHide(playerid, tdplayer_panel_auto[i][playerid]);
				if(i < 11) TextDrawShowForPlayer(playerid, td_panel_auto[i]);
				if(i >= 11) TextDrawHideForPlayer(playerid, td_panel_auto[i]);
			}
			TextDrawShowForPlayer(playerid, td_panel_auto[16]);
			TextDrawShowForPlayer(playerid, td_panel_auto[17]);
			TextDrawShowForPlayer(playerid, td_panel_auto[18]);
			TextDrawShowForPlayer(playerid, td_panel_auto[19]);
			podpanel_in[playerid] = false;
			SelectTextDraw(playerid, 0x77AA55FF);
		}
		else {
			for(new i = 0; i < 20; i ++) {
				if(i < 8) PlayerTextDrawHide(playerid, tdplayer_panel_auto[i][playerid]);
				TextDrawHideForPlayer(playerid, td_panel_auto[i]);
			} CancelSelectTextDraw(playerid);
			panelauto_en[playerid] = false;
		}
	}
	if(clickedid == td_panel_auto[4]) {
		for(new i = 0; i < 20; i ++) {
			if(i < 8) PlayerTextDrawHide(playerid, tdplayer_panel_auto[i][playerid]);
			TextDrawHideForPlayer(playerid, td_panel_auto[i]);
		} CancelSelectTextDraw(playerid);
		panelauto_en[playerid] = false;
		if(podpanel_in[playerid]) podpanel_in[playerid] = false;
	}
	if(clickedid == td_panel_auto[18]) {
		new vehicleid = GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective;
		GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
		if(bonnet_open[vehicleid]) {
			bonnet_open[vehicleid] = false;
			SetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, 0, boot, objective);
		}
		else {
			bonnet_open[vehicleid] = true;
			SetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, 1, boot, objective);
		}
	}
	if(clickedid == td_panel_auto[19]) {
		new vehicleid = GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective;
		GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
		if(boot_open[vehicleid]) {
			boot_open[vehicleid] = false;
			SetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, 0, objective);
		}
		else {
			boot_open[vehicleid] = true;
			SetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, 1, objective);
		}
	}
	if(clickedid == td_panel_auto[9]) {
		podpanel_in[playerid] = true;
		new vehicleid = GetPlayerVehicleID(playerid);
		if(drivewind_open[vehicleid]) PlayerTextDrawColor(playerid, tdplayer_panel_auto[2][playerid], 0x00CC00FF);
		else PlayerTextDrawColor(playerid, tdplayer_panel_auto[2][playerid], 0xFF4400FF);
		if(passwind_open[vehicleid]) PlayerTextDrawColor(playerid, tdplayer_panel_auto[3][playerid], 0x00CC00FF);
		else PlayerTextDrawColor(playerid, tdplayer_panel_auto[3][playerid], 0xFF4400FF);
		if(backleftwind_open[vehicleid]) PlayerTextDrawColor(playerid, tdplayer_panel_auto[1][playerid], 0x00CC00FF);
		else PlayerTextDrawColor(playerid, tdplayer_panel_auto[1][playerid], 0xFF4400FF);
		if(backrightwind_open[vehicleid]) PlayerTextDrawColor(playerid, tdplayer_panel_auto[0][playerid], 0x00CC00FF);
		else PlayerTextDrawColor(playerid, tdplayer_panel_auto[0][playerid], 0xFF4400FF);
		for(new i = 0; i < 16; i ++) {
			if(i < 4) PlayerTextDrawShow(playerid, tdplayer_panel_auto[i][playerid]);
			if(i <= 10 && i >= 6) TextDrawHideForPlayer(playerid, td_panel_auto[i]);
			if(i >= 11) TextDrawShowForPlayer(playerid, td_panel_auto[i]);
		}
		TextDrawHideForPlayer(playerid, td_panel_auto[16]);
		TextDrawHideForPlayer(playerid, td_panel_auto[17]);
		TextDrawHideForPlayer(playerid, td_panel_auto[18]);
		TextDrawHideForPlayer(playerid, td_panel_auto[19]);
	}
	if(clickedid == td_panel_auto[10]) {
		podpanel_in[playerid] = true;
		new vehicleid = GetPlayerVehicleID(playerid);
		if(drivedoor_open[vehicleid]) PlayerTextDrawColor(playerid, tdplayer_panel_auto[6][playerid], 0x00CC00FF);
		else PlayerTextDrawColor(playerid, tdplayer_panel_auto[6][playerid], 0xFF4400FF);
		if(passdoor_open[vehicleid]) PlayerTextDrawColor(playerid, tdplayer_panel_auto[7][playerid], 0x00CC00FF);
		else PlayerTextDrawColor(playerid, tdplayer_panel_auto[7][playerid], 0xFF4400FF);
		if(backleftdoor_open[vehicleid]) PlayerTextDrawColor(playerid, tdplayer_panel_auto[5][playerid], 0x00CC00FF);
		else PlayerTextDrawColor(playerid, tdplayer_panel_auto[5][playerid], 0xFF4400FF);
		if(backrightdoor_open[vehicleid]) PlayerTextDrawColor(playerid, tdplayer_panel_auto[4][playerid], 0x00CC00FF);
		else PlayerTextDrawColor(playerid, tdplayer_panel_auto[4][playerid], 0xFF4400FF);
		for(new i = 0; i < 16; i ++) {
			if(i >= 4 && i <= 7) PlayerTextDrawShow(playerid, tdplayer_panel_auto[i][playerid]);
			if(i <= 10 && i >= 6) TextDrawHideForPlayer(playerid, td_panel_auto[i]);
			if(i >= 11) TextDrawShowForPlayer(playerid, td_panel_auto[i]);
		}
		TextDrawHideForPlayer(playerid, td_panel_auto[16]);
		TextDrawHideForPlayer(playerid, td_panel_auto[17]);
		TextDrawHideForPlayer(playerid, td_panel_auto[18]);
		TextDrawHideForPlayer(playerid, td_panel_auto[19]);
	}
	if(clickedid == td_panel_auto[15]) {
		for(new i = 0; i < 16; i ++) {
			if(i <= 7) PlayerTextDrawHide(playerid, tdplayer_panel_auto[i][playerid]);
			if(i < 11) TextDrawShowForPlayer(playerid, td_panel_auto[i]);
			if(i >= 11) TextDrawHideForPlayer(playerid, td_panel_auto[i]);
		}
		TextDrawShowForPlayer(playerid, td_panel_auto[16]);
		TextDrawShowForPlayer(playerid, td_panel_auto[17]);
		TextDrawShowForPlayer(playerid, td_panel_auto[18]);
		TextDrawShowForPlayer(playerid, td_panel_auto[19]);
		if(podpanel_in[playerid]) podpanel_in[playerid] = false;
	}

	if(clickedid == foodbomj_[3]) {
		for(new i = 0; i < 7; i ++) TextDrawHideForPlayer(playerid, foodbomj_[i]);
		CancelSelectTextDraw(playerid);
		bomjfood_use[playerid] = false;
		if(pData[playerid][pCash] < 50) return SCM(playerid, COLOR_LIGHTGREY, "√ë√≤√Æ√®√¨√Æ√±√≤√º √±√Æ√™√† √±√Æ√±√≤√†√¢√´√ø√•√≤ 50$");
		if(pData[playerid][pSex] == 1)
		{
			MeAction(playerid, "√™√≥√Ø√®√´ √±√Æ√™");
			SetPlayerChatBubble(playerid, "√™√≥√Ø√®√´ √±√Æ√™", COLOR_PURPLE, 4.0, 5000);
		}
		else 
		{
			MeAction(playerid, "√™√≥√Ø√®√´√† √±√Æ√™");
			SetPlayerChatBubble(playerid, "√™√≥√Ø√®√´√† √±√Æ√™", COLOR_PURPLE, 4.0, 5000);
		}
		GameTextForPlayer(playerid, "~b~+ 20 hp", 2000, 6);
		new Float: health; GetPlayerHealth(playerid, health);
		SetPlayerHealth(playerid, (health + 20 > 100.0 ? (100.0) : (health + 20)));
		Hook_GivePlayerMoney(playerid, -50);
		GameTextForPlayer(playerid, "~r~-50$", 3000, 1);

		if(GetPVarInt(playerid, "twomarker"))
		{
			food2Bank += 50;
			mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `food_bank_2` = %d", food2Bank);
			mysql_tquery(mysql_Handle, string);
			DeletePVar(playerid, "twomarker");
		}
		else
		{
			food1Bank += 50;
			mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `food_bank` = %d", food1Bank);
			mysql_tquery(mysql_Handle, string);
		}

		ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0, 1);
		PlayerPlaySound(playerid, 32200, 0.0, 0.0, 0.0);
	}
	if(clickedid == foodbomj_[2]) {
		for(new i = 0; i < 7; i ++) TextDrawHideForPlayer(playerid, foodbomj_[i]);
		CancelSelectTextDraw(playerid);
		bomjfood_use[playerid] = false;
		if(pData[playerid][pCash] < 100) return SCM(playerid, COLOR_LIGHTGREY, "√ë√≤√Æ√®√¨√Æ√±√≤√º √°√≥√∞√£√•√∞√† √±√Æ√±√≤√†√¢√´√ø√•√≤ 100$");
		if(pData[playerid][pSex] == 1) MeAction(playerid, "√™√≥√Ø√®√´ √°√≥√∞√£√•√∞"), SetPlayerChatBubble(playerid, "√™√≥√Ø√®√´ √°√≥√∞√£√•√∞", COLOR_PURPLE, 4.0, 5000);
		else MeAction(playerid, "√™√≥√Ø√®√´√† √°√≥√∞√£√•√∞"), SetPlayerChatBubble(playerid, "√™√≥√Ø√®√´√† √°√≥√∞√£√•√∞", COLOR_PURPLE, 4.0, 5000);
		GameTextForPlayer(playerid, "~b~+ 30 hp", 2000, 6);
		new Float: health; GetPlayerHealth(playerid, health);
		SetPlayerHealth(playerid, (health + 30 > 100.0 ? (100.0) : (health + 30)));
		Hook_GivePlayerMoney(playerid, -100);
		GameTextForPlayer(playerid, "~r~-100$", 3000, 1);
		if(GetPVarInt(playerid, "twomarker")) {
			food2Bank += 100;
			mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `food_bank_2` = %d", food2Bank);
			mysql_tquery(mysql_Handle, string);
			DeletePVar(playerid, "twomarker");
		}
		else {
			food1Bank += 100;
			mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `food_bank` = %d", food1Bank);
			mysql_tquery(mysql_Handle, string);
		}
		ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0, 1);
		PlayerPlaySound(playerid, 32200, 0.0, 0.0, 0.0);
	}
	if((clickedid == Text:INVALID_TEXT_DRAW && bomjfood_use[playerid]) || clickedid == foodbomj_[4]) {
		for(new i = 0; i < 7; i ++) TextDrawHideForPlayer(playerid, foodbomj_[i]);
		CancelSelectTextDraw(playerid);
		bomjfood_use[playerid] = false;
	}
	if(clickedid == Text:INVALID_TEXT_DRAW && used_NRP_phone[playerid] != 0) {
		if(pData[playerid][pSex] == 1) MeAction(playerid, "√≥√°√∞√†√´ √¢ √™√†√∞√¨√†√≠ √≤√•√´√•√¥√Æ√≠ "CCYAN"Samsung");
		else MeAction(playerid, "√≥√°√∞√†√´√† √¢ √™√†√∞√¨√†√≠ √≤√•√´√•√¥√Æ√≠ "CCYAN"Samsung");
		SetPlayerChatBubble(playerid, "√ì√°√®√∞√†√•√≤ √≤√•√´√•√¥√Æ√≠", COLOR_PURPLE, 4.0, 5000);
		used_NRP_phone[playerid] = 0;
		CancelSelectTextDraw(playerid);
		TogglePlayerControllable(playerid, 1);
		for(new i = 0; i < 28; i ++) TextDrawHideForPlayer(playerid, PHONETD[i]);
	}

	if(clickedid == Text:INVALID_TEXT_DRAW && (GetPVarInt(playerid, "Register_ChooseSkin")==1 || player_isselectskin[playerid]))
	{
		SelectTextDraw(playerid, COLOR_PALEGREEN);
		return 1;
	}
	if(clickedid == td_select_skin[13])
	{
		if(GetPVarInt(playerid, "Register_ChooseSkin")==1)
		{
			number_skin[playerid] ++;
			if(GetPVarInt(playerid, #reg_sex) == 1)
			{
				if(number_skin[playerid] == 11)
				number_skin[playerid] = 1;
			}
			else
			{
				if(number_skin[playerid] == 20)
				number_skin[playerid] = 11;
			}
			switch(number_skin[playerid]) {
				// √å√≥√¶√±√™√®√•
				case 1: SetPlayerSkin(playerid, 78);
				case 2: SetPlayerSkin(playerid, 79);
				case 3: SetPlayerSkin(playerid, 134);
				case 4: SetPlayerSkin(playerid, 135);
				case 5: SetPlayerSkin(playerid, 136);
				case 6: SetPlayerSkin(playerid, 137);
				case 7: SetPlayerSkin(playerid, 160);
				case 8: SetPlayerSkin(playerid, 200);
				case 9: SetPlayerSkin(playerid, 212);
				case 10: SetPlayerSkin(playerid, 230);
				// √Ü√•√≠√±√™√®√•
				case 11: SetPlayerSkin(playerid, 9);
				case 12: SetPlayerSkin(playerid, 13);
				case 13: SetPlayerSkin(playerid, 63);
				case 14: SetPlayerSkin(playerid, 64);
				case 15: SetPlayerSkin(playerid, 85);
				case 16: SetPlayerSkin(playerid, 88);
				case 17: SetPlayerSkin(playerid, 90);
				case 18: SetPlayerSkin(playerid, 151);
				case 19: SetPlayerSkin(playerid, 157);
			}
			SetPVarInt(playerid, "RegCurrentSkin", GetPlayerSkin(playerid));
			return 1;
		}

		if(player_isselectskin[playerid])
		{
	    	selectedskin[playerid] ++;
			new str[20];
			if(pData[playerid][pSex] == 1)
			{
				if(selectedskin[playerid] >= 70) 
					selectedskin[playerid] = 0;
				SetPlayerSkin(playerid,SkinMen[selectedskin[playerid]][0]);
				format(str, sizeof str, "%d$", SkinMen[selectedskin[playerid]][1]);
			}
			else
			{
				if(selectedskin[playerid] >= 56) 
					selectedskin[playerid] = 0;
				SetPlayerSkin(playerid,SkinMale[selectedskin[playerid]][0]);
				format(str, sizeof str, "%d$", SkinMale[selectedskin[playerid]][1]);
			} 
			PlayerTextDrawSetString(playerid, price_clothes[playerid], str);
			return 1;
		}
	    
	}
	if(clickedid == td_select_skin[14])
	{
		if(GetPVarInt(playerid, "Register_ChooseSkin")==1)
		{
			number_skin[playerid] --;
			if(GetPVarInt(playerid, #reg_sex) == 1)
			{
				if(number_skin[playerid] == 0)
				number_skin[playerid] = 10;
			}
			else
			{
				if(number_skin[playerid] == 10)
				number_skin[playerid] = 19;
			}
			switch(number_skin[playerid]) {
				// √å√≥√¶√±√™√®√•
				case 1: SetPlayerSkin(playerid, 78);
				case 2: SetPlayerSkin(playerid, 79);
				case 3: SetPlayerSkin(playerid, 134);
				case 4: SetPlayerSkin(playerid, 135);
				case 5: SetPlayerSkin(playerid, 136);
				case 6: SetPlayerSkin(playerid, 137);
				case 7: SetPlayerSkin(playerid, 160);
				case 8: SetPlayerSkin(playerid, 200);
				case 9: SetPlayerSkin(playerid, 212);
				case 10: SetPlayerSkin(playerid, 230);
				// √Ü√•√≠√±√™√®√•
				case 11: SetPlayerSkin(playerid, 9);
				case 12: SetPlayerSkin(playerid, 13);
				case 13: SetPlayerSkin(playerid, 63);
				case 14: SetPlayerSkin(playerid, 64);
				case 15: SetPlayerSkin(playerid, 85);
				case 16: SetPlayerSkin(playerid, 88);
				case 17: SetPlayerSkin(playerid, 90);
				case 18: SetPlayerSkin(playerid, 151);
				case 19: SetPlayerSkin(playerid, 157);
			}
			SetPVarInt(playerid, "RegCurrentSkin", GetPlayerSkin(playerid));
			return 1;
		}

		if(player_isselectskin[playerid])
		{
			if(pData[playerid][pSex] == 1)
			{
				if(selectedskin[playerid] <= 0) selectedskin[playerid] = 70;
				selectedskin[playerid] --;
				SetPlayerSkin(playerid,SkinMen[selectedskin[playerid]][0]);
				new strasas[20];
				format(strasas, sizeof strasas, "%d$", SkinMen[selectedskin[playerid]][1]);
				PlayerTextDrawSetString(playerid, price_clothes[playerid], strasas);
			}
			else
			{
				if(selectedskin[playerid] <= 0) selectedskin[playerid] = 56;
				selectedskin[playerid] --;
				SetPlayerSkin(playerid,SkinMale[selectedskin[playerid]][0]);
				new strasas[20];
				format(strasas, sizeof strasas, "%d$", SkinMale[selectedskin[playerid]][1]);
				PlayerTextDrawSetString(playerid, price_clothes[playerid], strasas);
			}
			return 1;
		}
	}
	if(clickedid == td_select_skin[9] || clickedid == Text:INVALID_TEXT_DRAW)
	{
		if(GetPVarInt(playerid, "Register_ChooseSkin")==1) return SCM(playerid, COLOR_LIGHTGREY, "√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø √Ç√ª √§√Æ√´√¶√≠√ª Seleccione √¢√≠√•√∏√≠√Æ√±√≤√º √±√¢√Æ√•√£√Æ √Ø√•√∞√±√Æ√≠√†√¶√†");
		if(player_isselectskin[playerid])
		{
			if(GetPVarInt(playerid, "victim")) {
				SetPlayerInterior(playerid,5);
				SetPlayerPos(playerid,222.3489,-8.5845,1002.2109);
				SetPlayerFacingAngle(playerid,266.7302);
			}
			else if(GetPVarInt(playerid, "binco")) {
				SetPlayerPos(playerid, 217.1416,-101.2271,1005.2578);
				SetPlayerFacingAngle(playerid, 43.6968);
				SetPlayerInterior(playerid, 15);
			}
			else {
				SetPlayerInterior(playerid,18);
				SetPlayerPos(playerid,148.7846,-73.6173,1001.8047);
				SetPlayerFacingAngle(playerid, 226.2650);
			}
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerSkin(playerid,pData[playerid][pChar]);
			TogglePlayerControllable(playerid, true);
			CancelSelectTextDraw(playerid);
			PlayerTextDrawHide(playerid, price_clothes[playerid]);
			player_isselectskin[playerid] = false;
			SetCameraBehindPlayer(playerid);
			for(new i = 0; i < 17; i ++) TextDrawHideForPlayer(playerid, td_select_skin[i]);
			PlayerTextDrawHide(playerid, text_selectskin[playerid]);
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~EXITING...", 1500, 3);
			return 1;
		}
	}
	if(clickedid == td_select_skin[10]) {
		if(GetPVarInt(playerid, "Register_ChooseSkin")==1)
		{
			DeletePVar(playerid, "Register_ChooseSkin");
			number_skin[playerid] = 0;

			PlayerPlaySound(playerid, 1077, 0.0, 0.0, 0.0);
		    CancelSelectTextDraw(playerid);
		    for(new i = 0; i < 17; i ++) TextDrawHideForPlayer(playerid, td_select_skin[i]);
			PlayerTextDrawHide(playerid, text_selectskin[playerid]);

			RegistrationPlayer(playerid, GetPVarInt(playerid, "RegCurrentSkin"));
			DeletePVar(playerid, "RegCurrentSkin");
			return 1;
		}
		if(player_isselectskin[playerid])
		{
			new cost = SkinMen[selectedskin[playerid]][1];
			if(pData[playerid][pSex] == 1) cost = SkinMen[selectedskin[playerid]][1];
			else cost = SkinMale[selectedskin[playerid]][1];
			if(BizEnter{playerid} == 255) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [015]");
			if(pData[playerid][pCash] < cost) return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Æ√Ø√´√†√≤√ª √±√≤√Æ√®√¨√Æ√±√≤√® √Ω√≤√Æ√© √¢√≠√•√∏√≠√Æ√±√≤√®");
			if(SkinMen[selectedskin[playerid]][0] == pData[playerid][pChar]) return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± √≥√¶√• √≥√±√≤√†√≠√Æ√¢√´√•√≠√† √Ω√≤√† √¢√≠√•√∏√≠√Æ√±√≤√º");
            
            new skins;
            for(new i =0; i< 20; i++) {
            	if(inv_info[playerid][i_type][i]==inv_info[playerid][in_amodel][i]+7 && inv_info[playerid][i_type][i] != 0) 
            		skins++;
            }
            if(skins >= 5) return SCM(playerid,COLOR_LIGHTGREY,"√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √≠√Æ√±√®√≤√º √°√Æ√´√•√• 5-√≤√® √±√™√®√≠√Æ√¢ √± √±√Æ√°√Æ√©");

            TogglePlayerControllable(playerid, true);
            SetCameraBehindPlayer(playerid);
			if(GetPVarInt(playerid,"victim")) {
				SetPlayerInterior(playerid,5);
				SetPlayerPos(playerid,222.3489,-8.5845,1002.2109);
				SetPlayerFacingAngle(playerid,266.7302);
			}
			else if(GetPVarInt(playerid, "binco")) {
				SetPlayerPos(playerid, 217.1416,-101.2271,1005.2578);
				SetPlayerFacingAngle(playerid, 43.6968);
				SetPlayerInterior(playerid, 15);
			}
			else {
				SetPlayerInterior(playerid,18);
				SetPlayerPos(playerid,148.7846,-73.6173,1001.8047);
				SetPlayerFacingAngle(playerid, 226.2650);
			}
			SetPlayerVirtualWorld(playerid, 0);
			AddSkinToInventory(playerid, SkinMen[selectedskin[playerid]][0]);
			if(pData[playerid][pMember] > 0) SetPlayerSkin(playerid, pData[playerid][pModel]);
			else SetPlayerSkin(playerid, pData[playerid][pChar]);
			CancelSelectTextDraw(playerid);
			PlayerTextDrawHide(playerid, price_clothes[playerid]);
			player_isselectskin[playerid] = false;
			format(string, 50, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~-%d$", cost);
			GameTextForPlayer(playerid, string, 3000, 3);
			for(new i = 0; i < 17; i ++) TextDrawHideForPlayer(playerid, td_select_skin[i]);
			PlayerTextDrawHide(playerid, text_selectskin[playerid]);
			Hook_GivePlayerMoney(playerid, -cost);

			BizInfo[BizEnter{playerid}][bPribil] += cost/4;
			BizInfo[BizEnter{playerid}][bBank] += cost/4;
			UpdateBusinessData(BizEnter{playerid}, "bPribil", BizInfo[BizEnter{playerid}][bPribil]);
			if(BizInfo[BizEnter{playerid}][bBank] > 10000000) BizInfo[BizEnter{playerid}][bBank] = 10000000;
			UpdateBusinessData(BizEnter{playerid}, "bBank", BizInfo[BizEnter{playerid}][bBank]);

			SCM(playerid, -1, "√Ç√ª √Ø√∞√®√Æ√°√∞√•√´√® √≠√Æ√¢√≥√æ √¢√≠√•√∏√≠√Æ√±√≤√º √§√´√ø √±√¢√Æ√•√£√Æ √Ø√•√∞√±√Æ√≠√†√¶√†");
			SCM(playerid,-1,"√Ç√±√• √±√¢√Æ√® √¢√•√π√® √Ç√ª √¨√Æ√¶√•√≤√• √Ø√Æ√±√¨√Æ√≤√∞√•√≤√º √¢ √®√≠√¢√•√≠√≤√†√∞√• "CMAIN"(/inv)");
			return 1;
		}
	}

	if(clickedid == PHONETD[19]) SPD(playerid, 299, DIALOG_STYLE_INPUT, ""CLITEBLUE"√í√•√´√•√¥√Æ√≠√≠√ª√© √ß√¢√Æ√≠√Æ√™", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¨√•√∞ √†√°√Æ√≠√•√≠√≤√† √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
	if(clickedid == PHONETD[22]) SPD(playerid, 7495, DIALOG_STYLE_INPUT, ""CLITEBLUE"√é√≤√Ø√∞√†√¢√´√•√≠√®√• √±√Æ√Æ√°√π√•√≠√®√ø", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¨√•√∞, √≠√† √™√Æ√≤√Æ√∞√ª√© √µ√Æ√≤√®√≤√• √Æ√≤√Ø√∞√†√¢√®√≤√º √±√Æ√Æ√°√π√•√≠√®√•:", "S√≠√´√•√•", "Cerrar");
	if(clickedid == PHONETD[24]) callcmd::book(playerid);
	if(clickedid == PHONETD[25]) PayMentsAuthorization(playerid);
	return 1;
}
CB: open_phone_inv(playerid) return callcmd::phone(playerid);
CB: edit_menu_fix(playerid) return ao_edit_menu(playerid);

CB: load_marks() {
	new rows, carnum,org,text[15];
	cache_get_row_count(rows);
	for(new i = 0; i < rows; i ++) {
		cache_get_value_name(i, "text", text);
		cache_get_value_name_int(i, "orgnum", org);
		cache_get_value_name_int(i, "numcar", carnum);
		format(markauto[org][carnum],15,text);
		mark3d[org][carnum] = CreateDynamic3DTextLabel(text, -1, 0.0, -2.0, 0.25, 40, INVALID_PLAYER_ID, markcarid[org][carnum]);
	}
	return 1;
}

CB: load_pack_data() {
	new rows;
	cache_get_row_count(rows);
	if(!rows) return 1;
	for(new i = 0, idpack = 1; i < rows; i ++, idpack ++) {
		cache_get_value_name_int(i, "amount", pack_amount[idpack]);
		if(pack_amount[idpack]==50000) pack_name[idpack]="√ä√†√∞√¨√†√≠√≠√ª√• √∞√†√±√µ√Æ√§√ª";
		else if(pack_amount[idpack]==165000) pack_name[idpack]="√á√†√≠√†√∑√™√† √∞√†√°√Æ√≤√ø√£√®";
		else if(pack_amount[idpack]==400000) pack_name[idpack]="√ë√•√∞√º¬∏√ß√≠√ª√• √≠√†√¨√•√∞√•√≠√®√ø";
		else if(pack_amount[idpack]==1700000) pack_name[idpack]="√Ç√•√±√Æ√¨√ª√© √°√æ√§√¶√•√≤";
		else if(pack_amount[idpack]==26000000) pack_name[idpack]="√å√®√´√´√®√†√∞√§√•√∞";
	}
	return 1;
}

CB: load_legoobjects() {
	new rows, modelid, Float: pos_obj[3], Float: rot_obj[3];
	cache_get_row_count(rows);
	if(!rows) return 1;
	for(new i = 0; i < rows; i ++) {
		cache_get_value_name_int(i, "modelid", modelid);
		cache_get_value_name_float(i, "pos_x", pos_obj[0]);
		cache_get_value_name_float(i, "pos_y", pos_obj[1]);
		cache_get_value_name_float(i, "pos_z", pos_obj[2]);
		cache_get_value_name_float(i, "rot_x", rot_obj[0]);
		cache_get_value_name_float(i, "rot_y", rot_obj[1]);
		cache_get_value_name_float(i, "rot_z", rot_obj[2]);
		CreateDynamicObject(modelid, pos_obj[0], pos_obj[1], pos_obj[2], rot_obj[0], rot_obj[1], rot_obj[2]);
	}
	return 1;
}

stock createJailKeyObj() {
	new Float: posX, Float: posY, Float: posZ;
	switch(pos_Jkey) {
		case 0: {
			posX = -63.2487;
			posY = 2421.2600;
			posZ = 1183.1563;
		}
		case 1: {
			posX = -91.3150;
			posY = 2428.8372;
			posZ = 1183.1563;
		}
		case 2: {
			posX = -96.0982;
			posY = 2433.5178;
			posZ = 1179.3195;
		}
		case 3: {
			posX = -85.6854;
			posY = 2434.7124;
			posZ = 1180.1295;
		}
		case 4: {
			posX = -78.0225;
			posY = 2435.9443;
			posZ = 1179.3195;
		}
		case 5: {
			posX = -63.2844;
			posY = 2448.4587;
			posZ = 1183.1563;
		}
		case 6: {
			posX = -91.1633;
			posY = 2440.3774;
			posZ = 1183.1563;
		}
		case 7: {
			posX = -80.4944;
			posY = 2443.7024;
			posZ = 1183.1563;
		}
		case 8: {
			posX = -68.0692;
			posY = 2446.5261;
			posZ = 1183.1563;
		}
		case 9: {
			posX = -95.2133;
			posY = 2440.4192;
			posZ = 1179.3195;
		}
	}

	if(pos_Jkey < 9) pos_Jkey ++;
	else pos_Jkey = 0;

	if(IsValidDynamicObject(jkey_objid)) {
		DestroyDynamic3DTextLabel(jkey_3d);
		DestroyDynamicObject(jkey_objid);
	}

	posZ -= 0.9;
	jkey_3d = CreateDynamic3DTextLabel("√Ç√ß√ø√≤√º: {339933}/k", 0xAC7339BA, posX, posY, posZ, 1.05, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 8, 8);
	jkey_objid = CreateDynamicObject(11746, posX, posY, posZ, 0, 0, 0, 8, 8, -1, 5.05, 5.05);
}
stock createJailCardObj() {
	new Float: posX, Float: posY, Float: posZ;
	switch(pos_Jcard) {
		case 0: {
			posX = 1780.3947;
			posY = -1531.7242;
			posZ = 9.5509;
		}
		case 1: {
			posX = 1782.1611;
			posY = -1539.2711;
			posZ = 9.8724;
		}
		case 2: {
			posX = 1793.4404;
			posY = -1542.3671;
			posZ = 9.9461;
		}
		case 3: {
			posX = 1803.2930;
			posY = -1532.7312;
			posZ = 11.5369;
		}
		case 4: {
			posX = 1771.6029;
			posY = -1544.3157;
			posZ = 9.4369;
		}
		case 5: {
			posX = 1750.3634;
			posY = -1546.2700;
			posZ = 9.4696;
		}
		case 6: {
			posX = 1759.2463;
			posY = -1555.7341;
			posZ = 9.4503;
		}
		case 7: {
			posX = 1750.3206;
			posY = -1538.8894;
			posZ = 9.4613;
		}
		case 8: {
			posX = 1776.8375;
			posY = -1543.4408;
			posZ = 9.9075;
		}
		case 9: {
			posX = 1810.8384;
			posY = -1538.6382;
			posZ = 12.8557;
		}
	}

	if(pos_Jcard < 9) pos_Jcard ++;
	else pos_Jcard = 0;

	if(IsValidDynamicObject(jcard_objid)) {
		DestroyDynamic3DTextLabel(jcard_3d);
		DestroyDynamicObject(jcard_objid);
	}

	posZ -= 0.9;
	jcard_3d = CreateDynamic3DTextLabel("√Ç√ß√ø√≤√º: {339933}/k", 0xAC7339BA, posX, posY, posZ, 1.05, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
	jcard_objid = CreateDynamicObject(19792, posX, posY, posZ, 0, 0, 0, 0, 0, -1, 5.05, 5.05);
}
stock KV_CreateDetailsLifts() {
	// floors 1-12
	lift_main_obj[0] = CreateDynamicObject(18755, 287.908997, -1609.553955, 47.879997 + ELEVATOR_OFFSET, 0.000000, 0.000000, 79.898071);
	lift_door[0][0] = CreateDynamicObject(18757, 287.887451, -1609.585780, 47.879997, 0.000045, 0.000015, 80.299987);
	lift_door[0][1] = CreateDynamicObject(18756, 287.880798, -1609.639536, 47.879997, 0.000045, 0.000015, 80.299987);

	lift_main_obj[1] = CreateDynamicObject(18755, 287.908997, -1609.553955, 52.379997 + ELEVATOR_OFFSET, 0.000000, 0.000000, 79.898071);
	lift_door[1][0] = CreateDynamicObject(18757, 287.887451, -1609.585780, 52.379997, 0.000045, 0.000015, 80.299987);
	lift_door[1][1] = CreateDynamicObject(18756, 287.880798, -1609.639536, 52.379997, 0.000045, 0.000015, 80.299987);

	lift_main_obj[2] = CreateDynamicObject(18755, 287.908997, -1609.553955, 56.879997 + ELEVATOR_OFFSET, 0.000000, 0.000000, 79.898071);
	lift_door[2][0] = CreateDynamicObject(18757, 287.887451, -1609.585780, 56.879997, 0.000045, 0.000015, 80.299987);
	lift_door[2][1] = CreateDynamicObject(18756, 287.880798, -1609.639536, 56.879997, 0.000045, 0.000015, 80.299987);

	lift_main_obj[3] = CreateDynamicObject(18755, 287.908997, -1609.553955, 61.379997 + ELEVATOR_OFFSET, 0.000000, 0.000000, 79.898071);
	lift_door[3][0] = CreateDynamicObject(18757, 287.887451, -1609.585780, 61.379997, 0.000045, 0.000015, 80.299987);
	lift_door[3][1] = CreateDynamicObject(18756, 287.880798, -1609.639536, 61.379997, 0.000045, 0.000015, 80.299987);

	lift_main_obj[4] = CreateDynamicObject(18755, 287.908997, -1609.553955, 65.879997 + ELEVATOR_OFFSET, 0.000000, 0.000000, 79.898071);
	lift_door[4][0] = CreateDynamicObject(18757, 287.887451, -1609.585780, 65.879997, 0.000045, 0.000015, 80.299987);
	lift_door[4][1] = CreateDynamicObject(18756, 287.880798, -1609.639536, 65.879997, 0.000045, 0.000015, 80.299987);

	lift_main_obj[5] = CreateDynamicObject(18755, 287.908997, -1609.553955, 70.379997 + ELEVATOR_OFFSET, 0.000000, 0.000000, 79.898071);
	lift_door[5][0] = CreateDynamicObject(18757, 287.887451, -1609.585780, 70.379997, 0.000045, 0.000015, 80.299987);
	lift_door[5][1] = CreateDynamicObject(18756, 287.880798, -1609.639536, 70.379997, 0.000045, 0.000015, 80.299987);

	lift_main_obj[6] = CreateDynamicObject(18755, 287.908997, -1609.553955, 74.879997 + ELEVATOR_OFFSET, 0.000000, 0.000000, 79.898071);
	lift_door[6][0] = CreateDynamicObject(18757, 287.887451, -1609.585780, 74.879997, 0.000045, 0.000015, 80.299987);
	lift_door[6][1] = CreateDynamicObject(18756, 287.880798, -1609.639536, 74.879997, 0.000045, 0.000015, 80.299987);

	lift_main_obj[7] = CreateDynamicObject(18755, 287.908997, -1609.553955, 79.379997 + ELEVATOR_OFFSET, 0.000000, 0.000000, 79.898071);
	lift_door[7][0] = CreateDynamicObject(18757, 287.887451, -1609.585780, 79.379997, 0.000045, 0.000015, 80.299987);
	lift_door[7][1] = CreateDynamicObject(18756, 287.880798, -1609.639536, 79.379997, 0.000045, 0.000015, 80.299987);

	lift_main_obj[8] = CreateDynamicObject(18755, 287.908997, -1609.553955, 83.879997 + ELEVATOR_OFFSET, 0.000000, 0.000000, 79.898071);
	lift_door[8][0] = CreateDynamicObject(18757, 287.887451, -1609.585780, 83.879997, 0.000045, 0.000015, 80.299987);
	lift_door[8][1] = CreateDynamicObject(18756, 287.880798, -1609.639536, 83.879997, 0.000045, 0.000015, 80.299987);

	lift_main_obj[9] = CreateDynamicObject(18755, 287.908997, -1609.553955, 88.379997 + ELEVATOR_OFFSET, 0.000000, 0.000000, 79.898071);
	lift_door[9][0] = CreateDynamicObject(18757, 287.887451, -1609.585780, 88.379997, 0.000045, 0.000015, 80.299987);
	lift_door[9][1] = CreateDynamicObject(18756, 287.880798, -1609.639536, 88.379997, 0.000045, 0.000015, 80.299987);

	lift_main_obj[10] = CreateDynamicObject(18755, 287.908997, -1609.553955, 92.879997 + ELEVATOR_OFFSET, 0.000000, 0.000000, 79.898071);
	lift_door[10][0] = CreateDynamicObject(18757, 287.887451, -1609.585780, 92.879997, 0.000045, 0.000015, 80.299987);
	lift_door[10][1] = CreateDynamicObject(18756, 287.880798, -1609.639536, 92.879997, 0.000045, 0.000015, 80.299987);

	lift_main_obj[11] = CreateDynamicObject(18755, 287.908997, -1609.553955, 97.379997 + ELEVATOR_OFFSET, 0.000000, 0.000000, 79.898071);
	lift_door[11][0] = CreateDynamicObject(18757, 287.887451, -1609.585780, 97.379997, 0.000045, 0.000015, 80.299987);
	lift_door[11][1] = CreateDynamicObject(18756, 287.880798, -1609.639536, 97.379997, 0.000045, 0.000015, 80.299987);


	// street
	lift_main_obj[12] = CreateDynamicObject(18755, 287.910004, -1609.553955, 33.875000 + ELEVATOR_OFFSET, 0.000000, 0.000000, 79.898071);
	lift_door[12][0] = CreateDynamicObject(18757, 287.887451, -1609.585780, 33.875000, 0.000045, 0.000015, 80.299987);
	lift_door[12][1] = CreateDynamicObject(18756, 287.880798, -1609.639536, 33.875000, 0.000045, 0.000015, 80.299987);

	// garage
	lift_main_obj[13] = CreateDynamicObject(18755, 287.919006, -1609.509033, 18.719000 + ELEVATOR_OFFSET, 0.000000, 0.000000, 79.898071);
	lift_door[13][0] = CreateDynamicObject(18757, 287.887451, -1609.585780, 18.719000, 0.000045, 0.000015, 80.299987);
	lift_door[13][1] = CreateDynamicObject(18756, 287.880798, -1609.639536, 18.719000, 0.000045, 0.000015, 80.299987);

	
	// floors 1-12
	kv_sphere[0] = CreateDynamicSphere(287.9018,-1609.5968,47.0800,2.0);
	kv_sphere[1] = CreateDynamicSphere(287.9018,-1609.5968,51.7800,2.0);
	kv_sphere[2] = CreateDynamicSphere(287.9018,-1609.5968,56.2800,2.0);
	kv_sphere[3] = CreateDynamicSphere(287.9018,-1609.5968,60.7800,2.0);
	kv_sphere[4] = CreateDynamicSphere(287.9018,-1609.5968,65.2800,2.0);
	kv_sphere[5] = CreateDynamicSphere(287.9018,-1609.5968,69.7800,2.0);
	kv_sphere[6] = CreateDynamicSphere(287.9018,-1609.5968,74.2800,2.0);
	kv_sphere[7] = CreateDynamicSphere(287.9018,-1609.5968,78.7800,2.0);
	kv_sphere[8] = CreateDynamicSphere(287.9018,-1609.5968,83.2800,2.0);
	kv_sphere[9] = CreateDynamicSphere(287.9018,-1609.5968,87.7800,2.0);
	kv_sphere[10] = CreateDynamicSphere(287.9018,-1609.5968,92.2800,2.0);
	kv_sphere[11] = CreateDynamicSphere(287.9018,-1609.5968,96.7800,2.0);

	kv_sphere[12] = CreateDynamicSphere(287.9018,-1609.5968,33.0750,2.0); // street
	kv_sphere[13] = CreateDynamicSphere(287.9018,-1609.5968,17.9190,2.0); // garage



	// floors 1-12
	lift_sphere[0] = CreateDynamicSphere(287.5335,-1612.3141,47.0800,1.7);
	lift_sphere[1] = CreateDynamicSphere(287.5335,-1612.3141,51.7800,1.7);
	lift_sphere[2] = CreateDynamicSphere(287.5335,-1612.3141,56.2800,1.7);
	lift_sphere[3] = CreateDynamicSphere(287.5335,-1612.3141,60.7800,1.7);
	lift_sphere[4] = CreateDynamicSphere(287.5335,-1612.3141,65.2800,1.7);
	lift_sphere[5] = CreateDynamicSphere(287.5335,-1612.3141,69.7800,1.7);
	lift_sphere[6] = CreateDynamicSphere(287.5335,-1612.3141,74.2800,1.7);
	lift_sphere[7] = CreateDynamicSphere(287.5335,-1612.3141,78.7800,1.7);
	lift_sphere[8] = CreateDynamicSphere(287.5335,-1612.3141,83.2800,1.7);
	lift_sphere[9] = CreateDynamicSphere(287.5335,-1612.3141,87.7800,1.7);
	lift_sphere[10] = CreateDynamicSphere(287.5335,-1612.3141,92.2800,1.7);
	lift_sphere[11] = CreateDynamicSphere(287.5335,-1612.3141,96.7800,1.7);

	lift_sphere[12] = CreateDynamicSphere(287.5335,-1612.3141,33.0750,1.7); // street
	lift_sphere[13] = CreateDynamicSphere(287.5335,-1612.3141,17.9190,1.7); // garage
}
public OnGameModeInit()
{
	print("[Normative-Rp] √è√∞√Æ√®√±√µ√Æ√§√®√≤ √ß√†√£√∞√≥√ß√™√† √®√£√∞√Æ√¢√Æ√£√Æ √¨√ÆS√≠...");

	Load3DTexts();

	for(new i=0;i<sizeof(SALUTEINFOS);i++) 
		SALUTEINFOS[i][SaluteUse] = false;

	for(new i=0; i<8; i++) {
		for(new l=0;l<4;l++) 
			table_playerid[i][l] = -1;
	}

	for(new i = 0; i < 12; i++)
	{
		format(cheatpanelText[0][i], 5, "~g~_");
		format(cheatpanelText[1][i], 2, "_");
	}

	for(new i = 0; i<9; i++) {
		selleritemid[i]=-1;
		for(new n=0; n<5; n++) {
			typeitem[i][n]=-1;
			modelitem[i][n]=-1;
			indexmark[i][n]=-1;
		}
	}

	NPCTrains(true);

	for(new i = 0; i < 16; i ++) {
		switch(random(2)) {
			case 0: {
				af_fuel_types_num[i] = 1;
				format(af_fuel_types[i],7,"√Å√•√≠√ß√®√≠");
			}
			case 1: {
				af_fuel_types_num[i] = 2;
				format(af_fuel_types[i],7,"√Ñ√®√ß√•√´√º");
			}
		}
	}

	//
	createJailKeyObj();
	createJailCardObj();

	//
	KV_CreateDetailsLifts();

	MySQL_data();
	
	mysql_tquery(mysql_Handle, "UPDATE `accounts` SET `strengh_today` = '0',`pOnline` = '0', `pInGameTime` = '0'");

	mysql_tquery(mysql_Handle, "SELECT * FROM `instrument`","load_instrument", "");

    mysql_tquery(mysql_Handle, "SELECT * FROM `mafiazone`", "LoadMafiaZone","");

	mysql_tquery(mysql_Handle, "SELECT * FROM `otherfuncs`", "LoadServerData", "");
	mysql_tquery(mysql_Handle, "SELECT * FROM `saved_lego`", "load_legoobjects", "");
	mysql_tquery(mysql_Handle, "SELECT * FROM `packs_shop`", "load_pack_data", "");
	mysql_tquery(mysql_Handle, "SELECT * FROM `marksystem`", "load_marks", "");
	mysql_tquery(mysql_Handle, "SELECT * FROM `family_system`", "load_familys","");

	updatesalarys(); // √Ø√Æ√±√´√• Load3DTexts √® LoadMafiaZone

	SendRconCommand("ackslimit 5000");

	ShowPlayerMarkers(PLAYER_MARKERS_MODE_GLOBAL);
	ShowNameTags(1);
	SetNameTagDrawDistance(21.0);
	EnableStuntBonusForAll(0);
	Iter_Clear(Reports);
	DisableInteriorEnterExits();
	LoadDrawsInit();
	LoadPhonesServer();
	LoadNPC();
	LoadObject();
	LoadPickups();
	LoadVehicles();
	Menu();
	TimeInit();
	AddPlayerClass(78, 1763.2140, -1894.0676, 13.5612, 270, -1,-1,-1,-1,-1,-1);

	LimitPlayerMarkerRadius(45.0);

	ManualVehicleEngineAndLights();

	AllowInteriorWeapons(true);
	LoadIcons();

	for(new i = 0; i < MAX_VEHICLES; i++)
	{
	    DeleteVehicleDetails(i);
	    for(new z = 0; z < MAX_DETAILS_ON_VEHICLE; ++z)
		{
		    g_iVehicleDetails[i][z][eObjectID] = -1;
		}
	}

	rServerInfo = GetTickCount();

	SetTimer("hungry_status_check", 600000, 1);
	SetTimer("mil_update_sport", 500, 1);
	SetTimer("SecondTimer", 1000, 1);

	mysql_tquery(mysql_Handle, "UPDATE `accounts` SET `pHungry` = '1'");
	new strnum[7];
	for(new i = 0, ps = GetVehiclePoolSize(); i <= ps; i++)
	{
		format(strnum, sizeof(strnum), "N %04d", i);
		SetVehicleNumberPlate(i, strnum);
	}
	mysql_tquery(mysql_Handle, "SELECT * FROM `storages`", "LoadStorages", "");
    mysql_tquery(mysql_Handle, "SELECT * FROM `bank_acc`", "bank_totals", "");

	SetGameModeText("Normative-rp Russian");

	update_mafia_store(5); update_mafia_store(6); update_mafia_store(14);

	new numobj;
	for(new vehicleid=veh_bus[0]; vehicleid <= veh_bus[1]; vehicleid++) {
		if(vehicleid==veh_bus[0]) numobj=0;
		if(vehicleid==veh_bus[0]+1) numobj=1;
		if(vehicleid==veh_bus[0]+2) numobj=2;
		if(vehicleid==veh_bus[0]+3) numobj=3;
		if(vehicleid==veh_bus[0]+4) numobj=4;
		if(vehicleid==veh_bus[0]+5) numobj=5;
		if(vehicleid==veh_bus[0]+6) numobj=6;
		if(vehicleid==veh_bus[0]+7) numobj=7;
		if(vehicleid==veh_bus[0]+8) numobj=8;
		if(vehicleid==veh_bus[0]+9) numobj=9;
		if(vehicleid==veh_bus[0]+10) numobj=10;
		if(vehicleid==veh_bus[0]+11) numobj=11;
		if(vehicleid==veh_bus[0]+12) numobj=12;
		if(vehicleid==veh_bus[1]) numobj=13;

		bus_text1[numobj] = CreateObject(19482, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 300.000000);
   		bus_text2[numobj] = CreateObject(19482, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 300.000000);
	    SetObjectMaterialText(bus_text1[numobj], "√Å√•√ß √¨√†√∞√∏√∞√≥√≤√†", 0, 130, "TUNGA", 50, 1, -1, 0, 0);
	    SetObjectMaterialText(bus_text2[numobj], "√Å√•√ß √¨√†√∞√∏√∞√≥√≤√†", 0, 130, "TUNGA", 50, 1, -1, 0, 2);
	    AttachObjectToVehicle(bus_text1[numobj], vehicleid, -1.310000, 0.440000, -0.600000, 0.000000, 0.000000, -180.000000);
    	AttachObjectToVehicle(bus_text2[numobj], vehicleid, 1.310000, 0.440000, -0.600000, 0.000000, 0.000000, 0.000000);
	}

	for(new i = 0; i < 5; i ++) b_Sklad{i} = true;

	Derby_OnGameModeInit();
	return 1;
}

CB: hungry_status_check() {
	foreach(new i:Player) {
		if(pData[i][pHungry] != 1) continue;
		SCM(i,0xFA1010FF,"√Ç√ª √Ø√∞√Æ√£√Æ√´√ÆS√≠√´√®√±√º");
		SCM(i,0xFA1010FF,"√è√Æ√±√•√≤√®√≤√• √´√æ√°√Æ√• √ß√†√¢√•√§√•√≠√®√• √Ø√®√≤√†√≠√®√ø √® √Ø√•√∞√•√™√≥√±√®√≤√• {FFCD00}(/gps > 13)");
	}
	return 1;
}

CB: mil_update_sport() {
	foreach(new playerid:Player) {
		if(GetPVarInt(playerid, "set_enabled")) {
			new keys, ud, lr;
			GetPlayerKeys(playerid, keys, ud, lr);
			if(ud == KEY_UP) {
				if(!GetPVarInt(playerid, "no_sport") && !GetPVarInt(playerid, "used_up_key")) {
					if(GetPVarInt(playerid, "delay_sport_button") > gettime()) return 1;
					ApplyAnimation(playerid, "FREEWEIGHTS", "GYM_FREE_B", 4.1, 0, 1, 1, 1, 0, 1);
					SetPVarInt(playerid, "delay_sport_button", gettime() + 1);
					SetPVarInt(playerid, "used_up_key", 1);
				}
			}
			else if(GetPVarInt(playerid, "used_up_key")) {
				DeletePVar(playerid, "used_up_key");
				if(GetPVarInt(playerid, "delay_sport_button") > gettime()) return 1;

				if(pData[playerid][strengh_today] >= 10) {
					ClearAnimations(playerid);
					RemovePlayerAttachedObject(playerid, 2);
					RemovePlayerAttachedObject(playerid, 3);
					DeletePVar(playerid, "sport-inventory");
					if(GetPVarInt(playerid, "set_enabled")) 
						DeletePVar(playerid, "set_enabled");
					return SCM(playerid, COLOR_ERROR, "√Ç√†√¨ √≠√•√Æ√°√µ√Æ√§√®√¨ √Æ√≤√§√ª√µ. √Ñ√Æ√±√≤√®√£√≠√≥√≤ √´√®√¨√®√≤ √≤√∞√•√≠√®√∞√Æ√¢√Æ√™ √≠√† √±√•√£√Æ√§√≠√ø");
				}

				ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.1, 0, 0, 0, 0, 0, 1);
				ApplyAnimation(playerid, "FREEWEIGHTS", "GYM_FREE_DOWN", 0.9, 0, 1, 1, 1, 0, 1);
				SetTimerEx("nosport_off", 1600, 0, "i", playerid);
				SetPVarInt(playerid, "no_sport", 1);

				if(pData[playerid][p_strengh] < 100 && random(7) == 3) {
					PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
					GameTextForPlayer(playerid, "~b~+ 1~n~~w~POWER~n~POINT", 5000, 6);
					pData[playerid][p_strengh] ++;
					UpdatePlayerData(playerid,"strengh",pData[playerid][p_strengh]);
					pData[playerid][strengh_today] ++;
					UpdatePlayerData(playerid,"strengh_today",pData[playerid][strengh_today]);
					SCMF(playerid, 0x99ccffFF, "√Ç√†√∏√† √±√®√´√† √≥√¢√•√´√®√∑√•√≠√†! √í√•√Ø√•√∞√º √Æ√≠√† √±√Æ√±√≤√†√¢√´√ø√•√≤ {00cc00}%d √®√ß 100 {99ccff}√•√§√®√≠√®√∂", pData[playerid][p_strengh]);
				}
			}
		}
	}
	return 1;
}

stock DeleteVehicleDetails(vehicleid)
{
	for(new i = 0; i < MAX_DETAILS_ON_VEHICLE; ++i)
	{
	    DestroyObject(g_iVehicleDetails[vehicleid][i][eObjectID]);
	}
}

stock GetFirstDetailSlot(vehicleid)
{
    for(new i = 0; i < MAX_DETAILS_ON_VEHICLE; ++i)
	{
	    if(g_iVehicleDetails[vehicleid][i][eObjectID] == -1)
	    {
	        return i;
	    }
	}
	return -1;
}

public OnGameModeExit() {
	return mysql_close(mysql_Handle);
}
stock MySQL_data()
{
	new file = ini_openFile("mysql_settings.ini");
	if(file == -1)
	{
		print("√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† √Ø√∞√® √Æ√≤√™√∞√ª√≤√®√® √¥√†√©√´√† √≠√†√±√≤√∞√Æ√•√™ MySQL");
		return 0;
	}
	ini_getString(file, "host", mysql_settings[_host]);
	ini_getString(file, "username", mysql_settings[_username]);
	ini_getString(file, "password", mysql_settings[_password]);
	ini_getString(file, "database", mysql_settings[_database]);
	ini_closeFile(file);

	mysql_Handle = mysql_connect(mysql_settings[_host], mysql_settings[_username], mysql_settings[_password], mysql_settings[_database]);
	
	if(!mysql_errno()) print("√è√Æ√§√™√´√æ√∑√•√≠√®√• √™ √°√†√ß√• S√≠√≠√≠√ª√µ √¢√ª√Ø√Æ√´√≠√•√≠√Æ");
	else
	{
		print("√è√Æ√§√™√´√æ√∑√®√≤√º√±√ø √™ √°√†√ß√• S√≠√≠√≠√ª√µ √≠√• √≥S√≠√´√Æ√±√º. √á√†√£√∞√≥√ß√™√† √¨√ÆS√≠ √Æ√±√≤√†√≠√Æ√¢√´√•√≠√†");
		SendRconCommand("exit");
	}

	mysql_tquery(mysql_Handle, "set character_set_results=\'cp1251\'","","");
	mysql_tquery(mysql_Handle, "set collation_connection=\'cp1251_general_ci\'", "", "");
	mysql_tquery(mysql_Handle, "set NAMES cp1251;", "", "");
	mysql_tquery(mysql_Handle, "set SESSION character_set_server='utf8';", "", "");
	return 1;
}
stock TimeInit() {
	new hour, month, second;
	gettime(hour, month, second);
	FixHour(hour);
	SetWorldTime(hour);
	time_server = hour;

	if(hour < 7 || hour >= 22) weather_server = 10;
	else weather_server = 1;
	SetWeather(weather_server);
}
stock LoadIcons() {
	#include <dynamicicons>
}
CB: LoadStorages() {
	cache_get_value_name_int(0, "minelow", storage_mine[StLow]);
	cache_get_value_name_int(0, "minehigh", storage_mine[StHigh]);
	cache_get_value_name_int(0, "minelowready", storage_mine[StLowReady]);
	cache_get_value_name_int(0, "minehighready", storage_mine[StHighReady]);
	for(new i = 0; i < 4; i ++) UpdateStorages(i);

	return print(">> √ò√†√µ√≤¬∏√∞√±√™√®√• √±√™√´√†√§√ª √ß√†√£√∞√≥√¶√•√≠√ª");
}
CB: awork_load() {
	new aworkoname[24], astr[80];
	cache_get_value_name(0, "Name", aworkoname);
	format(astr, sizeof(astr), "√Ä√¢√≤√Æ√¨√Æ√°√®√´√º√≠√†√ø √¥√†√°√∞√®√™√†\n\n{4682b4}√Ç√´√†√§√•√´√•√∂: "CWHITE"%s", aworkoname);
	return UpdateDynamic3DTextLabelText(autoworkbiz3D, 0x33AA33FF, astr);
}
CB: unautoLoad() {
	new aworkoname[24], astr[110];
	cache_get_value_name(0, "Name", aworkoname);
	format(astr, sizeof(astr), "√Ä√¢√≤√Æ√±√†√´√Æ√≠ √Ω√™√±√™√´√æ√ß√®√¢√≠√ª√µ √†√¢√≤√Æ\n\n{4682b4}√Ç√´√†√§√•√´√•√∂: "CWHITE"%s", aworkoname);
	return UpdateDynamic3DTextLabelText(unik3dtext, 0x33AA33FF, astr);
}
CB: LoadServerData() {
	cache_get_value_name_int(0, "prods_factory", prods_factory);

	cache_get_value_name(0, "servername", servername);

	cache_get_value_name_int(0, "unikbankCount", unikbankCount);
	cache_get_value_name_int(0, "unikautoOwner", unikautoOwner);

	cache_get_value_name_int(0, "autoBankCount", autoBankCount);
	cache_get_value_name_int(0, "autowork_ownerid", autoworkOwner);

	cache_get_value_name_int(0, "kiosk1_owner", kiosk1_owner);
	cache_get_value_name_int(0, "kiosk2_owner", kiosk2_owner);
	cache_get_value_name_int(0, "kiosk3_owner", kiosk3_owner);
	cache_get_value_name_int(0, "kiosk4_owner", kiosk4_owner);

	cache_get_value_name_int(0, "kiosk1_bank", kiosk1_bank);
	cache_get_value_name_int(0, "kiosk2_bank", kiosk2_bank);
	cache_get_value_name_int(0, "kiosk3_bank", kiosk3_bank);
	cache_get_value_name_int(0, "kiosk4_bank", kiosk4_bank);

	cache_get_value_name_int(0, "prok1_owner", prok1_owner);
	cache_get_value_name_int(0, "prok2_owner", prok2_owner);
	cache_get_value_name_int(0, "prok3_owner", prok3_owner);
	cache_get_value_name_int(0, "prok4_owner", prok4_owner);
	cache_get_value_name_int(0, "prok5_owner", prok5_owner);
	cache_get_value_name_int(0, "prok6_owner", prok6_owner);
	cache_get_value_name_int(0, "prok7_owner", prok7_owner);

	cache_get_value_name_int(0, "prok1_bank", prok1_bank);
	cache_get_value_name_int(0, "prok2_bank", prok2_bank);
	cache_get_value_name_int(0, "prok3_bank", prok3_bank);
	cache_get_value_name_int(0, "prok4_bank", prok4_bank);
	cache_get_value_name_int(0, "prok5_bank", prok5_bank);
	cache_get_value_name_int(0, "prok6_bank", prok6_bank);
	cache_get_value_name_int(0, "prok7_bank", prok7_bank);

	cache_get_value_name_int(0, "food_owneracc", food1OwnerID);
	cache_get_value_name_int(0, "food_owneracc_2", food2OwnerID);
	cache_get_value_name_int(0, "food_bank", food1Bank);
	cache_get_value_name_int(0, "food_bank_2", food2Bank);
	cache_get_value_name_int(0, "multiply_don", multiply_don);
	cache_get_value_name_int(0, "multiply_exp", multiply_exp);
	cache_get_value_name_int(0, "drugs_gang", drugs_factorygang);
	cache_get_value_name_int(0, "svstore_patr", svstore_patr);
	cache_get_value_name_int(0, "vvcstore_patr", vvcstore_patr);
	cache_get_value_name_int(0, "vmfstore_patr", vmfstore_patr);
	cache_get_value_name_int(0, "deaglesv_status", deaglesv_status);
	cache_get_value_name_int(0, "deaglevvc_status", deaglevvc_status);
	cache_get_value_name_int(0, "deaglevmf_status", deaglevmf_status);
	cache_get_value_name_int(0, "mp5sv_status", mp5sv_status);
	cache_get_value_name_int(0, "mp5vvc_status", mp5vvc_status);
	cache_get_value_name_int(0, "mp5vmf_status", mp5vmf_status);
	cache_get_value_name_int(0, "m4sv_status", m4sv_status);
	cache_get_value_name_int(0, "m4vvc_status", m4vvc_status);
	cache_get_value_name_int(0, "m4vmf_status", m4vmf_status);
	cache_get_value_name_int(0, "snipersv_status", snipersv_status);
	cache_get_value_name_int(0, "snipervvc_status", snipervvc_status);
	cache_get_value_name_int(0, "snipervmf_status", snipervmf_status);
	cache_get_value_name_int(0, "metsv_count", metsv_count);
	cache_get_value_name_int(0, "metvvc_count", metvvc_count);
	cache_get_value_name_int(0, "metvmf_count", metvmf_count);
	cache_get_value_name_int(0, "oneprod_mine", oneprod_mine);
	cache_get_value_name_int(0, "oneprod_gruz", oneprod_gruz);
	cache_get_value_name_int(0, "oneprod_lesop", oneprod_lesop);

	if(unikautoOwner != -1) {
		new query[70];
		mysql_format(mysql_Handle, query, sizeof(query), "SELECT `Name` FROM `accounts` WHERE `id` = %d", unikautoOwner);
		mysql_tquery(mysql_Handle, query, "unautoLoad", "");
	}
	else UpdateDynamic3DTextLabelText(unik3dtext, 0x33AA33FF, "√Ä√¢√≤√Æ√±√†√´√Æ√≠ √Ω√™√±√™√´√æ√ß√®√¢√≠√ª√µ √†√¢√≤√Æ\n\n{4682b4}√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"36000000$");

	if(kiosk1_owner != -1) {
		new query[70];
		mysql_format(mysql_Handle, query, sizeof(query), "SELECT `Name` FROM `accounts` WHERE `id` = %d", kiosk1_owner);
		mysql_tquery(mysql_Handle, query, "kiosk_load_1", "");
	}
	else UpdateDynamic3DTextLabelText(kiosk_info_1, 0x4682B4FF, "√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"500000$");
	if(kiosk2_owner != -1) {
		new query[70];
		mysql_format(mysql_Handle, query, sizeof(query), "SELECT `Name` FROM `accounts` WHERE `id` = %d", kiosk2_owner);
		mysql_tquery(mysql_Handle, query, "kiosk_load_2", "");
	}
	else UpdateDynamic3DTextLabelText(kiosk_info_2, 0x4682B4FF, "√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"500000$");
	if(kiosk3_owner != -1) {
		new query[70];
		mysql_format(mysql_Handle, query, sizeof(query), "SELECT `Name` FROM `accounts` WHERE `id` = %d", kiosk3_owner);
		mysql_tquery(mysql_Handle, query, "kiosk_load_3", "");
	}
	else UpdateDynamic3DTextLabelText(kiosk_info_3, 0x4682B4FF, "√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"500000$");
	if(kiosk4_owner != -1) {
		new query[70];
		mysql_format(mysql_Handle, query, sizeof(query), "SELECT `Name` FROM `accounts` WHERE `id` = %d", kiosk4_owner);
		mysql_tquery(mysql_Handle, query, "kiosk_load_4", "");
	}
	else UpdateDynamic3DTextLabelText(kiosk_info_4, 0x4682B4FF, "√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"500000$");

	if(autoworkOwner != -1) {
		new query[70];
		mysql_format(mysql_Handle, query, sizeof(query), "SELECT `Name` FROM `accounts` WHERE `id` = %d", autoworkOwner);
		mysql_tquery(mysql_Handle, query, "awork_load", "");
	}
	else UpdateDynamic3DTextLabelText(autoworkbiz3D, 0x33AA33FF, "√Ä√¢√≤√Æ√¨√Æ√°√®√´√º√≠√†√ø √¥√†√°√∞√®√™√†\n\n{4682b4}√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"13000000$\n{4682b4}/buybiz √§√´√ø √Ø√Æ√™√≥√Ø√™√®");

	update_prods_info();
	
	if(prok1_owner != -1) {
		new query_prok[70];
		mysql_format(mysql_Handle, query_prok, sizeof(query_prok), "SELECT `Name` FROM `accounts` WHERE `id` = %d", prok1_owner);
		mysql_tquery(mysql_Handle, query_prok, "prok_load_1", "");
	}
	else UpdateDynamic3DTextLabelText(prok_info_1, 0x4682B4FF, "√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"2000000$");
	if(prok2_owner != -1) {
		new query_prok[70];
		mysql_format(mysql_Handle, query_prok, sizeof(query_prok), "SELECT `Name` FROM `accounts` WHERE `id` = %d", prok2_owner);
		mysql_tquery(mysql_Handle, query_prok, "prok_load_2", "");
	}
	else UpdateDynamic3DTextLabelText(prok_info_2, 0x4682B4FF, "√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"2000000$");
	if(prok3_owner != -1) {
		new query_prok[70];
		mysql_format(mysql_Handle, query_prok, sizeof(query_prok), "SELECT `Name` FROM `accounts` WHERE `id` = %d", prok3_owner);
		mysql_tquery(mysql_Handle, query_prok, "prok_load_3", "");
	}
	else UpdateDynamic3DTextLabelText(prok_info_3, 0x4682B4FF, "√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"2000000$");
	if(prok4_owner != -1) {
		new query_prok[70];
		mysql_format(mysql_Handle, query_prok, sizeof(query_prok), "SELECT `Name` FROM `accounts` WHERE `id` = %d", prok4_owner);
		mysql_tquery(mysql_Handle, query_prok, "prok_load_4", "");
	}
	else UpdateDynamic3DTextLabelText(prok_info_4, 0x4682B4FF, "√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"2000000$");
	if(prok5_owner != -1) {
		new query_prok[70];
		mysql_format(mysql_Handle, query_prok, sizeof(query_prok), "SELECT `Name` FROM `accounts` WHERE `id` = %d", prok5_owner);
		mysql_tquery(mysql_Handle, query_prok, "prok_load_5", "");
	}
	else UpdateDynamic3DTextLabelText(prok_info_5, 0x4682B4FF, "√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"2000000$");
	if(prok6_owner != -1) {
		new query_prok[70];
		mysql_format(mysql_Handle, query_prok, sizeof(query_prok), "SELECT `Name` FROM `accounts` WHERE `id` = %d", prok6_owner);
		mysql_tquery(mysql_Handle, query_prok, "prok_load_6", "");
	}
	else UpdateDynamic3DTextLabelText(prok_info_6, 0x4682B4FF, "√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"2000000$");
	if(prok7_owner != -1) {
		new query_prok[70];
		mysql_format(mysql_Handle, query_prok, sizeof(query_prok), "SELECT `Name` FROM `accounts` WHERE `id` = %d", prok7_owner);
		mysql_tquery(mysql_Handle, query_prok, "prok_load_7", "");
	}
	else UpdateDynamic3DTextLabelText(prok_info_7, 0x4682B4FF, "√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"2000000$");
	
	if(food1OwnerID != -1) {
		new query_food[70];
		mysql_format(mysql_Handle, query_food, sizeof(query_food), "SELECT `Name` FROM `accounts` WHERE `id` = %d", food1OwnerID);
		mysql_tquery(mysql_Handle, query_food, "food_load", "");
	}
	else UpdateDynamic3DTextLabelText(food_bomj3d, 0x33AA33FF, "√ã√†√∞√•√™ √± √•√§√Æ√©\n\n{4682b4}√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"350000$\n{4682b4}/buybiz √§√´√ø √Ø√Æ√™√≥√Ø√™√®");

	if(food2OwnerID != -1) {
		new query_food[70];
		mysql_format(mysql_Handle, query_food, sizeof(query_food), "SELECT `Name` FROM `accounts` WHERE `id` = %d", food2OwnerID);
		mysql_tquery(mysql_Handle, query_food, "food_load_2", "");
	}
	else UpdateDynamic3DTextLabelText(food_bomj3d_2, 0x33AA33FF, "√ã√†√∞√•√™ √± √•√§√Æ√©\n\n{4682b4}√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"350000$\n{4682b4}/buybiz √§√´√ø √Ø√Æ√™√≥√Ø√™√®");

	new sql_hoststr[80], str_drugs[144], str_met[90]; format(sql_hoststr, 80, "hostname %s", servername); SendRconCommand(sql_hoststr);
	format(str_met, 90, "√ë√™√´√†√§ √¨√•√≤√†√´√´√†\n\n"CLITEBLUE"√ç√† √±√™√´√†√§√•: %d √™√£\n/mput - √Ø√Æ√´√Æ√¶√®√≤√º √¨√•√≤√†√´√´", metsv_count);
	UpdateDynamic3DTextLabelText(met3d_sv, 0x0066CCFF, str_met);
	format(str_met, 90, "√ë√™√´√†√§ √¨√•√≤√†√´√´√†\n\n"CLITEBLUE"√ç√† √±√™√´√†√§√•: %d √™√£\n/mput - √Ø√Æ√´√Æ√¶√®√≤√º √¨√•√≤√†√´√´", metvvc_count);
	UpdateDynamic3DTextLabelText(met3d_vvc, 0x0066CCFF, str_met);
	format(str_met, 90, "√ë√™√´√†√§ √¨√•√≤√†√´√´√†\n\n"CLITEBLUE"√ç√† √±√™√´√†√§√•: %d √™√£\n/mput - √Ø√Æ√´√Æ√¶√®√≤√º √¨√•√≤√†√´√´", metvmf_count);
	UpdateDynamic3DTextLabelText(met3d_vmf, 0x0066CCFF, str_met);
	format(str_drugs, 144, "√ç√†√∞√™√Æ√ß√†√¢√Æ√§\n"CWHITE"√ç√†√∞√™√Æ√≤√®√™√Æ√¢ √≠√† √ß√†√¢√Æ√§√•: "CLITEBLUE"%d √£√∞\n"CLITEBLUE"/buydrugs "CWHITE"- √™√≥√Ø√®√≤√º √≠√†√∞√™√Æ√≤√®√™√®", drugs_factorygang);
	UpdateDynamic3DTextLabelText(text_drugsgang, 0x77AA55FF, str_drugs);
	new str_patr[50];
	format(str_patr, 50, "√è√†√≤√∞√Æ√≠√ª √≠√† √±√™√´√†√§√•:\n%i / 100000 √∏√≤.", svstore_patr);
	UpdateDynamic3DTextLabelText(text_sv_storpt, 0xFFCC00FF, str_patr);
	format(str_patr, 50, "√è√†√≤√∞√Æ√≠√ª √≠√† √±√™√´√†√§√•:\n%i / 100000 √∏√≤.", vvcstore_patr);
	UpdateDynamic3DTextLabelText(text_vvc_storpt, 0xFFCC00FF, str_patr);
	format(str_patr, 50, "√è√†√≤√∞√Æ√≠√ª √≠√† √±√™√´√†√§√•:\n%i / 100000 √∏√≤.", vmfstore_patr);
	UpdateDynamic3DTextLabelText(text_vmf_storpt, 0xFFCC00FF, str_patr);
	return mysql_tquery(mysql_Handle, "SELECT * FROM `name_ranks`", "load_name_ranks", "");
}
stock GetLastNumItem(idmarket) {
	for(new i =4; i != -1; i--) {
		if(modelitem[idmarket][i] != -1) {
			return i;
		}
	}
	return 0;
}
CB: food_load() {
	new foodownername[24], foodstr[130];
	cache_get_value_name(0, "Name", foodownername);
	format(foodstr, sizeof(foodstr), "√ã√†√∞√•√™ √± √•√§√Æ√©\n\n{4682b4}√Ç√´√†√§√•√´√•√∂: "CWHITE"%s\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"350000$", foodownername);
	return UpdateDynamic3DTextLabelText(food_bomj3d, 0x33AA33FF, foodstr);
}
CB: food_load_2() {
	new foodownername[24], foodstr[130];
	cache_get_value_name(0, "Name", foodownername);
	format(foodstr, sizeof(foodstr), "√ã√†√∞√•√™ √± √•√§√Æ√©\n\n{4682b4}√Ç√´√†√§√•√´√•√∂: "CWHITE"%s\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"350000$", foodownername);
	return UpdateDynamic3DTextLabelText(food_bomj3d_2, 0x33AA33FF, foodstr);
}

CB: kiosk_load_1() {
	new ownername[24], kioskstr[55];
	cache_get_value_name(0, "Name", ownername);
	format(kioskstr, sizeof(kioskstr), "√Ç√´√†√§√•√´√•√∂: "CWHITE"%s", ownername);
	return UpdateDynamic3DTextLabelText(kiosk_info_1, 0x4682B4FF, kioskstr);
}
CB: kiosk_load_2() {
	new ownername[24], kioskstr[55];
	cache_get_value_name(0, "Name", ownername);
	format(kioskstr, sizeof(kioskstr), "√Ç√´√†√§√•√´√•√∂: "CWHITE"%s", ownername);
	return UpdateDynamic3DTextLabelText(kiosk_info_2, 0x4682B4FF, kioskstr);
}
CB: kiosk_load_3() {
	new ownername[24], kioskstr[55];
	cache_get_value_name(0, "Name", ownername);
	format(kioskstr, sizeof(kioskstr), "√Ç√´√†√§√•√´√•√∂: "CWHITE"%s", ownername);
	return UpdateDynamic3DTextLabelText(kiosk_info_3, 0x4682B4FF, kioskstr);
}
CB: kiosk_load_4() {
	new ownername[24], kioskstr[55];
	cache_get_value_name(0, "Name", ownername);
	format(kioskstr, sizeof(kioskstr), "√Ç√´√†√§√•√´√•√∂: "CWHITE"%s", ownername);
	return UpdateDynamic3DTextLabelText(kiosk_info_4, 0x4682B4FF, kioskstr);
}

CB: prok_load_1() {
	new prokownername[24], prokstr[55];
	cache_get_value_name(0, "Name", prokownername);
	format(prokstr, sizeof(prokstr), "√Ç√´√†√§√•√´√•√∂: "CWHITE"%s", prokownername);
	return UpdateDynamic3DTextLabelText(prok_info_1, 0x4682B4FF, prokstr);
}
CB: prok_load_2() {
	new prokownername[24], prokstr[55];
	cache_get_value_name(0, "Name", prokownername);
	format(prokstr, sizeof(prokstr), "√Ç√´√†√§√•√´√•√∂: "CWHITE"%s", prokownername);
	return UpdateDynamic3DTextLabelText(prok_info_2, 0x4682B4FF, prokstr);
}
CB: prok_load_3() {
	new prokownername[24], prokstr[55];
	cache_get_value_name(0, "Name", prokownername);
	format(prokstr, sizeof(prokstr), "√Ç√´√†√§√•√´√•√∂: "CWHITE"%s", prokownername);
	return UpdateDynamic3DTextLabelText(prok_info_3, 0x4682B4FF, prokstr);
}
CB: prok_load_4() {
	new prokownername[24], prokstr[55];
	cache_get_value_name(0, "Name", prokownername);
	format(prokstr, sizeof(prokstr), "√Ç√´√†√§√•√´√•√∂: "CWHITE"%s", prokownername);
	return UpdateDynamic3DTextLabelText(prok_info_4, 0x4682B4FF, prokstr);
}
CB: prok_load_5() {
	new prokownername[24], prokstr[55];
	cache_get_value_name(0, "Name", prokownername);
	format(prokstr, sizeof(prokstr), "√Ç√´√†√§√•√´√•√∂: "CWHITE"%s", prokownername);
	return UpdateDynamic3DTextLabelText(prok_info_5, 0x4682B4FF, prokstr);
}
CB: prok_load_6() {
	new prokownername[24], prokstr[55];
	cache_get_value_name(0, "Name", prokownername);
	format(prokstr, sizeof(prokstr), "√Ç√´√†√§√•√´√•√∂: "CWHITE"%s", prokownername);
	return UpdateDynamic3DTextLabelText(prok_info_6, 0x4682B4FF, prokstr);
}
CB: prok_load_7() {
	new prokownername[24], prokstr[55];
	cache_get_value_name(0, "Name", prokownername);
	format(prokstr, sizeof(prokstr), "√Ç√´√†√§√•√´√•√∂: "CWHITE"%s", prokownername);
	return UpdateDynamic3DTextLabelText(prok_info_7, 0x4682B4FF, prokstr);
}

CB: load_name_ranks() {
	new rows, id_org, id_rank;
	cache_get_row_count(rows);
	for(new i = 0; i < rows; i ++) {
		cache_get_value_name_int(i, "org_id", id_org);
		cache_get_value_name_int(i, "rank_id", id_rank);
		cache_get_value_name(i, "rank_name", new_rank_name[id_org - 1][id_rank - 1]);
	}
	return 1;
}
CB: bank_totals() {
	new rows;
	cache_get_row_count(rows);
	return TOTALBANK = rows + 1;
}
stock UpdateStorages(storageid) {
	string[0] = EOS;
	switch(storageid) {
		case 1: {
			format(string, 96, ""CWHITE"√ç√®√ß√™√Æ√±√Æ√∞√≤√≠√Æ√© √≠√•√Ø√•√∞√•√∞√†√°√Æ√≤√†√≠√≠√Æ√©\n√∞√≥√§√ª √≠√† √±√™√´√†√§√•: "CPALEGREEN"%d √™√£", storage_mine[StLow]);
			UpdateDynamic3DTextLabelText(storage_mine_info[0], COLOR_WHITE, string);
		}
		case 2: {
			format(string, 96, ""CWHITE"√É√Æ√≤√Æ√¢√Æ√© √∞√≥√§√ª √≠√®√ß√™√Æ√£√Æ\n√±√Æ√∞√≤√† √≠√† √±√™√´√†√§√•: "CPALEGREEN"%d √™√£", storage_mine[StLowReady]);
			UpdateDynamic3DTextLabelText(storage_mine_info[1], COLOR_WHITE, string);
			format(string, 140, "√ë√™√´√†√§ √¨√•√≤√†√´√´√†\n"CWHITE"√å√•√≤√†√´√´√† √≠√† √±√™√´√†√§√•: "CLITEBLUE"%d √™√£\n"CLITEBLUE"/mbuy "CWHITE"- √™√≥√Ø√®√≤√º √¨√•√≤√†√´√´ (1 √™√£ - 15$)", storage_mine[StLowReady] / 2);
			UpdateDynamic3DTextLabelText(metauto_info, 0x77AA55FF, string);
		}
		case 3: {
			format(string, 96, ""CWHITE"√Ç√ª√±√Æ√™√Æ√±√Æ√∞√≤√≠√Æ√© √≠√•√Ø√•√∞√•√∞√†√°√Æ√≤√†√≠√≠√Æ√©\n√∞√≥√§√ª √≠√† √±√™√´√†√§√•: "CLITEBLUE"%d √™√£", storage_mine[StHigh]);
			UpdateDynamic3DTextLabelText(storage_mine_info[2], COLOR_WHITE, string);
		}
		case 4: {
			format(string, 96, ""CWHITE"√É√Æ√≤√Æ√¢√Æ√© √∞√≥√§√ª √¢√ª√±√Æ√™√Æ√£√Æ\n√±√Æ√∞√≤√† √≠√† √±√™√´√†√§√•: "CLITEBLUE"%d √™√£", storage_mine[StHighReady]);
			UpdateDynamic3DTextLabelText(storage_mine_info[3], COLOR_WHITE, string);
		}
	}
}
stock UpdateKoykaZanyat(playerid, koykaid) {
	string[0] = EOS;
	switch(koykaid) {
		case 1: format(string, 96, "√ä√Æ√©√™√† ¬π1\n\n{FFCD00}√è√†√∂√®√•√≠√≤: %s", pData[playerid][pName]);
		case 2: format(string, 96, "√ä√Æ√©√™√† ¬π2\n\n{FFCD00}√è√†√∂√®√•√≠√≤: %s", pData[playerid][pName]);
		case 3: format(string, 96, "√ä√Æ√©√™√† ¬π3\n\n{FFCD00}√è√†√∂√®√•√≠√≤: %s", pData[playerid][pName]);
		case 4: format(string, 96, "√ä√Æ√©√™√† ¬π4\n\n{FFCD00}√è√†√∂√®√•√≠√≤: %s", pData[playerid][pName]);
		case 5: format(string, 96, "√ä√Æ√©√™√† ¬π5\n\n{FFCD00}√è√†√∂√®√•√≠√≤: %s", pData[playerid][pName]);
		case 6: format(string, 96, "√ä√Æ√©√™√† ¬π6\n\n{FFCD00}√è√†√∂√®√•√≠√≤: %s", pData[playerid][pName]);
		case 7: format(string, 96, "√ä√Æ√©√™√† ¬π7\n\n{FFCD00}√è√†√∂√®√•√≠√≤: %s", pData[playerid][pName]);
		case 8: format(string, 96, "√ä√Æ√©√™√† ¬π8\n\n{FFCD00}√è√†√∂√®√•√≠√≤: %s", pData[playerid][pName]);
		case 9: format(string, 96, "√ä√Æ√©√™√† ¬π9\n\n{FFCD00}√è√†√∂√®√•√≠√≤: %s", pData[playerid][pName]);
		case 10: format(string, 96, "√ä√Æ√©√™√† ¬π10\n\n{FFCD00}√è√†√∂√®√•√≠√≤: %s", pData[playerid][pName]);
		case 11: format(string, 96, "√ä√Æ√©√™√† ¬π11\n\n{FFCD00}√è√†√∂√®√•√≠√≤: %s", pData[playerid][pName]);
		case 12: format(string, 96, "√ä√Æ√©√™√† ¬π12\n\n{FFCD00}√è√†√∂√®√•√≠√≤: %s", pData[playerid][pName]);
		case 13: format(string, 96, "√ä√Æ√©√™√† ¬π13\n\n{FFCD00}√è√†√∂√®√•√≠√≤: %s", pData[playerid][pName]);
		case 14: format(string, 96, "√ä√Æ√©√™√† ¬π14\n\n{FFCD00}√è√†√∂√®√•√≠√≤: %s", pData[playerid][pName]);
		case 15: format(string, 96, "√ä√Æ√©√™√† ¬π15\n\n{FFCD00}√è√†√∂√®√•√≠√≤: %s", pData[playerid][pName]);
		case 16: format(string, 96, "√ä√Æ√©√™√† ¬π16\n\n{FFCD00}√è√†√∂√®√•√≠√≤: %s", pData[playerid][pName]);
		case 17: format(string, 96, "√ä√Æ√©√™√† ¬π17\n\n{FFCD00}√è√†√∂√®√•√≠√≤: %s", pData[playerid][pName]);
		case 18: format(string, 96, "√ä√Æ√©√™√† ¬π18\n\n{FFCD00}√è√†√∂√®√•√≠√≤: %s", pData[playerid][pName]);
		case 19: format(string, 96, "√ä√Æ√©√™√† ¬π19\n\n{FFCD00}√è√†√∂√®√•√≠√≤: %s", pData[playerid][pName]);
		case 20: format(string, 96, "√ä√Æ√©√™√† ¬π20\n\n{FFCD00}√è√†√∂√®√•√≠√≤: %s", pData[playerid][pName]);
		case 21: format(string, 96, "√ä√Æ√©√™√† ¬π21\n\n{FFCD00}√è√†√∂√®√•√≠√≤: %s", pData[playerid][pName]);
		case 22: format(string, 96, "√ä√Æ√©√™√† ¬π22\n\n{FFCD00}√è√†√∂√®√•√≠√≤: %s", pData[playerid][pName]);
		case 23: format(string, 96, "√ä√Æ√©√™√† ¬π23\n\n{FFCD00}√è√†√∂√®√•√≠√≤: %s", pData[playerid][pName]);
		case 24: format(string, 96, "√ä√Æ√©√™√† ¬π24\n\n{FFCD00}√è√†√∂√®√•√≠√≤: %s", pData[playerid][pName]);
	}
	new virt = GetPlayerVirtualWorld(playerid);
	if(virt == 1) UpdateDynamic3DTextLabelText(koykoid_ls[koykaid], COLOR_WHITE, string), koyka_used_ls[koykaid] = 1;
	else if(virt == 2) UpdateDynamic3DTextLabelText(koykoid_sf[koykaid], COLOR_WHITE, string), koyka_used_sf[koykaid] = 1;
	else if(virt == 3) UpdateDynamic3DTextLabelText(koykoid_lv[koykaid], COLOR_WHITE, string), koyka_used_lv[koykaid] = 1;
	
}
stock UpdateKoykaSvobodin(playerid,koykaid) {
	string[0] = EOS;
	switch(koykaid) {
		case 1: format(string, 96, "√ä√Æ√©√™√† ¬π1\n"CMAIN"√ë√¢√Æ√°√Æ√§√≠√†\n\n"CLIGHTGREY"Usar√≤√• /med\n√∑√≤√Æ√°√ª √ß√†√≠√ø√≤√º √•¬∏");
		case 2: format(string, 96, "√ä√Æ√©√™√† ¬π2\n"CMAIN"√ë√¢√Æ√°√Æ√§√≠√†\n\n"CLIGHTGREY"Usar√≤√• /med\n√∑√≤√Æ√°√ª √ß√†√≠√ø√≤√º √•¬∏");
		case 3: format(string, 96, "√ä√Æ√©√™√† ¬π3\n"CMAIN"√ë√¢√Æ√°√Æ√§√≠√†\n\n"CLIGHTGREY"Usar√≤√• /med\n√∑√≤√Æ√°√ª √ß√†√≠√ø√≤√º √•¬∏");
		case 4: format(string, 96, "√ä√Æ√©√™√† ¬π4\n"CMAIN"√ë√¢√Æ√°√Æ√§√≠√†\n\n"CLIGHTGREY"Usar√≤√• /med\n√∑√≤√Æ√°√ª √ß√†√≠√ø√≤√º √•¬∏");
		case 5: format(string, 96, "√ä√Æ√©√™√† ¬π5\n"CMAIN"√ë√¢√Æ√°√Æ√§√≠√†\n\n"CLIGHTGREY"Usar√≤√• /med\n√∑√≤√Æ√°√ª √ß√†√≠√ø√≤√º √•¬∏");
		case 6: format(string, 96, "√ä√Æ√©√™√† ¬π6\n"CMAIN"√ë√¢√Æ√°√Æ√§√≠√†\n\n"CLIGHTGREY"Usar√≤√• /med\n√∑√≤√Æ√°√ª √ß√†√≠√ø√≤√º √•¬∏");
		case 7: format(string, 96, "√ä√Æ√©√™√† ¬π7\n"CMAIN"√ë√¢√Æ√°√Æ√§√≠√†\n\n"CLIGHTGREY"Usar√≤√• /med\n√∑√≤√Æ√°√ª √ß√†√≠√ø√≤√º √•¬∏");
		case 8: format(string, 96, "√ä√Æ√©√™√† ¬π8\n"CMAIN"√ë√¢√Æ√°√Æ√§√≠√†\n\n"CLIGHTGREY"Usar√≤√• /med\n√∑√≤√Æ√°√ª √ß√†√≠√ø√≤√º √•¬∏");
		case 9: format(string, 96, "√ä√Æ√©√™√† ¬π9\n"CMAIN"√ë√¢√Æ√°√Æ√§√≠√†\n\n"CLIGHTGREY"Usar√≤√• /med\n√∑√≤√Æ√°√ª √ß√†√≠√ø√≤√º √•¬∏");
		case 10: format(string, 96, "√ä√Æ√©√™√† ¬π10\n"CMAIN"√ë√¢√Æ√°√Æ√§√≠√†\n\n"CLIGHTGREY"Usar√≤√• /med\n√∑√≤√Æ√°√ª √ß√†√≠√ø√≤√º √•¬∏");
		case 11: format(string, 96, "√ä√Æ√©√™√† ¬π11\n"CMAIN"√ë√¢√Æ√°√Æ√§√≠√†\n\n"CLIGHTGREY"Usar√≤√• /med\n√∑√≤√Æ√°√ª √ß√†√≠√ø√≤√º √•¬∏");
		case 12: format(string, 96, "√ä√Æ√©√™√† ¬π12\n"CMAIN"√ë√¢√Æ√°√Æ√§√≠√†\n\n"CLIGHTGREY"Usar√≤√• /med\n√∑√≤√Æ√°√ª √ß√†√≠√ø√≤√º √•¬∏");
		case 13: format(string, 96, "√ä√Æ√©√™√† ¬π13\n"CMAIN"√ë√¢√Æ√°√Æ√§√≠√†\n\n"CLIGHTGREY"Usar√≤√• /med\n√∑√≤√Æ√°√ª √ß√†√≠√ø√≤√º √•¬∏");
		case 14: format(string, 96, "√ä√Æ√©√™√† ¬π14\n"CMAIN"√ë√¢√Æ√°√Æ√§√≠√†\n\n"CLIGHTGREY"Usar√≤√• /med\n√∑√≤√Æ√°√ª √ß√†√≠√ø√≤√º √•¬∏");
		case 15: format(string, 96, "√ä√Æ√©√™√† ¬π15\n"CMAIN"√ë√¢√Æ√°√Æ√§√≠√†\n\n"CLIGHTGREY"Usar√≤√• /med\n√∑√≤√Æ√°√ª √ß√†√≠√ø√≤√º √•¬∏");
		case 16: format(string, 96, "√ä√Æ√©√™√† ¬π16\n"CMAIN"√ë√¢√Æ√°√Æ√§√≠√†\n\n"CLIGHTGREY"Usar√≤√• /med\n√∑√≤√Æ√°√ª √ß√†√≠√ø√≤√º √•¬∏");
		case 17: format(string, 96, "√ä√Æ√©√™√† ¬π17\n"CMAIN"√ë√¢√Æ√°√Æ√§√≠√†\n\n"CLIGHTGREY"Usar√≤√• /med\n√∑√≤√Æ√°√ª √ß√†√≠√ø√≤√º √•¬∏");
		case 18: format(string, 96, "√ä√Æ√©√™√† ¬π18\n"CMAIN"√ë√¢√Æ√°√Æ√§√≠√†\n\n"CLIGHTGREY"Usar√≤√• /med\n√∑√≤√Æ√°√ª √ß√†√≠√ø√≤√º √•¬∏");
		case 19: format(string, 96, "√ä√Æ√©√™√† ¬π19\n"CMAIN"√ë√¢√Æ√°√Æ√§√≠√†\n\n"CLIGHTGREY"Usar√≤√• /med\n√∑√≤√Æ√°√ª √ß√†√≠√ø√≤√º √•¬∏");
		case 20: format(string, 96, "√ä√Æ√©√™√† ¬π20\n"CMAIN"√ë√¢√Æ√°√Æ√§√≠√†\n\n"CLIGHTGREY"Usar√≤√• /med\n√∑√≤√Æ√°√ª √ß√†√≠√ø√≤√º √•¬∏");
		case 21: format(string, 96, "√ä√Æ√©√™√† ¬π21\n"CMAIN"√ë√¢√Æ√°√Æ√§√≠√†\n\n"CLIGHTGREY"Usar√≤√• /med\n√∑√≤√Æ√°√ª √ß√†√≠√ø√≤√º √•¬∏");
		case 22: format(string, 96, "√ä√Æ√©√™√† ¬π22\n"CMAIN"√ë√¢√Æ√°√Æ√§√≠√†\n\n"CLIGHTGREY"Usar√≤√• /med\n√∑√≤√Æ√°√ª √ß√†√≠√ø√≤√º √•¬∏");
		case 23: format(string, 96, "√ä√Æ√©√™√† ¬π23\n"CMAIN"√ë√¢√Æ√°√Æ√§√≠√†\n\n"CLIGHTGREY"Usar√≤√• /med\n√∑√≤√Æ√°√ª √ß√†√≠√ø√≤√º √•¬∏");
		case 24: format(string, 96, "√ä√Æ√©√™√† ¬π24\n"CMAIN"√ë√¢√Æ√°√Æ√§√≠√†\n\n"CLIGHTGREY"Usar√≤√• /med\n√∑√≤√Æ√°√ª √ß√†√≠√ø√≤√º √•¬∏");
	}
	new virt = GetPVarInt(playerid, "vw_med");
	if(virt == 1) UpdateDynamic3DTextLabelText(koykoid_ls[koykaid], COLOR_WHITE, string), koyka_used_ls[koykaid] = 0;
	else if(virt == 2) UpdateDynamic3DTextLabelText(koykoid_sf[koykaid], COLOR_WHITE, string), koyka_used_sf[koykaid] = 0;
	else if(virt == 3) UpdateDynamic3DTextLabelText(koykoid_lv[koykaid], COLOR_WHITE, string), koyka_used_lv[koykaid] = 0;
}
stock AddStorage(storageid, numberstor) {
	switch(storageid) {
		case 1: storage_mine[StLow] += numberstor;
		case 2: storage_mine[StLowReady] += numberstor;
		case 3: storage_mine[StHigh] += numberstor;
		case 4: storage_mine[StHighReady] += numberstor;
	}
	UpdateStorages(storageid);
	new tempstr[128];
	mysql_format(mysql_Handle, tempstr, sizeof(tempstr), "UPDATE `storages` SET `minelow` = %d, `minelowready` = %d, `minehigh` = %d, `minehighready` = %d", storage_mine[StLow], storage_mine[StLowReady], storage_mine[StHigh], storage_mine[StHighReady]);
	mysql_tquery(mysql_Handle, tempstr);
}
stock GetClosestPlayer(p1) {
	new Float:dis = 99999.99,Float:dis2,player = INVALID_PLAYER_ID;
	foreach(new x:Player) {
		if(x != p1) {
			dis2 = GetDistanceBetweenPlayers(x,p1);
			if(dis2 < dis && dis2 != -1.00) dis = dis2,player = x;
		}
	}
	return player;
}
stock VehToPoint(Float:radi, vehid, Float:x, Float:y, Float:z) {
	new Float:oldposx, Float:oldposy, Float:oldposz;
	new Float:tempposx, Float:tempposy, Float:tempposz;
	GetVehiclePos(vehid, oldposx, oldposy, oldposz);
	tempposx = (oldposx -x);
	tempposy = (oldposy -y);
	tempposz = (oldposz -z);
	if(((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi))) {
		return 1;
	}
	return 0;
}
stock sell_unpaid_hotel(hotelid) {
	new id_owner = GetPlayerID(hotel_info[hotelid][hotel_owner]);
	if(IsPlayerConnected(id_owner)) {
		pData[id_owner][pHotel] = -1;
		SCM(id_owner, COLOR_ERROR, "√Ç√ª √°√ª√´√® √¢√ª√±√•√´√•√≠√ª √®√ß √Æ√≤√•√´√ø √ß√† √≠√•√≥√Ø√´√†√≤√≥");

		if(house_carid[id_owner][0] != 0) {
			DestroyVehicle(house_carid[id_owner][0]);
			house_carid[id_owner][0] = 0;
		}
	}
	else {
		mysql_format(mysql_Handle, string, 90, "UPDATE `accounts` SET `propsold` = '5' WHERE `Name` = '%s'", hotel_info[hotelid][hotel_owner]);
		mysql_tquery(mysql_Handle, string);
	}
	mysql_format(mysql_Handle, string, 180, "UPDATE `accounts` SET `pHotel` = '-1' WHERE `Name` = '%s'", hotel_info[hotelid][hotel_owner]);
	mysql_tquery(mysql_Handle, string);
	format(hotel_info[hotelid][hotel_owner], 5, "None");
	hotel_info[hotelid][hotel_is_using] = false;
	hotel_info[hotelid][hotel_days] = 0;
	hotel_info[hotelid][hotel_lock] = false;
	mysql_format(mysql_Handle, string, 144, "UPDATE `hotel` SET `lock` = '0', `owner` = 'None', `days` = '0', `using` = '0' WHERE `id` = %d", hotelid);
	mysql_tquery(mysql_Handle, string);
}
stock sell_unpaid_flat(_flat_id) {
	new id_owner = GetPlayerID(flat_info[_flat_id][fl_owner]);
	new price_sell = flat_info[_flat_id][fl_price];
	
	if(IsPlayerConnected(id_owner)) {
		pData[id_owner][pFlat] = -1;
		SCM(id_owner, COLOR_ERROR, "√Ç√†√∏√† √™√¢√†√∞√≤√®√∞√† √°√ª√´√† √Ø√∞√ÆS√≠√≠√† √£√Æ√±√≥S√≠√∞√±√≤√¢√≥ √ß√† √≠√•√≥√Ø√´√†√≤√≥");
		SCM(id_owner, COLOR_ERROR, "√ç√† √Ç√†√∏ √°√†√≠√™√Æ√¢√±√™√®√© √±√∑¬∏√≤ √°√ª√´√† √¢√Æ√ß√¢√∞√†√π√•√≠√† √•¬∏ √£√Æ√±. √±√≤√Æ√®√¨√Æ√±√≤√º");
		pData[id_owner][pBank] += price_sell;
		new gametext[35];
		format(gametext, sizeof(gametext), "~g~+%d$ ~n~~g~ bank", price_sell);
		GameTextForPlayer(id_owner, gametext, 3000, 1);

		if(house_carid[id_owner][0] != 0) {
			DestroyVehicle(house_carid[id_owner][0]);
			house_carid[id_owner][0] = 0;
		}
	}
	else {
		mysql_format(mysql_Handle, string, 90, "UPDATE `accounts` SET `propsold` = '6' WHERE `Name` = '%s'",flat_info[_flat_id][fl_owner]);
		mysql_tquery(mysql_Handle, string);
	}

	if(strcmp(flat_info[_flat_id][fl_renter], "None")) {
		new renter_id = GetPlayerID(flat_info[_flat_id][fl_renter]);
		if(IsPlayerConnected(renter_id)) {
			pData[renter_id][p_rent_flat] = -1;
			SCM(renter_id, COLOR_ERROR, "√ä√¢√†√∞√≤√®√∞√†, √™√Æ√≤√Æ√∞√≥√æ √Ç√ª √†√∞√•√≠√§√Æ√¢√†√´√®, √°√ª√´√† √Ø√∞√ÆS√≠√≠√†. √Ñ√Æ√£√Æ√¢√Æ√∞ √†√∞√•√≠√§√ª √∞√†√±√≤√Æ√∞√£√≠√≥√≤");
		}
		mysql_format(mysql_Handle, string, 100, "UPDATE `accounts` SET `p_rent_flat` = '-1' WHERE `Name` = '%s'", flat_info[_flat_id][fl_renter]);
		mysql_tquery(mysql_Handle, string);
		strmid(flat_info[_flat_id][fl_renter], "None", 0, strlen("None"), 255);
	}

	mysql_format(mysql_Handle, string, 130, "UPDATE `accounts` SET `pFlat` = '-1', `pBank` = `pBank` + %d WHERE `Name` = '%s'", price_sell, flat_info[_flat_id][fl_owner]);
	mysql_tquery(mysql_Handle, string);

	flat_info[_flat_id][fl_lock] = false;
	flat_info[_flat_id][fl_rentstatus] = false;
	flat_info[_flat_id][fl_rentprice] = 0;
	flat_info[_flat_id][fl_owned] = false;
	strmid(flat_info[_flat_id][fl_owner], "None", 0, strlen("None"), 255);
	new fl_query[225];
	mysql_format(mysql_Handle, fl_query, sizeof(fl_query), "UPDATE `flats` SET `_fl_lock` = '0', `_fl_rentstatus` = '0', `_fl_rentprice` = '0', `_fl_renter` = 'None', `_fl_owned` = '0', `_fl_owner` = 'None' WHERE `_fl_id` = %d", _flat_id);
	mysql_tquery(mysql_Handle, fl_query);
	check_icon_flats();

	if(IsValidDynamicPickup(flat_info[_flat_id][fl_pickupID])) 
		DestroyDynamicPickup(flat_info[_flat_id][fl_pickupID]);
	flat_info[_flat_id][fl_pickupID] = CreateDynamicPickup(19524, 23, flat_info[_flat_id][fl_enterposX], flat_info[_flat_id][fl_enterposY], flat_info[_flat_id][fl_enterposZ], 1);
}
stock sell_unpaid_garage(garage_ID) {
	new id_owner = GetPlayerID(garage[garage_ID][ownerNAME]);
	
	if(IsPlayerConnected(id_owner)) {
		pData[id_owner][have_garage] = -1;
		SCM(id_owner, COLOR_ERROR, "√Ç√†√∏ √£√†√∞√†√¶ √°√ª√´ √Ø√∞√ÆS√≠√≠ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥ √ß√† √≠√•√≥√Ø√´√†√≤√≥");
		SCM(id_owner, COLOR_ERROR, "√ç√† √Ç√†√∏ √°√†√≠√™√Æ√¢√±√™√®√© √±√∑¬∏√≤ √°√ª√´√† √¢√Æ√ß√¢√∞√†√π√•√≠√† √•√£√Æ √±√≤√Æ√®√¨√Æ√±√≤√º");
		pData[id_owner][pBank] += 1000000;
		GameTextForPlayer(id_owner, "~g~+1000000$ ~n~~g~ bank", 3000, 1);
	}
	else {
		mysql_format(mysql_Handle, string, 90, "UPDATE `accounts` SET `propsold` = '7' WHERE `Name` = '%s'",garage[garage_ID][ownerNAME]);
		mysql_tquery(mysql_Handle, string);
	}

	mysql_format(mysql_Handle, string, 128, "UPDATE `accounts` SET `have_garage` = '-1', `pBank` = `pBank` + '1000000' WHERE `Name` = '%s'", garage[garage_ID][ownerNAME]);
	mysql_tquery(mysql_Handle, string);

	garage[garage_ID][gbuyed]=false;
	garage[garage_ID][ownerID] = 0;
	garage[garage_ID][gdays] = 0;
	format(garage[garage_ID][ownerNAME],24," ");
	new gquery[100];
	mysql_format(mysql_Handle,gquery,sizeof(gquery),"UPDATE `garage` SET `days`='0',`buyed`='0', `ownerID`='0', `ownerNAME`=' ' WHERE `id`=%d",garage_ID);
	mysql_tquery(mysql_Handle,gquery);
}
stock SellUnpaidHouse(house) {
	new sellunp_price = HouseInfo[house][hValue] / 100 * 60;
	if(IsPlayerConnected(GetPlayerID(HouseInfo[house][hOwner])) && pData[GetPlayerID(HouseInfo[house][hOwner])][pHouse] == HouseInfo[house][hID]) {
		new unpid = GetPlayerID(HouseInfo[house][hOwner]), strgmt[40];
		pData[unpid][pHouse] = -1;
		SCM(unpid, COLOR_ERROR, "√Ç√†√∏ √§√Æ√¨ √°√ª√´ √Ø√∞√ÆS√≠√≠ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥ √ß√† √≠√•√≥√Ø√´√†√≤√≥");
		SCM(unpid, COLOR_ERROR, "√ç√† √Ç√†√∏ √°√†√≠√™√Æ√¢√±√™√®√© √±√∑¬∏√≤ √°√ª√´√Æ √¢√Æ√ß√¢√∞√†√π√•√≠√Æ 60 √Ø√∞√Æ√∂√•√≠√≤√Æ√¢ √•√£√Æ √±√≤√Æ√®√¨√Æ√±√≤√®");
		pData[unpid][pBank] += sellunp_price;
		PlayerPlaySound(unpid, 40402, 0.0, 0.0, 0.0);
		format(strgmt, sizeof strgmt, "~g~+%d$ ~n~~g~ bank", sellunp_price);
		GameTextForPlayer(unpid, strgmt, 3000, 1);
		DestroyVehicle(house_carid[unpid][0]), house_carid[unpid][0] = 0, DestroyVehicle(house_carid[unpid][1]), house_carid[unpid][1] = 0, DestroyVehicle(house_carid[unpid][2]), house_carid[unpid][2] = 0;
		mysql_format(mysql_Handle, string, 180, "UPDATE `accounts` SET `pBank` = `pBank` + %d, `pPhousekey` = '-1' WHERE `Name` = '%s'", sellunp_price, HouseInfo[house][hOwner]);
		mysql_tquery(mysql_Handle, string);
	}
	else {
		mysql_format(mysql_Handle, string, 180, "UPDATE `accounts` SET `propsold` = '1', `pBank` = `pBank` + %d, `pPhousekey` = '-1' WHERE `Name` = '%s'", sellunp_price, HouseInfo[house][hOwner]);
		mysql_tquery(mysql_Handle, string);
	}

	for(new i =0;i<total_count_mebel;i++) {
    	if(mebel_info[i][mHouseID] != house) continue;
    	DestroyDynamicObject(mebel_info[i][mObjectID]);
    }
    new query[60];
	mysql_format(mysql_Handle, query, sizeof(query), "DELETE FROM `ownmebel` WHERE `homeOwn`=%i", house);
	mysql_tquery(mysql_Handle, query);

	HouseInfo[house][hLock] = 1;
	HouseInfo[house][hOwned] = 0;
	HouseInfo[house][hSafe] = 0;
	HouseInfo[house][hPool] = 0;
	HouseInfo[house][hADoor] = 0;
	HouseInfo[house][hSub] = 0;
	for(new i = 0; i != 5; i ++) HouseInfo[house][hGun][i] = 0, HouseInfo[house][hGunAmmo][i] = 0;
	strmid(HouseInfo[house][hOwner], "The State", 0, strlen("The State"), 255);
	UpdateIconHouse(house);
	SaveHouse(house);
}
stock SellUnpaidBiz(bizid) {
	new sellunp_price = BizInfo[bizid][bPrice] / 100 * 60;
	if(IsPlayerConnected(GetPlayerID(BizInfo[bizid][bOwner]))) {
		new unpid = GetPlayerID(BizInfo[bizid][bOwner]), strgmt[40];
		pData[unpid][pBusiness] = -1;
		PlayerPlaySound(unpid, 40402, 0.0, 0.0, 0.0);
		SCM(unpid, COLOR_ERROR, "√Ç√†√∏ √°√®√ß√≠√•√± √°√ª√´ √Ø√∞√ÆS√≠√≠ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥ √ß√† √≠√•√≥√Ø√´√†√≤√≥ √†√∞√•√≠√§√ª");
		SCM(unpid, COLOR_ERROR, "√ç√† √Ç√†√∏ √°√†√≠√™√Æ√¢√±√™√®√© √±√∑¬∏√≤ √°√ª√´√Æ √¢√Æ√ß√¢√∞√†√π√•√≠√Æ 60 √Ø√∞√Æ√∂√•√≠√≤√Æ√¢ √•√£√Æ √±√≤√Æ√®√¨√Æ√±√≤√®");
		format(strgmt, sizeof strgmt, "~g~+%d$ ~n~~g~ bank", sellunp_price);
		GameTextForPlayer(unpid, strgmt, 3000, 1);
		pData[unpid][pBank] += sellunp_price;
		mysql_format(mysql_Handle, string, 180, "UPDATE `accounts` SET `pBank` = `pBank` + %d, `pPbiskey` = '-1' WHERE `Name` = '%s'", sellunp_price, BizInfo[bizid][bOwner]);
		mysql_tquery(mysql_Handle, string);
	}
	else {
		mysql_format(mysql_Handle, string, 180, "UPDATE `accounts` SET `propsold` = '2', `pBank` = `pBank` + %d, `pPbiskey` = '-1' WHERE `Name` = '%s'", sellunp_price, BizInfo[bizid][bOwner]);
		mysql_tquery(mysql_Handle, string);
	}
	SaveInstrument();
	BizInfo[bizid][bVhod] = 0;
	strmid(BizInfo[bizid][bOwner], "None", 0, strlen("None"), 255);
	BizInfo[bizid][bLock] = 0;
	BizInfo[bizid][bPribil] = 0;
	UpdateBizInfo(bizid);
	SaveBusiness(bizid);
}
stock SellUnpaidFilling(fillingid) {
	new sellunp_price = Filling[fillingid][fPrice] / 100 * 40;
	if(IsPlayerConnected(GetPlayerID(Filling[fillingid][fOwner]))) {
		new unpid = GetPlayerID(Filling[fillingid][fOwner]), strgmt[40];
		pData[unpid][pFilling] = -1;
		SCM(unpid, COLOR_ERROR, "√Ç√†√∏√† √Ä√á√ë √°√ª√´√† √Ø√∞√ÆS√≠√≠√† √£√Æ√±√≥S√≠√∞√±√≤√¢√≥ √ß√† √≠√•√≥√Ø√´√†√≤√≥ √†√∞√•√≠√§√ª");
		SCM(unpid, COLOR_ERROR, "√ç√† √Ç√†√∏ √°√†√≠√™√Æ√¢√±√™√®√© √±√∑¬∏√≤ √°√ª√´√Æ √¢√Æ√ß√¢√∞√†√π√•√≠√Æ 40 √Ø√∞√Æ√∂√•√≠√≤√Æ√¢ √•¬∏ √±√≤√Æ√®√¨√Æ√±√≤√®");
		PlayerPlaySound(unpid, 40402, 0.0, 0.0, 0.0);
		format(strgmt, sizeof strgmt, "~g~+%d$ ~n~~g~ bank", sellunp_price);
		GameTextForPlayer(unpid, strgmt, 3000, 1);
		pData[unpid][pBank] += sellunp_price;
		mysql_format(mysql_Handle, string, 180, "UPDATE `accounts` SET `pBank` = `pBank` + %d, `pPsbiskey` = '-1' WHERE `Name` = '%s'", sellunp_price, Filling[fillingid][fOwner]);
		mysql_tquery(mysql_Handle, string);
	}
	else {
		mysql_format(mysql_Handle, string, 180, "UPDATE `accounts` SET `propsold` = '3', `pBank` = `pBank` + %d, `pPsbiskey` = '-1' WHERE `Name` = '%s'", sellunp_price, Filling[fillingid][fOwner]);
		mysql_tquery(mysql_Handle, string);
	}
	strmid(Filling[fillingid][fOwner],"None",0,strlen("None"),255);
    Filling[fillingid][fLock] = false;
	mysql_format(mysql_Handle, string, 180, "UPDATE `filling` SET `fOwner` = 'None', `fLock` = '0' WHERE `fID` = %d", fillingid);
	mysql_tquery(mysql_Handle, string);
	update_3dtext_fill(fillingid);
    update_text_fill(fillingid);
}
stock clear_unpaid_bill(bill_idd) {
	new b_num_str[100] = "√ê√•√™√´√†√¨√≠√ª√© √°√†√≠√≠√•√∞\n√Ä√∞√•√≠S√≠ - GPS 8-62",
	b_num_str_LV[100] = "√ê√•√™√´√†√¨√≠√ª√© √°√†√≠√≠√•√∞\n√Ä√∞√•√≠S√≠ - GPS 8-63",
	b_num_str_SF[100] = "√ê√•√™√´√†√¨√≠√ª√© √°√†√≠√≠√•√∞\n√Ä√∞√•√≠S√≠ - GPS 8-64";
	if(IsPlayerConnected(GetPlayerID(billboard_info[bill_idd][bs_renter]))) {
		new billrent_id = GetPlayerID(billboard_info[bill_idd][bs_renter]);
		SCM(billrent_id, COLOR_ERROR, "√ë√∞√Æ√™ √†√∞√•√≠√§√ª √∞√•√™√´√†√¨√≠√Æ√£√Æ √°√®√´√°√Æ√∞S√≠ √ß√†√™√Æ√≠√∑√®√´√±√ø. √Ñ√Æ√£√Æ√¢√Æ√∞ √°√ª√´ √∞√†√±√≤√Æ√∞√£√≠√≥√≤");
		PlayerPlaySound(billrent_id, 40402, 0.0, 0.0, 0.0);
		pData[billrent_id][p_bill_id] = 0;
		UpdatePlayerData(billrent_id, "p_bill_id", 0);
	}
	else {
		mysql_format(mysql_Handle, string, 130, "UPDATE `accounts` SET `p_bill_id` = '0', `propsold` = '4' WHERE `Name` = '%s'", billboard_info[bill_idd][bs_renter]);
		mysql_tquery(mysql_Handle, string);
	}
	billboard_info[bill_idd][bs_rental_days] = 0;
	strmid(billboard_info[bill_idd][bs_renter], "None", 0, strlen("None"), 255); 
	new str_r[240]; mysql_format(mysql_Handle, str_r, 240, "UPDATE `billboards` SET `bs_renter` = 'None', `bs_rental_days` = '0', `bs_text` = 'None' WHERE `bs_id` = %d", bill_idd);
	mysql_tquery(mysql_Handle, str_r); DestroyObject(billboard_obj[bill_idd]);
	billboard_obj[bill_idd] = CreateObject(7606, billboard_info[bill_idd][bs_cord][0], billboard_info[bill_idd][bs_cord][1], billboard_info[bill_idd][bs_cord][2], 0.0, 0.0, billboard_info[bill_idd][bs_cord][3]);
	if(billboard_info[bill_idd][bs_id] <= 10) SetObjectMaterialText(billboard_obj[bill_idd], b_num_str, 0, 130, "Arial", 48, 0, 0xFFFFFFFF, 0x131114, 1);
	else if(billboard_info[bill_idd][bs_id] <= 20) SetObjectMaterialText(billboard_obj[bill_idd], b_num_str_LV, 0, 130, "Arial", 48, 0, 0xFFFFFFFF, 0x131114, 1);
	else if(billboard_info[bill_idd][bs_id] <= 30) SetObjectMaterialText(billboard_obj[bill_idd], b_num_str_SF, 0, 130, "Arial", 48, 0, 0xFFFFFFFF, 0x131114, 1);
}
CB: PayDay() {

	print("PayDay");
	TimeInit();

	new payday_str[50], hour, minute, second, player_plats, year, month, day, fmt_date[62];
	getdate(year, month, day); gettime(hour, minute, second); FixHour(hour);
	drugs_factorygang += 2000; new PP_query[90], str_drugs[144];
	mysql_format(mysql_Handle, PP_query, 90, "UPDATE `otherfuncs` SET `drugs_gang` = %d", drugs_factorygang);
	mysql_tquery(mysql_Handle, PP_query);
	format(str_drugs, 144, "√ç√†√∞√™√Æ√ß√†√¢√Æ√§\n"CWHITE"√ç√†√∞√™√Æ√≤√®√™√Æ√¢ √≠√† √ß√†√¢√Æ√§√•: "CLITEBLUE"%d √£√∞\n"CLITEBLUE"/buydrugs "CWHITE"- √™√≥√Ø√®√≤√º √≠√†√∞√™√Æ√≤√®√™√®", drugs_factorygang);
	UpdateDynamic3DTextLabelText(text_drugsgang, 0x77AA55FF, str_drugs);
	format(fmt_date, sizeof(fmt_date), "%02d.%02d.%d~n~%s", day, month, year, wd_name_eng[weekday(day, month, year)]);
	TextDrawSetString(PHONETD[15], fmt_date);
    mysql_tquery(mysql_Handle, "UPDATE `accounts` SET `pInGameTime` = '0'");
	if(hour == 0 && minute < 5) {
		for(new x = 0; x != TOTAL_HOUSE + 1; x ++) if(HouseInfo[x][hPay] <= 1 && HouseInfo[x][hOwned]) SellUnpaidHouse(x);
		for(new x = 1; x != BIZES + 1; x ++)
		{
			BizInfo[x][bPribil] = 0;
			if(BizInfo[x][bPay] <= 1 && strcmp(BizInfo[x][bOwner], "None"))
				SellUnpaidBiz(x);
		}
		for(new x = 1; x != FILLING_TOTAL + 1; x ++) if(Filling[x][fPay] <= 1) SellUnpaidFilling(x);
		for(new x = 0; x < total_hotels; x ++) if(hotel_info[x][hotel_days] <= 1 && hotel_info[x][hotel_is_using]) sell_unpaid_hotel(x);
		for(new x = 1; x != 49; x ++) if(flat_info[x][fl_days] <= 1 && flat_info[x][fl_owned]) sell_unpaid_flat(x);
		for(new x = 1; x != 13; x ++) if(garage[x][gdays] <= 1 && garage[x][gbuyed]) sell_unpaid_garage(x);
		mysql_tquery(mysql_Handle, "UPDATE `house` SET `hPay` = '5' WHERE `hOwner` = 'The State'");
		mysql_tquery(mysql_Handle, "UPDATE `hotel` SET `days` = '0' WHERE `using` = '0'");
		mysql_tquery(mysql_Handle, "UPDATE `flats` SET `_fl_days` = '5' WHERE `_fl_owned` = '0'");
		mysql_tquery(mysql_Handle, "UPDATE `business` SET `bPay` = '5' WHERE `bOwner` = 'None'");
		mysql_tquery(mysql_Handle, "UPDATE `filling` SET `fPay` = '5' WHERE `fOwner` = 'None'");
		mysql_tquery(mysql_Handle, "UPDATE `house` SET `hPay` = `hPay` - '1' WHERE `hOwned` = '1'");
        mysql_tquery(mysql_Handle, "UPDATE `hotel` SET `days` = `days` - '1' WHERE `using` = '1'");
        mysql_tquery(mysql_Handle, "UPDATE `flats` SET `_fl_days` = `_fl_days` - '1' WHERE `_fl_owned` = '1'");
		mysql_tquery(mysql_Handle, "UPDATE `business` SET `bPay` = `bPay` - '1' WHERE `bOwner` <> 'None'");

		mysql_tquery(mysql_Handle, "UPDATE `business` SET `bPribil` = 0");

		mysql_tquery(mysql_Handle, "UPDATE `filling` SET `fPay` = `fPay` - '1' WHERE `fOwner` <> 'None'");
		mysql_tquery(mysql_Handle, "UPDATE `garage` SET `days` = `days` - '1' WHERE `buyed` = '1'");
		mysql_tquery(mysql_Handle, "UPDATE `accounts` SET `pHungry` = '1', `time2` = `time1`");
		for(new a = 1; a < 11; a ++) {
			if(strcmp(billboard_info[a][bs_renter], "None") && billboard_info[a][bs_rental_days] <= 1) clear_unpaid_bill(a);
			else billboard_info[a][bs_rental_days] --;
		}
        mysql_tquery(mysql_Handle, "UPDATE `accounts` SET `time2` = `time1`");
        mysql_tquery(mysql_Handle, "UPDATE `accounts` SET `time1` = '0,0'");
        mysql_tquery(mysql_Handle, "UPDATE `accounts` SET `newbiz_Pay` = `newbiz_Pay` - '1' WHERE `newbiz_Pay` <> '0'");
        mysql_tquery(mysql_Handle, "UPDATE `accounts` SET `p_premium_days` = `p_premium_days` - '1' WHERE `p_premium_days` <> '0' AND `p_premium_days` <> '-1'");
        mysql_tquery(mysql_Handle, "UPDATE `accounts` SET `p_premium` = '0' WHERE `p_premium_days` = '0' AND `p_premium` = '1'");
		mysql_tquery(mysql_Handle, "UPDATE `billboards` SET `bs_rental_days` = `bs_rental_days` - '1' WHERE `bs_rental_days` > '1' AND `bs_renter` <> 'None'");
		
		mysql_tquery(mysql_Handle, "UPDATE `accounts` SET `strengh_today` = '0'");
		if(random(3) == 1) mysql_tquery(mysql_Handle, "UPDATE `accounts` SET `strengh` = `strengh` - '1' WHERE `strengh` > '0'");

		mysql_tquery(mysql_Handle, "UPDATE `accounts` SET `allhours` = `allhours` + 1");
	}
    format(payday_str, 50, "√í√•√™√≥√π√•√• √¢√∞√•√¨√ø: {eadc55}%i:%02d", hour, minute);
    time_server = hour;
    if(hour < 7 || hour >= 22) weather_server = 10;
	else weather_server = 1;
	SetWeather(weather_server);
    SCMTA(-1, payday_str);
	foreach(new i:Player) {

		if(GetPlayerInterior(i) == 0) SetPlayerTime(i, time_server, 0);
		else SetPlayerTime(i, 12, 0);

		if(hour == 0 && minute < 5) {

			pData[i][allhours]++;

			pData[i][pHungry] = 1;
			pData[i][strengh_today] = 0;
			pData[i][p_time2][0] = pData[i][p_time1][0];
		    pData[i][p_time2][1] = pData[i][p_time1][1];
			pData[i][p_time1][0] = 0;
		    pData[i][p_time1][1] = 0;
		    if(pData[i][pHouse] != -1) HouseInfo[pData[i][pHouse]][hPay] --;
			if(pData[i][pBusiness] != -1) BizInfo[pData[i][pBusiness]][bPay] --;
			if(pData[i][pFilling] != -1) Filling[pData[i][pFilling]][fPay] --;
			if(pData[i][p_premium] && pData[i][p_premium_days] > 0) pData[i][p_premium_days] --;
			if(pData[i][newbiz_Pay] > 0 && (pData[i][unikauto_Have] != 0 || pData[i][autoHave] != 0 || pData[i][food_have] != 0 || pData[i][prok_have] != 0 || pData[i][kiosk_have] != 0)) 
				pData[i][newbiz_Pay]--;
			if(pData[i][newbiz_Pay] < 1 && (pData[i][unikauto_Have] != 0 || pData[i][autoHave] != 0 || pData[i][food_have] != 0 || pData[i][prok_have] != 0 || pData[i][kiosk_have] != 0)) {
				SCM(i, COLOR_ERROR, "√Ç√†√∏ √°√®√ß√≠√•√± √°√ª√´ √Ø√∞√ÆS√≠√≠ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥ √ß√† √≠√•√≥√Ø√´√†√≤√≥ √†√∞√•√≠√§√ª");
				SCM(i, COLOR_ERROR, "√ç√† √Ç√†√∏ √°√†√≠√™√Æ√¢√±√™√®√© √±√∑¬∏√≤ √°√ª√´√Æ √¢√Æ√ß√¢√∞√†√π√•√≠√Æ 50 √Ø√∞√Æ√∂√•√≠√≤√Æ√¢ √•√£√Æ √±√≤√Æ√®√¨√Æ√±√≤√®");
				if(pData[i][unikauto_Have] != 0) {
					pData[i][pBank]+=36000000/100*60;
					UpdatePlayerData(i,"pBank",pData[i][pBank]);
					unikautoOwner = -1;
					pData[i][unikauto_Have] = 0;
					UpdatePlayerData(i, "unikauto_Have", 0);
					mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `unikautoOwner` = '-1'");
					UpdateDynamic3DTextLabelText(unik3dtext, 0x33AA33FF, "√Ä√¢√≤√Æ√±√†√´√Æ√≠ √Ω√™√±√™√´√æ√ß√®√¢√≠√ª√µ √†√¢√≤√Æ\n\n{4682b4}√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"36000000$");
				}
				if(pData[i][autoHave] != 0) {
					pData[i][pBank]+=13000000/100*60;
					UpdatePlayerData(i,"pBank",pData[i][pBank]);
					autoworkOwner = -1;
					pData[i][autoHave] = 0;
					UpdatePlayerData(i, "autoHave", 0);
					mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `autowork_ownerid` = '-1'");
					UpdateDynamic3DTextLabelText(autoworkbiz3D, 0x33AA33FF, "√Ä√¢√≤√Æ√¨√Æ√°√®√´√º√≠√†√ø √¥√†√°√∞√®√™√†\n\n{4682b4}√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"13000000$\n{4682b4}/buybiz √§√´√ø √Ø√Æ√™√≥√Ø√™√®");
				}
				if(pData[i][kiosk_have] != 0) {
					pData[i][pBank]+=500000/100*60;
					UpdatePlayerData(i,"pBank",pData[i][pBank]);
					pData[i][kiosk_have] = 0;
					UpdatePlayerData(i, "kiosk_have", 0);
					switch(pData[i][kiosk_have]) {
						case 1: {
							kiosk1_owner = -1;
							mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `kiosk1_owner` = '-1'");
							UpdateDynamic3DTextLabelText(kiosk_info_1, 0x4682B4FF, "√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"500000$");
						}
						case 2: {
							kiosk2_owner = -1;
							mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `kiosk2_owner` = '-1'");
							UpdateDynamic3DTextLabelText(kiosk_info_2, 0x4682B4FF, "√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"500000$");
						}
						case 3: {
							kiosk3_owner = -1;
							mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `kiosk3_owner` = '-1'");
							UpdateDynamic3DTextLabelText(kiosk_info_3, 0x4682B4FF, "√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"500000$");
						}
						case 4: {
							kiosk4_owner = -1;
							mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `kiosk4_owner` = '-1'");
							UpdateDynamic3DTextLabelText(kiosk_info_4, 0x4682B4FF, "√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"500000$");
						}
					}
				}
				if(pData[i][prok_have] != 0) {
					pData[i][pBank]+=1700000/100*60;
					UpdatePlayerData(i,"pBank",pData[i][pBank]);
					pData[i][prok_have] = 0;
					UpdatePlayerData(i, "prok_have", 0);
					switch(pData[i][prok_have]) {
						case 1: {
							prok1_owner = -1;
							mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `prok1_owner` = '-1'");
							UpdateDynamic3DTextLabelText(prok_info_1, 0x4682B4FF, "√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"2000000$");
						}
						case 2: {
							prok2_owner = -1;
							mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `prok2_owner` = '-1'");
							UpdateDynamic3DTextLabelText(prok_info_2, 0x4682B4FF, "√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"2000000$");
						}
						case 3: {
							prok3_owner = -1;
							mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `prok3_owner` = '-1'");
							UpdateDynamic3DTextLabelText(prok_info_3, 0x4682B4FF, "√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"2000000$");
						}
						case 4: {
							prok4_owner = -1;
							mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `prok4_owner` = '-1'");
							UpdateDynamic3DTextLabelText(prok_info_4, 0x4682B4FF, "√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"2000000$");
						}
						case 5: {
							prok5_owner = -1;
							mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `prok5_owner` = '-1'");
							UpdateDynamic3DTextLabelText(prok_info_5, 0x4682B4FF, "√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"2000000$");
						}
						case 6: {
							prok6_owner = -1;
							mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `prok6_owner` = '-1'");
							UpdateDynamic3DTextLabelText(prok_info_6, 0x4682B4FF, "√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"2000000$");
						}
						case 7: {
							prok7_owner = -1;
							mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `prok7_owner` = '-1'");
							UpdateDynamic3DTextLabelText(prok_info_7, 0x4682B4FF, "√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"2000000$");
						}
					}
				}
				if(pData[i][food_have] != 0) {
					pData[i][pBank]+=350000/100*60;
					UpdatePlayerData(i,"pBank",pData[i][pBank]);
					pData[i][food_have] = 0;
					UpdatePlayerData(i, "food_have", 0);
					if(pData[i][food_have] == 1) {
						food1OwnerID = -1;
						mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `food_owneracc` = '-1'");
						UpdateDynamic3DTextLabelText(food_bomj3d, 0x33AA33FF, "√ã√†√∞√•√™ √± √•√§√Æ√©\n\n{4682b4}√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"350000$\n{4682b4}/buybiz √§√´√ø √Ø√Æ√™√≥√Ø√™√®");
					}
					if(pData[i][food_have] == 2) {
						food2OwnerID = -1;
						mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `food_owneracc_2` = '-1'");
						UpdateDynamic3DTextLabelText(food_bomj3d_2, 0x33AA33FF, "√ã√†√∞√•√™ √± √•√§√Æ√©\n\n{4682b4}√Ç√´√†√§√•√´√•√∂: "CWHITE"No\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"350000$\n{4682b4}/buybiz √§√´√ø √Ø√Æ√™√≥√Ø√™√®");
					}
				}
			}
			if(pData[i][p_premium_days] == 0 && pData[i][p_premium]) {
				SCM(i, 0xFF9933FF, "√ë√∞√Æ√™ √§√•√©√±√≤√¢√®√ø √Ç√†√∏√•√£√Æ √Ø√∞√•√¨√®√≥√¨-√±√≤√†√≤√≥√±√† √ß√†√™√Æ√≠√∑√•√≠");
				pData[i][p_premium] = 0;
			}
		}
		if(!pData[i][pLogin]) continue;
		if(pData[i][pInGameTime] < 20) {
			SCM(i, 0xEE7600FF, "√Ñ√´√ø √Ø√Æ√´√≥√∑√•√≠√®√ø √ß√†√∞√Ø√´√†√≤√ª √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √®√£√∞√• √¨√®√≠√®√¨√≥√¨ 20 √¨√®√≠√≥√≤");
            pData[i][pInGameTime] = 0;
            continue;
		}
		if(pTemp[i][pAFK] >= 300) { // √•√±√´√® √°√Æ√´√•√• 5-√≤√® √¨√®√≠√≥√≤ √¢ AFK
            SCM(i, 0xEE7600FF, "√Ç√ª √≠√• √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ AFK √§√´√ø √Ø√Æ√´√≥√∑√•√≠√®√ø √ß√†√∞√Ø√´√†√≤√ª");
            pData[i][pInGameTime] = 0;
            continue;
        }
		if(pData[i][pWanted]) pData[i][pWanted] --;
		SetPlayerWantedLevel(i, pData[i][pWanted]);
		UpdatePlayerData(i, "pWanted", pData[i][pWanted]);
		new salary = 0; switch(pData[i][pMember]) {
			case 26: {
				switch(pData[i][pRank]) {
					case 1: salary = 4500;
					case 2: salary = 7000;
					case 3: salary = 8000;
					case 4: salary = 11000;
					case 5: salary = 14000;
					case 6: salary = 17000;
					case 7: salary = 20000;
					case 8: salary = 22500;
					case 9: salary = 24000;
					case 10: salary = 26000;
				}
			}
			case 7, 8, 9: {
				switch(pData[i][pRank]) {
					case 1: salary = 3500;
					case 2: salary = 6000;
					case 3: salary = 8000;
					case 4: salary = 11000;
					case 5: salary = 14000;
					case 6: salary = 18000;
					case 7: salary = 19000;
					case 8: salary = 20500;
					case 9: salary = 22000;
					case 10: salary = 24000;
				}
			}
			case 1, 10, 21, 22: {
				switch(pData[i][pRank]) {
					case 1: salary = 2500;
					case 2: salary = 4500;
					case 3: salary = 7000;
					case 4: salary = 10000;
					case 5: salary = 12000;
					case 6: salary = 14500;
					case 7: salary = 17000;
					case 8: salary = 19000;
					case 9: salary = 20000;
					case 10: salary = 22500;
				}
			}
			case 2: {
				switch(pData[i][pRank]) {
					case 1: salary = 2500;
					case 2: salary = 6500;
					case 3: salary = 9000;
					case 4: salary = 11000;
					case 5: salary = 14000;
					case 6: salary = 16500;
					case 7: salary = 19000;
					case 8: salary = 20500;
					case 9: salary = 22000;
					case 10: salary = 23500;
				}
			}
			case 4, 23, 28, 29: {
				switch(pData[i][pRank]) {
					case 1: salary = 2500;
					case 2: salary = 5000;
					case 3: salary = 7500;
					case 4: salary = 10000;
					case 5: salary = 12500;
					case 6: salary = 14000;
					case 7: salary = 16000;
					case 8: salary = 18000;
					case 9: salary = 20500;
					case 10: salary = 22000;
				}
			}

			case 5: salary = lcn_salary;
			case 6: salary = yak_salary;
			case 14: salary = rus_salary;

			case 12, 13, 15, 17, 18: salary = frac_gangzone[pData[i][pMember]] * 100;
			case 11: {
				switch(pData[i][pRank]) {
					case 1: salary = 2000;
					case 2: salary = 3000;
					case 3: salary = 5000;
					case 4: salary = 7000;
					case 5: salary = 10000;
					case 6: salary = 12000;
					case 7: salary = 14500;
					case 8: salary = 16000;
					case 9: salary = 17500;
					case 10: salary = 19000;
				}
			}
			case 16: {
				switch(pData[i][pRank]) {
					case 1: salary = 2000;
					case 2: salary = 4000;
					case 3: salary = 6500;
					case 4: salary = 8000;
					case 5: salary = 11000;
					case 6: salary = 13500;
					case 7: salary = 16000;
					case 8: salary = 19000;
					case 9: salary = 20500;
					case 10: salary = 22000;
				}
			}
			case 19, 20, 24, 27: {
				switch(pData[i][pRank]) {
					case 1: salary = 1400;
					case 2: salary = 3000;
					case 3: salary = 5000;
					case 4: salary = 7000;
					case 5: salary = 9000;
					case 6: salary = 11500;
					case 7: salary = 14000;
					case 8: salary = 15500;
					case 9: salary = 17000;
					case 10: salary = 20000;
				}
			}
			default: salary = Gos_Nalog[0] + 35;
		}
		if(pData[i][pMember] == 0) {
			if(pData[i][pAdmin] == 1) salary += 3000;
			if(pData[i][pAdmin] == 2) salary += 4000;
			if(pData[i][pAdmin] == 3) salary += 5000;
			if(pData[i][pAdmin] == 4) salary += 6000;
			if(pData[i][pAdmin] == 5) salary += 7000;
			if(pData[i][pAdmin] == 6) salary += 8000;
			if(pData[i][pAdmin] == 7) salary += 9000;
		}
		else salary += 1100;


		if(multiply_exp <= 3 && (pData[i][pLevel] >= 5 || pData[i][pLevel] < 9)) pData[i][pExp] += 3;
		else if(pData[i][p_premium] && multiply_exp <= 2) pData[i][pExp] += 2;
		else pData[i][pExp] += multiply_exp;


		new procents = 0;
		if(pData[i][p_premium]) {
			new one_procent = salary / 100;
			procents = one_procent * 20;
		}
		UpdatePlayerData(i, "pExp", pData[i][pExp]);
		PlayerPlaySound(i, 6400, 0.0, 0.0, 0.0);
		salary += pData[i][pPayCheck];
		pData[i][pPayCheck] = 0;
		UpdatePlayerData(i, "pPayCheck", pData[i][pPayCheck]);
		SCM(i, -1, "    √Å√Ä√ç√ä√é√Ç√ë√ä√à√â √ó√Ö√ä");
		SCM(i, -1, "________________________");
		if(pData[i][pAdmin]) format(string, 64, "√Ä√§√¨√®√≠-√ß√†√∞√Ø√´√†√≤√†: {aacd96}%i$", salary);
		if(pData[i][pLevel] >= 20) {
			salary+=2000; 
			format(string, 64, "√è√•√≠√±√®√ø: {aacd96}%i$", salary);
		}
		else format(string, 64, "√á√†√∞√Ø√´√†√≤√†: {aacd96}%i$", salary);
		if(procents > 0) format(string,120,"%s "CLIGHTBLUE"(+%d$)",string,procents);
		SCM(i, -1, string);
		if(!IsAGang(i) && !IsAMafia(i) && pData[i][pAdmin] < 1) {
			player_plats ++;
			salary -= Gos_Nalog[0];
			format(string, 64, "√É√Æ√±. √≠√†√´√Æ√£: {ff6640}-%i$", Gos_Nalog[0]);
			SCM(i, -1, string);
		}
		salary += procents;
		pData[i][pBank] += salary;
		Gos_Nalog[1] += (Gos_Nalog[1] < 800000000 ? (Gos_Nalog[0] * player_plats) : (0));
		pData[i][pZakonp] ++;
        pData[i][pInGameTime] = 0;
		if(pData[i][pZakonp] < -100) pData[i][pZakonp] = -100;
		if(pData[i][pZakonp] > 100) pData[i][pZakonp] = 100;
		UpdatePlayerData(i, "pZakonp", pData[i][pZakonp]);
		if(pData[i][pBank] < 0) pData[i][pBank] = 0;
		SCMF(i, -1, "√í√•√™√≥√π√®√© √°√†√´√†√≠√± √±√∑¬∏√≤√†: {6e8b3d}%d$", pData[i][pBank]);
		SCM(i, -1, "________________________");
		PlayerPlaySound(i, 6400, 0.0, 0.0, 0.0);
		UpdatePlayerData(i, "pBank", pData[i][pBank]);
		check_new_level(i);
		if(pData[i][pWarns]) {
			if(pData[i][punWarnstime] <= gettime()) {
				SCM(i, 0x6BCF00FF, "√ì√∞√Æ√¢√•√≠√º √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√© √≥√¨√•√≠√º√∏√•√≠ √≠√† 1");
				pData[i][pWarns] --;
				if(pData[i][pWarns] == 0) pData[i][punWarnstime] = 0;
				UpdatePlayerData(i, "pWarns", pData[i][pWarns]);
				UpdatePlayerData(i, "punWarnstime", pData[i][punWarnstime]);
			}
		}
	}

	format(string,127,"√á√†√∑√®√±√´√•√≠√Æ %i$ √± %i √∑√•√´√Æ√¢√•√™, √¢√ª√Ø√´√†√≤√®√¢√∏√®√µ √≠√†√´√Æ√£", (Gos_Nalog[1] < 800000000 ? (Gos_Nalog[0]*player_plats) : (0)), player_plats);
	SFFM(26, 0x339900FF, string);
	
	if(hour == 3 && minute < 5)
	{
		restart_time_1 = 120;
		print("√Ö√¶√•√§√≠√•√¢√≠√ª√© √Ø√∞√Æ√∂√•√±√± √Ø√•√∞√•√ß√†√£√∞√≥√ß√™√® √±√•√∞√¢√•√∞√† √ß√†√Ø√≥√π√•√≠");
		print("√è√•√∞√•√ß√†√£√∞√≥√ß√™√† √∑√•√∞√•√ß 2 √¨√®√≠√≥√≤√ª...");
		SCMTA(0xDF1E21FF, "√Ç√≠√®√¨√†√≠√®√•");
		SCMTA(0xFF9933FF, "√ë√•√∞√¢√•√∞ √°√≥√§√•√≤ √†√¢√≤√Æ√¨√†√≤√®√∑√•√±√™√® √Ø√•√∞√•√ß√†√£√∞√≥√¶√•√≠ √∑√•√∞√•√ß 2 √¨√®√≠√≥√≤√ª");
	}

	new strf[90],
		wanted,
		all;
	foreach(new i:Player) {
		all++;
		if(pData[i][pWanted] > 0) 
			wanted++;
	}

	format(strf,sizeof(strf),"SAPD: "CWHITE"√ì√∞√Æ√¢√•√≠√º √Ø√∞√•√±√≤√≥√Ø√≠√Æ√±√≤√® √¢ √∏√≤√†√≤√• √±√Æ√±√≤√†√¢√®√´ {cc0000}%0.1f",(Float:wanted*100)/Float:all);
	SCMTA(0x3333FFFF,strf);

	foreach(new i:Player) {
		if(!is_work_casino[i]) continue;
		pData[i][casino_amount]+=15;
		AddItemToInventory(i, 15, 8);
		UpdatePlayerData(i,"casino_amount",pData[i][casino_amount]);
		SCM(i,COLOR_LITEBLUE,"√Ç√ª √Ø√Æ√´√≥√∑√®√´√® {00cc00}15 "CLITEBLUE"√®√£√∞√Æ√¢√ª√µ √¥√®√∏√•√™");
	}

	return SaveInstrument();
}
stock get_max_exp(level) return ((level + 1) * 4);
stock SendRepMes(color, const string_massive[]) {
	foreach(new i:Player)
	{
		if(pData[i][pHelper]) 
			SCM(i, color, string_massive);

		if(!GetPVarInt(i, "AdminMessages") && pData[i][pAdmin] >= 1 && GetPVarInt(i, "dostup")) 
			SCM(i, color, string_massive);
		
	}
	return 1;
}
stock AdminMessage(color, const string_massive[]) {
	foreach(new i:Player) {
		if(GetPVarInt(i, "AdminMessages")) continue;
		if(pData[i][pAdmin] >= 1 && GetPVarInt(i, "dostup")) SCM(i, color, string_massive);
	}
	return 1;
}

stock MassM(color,const string_massive[]) {
	foreach(new i:Player) {
		if(!lNews[i]) SCM(i, color, string_massive);
	}
	return 1;
}

stock SJM(job, color, string_massive[]) {
	foreach(new i:Player) {
		if(pData[i][pJob] == job) SCM(i, color, string_massive);
	}
}
stock SFFM_Call_MZ(family, color, string_massive[]) {
	foreach(new i:Player) {
		if(GetVehicleModel(GetPlayerVehicleID(i)) != 416) continue;
		if(!pData[i][p_setting][3]) continue;
		if(pData[i][pMember] == family || pData[i][pLeader] == family) {
			SCM(i, color, string_massive);
		}
	}
	return 1;
}
stock message_taxi_around(rangedid, color, string_massive[]) {
	foreach(new i:Player) {
		if(!player_is_taxi[i]) continue;
		if(!ProxDetectorS(200.0, rangedid, i)) continue;
		SCM(i, color, string_massive);
	}
	return 1;
}
stock SFFM_Call_PD(family, color, string_massive[]) {
	foreach(new i:Player) {
		if(GetVehicleModel(GetPlayerVehicleID(i)) != 596) continue;
		if(!pData[i][p_setting][3]) continue;
		if(pData[i][pMember] == family || pData[i][pLeader] == family) {
			SCM(i, color, string_massive);
		}
	}
	return 1;
}

stock send_bloodring_mes(color, string_massive[]) {
	foreach(new i:Player) if(bloody_en[i]) SCM(i, color, string_massive);
	return 1;
}
stock SFFM(family, color, string_massive[]) {
	foreach(new i:Player) {
		if(!pData[i][p_setting][3]) continue;
		if(pData[i][pMember] == family || pData[i][pLeader] == family) {
			SCM(i, color, string_massive);
		}
	}
	return 1;
}

stock GetVehicleShiftPos(vehicleid, style, &Float:x, &Float:y, &Float:z, Float:distance) {
	new Float: a;
	GetVehiclePos(vehicleid, x, y, z);
	GetVehicleZAngle(vehicleid, a);
	switch(style) {
		case 0: {
			x += (distance * floatsin(-a, degrees));
			y += (distance * floatcos(-a, degrees));
		}
		case 1: {
			x -= (distance * floatsin(-a, degrees));
			y -= (distance * floatcos(-a, degrees));
		}
		case 2: {
			a += 90.0;
			x -= (distance * floatsin(-a, degrees));
			y -= (distance * floatcos(-a, degrees));
		}
		case 3: {
			a -= 90.0;
			x -= (distance * floatsin(-a, degrees));
			y -= (distance * floatcos(-a, degrees));
		}
		default: return 0;
	}
	return 1;
}
SendPhoneStreamMessage(Float:radius, playerid, mes[], color) {
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid,X,Y,Z);
	foreach(new i:Player) {
		if(GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid) && IsPlayerInRangeOfPoint(i,radius,X,Y,Z)) {
			if(i == GetPVarInt(playerid, "Mobile")) continue;
			SCM(i, color, mes);
		}
	}
}
stock ProxDetector(Float: radius = 30.0, playerid, text[], col) {
	new Float: x, Float: y, Float: z;
	GetPlayerPos(playerid, x, y, z);
	new Float: dist, virtualworld = GetPlayerVirtualWorld(playerid), interior = GetPlayerInterior(playerid);
	foreach(new i:Player)
	{
		if(virtualworld != GetPlayerVirtualWorld(i) || interior != GetPlayerInterior(i)) continue;
		dist = GetPlayerDistanceFromPoint(i, x, y, z);
		if(dist > radius) continue;
		SCM(i, col, text);
	}
	return 1;
}
stock ProxDetectorS(Float:rad,pl1,pl2) {
	new Float:pos[3]; GetPlayerPos(pl1,pos[0],pos[1],pos[2]);
	return(IsPlayerInRangeOfPoint(pl2,rad,pos[0],pos[1],pos[2]))?true:false;
}

public OnPlayerText(playerid, text[])
{
	if(pData[playerid][pAdmin] < 1 && antiflood_chat[playerid] > gettime())
	{
		SetPVarInt(playerid, "chat_antiflood_st", GetPVarInt(playerid, "chat_antiflood_st") + 1);
		if(GetPVarInt(playerid, "chat_antiflood_st") == 12)
		{
			DeletePVar(playerid, "chat_antiflood_st");
			SCM(playerid, COLOR_GREY, "√Ç√ª √°√ª√´√® √™√®√™√≠√≥√≤√ª √ß√† √¨√≠√Æ√£√Æ√™√∞√†√≤√≠√ª√© √¥√´√≥√§");
			SCM(playerid, COLOR_GREY, "√Ç√¢√•√§√®√≤√• "CPALEGREEN"/q (/quit)"CGREY", √∑√≤√Æ√°√ª √¢√ª√©√≤√®");
			Kick(playerid);
		}
		SCM(playerid, 0x6B6B6BFF, "√ç√• √¥√´√≥√§√®√≤√•");
		return 0;
	}
	if(GetPVarInt(playerid, "RegisterPlayer")==1 || pData[playerid][pLogin]==false) return 0;

	if(pData[playerid][pMuteTime]) {
		SetPlayerChatBubble(playerid, "√è√ª√≤√†√•√≤√±√ø √∑√≤√Æ-√≤√Æ √±√™√†√ß√†√≤√º...", 0xFF0000FF, 30.0, 10000);
		SCM(playerid, COLOR_ERROR, "√Ñ√Æ√±√≤√≥√Ø √¢ √∑√†√≤ √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√≠. √ì√ß√≠√†√≤√º √¢√∞√•√¨√ø √§√Æ √Æ√™√Æ√≠√∑√†√≠√®√ø √°√†√≠√† √∑√†√≤√†: {66CC33}/time");
		return 0;
	}
	new chat_str[144];
	if(GetPVarInt(playerid, "TalkingLivels") == 1) {
		format(chat_str, sizeof(chat_str), "[√ê√†√§√®√Æ] %s: %s", pData[playerid][pName], text);
		MassM(0x66B2FFFF, chat_str);
		return 1;
	}
	else if(GetPVarInt(playerid, "TalkingLivels") == 2) {
		format(chat_str, sizeof(chat_str), "[√ê√†√§√®√Æ] %s (√≤√•√´.): %s", pData[playerid][pName], text);
		MassM(0x66B2FFFF, chat_str);
		return 0;
	}
	else if(GetPVarInt(playerid, "Tel") == 1) {
		format(chat_str, sizeof(chat_str), "[√í√•√´] %s: %s", pData[playerid][pName], text);
		SendPhoneStreamMessage(20.0, playerid, chat_str, COLOR_GREY);
		return 0;
	}
	else if(GetPVarInt(playerid, "Mobile") != 999) {
		if(!IsPlayerConnected(GetPVarInt(playerid, "Mobile")) || GetPVarInt(GetPVarInt(playerid, "Mobile"), "Mobile") != playerid) {
			SCM(playerid, COLOR_LIGHTGREY, "√ç√† √¢√≤√Æ√∞√Æ√© √´√®√≠√®√® √≠√®√™√Æ√£√Æ No");
			return 0;
		}
		format(chat_str, sizeof(chat_str), "[√í√•√´] %s: %s", pData[playerid][pName], text);
		SendPhoneStreamMessage(20.0, playerid, chat_str, COLOR_GREY);
		SCM(GetPVarInt(playerid, "Mobile"), COLOR_YELLOW, chat_str);
		return 0;
	}
	else if(GetPVarInt(playerid, "PEfir") != 999) {
		if(pData[playerid][pMember] == 16 || pData[playerid][pLeader] == 16) {
			format(chat_str, sizeof(chat_str), "[√ê√†√§√®√Æ] %s: %s", pData[playerid][pName], text);
			MassM(0x66B2FFFF, chat_str);
			return 0;
		}
		if(GetPVarInt(playerid, "Pefir") == 2) {
			format(chat_str, sizeof(chat_str), "[√ê√†√§√®√Æ] %s: %s", pData[playerid][pName], text);
			MassM(0x66B2FFFF, chat_str);
			return 0;
		}
	}

	if(GetPVarInt(playerid, "gag")) {
		SCM(playerid, COLOR_ERROR, "√ì √Ç√†√± √™√´√ø√Ø, √Ç√ª √≠√• √¨√Æ√¶√•√≤√• √£√Æ√¢√Æ√∞√®√≤√º");
		return 0;
	}

	if(!strcmp(text, ")")) {
		MeAction(playerid, "√≥√´√ª√°√†√•√≤√±√ø");
		SetPlayerChatBubble(playerid, "√≥√´√ª√°√†√•√≤√±√ø", COLOR_PURPLE, 4.0, 5000);
		return 0;
	}
	else if(!strcmp(text, "))")) {
		MeAction(playerid, "√±√¨√•¬∏√≤√±√ø");
		SetPlayerChatBubble(playerid, "√±√¨√•¬∏√≤√±√ø", COLOR_PURPLE, 4.0, 5000);
		return 0;
	}
	else if(!strcmp(text, "=0")) {
		if(pData[playerid][pSex] == 1) {
			MeAction(playerid, "√≥√§√®√¢√®√´√±√ø");
			SetPlayerChatBubble(playerid, "√≥√§√®√¢√®√´√±√ø", COLOR_PURPLE, 4.0, 5000);
		}
		else {
			MeAction(playerid, "√≥√§√®√¢√®√´√†√±√º");
			SetPlayerChatBubble(playerid, "√≥√§√®√¢√®√´√†√±√º", COLOR_PURPLE, 4.0, 5000);
		}
		return 0;
	}
	else if(!strcmp(text, "(")) {
		if(pData[playerid][pSex] == 1) {
			MeAction(playerid, "√∞√†√±√±√≤√∞√Æ√®√´√±√ø");
			SetPlayerChatBubble(playerid, "√∞√†√±√±√≤√∞√Æ√®√´√±√ø", COLOR_PURPLE, 4.0, 5000);
		}
		else {
			MeAction(playerid, "√∞√†√±√±√≤√∞√Æ√®√´√†√±√º");
			SetPlayerChatBubble(playerid, "√∞√†√±√±√≤√∞√Æ√®√´√†√±√º", COLOR_PURPLE, 4.0, 5000);
		}
		return 0;
	}
	else if(!strcmp(text, "((")) {
		if(pData[playerid][pSex] == 1) {
			MeAction(playerid, "√±√®√´√º√≠√Æ √∞√†√±√±√≤√∞√Æ√®√´√±√ø");
			SetPlayerChatBubble(playerid, "√±√®√´√º√≠√Æ √∞√†√±√±√≤√∞√Æ√®√´√±√ø", COLOR_PURPLE, 4.0, 5000);
		}
		else {
			MeAction(playerid, "√±√®√´√º√≠√Æ √∞√†√±√±√≤√∞√Æ√®√´√†√±√º");
			SetPlayerChatBubble(playerid, "√±√®√´√º√≠√Æ √∞√†√±√±√≤√∞√Æ√®√´√†√±√º", COLOR_PURPLE, 4.0, 5000);
		}
		ApplyAnimation(playerid, "GRAVEYARD","mrnF_loop", 4.1,0,0,0,0,0,1);
		return 0;
	}

	if(!IsPlayerApplyAnimation(playerid, "Bat_4") && 
		!GetPVarInt(playerid, "player_anim") && 
		GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && 
		PlayerTied{playerid} == false && 
		!GetPVarInt(playerid, "takingselfie") &&
		!GetPVarInt(playerid, "PlayerCuffedTime") &&
		!GetPVarInt(playerid, #tazer_dest)) {

		ApplyAnimation(playerid, "PED", "IDLE_CHAT", 4.1, 0,1,1,1,1,1);
		SetTimerEx("ChatAnimationClear", 2000, 0, "i", playerid);
	}
	new mes_1[144], mes_2[144], mes_3[144], mes_4[144];
	format(mes_1, sizeof(mes_1), "- %s {%s}(%s)", text, (bloody_en[playerid]) ? ("66FF99") : (GetPVarInt(playerid, "disguise_enabled")) ? (GetFractionColor[GetPVarInt(playerid, #fraction_id)]) : (GetPVarInt(playerid, "MaskPlayer")) ? ("222222") : (GetFractionColor[pData[playerid][pMember]]), pData[playerid][pName]);
	format(mes_2, sizeof(mes_2), "- %s {%s}(%s)[%d]", text, (bloody_en[playerid]) ? ("66FF99") : (GetPVarInt(playerid, "disguise_enabled")) ? (GetFractionColor[GetPVarInt(playerid, #fraction_id)]) : (GetPVarInt(playerid, "MaskPlayer")) ? ("222222") : (GetFractionColor[pData[playerid][pMember]]), pData[playerid][pName], playerid);
	format(mes_3, sizeof(mes_3), text);
	format(mes_4, sizeof(mes_4), "(%i): %s", playerid, text);

	new Float:position[3];
	GetPlayerPos(playerid, position[0], position[1], position[2]);
	new interior = GetPlayerInterior(playerid), vw = GetPlayerVirtualWorld(playerid);
	new color;
	foreach(new i:Player)
	{
		if(!IsPlayerConnected(i) || !pData[i][pLogin]) continue;
		if(vw != GetPlayerVirtualWorld(i) || interior != GetPlayerInterior(i)) continue;
		if(!IsPlayerInRangeOfPoint(i, 20.0, position[0], position[1], position[2])) continue;
		
		color = IsPlayerInRangeOfPoint(i, 4.0, position[0], position[1], position[2]) ? (COLOR_LIGHTGREY) : IsPlayerInRangeOfPoint(i, 8.0, position[0], position[1], position[2]) ? (COLOR_GREY) : (0x6B6B6BFF);
		switch(pData[i][p_setting][0])
		{
			case 0: continue;
			case 1: SCM(i, color, (!pData[i][p_setting][1]) ? mes_1 : mes_2);
			case 2: SendPlayerMessageToPlayer(playerid,i, (!pData[i][p_setting][1]) ? mes_3 : mes_4);
		}
	}
	SetPlayerChatBubble(playerid, text, 0x00CCFFFF, 20.0, 10000);
	antiflood_chat[playerid] = gettime() + 2;
	return 0;
}

public OnPlayerUpdate(playerid)
{
	if(IsPlayerNPC(playerid)) return 1;

	if(pTemp[playerid][pAFK] > 0) pTemp[playerid][pAFK] = 0;
	return 1;
}
CB: table_proccess(table_id) {
	if(table_ticks[table_id] < 1) {
		table_ticks[table_id] = 30;
		new randid = random(5);
		if(randid == 4) 
			randid = 3;
		new winid = table_playerid[table_id][randid];
		if(IsPlayerConnected(winid)) {
			new messtr[80];
	    	format(messtr,sizeof(messtr),"%s "CWHITE"√¢√ª√®√£√∞√†√´ √¢ √™√Æ√±√≤√® (√¢√ª√Ø√†√´√Æ √∑√®√±√´√Æ: %d)",GetName(winid),random(5)+2);
	    	new summa = table_bet_amount[table_id]*2;
		    pData[winid][casino_amount] += summa;
		    AddItemToInventory(winid, summa, 8);
		    UpdatePlayerData(winid, "casino_amount", pData[winid][casino_amount]);
		    SCMF(winid,COLOR_LIGHTBLUE,"√è√Æ√ß√§√∞√†√¢√´√ø√•√¨! √Ç√ª √¢√ª√®√£√∞√†√´√® √¢ √™√Æ√±√≤√® "CERROR"%d √¥√®√∏√•√™",summa);
		    new fm[35];
	    	format(fm,sizeof(fm),"YOUR CHIPS: ~b~~h~~h~%d",pData[winid][casino_amount]);
	    	PlayerTextDrawSetString(winid, table_TD[winid][0], fm);
	    	foreach(new i:Player) {
		    	if(GetPVarInt(i, "table_id") != table_id) continue;
		    	SCM(i,0xFFCD00FF,messtr);
		    }
		}
		table_bet_amount[table_id] =
		table_players_amount[table_id] = 0;
		for(new i=0; i<4; i++) table_playerid[table_id][i] = -1;
	    foreach(new i:Player) {
	    	if(GetPVarInt(i, "table_id") != table_id) continue;
	    	PlayerTextDrawSetString(i, table_TD[i][1], "BET: ~g~~h~~h~0 CHIPS");
    		PlayerTextDrawSetString(i, table_TD[i][8], "PLAYERS: ~r~~h~0/4");
    		update_table_info(i);
	    }
	}
	else {
		table_ticks[table_id] --;
		new fm[4];
		format(fm,sizeof(fm),"%d",table_ticks[table_id]);
		foreach(new i:Player) {
	    	if(GetPVarInt(i, "table_id") != table_id) continue;
	    	GameTextForPlayer(i, fm, 1000, 3);
	    }
	    SetTimerEx("table_proccess", 500, 0, "i", table_id);
	}
	return 1;
}
CB: check_regist(playerid) {
	new rows, namereg[24];
	cache_get_row_count(rows);
	if(!rows) return 1;
	cache_get_value_name(0, "Name", namereg);
	SCMF(playerid, COLOR_MAIN, "√è√∞√® √∞√•√£√®√±√≤√∞√†√∂√®√® √Ç√ª √≥√™√†√ß√†√´√®, √∑√≤√Æ "CORANGE"%s "CMAIN"√Ø√∞√®√£√´√†√±√®√´ √Ç√†√± √≠√† √±√•√∞√¢√•√∞", namereg);
	SCM(playerid, COLOR_MAIN, "√Ç√ª √§√Æ√±√≤√®√£√´√® 4 √≥√∞√Æ√¢√≠√ø √® √Æ√≠ √Ø√Æ√´√≥√∑√†√•√≤ √ß√† √Ω√≤√Æ √¢√Æ√ß√≠√†√£√∞√†√¶√§√•√≠√®√• √¢ √¢√®√§√• {009900}50.000$");
	SCM(playerid, 0xAA80FFFF, "√è√∞√®√£√´√†√∏√†√©√≤√• √±√¢√Æ√®√µ √§√∞√≥√ß√•√© √≠√† Normative Role Play √® √≤√†√™√¶√• √±√¨√Æ√¶√•√≤√• √Ø√Æ√´√≥√∑√†√≤√º √¢√Æ√ß√≠√†√£√∞√†√¶√§√•√≠√®√ø");
	if(IsPlayerConnected(GetPlayerID(namereg)))
	{
		SCMF(GetPlayerID(namereg), COLOR_MAIN, "√è√∞√® √∞√•√£√®√±√≤√∞√†√∂√®√® √®√£√∞√Æ√™ "CORANGE"%s "CMAIN"√≥√™√†√ß√†√´ √Ç√†√± √™√†√™ √Ø√∞√®√£√´√†√±√®√¢√∏√•√£√Æ √•√£√Æ √®√£√∞√Æ√™√† √≠√† √±√•√∞√¢√•√∞", pData[playerid][pName]);
		SCM(GetPlayerID(namereg), COLOR_MAIN, "√é√≠ √§√Æ√±√≤√®√£ 4-√£√Æ √≥√∞√Æ√¢√≠√ø √® √Ç√ª √Ø√Æ√´√≥√∑√†√•√≤√• "CCYAN"50.000$ "CMAIN"√ß√† √Ø√∞√®√£√´√†√∏√•√≠√≠√Æ√£√Æ √®√£√∞√Æ√™√†");
		SCM(GetPlayerID(namereg), 0xAA80FFFF, "√è√∞√®√£√´√†√∏√†√©√≤√• √±√¢√Æ√®√µ √§√∞√≥√ß√•√© √≠√† Normative Role Play √® √Ø√Æ√´√≥√∑√†√©√≤√• √≠√†√£√∞√†√§√ª √±√≠√Æ√¢√† √® √±√≠√Æ√¢√†");
		GameTextForPlayer(GetPlayerID(namereg), "~y~+50000$ ~n~~w~ referal", 3000, 1);
		Hook_GivePlayerMoney(GetPlayerID(namereg), 50000);
	}
	else {
		SCM(playerid, -1, "√Ç S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤ √Æ√≠ √≠√• √≠√† √±√•√∞√¢√•√∞√•. √ä√Æ√£S√≠ √Æ√≠ √Ø√Æ√§√™√´√æ√∑√®√≤√±√ø, √•√¨√≥ √°√≥√§√≥√≤ √≠√†√∑√®√±√´√•√≠√ª √§√•√≠√º√£√®");

		mysql_format(mysql_Handle, string, 300, "UPDATE `accounts` SET `pCash` = `pCash` + 50000 WHERE `Name` = '%s'", namereg);
		mysql_tquery(mysql_Handle, string);
	}
	return 1;
}
CB: washedOut(playerid) {
	if(!is_yarder[playerid]) return 1;
	ClearAnimations(playerid);
	ApplyAnimation(playerid, "FLAME", "FLAME_FIRE", 4.1, 1, 1, 1, 0, 0, 1);
	PlayerPlaySound(playerid, 20800, 0.0, 0.0, 0.0);
	GameTextForPlayer(playerid, "~g~SWEEPING...", 4000, 3);
	return SetTimerEx("sweepedOut", 9000, 0, "i", playerid);
}
CB: sweepedOut(playerid) {
	if(!is_yarder[playerid]) return 1;
	TogglePlayerControllable(playerid, 1);
	ApplyAnimation(playerid, "CARRY","crry_prtial",4.0,0,0,0,0,0,1);
	PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
	new count = GetPVarInt(playerid,"yardcount") + 1;
	SetPVarInt(playerid, "yardcount", count);
	DestroyDynamicObject(yard_obj[playerid]);
	Hook_GivePlayerMoney(playerid,40);
	if(pData[playerid][pJailTime] > 0) {
		pData[playerid][pJailTime] -= 10;
		UpdatePlayerData(playerid, "pJailTime",pData[playerid][pJailTime]);
	}
	if(pData[playerid][pPrisonTime] > 0) {
		pData[playerid][pPrisonTime] -= 10;
		UpdatePlayerData(playerid, "pPrisonTime",pData[playerid][pPrisonTime]);
	}
	if(GetPVarInt(playerid, "jb_processed") && count == 10) {
		DeletePVar(playerid, "jb_processed");
		DeletePVar(playerid, "jb_FirstCard");
		SetPVarInt(playerid, "jbYard_success", 1);
	}

	new Float: x, Float: y, Float: z;
	GetPlayerPos(playerid, x, y, z);
	new num = -1;
	for(new i = 0; i < 100; i ++) {
		if(yard_place_info[i][ystatus]) continue;
		num = i;
		break;
	}
	if(num != -1) {
		yard_place_info[num][ypos_x] = x;
		yard_place_info[num][ypos_y] = y;
		yard_place_info[num][ypos_z] = z;
		yard_place_info[num][ystatus] = true;
	}
	SetTimerEx("yard_place_clearing", 20000, 0, "i", num);

	DeletePVar(playerid, "yard_processings");
	new str[50];
	format(str,sizeof(str),"~g~+40$~n~~w~-10 sec ~r~jail~n~~y~%d places",count);
	return GameTextForPlayer(playerid, str, 4000, 1);
}
CB: yard_place_clearing(number) {
	yard_place_info[number][ypos_x] = 0;
	yard_place_info[number][ypos_y] = 0;
	yard_place_info[number][ypos_z] = 0;
	yard_place_info[number][ystatus] = false;

	return 1;
}
CB: clearattach(playerid) {
	RemovePlayerAttachedObject(playerid, 8);
	return 1;
}
stock update_storesarmy() {
	new SA_query[560];
	mysql_format(mysql_Handle, SA_query, 560, "UPDATE `otherfuncs` SET `svstore_patr` = %d, `vvcstore_patr` = %d, `vmfstore_patr` = %d,\
	`deaglesv_status` = %d, `mp5sv_status` = %d, `m4sv_status` = %d, `snipersv_status` = %d,\
	`deaglevvc_status` = %d, `mp5vvc_status` = %d, `m4vvc_status` = %d, `snipervvc_status` = %d,\
	`deaglevmf_status` = %d, `mp5vmf_status` = %d, `m4vmf_status` = %d, `snipervmf_status` = %d,\
	`metsv_count` = %d, `metvvc_count` = %d, `metvmf_count` = %d", 
	svstore_patr, vvcstore_patr, vmfstore_patr, 
	deaglesv_status, mp5sv_status, m4sv_status, snipersv_status, 
	deaglevvc_status, mp5vvc_status, m4vvc_status, snipervvc_status, 
	deaglevmf_status, mp5vmf_status, m4vmf_status, snipervmf_status,
	metsv_count, metvvc_count, metvmf_count);
	mysql_tquery(mysql_Handle, SA_query);
}
stock MinuteTimer() {

	new hour, minute, second;
	gettime(hour, minute, second);
	if(minute == 0) 
		PayDay();

	for(new i = 0; i < 16; i ++) {
		switch(random(2)) {
			case 0: {
				af_fuel_types_num[i] = 1;
				format(af_fuel_types[i],7,"√Å√•√≠√ß√®√≠");
			}
			case 1: {
				af_fuel_types_num[i] = 2;
				format(af_fuel_types[i],7,"√Ñ√®√ß√•√´√º");
			}
		}
	}
	foreach(new i:Player) {
		if(!IsPlayerConnected(i) || !pData[i][pLogin]) continue;
		pData[i][pInGameTime] ++;
	}
	new fmt_prop[170], houses_free, houses_buyed, bizes_free, bizes_buyed;
	for(new h_id = 1; h_id != TOTAL_HOUSE + 1; h_id ++) {
		if(!HouseInfo[h_id][hOwned]) houses_free ++;
		else houses_buyed ++;
	}
	for(new b_id = 1; b_id != BIZES + 1; b_id ++) {
		if(!strcmp(BizInfo[b_id][bOwner], "None", true)) bizes_free ++;
		else bizes_buyed ++;
	}
	format(fmt_prop, sizeof(fmt_prop), "√ç√•√§√¢√®√¶√®√¨√Æ√±√≤√º\n\n"CWHITE"√Ç√±√•√£√Æ √§√Æ√¨√Æ√¢: %d\n{99ff00}√ë√¢√Æ√°√Æ√§√≠√Æ: %d\n"CERROR"√ä√≥√Ø√´√•√≠√Æ: %d\n\n"CWHITE"√Ç√±√•√£√Æ √°√®√ß√≠√•√±√Æ√¢: %d\n{99ff00}√ë√¢√Æ√°√Æ√§√≠√Æ: %d\n"CERROR"√ä√≥√Ø√´√•√≠√Æ: %d", TOTAL_HOUSE, houses_free, houses_buyed, BIZES, bizes_free, bizes_buyed);
	UpdateDynamic3DTextLabelText(prop_info, COLOR_LITEBLUE, fmt_prop);
	UpdateDynamic3DTextLabelText(prop_info + Text3D: 1, COLOR_LITEBLUE, fmt_prop);
	
	if(storage_mine[StLow] > 10) {
		AddStorage(1, -10);
		AddStorage(2, 10);
	}
	if(svstore_patr >= 15000 && metsv_count >= 15 && deaglesv_status < 40) {
		svstore_patr -= 50;
		metsv_count -= 15;
		deaglesv_status ++;
	}
	if(svstore_patr >= 15000 && metsv_count >= 15 && mp5sv_status < 40) {
		svstore_patr -= 50;
		metsv_count -= 15;
		mp5sv_status ++;
	}
	if(svstore_patr >= 15000 && metsv_count >= 15 && m4sv_status < 40) {
		svstore_patr -= 50;
		metsv_count -= 15;
		m4sv_status ++;
	}
	if(svstore_patr >= 15000 && metsv_count >= 15 && snipersv_status < 40) {
		svstore_patr -= 50;
		metsv_count -= 15;
		snipersv_status ++;
	}
	if(vvcstore_patr >= 15000 && metvvc_count >= 15 && deaglevvc_status < 40) {
		vvcstore_patr -= 50;
		metvvc_count -= 15;
		deaglevvc_status ++;
	}
	if(vvcstore_patr >= 15000 && metvvc_count >= 15 && mp5vvc_status < 40) {
		vvcstore_patr -= 50;
		metvvc_count -= 15;
		mp5vvc_status ++;
	}
	if(vvcstore_patr >= 15000 && metvvc_count >= 15 && m4vvc_status < 40) {
		vvcstore_patr -= 50;
		metvvc_count -= 15;
		m4vvc_status ++;
	}
	if(vvcstore_patr >= 15000 && metvvc_count >= 15 && snipervvc_status < 40) {
		vvcstore_patr -= 50;
		metvvc_count -= 15;
		snipervvc_status ++;
	}
	if(vmfstore_patr >= 15000 && metvmf_count >= 15 && deaglevmf_status < 40) {
		vmfstore_patr -= 50;
		metvmf_count -= 15;
		deaglevmf_status ++;
	}
	if(vmfstore_patr >= 15000 && metvmf_count >= 15 && mp5vmf_status < 40) {
		vmfstore_patr -= 50;
		metvmf_count -= 15;
		mp5vmf_status ++;
	}
	if(vmfstore_patr >= 15000 && metvmf_count >= 15 && m4vmf_status < 40) {
		vmfstore_patr -= 50;
		metvmf_count -= 15;
		m4vmf_status ++;
	}
	if(vmfstore_patr >= 15000 && metvmf_count >= 15 && snipervmf_status < 40) {
		vmfstore_patr -= 50;
		metvmf_count -= 15;
		snipervmf_status ++;
	}
	new str_patr[50], str_met[90];
	format(str_met, 90, "√ë√™√´√†√§ √¨√•√≤√†√´√´√†\n\n"CLITEBLUE"√ç√† √±√™√´√†√§√•: %d √™√£\n/mput - √Ø√Æ√´√Æ√¶√®√≤√º √¨√•√≤√†√´√´", metsv_count);
	UpdateDynamic3DTextLabelText(met3d_sv, 0x0066CCFF, str_met);
	format(str_met, 90, "√ë√™√´√†√§ √¨√•√≤√†√´√´√†\n\n"CLITEBLUE"√ç√† √±√™√´√†√§√•: %d √™√£\n/mput - √Ø√Æ√´√Æ√¶√®√≤√º √¨√•√≤√†√´√´", metvvc_count);
	UpdateDynamic3DTextLabelText(met3d_vvc, 0x0066CCFF, str_met);
	format(str_met, 90, "√ë√™√´√†√§ √¨√•√≤√†√´√´√†\n\n"CLITEBLUE"√ç√† √±√™√´√†√§√•: %d √™√£\n/mput - √Ø√Æ√´√Æ√¶√®√≤√º √¨√•√≤√†√´√´", metvmf_count);
	UpdateDynamic3DTextLabelText(met3d_vmf, 0x0066CCFF, str_met);
	format(str_patr, 50, "√è√†√≤√∞√Æ√≠√ª √≠√† √±√™√´√†√§√•:\n%i / 100000 √∏√≤.", svstore_patr);
	UpdateDynamic3DTextLabelText(text_sv_storpt, 0xFFCC00FF, str_patr);
	format(str_patr, 50, "√è√†√≤√∞√Æ√≠√ª √≠√† √±√™√´√†√§√•:\n%i / 100000 √∏√≤.", vvcstore_patr);
	UpdateDynamic3DTextLabelText(text_vvc_storpt, 0xFFCC00FF, str_patr);
	format(str_patr, 50, "√è√†√≤√∞√Æ√≠√ª √≠√† √±√™√´√†√§√•:\n%i / 100000 √∏√≤.", vmfstore_patr);
	UpdateDynamic3DTextLabelText(text_vmf_storpt, 0xFFCC00FF, str_patr);
	update_storesarmy();
	new fmt_time[16], hh, mm; gettime(hh, mm);
	format(fmt_time, sizeof(fmt_time), "%02d:%02d", hh, mm);
	TextDrawSetString(PHONETD[14], fmt_time);
	if(storage_mine[StHigh] > 10) {
		AddStorage(3, -10);
		AddStorage(4, 10);
	}
	if(AffectTime) AffectTime --;
	if(CaptureTime) CaptureTime --;
	
	return 1;
}

stock enable_random_checkaddtime() {
	switch(random(10)) {
		case 0: foreach(new i:Player) if(bloody_en[i]) SetPlayerRaceCheckpoint(i, 2, -1471.0645,971.4245,1027.3722, -1471.0645,971.4245,1027.3722, 5.0);
		case 1: foreach(new i:Player) if(bloody_en[i]) SetPlayerRaceCheckpoint(i, 2, -1426.2859,1039.4310,1029.3171, -1426.2859,1039.4310,1029.3171, 5.0);
		case 2: foreach(new i:Player) if(bloody_en[i]) SetPlayerRaceCheckpoint(i, 2, -1454.0847,963.0660,1026.7484, -1454.0847,963.0660,1026.7484, 5.0);
		case 3: foreach(new i:Player) if(bloody_en[i]) SetPlayerRaceCheckpoint(i, 2, -1312.2671,965.5823,1031.9535, -1312.2671,965.5823,1031.9535, 5.0);
		case 4: foreach(new i:Player) if(bloody_en[i]) SetPlayerRaceCheckpoint(i, 2, -1367.9263,1001.8190,1024.1577,-1367.9263,1001.8190,1024.1577, 5.0);
		case 5: foreach(new i:Player) if(bloody_en[i]) SetPlayerRaceCheckpoint(i, 2, -1440.1476,987.6335,1024.0474,-1440.1476,987.6335,1024.0474, 5.0);
		case 6: foreach(new i:Player) if(bloody_en[i]) SetPlayerRaceCheckpoint(i, 2, -1357.5018,932.1769,1036.3202,-1357.5018,932.1769,1036.3202, 5.0);
		case 7: foreach(new i:Player) if(bloody_en[i]) SetPlayerRaceCheckpoint(i, 2, -1489.3121,1043.1935,1038.4030,-1489.3121,1043.1935,1038.4030, 5.0);
		case 8: foreach(new i:Player) if(bloody_en[i]) SetPlayerRaceCheckpoint(i, 2, -1339.5013,1041.4573,1033.7622,-1339.5013,1041.4573,1033.7622, 5.0);
		case 9: foreach(new i:Player) if(bloody_en[i]) SetPlayerRaceCheckpoint(i, 2, -1409.1676,936.8224,1036.4786,-1409.1676,936.8224,1036.4786, 5.0);
	}
}
stock enable_random_repairpick() {
	switch(random(10)) {
		case 0: {
			repair_bloody = CreateDynamicSphere(-1490.0823,952.4370,1036.8997, 2.0, 10, 15, -1);
			repair_bloody_1 = CreatePickup(3096, 23, -1490.0823,952.4370,1036.8997, 10);
		}
		case 1: {
			repair_bloody = CreateDynamicSphere(-1514.3767,1001.8585,1037.7556, 2.0, 10, 15, -1);
			repair_bloody_1 = CreatePickup(3096, 23, -1514.3767,1001.8585,1037.7556, 10);
		}
		case 2: {
			repair_bloody = CreateDynamicSphere(-1435.6036,1057.7676,1038.5536, 2.0, 10, 15, -1);
			repair_bloody_1 = CreatePickup(3096, 23, -1435.6036,1057.7676,1038.5536, 10);
		}
		case 3: {
			repair_bloody = CreateDynamicSphere(-1318.8802,1044.1705,1038.1294, 2.0, 10, 15, -1);
			repair_bloody_1 = CreatePickup(3096, 23, -1318.8802,1044.1705,1038.1294, 10);
		}
		case 4: {
			repair_bloody = CreateDynamicSphere(-1290.9775,972.7509,1036.8885, 2.0, 10, 15, -1);
			repair_bloody_1 = CreatePickup(3096, 23, -1290.9775,972.7509,1036.8885, 10);
		}
		case 5: {
			repair_bloody = CreateDynamicSphere(-1337.5209,938.0268,1036.3894, 2.0, 10, 15, -1);
			repair_bloody_1 = CreatePickup(3096, 23, -1337.5209,938.0268,1036.3894, 10);
		}
		case 6: {
			repair_bloody = CreateDynamicSphere(-1315.8054,960.9956,1032.8367, 2.0, 10, 15, -1);
			repair_bloody_1 = CreatePickup(3096, 23, -1315.8054,960.9956,1032.8367, 10);
		}
		case 7: {
			repair_bloody = CreateDynamicSphere(-1468.5375,952.7410,1033.5916, 2.0, 10, 15, -1);
			repair_bloody_1 = CreatePickup(3096, 23, -1468.5375,952.7410,1033.5916, 10);
		}
		case 8: {
			repair_bloody = CreateDynamicSphere(-1425.5181,1043.4906,1030.5936, 2.0, 10, 15, -1);
			repair_bloody_1 = CreatePickup(3096, 23, -1425.5181,1043.4906,1030.5936, 10);
		}
		case 9: {
			repair_bloody = CreateDynamicSphere(-1395.7319,1000.4270,1024.1799, 2.0, 10, 15, -1);
			repair_bloody_1 = CreatePickup(3096, 23, -1395.7319,1000.4270,1024.1799, 10);
		}
	}
}

CB:now_restart()
{
	SendRconCommand("gmx");
}

CB: SecondTimer()
{
	Derby_SecondTimer();

	if((GetTickCount()-rServerInfo) >= (60000-500))
	{
		MinuteTimer();
		rServerInfo = GetTickCount();
	}

	player_info();

	foreach(new playerid:Player)
	{
		switch(auth_camstate[playerid])
		{
			case -1:
			{
				SetCameraBehindPlayer(playerid);
				auth_camstate[playerid] = 0;
			}
			case 1: // √†√¢√≤√Æ√∞√®√ß√†√∂√®√ø
			{
				SetPlayerCameraPos(playerid, -223.814620, -1739.867919, 1.858113);
				SetPlayerCameraLookAt(playerid, -220.047622, -1736.580200, 1.888895);
			}
			case 2: // √∞√•√£√®√±√≤√∞√†√∂√®√ø
			{
				SetPlayerCameraPos(playerid, -228.502807, -1740.899780, 1.907004);
				SetPlayerCameraLookAt(playerid, -224.586715, -1737.792114, 1.987006);
			}
			case 3: // √¢√ª√°√Æ√∞ √±√™√®√≠√†
			{
				SetPlayerCameraPos(playerid, -223.744598, -1738.572631, 2.313195);
				SetPlayerCameraLookAt(playerid, -220.316543, -1735.002075, 1.606196);
			}
		}

		pData[playerid][p_time1][0] ++;
		pTemp[playerid][pAFK] ++;
		if(pTemp[playerid][pAFK] >= AFK_SECOND)
		{
			pData[playerid][p_time1][1] ++;
			format(string,40,""CWHITE"AFK ");
			if(pTemp[playerid][pAFK] > 3600) format(string,40,"%s"CORANGE"(√°√Æ√´√•√• √∑√†√±√†)", string);
			else if(pTemp[playerid][pAFK] < 60) format(string, 40, "%s"CORANGE"(%d √±√•√™.)", string, pTemp[playerid][pAFK]);
			else format(string,40,"%s"CORANGE"(%s)",string,TimeConverter(pTemp[playerid][pAFK]));
			SetPlayerChatBubble(playerid,string,-1,10.0,1600);
		}

		if(!pData[playerid][pLogin] || pTemp[playerid][pAFK] > AFK_SECOND) continue;

		if(player_in_tir[playerid] && (GetPlayerInterior(playerid) != 4 || GetPlayerVirtualWorld(playerid) != 40)) {
			ResetPlayerWeapons(playerid);
			player_in_tir[playerid] = false;
			SCM(playerid, COLOR_ORANGE, "√ä√≥√Ø√´√•√≠√≠√Æ√• √¢ √≤√®√∞√• √Æ√∞√≥√¶√®√• √°√ª√´√Æ √™√Æ√≠√¥√®√±√™√Æ√¢√†√≠√Æ");
		}

		if(timesec == 4)
		{
			if(timer_plbloody[playerid] == 0)
			{
				if(!IsPlayerInAnyVehicle(playerid)) timer_plbloody[playerid] = -1;
				else
				{
					new Float:car_hpbloody;
					GetVehicleHealth(GetPlayerVehicleID(playerid), car_hpbloody);
					SetVehicleHealth(GetPlayerVehicleID(playerid), car_hpbloody-70);
					PlayerPlaySound(playerid, 25604, 0.0, 0.0, 0.0);
					SetPlayerChatBubble(playerid, "-70 CAR HP", 0xC00000FF, 4.0, 5000);
				}
			}
			if(!pData[playerid][p_setting][4]) foreach(new i:Player) ShowPlayerNameTagForPlayer(playerid, i, false);
			else foreach(new i:Player) ShowPlayerNameTagForPlayer(playerid, i, true);
			if(antiflood_chat[playerid] < gettime() && GetPVarInt(playerid, "chat_antiflood_st")) DeletePVar(playerid, "chat_antiflood_st");
			new Float: hp_pl;
			GetPlayerHealth(playerid, hp_pl);
			if(pTemp[playerid][pInHospital] && hp_pl < 100.0) {
				SetPlayerHealth(playerid, hp_pl + 5.0);
				PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
				SetPlayerChatBubble(playerid, "+5 HP", 0x66CC00FF, 20.0, 500);
				GameTextForPlayer(playerid, "~g~~h~+ 5 HP", 500, 4);
			}
		}

		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {

			if(pData[playerid][pAdmin] < 1)
			{
				// anti speedhack
				new car = GetPlayerVehicleID(playerid);
				static SPEEDPLAYER[MAX_PLAYERS];
		        if(GetPlayerSpeed(playerid) - SPEEDPLAYER[playerid] > 20 && !amg_mode[car]) 
		        	return OnCheatDetected(playerid, pData[playerid][pIP], 0, 10);
		        SPEEDPLAYER[playerid] = GetPlayerSpeed(playerid);
			}

			new nkeys, udown, lright, 
				vehicleid = GetPlayerVehicleID(playerid), veh_model = GetVehicleModel(vehicleid);
			GetPlayerKeys(playerid, nkeys, udown, lright);
			new Float: X, Float: Y, Float: Z;
			GetVehicleVelocity(vehicleid, X, Y, Z);
			new PlayerSpeed = floatround(floatsqroot(floatadd(floatadd(floatpower(X, 2), floatpower(Y, 2)),  floatpower(Z, 2))) * 126.31);
			if(amg_mode[vehicleid] && nkeys == 8 && PlayerSpeed > 10 && PlayerSpeed < 200 && VehInfo[vehicleid - 1][vEngine])
			{
		        switch(boost_veh_lvl[vehicleid])
		        {
					case 1: SetVehicleVelocity(vehicleid, X * 1.00, Y * 1.00, Z * 1.00);
					case 2: if(PlayerSpeed < (max_car_speed(veh_model) + 10)) SetVehicleVelocity(vehicleid, X * 1.005, Y * 1.005, Z * 1.005);
					case 3: if(PlayerSpeed < (max_car_speed(veh_model) + 15)) SetVehicleVelocity(vehicleid, X * 1.01, Y * 1.01, Z * 1.01);
					case 4: if(PlayerSpeed < (max_car_speed(veh_model) + 20)) SetVehicleVelocity(vehicleid, X * 1.015, Y * 1.015, Z * 1.015);
					case 5: if(PlayerSpeed < (max_car_speed(veh_model) + 30)) SetVehicleVelocity(vehicleid, X * 1.02, Y * 1.02, Z * 1.02);
					case 6: if(PlayerSpeed < (max_car_speed(veh_model) + 40)) SetVehicleVelocity(vehicleid, X * 1.025, Y * 1.025, Z * 1.025);
					case 7: if(PlayerSpeed < (max_car_speed(veh_model) + 50)) SetVehicleVelocity(vehicleid, X * 1.03, Y * 1.03, Z * 1.03);
					case 8: if(PlayerSpeed < (max_car_speed(veh_model) + 60)) SetVehicleVelocity(vehicleid, X * 1.035, Y * 1.035, Z * 1.035);
					case 9: if(PlayerSpeed < (max_car_speed(veh_model) + 70)) SetVehicleVelocity(vehicleid, X * 1.04, Y * 1.04, Z * 1.04);
					case 10: if(PlayerSpeed < (max_car_speed(veh_model) + 75)) SetVehicleVelocity(vehicleid, X * 1.045, Y * 1.045, Z * 1.045);
				}

				SetVehicleVelocity(vehicleid, X * 1.15, Y * 1.15, Z * 1.15);
			}
			else if(amg_mode[vehicleid] && nkeys == KEY_HANDBRAKE && PlayerSpeed > 10)
			{
				switch(braking_veh_lvl[vehicleid])
				{
					case 1: SetVehSpeed(vehicleid, GetVehSpeed(vehicleid) * 0.9);
					case 2: SetVehSpeed(vehicleid, GetVehSpeed(vehicleid) * 0.89);
					case 3: SetVehSpeed(vehicleid, GetVehSpeed(vehicleid) * 0.88);
					case 4: SetVehSpeed(vehicleid, GetVehSpeed(vehicleid) * 0.87);
					case 5: SetVehSpeed(vehicleid, GetVehSpeed(vehicleid) * 0.86);
					case 6: SetVehSpeed(vehicleid, GetVehSpeed(vehicleid) * 0.85);
					case 7: SetVehSpeed(vehicleid, GetVehSpeed(vehicleid) * 0.84);
					case 8: SetVehSpeed(vehicleid, GetVehSpeed(vehicleid) * 0.83);
				}

				SetVehSpeed(vehicleid, GetVehSpeed(vehicleid) * 0.72);
			}
		}

		new real = GetPlayerWeapon(playerid);
		new current = color_current_weapon[playerid];
		if(real != current) {
			if(current == 24 || current == 25 || current == 30 || current == 31) RemovePlayerAttachedObject(playerid, 4);
			switch(real) {
				case 24: if(color_gun_deagle[playerid] != -1) SetPlayerAttachedObject(playerid, 4, 348, 6, -0.006999, -0.004000, 0.002000, -1.600000, -0.200000, 0.400000, 1.019999, 1.146999, 1.027000, WeaponColors[color_gun_deagle[playerid]], WeaponColors[color_gun_deagle[playerid]]);
				case 25: if(color_gun_shotgun[playerid] != -1) SetPlayerAttachedObject(playerid, 4, 349, 6, 0.000000, -0.008999, -0.004000, 0.000000, 1.099999, 1.499999, 1.000000, 1.222000, 1.088000, WeaponColors[color_gun_shotgun[playerid]], WeaponColors[color_gun_shotgun[playerid]]);
				case 30: if(color_gun_ak47[playerid] != -1) SetPlayerAttachedObject(playerid, 4, 355, 6, 0.000000, -0.011000, 0.000000, 0.000000, 0.000000, 2.100000, 1.009000, 1.424000, 1.013000, WeaponColors[color_gun_ak47[playerid]], WeaponColors[color_gun_ak47[playerid]]);
				case 31: if(color_gun_m4[playerid] != -1) SetPlayerAttachedObject(playerid, 4, 356, 6, -0.002000, -0.005999, 0.001000, 0.000000, 0.899999, 1.699999, 0.997999, 1.318999, 1.088001, WeaponColors[color_gun_m4[playerid]], WeaponColors[color_gun_m4[playerid]]);
			}
			color_current_weapon[playerid] = real;
		}

		if(pTemp[playerid][pSpectate])
		{
			if(!IsPlayerConnected(pTemp[playerid][pSpectateID])) {
				TogglePlayerSpectating(playerid, false);
				GameTextForPlayer(playerid, "~w~PLAYER ~r~DISCONNECTED", 3000, 3);
			}
		}

		if(hold[playerid] != -1) {
			new id = hold[playerid];
			new Float:X, Float:Y, Float:Z, Float:R;
			if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
				GetPlayerPos(id,X,Y,Z);
				SetPlayerFaceToPoint(playerid, X, Y);

				new Float:GotoPos[3];
				new anim = GoPlayerAnimation(playerid,X,Y,Z);

				if(GetPlayerInterior(id) != GetPlayerInterior(playerid) || GetPlayerVirtualWorld(id) != GetPlayerVirtualWorld(playerid)) {
					GetPlayerPos(id,X,Y,Z);
					SetPlayerPos(playerid,X,Y,Z);
					SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(id));
					SetPlayerInterior(playerid,GetPlayerInterior(id));
				}

				if(anim != 1) {
					GotoPos[0]=GetPVarFloat(playerid, "CuffX");
					GotoPos[1]=GetPVarFloat(playerid, "CuffY");
					GotoPos[2]=GetPVarFloat(playerid, "CuffZ");

					if(IsPlayerInRangeOfPoint(playerid, 0.05, GotoPos[0],GotoPos[1],GotoPos[2])) {
						GetPlayerPos(playerid, X, Y, Z);
						GetPlayerFacingAngle(playerid, R);
						X += (1.5 * floatsin(-R, degrees));
						Y += (1.5 * floatcos(-R, degrees));
						SetPlayerPos(playerid, X, Y, Z);
					}

					GetPlayerPos(playerid,X,Y,Z);
					SetPVarFloat(playerid,"CuffX", X);
					SetPVarFloat(playerid,"CuffY", Z);
					SetPVarFloat(playerid,"CuffZ", Z);
				}
			}
		}
		if(JobL[playerid] && !IsPlayerInRangeOfPoint(playerid, 200.0, -1994.0, -2418.0, 30.0)) {
			DisablePlayerCheckpoint(playerid);
			JobL[playerid] = false;
			JobLCheck[playerid] = false;
			Hook_GivePlayerMoney(playerid, JobLCash[playerid]);
			if(pData[playerid][pMember]) SetPlayerSkin(playerid, pData[playerid][pModel]);
			else SetPlayerSkin(playerid, pData[playerid][pChar]);
			lable_matr[playerid] = false;
			ClearAnimations(playerid);
			SetPlayerSpecialAction(playerid, 0);
			format(string, 22, "~b~+%d$", JobLCash[playerid]);
			GameTextForPlayer(playerid, string, 3000, 1);
			format(string, 64, "√Ç√†√∏ √∞√†√°√Æ√∑√®√© √§√•√≠√º √ß√†√¢√•√∞√∏¬∏√≠. √á√†√∞√Ø√´√†√≤√†: {00cc00}%d$", JobLCash[playerid]);
			JobLCash[playerid] = 0;
			SCM(playerid, COLOR_BLUE, string);
		}
		new Float: ac_armour, Float: ac_health;
		GetPlayerArmour(playerid, ac_armour);
		GetPlayerHealth(playerid, ac_health);
		if(ac_armour != GetPVarFloat(playerid, "AntiCheat_Armour")) 
			if(ac_armour > GetPVarFloat(playerid, "AntiCheat_Armour")) SetPlayerArmour(playerid, GetPVarFloat(playerid, "AntiCheat_Armour"));
		if(ac_health != GetPVarFloat(playerid, "AntiCheat_Health")) 
			if(ac_health > GetPVarFloat(playerid, "AntiCheat_Health")) SetPlayerHealth(playerid, GetPVarFloat(playerid, "AntiCheat_Health"), true);
		if(GetPVarInt(playerid, "loader_job") && !IsPlayerInRangeOfPoint(playerid, 150.0, 2179.0, -2256.0, 14.0)) {
			SCM(playerid, COLOR_BLUE, "√ê√†√°√Æ√∑√®√© √§√•√≠√º √£√∞√≥√ß√∑√®√™√† √ß√†√¢√•√∞√∏¬∏√≠");
			DisablePlayerCheckpoint(playerid);
			SetPlayerSpecialAction(playerid, 0);
			TogglePlayerControllable(playerid, 1);
			if(pData[playerid][pMember] == 0) SetPlayerSkin(playerid, pData[playerid][pChar]);
			else SetPlayerSkin(playerid, pData[playerid][pModel]);
			if(GetPVarInt(playerid, "loader_bags") > 0) {
				format(string, 30, "~b~+%d$", GetPVarInt(playerid, "loader_money"));
				GameTextForPlayer(playerid, string, 3000, 1);
				SCMF(playerid, COLOR_BLUE, "√Ç√ª √Ø√•√∞√•√≠√•√±√´√® {FFCD00}%d √∏√≤. "CBLUE"√ø√π√®√™√Æ√¢ √£√∞√≥√ß√† √® √ß√†√∞√†√°√Æ√≤√†√´√® {00cc00}%d$", GetPVarInt(playerid, "loader_bags"), GetPVarInt(playerid, "loader_money"));
				Hook_GivePlayerMoney(playerid, GetPVarInt(playerid, "loader_money"));
			}
			DeletePVar(playerid, "loader_job"), DeletePVar(playerid, "loader_bags"), DeletePVar(playerid, "loader_money");
		}

		new idmarket=-1;
		for(new i =0; i<9; i++) {
			if(selleritemid[i] != playerid) continue;
			idmarket=i;
			break;
		}
		if(idmarket!= -1 && 
			!IsPlayerInRangeOfPoint(playerid, 20, posMarket[idmarket][markX],posMarket[idmarket][markY],posMarket[idmarket][markZ])) {
			selleritemid[idmarket]=-1;
			SCM(playerid,-1,"√Ç√ª √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤√Æ√∏√´√® √Æ√≤ √±√¢√Æ√•√© √Ø√†√´√†√≤√™√®. √é√≠√† √°√ª√´√† √Æ√±√¢√Æ√°√Æ√¶√§√•√≠√†");
			for(new i =0; i < 5; i++) {
				if(item_is_Skin[idmarket][i]) 
					AddSkinToInventory(playerid,modelitem[idmarket][i]);
				else if(item_is_Accessory[idmarket][i]) {
					AddAccessoryToInv(playerid,
					indexmark[idmarket][i],
					boneitem[idmarket][i],
					modelitem[idmarket][i],
					acsRotX[idmarket][i],
					acsRotY[idmarket][i],
					acsRotZ[idmarket][i],
					acsZoom[idmarket][i],
					osetX[idmarket][i],osetY[idmarket][i],osetZ[idmarket][i],
					itemfRotX[idmarket][i],itemfRotY[idmarket][i],itemfRotZ[idmarket][i],
					fitemScaleX[idmarket][i],fitemScaleY[idmarket][i],fitemScaleZ[idmarket][i]);
				}
				else {
					switch(typeitem[idmarket][i]) {
						case 0: {
							pData[playerid][pSpal] += countitem[idmarket][i];
							UpdatePlayerData(playerid,"spal",pData[playerid][pSpal]);
						}
						case 1: {
							pData[playerid][pSiga] += countitem[idmarket][i];
							UpdatePlayerData(playerid,"sigar",pData[playerid][pSiga]);
						}
						case 4: {
							pData[playerid][pAptech] += countitem[idmarket][i];
							UpdatePlayerData(playerid,"pAptech",pData[playerid][pAptech]);
						}
						case 5: {
							pData[playerid][pMasks] += countitem[idmarket][i];
							UpdatePlayerData(playerid,"pMasks",pData[playerid][pMasks]);
						}
						case 6: {
							pData[playerid][pRec]=true;
							UpdatePlayerData(playerid,"pRec",1);
						}
						case 7: {
							fuelcan_buyed[playerid] = true;
							SetPlayerAttachedObject(playerid, 2, 1650, 6, 0.120999, 0.017999, 0.069000, 0.000000, -100.400024, 0.000000, 1.000000, 1.000000, 1.000000, 0, 0);
						}
						case 8: {
							pData[playerid][casino_amount]+= countitem[idmarket][i];
							UpdatePlayerData(playerid,"casino_amount",pData[playerid][casino_amount]);
						}
					}

					AddItemToInventory(playerid, countitem[idmarket][i], typeitem[idmarket][i]);
				}
			
				RemoveProdFromMarket(playerid,idmarket,i,1);
			}

			new fm[160];
			format(fm,sizeof(fm),"√è√†√´√†√≤√™√† ¬π%d\n√ë√¢√Æ√°√Æ√§√≠√†\n\n√è√Æ√§√±√™√†√ß√™√†:\n√Ç√¢√•√§√®√≤√• /inv\n√Ç√ª√°√•√∞√®√≤√• √≠√•√≠√†√§√•√≤√ª√© √†√™√±√•√±√±√≥√†√∞\n√ç√†√¶√¨√®√≤√• SELL √§√´√ø √Ø√∞√ÆS√≠√¶√®\n√á√† √Ø√∞√ÆS√≠√¶√≥ √≤√Æ√¢√†√∞√Æ√¢ √±√≠√®√¨√†√•√≤√±√ø √™√Æ√¨√®√±√±√®√ø 1%%",idmarket+1);
			UpdateDynamic3DTextLabelText(rinok_3d[idmarket], COLOR_LIGHTGREY, fm);
		}

		if(GetPlayerVehicleID(playerid) == af_carID[playerid] && 
			GetPlayerState(playerid) == PLAYER_STATE_DRIVER && 
			af_load[playerid]) {

			switch(af_cpnum[playerid]) {
				case 1: SetPlayerCheckpoint(playerid, 549.4506,-1288.6519,17.2482, 5);
				case 2: SetPlayerCheckpoint(playerid, 2456.5261,1331.5010,10.8203, 5);
				case 3: SetPlayerCheckpoint(playerid, -1639.0928,1202.4246,7.2246, 5);
			}
		}
		if(bloody_en[playerid] && GetPlayerInterior(playerid) != 15 && GetPlayerVirtualWorld(playerid) != 10 && timer_bloody <= 0) {
			SetPlayerInterior(playerid, 0); SetPlayerVirtualWorld(playerid, 0);
			TogglePlayerControllable(playerid, 1);
			SetPlayerPos(playerid, 2690.8135, -1704.8428, 11.2370);
			SetPlayerFacingAngle(playerid, 45);
			DisablePlayerRaceCheckpoint(playerid);
			bloody_players --; 
			bloody_en[playerid] = false;
            format(string, 128, "[√ä√∞√Æ√¢√†√¢√Æ√• √™√Æ√´√º√∂√Æ] "CBLUE"%s √Ø√Æ√™√®√≠√≥√´ √®√£√∞√≥ (√¢√ª√∏√•√´ √ß√† √Ø√∞√•√§√•√´√ª √±√≤√†√§√®√Æ√≠√†)", GetName(playerid));
            send_bloodring_mes(COLOR_MAIN, string);
            if(bloody_players == 1) {
                new id_bloodywinner = -1;
                foreach(new i:Player) {
                	if(!bloody_en[i]) continue;
                	id_bloodywinner = i;
                	break;
                }
                if(id_bloodywinner != -1 && timer_bloody == 0) {
                    bloody_players --;
                    new ubet_players, bloody_winmoney = bet_bloody[id_bloodywinner] * 3 / 2;
                    foreach(new i:Player) {
                    	if(!bet_bloody[i]) continue;
                    	if(i == playerid) continue;
                    	ubet_players = bet_bloody[i] / 2;
                    	bloody_winmoney += ubet_players;
                    }
	                SCM(id_bloodywinner, COLOR_MAIN, "[√ä√∞√Æ√¢√†√¢√Æ√• √™√Æ√´√º√∂√Æ] "CBLUE"√è√Æ√ß√§√∞√†√¢√´√ø√•√¨ √Ç√†√± √± √Ø√Æ√°√•√§√Æ√©");
	                SCMF(id_bloodywinner, COLOR_MAIN, "[√ä√∞√Æ√¢√†√¢√Æ√• √™√Æ√´√º√∂√Æ] "CBLUE"√Ç√†√∏ √Ø√∞√®√ß: {00cc00}%d$", bloody_winmoney);
	                Hook_GivePlayerMoney(id_bloodywinner, bloody_winmoney);
	                new gametext_hook[50]; format(gametext_hook, 50, "~g~+%d$", bloody_winmoney);
					GameTextForPlayer(id_bloodywinner, gametext_hook, 3000, 1);
	                SetPlayerInterior(id_bloodywinner, 0); SetPlayerVirtualWorld(id_bloodywinner, 0);
	                TogglePlayerControllable(id_bloodywinner, 1);
	                SetPlayerPos(id_bloodywinner, 2690.8135, -1704.8428, 11.2370);
	                SetPlayerFacingAngle(id_bloodywinner, 45);
	                DisablePlayerRaceCheckpoint(id_bloodywinner);
	                TextDrawHideForPlayer(id_bloodywinner, wait_bloodyst);
	                bet_bloody[id_bloodywinner] = 0;
	                SetCameraBehindPlayer(id_bloodywinner);
	                PlayerTextDrawHide(id_bloodywinner, td_playerbloody[id_bloodywinner]);
	                timer_plbloody[id_bloodywinner] = -1;
	                SetPlayerColor(id_bloodywinner, FractionInfo[pData[id_bloodywinner][pMember]][fColor]);
	                bloody_en[id_bloodywinner] = false;
	                if(GetPlayerVehicleID(id_bloodywinner) >= bloody_car[1] && GetPlayerVehicleID(id_bloodywinner) <= bloody_car[60]) DestroyVehicle(GetPlayerVehicleID(id_bloodywinner));
	                TextDrawHideForPlayer(id_bloodywinner, usebox_playerbloody);
                }
            }
			if(bloody_players <= 1 && timer_bloody == 0) {
				start_bloodyring = false, bloody_players = 0;
				foreach(new i:Player) {
					if(!bloody_en[i]) continue;
					DisablePlayerRaceCheckpoint(i);
					bloody_en[i] = false; 
				}
				foreach(new i:Player) bet_bloody[i] = 0;
				timebreakc_bloody = 0; breakblood_time = 0;
				DestroyPickup(repair_bloody_1); DestroyDynamicArea(repair_bloody); timer_bloody = 0;
				for(new i = 0, ps = GetVehiclePoolSize(); i <= ps; i++) if(i >= bloody_car[1] && i <= bloody_car[60]) DestroyVehicle(i);
			}
			TextDrawHideForPlayer(playerid, wait_bloodyst);
			SetPlayerFacingAngle(playerid, 15.0); 
			SetCameraBehindPlayer(playerid);
			PlayerTextDrawHide(playerid, td_playerbloody[playerid]);
			SetPlayerColor(playerid, FractionInfo[pData[playerid][pMember]][fColor]);
			if(GetPlayerVehicleID(playerid) >= bloody_car[1] && GetPlayerVehicleID(playerid) <= bloody_car[60]) DestroyVehicle(GetPlayerVehicleID(playerid));
			TextDrawHideForPlayer(playerid, usebox_playerbloody);
		}
		if(is_yarder[playerid] && !IsPlayerInRangeOfPoint(playerid, 100.0, 971.9186,2441.0945,10.8503)) {
			PlayerPlaySound(playerid, 6802, 0.0, 0.0, 0.0);
			if(IsValidDynamicObject(yard_obj[playerid])) 
				DestroyDynamicObject(yard_obj[playerid]);
			if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) 
				RemovePlayerAttachedObject(playerid, 1);
			if(GetPVarInt(playerid, "yard_processings")) 
				TogglePlayerControllable(playerid, 1);
			SCM(playerid, 0xCC9966FF, "√ê√†√°√Æ√≤√† √§√¢√Æ√∞√≠√®√™√† √ß√†√¢√•√∞√∏√•√≠√†");
			DeletePVar(playerid, "yardcount");
			is_yarder[playerid] = false;
		}

		if(time_gnews[playerid] == 1) SCM(playerid, COLOR_MAIN, "√ë√∑√•√≤√∑√®√™ √Ç√†√∏√®√µ √£√Æ√±. √≠√Æ√¢√Æ√±√≤√•√© √°√ª√´ √Æ√°√≠√≥√´√•√≠"), gnews_number_str[playerid] = 0;
		if(time_gnews[playerid] > 0) time_gnews[playerid] --;
		if(timer_plbloody[playerid] > 0) {
			new tempstr[15];
			timer_plbloody[playerid] --;
			if(timer_plbloody[playerid] > 9) format(tempstr, 15, "~b~%02d", timer_plbloody[playerid]);
			else format(tempstr, 15, "~r~%02d", timer_plbloody[playerid]);
			PlayerTextDrawSetString(playerid, td_playerbloody[playerid], tempstr);
		}
		new Float: hp_playr;
		GetPlayerHealth(playerid, hp_playr);
		if(pTemp[playerid][pInHospital] && (hp_playr >= 95.0 || GetPlayerInterior(playerid) != 1)) {
			if(pData[playerid][pSex] == 1) SetPlayerChatBubble(playerid, "√Ç√ª√Ø√®√±√†√≠", 0x00FF00FF, 4.0, 5000);
			else SetPlayerChatBubble(playerid, "√Ç√ª√Ø√®√±√†√≠√†", 0x00FF00FF, 4.0, 5000);
			if(hp_playr >= 95) 
				SetPlayerHealth(playerid, 100);
			SCM(playerid, -1, "√Ç√ª √°√ª√´√® √¢√ª√Ø√®√±√†√≠√ª √®√ß √°√Æ√´√º√≠√®√∂√ª");
			UpdateKoykaSvobodin(playerid, GetPVarInt(playerid, "KoykoUsed"));
			pTemp[playerid][pInHospital] = false;
		}
		if(gagtie_time[playerid] == 1) {
			DeletePVar(playerid, "gag");
			SCM(playerid, 0xBFBB41FF, "√ä√´√ø√Ø √±√≤√†√´ √¨√Æ√™√∞√ª√¨ √® √¢√ª√Ø√†√´. √Ñ√Æ√±√≤√≥√Ø √¢ √∑√†√≤ √¢√Æ√±√±√≤√†√≠√Æ√¢√´√•√≠");
		}
		if(!IsPlayerInAnyVehicle(playerid) && 
			GetPlayerWeapon(playerid) == 0 && 
			!workzavod[playerid] &&
			GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_NONE &&
			!GetPVarInt(playerid, "af_detail_upped") && 
			!GetPVarInt(playerid, "loader_bags_in_hands") && 
			!GetPVarInt(playerid, "abonement") && 
			!GetPVarInt(playerid, "takingselfie") &&
			!box_object[playerid] && 
			!JobL[playerid] && 
			!GetPVarInt(playerid, "selecting_acs") && 
			!GetPVarInt(playerid, "yard_processings")) {
			if(pData[playerid][pCash] > 9999999) {
				if(!IsPlayerAttachedObjectSlotUsed(playerid, 8)) 
					having_case_red[playerid] = false;
				if(!having_case_red[playerid]) {
					RemovePlayerAttachedObject(playerid, 8);
					SetPlayerAttachedObject(playerid, 8, 1210, 5, 0.299999, 0.099999, 0.000000, 0.000000, -83.000000, 0.000000, 1.000000, 1.000000, 1.000000, -65536, -65536);
					having_case_red[playerid] = true;
				} 
			}
			else if(pData[playerid][pCash] > 999999) {
				RemovePlayerAttachedObject(playerid, 8);
				SetPlayerAttachedObject(playerid, 8, 1210, 5, 0.299999, 0.099999, 0.000000, 0.000000, -83.000000, 0.000000, 1.000000, 1.000000, 1.000000);
				having_case_red[playerid] = false;
			}
			else {
				having_case_red[playerid] = false;
				RemovePlayerAttachedObject(playerid, 8);
			}
		}
   		else {
   			having_case_red[playerid] = false;
   			RemovePlayerAttachedObject(playerid, 8);
   		}
   		new Float:armour;
   		GetPlayerArmour(playerid,armour);
   		if(armour>0) SetPlayerAttachedObject(playerid, 9, 19142, 1, 0.08,0.04,0.00, 0.0,0.0,-7.4);
   		else RemovePlayerAttachedObject(playerid, 9);

   		if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_USEJETPACK) {
   			SCM(playerid, COLOR_ERROR, "√ä√Æ√§ 885");
   			SCM(playerid, COLOR_ERROR, "√Ç√¢√•√§√®√≤√• √™√Æ√¨√†√≠√§√≥ /q (/quit) √§√´√ø √¢√ª√µ√ÆS√≠");
   			return Kick(playerid);
   		}
	 
		if(gagtie_time[playerid] > 0) gagtie_time[playerid] --;
		if(enable_toggle[playerid]) TogglePlayerControllable(playerid, 0), enable_toggle[playerid] = false;
		if(GetPlayerInterior(playerid) != 1) {
			if(pData[playerid][pHighSkill] == 1 || pData[playerid][pLowSkill] == 1) {
				DisablePlayerCheckpoint(playerid);
				RemovePlayerAttachedObject(playerid, 0);
				SCM(playerid, COLOR_MAIN, "√ê√†√°√Æ√≤√† √∏√†√µ√≤¬∏√∞√† √ß√†√¢√•√∞√∏√•√≠√†");
				RemovePlayerAttachedObject(playerid, 8);
				SetPVarInt(playerid, "InstMine", false);
				pData[playerid][pMinePr] = 0;
				SetPlayerSkin(playerid, pData[playerid][pChar]);
				if(pData[playerid][pMineNumber] > 0) {
					new oplate = 0, UU_oneprod_mine = oneprod_mine / 8;
					new BB_oneprod_mine = UU_oneprod_mine / 2;
					SCMF(playerid, COLOR_MAIN, "√Ç√ª √Ø√•√∞√•√≠√•√±√´√® {FFCD00}%d √™√£ "CMAIN"√∞√≥√§√ª √® √ß√†√∞√†√°√Æ√≤√†√´√® {00cc66}%d$",pData[playerid][pMineNumber],pData[playerid][pMineNumber]*UU_oneprod_mine);
					oplate += pData[playerid][pMineNumber]*UU_oneprod_mine;
					pData[playerid][pWorkSkill][0] += pData[playerid][pMineNumber];
					if(pData[playerid][pHighSkill]) {
						SCMF(playerid, COLOR_PURPLE, "√Å√Æ√≠√≥√± +%d$ √ß√† √§√Æ√°√ª√∑√≥ √¢ √∏√†√µ√≤√• √£√´√≥√°√Æ√™√Æ√£√Æ √ß√†√´√Æ√¶√•√≠√®√ø",pData[playerid][pMineNumber]*BB_oneprod_mine);
						oplate += pData[playerid][pMineNumber]*BB_oneprod_mine;
					}
					Hook_GivePlayerMoney(playerid, oplate);
					format(string, 30, "~b~+%d$", oplate);
					GameTextForPlayer(playerid, string, 3000, 1);
				}
				UpdatePlayerData(playerid, "pWorkSkill", pData[playerid][pWorkSkill][0]);
				pData[playerid][pLowSkill] = 0;
				pData[playerid][pHighSkill] = 0;
				pData[playerid][pMineNumber] = 0;
				for(new i = 0; i < 5; i ++) TextDrawHideForPlayer(playerid, MineGlText[i]);
				PlayerTextDrawDestroy(playerid, MineAmountPTD[playerid]);
				PlayerTextDrawDestroy(playerid, MineMoneyPTD[playerid]);
			}
		}
		if(GetPVarInt(playerid,"time_workerexit")) {
			SetPVarInt(playerid, "time_workerexit", GetPVarInt(playerid,"time_workerexit") - 1);
			if(GetPVarInt(playerid,"time_workerexit") == 1) {
				if(prodworker_status[playerid]) {
					prodwork_bizid[playerid] = 0;
					prodworker_status[playerid] = false;
					new prk_idveh = prodworker_vehicle[playerid];
					prodworker_vehicle[playerid] = -1;
					SetVehicleToRespawn(prk_idveh);
					DestroyDynamic3DTextLabel(prodwork_3d[prk_idveh]);
					SCM(playerid, COLOR_YELLOW, "√ê√†√°√Æ√∑√®√© √§√•√≠√º √∞√†√ß√¢√Æ√ß√∑√®√™√† √Ø√∞√Æ√§√≥√™√≤√Æ√¢ √ß√†√¢√•√∞√∏√•√≠");
					if(prodwork_prods[playerid] > 0) {
						new oplate = prodwork_prods[playerid] * 25;
						Hook_GivePlayerMoney(playerid, oplate);
						new gametext_hook[30];
						format(gametext_hook, 30, "~g~+%d$", oplate);
						GameTextForPlayer(playerid, gametext_hook, 3000, 1);
						SCMF(playerid, COLOR_LITEBLUE, "√Ç√†√¨ √°√ª√´√† √¢√Æ√ß√¢√∞√†√π√•√≠√† √±√≤√Æ√®√¨√Æ√±√≤√º √™√≥√Ø√´√•√≠√≠√ª√µ √Ø√∞√Æ√§√≥√™√≤√Æ√¢: "CMAIN"%d$", oplate);
					}
					prodwork_prods[playerid] = 0;
				}
			}
		}
		if(GetPVarInt(playerid,"time_busexit")) {
			SetPVarInt(playerid, "time_busexit", GetPVarInt(playerid,"time_busexit") - 1);
			if(GetPVarInt(playerid,"time_busexit") == 1) {
				new car = last_vehiclejob[playerid];
				new Float: car_floathp; GetVehicleHealth(car, car_floathp); new car_hp = floatround(car_floathp, floatround_ceil), repair_price = (1000-car_hp)/3;
				DisablePlayerRaceCheckpoint(playerid); KillTimer(timer_bus[playerid]);
				SCM(playerid, COLOR_LITEBLUE, "√ê√†√°√Æ√≤√† √¢√Æ√§√®√≤√•√´√ø √†√¢√≤√Æ√°√≥√±√† √ß√†√¢√•√∞√∏√•√≠√†");
				SCMF(playerid, COLOR_LITEBLUE, "√Ç√ª √ß√†√∞√†√°√Æ√≤√†√´√®: {009966}%d$"CLITEBLUE". √á√† √∞√•√¨√Æ√≠√≤ √†√¢√≤√Æ√°√≥√±√†: "CERROR"-%d$", bus_payday[playerid], repair_price);
				SCMF(playerid, COLOR_LITEBLUE, "√Ç√±√•√£√Æ √Ø√•√∞√•√¢√•√ß√•√≠√Æ √Ø√†√±√±√†√¶√®√∞√Æ√¢: {FFCD00}%d", bus_passengers[car]);
				SCM(playerid, 0x009900FF, "√Ñ√•√≠√º√£√® √°√≥√§√≥√≤ √Ø√•√∞√•√∑√®√±√´√•√≠√ª √¢√†√¨ √¢√Æ √¢√∞√•√¨√ø √¢√ªS√≠√∑√® √ß√†√∞√Ø√´√†√≤√ª");
				bus_passengers[car] = 0, bus_driverid[car] = INVALID_PLAYER_ID;
				GivePayDayMoney(playerid, bus_payday[playerid]);
				if(repair_price != 0) {
					format(string, 32, "~r~-%d$ ~n~~r~ repair bus", repair_price);
					GameTextForPlayer(playerid, string, 3000, 1);
					Hook_GivePlayerMoney(playerid, -repair_price);
				}
				last_vehiclejob[playerid] = -1;
				SetVehicleToRespawn(car);
				
				arenda_bus_id[playerid] = -1;
				arenda_bus[playerid] = false;
				DeletePVar(playerid, "time_busexit");
				player_is_drivebus[playerid] = false;
			}
		}
		if(drugs_time[playerid] == 1) {
			SetPlayerWeather(playerid, weather_server);
			SetPlayerTime(playerid, time_server, 0);
			SetPlayerSpecialAction(playerid, 0);
		}
		if(GetPVarInt(playerid, "captured") && !IsPlayerInRangeOfPoint(playerid, 11.0, 2606.9226, 1315.2701, 1048.5125)) {
			DeletePVar(playerid, "captured");
			TogglePlayerControllable(playerid, 1);
			GameTextForPlayer(playerid, "~g~you are~n~~g~released", 5000, 4);
		}
		if(drugs_time[playerid] > 0) drugs_time[playerid] --;
		if(time_admdelay[playerid] > 0) time_admdelay[playerid] --;
		if(GetPVarInt(playerid,"time_taxiexit")) {
			SetPVarInt(playerid, "time_taxiexit", GetPVarInt(playerid,"time_taxiexit") - 1);
			if(GetPVarInt(playerid,"time_taxiexit") == 1) 
				SetVehicleToRespawn(last_vehiclejob[playerid]);
		}
		if(GetPVarInt(playerid, "SMOKE") > gettime()) {
			switch(GetPVarInt(playerid, "SMOKE")-gettime()) {
				case 60, 45, 30, 15: {
					if(pData[playerid][pSex] == 1) format(string,70, "%s √±√≤√∞√ø√µ√≠√≥√´ √Ø√•√Ø√•√´ √± √±√®√£√†√∞√•√≤√ª", pData[playerid][pName]);
					else format(string,70, "%s √±√≤√∞√ø√µ√≠√≥√´√† √Ø√•√Ø√•√´ √± √±√®√£√†√∞√•√≤√ª", pData[playerid][pName]);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE);
					SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
				}
			}
		}
		else if(GetPVarInt(playerid, "SMOKE") == gettime()) {
			DeletePVar(playerid, "SMOKE");
			DeletePVar(playerid, "ZatJ");
			RemovePlayerAttachedObject(playerid,3);
			if(pData[playerid][pSex] == 1) format(string,50, "%s √¢√ª√™√®√≠√≥√´ √Æ√™√≥√∞√Æ√™", pData[playerid][pName]);
			else format(string,50, "%s √¢√ª√™√®√≠√≥√´√† √Æ√™√≥√∞√Æ√™", pData[playerid][pName]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE);
			SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
		}
		if(pData[playerid][pMuteTime_R]>0) {
			pData[playerid][pMuteTime_R] --;
			if(pData[playerid][pMuteTime_R] <= 1) {
				pData[playerid][pMuteTime_R] = 0;
				UpdatePlayerData(playerid, "pMuteTime_R", 0);
				SCM(playerid, COLOR_MAIN, "√Ñ√Æ√±√≤√≥√Ø √¢ √∞√•√Ø√Æ√∞√≤ √¢√Æ√±√±√≤√†√≠√Æ√¢√´√•√≠");
			}
		}
		if(pData[playerid][pMuteTime]>0) {
			pData[playerid][pMuteTime] --;
			if(pData[playerid][pMuteTime] <= 1) {
				pData[playerid][pMuteTime] = 0;
				UpdatePlayerData(playerid, "pMuteTime", 0);
				SCM(playerid, COLOR_MAIN, "√Ñ√Æ√±√≤√≥√Ø √¢ √∑√†√≤ √¢√Æ√±√±√≤√†√≠√Æ√¢√´√•√≠");
			}
		}
		if(pData[playerid][pPrisonTime] > 0 || pData[playerid][pJailTime] > 0) {
			if(pData[playerid][pPrisonTime] > 0) pData[playerid][pPrisonTime] --;
			if(pData[playerid][pJailTime] > 0) pData[playerid][pJailTime] --;
			if(pData[playerid][pPrisonTime] <= 1 && pData[playerid][pJailTime] <= 1) {
				SCM(playerid, COLOR_YELLOW, "√Ç√ª √Æ√≤√°√ª√´√® √±√¢√Æ√© √±√∞√Æ√™ √® √¨√Æ√¶√•√≤√• √®√§√≤√® √≠√† √±√¢√Æ√°√Æ√§√≥");
				pData[playerid][pPrisonTime] = 0; pData[playerid][pJailTime] = 0;
				UpdatePlayerData(playerid, "pPrisonTime", 0);
				UpdatePlayerData(playerid, "pJailTime", 0);

				if(pData[playerid][pMember] == 0) SetPlayerSkin(playerid, pData[playerid][pChar]);
				else SetPlayerSkin(playerid, pData[playerid][pModel]);
				load_mode(playerid);
				SetPlayerPos(playerid, 1034.5771,2438.6047 - 8,10.9085);
				SetPlayerVirtualWorld(playerid, 0);
				SetPlayerInterior(playerid, 0);
				SetPlayerFacingAngle(playerid, 180.0);
				SetCameraBehindPlayer(playerid);
			}
		}

		if(timesec == 4)
		{
			timesec = 0;
		}
		else timesec++;

		if(restart_time_1 == 1)
		{
			InterpolateCameraPos(playerid, 1392.4246, -874.4545, 143.7707, 1392.4246, -874.4545, 143.7707, 1000);
			InterpolateCameraLookAt(playerid, 1443.6705, -1038.2239, 143.7707, 1443.6705, -1038.2239, 143.7707, 1000);
			PlayStream(playerid, "https://normative-rp.ru/files/media/restartsound.mp3");
		}

		if(timebreakc_bloody == 1)
		{
			if(bloody_en[playerid])
			{
				if(breakblood_time == 1)
				{
					new Float:car_hpbloody;
					GetVehicleHealth(GetPlayerVehicleID(playerid), car_hpbloody);
					SetVehicleHealth(GetPlayerVehicleID(playerid), car_hpbloody-70);
					PlayerPlaySound(playerid, 25604, 0.0, 0.0, 0.0);
					SetPlayerChatBubble(playerid, "-70 CAR HP", 0xBB0000FF, 4.0, 5000);
				}
				if(timebreakc_bloody == 1)
				{
					PlayerPlaySound(playerid, 31201, 0.0, 0.0, 0.0);
					SCM(playerid, COLOR_MAIN, "[√ä√∞√Æ√¢√†√¢√Æ√• √™√Æ√´√º√∂√Æ] "CORANGE"√à√£√∞√† √§√´√®√≤√±√ø √°√Æ√´√•√• 5-√≤√® √¨√®√≠√≥√≤");
					SCM(playerid, COLOR_MAIN, "[√ä√∞√Æ√¢√†√¢√Æ√• √™√Æ√´√º√∂√Æ] "CORANGE"√í√•√Ø√•√∞√º √†√¢√≤√Æ√¨√Æ√°√®√´√® √≥√∑√†√±√≤√≠√®√™√Æ√¢ √°√≥√§√≥√≤ √≤√•√∞√ø√≤√º √Ø√∞√Æ√∑√≠√Æ√±√≤√º √™√†√¶√§√ª√• "CERROR"10 √±√•√™√≥√≠√§");
				}
			}
		}
		if(restart_time_1 == 1)
		{
			TextDrawShowForPlayer(playerid, RST_td[0]);
			TextDrawShowForPlayer(playerid, RST_td[1]);
			SCM(playerid, -1, "√ë√•√∞√¢√•√∞ √¢√Æ√±√±√≤√†√≠√Æ√¢√®√≤ √∞√†√°√Æ√≤√≥ √¢ √≤√•√∑√•√≠√®√• √¨√®√≠√≥√≤√ª...");
		}
	}

	if(restart_time_2 > 0)
	{
		if(restart_time_2 == 1)
		{
			for(new i = 0; i != TOTAL_HOUSE + 1; i ++) 
				SaveHouse(i);
			for(new i = 1; i != BIZES + 1; i ++) 
				SaveBusiness(i);
			foreach(new i:Player)
			{
				SavePlayerAccount(i);
				Kick(i);
			}

			SetTimer("now_restart", 1000*3, 0);
		}

		restart_time_2 --;
	}
	if(restart_time_1 > 0)
	{
		if(restart_time_1 == 1)
		{
			print("√è√•√∞√•√ß√†√£√∞√≥√ß√™√† √±√•√∞√¢√•√∞√†...");
			restart_time_2 = 10;
		}

		restart_time_1 --;
	}
	if(breakblood_time > 0)
	{
		if(breakblood_time == 1) 
			breakblood_time = 10;
		else breakblood_time --;
	}
	if(timebreakc_bloody > 0)
	{
		if(timebreakc_bloody == 1) 
			timebreakc_bloody = 10;
		else timebreakc_bloody --;
	}
	if(timer_bloody == 1)
	{
		if(bloody_players < 2)
		{
			foreach(new playerid:Player)
			{
				if(!bloody_en[playerid]) continue;
				SetPlayerInterior(playerid, 0); SetPlayerVirtualWorld(playerid, 0);
				TogglePlayerControllable(playerid, 1);
				SetPlayerPos(playerid, 2690.8135, -1704.8428, 11.2370);
				SetPlayerFacingAngle(playerid, 45);
				bloody_players --;
				TextDrawHideForPlayer(playerid, wait_bloodyst);
				SetCameraBehindPlayer(playerid);
				PlayerTextDrawHide(playerid, td_playerbloody[playerid]);
				timer_plbloody[playerid] = -1;
				format(string, 128, "[√ä√∞√Æ√¢√†√¢√Æ√• √™√Æ√´√º√∂√Æ] "CORANGE"√à√£√∞√† √°√ª√´√† √Æ√≤√¨√•√≠√•√≠√† √®√ß-√ß√† √≠√•√µ√¢√†√≤√™√® √≥√∑√†√±√≤√≠√®√™√Æ√¢", GetName(playerid));
				send_bloodring_mes(COLOR_MAIN, string);
				SetPlayerColor(playerid, FractionInfo[pData[playerid][pMember]][fColor]);
				if(bloody_players <= 0)
				{
					start_bloodyring = false, bloody_players = 0; foreach(new i:Player) if(bloody_en[i]) DisablePlayerRaceCheckpoint(i), bloody_en[i] = false; 
					DestroyPickup(repair_bloody_1); DestroyDynamicArea(repair_bloody);
					KillTimer(reppictime); timer_bloody = 0; timebreakc_bloody = 0; breakblood_time = 0;
					for(new i = 0, ps = GetVehiclePoolSize(); i <= ps; i++) if(i >= bloody_car[1] && i <= bloody_car[60]) DestroyVehicle(i);
				}
				if(GetPlayerVehicleID(playerid) >= bloody_car[1] && GetPlayerVehicleID(playerid) <= bloody_car[60]) DestroyVehicle(GetPlayerVehicleID(playerid));
				TextDrawHideForPlayer(playerid, usebox_playerbloody);
			}
		}
		else {
			timer_bloody = 0;
			start_bloodyring = true;
			TextDrawSetString(wait_bloodyst, "start in:");
			for(new i = 0, ps = GetVehiclePoolSize(); i <= ps; i++)
			{
				if(i >= bloody_car[1] && i <= bloody_car[60] && !IsVehicleOccupied(i)) 
					DestroyVehicle(i);
			}
			foreach(new i:Player)
			{
				if(!bloody_en[i]) continue;
				TextDrawHideForPlayer(i, wait_bloodyst);
				TextDrawShowForPlayer(i, usebox_playerbloody);
				PlayerTextDrawShow(i, td_playerbloody[i]);
				timer_plbloody[i] = 30;
				PlayerTextDrawSetString(i, td_playerbloody[i], "~b~30");
				TogglePlayerControllable(i, 1);
				timebreakc_bloody = 300; 
				GameTextForPlayer(i, "~p~GO! GO! GO", 700, 3);
				PlayerPlaySound(i, 3200, 0.0, 0.0, 0.0);
			}
			enable_random_checkaddtime();
			enable_random_repairpick();
		}
	}
	else if(timer_bloody == 5 || timer_bloody == 4 || timer_bloody == 3 || timer_bloody == 2)
	{
		new str[10], str_wt[40];
		timer_bloody --;
		foreach(new i:Player)
		{
			if(!bloody_en[i]) continue;
			format(str, 10, "~g~%d", timer_bloody);
			GameTextForPlayer(i, str, 700, 3);
			PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0);
		}
		format(str_wt, 40, "start in:~y~~n~%i sec",timer_bloody);
		TextDrawSetString(wait_bloodyst, str_wt);
	}
	else if(timer_bloody != 0)
	{
		timer_bloody --;
		new str_wt[40];
		format(str_wt, 40, "start in:~y~~n~%i sec",timer_bloody);
		TextDrawSetString(wait_bloodyst, str_wt);
	}

	return 1;
}
stock player_info()
{
	if(gAdvertTime > 0) gAdvertTime --;
	for(new i = 0; i<MAX_ADVERT_COUNT;i ++) {
		if(gAdvert[i][adTime]) gAdvert[i][adTime] --;
		if(gAdvert[i][adCheked] && !gAdvert[i][adTime]) {
			new mes[144], id_checker = GetPlayerID(gAdvert[i][adCheker]);
			new sender= GetPlayerID(gAdvert[i][adSender]);
			if(!IsPlayerConnected(sender) || !IsPlayerConnected(id_checker)) {
				strdel(gAdvert[i][adSender],0,24);
				gAdvert[i][adPhone] = 0;
				strdel(gAdvert[i][adText],0,100);
				strdel(gAdvert[i][adCheker],0,24);
				gAdvert[i][adBusy] = false;
				gAdvert[i][adCheked] = false;
				gAdvert[i][adCheking] = false;
				gAdvert[i][adTime] = 0;
				if(gAdvertCount > 0) gAdvertCount--;
				break;
			}
			format(mes, sizeof(mes), "%s | √é√≤√Ø√∞√†√¢√®√´: %s[%d]. √í√•√´. %d", gAdvert[i][adText], gAdvert[i][adSender], sender,gAdvert[i][adPhone]);
			SCMTA(0x33CC00FF, mes);
			format(mes, 80, "  √é√°√∫√ø√¢√´√•√≠√®√• √Ø√∞√Æ√¢√•√∞√®√´ √±√Æ√≤√∞√≥√§√≠√®√™ √ë√å√à %s[%d]", gAdvert[i][adCheker],id_checker);
			SCMTA(0x339900FF, mes);
			GivePayDayMoney(id_checker, 70);
			mysql_format(mysql_Handle, string, 128, "UPDATE `accounts` SET `ads_smi_count` = `ads_smi_count` + '1' WHERE `Name` = '%s'", GetName(id_checker));
			mysql_tquery(mysql_Handle, string);
			SCM(id_checker, COLOR_LITEBLUE, "√è√∞√•√¨√®√ø "CORANGE"+70$ "CLITEBLUE"√ß√† √Ø√∞√Æ√¢√•√∞√•√≠√≠√Æ√• √Æ√°√∫√ø√¢√´√•√≠√®√•");
			strdel(gAdvert[i][adSender],0,24);
			gAdvert[i][adPhone] = 0;
			strdel(gAdvert[i][adText],0,100);
			strdel(gAdvert[i][adCheker],0,24);
			gAdvert[i][adBusy] = false;
			gAdvert[i][adCheked] = false;
			gAdvert[i][adCheking] = false;
			gAdvert[i][adTime] = 0;
			if(gAdvertCount > 0) gAdvertCount--;
		}
	}
	new text[186];
	strcat(text,""CWHITE"√é√∑√•√∞√•√§√º √≠√† √Ω√™√ß√†√¨√•√≠√ª"CWHITE"");
	for(new i = 0; i<20;i ++) {
		if(gDSTurn[i] != INVALID_PLAYER_ID && !IsPlayerConnected(gDSTurn[i]) || (gDSTurn[i] != INVALID_PLAYER_ID && !pTemp[gDSTurn[i]][pWaitingExam])) gDSTurn[i] = INVALID_PLAYER_ID;
		else if(i != 19 && gDSTurn[i] == INVALID_PLAYER_ID && gDSTurn[i + 1] != INVALID_PLAYER_ID) {
			gDSTurn[i] = gDSTurn[i + 1];
			gDSTurn[i + 1] = INVALID_PLAYER_ID;
			if(!i) {
				new mes[128];
				format(mes,sizeof(mes),"%s √Æ√¶√®SNo √¢√ª√ß√Æ√¢√† √≠√† √Ø√∞√†√™√≤√®√∑√•√±√™√®√© √Ω√™√ß√†√¨√•√≠ √Ø√Æ √¢√Æ√¶√§√•√≠√®√æ",pData[gDSTurn[0]][pName]);
				foreach(new a:Player) {
					if(!IsPlayerConnected(a) || !pData[a][pLogin]) continue;
					else if(pData[a][pMember] == 11) SCM(a,COLOR_BLUE,mes);
				}
			}
		}
		else if(gDSTurn[i] != INVALID_PLAYER_ID) format(text,sizeof(text),"%s\n%d. %s",text,i + 1,pData[gDSTurn[i]][pName]);
	}
	return UpdateDynamic3DTextLabelText(gDSTurnText,0xFFFFFFFF,text);
}
stock FixHour(hour) {
	hour = 0 + hour;
	if (hour < 0) hour = hour + 24;
	else if (hour > 23) hour = hour - 24;
	shifthour = hour;
	return 1;
}

CB: nosport_off(playerid) return DeletePVar(playerid, "no_sport");

public OnPlayerKeyStateChange(playerid, newkeys, oldkeys) {
	if(newkeys == KEY_SUBMISSION)
	{
		if(GetPlayerVehicleID(playerid) >= prodworker[0] && GetPlayerVehicleID(playerid) <= prodworker[1]) {
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
			if(pData[playerid][pJob] != 2) return 1;
			if(prodworker_status[playerid]) SPD(playerid, 714, DIALOG_STYLE_MSGBOX, ""CPALEGREEN"√á√†√¢√•√∞√∏√•√≠√®√• √∞√†√°√Æ√≤√ª", ""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √ß√†√¢√•√∞√∏√®√≤√º √∞√†√°√Æ√≤√≥ √∞√†√ß√¢√Æ√ß√∑√®√™√† √Ø√∞√Æ√§√≥√™√≤√Æ√¢?", "S√≠", "No");
			else {
				new bool: status_prd, str_prod[700] = ""CORANGE"√ç√†√ß√¢√†√≠√®√• √°√®√ß√≠√•√±√†\t\t"CORANGE"√í√∞√•√°√≥√•√≤√±√ø √Ø√∞√Æ√§.\t\t"CORANGE"√ñ√•√≠√† √ß√† √Ø√∞√Æ√§√≥√™√≤\n";
				for(new i = 1; i != BIZES + 1; i ++) 
					if(BizInfo[i][bProdOrder] > 0) status_prd = true, format(str_prod, 700, "%s"CWHITE"%s\t\t%d\t\t%d$\n", str_prod, BizInfo[i][bName], BizInfo[i][bProdOrder], BizInfo[i][bProdOrderPrice]);
				if(!status_prd) SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CPALEGREEN"√á√†√™√†√ß√ª √Ø√∞√Æ√§√≥√™√≤√Æ√¢", ""CWHITE"√Ç S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤ No √≠√® √Æ√§√≠√Æ√£√Æ √ß√†√™√†√ß√†\n√Ø√∞√Æ√§√≥√™√≤√Æ√¢ √§√´√ø √°√®√ß√≠√•√±√†", "Cerrar", "");
				else SPD(playerid, 712, DIALOG_STYLE_TABLIST_HEADERS, ""CPALEGREEN"√á√†√™√†√ß√ª √Ø√∞√Æ√§√≥√™√≤√Æ√¢", str_prod, "Seleccione", "Cerrar");
			}
		}
		if(GetPlayerVehicleID(playerid) >= veh_bus[0] && GetPlayerVehicleID(playerid) <= veh_bus[1]) {
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
			if(!arenda_bus[playerid]) return 1;
			if(player_is_drivebus[playerid]) SPD(playerid, 899, DIALOG_STYLE_MSGBOX, ""CPALEGREEN"√á√†√¢√•√∞√∏√•√≠√®√• √∞√†√°√Æ√≤√ª", ""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √ß√†√¢√•√∞√∏√®√≤√º √∞√†√°√Æ√≤√≥ √¢√Æ√§√®√≤√•√´√ø √†√¢√≤√Æ√°√≥√±√†?", "S√≠", "No");
			else SPD(playerid, 898, DIALOG_STYLE_LIST, "{FFCD00}√Ç√ª√°√•√∞√®√≤√• √¨√†√∞√∏√∞√≥√≤ La carretera√™√®", "[1] √ã√ë ‚Äî √ë√°√Æ√∞√™√† √†√¢√≤√Æ\n[2] √ã√ë ‚Äî √ã√•√±√Æ√Ø√®√´√™√†\n[3] √ã√ë ‚Äî √ò√†√µ√≤√† ‚Äî √Ä√¢√≤√Æ√∏√™√Æ√´√†", "Seleccione", "Cerrar");
		}
		if(GetPlayerVehicleID(playerid) >= veh_taxi[0] && GetPlayerVehicleID(playerid) <= veh_taxi[1]) {
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
			if(!arenda_taxi[playerid]) return 1;
			if(player_is_taxi[playerid]) SPD(playerid, 789, DIALOG_STYLE_MSGBOX, ""CPALEGREEN"√á√†√¢√•√∞√∏√•√≠√®√• √∞√†√°√Æ√≤√ª", ""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √ß√†√¢√•√∞√∏√®√≤√º √∞√†√°√Æ√≤√≥ √≤√†√™√±√®√±√≤√†?", "S√≠", "No");
			else SPD(playerid, 788, DIALOG_STYLE_LIST, "{FFCD00}√Ç√ª√°√•√∞√®√≤√• √≤√®√Ø √≤√†√™√±√®", "[1] √è√Æ √≤√†√∞√®√¥√≥\n[2] √ë √§√Æ√£√Æ√¢√Æ√∞√≠√Æ√© √∂√•√≠√Æ√©", "Seleccione", "Cerrar");
		}
	}
	if(newkeys & KEY_JUMP) {
	    if(GetPlayerVirtualWorld(playerid) == 1)
		    if(IsPlayerInDynamicArea(playerid, nojump[0]) || IsPlayerInDynamicArea(playerid, nojump[1]))
		    	ClearAnimations(playerid);
	}
	if(PRESSED(KEY_JUMP | KEY_SPRINT)) {
        if(bunnyhop_delay[playerid] < gettime() && 
        !IsPlayerApplyAnimation(playerid, "Bat_4") && 
        !GetPVarInt(playerid, "player_anim") && 
        !PlayerTied{playerid} && 
        !IsPlayerInAnyVehicle(playerid) && 
        !GetPVarInt(playerid, "PlayerCuffedTime") &&
        !GetPVarInt(playerid, #tazer_dest) && 
        !GetPVarInt(playerid, "set_enabled") && 
        !GetPVarInt(playerid, "takingselfie")) {
            ApplyAnimation(playerid, "PED", "ko_skid_back", 4.1, 0, 0, 0, 0, 0, 1);
            SetTimerEx("Anti_BH", 600, 0, "i", playerid);
            bunnyhop_delay[playerid] = gettime() + 1;
        }
    }
	else if(newkeys & 4) {
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
			new vehid = GetPlayerVehicleID(playerid);
			if(GetVehicleModel(vehid) == 481 || GetVehicleModel(vehid) == 509 || GetVehicleModel(vehid) == 510) return 1;
			if(!vehid || GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
			new engine, lights, alarm, doors, bonnet, boot, objective;
			GetVehicleParamsEx(vehid,engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(vehid,engine,(VehInfo[vehid - 1][vLamp]?(0):(1)),alarm,doors,bonnet,boot,objective);
			VehInfo[vehid - 1][vLamp] = (VehInfo[vehid - 1][vLamp])?(false):(true);
		}
    }
	else if((newkeys & KEY_JUMP) && !(oldkeys & KEY_JUMP) || (newkeys & KEY_FIRE)) {
        if(GetPVarInt(playerid, "loader_bags_in_hands")) {
            SCM(playerid, COLOR_ERROR, "√Ç√ª √≥√∞√Æ√≠√®√´√® √£√∞√≥√ß");
            RemovePlayerAttachedObject(playerid, 2);
            TogglePlayerControllable(playerid, 1);
            SetPlayerSpecialAction(playerid, 0);
            SetPlayerCheckpoint(playerid, 2222.4976,-2278.0466,13.5469, 2.0);
            ApplyAnimation(playerid, "PED", "IDLE_tired", 4.1,0,1,1,0,1);
            DeletePVar(playerid, "loader_bags_in_hands");
        } return 1;
    }
	else if(newkeys & KEY_ACTION)
	{
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
			if(anti_flood_eng[playerid] > gettime()) return 1;
			new vehicleid = GetPlayerVehicleID(playerid);
			new fixed_veh = vehicleid - 1;
			if(fixed_veh <= -1 || fixed_veh >= MAX_VEHICLES) return 1;
			if(vehicleid >= veh_taxi[0] && vehicleid <= veh_taxi[1] && !arenda_taxi[playerid]) return 1;
			if(vehicleid >= veh_bus[0] && vehicleid <= veh_bus[1] && !arenda_bus[playerid]) return 1;
			if(GetVehicleModel(vehicleid) == 481 || GetVehicleModel(vehicleid) == 509 || GetVehicleModel(vehicleid) == 510) return 1;
			if(VehInfo[vehicleid][vFuel] < 0.1 && !VehInfo[fixed_veh][vEngine]) {
				PlayerPlaySound(playerid, 25603, 0.0, 0.0, 0.0);
				return GameTextForPlayer(playerid, "~r~no fuel", 3000, 1);
            }
			new engine, lights, alarm, doors, bonnet, boot, objective;
			GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
            anti_flood_eng[playerid] = gettime() + 1;
			if(!VehInfo[fixed_veh][vEngine]) SetVehicleParamsEx(vehicleid, 1, lights, alarm, doors, bonnet, boot, objective);
			else SetVehicleParamsEx(vehicleid, 0, lights, alarm, doors, bonnet, boot, objective);
		}
		return 1;
	}
	else if(newkeys == KEY_YES)
	{
		if(anti_flood_yn[playerid] > gettime()) return 1;
		SetPVarInt(playerid, "yes_is_key", 1);
		callcmd::yes(playerid);
		anti_flood_yn[playerid] = gettime() + 1;
	}
	else if(newkeys == KEY_NO)
	{
		if(anti_flood_yn[playerid] > gettime()) return 1;
		if(GetPVarInt(playerid, "offer_SELLMYFLAT")) {
            new id_offer = GetPVarInt(playerid, "SELLMYFLAT_targetid");
            
            if(pData[playerid][pSex] == 1) SCMF(id_offer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
    		else SCMF(id_offer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√†√±√º √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));

    		DeletePVar(id_offer, "cancel_act");
    		DeletePVar(id_offer, "cancel_act_id");

            SetPVarInt(playerid, "offer", 9999);
            DeletePVar(playerid, "offer_SELLMYFLAT");
            DeletePVar(playerid, "SELLMYFLAT_targetid");
            DeletePVar(playerid, "SELLMYFLAT_price");

            return SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√†√ß√†√´√®√±√º √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø");
		}
		else if(GetPVarInt(playerid, "offer_FAMILY")) {
	        new id_offer = GetPVarInt(playerid, "FAMILY_targetid");
	        SetPVarInt(playerid, "offer", 9999);
	        DeletePVar(playerid, "offer_FAMILY");
	        DeletePVar(playerid, "FAMILY_targetid");
			DeletePVar(id_offer, "cancel_act");
			DeletePVar(id_offer, "cancel_act_id");
	        if(pData[playerid][pSex] == 1) SCMF(id_offer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
			 	else SCMF(id_offer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√†√±√º √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
	        return SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√†√ß√†√´√®√±√º √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø");
		}
        else if(GetPVarInt(playerid, "offer_CSEX")) {
            new id_offer = GetPVarInt(playerid, "CSEX_targetid");
            SetPVarInt(playerid, "offer", 9999);
            DeletePVar(playerid, "offer_CSEX");
            DeletePVar(playerid, "CSEX_targetid");
			DeletePVar(playerid, "CSEX_price");
			DeletePVar(id_offer, "cancel_act");
			DeletePVar(id_offer, "cancel_act_id");
            if(pData[playerid][pSex] == 1) SCMF(id_offer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
   		 	else SCMF(id_offer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√†√±√º √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
            return SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√†√ß√†√´√®√±√º √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø");
		}
        else if(GetPVarInt(playerid, "sellerbiz") != 999) {
        	new seller = GetPVarInt(playerid, "sellerbiz");
	        if(pData[playerid][pSex] == 1) SCMF(seller, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
	        else SCMF(seller, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√†√±√º √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
	        DeletePVar(seller, "cancel_act"); DeletePVar(seller, "cancel_act_id");
	        SetPVarInt(playerid, "sellerbiz", 999);
	        DeletePVar(playerid, "bizcost"); SetPVarInt(playerid, "offer", 9999);
	        return SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√†√ß√†√´√®√±√º √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø");
	    }
	    else if(GetPVarInt(playerid, "Player")) {
	    	new target = GetPVarInt(playerid, "Player");
	    	if(pData[playerid][pSex] == 1) SCMF(target, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
	        else SCMF(target, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√†√±√º √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
	        DeletePVar(target, "cancel_act"); DeletePVar(target, "cancel_act_id");
	        DeletePVar(playerid, "Player"); SetPVarInt(playerid, "offer", 9999);
	        return SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√†√ß√†√´√®√±√º √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø");
	    }
	    else if(GetPVarInt(playerid, "CarOffer") != 999) {
	    	new coffer = GetPVarInt(playerid, "CarOffer");
	    	if(pData[playerid][pSex] == 1) SCMF(coffer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
	        else SCMF(coffer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√†√±√º √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
	        DeletePVar(coffer, "cancel_act"); DeletePVar(coffer, "cancel_act_id");
	        SetPVarInt(playerid, "CarOffer", 999);
	        DeletePVar(playerid, "CarPrice");
	        DeletePVar(playerid, "CarNum"); SetPVarInt(playerid, "offer", 9999);
	        return SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√†√ß√†√´√®√±√º √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø");
	    }
	    else if(GetPVarInt(playerid, "ProposeOffer") != 999) {
	    	new proffer = GetPVarInt(playerid, "ProposeOffer");
	        if(pData[playerid][pSex] == 1) SCMF(proffer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
	        else SCMF(proffer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√†√±√º √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
	        DeletePVar(proffer, "cancel_act"); DeletePVar(proffer, "cancel_act_id");
	        SetPVarInt(playerid, "ProposeOffer", 999);
	        SetPVarInt(playerid, "MarryWitness", 999); SetPVarInt(playerid, "offer", 9999);
	        return SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√†√ß√†√´√®√±√º √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø");
	    }
	    else if(GetPVarInt(playerid, "RepairOffer") != 999) {
	    	new repoffer = GetPVarInt(playerid, "RepairOffer");
	        if(pData[playerid][pSex] == 1) SCMF(repoffer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
	        else SCMF(repoffer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√†√±√º √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
	        DeletePVar(repoffer, "cancel_act"); DeletePVar(repoffer, "cancel_act_id");
	        DeletePVar(playerid,"RepairPrice");
	        SetPVarInt(playerid, "RepairOffer", 999); SetPVarInt(playerid, "offer", 9999);
	        return SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√†√ß√†√´√®√±√º √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø");
	    }
	    else if(GetPVarInt(playerid, "MarryWitnessOffer") != 999) {
	    	new mwoffer = GetPVarInt(playerid, "MarryWitnessOffer");
	        if(pData[playerid][pSex] == 1) SCMF(mwoffer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
	        else SCMF(mwoffer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√†√±√º √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
	        SetPVarInt(playerid,"MarryWitnessOffer",999); SetPVarInt(playerid, "offer", 9999);
	        DeletePVar(mwoffer, "cancel_act"); DeletePVar(mwoffer, "cancel_act_id");
	        return SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√†√ß√†√´√®√±√º √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø");
	    }
	    else if(GetPVarInt(playerid, "hProdaet") != 999) {
	    	new prod = GetPVarInt(playerid, "hProdaet");
	        if(pData[playerid][pSex] == 1) SCMF(prod, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
	        else SCMF(prod, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√†√±√º √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
	        DeletePVar(prod, "cancel_act"); DeletePVar(prod, "cancel_act_id");
	        SetPVarInt(playerid,"hProdaet",999);
	        DeletePVar(playerid,"hCena"); SetPVarInt(playerid, "offer", 9999);
	        return SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√†√ß√†√´√®√±√º √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø");
	    }
	    else if(GetPVarInt(playerid, "RefillOffer") != 999) {
	    	new refoffer = GetPVarInt(playerid, "RefillOffer");
	        if(pData[playerid][pSex] == 1) SCMF(refoffer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
	        else SCMF(refoffer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√†√±√º √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
	        DeletePVar(refoffer, "cancel_act"); DeletePVar(refoffer, "cancel_act_id");
	        SetPVarInt(playerid,"RefillOffer",999);
	        DeletePVar(playerid,"RefillPrice"); SetPVarInt(playerid, "offer", 9999);
	        return SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√†√ß√†√´√®√±√º √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø");
	    }
	    else if(GetPVarInt(playerid, "TicketOffer") != 999) {
	    	new ticoffer = GetPVarInt(playerid, "TicketOffer");
	        if(pData[playerid][pSex] == 1) SCMF(ticoffer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
	        else SCMF(ticoffer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√†√±√º √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
	        DeletePVar(ticoffer, "cancel_act"); DeletePVar(ticoffer, "cancel_act_id");
	        SetPVarInt(playerid,"TicketOffer",999);
	        DeletePVar(playerid,"TicketMoney"); SetPVarInt(playerid, "offer", 9999);
	        return SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√†√ß√†√´√®√±√º √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø");
	    }
	    else if(GetPVarInt(playerid, "ZoneOffer") != 999) {
	    	new zoffer = GetPVarInt(playerid, "ZoneOffer");
	        if(pData[playerid][pSex] == 1) SCMF(zoffer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
	        else SCMF(zoffer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√†√±√º √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
	        DeletePVar(zoffer, "cancel_act"); DeletePVar(zoffer, "cancel_act_id");
	        SetPVarInt(playerid, "ZoneOffer", 999); SetPVarInt(playerid, "offer", 9999);
	        DeletePVar(playerid, "ZonePrice");
	        DeletePVar(playerid, "sellzone");
	        return SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√†√ß√†√´√®√±√º √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø");
	    }
	    else if(GetPVarInt(playerid, "LiveOfferls") != 999) {
	    	new livoffer = GetPVarInt(playerid, "LiveOfferls");
	        if(pData[playerid][pSex] == 1) SCMF(livoffer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
	        else SCMF(livoffer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√†√±√º √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
	        DeletePVar(livoffer, "cancel_act"); DeletePVar(livoffer, "cancel_act_id");
	        SetPVarInt(playerid, "LiveOfferls", 999); SetPVarInt(playerid, "offer", 9999);
	        return SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√†√ß√†√´√®√±√º √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø");
	    }
		else if(GetPVarInt(playerid, "offer_SELLGUN")) {
			new id_offer = GetPVarInt(playerid, "SELLGUN_targetid");
			if(pData[playerid][pSex] == 1) SCMF(id_offer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
    		else SCMF(id_offer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√†√±√º √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
            SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√†√ß√†√´√®√±√º √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø");
            DeletePVar(playerid, "offer_SELLGUN");
			SetPVarInt(playerid, "offer", 9999); DeletePVar(playerid, "SELLGUN_targetid"); DeletePVar(id_offer, "cancel_act"); DeletePVar(id_offer, "cancel_act_id");
			return DeletePVar(playerid, "SELLGUN_gunid"), DeletePVar(playerid, "SELLGUN_ammos"), DeletePVar(playerid, "SELLGUN_price");
		}
		else if(GetPVarInt(playerid, "offer_SELLDRUGS")) {
	        new id_offer = GetPVarInt(playerid, "SELLDRUGS_targetid"); DeletePVar(playerid, "SELLDRUGS_targetid");
	        if(pData[playerid][pSex] == 1) SCMF(id_offer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
			else SCMF(id_offer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√†√±√º √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid)); DeletePVar(id_offer, "cancel_act"); DeletePVar(id_offer, "cancel_act_id");
	        SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√†√ß√†√´√®√±√º √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø");
	        DeletePVar(playerid, "offer_SELLDRUGS");
	        DeletePVar(playerid, "SELLDRUGS_price"), DeletePVar(playerid, "SELLDRUGS_count");
	        return DeletePVar(playerid, "offer_SELLDRUGS"), SetPVarInt(playerid, "offer", 9999);
		}
		else if(GetPVarInt(playerid, "offer_PASS")) {
            new id_offer = GetPVarInt(playerid, "PASS_targetid"); DeletePVar(playerid, "PASS_targetid");
            if(pData[playerid][pSex] == 1) SCMF(id_offer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
    		else SCMF(id_offer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√†√±√º √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid)); DeletePVar(id_offer, "cancel_act"); DeletePVar(id_offer, "cancel_act_id");
            SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√†√ß√†√´√®√±√º √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø");
            return DeletePVar(playerid, "offer_PASS"), SetPVarInt(playerid, "offer", 9999);
		}
		else if(GetPVarInt(playerid, "offer_ARMY")) {
            new id_offer = GetPVarInt(playerid, "ARMY_targetid"); DeletePVar(playerid, "ARMY_targetid");
            if(pData[playerid][pSex] == 1) SCMF(id_offer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
   			else SCMF(id_offer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√†√±√º √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid)); DeletePVar(id_offer, "cancel_act"); DeletePVar(id_offer, "cancel_act_id");
            SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√†√ß√†√´√®√±√º √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø");
            return DeletePVar(playerid, "offer_ARMY"), SetPVarInt(playerid, "offer", 9999);
		}
		else if(GetPVarInt(playerid, "offer_MED")) {
            new id_offer = GetPVarInt(playerid, "MED_targetid"); DeletePVar(playerid, "MED_targetid");
            if(pData[playerid][pSex] == 1) SCMF(id_offer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
   		 	else SCMF(id_offer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√†√±√º √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid)); DeletePVar(id_offer, "cancel_act"); DeletePVar(id_offer, "cancel_act_id");
            SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√†√ß√†√´√®√±√º √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø");
            return DeletePVar(playerid, "offer_MED"), SetPVarInt(playerid, "offer", 9999);
		}
		else if(GetPVarInt(playerid, "offer_LIC")) {
            new id_offer = GetPVarInt(playerid, "LIC_targetid"); DeletePVar(playerid, "LIC_targetid");
            if(pData[playerid][pSex] == 1) SCMF(id_offer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
    		else SCMF(id_offer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√†√±√º √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid)); DeletePVar(id_offer, "cancel_act"); DeletePVar(id_offer, "cancel_act_id");
            SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√†√ß√†√´√®√±√º √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø");
            return DeletePVar(playerid, "offer_LIC"), SetPVarInt(playerid, "offer", 9999);
		}
		else if(GetPVarInt(playerid, "offer_SKILL")) {
            new id_offer = GetPVarInt(playerid, "SKILL_targetid"); DeletePVar(playerid, "SKILL_targetid");
            if(pData[playerid][pSex] == 1) SCMF(id_offer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
    		else SCMF(id_offer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√†√±√º √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid)); DeletePVar(id_offer, "cancel_act"); DeletePVar(id_offer, "cancel_act_id");
            SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√†√ß√†√´√®√±√º √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø");
            return DeletePVar(playerid, "offer_SKILL"), SetPVarInt(playerid, "offer", 9999);
		}
		else if(GetPVarInt(playerid, "newlead_offer") == 1) {
			new oid = GetPVarInt(playerid, "offer");
			if(pData[playerid][pSex] == 1) SCMF(oid, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", pData[playerid][pName]);
			else SCMF(oid, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√†√±√º √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", pData[playerid][pName]); DeletePVar(GetPVarInt(playerid, "offer"), "cancel_act"); DeletePVar(GetPVarInt(playerid, "offer"), "cancel_act_id");
			SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√†√ß√†√´√®√±√º √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø");
			return DeletePVar(playerid, "newlead_offer"), SetPVarInt(playerid, "offer", 9999);
		}
		else if(GetPVarInt(playerid, "sim_offer")) {
			new sellerid = GetPVarInt(playerid, "SIM_seller");
			DeletePVar(playerid, "sim_offer"), DeletePVar(playerid, "SIM_seller"), DeletePVar(playerid, "SIM_price"), SetPVarInt(playerid, "offer", 9999);
			if(pData[playerid][pSex] == 1) SCMF(sellerid, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", pData[playerid][pName]);
			else SCMF(sellerid, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√†√±√º √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", pData[playerid][pName]); DeletePVar(sellerid, "cancel_act"); DeletePVar(sellerid, "cancel_act_id");
			return SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√†√ß√†√´√®√±√º √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø");
		}
		else if(GetPVarInt(playerid, "csim_offer")) {
			new changerid = GetPVarInt(playerid, "√ëSIM_seller");
			DeletePVar(playerid, "csim_offer"), DeletePVar(playerid, "√ëSIM_seller"), DeletePVar(playerid, "CSIM_surcharge"), SetPVarInt(playerid, "offer", 9999), DeletePVar(playerid, "number_celler");
			if(pData[playerid][pSex] == 1) SCMF(changerid, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", pData[playerid][pName]);
			else SCMF(changerid, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√†√±√º √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", pData[playerid][pName]); DeletePVar(changerid, "cancel_act"); DeletePVar(changerid, "cancel_act_id");
			return SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√†√ß√†√´√®√±√º √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø");
		}
		else if(GetPVarInt(playerid, "ProverkaDice")) {
			if(GetPVarInt(playerid, "KostiName") < 999) {
				new kstname = GetPVarInt(playerid, "KostiName");
				DeletePVar(playerid, "ZapretDice");
				DeletePVar(kstname, "ZapretDice");
				DeletePVar(playerid, "BetType");
				SetPVarInt(playerid, "KostiName",999);
				DeletePVar(playerid, "KostiMoney");
				DeletePVar(playerid, "ProverkaDice"); DeletePVar(kstname, "cancel_act"); DeletePVar(kstname, "cancel_act_id");
				if(pData[kstname][pSex] == 1) SCMF(kstname, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
				else SCMF(kstname, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√†√±√º √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
				SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√†√ß√†√´√®√±√º √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø");
			}
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 3.0, -105.8529,-10.6156,1000.7188) && BizEnter{playerid} != 255) 
			SPD(playerid,4592, DIALOG_STYLE_TABLIST,"Sex Shop", "√ê√Æ√ß√Æ√¢√ª√© √¢√®√°√∞√†√≤√Æ√∞\t"CPURPLE"200$\n"CWHITE"√é√°√ª√∑√≠√ª√© √¢√®√°√∞√†√≤√Æ√∞\t"CPURPLE"150$\n"CWHITE"√Å√Æ√´√º√∏√Æ√© √¢√®√°√∞√†√≤√Æ√∞\t"CPURPLE"250$\n"CWHITE"√ó¬∏√∞√≠√ª√© √¢√®√°√∞√†√≤√Æ√∞\t"CPURPLE"100$", "√ä√≥√Ø√®√≤√º", "Cerrar");
		else if(IsPlayerInRangeOfPoint(playerid, 3.0, -2237.1968,130.1774,1035.4141) && BizEnter{playerid} != 255) 
			SPD(playerid,9526, DIALOG_STYLE_TABLIST,""CLITEBLUE"√å√•√≠√æ √¨√†√£√†√ß√®√≠√†", "RC Bandit\t{99ff66}1000$\n"CWHITE"RC Baron\t{99ff66}2800$\n"CWHITE"RC Raider\t{99ff66}2500$\n"CWHITE"RC Goblin\t{99ff66}2600$\n"CWHITE"RC Tiger\t{99ff66}6200$\nRC Cam\t{99ff66}800$", "√ä√≥√Ø√®√≤√º", "Cerrar");
		else if(IsPlayerInRangeOfPoint(playerid, 3.0, -1640.8473,-117.1546,3385.1750) && BizEnter{playerid} != 255) {
			if(blow_num[playerid] == 0) 
			SPD(playerid, 1216, DIALOG_STYLE_TABLIST, "√å√†√£√†√ß√®√≠ √Ø√®√∞√Æ√≤√•√µ√≠√®√™√®", 
				"[1] √ò√≥√¨√Æ√¢√ª√• √Ø√•√≤√†√∞√§√ª (4 √∏√≤.)\t{9966FF}250$\n\
				"CWHITE"[2] √ë√¢√•√≤√Æ√¢√ª√• √Ø√•√≤√†√∞√§√ª (4 √∏√≤.)\t{9966FF}340$\n\
				"CWHITE"[3] √Ñ√ª√¨√Æ√¢√†√ø √∏√†√∏√™√† (3 √∏√≤.)\t{9966FF}500$\n\
				"CWHITE"[4] √é√§√®√≠√Æ√∑√≠√†√ø √∞√†√™√•√≤√† (3 √∏√≤.)\t{9966FF}830$\n\
				"CWHITE"[5] √í√∞√Æ√©√≠√†√ø √∞√†√™√•√≤√† (2 √∏√≤.)\t{9966FF}2400$\n\
				"CWHITE"[6] √è√∞√Æ√¥√•√±√±√®√Æ√≠√†√´√º√≠√ª√© √±√†√´√æ√≤\t{9966FF}28000$", 
			"Seleccione", "Cerrar");
			else SPD(playerid, 1916, DIALOG_STYLE_MSGBOX, "√å√†√£√†√ß√®√≠ √Ø√®√∞√Æ√≤√•√µ√≠√®√™√®", ""CWHITE"√ì √Ç√†√± √± √±√Æ√°√Æ√© √≥√¶√• √•√±√≤√º √Ø√®√∞√Æ√≤√•√µ√≠√®√∑√•√±√™√®√• √®√ß√§√•√´√®√ø, √Ø√Æ√™√≥√Ø√™√† √≠√Æ√¢√ª√µ √ß√†√¨√•√≠√®√≤ √®√µ\n√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √Ø√∞√Æ√§√Æ√´√¶√®√≤√º?", "S√≠", "No");
		}
		else if(IsPlayerInRangeOfPoint(playerid,5.0,-28.3916,-185.1342,1003.5469) && 
			BizEnter{playerid} != 255) {

			new shop_str[] = 
			"[1] √í√•√´√•√¥√Æ√≠\t{00CC00}170$\n\
			"CWHITE"[2] √ç√Æ√¨√•√∞ SIM-√™√†√∞√≤√ª\t{00CC00}450$\n\
			"CWHITE"[3] √ñ√¢√•√≤ √≤√•√´√•√¥√Æ√≠√†\t{00CC00}200$\n\
			"CWHITE"[4] √î√Æ√≤√Æ√†√Ø√Ø√†√∞√†√≤ (20 √±√≠√®√¨√™√Æ√¢)\t{00CC00}250$\n\
			"CWHITE"[5] √Å√≥√™√•√≤ √∂√¢√•√≤√Æ√¢\t{00CC00}150$\n\
			"CWHITE"[6] √å√†√±√™√†\t{00CC00}110$\n\
			"CWHITE"[7] √Ä√Ø√≤√•√∑√™√†\t{00CC00}150$\n\
			"CWHITE"[8] √ë√®√£√†√∞√•√≤√ª\t{00CC00}600$\n\
			"CWHITE"[9] Hajigalk\t{00CC00}450$\n\
			"CWHITE"[10] √í√∞√Æ√±√≤√º\t{00CC00}600$\n\
			"CWHITE"[11] √è√†√∞√†√∏√æ√≤\t{00CC00}800$\n\
			"CWHITE"[12] √å√†√£√≠√®√≤√Æ√¥√Æ√≠\t{00CC00}500$\n\
			"CWHITE"[13] √Å√†√´√´√Æ√≠√∑√®√™ √± √™√∞√†√±√™√Æ√©\t{00CC00}400$";

			SPD(playerid, 69, DIALOG_STYLE_TABLIST, "{0099ff}√å√•√≠√æ √¨√†√£√†√ß√®√≠√†", shop_str, "√ä√≥√Ø√®√≤√º", "Cerrar");
		}
		else if((IsPlayerInRangeOfPoint(playerid,5.0,377.4127,-67.8296,1001.5151) || 
				IsPlayerInRangeOfPoint(playerid,5.0,450.4566,-83.9682,999.5547)) && 
				BizEnter{playerid} != 255)
		{
			string[0] = EOS;
			for(new i = 0; i < 9; i ++) format(string,420,"%s"CWHITE"%s\t"CMAIN"%i$\n",string,BusinessMenu[0][i],BizInfo[BizEnter{playerid}][bCena][i]);
			SPD(playerid, 68, DIALOG_STYLE_TABLIST, "√å√•√≠√æ", string, "√ä√≥√Ø√®√≤√º", "Cerrar");
		}
		else
		{
			anti_flood_yn[playerid] = gettime() + 1;
			return SCM(playerid, COLOR_GREY, "√Ç S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤ √Ç√†√¨ √≠√®√∑√•√£√Æ √≠√• √Ø√∞√•√§√´√†√£√†√æ√≤");
		}
	}
	else if(newkeys == KEY_SECONDARY_ATTACK)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 1948.268920, 991.184326, 992.650000) ||
			IsPlayerInRangeOfPoint(playerid, 3.0, 1948.268920, 994.595520, 992.650000))
		{
			casino_slotTD[playerid][0] = CreatePlayerTextDraw(playerid, 216.925338, 158.666656, "vehicle:vehicleenvmap128");
			PlayerTextDrawLetterSize(playerid, casino_slotTD[playerid][0], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid, casino_slotTD[playerid][0], 208.491958, 201.250030);
			PlayerTextDrawAlignment(playerid, casino_slotTD[playerid][0], 1);
			PlayerTextDrawColor(playerid, casino_slotTD[playerid][0], 956372479);
			PlayerTextDrawSetShadow(playerid, casino_slotTD[playerid][0], 0);
			PlayerTextDrawSetOutline(playerid, casino_slotTD[playerid][0], 0);
			PlayerTextDrawFont(playerid, casino_slotTD[playerid][0], 4);

			casino_slotTD[playerid][1] = CreatePlayerTextDraw(playerid, 215.051269, 352.333435, "LD_BEAT:chit");
			PlayerTextDrawLetterSize(playerid, casino_slotTD[playerid][1], 0.042164, 1.423333);
			PlayerTextDrawTextSize(playerid, casino_slotTD[playerid][1], 10.307456, 12.249979);
			PlayerTextDrawAlignment(playerid, casino_slotTD[playerid][1], 1);
			PlayerTextDrawColor(playerid, casino_slotTD[playerid][1], 956372479);
			PlayerTextDrawUseBox(playerid, casino_slotTD[playerid][1], true);
			PlayerTextDrawBoxColor(playerid, casino_slotTD[playerid][1], 255);
			PlayerTextDrawSetShadow(playerid, casino_slotTD[playerid][1], 0);
			PlayerTextDrawSetOutline(playerid, casino_slotTD[playerid][1], 0);
			PlayerTextDrawFont(playerid, casino_slotTD[playerid][1], 4);

			casino_slotTD[playerid][2] = CreatePlayerTextDraw(playerid, 217.393859, 158.666656, "LD_SPAC:white");
			PlayerTextDrawLetterSize(playerid, casino_slotTD[playerid][2], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid, casino_slotTD[playerid][2], 207.554901, 7.000000);
			PlayerTextDrawAlignment(playerid, casino_slotTD[playerid][2], 1);
			PlayerTextDrawColor(playerid, casino_slotTD[playerid][2], 956372479);
			PlayerTextDrawSetShadow(playerid, casino_slotTD[playerid][2], 0);
			PlayerTextDrawSetOutline(playerid, casino_slotTD[playerid][2], 0);
			PlayerTextDrawFont(playerid, casino_slotTD[playerid][2], 4);

			casino_slotTD[playerid][3] = CreatePlayerTextDraw(playerid, 219.267944, 357.000000, "LD_SPAC:white");
			PlayerTextDrawLetterSize(playerid, casino_slotTD[playerid][3], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid, casino_slotTD[playerid][3], 203.338226, 5.833312);
			PlayerTextDrawAlignment(playerid, casino_slotTD[playerid][3], 1);
			PlayerTextDrawColor(playerid, casino_slotTD[playerid][3], 956372479);
			PlayerTextDrawSetShadow(playerid, casino_slotTD[playerid][3], 0);
			PlayerTextDrawSetOutline(playerid, casino_slotTD[playerid][3], 0);
			PlayerTextDrawFont(playerid, casino_slotTD[playerid][3], 4);

			casino_slotTD[playerid][4] = CreatePlayerTextDraw(playerid, 215.114212, 153.250030, "LD_BEAT:chit");
			PlayerTextDrawLetterSize(playerid, casino_slotTD[playerid][4], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid, casino_slotTD[playerid][4], 11.244503, 12.833312);
			PlayerTextDrawAlignment(playerid, casino_slotTD[playerid][4], 1);
			PlayerTextDrawColor(playerid, casino_slotTD[playerid][4], 956372479);
			PlayerTextDrawSetShadow(playerid, casino_slotTD[playerid][4], 0);
			PlayerTextDrawSetOutline(playerid, casino_slotTD[playerid][4], 0);
			PlayerTextDrawFont(playerid, casino_slotTD[playerid][4], 4);

			casino_slotTD[playerid][5] = CreatePlayerTextDraw(playerid, 415.704467, 152.500015, "LD_BEAT:chit");
			PlayerTextDrawLetterSize(playerid, casino_slotTD[playerid][5], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid, casino_slotTD[playerid][5], 11.244503, 12.833312);
			PlayerTextDrawAlignment(playerid, casino_slotTD[playerid][5], 1);
			PlayerTextDrawColor(playerid, casino_slotTD[playerid][5], 956372479);
			PlayerTextDrawSetShadow(playerid, casino_slotTD[playerid][5], 0);
			PlayerTextDrawSetOutline(playerid, casino_slotTD[playerid][5], 0);
			PlayerTextDrawFont(playerid, casino_slotTD[playerid][5], 4);

			casino_slotTD[playerid][6] = CreatePlayerTextDraw(playerid, 220.204986, 155.166656, "LD_SPAC:white");
			PlayerTextDrawLetterSize(playerid, casino_slotTD[playerid][6], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid, casino_slotTD[playerid][6], 201.464141, 8.166687);
			PlayerTextDrawAlignment(playerid, casino_slotTD[playerid][6], 1);
			PlayerTextDrawColor(playerid, casino_slotTD[playerid][6], 956372479);
			PlayerTextDrawSetShadow(playerid, casino_slotTD[playerid][6], 0);
			PlayerTextDrawSetOutline(playerid, casino_slotTD[playerid][6], 0);
			PlayerTextDrawFont(playerid, casino_slotTD[playerid][6], 4);

			casino_slotTD[playerid][7] = CreatePlayerTextDraw(playerid, 416.578460, 351.583404, "LD_BEAT:chit");
			PlayerTextDrawLetterSize(playerid, casino_slotTD[playerid][7], 0.042164, 1.423333);
			PlayerTextDrawTextSize(playerid, casino_slotTD[playerid][7], 10.307456, 12.249979);
			PlayerTextDrawAlignment(playerid, casino_slotTD[playerid][7], 1);
			PlayerTextDrawColor(playerid, casino_slotTD[playerid][7], 956372479);
			PlayerTextDrawUseBox(playerid, casino_slotTD[playerid][7], true);
			PlayerTextDrawBoxColor(playerid, casino_slotTD[playerid][7], 255);
			PlayerTextDrawSetShadow(playerid, casino_slotTD[playerid][7], 0);
			PlayerTextDrawSetOutline(playerid, casino_slotTD[playerid][7], 0);
			PlayerTextDrawFont(playerid, casino_slotTD[playerid][7], 4);

			casino_slotTD[playerid][8] = CreatePlayerTextDraw(playerid, 216.988296, 352.750091, "LD_SPAC:white");
			PlayerTextDrawLetterSize(playerid, casino_slotTD[playerid][8], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid, casino_slotTD[playerid][8], 207.554901, 6.416666);
			PlayerTextDrawAlignment(playerid, casino_slotTD[playerid][8], 1);
			PlayerTextDrawColor(playerid, casino_slotTD[playerid][8], 956372479);
			PlayerTextDrawSetShadow(playerid, casino_slotTD[playerid][8], 0);
			PlayerTextDrawSetOutline(playerid, casino_slotTD[playerid][8], 0);
			PlayerTextDrawFont(playerid, casino_slotTD[playerid][8], 4);

			casino_slotTD[playerid][9] = CreatePlayerTextDraw(playerid, 426.948760, 166.583343, "usebox");
			PlayerTextDrawLetterSize(playerid, casino_slotTD[playerid][9], 0.000000, 20.877775);
			PlayerTextDrawTextSize(playerid, casino_slotTD[playerid][9], 215.393859, 0.000000);
			PlayerTextDrawAlignment(playerid, casino_slotTD[playerid][9], 1);
			PlayerTextDrawColor(playerid, casino_slotTD[playerid][9], 956372479);
			PlayerTextDrawUseBox(playerid, casino_slotTD[playerid][9], true);
			PlayerTextDrawBoxColor(playerid, casino_slotTD[playerid][9], 956372309);
			PlayerTextDrawSetShadow(playerid, casino_slotTD[playerid][9], 0);
			PlayerTextDrawSetOutline(playerid, casino_slotTD[playerid][9], 0);
			PlayerTextDrawFont(playerid, casino_slotTD[playerid][9], 0);

			casino_slotTD[playerid][10] = CreatePlayerTextDraw(playerid, 241.756958, 256.083312, "LD_SPAC:white");
			PlayerTextDrawLetterSize(playerid, casino_slotTD[playerid][10], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid, casino_slotTD[playerid][10], 160.702789, 47.833347);
			PlayerTextDrawAlignment(playerid, casino_slotTD[playerid][10], 1);
			PlayerTextDrawColor(playerid, casino_slotTD[playerid][10], -1);
			PlayerTextDrawSetShadow(playerid, casino_slotTD[playerid][10], 0);
			PlayerTextDrawSetOutline(playerid, casino_slotTD[playerid][10], 0);
			PlayerTextDrawFont(playerid, casino_slotTD[playerid][10], 4);

			casino_slotTD[playerid][11] = CreatePlayerTextDraw(playerid, 241.945907, 257.333190, "LD_SLOT:bar2_o");
			PlayerTextDrawLetterSize(playerid, casino_slotTD[playerid][11], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid, casino_slotTD[playerid][11], 51.537338, 61.833309);
			PlayerTextDrawAlignment(playerid, casino_slotTD[playerid][11], 1);
			PlayerTextDrawColor(playerid, casino_slotTD[playerid][11], -1);
			PlayerTextDrawSetShadow(playerid, casino_slotTD[playerid][11], 0);
			PlayerTextDrawSetOutline(playerid, casino_slotTD[playerid][11], 0);
			PlayerTextDrawFont(playerid, casino_slotTD[playerid][11], 4);

			casino_slotTD[playerid][12] = CreatePlayerTextDraw(playerid, 296.231475, 257.500000, "LD_SLOT:bar2_o");
			PlayerTextDrawLetterSize(playerid, casino_slotTD[playerid][12], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid, casino_slotTD[playerid][12], 51.537338, 61.833309);
			PlayerTextDrawAlignment(playerid, casino_slotTD[playerid][12], 1);
			PlayerTextDrawColor(playerid, casino_slotTD[playerid][12], -1);
			PlayerTextDrawSetShadow(playerid, casino_slotTD[playerid][12], 0);
			PlayerTextDrawSetOutline(playerid, casino_slotTD[playerid][12], 0);
			PlayerTextDrawFont(playerid, casino_slotTD[playerid][12], 4);

			casino_slotTD[playerid][13] = CreatePlayerTextDraw(playerid, 350.048492, 257.666656, "LD_SLOT:bar2_o");
			PlayerTextDrawLetterSize(playerid, casino_slotTD[playerid][13], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid, casino_slotTD[playerid][13], 51.537338, 61.833309);
			PlayerTextDrawAlignment(playerid, casino_slotTD[playerid][13], 1);
			PlayerTextDrawColor(playerid, casino_slotTD[playerid][13], -1);
			PlayerTextDrawSetShadow(playerid, casino_slotTD[playerid][13], 0);
			PlayerTextDrawSetOutline(playerid, casino_slotTD[playerid][13], 0);
			PlayerTextDrawFont(playerid, casino_slotTD[playerid][13], 4);

			casino_slotTD[playerid][14] = CreatePlayerTextDraw(playerid, 324.685211, 167.416687, "SLOT MACHINE");
			PlayerTextDrawLetterSize(playerid, casino_slotTD[playerid][14], 0.507627, 2.883332);
			PlayerTextDrawAlignment(playerid, casino_slotTD[playerid][14], 2);
			PlayerTextDrawColor(playerid, casino_slotTD[playerid][14], -1);
			PlayerTextDrawSetShadow(playerid, casino_slotTD[playerid][14], 1);
			PlayerTextDrawSetOutline(playerid, casino_slotTD[playerid][14], 0);
			PlayerTextDrawBackgroundColor(playerid, casino_slotTD[playerid][14], 1145324799);
			PlayerTextDrawFont(playerid, casino_slotTD[playerid][14], 2);
			PlayerTextDrawSetProportional(playerid, casino_slotTD[playerid][14], 1);

			casino_slotTD[playerid][15] = CreatePlayerTextDraw(playerid, 216.925338, 165.666656, "LD_SPAC:white");
			PlayerTextDrawLetterSize(playerid, casino_slotTD[playerid][15], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid, casino_slotTD[playerid][15], 208.023422, 0.583343);
			PlayerTextDrawAlignment(playerid, casino_slotTD[playerid][15], 1);
			PlayerTextDrawColor(playerid, casino_slotTD[playerid][15], -1);
			PlayerTextDrawSetShadow(playerid, casino_slotTD[playerid][15], 0);
			PlayerTextDrawSetOutline(playerid, casino_slotTD[playerid][15], 0);
			PlayerTextDrawFont(playerid, casino_slotTD[playerid][15], 4);

			casino_slotTD[playerid][16] = CreatePlayerTextDraw(playerid, 216.519775, 351.000091, "LD_SPAC:white");
			PlayerTextDrawLetterSize(playerid, casino_slotTD[playerid][16], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid, casino_slotTD[playerid][16], 208.023422, 0.583343);
			PlayerTextDrawAlignment(playerid, casino_slotTD[playerid][16], 1);
			PlayerTextDrawColor(playerid, casino_slotTD[playerid][16], -1);
			PlayerTextDrawSetShadow(playerid, casino_slotTD[playerid][16], 0);
			PlayerTextDrawSetOutline(playerid, casino_slotTD[playerid][16], 0);
			PlayerTextDrawFont(playerid, casino_slotTD[playerid][16], 4);

			casino_slotTD[playerid][17] = CreatePlayerTextDraw(playerid, 320.999938, 199.333343, "BET: ~g~~h~1000$");
			PlayerTextDrawLetterSize(playerid, casino_slotTD[playerid][17], 0.449999, 2.008332);
			PlayerTextDrawAlignment(playerid, casino_slotTD[playerid][17], 2);
			PlayerTextDrawColor(playerid, casino_slotTD[playerid][17], -1);
			PlayerTextDrawSetShadow(playerid, casino_slotTD[playerid][17], 0);
			PlayerTextDrawSetOutline(playerid, casino_slotTD[playerid][17], 0);
			PlayerTextDrawBackgroundColor(playerid, casino_slotTD[playerid][17], 1145324799);
			PlayerTextDrawFont(playerid, casino_slotTD[playerid][17], 3);
			PlayerTextDrawSetProportional(playerid, casino_slotTD[playerid][17], 1);

			casino_slotTD[playerid][18] = CreatePlayerTextDraw(playerid, 289.077484, 215.250030, "ld_beat:chit");
			PlayerTextDrawLetterSize(playerid, casino_slotTD[playerid][18], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid, casino_slotTD[playerid][18], 33.733535, 40.833320);
			PlayerTextDrawAlignment(playerid, casino_slotTD[playerid][18], 1);
			PlayerTextDrawColor(playerid, casino_slotTD[playerid][18], -1);
			PlayerTextDrawSetShadow(playerid, casino_slotTD[playerid][18], 0);
			PlayerTextDrawSetOutline(playerid, casino_slotTD[playerid][18], 0);
			PlayerTextDrawFont(playerid, casino_slotTD[playerid][18], 4);

			casino_slotTD[playerid][19] = CreatePlayerTextDraw(playerid, 321.000091, 215.083374, "ld_beat:chit");
			PlayerTextDrawLetterSize(playerid, casino_slotTD[playerid][19], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid, casino_slotTD[playerid][19], 33.733535, 40.833320);
			PlayerTextDrawAlignment(playerid, casino_slotTD[playerid][19], 1);
			PlayerTextDrawColor(playerid, casino_slotTD[playerid][19], -1);
			PlayerTextDrawSetShadow(playerid, casino_slotTD[playerid][19], 0);
			PlayerTextDrawSetOutline(playerid, casino_slotTD[playerid][19], 0);
			PlayerTextDrawFont(playerid, casino_slotTD[playerid][19], 4);

			casino_slotTD[playerid][20] = CreatePlayerTextDraw(playerid, 295.636474, 224.000030, "-");
			PlayerTextDrawLetterSize(playerid, casino_slotTD[playerid][20], 1.699542, 2.352494);
			PlayerTextDrawTextSize(playerid, casino_slotTD[playerid][20], 316.252075, 21.583335);
			PlayerTextDrawAlignment(playerid, casino_slotTD[playerid][20], 1);
			PlayerTextDrawColor(playerid, casino_slotTD[playerid][20], -1);
			PlayerTextDrawUseBox(playerid, casino_slotTD[playerid][20], true);
			PlayerTextDrawBoxColor(playerid, casino_slotTD[playerid][20], 0);
			PlayerTextDrawSetShadow(playerid, casino_slotTD[playerid][20], 0);
			PlayerTextDrawSetOutline(playerid, casino_slotTD[playerid][20], 1);
			PlayerTextDrawBackgroundColor(playerid, casino_slotTD[playerid][20], 255);
			PlayerTextDrawFont(playerid, casino_slotTD[playerid][20], 2);
			PlayerTextDrawSetProportional(playerid, casino_slotTD[playerid][20], 1);
			PlayerTextDrawSetSelectable(playerid, casino_slotTD[playerid][20], true);

			casino_slotTD[playerid][21] = CreatePlayerTextDraw(playerid, 328.496002, 220.333297, "+");
			PlayerTextDrawLetterSize(playerid, casino_slotTD[playerid][21], 0.687538, 3.204164);
			PlayerTextDrawTextSize(playerid, casino_slotTD[playerid][21], 346.706024, 22.166666);
			PlayerTextDrawAlignment(playerid, casino_slotTD[playerid][21], 1);
			PlayerTextDrawColor(playerid, casino_slotTD[playerid][21], -1);
			PlayerTextDrawUseBox(playerid, casino_slotTD[playerid][21], true);
			PlayerTextDrawBoxColor(playerid, casino_slotTD[playerid][21], 0);
			PlayerTextDrawSetShadow(playerid, casino_slotTD[playerid][21], 0);
			PlayerTextDrawSetOutline(playerid, casino_slotTD[playerid][21], 1);
			PlayerTextDrawBackgroundColor(playerid, casino_slotTD[playerid][21], 255);
			PlayerTextDrawFont(playerid, casino_slotTD[playerid][21], 2);
			PlayerTextDrawSetProportional(playerid, casino_slotTD[playerid][21], 1);
			PlayerTextDrawSetSelectable(playerid, casino_slotTD[playerid][21], true);

			casino_slotTD[playerid][22] = CreatePlayerTextDraw(playerid, 294.699859, 319.083312, "LD_SPAC:white");
			PlayerTextDrawLetterSize(playerid, casino_slotTD[playerid][22], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid, casino_slotTD[playerid][22], 55.285491, 24.500000);
			PlayerTextDrawAlignment(playerid, casino_slotTD[playerid][22], 1);
			PlayerTextDrawColor(playerid, casino_slotTD[playerid][22], -1);
			PlayerTextDrawSetShadow(playerid, casino_slotTD[playerid][22], 0);
			PlayerTextDrawSetOutline(playerid, casino_slotTD[playerid][22], 0);
			PlayerTextDrawFont(playerid, casino_slotTD[playerid][22], 4);

			casino_slotTD[playerid][23] = CreatePlayerTextDraw(playerid, 294.749786, 319.166595, "LD_SPAC:white");
			PlayerTextDrawLetterSize(playerid, casino_slotTD[playerid][23], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid, casino_slotTD[playerid][23], 54.348449, 23.333332);
			PlayerTextDrawAlignment(playerid, casino_slotTD[playerid][23], 1);
			PlayerTextDrawColor(playerid, casino_slotTD[playerid][23], 956372479);
			PlayerTextDrawSetShadow(playerid, casino_slotTD[playerid][23], 0);
			PlayerTextDrawSetOutline(playerid, casino_slotTD[playerid][23], 0);
			PlayerTextDrawFont(playerid, casino_slotTD[playerid][23], 4);

			casino_slotTD[playerid][24] = CreatePlayerTextDraw(playerid, 294.699523, 326.083251, "LD_SPAC:white");
			PlayerTextDrawLetterSize(playerid, casino_slotTD[playerid][24], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid, casino_slotTD[playerid][24], 55.285507, 10.499979);
			PlayerTextDrawAlignment(playerid, casino_slotTD[playerid][24], 1);
			PlayerTextDrawColor(playerid, casino_slotTD[playerid][24], 956372479);
			PlayerTextDrawSetShadow(playerid, casino_slotTD[playerid][24], 0);
			PlayerTextDrawSetOutline(playerid, casino_slotTD[playerid][24], 0);
			PlayerTextDrawFont(playerid, casino_slotTD[playerid][24], 4);

			casino_slotTD[playerid][25] = CreatePlayerTextDraw(playerid, 295.500000, 323.166656, "  PLAY");
			PlayerTextDrawLetterSize(playerid, casino_slotTD[playerid][25], 0.387216, 1.740000);
			PlayerTextDrawTextSize(playerid, casino_slotTD[playerid][25], 347.642791, 17.500000);
			PlayerTextDrawAlignment(playerid, casino_slotTD[playerid][25], 1);
			PlayerTextDrawColor(playerid, casino_slotTD[playerid][25], -1);
			PlayerTextDrawUseBox(playerid, casino_slotTD[playerid][25], true);
			PlayerTextDrawBoxColor(playerid, casino_slotTD[playerid][25], 0);
			PlayerTextDrawSetShadow(playerid, casino_slotTD[playerid][25], 0);
			PlayerTextDrawSetOutline(playerid, casino_slotTD[playerid][25], 0);
			PlayerTextDrawBackgroundColor(playerid, casino_slotTD[playerid][25], 51);
			PlayerTextDrawFont(playerid, casino_slotTD[playerid][25], 1);
			PlayerTextDrawSetProportional(playerid, casino_slotTD[playerid][25], 1);
			PlayerTextDrawSetSelectable(playerid, casino_slotTD[playerid][25], true);

			casino_slotTD[playerid][26] = CreatePlayerTextDraw(playerid, 419.326599, 352.333282, "PRESS ESC TO CLOSE THE WINDOW");
			PlayerTextDrawLetterSize(playerid, casino_slotTD[playerid][26], 0.200745, 0.882498);
			PlayerTextDrawAlignment(playerid, casino_slotTD[playerid][26], 3);
			PlayerTextDrawColor(playerid, casino_slotTD[playerid][26], -187);
			PlayerTextDrawSetShadow(playerid, casino_slotTD[playerid][26], 0);
			PlayerTextDrawSetOutline(playerid, casino_slotTD[playerid][26], 0);
			PlayerTextDrawBackgroundColor(playerid, casino_slotTD[playerid][26], 51);
			PlayerTextDrawFont(playerid, casino_slotTD[playerid][26], 1);
			PlayerTextDrawSetProportional(playerid, casino_slotTD[playerid][26], 1);

			slotbet[playerid]=1000;
			slots_amount[playerid]=0;

			for(new i=0; i<27; i++) PlayerTextDrawShow(playerid, casino_slotTD[playerid][i]);
			SelectTextDraw(playerid, 0x3399FFAA);
			in_slot[playerid]=true;
		}

		if(IsPlayerInRangeOfPoint(playerid, 3.0, 1967.7700000,1013.9989600,992.4539800)) {
			SetPVarInt(playerid, "table_id", 1);
			create_table_TD(playerid);
			for(new i=0; i<19; i++) PlayerTextDrawShow(playerid, table_TD[playerid][i]);
			SelectTextDraw(playerid, COLOR_WHITE);
			update_table_info(playerid);
		}
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 1967.7700000,1006.3984400,992.4539800)) {
			SetPVarInt(playerid, "table_id", 2);
			create_table_TD(playerid);
			for(new i=0; i<19; i++) PlayerTextDrawShow(playerid, table_TD[playerid][i]);
			SelectTextDraw(playerid, COLOR_WHITE);
			update_table_info(playerid);
		}
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 1967.7700000,1021.6980600,992.4539800)) {
			SetPVarInt(playerid, "table_id", 3);
			create_table_TD(playerid);
			for(new i=0; i<19; i++) PlayerTextDrawShow(playerid, table_TD[playerid][i]);
			SelectTextDraw(playerid, COLOR_WHITE);
			update_table_info(playerid);
		}
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 1967.7700000,1029.5972900,992.4539800)) {
			SetPVarInt(playerid, "table_id", 4);
			create_table_TD(playerid);
			for(new i=0; i<19; i++) PlayerTextDrawShow(playerid, table_TD[playerid][i]);
			SelectTextDraw(playerid, COLOR_WHITE);
			update_table_info(playerid);
		}
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 1960.7700000,1013.9980500,992.4539800)) {
			SetPVarInt(playerid, "table_id", 5);
			create_table_TD(playerid);
			for(new i=0; i<19; i++) PlayerTextDrawShow(playerid, table_TD[playerid][i]);
			SelectTextDraw(playerid, COLOR_WHITE);
			update_table_info(playerid);
		}
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 1960.7700000,1006.3984400,992.4539800)) {
			SetPVarInt(playerid, "table_id", 6);
			create_table_TD(playerid);
			for(new i=0; i<19; i++) PlayerTextDrawShow(playerid, table_TD[playerid][i]);
			SelectTextDraw(playerid, COLOR_WHITE);
			update_table_info(playerid);
		}
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 1960.7700000,1021.6972700,992.4539800)) {
			SetPVarInt(playerid, "table_id", 7);
			create_table_TD(playerid);
			for(new i=0; i<19; i++) PlayerTextDrawShow(playerid, table_TD[playerid][i]);
			SelectTextDraw(playerid, COLOR_WHITE);
			update_table_info(playerid);
		}
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 1960.7700000,1029.5966800,992.4539800)) {
			SetPVarInt(playerid, "table_id", 8);
			create_table_TD(playerid);
			for(new i=0; i<19; i++) PlayerTextDrawShow(playerid, table_TD[playerid][i]);
			SelectTextDraw(playerid, COLOR_WHITE);
			update_table_info(playerid);
		}

		GangMenu(playerid);

		if(IsPlayerInRangeOfPoint(playerid, 3.0, -888.299988, 959.020020, 1133.500000)) {
			if(pData[playerid][pMember] != 11) 
				return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Æ√≤√™√∞√ª√¢√†√≤√º √®√´√® √ß√†√™√∞√ª√¢√†√≤√º √Ω√≤√≥ √§√¢√•√∞√º");
			if(GetPVarInt(playerid, "door_ash_delay") > gettime()) return 1;
			if(!ashint_door_status) {
				MoveDynamicObject(ashint_door,-888.299988, 959.020020, 1133.500000+0.04,0.04, 0.000000, 0.000000, 90.0);
				ashint_door_status = true;
			}
			else {
				MoveDynamicObject(ashint_door,-888.299988, 959.020020, 1133.500000-0.04,0.04, 0.000000, 0.000000, 0.0);
				ashint_door_status = false;
			}
			PlayerPlaySound(playerid, 4603, 0.0, 0.0, 0.0);
			SetPVarInt(playerid, "door_ash_delay", gettime() + 1);
		}
		if(GetPlayerVirtualWorld(playerid) == 0) {
			if(IsPlayerInRangeOfPoint(playerid, 3.0, 1383.408447, -13.055547, 1001.170044)) {
				if(pData[playerid][pMember] != 26) 
					return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Æ√≤√™√∞√ª√¢√†√≤√º √®√´√® √ß√†√™√∞√ª√¢√†√≤√º √Ω√≤√≥ √§√¢√•√∞√º");
				if(GetPVarInt(playerid, "door_ap_delay") > gettime()) return 1;
				if(!apdoor_status[0]) {
					MoveDynamicObject(apdoor_obj[0],1383.408447, -13.055547, 1001.170044+0.04,0.04, 0.000000, 0.000000, 0.0);
					apdoor_status[0] = true;
				}
				else {
					MoveDynamicObject(apdoor_obj[0],1383.408447, -13.055547, 1001.170044-0.04,0.04, 0.000000, 0.000000, -90.0);
					apdoor_status[0] = false;
				}
				PlayerPlaySound(playerid, 4603, 0.0, 0.0, 0.0);
				SetPVarInt(playerid, "door_ap_delay", gettime() + 1);
			}
			if(IsPlayerInRangeOfPoint(playerid, 3.0, 1388.908936, -4.075551, 1001.170044)) {
				if(pData[playerid][pMember] != 26) 
					return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Æ√≤√™√∞√ª√¢√†√≤√º √®√´√® √ß√†√™√∞√ª√¢√†√≤√º √Ω√≤√≥ √§√¢√•√∞√º");
				if(GetPVarInt(playerid, "door_ap_delay") > gettime()) return 1;
				if(!apdoor_status[1]) {
					MoveDynamicObject(apdoor_obj[1],1388.908936, -4.075551, 1001.170044+0.04,0.04, 0.000000, 0.000000, 270.0);
					apdoor_status[1] = true;
				}
				else {
					MoveDynamicObject(apdoor_obj[1],1388.908936, -4.075551, 1001.170044-0.04,0.04, 0.000000, 0.000000, 0.0);
					apdoor_status[1] = false;
				}
				PlayerPlaySound(playerid, 4603, 0.0, 0.0, 0.0);
				SetPVarInt(playerid, "door_ap_delay", gettime() + 1);
			}
			if(IsPlayerInRangeOfPoint(playerid, 3.0, 1389.499512, -18.326773, 1001.170044)) {
				if(pData[playerid][pMember] != 26) 
					return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Æ√≤√™√∞√ª√¢√†√≤√º √®√´√® √ß√†√™√∞√ª√¢√†√≤√º √Ω√≤√≥ √§√¢√•√∞√º");
				if(GetPVarInt(playerid, "door_ap_delay") > gettime()) return 1;
				if(!apdoor_status[2]) {
					MoveDynamicObject(apdoor_obj[2],1389.499512, -18.326773, 1001.170044+0.04,0.04,-0.000007, 0.000007, 270.0);
					apdoor_status[2] = true;
				}
				else {
					MoveDynamicObject(apdoor_obj[2],1389.499512, -18.326773, 1001.170044-0.04,0.04,-0.000007, 0.000007, 180.0);
					apdoor_status[2] = false;
				}
				PlayerPlaySound(playerid, 4603, 0.0, 0.0, 0.0);
				SetPVarInt(playerid, "door_ap_delay", gettime() + 1);
			}
			if(IsPlayerInRangeOfPoint(playerid, 3.0, 1384.836548, -31.350679, 1001.170044)) {
				if(pData[playerid][pMember] != 26) 
					return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Æ√≤√™√∞√ª√¢√†√≤√º √®√´√® √ß√†√™√∞√ª√¢√†√≤√º √Ω√≤√≥ √§√¢√•√∞√º");
				if(GetPVarInt(playerid, "door_ap_delay") > gettime()) return 1;
				if(!apdoor_status[3]) {
					MoveDynamicObject(apdoor_obj[3],1384.836548, -31.350679, 1001.170044+0.04,0.04,-0.000014, -0.000007, 180.0);
					apdoor_status[3] = true;
				}
				else {
					MoveDynamicObject(apdoor_obj[3],1384.836548, -31.350679, 1001.170044-0.04,0.04,-0.000014, -0.000007, -270.0);
					apdoor_status[3] = false;
				}
				PlayerPlaySound(playerid, 4603, 0.0, 0.0, 0.0);
				SetPVarInt(playerid, "door_ap_delay", gettime() + 1);
			}
			if(IsPlayerInRangeOfPoint(playerid, 3.0, 1382.606323, -39.464573, 999.929932)) {
				if(pData[playerid][pMember] != 26) 
					return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Æ√≤√™√∞√ª√¢√†√≤√º √®√´√® √ß√†√™√∞√ª√¢√†√≤√º √Ω√≤√≥ √§√¢√•√∞√º");
				if(GetPVarInt(playerid, "door_ap_delay") > gettime()) return 1;
				if(!apdoor_status[4]) {
					MoveDynamicObject(apdoor_obj[4],1382.606323, -39.464573, 999.929932+0.04,0.04,0.000000, 0.000000, -90.0);
					apdoor_status[4] = true;
				}
				else {
					MoveDynamicObject(apdoor_obj[4],1382.606323, -39.464573, 999.929932-0.04,0.04,0.000000, 0.000000, 0.0);
					apdoor_status[4] = false;
				}
				PlayerPlaySound(playerid, 4603, 0.0, 0.0, 0.0);
				SetPVarInt(playerid, "door_ap_delay", gettime() + 1);
			}
			if(IsPlayerInRangeOfPoint(playerid, 3.0, 1382.606323, -42.724548, 999.929932)) {
				if(pData[playerid][pMember] != 26) 
					return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Æ√≤√™√∞√ª√¢√†√≤√º √®√´√® √ß√†√™√∞√ª√¢√†√≤√º √Ω√≤√≥ √§√¢√•√∞√º");
				if(GetPVarInt(playerid, "door_ap_delay") > gettime()) return 1;
				if(!apdoor_status[5]) {
					MoveDynamicObject(apdoor_obj[5],1382.606323, -42.724548, 999.929932+0.04,0.04,0.000000, 0.000000, 90.0);
					apdoor_status[5] = true;
				}
				else {
					MoveDynamicObject(apdoor_obj[5],1382.606323, -42.724548, 999.929932-0.04,0.04,0.000000, 0.000000, 0.0);
					apdoor_status[5] = false;
				}
				PlayerPlaySound(playerid, 4603, 0.0, 0.0, 0.0);
				SetPVarInt(playerid, "door_ap_delay", gettime() + 1);
			}
			if(IsPlayerInRangeOfPoint(playerid, 3.0, 1388.810791, -42.685894, 999.929932)) {
				if(pData[playerid][pMember] != 26) 
					return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Æ√≤√™√∞√ª√¢√†√≤√º √®√´√® √ß√†√™√∞√ª√¢√†√≤√º √Ω√≤√≥ √§√¢√•√∞√º");
				if(GetPVarInt(playerid, "door_ap_delay") > gettime()) return 1;
				if(!apdoor_status[6]) {
					MoveDynamicObject(apdoor_obj[6],1388.810791, -42.685894, 999.929932+0.04,0.04,0.000000, 0.000000, 90.0);
					apdoor_status[6] = true;
				}
				else {
					MoveDynamicObject(apdoor_obj[6],1388.810791, -42.685894, 999.929932-0.04,0.04,0.000000, 0.000000, 180.0);
					apdoor_status[6] = false;
				}
				PlayerPlaySound(playerid, 4603, 0.0, 0.0, 0.0);
				SetPVarInt(playerid, "door_ap_delay", gettime() + 1);
			}
			if(IsPlayerInRangeOfPoint(playerid, 3.0, 1388.810791, -39.415939, 999.929932)) {
				if(pData[playerid][pMember] != 26) 
					return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Æ√≤√™√∞√ª√¢√†√≤√º √®√´√® √ß√†√™√∞√ª√¢√†√≤√º √Ω√≤√≥ √§√¢√•√∞√º");
				if(GetPVarInt(playerid, "door_ap_delay") > gettime()) return 1;
				if(!apdoor_status[7]) {
					MoveDynamicObject(apdoor_obj[7],1388.810791, -39.415939, 999.929932+0.04,0.04,0.000000, 0.000000, -90.0);
					apdoor_status[7] = true;
				}
				else {
					MoveDynamicObject(apdoor_obj[7],1388.810791, -39.415939, 999.929932-0.04,0.04,0.000000, 0.000000, 180.0);
					apdoor_status[7] = false;
				}
				PlayerPlaySound(playerid, 4603, 0.0, 0.0, 0.0);
				SetPVarInt(playerid, "door_ap_delay", gettime() + 1);
			}
		}
	}
	else if(newkeys & KEY_CROUCH) {
		if(player_gameveh[playerid] != INVALID_VEHICLE_ID) {
			DestroyVehicle(player_gameveh[playerid]);
			player_gameveh[playerid] = INVALID_VEHICLE_ID;
			return SCM(playerid, COLOR_MAIN, "√Ç√ª √¢√•√∞√≠√≥√´√®√±√º √¢ √Æ√°√ª√∑√≠√ª√© √∞√•√¶√®√¨ √®√£√∞√ª");
		}
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
			if(IsPlayerInRangeOfPoint(playerid, 10, 66.995003, -1537.519043, 4.724000)) {
				if(GetPVarInt(playerid, "gate_delay_1") > gettime()) return 1;
				SCM(playerid, 0x00CC33FF, "√ò√´√†√£√°√†√≥√¨ √ß√†√™√∞√Æ√•√≤√±√ø √∑√•√∞√•√ß "CYELLOW"10 √±√•√™√≥√≠√§");

				if(pData[playerid][pCash] < 15) {
					pData[playerid][pWanted] ++;
					if(pData[playerid][pWanted] > 6) pData[playerid][pWanted] = 6;
					SetPlayerWantedLevel(playerid, pData[playerid][pWanted]);
					UpdatePlayerData(playerid, "pWanted", pData[playerid][pWanted]);
					format(string, 128, "[√Ç√±√•√¨ √Ø√Æ√±√≤√†√¨] %s √Æ√°√∫√ø√¢√´√•√≠ √¢ √∞√Æ√ß√ª√±√™ √ß√† √≠√•√≥√Ø√´√†√≤√≥ √Ø√∞√Æ√•√ßS√≠ √∑√•√∞√•√ß √≤√†√¨√Æ√¶√≠√æ √ã√ë - √ë√î", GetName(playerid));
					SFFM(1, COLOR_LITEBLUE, string); SFFM(2, COLOR_LITEBLUE, string); SFFM(21, COLOR_LITEBLUE, string); SFFM(22, COLOR_LITEBLUE, string); SFFM(10, COLOR_LITEBLUE, string);
					SCM(playerid,COLOR_ERROR,"√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Æ√Ø√´√†√≤√ª √Ø√∞√Æ√•√ßS√≠ (15$)");
					SCM(playerid,COLOR_ERROR,"√Ç√†√∏ √≥√∞√Æ√¢√•√≠√º √∞√Æ√ß√ª√±√™√† √≥√¢√•√´√®√∑√•√≠");
				}
				else {
					Hook_GivePlayerMoney(playerid,-15);
					GameTextForPlayer(playerid, "~r~-15$", 3000, 1);
				}
				
				MoveDynamicObject(bpost[0], 66.995003, -1537.519043, 4.724000 + 0.004000, 0.004000, 0.000000, 0.000000, 90.000000);
				KillTimer(gatebar_timer_1);
				gatebar_timer_1 = SetTimer("closegatebar_1", 10000, 0);
    			SetPVarInt(playerid, "gate_delay_1", gettime() + 5);
			}
			else if(IsPlayerInRangeOfPoint(playerid, 10, 35.976002, -1525.197998, 4.834000)) {
				if(GetPVarInt(playerid, "gate_delay_2") > gettime()) return 1;
				SCM(playerid, 0x00CC33FF, "√ò√´√†√£√°√†√≥√¨ √ß√†√™√∞√Æ√•√≤√±√ø √∑√•√∞√•√ß "CYELLOW"10 √±√•√™√≥√≠√§");

				if(pData[playerid][pCash] < 15) {
					pData[playerid][pWanted] ++;
					if(pData[playerid][pWanted] > 6) pData[playerid][pWanted] = 6;
					SetPlayerWantedLevel(playerid, pData[playerid][pWanted]);
					UpdatePlayerData(playerid, "pWanted", pData[playerid][pWanted]);
					format(string, 128, "[√Ç√±√•√¨ √Ø√Æ√±√≤√†√¨] %s √Æ√°√∫√ø√¢√´√•√≠ √¢ √∞√Æ√ß√ª√±√™ √ß√† √≠√•√≥√Ø√´√†√≤√≥ √Ø√∞√Æ√•√ßS√≠ √∑√•√∞√•√ß √≤√†√¨√Æ√¶√≠√æ √ã√ë - √ë√î", GetName(playerid));
					SFFM(1, COLOR_LITEBLUE, string); SFFM(2, COLOR_LITEBLUE, string); SFFM(21, COLOR_LITEBLUE, string); SFFM(22, COLOR_LITEBLUE, string); SFFM(10, COLOR_LITEBLUE, string);
					SCM(playerid,COLOR_ERROR,"√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Æ√Ø√´√†√≤√ª √Ø√∞√Æ√•√ßS√≠ (15$)");
					SCM(playerid,COLOR_ERROR,"√Ç√†√∏ √≥√∞√Æ√¢√•√≠√º √∞√Æ√ß√ª√±√™√† √≥√¢√•√´√®√∑√•√≠");
				}
				else {
					Hook_GivePlayerMoney(playerid,-15);
					GameTextForPlayer(playerid, "~r~-15$", 3000, 1);
				}

				MoveDynamicObject(bpost[1], 35.976002, -1525.197998, 4.834000 + 0.004000, 0.004000, 0.000000, 0.000000, 270.000000);
				KillTimer(gatebar_timer_2);
				gatebar_timer_2 = SetTimer("closegatebar_2", 10000, 0);
    			SetPVarInt(playerid, "gate_delay_2", gettime() + 5);
			}
			if(IsPlayerInRangeOfPoint(playerid, 3.5, 1253.2070,-1244.9210,13.6460)) {
				if(GetPVarInt(playerid, "repdelay") > gettime()) return 1;
				new Float: health;
				GetVehicleHealth(GetPlayerVehicleID(playerid), health);
				if(health > 990.0) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√†√∏ √≤√∞√†√≠√±√Ø√Æ√∞√≤ √≠√• √≠√≥√¶SNo√±√ø √¢ √∞√•√¨√Æ√≠√≤√•");
				if(pData[playerid][pCash] < 500) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √§√•√≠√•√£ √§√´√ø √∞√•√¨√Æ√≠√≤√† √≤√∞√†√≠√±√Ø√Æ√∞√≤√†");
				TogglePlayerControllable(playerid, 0);
				GameTextForPlayer(playerid, "~y~REPAIRING...", 3000, 3);
				SetTimerEx("repairing_car", 3000, 0, "i", playerid);
				SetPVarInt(playerid, "repdelay", gettime() + 4);
			}
		}
	}
	else if(newkeys & KEY_ANALOG_RIGHT) {
		if(pData[playerid][pHouse] != -1) {
			new veh_id = GetPlayerVehicleID(playerid);
			if(veh_id == house_carid[playerid][0] || veh_id == house_carid[playerid][1] || veh_id == house_carid[playerid][2]) {
				if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
					if(alarm_vehicle[veh_id] == 60605) {
				    	alarm_vehicle[veh_id] = playerid;
				    	SetPVarInt(playerid, "SIGNAL", veh_id);
				    	PlayerPlaySound(playerid, 21000, 0.0, 0.0, 0.0);
				    }
				    else {
				    	alarm_vehicle[veh_id] = 60605;
				    	SetPVarInt(playerid, "SIGNAL", 60605);
				    	PlayerPlaySound(playerid, 21000, 0.0, 0.0, 0.0);
				    	new engine, lights, alarm, doors, bonnet, boot, objective;
				    	GetVehicleParamsEx(veh_id, engine, lights, alarm, doors, bonnet, boot, objective);
					    SetVehicleParamsEx(veh_id, engine, lights, VEHICLE_PARAMS_OFF, doors, bonnet, boot, objective);
				    }
				}
			}
		}
		return 1;
	}
	else if(newkeys & KEY_CTRL_BACK)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, -1569.020264, -1187.796143, 1301.193237)) {
			if(!IsACop(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Æ√≤√™√∞√ª√≤√º √Ω√≤√≥ √§√¢√•√∞√º");
			if(GetPVarInt(playerid, "door_PD_delay") > gettime()) return 1;
			switch(GetPlayerVirtualWorld(playerid)) {
				case 1: {
					if(!PD_door_status_1ls) {
						MoveDynamicObject(PD_obj_door_1ls,-1569.020264, -1186.456298, 1301.193237,3.3);
						PD_door_status_1ls = true;
					}
					else {
						MoveDynamicObject(PD_obj_door_1ls,-1569.020264, -1187.796143, 1301.193237,3.3);
						PD_door_status_1ls = false;
					}
				}
				case 2: {
					if(!PD_door_status_1sf) {
						MoveDynamicObject(PD_obj_door_1sf,-1569.020264, -1186.456298, 1301.193237,3.3);
						PD_door_status_1sf = true;
					}
					else {
						MoveDynamicObject(PD_obj_door_1sf,-1569.020264, -1187.796143, 1301.193237,3.3);
						PD_door_status_1sf = false;
					}
				}
				case 3: {
					if(!PD_door_status_1lv) {
						MoveDynamicObject(PD_obj_door_1lv,-1569.020264, -1186.456298, 1301.193237,3.3);
						PD_door_status_1lv = true;
					}
					else {
						MoveDynamicObject(PD_obj_door_1lv,-1569.020264, -1187.796143, 1301.193237,3.3);
						PD_door_status_1lv = false;
					}
				}
			}
			PlayerPlaySound(playerid, 4603, 0.0, 0.0, 0.0);
			SetPVarInt(playerid, "door_PD_delay", gettime() + 1);
		}
		if(IsPlayerInRangeOfPoint(playerid, 3.0, -1560.414673, -1212.723145, 1301.190430)) {
			if(!IsACop(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Æ√≤√™√∞√ª√≤√º √Ω√≤√≥ √§√¢√•√∞√º");
			if(GetPVarInt(playerid, "door_PD_delay") > gettime()) return 1;
			switch(GetPlayerVirtualWorld(playerid)) {
				case 1: {
					if(!PD_door_status_2ls) {
						MoveDynamicObject(PD_obj_door_2ls,-1561.924926, -1212.723145, 1301.190430,3.3);
						PD_door_status_2ls = true;
					}
					else {
						MoveDynamicObject(PD_obj_door_2ls,-1560.414673, -1212.723145, 1301.190430,3.3);
						PD_door_status_2ls = false;
					}
				}
				case 2: {
					if(!PD_door_status_2sf) {
						MoveDynamicObject(PD_obj_door_2sf,-1561.924926, -1212.723145, 1301.190430,3.3);
						PD_door_status_2sf = true;
					}
					else {
						MoveDynamicObject(PD_obj_door_2sf,-1560.414673, -1212.723145, 1301.190430,3.3);
						PD_door_status_2sf = false;
					}
				}
				case 3: {
					if(!PD_door_status_2lv) {
						MoveDynamicObject(PD_obj_door_2lv,-1561.924926, -1212.723145, 1301.190430,3.3);
						PD_door_status_2lv = true;
					}
					else {
						MoveDynamicObject(PD_obj_door_2lv,-1560.414673, -1212.723145, 1301.190430,3.3);
						PD_door_status_2lv = false;
					}
				}
			}
			PlayerPlaySound(playerid, 4603, 0.0, 0.0, 0.0);
			SetPVarInt(playerid, "door_PD_delay", gettime() + 1);
		}
		if(IsPlayerInRangeOfPoint(playerid, 3.0, -1548.764160, -1214.359619, 1301.216675)) {
			if(!IsACop(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Æ√≤√™√∞√ª√≤√º √Ω√≤√≥ √§√¢√•√∞√º");
			if(GetPVarInt(playerid, "door_PD_delay") > gettime()) return 1;
			switch(GetPlayerVirtualWorld(playerid)) {
				case 1: {
					if(!PD_door_status_3ls) {
						MoveDynamicObject(PD_obj_door_3ls,-1548.764160, -1215.585599, 1301.216675,3.3);
						PD_door_status_3ls = true;
					}
					else {
						MoveDynamicObject(PD_obj_door_3ls,-1548.764160, -1214.359619, 1301.216675,3.3);
						PD_door_status_3ls = false;
					}
				}
				case 2: {
					if(!PD_door_status_3sf) {
						MoveDynamicObject(PD_obj_door_3sf,-1548.764160, -1215.585599, 1301.216675,3.3);
						PD_door_status_3sf = true;
					}
					else {
						MoveDynamicObject(PD_obj_door_3sf,-1548.764160, -1214.359619, 1301.216675,3.3);
						PD_door_status_3sf = false;
					}
				}
				case 3: {
					if(!PD_door_status_3lv) {
						MoveDynamicObject(PD_obj_door_3lv,-1548.764160, -1215.585599, 1301.216675,3.3);
						PD_door_status_3lv = true;
					}
					else {
						MoveDynamicObject(PD_obj_door_3lv,-1548.764160, -1214.359619, 1301.216675,3.3);
						PD_door_status_3lv = false;
					}
				}
			}
			PlayerPlaySound(playerid, 4603, 0.0, 0.0, 0.0);
			SetPVarInt(playerid, "door_PD_delay", gettime() + 1);
		}
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 2611.238037, 1319.096069, 1047.187988) && GetPlayerVirtualWorld(playerid) == 2) {
			if(!IsAMafia(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Æ√≤√™√∞√ª√≤√º √Ω√≤√≥ √§√¢√•√∞√º");
			if(GetPVarInt(playerid, "door_maf_delay") > gettime()) return 1;
			if(!maf_door_status_1) {
				MoveDynamicObject(maf_obj_door_1,2611.238037, 1319.096069, 1047.187988+0.04,0.04, 0.0000, 0.00000, 180.0);
				maf_door_status_1 = true;
			}
			else {
				MoveDynamicObject(maf_obj_door_1,2611.238037, 1319.096069, 1047.187988-0.04,0.04, 0.0000, 0.00000, -90.0);
				maf_door_status_1 = false;
			}
			PlayerPlaySound(playerid, 4603, 0.0, 0.0, 0.0);
			SetPVarInt(playerid, "door_maf_delay", gettime() + 1);
		}
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 2611.238037, 1319.096069, 1047.187988) && GetPlayerVirtualWorld(playerid) == 3) {
			if(!IsAMafia(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Æ√≤√™√∞√ª√≤√º √Ω√≤√≥ √§√¢√•√∞√º");
			if(GetPVarInt(playerid, "door_maf_delay") > gettime()) return 1;
			if(!maf_door_status_2) {
				MoveDynamicObject(maf_obj_door_2,2611.238037, 1319.096069, 1047.187988+0.04,0.04, 0.0000, 0.00000, 180.0);
				maf_door_status_2 = true;
			}
			else {
				MoveDynamicObject(maf_obj_door_2,2611.238037, 1319.096069, 1047.187988-0.04,0.04, 0.0000, 0.00000, -90.0);
				maf_door_status_2 = false;
			}
			PlayerPlaySound(playerid, 4603, 0.0, 0.0, 0.0);
			SetPVarInt(playerid, "door_maf_delay", gettime() + 1);
		}
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 2611.238037, 1319.096069, 1047.187988) && GetPlayerVirtualWorld(playerid) == 5) {
			if(!IsAMafia(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Æ√≤√™√∞√ª√≤√º √Ω√≤√≥ √§√¢√•√∞√º");
			if(GetPVarInt(playerid, "door_maf_delay") > gettime()) return 1;
			if(!maf_door_status_3) {
				MoveDynamicObject(maf_obj_door_3,2611.238037, 1319.096069, 1047.187988+0.04,0.04, 0.0000, 0.00000, 180.0);
				maf_door_status_3 = true;
			}
			else {
				MoveDynamicObject(maf_obj_door_3,2611.238037, 1319.096069, 1047.187988-0.04,0.04, 0.0000, 0.00000, -90.0);
				maf_door_status_3 = false;
			}
			PlayerPlaySound(playerid, 4603, 0.0, 0.0, 0.0);
			SetPVarInt(playerid, "door_maf_delay", gettime() + 1);
		}
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 1651.349121, -1632.529418, 64.547218)) {
			if(pData[playerid][pMember] != 16) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Æ√≤√™√∞√ª√≤√º √Ω√≤√≥ √§√¢√•√∞√º");
			if(GetPVarInt(playerid, "door_smi_delay") > gettime()) return 1;
			if(!SMI_door_status_1) {
				MoveDynamicObject(SMI_door_1,1651.738891, -1634.775390, 64.022903,3.3);
				SMI_door_status_1 = true;
			}
			else {
				MoveDynamicObject(SMI_door_1,1651.317139, -1633.201050, 64.022903,3.3);
				SMI_door_status_1 = false;
			}
			PlayerPlaySound(playerid, 4603, 0.0, 0.0, 0.0);
			SetPVarInt(playerid, "door_smi_delay", gettime() + 1);
		}
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 1659.682861, -1635.226563, 69.722801)) {
			if(pData[playerid][pMember] != 16) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Æ√≤√™√∞√ª√≤√º √Ω√≤√≥ √§√¢√•√∞√º");
			if(GetPVarInt(playerid, "door_smi_delay") > gettime()) return 1;
			if(!SMI_door_status_2) {
				MoveDynamicObject(SMI_door_2,1659.682861, -1635.226563, 69.722801+0.04,0.04, 0.0000, 0.00000, 169.200027);
				SMI_door_status_2 = true;
			}
			else {
				MoveDynamicObject(SMI_door_2,1659.682861, -1635.226563, 69.722801-0.04,0.04, 0.0000, 0.00000, 90.0);
				SMI_door_status_2 = false;
			}
			PlayerPlaySound(playerid, 4603, 0.0, 0.0, 0.0);
			SetPVarInt(playerid, "door_smi_delay", gettime() + 1);
		}
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 844.650330, -1048.149048, 2108.337891)) {
			if(!IsACop(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Æ√≤√™√∞√ª√≤√º √Ω√≤√≥ √§√¢√•√∞√º");
			if(GetPVarInt(playerid, "door_fbi_delay") > gettime()) return 1;
			if(!fbi_door_status_1) {
				MoveDynamicObject(fbi_door_1,844.650330, -1048.149048, 2108.337891+0.04,0.04, 0.0000, 0.00000, 158.699905);
				fbi_door_status_1 = true;
			}
			else {
				MoveDynamicObject(fbi_door_1,844.650330, -1048.149048, 2108.337891-0.04,0.04, 0.0000, 0.00000, 270.0);
				fbi_door_status_1 = false;
			}
			PlayerPlaySound(playerid, 4603, 0.0, 0.0, 0.0);
			SetPVarInt(playerid, "door_fbi_delay", gettime() + 1);
		}
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 823.649597, -1043.308716, 2107.003662)) {
			if(!IsACop(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Æ√≤√™√∞√ª√≤√º √Ω√≤√≥ √§√¢√•√∞√º");
			if(GetPVarInt(playerid, "door_fbi_delay") > gettime()) return 1;
			if(!fbi_door_status_2) {
				MoveDynamicObject(fbi_door_2,823.649597, -1043.308716, 2107.003662+0.04,0.04, 0.0000, 0.00000, 106.699989);
				fbi_door_status_2 = true;
			}
			else {
				MoveDynamicObject(fbi_door_2,823.649597, -1043.308716, 2107.003662-0.04,0.04, 0.0000, 0.00000, 0.0);
				fbi_door_status_2 = false;
			}
			PlayerPlaySound(playerid, 4603, 0.0, 0.0, 0.0);
			SetPVarInt(playerid, "door_fbi_delay", gettime() + 1);
		}
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 837.039978, -1056.586060, 2100.084229)) {
			if(!IsACop(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Æ√≤√™√∞√ª√≤√º √Ω√≤√≥ √§√¢√•√∞√º");
			if(GetPVarInt(playerid, "door_fbi_delay") > gettime()) return 1;
			if(!fbi_door_status_3) {
				MoveDynamicObject(fbi_door_3,837.039978, -1056.586060, 2100.084229+0.04,0.04, 0.0000, 0.00000, 6.299876);
				fbi_door_status_3 = true;
			}
			else {
				MoveDynamicObject(fbi_door_3,837.039978, -1056.586060, 2100.084229-0.04,0.04, 0.0000, 0.00000, 90.0);
				fbi_door_status_3 = false;
			}
			PlayerPlaySound(playerid, 4603, 0.0, 0.0, 0.0);
			SetPVarInt(playerid, "door_fbi_delay", gettime() + 1);
		}
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 821.531311, -1068.443115, 2107.009033)) {
			if(!IsACop(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Æ√≤√™√∞√ª√≤√º √Ω√≤√≥ √§√¢√•√∞√º");
			if(GetPVarInt(playerid, "door_fbi_delay") > gettime()) return 1;
			if(!fbi_door_status_4) {
				MoveDynamicObject(fbi_door_4,821.531311, -1068.443115, 2107.009033+0.04,0.04, 0.0000, 0.00000, 170.699966);
				fbi_door_status_4 = true;
			}
			else {
				MoveDynamicObject(fbi_door_4,821.531311, -1068.443115, 2107.009033-0.04,0.04, 0.0000, 0.00000, 90.0);
				fbi_door_status_4 = false;
			}
			PlayerPlaySound(playerid, 4603, 0.0, 0.0, 0.0);
			SetPVarInt(playerid, "door_fbi_delay", gettime() + 1);
		}
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 844.650330, -1067.213135, 2108.337891)) {
			if(!IsACop(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Æ√≤√™√∞√ª√≤√º √Ω√≤√≥ √§√¢√•√∞√º");
			if(GetPVarInt(playerid, "door_fbi_delay") > gettime()) return 1;
			if(!fbi_door_status_5) {
				MoveDynamicObject(fbi_door_5,844.650330, -1067.213135, 2108.337891+0.04,0.04, 0.0000, 0.00000, 170.299972);
				fbi_door_status_5 = true;
			}
			else {
				MoveDynamicObject(fbi_door_5,844.650330, -1067.213135, 2108.337891-0.04,0.04, 0.0000, 0.00000, 90.0);
				fbi_door_status_5 = false;
			}
			PlayerPlaySound(playerid, 4603, 0.0, 0.0, 0.0);
			SetPVarInt(playerid, "door_fbi_delay", gettime() + 1);
		}
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 831.701111, -1038.036743, 2107.003662)) {
			if(!IsACop(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Æ√≤√™√∞√ª√≤√º √Ω√≤√≥ √§√¢√•√∞√º");
			if(GetPVarInt(playerid, "door_fbi_delay") > gettime()) return 1;
			if(!fbi_door_status_6) {
				MoveDynamicObject(fbi_door_6,831.701111, -1038.036743, 2107.003662+0.04,0.04, 0.0000, 0.00000, 82.100021);
				fbi_door_status_6 = true;
			}
			else {
				MoveDynamicObject(fbi_door_6,831.701111, -1038.036743, 2107.003662-0.04,0.04, 0.0000, 0.00000, 0.0);
				fbi_door_status_6 = false;
			}
			PlayerPlaySound(playerid, 4603, 0.0, 0.0, 0.0);
			SetPVarInt(playerid, "door_fbi_delay", gettime() + 1);
		}
		if(is_yarder[playerid]) {
			if(GetPVarInt(playerid, "yard_processings")) 
				return 1;

			for(new i = 0; i < 100; i ++) {
				if(!yard_place_info[i][ystatus] || 
					!IsPlayerInRangeOfPoint(playerid, 6.5, yard_place_info[i][ypos_x], yard_place_info[i][ypos_y], yard_place_info[i][ypos_z])) continue;
				return SCM(playerid, 0xCC9966FF, "√ä√†√¶√•√≤√±√ø, √ß√§√•√±√º √¢√±¬∏ √∑√®√±√≤√Æ. √è√∞√®√°√•√∞√®√≤√•√±√º √¢ √§√∞√≥√£√Æ√¨ √¨√•√±√≤√•");
			}

			TogglePlayerControllable(playerid, 0);
			ApplyAnimation(playerid, "INT_SHOP", "SHOP_CASHIER", 4.1, 1, 1, 1, 0, 0, 1);
			new Float: Px, Float: Py, Float: Pz;
			GetPlayerPos(playerid, Px, Py, Pz);
			SetPVarInt(playerid, "yard_processings", 1);
			yard_obj[playerid] = CreateDynamicObject(2713,Px,Py+0.65,Pz-0.95,0.0,0.0,0.0);
			PlayerPlaySound(playerid, 11200, 0.0, 0.0, 0.0);
			GameTextForPlayer(playerid, "~b~WASHING...", 4000, 3);
			SetTimerEx("washedOut", 7500, 0, "i", playerid);
		}
		if(GetPVarInt(playerid, "player_seat") == 1) {
			SetPlayerFacingAngle(playerid, 90);
			SetCameraBehindPlayer(playerid);
			ClearAnimations(playerid);
            return DeletePVar(playerid, "player_seat");
        }
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 1257.212768, -1310.810791, 12.675310) || 
			IsPlayerInRangeOfPoint(playerid, 3.0, 1257.212768, -1326.430664, 12.675299) || 
			IsPlayerInRangeOfPoint(playerid, 3.0, 1257.212768, -1355.097534, 12.675299)) {
			new Float: Px, Float: Py, Float: Pz;
			GetPlayerPos(playerid, Px, Py, Pz);
			SetPlayerPos(playerid, 1256.15, Py, Pz);
			SetPlayerFacingAngle(playerid, -80);
			SetCameraBehindPlayer(playerid);
            ApplyAnimation(playerid, "INT_HOUSE", "LOU_In", 4, 0, 0, 0, 1, 0);
            SetPVarInt(playerid, "player_seat", 1);
            return SCM(playerid, -1, "√ó√≤√Æ√°√ª √¢√±√≤√†√≤√º √±√Æ √±√™√†√¨√•√©√™√® √≠√†√¶√¨√®√≤√• √≠√† √™√´√†√¢√®√∏√≥ √•√π¬∏ √∞√†√ß");
		}
		new targ_id = GetPlayerTargetPlayer(playerid);
		if(targ_id != INVALID_PLAYER_ID) {

			if(IsACop(playerid)) {
				if(!ProxDetectorS(4.0, playerid, targ_id)) return 1;
				if(PlayerTied{playerid} > false) return SCM(playerid, COLOR_LIGHTGREY, "√Ç S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤ √Ç√†√¨ √≠√•√§√Æ√±√≤√≥√Ø√≠√Æ √å√Ç√Ñ √¨√•√≠√æ");
				
				SetPVarInt(playerid, "pd_tart_id", targ_id);
				new title_dial[24+8+1];
				format(title_dial, sizeof(title_dial), ""CBLUE"%s", GetName(targ_id));
				SPD(playerid, 667, DIALOG_STYLE_LIST, title_dial, "[1] √è√Æ√Ø√∞√Æ√±√®√≤√º √Ø√†√±√Ø√Æ√∞√≤\n[2] √ì√¢√•√´√®√∑√®√≤√º √≥√∞√Æ√¢√•√≠√º √∞√Æ√ß√ª√±√™√†\n[3] √ì√¨√•√≠√º√∏√®√≤√º √≥√∞√Æ√¢√•√≠√º √∞√Æ√ß√ª√±√™√†\n[4] √ç√†√§√•√≤√º √≠√†√∞√≥√∑√≠√®√™√®\n[5] √ë√≤√ø√≠√≥√≤√º √¨√†√±√™√≥\n[6] √è√∞√Æ√®√ß√¢√•√±√≤√® √Æ√°√ª√±√™\n[7] √Ç√•√±√≤√® √ß√† √±√Æ√°√Æ√©", "Seleccione", "Cerrar");
			}
			else {
				if(!ProxDetectorS(3.5, playerid, targ_id)) return 1;
				SetPVarInt(playerid, "give_targetplayer", targ_id);
				SPD(playerid, 1955, DIALOG_STYLE_LIST, "{bf8040}√ó√≤√Æ Quieres √Ø√•√∞√•S√≠√≤√º?", "[1] √è√†√≤√∞√Æ√≠√ª\n[2] √ç√†√∞√™√Æ√≤√®√™√®\n[3] √å√•√≤√†√´√´\n[4] √Ä√Ø√≤√•√∑√™√®\n[5] √å√†√±√™√®", "Seleccione", "Cerrar");
			}
			return 1;
		}
		if(GetPlayerVirtualWorld(playerid) == 1) {
			if(IsPlayerInRangeOfPoint(playerid, 1.5, -769.2567,-1783.8904,13.9054)) // √™√≠√Æ√Ø√™√† √≠√•√£√´√≥√°√Æ√™√Æ√£√Æ √´√®√¥√≤√† √∏√†√µ√≤√ª √±√¢√•√∞√µ√≥
			{
				if(minefirstlift[3] == 1) return SCM(playerid, COLOR_LIGHTGREY, "√ã√®√¥√≤ √≥√¶√• √≠√†√µ√Æ√§√®√≤√±√ø √≠√† √¢√†√∏√•√¨ √≥√∞√Æ√¢√≠√•");
				if(minefirstlift[3] == 2) return SCM(playerid, COLOR_LIGHTGREY, "√ã√®√¥√≤ √≥√¶√• √¢ √Ø√≥√≤√®");
				if(minefirstlift[3] == 3) {
					MoveDynamicObject(minefirstlift[2], -769.6777, -1783.7776, -37.3100, 0.7);
					minefirstlift[3] = 2;
					SetTimer("MineFirstLiftUp", 5000, false);
					SCM(playerid, 0x3399FFFF, "√Ç√ª √¢√ª√ß√¢√†√´√® √´√®√¥√≤. √é√¶√®S√≠√©√≤√•");
					SetPlayerFacingAngle(playerid, 36.0);
					ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch", 4.0,0,0,0,0,0, 1);
					PlayerPlaySound(playerid, 4203, 0.0, 0.0, 0.0);
				}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 1.5, -768.4301,-1784.1610,-39.0421)) // √™√≠√Æ√Ø√™√† √≠√•√£√´√≥√°√Æ√™√Æ√£√Æ √´√®√¥√≤√† √∏√†√µ√≤√ª √¢√≠√®√ß√≥
			{
				if(minefirstlift[3] == 2) return SCM(playerid, COLOR_LIGHTGREY, "√ã√®√¥√≤ √≥√¶√• √¢ √Ø√≥√≤√®");
				if(minefirstlift[3] == 3) return SCM(playerid, COLOR_LIGHTGREY, "√ã√®√¥√≤ √≥√¶√• √≠√†√µ√Æ√§√®√≤√±√ø √≠√† √¢√†√∏√•√¨ √≥√∞√Æ√¢√≠√•");
				if(minefirstlift[3] == 1) {
					MoveDynamicObject(minefirstlift[1], -769.6777, -1783.7776, 14.2662, 0.7);
					minefirstlift[3] = 2;
					SetTimer("MineFirstLiftDown", 5000, false);
					SCM(playerid, 0x3399FFFF, "√Ç√ª √¢√ª√ß√¢√†√´√® √´√®√¥√≤. √é√¶√®S√≠√©√≤√•");
					SetPlayerFacingAngle(playerid, 356.0);
					ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch", 4.0,0,0,0,0,0, 1);
					PlayerPlaySound(playerid, 4203, 0.0, 0.0, 0.0);
				}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 1.5, -749.7958,-1779.8812,13.9060)) // √™√≠√Æ√Ø√™√† √£√´√≥√°√Æ√™√Æ√£√Æ √´√®√¥√≤√† √∏√†√µ√≤√ª √±√¢√•√∞√µ√≥
			{
				if(pData[playerid][pWorkSkill][0] < 6000) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√†√¨ √≠√•√§√Æ√±√≤√≥√Ø√≠√† S√≠√≠√≠√†√ø √∏√†√µ√≤√†. √ë√≤√†√≠√º√≤√• √Ø√∞√Æ√¢√•√∞√•√≠√≠√ª√¨ √∞√†√°√Æ√∑√®√¨ {FFCD00}(√Æ√≤√≠√•√±√®√≤√• √°√Æ√´√•√• 6000 √™√£)");
				if(minesecondlift[3] == 1) return SCM(playerid, COLOR_LIGHTGREY, "√ã√®√¥√≤ √≥√¶√• √≠√†√µ√Æ√§√®√≤√±√ø √≠√† √¢√†√∏√•√¨ √≥√∞√Æ√¢√≠√•");
				if(minesecondlift[3] == 2) return SCM(playerid, COLOR_LIGHTGREY, "√ã√®√¥√≤ √≥√¶√• √¢ √Ø√≥√≤√®");
				if(minesecondlift[3] == 3) {
					MoveDynamicObject(minesecondlift[2], -748.9438, -1779.9019, -87.3062, 0.7);
					minesecondlift[3] = 2;
					SetTimer("MineSecondLiftUp", 5000, false);
					SCM(playerid, 0x3399FFFF, "√Ç√ª √¢√ª√ß√¢√†√´√® √´√®√¥√≤. √é√¶√®S√≠√©√≤√•");
					SetPlayerFacingAngle(playerid, 210.0);
					ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch", 4.0,0,0,0,0,0, 1);
					PlayerPlaySound(playerid, 4203, 0.0, 0.0, 0.0);
				}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 1.5, -750.0234,-1780.4724,-89.0200)) // √™√≠√Æ√Ø√™√† √£√´√≥√°√Æ√™√Æ√£√Æ √´√®√¥√≤√† √∏√†√µ√≤√ª √±√≠√®√ß√≥
			{
				if(pData[playerid][pWorkSkill][0] < 6000) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√†√¨ √≠√•√§√Æ√±√≤√≥√Ø√≠√† S√≠√≠√≠√†√ø √∏√†√µ√≤√†. √ë√≤√†√≠√º√≤√• √Ø√∞√Æ√¢√•√∞√•√≠√≠√ª√¨ √∞√†√°√Æ√∑√®√¨ {FFCD00}(√Æ√≤√≠√•√±√®√≤√• √°√Æ√´√•√• 6000 √™√£)");
				if(minesecondlift[3] == 2) return SCM(playerid, COLOR_LIGHTGREY, "√ã√®√¥√≤ √≥√¶√• √¢ √Ø√≥√≤√®");
				if(minesecondlift[3] == 3) return SCM(playerid, COLOR_LIGHTGREY, "√ã√®√¥√≤ √≥√¶√• √≠√†√µ√Æ√§√®√≤√±√ø √≠√† √¢√†√∏√•√¨ √≥√∞√Æ√¢√≠√•");
				if(minesecondlift[3] == 1) {
					MoveDynamicObject(minesecondlift[1], -748.9438, -1779.9019, 14.2662, 0.7);
					minesecondlift[3] = 2;
					SetTimer("MineSecondLiftDown", 5000, false);
					SCM(playerid, 0x3399FFFF, "√Ç√ª √¢√ª√ß√¢√†√´√® √´√®√¥√≤. √é√¶√®S√≠√©√≤√•");
					SetPlayerFacingAngle(playerid, 238.0);
					ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch", 4.0,0,0,0,0,0, 1);
					PlayerPlaySound(playerid, 4203, 0.0, 0.0, 0.0);
				}
			}
		}
		return 1;
	}
	else if(newkeys & KEY_WALK)
	{
		for(new i = 0; i < 49; i ++) {
			if(!IsPlayerInRangeOfPoint(playerid, 2.0, flat_info[i][fl_exitposX], flat_info[i][fl_exitposY], flat_info[i][fl_exitposZ])) continue;
			if(GetPlayerVirtualWorld(playerid) != i + 1) continue;

			new obj_first = first_obj_flat[playerid],
				obj_last = last_obj_flat[playerid] + 1;

			if(IsValidDynamicObject(obj_first)) {
				for(new l = obj_first; l != obj_last; l ++) 
					DestroyDynamicObject(l);
			}

			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerPos(playerid, flat_info[i][fl_enterposX], flat_info[i][fl_enterposY], flat_info[i][fl_enterposZ]);

			antiflood_move[playerid] = gettime() + 3;
		}
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 1243.8640,-961.3170,1253.7880)) {
			load_mode(playerid);
			SetPlayerInterior(playerid, 3);
			SetPlayerVirtualWorld(playerid, hotel_info[hotel_enter[playerid]][hotel_floor] + 17);
			switch(hotel_enter[playerid]) {
				case 0, 12, 24: SetPlayerPos(playerid, 1369.6028,-33.7936,1000.9084);
				case 1, 13, 25: SetPlayerPos(playerid, 1374.3295,-37.3567,1000.9149);
				case 2, 14, 26: SetPlayerPos(playerid, 1379.8992,-39.3175,1000.9084);
				case 3, 15, 27: SetPlayerPos(playerid, 1385.8585,-39.4738,1000.9084);
				case 4, 16, 28: SetPlayerPos(playerid, 1391.5896,-37.8048,1000.9084);
				case 5, 17, 29: SetPlayerPos(playerid, 1396.9570,-34.0147,1000.9084);
				case 6, 18, 30: SetPlayerPos(playerid, 1369.6731,-6.8982,1000.9084);
				case 7, 19, 31: SetPlayerPos(playerid, 1374.1412,-3.5029,1000.9084);
				case 8, 20, 32: SetPlayerPos(playerid, 1379.6879,-1.5131,1000.9084);
				case 9, 21, 33: SetPlayerPos(playerid, 1385.9836,-1.3284,1000.9084);
				case 10, 22, 34: SetPlayerPos(playerid, 1391.7874,-3.0895,1000.9084);
				case 11, 23, 35: SetPlayerPos(playerid, 1396.9752,-6.8002,1000.9084);
			}
		}
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 1369.6028,-33.7936,1000.9084)) {
			switch(GetPlayerVirtualWorld(playerid)) {
				case 18: hotel_enter[playerid] = 0;
				case 19: hotel_enter[playerid] = 12;
				case 20: hotel_enter[playerid] = 24;
				default: return 1;
			}
			if(hotel_info[hotel_enter[playerid]][hotel_lock] && 
				strcmp(hotel_info[hotel_enter[playerid]][hotel_owner], pData[playerid][pName]))
				return GameTextForPlayer(playerid, "~r~Locked", 5000, 1);
			load_mode(playerid);
			SetPlayerVirtualWorld(playerid, hotel_enter[playerid]);
			SetPlayerPos(playerid, 1243.9562,-959.1254,1253.7880);
			SetPlayerFacingAngle(playerid, 0.0);
			SetCameraBehindPlayer(playerid);
		}
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 1374.3295,-37.3567,1000.9149)) {
			switch(GetPlayerVirtualWorld(playerid)) {
				case 18: hotel_enter[playerid] = 1;
				case 19: hotel_enter[playerid] = 13;
				case 20: hotel_enter[playerid] = 25;
				default: return 1;
			}
			if(hotel_info[hotel_enter[playerid]][hotel_lock] && 
				strcmp(hotel_info[hotel_enter[playerid]][hotel_owner], pData[playerid][pName]))
				return GameTextForPlayer(playerid, "~r~Locked", 5000, 1);
			load_mode(playerid);
			SetPlayerVirtualWorld(playerid, hotel_enter[playerid]);
			SetPlayerPos(playerid, 1243.9562,-959.1254,1253.7880);
			SetPlayerFacingAngle(playerid, 0.0);
			SetCameraBehindPlayer(playerid);
		}
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 1379.8992,-39.3175,1000.9084)) {
			switch(GetPlayerVirtualWorld(playerid)) {
				case 18: hotel_enter[playerid] = 2;
				case 19: hotel_enter[playerid] = 14;
				case 20: hotel_enter[playerid] = 26;
				default: return 1;
			}
			if(hotel_info[hotel_enter[playerid]][hotel_lock] && 
				strcmp(hotel_info[hotel_enter[playerid]][hotel_owner], pData[playerid][pName]))
				return GameTextForPlayer(playerid, "~r~Locked", 5000, 1);
			load_mode(playerid);
			SetPlayerVirtualWorld(playerid, hotel_enter[playerid]);
			SetPlayerPos(playerid, 1243.9562,-959.1254,1253.7880);
			SetPlayerFacingAngle(playerid, 0.0);
			SetCameraBehindPlayer(playerid);
		}
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 1385.8585,-39.4738,1000.9084)) {
			switch(GetPlayerVirtualWorld(playerid)) {
				case 18: hotel_enter[playerid] = 3;
				case 19: hotel_enter[playerid] = 15;
				case 20: hotel_enter[playerid] = 27;
				default: return 1;
			}
			if(hotel_info[hotel_enter[playerid]][hotel_lock] && 
				strcmp(hotel_info[hotel_enter[playerid]][hotel_owner], pData[playerid][pName]))
				return GameTextForPlayer(playerid, "~r~Locked", 5000, 1);
			load_mode(playerid);
			SetPlayerVirtualWorld(playerid, hotel_enter[playerid]);
			SetPlayerPos(playerid, 1243.9562,-959.1254,1253.7880);
			SetPlayerFacingAngle(playerid, 0.0);
			SetCameraBehindPlayer(playerid);
		}
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 1391.5896,-37.8048,1000.9084)) {
			switch(GetPlayerVirtualWorld(playerid)) {
				case 18: hotel_enter[playerid] = 4;
				case 19: hotel_enter[playerid] = 16;
				case 20: hotel_enter[playerid] = 28;
				default: return 1;
			}
			if(hotel_info[hotel_enter[playerid]][hotel_lock] && 
				strcmp(hotel_info[hotel_enter[playerid]][hotel_owner], pData[playerid][pName]))
				return GameTextForPlayer(playerid, "~r~Locked", 5000, 1);
			load_mode(playerid);
			SetPlayerVirtualWorld(playerid, hotel_enter[playerid]);
			SetPlayerPos(playerid, 1243.9562,-959.1254,1253.7880);
			SetPlayerFacingAngle(playerid, 0.0);
			SetCameraBehindPlayer(playerid);
		}
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 1396.9570,-34.0147,1000.9084)) {
			switch(GetPlayerVirtualWorld(playerid)) {
				case 18: hotel_enter[playerid] = 5;
				case 19: hotel_enter[playerid] = 17;
				case 20: hotel_enter[playerid] = 29;
				default: return 1;
			}
			if(hotel_info[hotel_enter[playerid]][hotel_lock] && 
				strcmp(hotel_info[hotel_enter[playerid]][hotel_owner], pData[playerid][pName]))
				return GameTextForPlayer(playerid, "~r~Locked", 5000, 1);
			load_mode(playerid);
			SetPlayerVirtualWorld(playerid, hotel_enter[playerid]);
			SetPlayerPos(playerid, 1243.9562,-959.1254,1253.7880);
			SetPlayerFacingAngle(playerid, 0.0);
			SetCameraBehindPlayer(playerid);
		}
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 1369.6731,-6.8982,1000.9084)) {
			switch(GetPlayerVirtualWorld(playerid)) {
				case 18: hotel_enter[playerid] = 6;
				case 19: hotel_enter[playerid] = 18;
				case 20: hotel_enter[playerid] = 30;
				default: return 1;
			}
			if(hotel_info[hotel_enter[playerid]][hotel_lock] && 
				strcmp(hotel_info[hotel_enter[playerid]][hotel_owner], pData[playerid][pName]))
				return GameTextForPlayer(playerid, "~r~Locked", 5000, 1);
			load_mode(playerid);
			SetPlayerVirtualWorld(playerid, hotel_enter[playerid]);
			SetPlayerPos(playerid, 1243.9562,-959.1254,1253.7880);
			SetPlayerFacingAngle(playerid, 0.0);
			SetCameraBehindPlayer(playerid);
		}
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 1374.1412,-3.5029,1000.9084)) {
			switch(GetPlayerVirtualWorld(playerid)) {
				case 18: hotel_enter[playerid] = 7;
				case 19: hotel_enter[playerid] = 19;
				case 20: hotel_enter[playerid] = 31;
				default: return 1;
			}
			if(hotel_info[hotel_enter[playerid]][hotel_lock] && 
				strcmp(hotel_info[hotel_enter[playerid]][hotel_owner], pData[playerid][pName]))
				return GameTextForPlayer(playerid, "~r~Locked", 5000, 1);
			load_mode(playerid);
			SetPlayerVirtualWorld(playerid, hotel_enter[playerid]);
			SetPlayerPos(playerid, 1243.9562,-959.1254,1253.7880);
			SetPlayerFacingAngle(playerid, 0.0);
			SetCameraBehindPlayer(playerid);
		}
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 1379.6879,-1.5131,1000.9084)) {
			switch(GetPlayerVirtualWorld(playerid)) {
				case 18: hotel_enter[playerid] = 8;
				case 19: hotel_enter[playerid] = 20;
				case 20: hotel_enter[playerid] = 32;
				default: return 1;
			}
			if(hotel_info[hotel_enter[playerid]][hotel_lock] && 
				strcmp(hotel_info[hotel_enter[playerid]][hotel_owner], pData[playerid][pName]))
				return GameTextForPlayer(playerid, "~r~Locked", 5000, 1);
			load_mode(playerid);
			SetPlayerVirtualWorld(playerid, hotel_enter[playerid]);
			SetPlayerPos(playerid, 1243.9562,-959.1254,1253.7880);
			SetPlayerFacingAngle(playerid, 0.0);
			SetCameraBehindPlayer(playerid);
		}
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 1385.9836,-1.3284,1000.9084)) {
			switch(GetPlayerVirtualWorld(playerid)) {
				case 18: hotel_enter[playerid] = 9;
				case 19: hotel_enter[playerid] = 21;
				case 20: hotel_enter[playerid] = 33;
				default: return 1;
			}
			if(hotel_info[hotel_enter[playerid]][hotel_lock] && 
				strcmp(hotel_info[hotel_enter[playerid]][hotel_owner], pData[playerid][pName]))
				return GameTextForPlayer(playerid, "~r~Locked", 5000, 1);
			load_mode(playerid);
			SetPlayerVirtualWorld(playerid, hotel_enter[playerid]);
			SetPlayerPos(playerid, 1243.9562,-959.1254,1253.7880);
			SetPlayerFacingAngle(playerid, 0.0);
			SetCameraBehindPlayer(playerid);
		}
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 1391.7874,-3.0895,1000.9084)) {
			switch(GetPlayerVirtualWorld(playerid)) {
				case 18: hotel_enter[playerid] = 10;
				case 19: hotel_enter[playerid] = 22;
				case 20: hotel_enter[playerid] = 34;
				default: return 1;
			}
			if(hotel_info[hotel_enter[playerid]][hotel_lock] && 
				strcmp(hotel_info[hotel_enter[playerid]][hotel_owner], pData[playerid][pName]))
				return GameTextForPlayer(playerid, "~r~Locked", 5000, 1);
			load_mode(playerid);
			SetPlayerVirtualWorld(playerid, hotel_enter[playerid]);
			SetPlayerPos(playerid, 1243.9562,-959.1254,1253.7880);
			SetPlayerFacingAngle(playerid, 0.0);
			SetCameraBehindPlayer(playerid);
		}
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 1396.9752,-6.8002,1000.9084)) {
			switch(GetPlayerVirtualWorld(playerid)) {
				case 18: hotel_enter[playerid] = 11;
				case 19: hotel_enter[playerid] = 23;
				case 20: hotel_enter[playerid] = 35;
				default: return 1;
			}
			if(hotel_info[hotel_enter[playerid]][hotel_lock] && 
				strcmp(hotel_info[hotel_enter[playerid]][hotel_owner], pData[playerid][pName]))
				return GameTextForPlayer(playerid, "~r~Locked", 5000, 1);
			load_mode(playerid);
			SetPlayerVirtualWorld(playerid, hotel_enter[playerid]);
			SetPlayerPos(playerid, 1243.9562,-959.1254,1253.7880);
			SetPlayerFacingAngle(playerid, 0.0);
			SetCameraBehindPlayer(playerid);
		}
		if(prop_see[playerid]) {
			load_mode(playerid);
			SetPlayerInterior(playerid, prop_int[playerid]);
			SetPlayerVirtualWorld(playerid, prop_vw[playerid]);
			SetPlayerPos(playerid, prop_posX[playerid], prop_posY[playerid], prop_posZ[playerid]);
			prop_see[playerid] = false;
			prop_int[playerid] = 0;
			prop_vw[playerid] = 0;
			prop_posX[playerid] = 0, prop_posY[playerid] = 0, prop_posZ[playerid] = 0;
			SetCameraBehindPlayer(playerid);
		}
		if(GetPVarInt(playerid, "SMOKE") > gettime()) {
			if(GetPVarInt(playerid, "ZatJ") > gettime()) return 1;
			SetPVarInt(playerid, "ZatJ", gettime() + 10);
			ApplyAnimation(playerid, "GANGS","smkcig_prtl",4.1,0,1,1,1,1,1);
			SetTimerEx("ClearAnimText", 8000, false, "d", playerid);
			if(pData[playerid][pSex] == 1) MeAction(playerid, "√ß√†√≤√ø√≠√≥√´ √±√®√£√†√∞√•√≤√≥"), SetPlayerChatBubble(playerid, "√ß√†√≤√ø√≠√≥√´ √±√®√£√†√∞√•√≤√≥", COLOR_PURPLE, 30.0, 10000);
			else MeAction(playerid, "√ß√†√≤√ø√≠√≥√´√† √±√®√£√†√∞√•√≤√≥"), SetPlayerChatBubble(playerid, "√ß√†√≤√ø√≠√≥√´√† √±√®√£√†√∞√•√≤√≥", COLOR_PURPLE, 30.0, 10000);
		}

		new h = GetPVarInt(playerid, "HouseID");

		if(is_salonsee[playerid]) {
			load_mode(playerid,4500);
			DestroyVehicle(veh_salonsee[playerid]);
			SetPlayerPos(playerid, TeleportDest[playerid][0], TeleportDest[playerid][1], TeleportDest[playerid][2]);
			SetPlayerVirtualWorld(playerid, vwback[playerid]);
			SetPlayerInterior(playerid, intback[playerid]);
			SetCameraBehindPlayer(playerid);
			is_salonsee[playerid] = false;
			switch(salonsee_dialogid[playerid]) {
				case 1: SPD(playerid, 4848, DIALOG_STYLE_TABLIST_HEADERS, "{005b96}√Ä√¢√≤√Æ√±√†√´√Æ√≠ √ã√Æ√±-√ë√†√≠√≤√Æ√±√†", 
							"{ff9945}√å√Æ√§√•√´√º\t\t{ff9945}√ñ√•√≠√†\n\
							"CWHITE"Esperanto\t90.000$\n\
							Perenniel\t19.000$\n\
							Bravura\t30.000$\n\
							Manana\t25.000$\n\
							Voodoo\t100.000$\n\
							Pony\t115.000$\n\
							Bobcat\t36.000$\n\
							Stallion\t25.000$\n\
							Oceanic\t28.000$\n\
							Glendale\t34.000$\n\
							Hermes\t39.000$\n\
							Regina\t28.000$\n\
							Greenwood\t30.000$\n\
							Virgo\t38.000$\n\
							Majestic\t19.000$\n\
							Buccaneer\t40.000$\n\
							Clover\t15.000$\n\
							Sadler\t15.000$\n\
							Hustler\t20.000$\n\
							Tampa\t33.000$\n\
							Broadway\t35.000$\n\
							Tornado\t33.000$\n\
							Picador\t25.000$\n\
							Emperor\t30.000$", 
						"Seleccione", "Cerrar");
				case 2: SPD(playerid, 4850, DIALOG_STYLE_TABLIST_HEADERS, "{005b96}√Ä√¢√≤√Æ√±√†√´√Æ√≠ √ë√†√≠-√î√®√•√∞√∞√Æ", 
							"{ff9945}√å√Æ√§√•√´√º\t\t{ff9945}√ñ√•√≠√†\n\
							"CWHITE"Phoenix\t300.000$\n\
							Huntley\t205.000$\n\
							Club\t200.000$\n\
							Stafford\t250.000$\n\
							Savanna\t150.000$\n\
							Tahoma\t150.000$\n\
							Stratum\t120.000$\n\
							Uranus\t160.000$\n\
							Windsor\t120.000$\n\
							Yosemite\t165.000$\n\
							Merit\t130.000$\n\
							Remington\t200.000$\n\
							Cadrona\t100.000$\n\
							Slamvan\t18.000$\n\
							Elegant\t140.000$\n\
							Rancher\t180.000$\n\
							Fortune\t150.000$\n\
							Feltzer\t150.000$\n\
							Mesa\t120.000$\n\
							Blista Compact\t120.000$\n\
							Sabre\t40.000$\n\
							Admiral\t100.000$\n\
							Premier\t150.000$\n\
							Washington\t190.000$\n\
							Sentinel\t160.000$\n\
							Landstalker\t150.000$", 
						"Seleccione", "Cerrar");
				case 4: SPD(playerid, 4855, DIALOG_STYLE_TABLIST_HEADERS, "{005b96}√Ä√¢√≤√Æ√±√†√´√Æ√≠ √ã√†√±-√Ç√•√≠√≤√≥√∞√†√±√†", 
							"{ff9945}√å√Æ√§√•√´√º\t\t{ff9945}√ñ√•√≠√†\n\
							"CWHITE"Alpha\t395.000$\n\
							Euros\t450.000$\n\
							Jester\t540.000$\n\
							Sultan\t570.000$\n\
							Elegy\t400.000$\n\
							Bullet\t1.100.000$\n\
							Super GT\t700.000$\n\
							Comet\t555.000$\n\
							Hotknife\t1.300.000$\n\
							ZR-350\t810.000$\n\
							Hotring Racer\t950.000$\n\
							Hotring Racer A\t950.000$\n\
							Hotring Racer B\t950.000$\n\
							Cheetah\t1.600.000$\n\
							Banshee\t900.000$\n\
							Buffalo\t900.000$\n\
							Turismo\t2.000.000$\n\
							Infernus\t5.000.000$", 
						"Seleccione", "Cerrar");
				case 5: SPD(playerid, 4849, DIALOG_STYLE_TABLIST_HEADERS, "{005b96}√å√Æ√≤√Æ√±√†√´√Æ√≠", 
							"{ff9945}√å√Æ√§√•√´√º\t\t{ff9945}√ñ√•√≠√†\n\
							"CWHITE"BMX\t2.000$\n\
							Bike\t2.100$\n\
							Mountain Bike\t5.000$\n\
							Faggio\t10.000$\n\
							PCJ-600\t120.000$\n\
							FCR-900\t150.000$\n\
							Freeway\t100.000$\n\
							Wayfarer\t30.000$\n\
							Quad\t50.000$\n\
							Sanchez\t80.000$\n\
							NRG-500\t2.500.000$", 
						"Seleccione", "Cerrar");
			}
			salonsee_dialogid[playerid] = 0;
		}
		else if(IsPlayerInRangeOfPoint(playerid,2.0,1412.2048,-1207.4706,157.6019) && BizEnter{playerid} != 255) {
			SetPlayerPos(playerid, BizInfo[BizEnter{playerid}][ExitBiz][0],BizInfo[BizEnter{playerid}][ExitBiz][1],BizInfo[BizEnter{playerid}][ExitBiz][2]);
			SetPlayerVirtualWorld(playerid, BizInfo[BizEnter{playerid}][bVW]), SetPlayerInterior(playerid, BizInfo[BizEnter{playerid}][bInt]);
		}
		else if((IsPlayerInRangeOfPoint(playerid, 3.0, -1050.9579, 453.4256, 2.0479) || IsPlayerInRangeOfPoint(playerid, 3.0, 1768.9617, -1898.2405, 498.5519)) && GetPlayerVirtualWorld(playerid) == h + 50) {
			SetPlayerInterior(playerid, HouseInfo[h][hInt]);
			SetPlayerVirtualWorld(playerid, h + 50);
			SetPlayerPos(playerid, HouseInfo[h][hExit][0], HouseInfo[h][hExit][1], HouseInfo[h][hExit][2]+0.25);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 5, HouseInfo[h][hExit][0], HouseInfo[h][hExit][1], HouseInfo[h][hExit][2]) && GetPlayerVirtualWorld(playerid) == h + 50) {
			if(!HouseInfo[h][hADoor]) return 1;
			else return callcmd::exit(playerid);
		}
		else if(!IsPlayerInAnyVehicle(playerid))
		{
			for(new i = 0x0; i != sizeof(atm_position); i ++) {
				if(!IsPlayerInRangeOfPoint(playerid,3.0, atm_position[i][0],atm_position[i][1],atm_position[i][2])) continue;
				if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return 1;
				SPD(playerid, 8900, DIALOG_STYLE_LIST, "{cccc66}√Å√†√≠√™√Æ√¨√†√≤", "{ff9945}[1] "CWHITE"√è√Æ√´√Æ√¶√®√≤√º √±√∞√•√§√±√≤√¢√† √≠√† √°√†√≠√™. √±√∑¬∏√≤\n{ff9945}[2] "CWHITE"√ë√≠√ø√≤√º √±√∞√•√§√±√≤√¢√† √± √°√†√≠√™. √±√∑¬∏√≤√†\n{ff9945}[3] "CWHITE"√ì√ß√≠√†√≤√º √°√†√´√†√≠√± √°√†√≠√™. √±√∑¬∏√≤√†\n{ff9945}[4] "CWHITE"√è√Æ√Ø√Æ√´√≠√®√≤√º √±√∑¬∏√≤ √≤√•√´√•√¥√Æ√≠√†\n{ff9945}[5] "CWHITE"√Å√•√ß√≠√†√´√®√∑√≠√ª√© √Ø√•√∞√•√¢√Æ√§", "Seleccione", "√Ç√ª√©√≤√®");
				break;
			}
		}
	}

	if(oldkeys == KEY_SPRINT) {
		if(!IsPlayerInAnyVehicle(playerid) && GetPVarInt(playerid, "player_anim")) {
			ClearAnimations(playerid);
			SetPlayerSpecialAction(playerid, 0);
			for(new i = 0; i < sizeof(animinfo_TD); i++)
				TextDrawHideForPlayer(playerid, animinfo_TD[i]);
			DeletePVar(playerid, "player_anim");
			ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 0, 1);
		}
	}
	else if((newkeys & KEY_FIRE) || ((newkeys & 128) && (oldkeys & 128) && (newkeys & KEY_SECONDARY_ATTACK) ) || newkeys & KEY_FIRE || (newkeys & KEY_SPRINT && newkeys & KEY_SECONDARY_ATTACK) || (newkeys & 128) || (newkeys & KEY_SPRINT && newkeys & KEY_FIRE )) {
        if(!IsPlayerInRangeOfPoint(playerid,150.0,285.7182,-84.4868,1001.5156) && 
            PlayerInAntiDM(playerid) && 
            !GetPVarInt(playerid, #tazer_dest) && 
            !IsPlayerApplyAnimation(playerid, "Bat_4") && 
            !IsPlayerInAnyVehicle(playerid) && 
            !GetPVarInt(playerid, "MaskPlayer") && 
            GetPlayerWeapon(playerid) != 3 && 
            pData[playerid][pMember] == 0 && 
            pData[playerid][pLevel] <= 2) 
			return ApplyAnimation(playerid, "PED", "HANDSCOWER", 4.1, 0, 1, 1, 0, 0, 1);
	}

	if((newkeys == KEY_HANDBRAKE || newkeys == KEY_SECONDARY_ATTACK) && GetPlayerCameraMode(playerid) == 184) return Kick(playerid);
	return 1;
}

CB: closegatebar_1() return MoveDynamicObject(bpost[0], 66.995003, -1537.519043, 4.724000 - 0.004000, 0.004000, 0.000000, 270.000000, 90.000000);
CB: closegatebar_2() return MoveDynamicObject(bpost[1], 35.976002, -1525.197998, 4.834000 - 0.004000, 0.004000, 0.000000, 270.000000, 270.000000);

CB: mask_td(playerid) PlayerTextDrawHide(playerid, td_mask_time[playerid]);
CB: Anti_BH(playerid) ApplyAnimation(playerid, "PED", "getup_front", 4.1, 0, 0, 0, 0, 0, 1);
CB: ChatAnimationClear(playerid) return ApplyAnimation(playerid, "CARRY", "crry_prtial", 3.5, 0,0,0,0,0, 1);

public OnVehicleDamageStatusUpdate(vehicleid, playerid) {
	Derby_OnVehDamageStatusUpdate(vehicleid, playerid);

	if(vehicleid == af_carID[playerid] && random(2) == 0 && af_load[playerid]) {
		if(GetPVarInt(playerid, "af_delay_damage") > gettime()) return 1;
		new hpcount = RandomEx(20, 80);
		af_hprem[playerid] += hpcount;
		new Float:vx,Float:vy,Float:vz;
		GetVehiclePos(vehicleid, vx, vy, vz);
		new str[25];
		format(str,sizeof(str),"-%d HP", hpcount);
		af_tmp_text[playerid] = CreateDynamic3DTextLabel(str, 0xFF2300FF, vx+0.067, vy-1.369, vz+1.5, 30, INVALID_PLAYER_ID, vehicleid);
		SetTimerEx("destroy_af_text", 3000, 0, "i", playerid);
		SetPVarInt(playerid, "af_delay_damage", gettime() + 5);
	}
	return 1;
}
CB: destroy_af_text(playerid) return DestroyDynamic3DTextLabel(af_tmp_text[playerid]);
public OnVehicleStreamIn(vehicleid, forplayerid)
{
	if(!IsValidVehicle(vehicleid)) return 1;
	GetVehiclePos(vehicleid, VehInfo[vehicleid][vehicleX], VehInfo[vehicleid][vehicleY], VehInfo[vehicleid][vehicleZ]);
	GetVehicleZAngle(vehicleid, VehInfo[vehicleid][vehicleA]);
	return SetVehicleParamsForPlayer(vehicleid, forplayerid, 0, VehInfo[vehicleid - 1][vLock]);
}
CB: rp_show_pass(playerid) return OnPlayerText(playerid, "√Å√≥√§√º√≤√• √§√Æ√°√∞√ª √Ç√†√∏√® √§√Æ√™√≥√¨√•√≠√≤√ª. √ì√¢√•√∞√ø√æ √Ç√†√±, √Ω√≤√Æ √Ø√∞√Æ√±√≤√†√ø √Ø√∞√Æ√¢√•√∞√™√†");
public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
	if(GetPVarInt(playerid, "RegisterPlayer")==1 || pData[playerid][pLogin]==false) return 1;
	if(clickedplayerid == playerid) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √§√Æ√°√†√¢√®√≤√º √±√•√°√ø √¢ √≤√•√´√•√¥√Æ√≠√≠√≥√æ √™√≠√®√£√≥");
	if(pData[clickedplayerid][pPnumber] == -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ω√≤√Æ√£√Æ √∑√•√´√Æ√¢√•√™√† No √≤√•√´√•√¥√Æ√≠√†");
	
	SetPVarInt(playerid, "Temp_ID_Book_Tab", clickedplayerid);
	string[0] = EOS;
	format(string, 120, ""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √§√Æ√°√†√¢√®√≤√º "CPALEGREEN"%s "CWHITE"√¢ √±√¢√Æ√æ √≤√•√´√•√¥√Æ√≠√≠√≥√æ √™√≠√®√£√≥?", pData[clickedplayerid][pName]);
	SPD(playerid, 126, DIALOG_STYLE_MSGBOX, "{3cb300}√Ñ√Æ√°√†√¢√´√•√≠√®√• √™√Æ√≠√≤√†√™√≤√†", string, "S√≠", "No");
	return 1;
}
stock update_table_info(playerid) {
	new table_id = GetPVarInt(playerid, "table_id");
	if(table_id == 0) return 1;
	new fm[40];

	if(table_playerid[table_id][0] != -1) {
		format(fm,sizeof(fm),"~y~1. ~w~%s",GetName(table_playerid[table_id][0]));
		PlayerTextDrawSetString(playerid, table_TD[playerid][15], fm);
	}
	else PlayerTextDrawSetString(playerid, table_TD[playerid][15], "");
	if(table_playerid[table_id][1] != -1) {
		format(fm,sizeof(fm),"~y~2. ~w~%s",GetName(table_playerid[table_id][1]));
		PlayerTextDrawSetString(playerid, table_TD[playerid][16], fm);
	}
	else PlayerTextDrawSetString(playerid, table_TD[playerid][16], "");
	if(table_playerid[table_id][2] != -1) {
		format(fm,sizeof(fm),"~y~3. ~w~%s",GetName(table_playerid[table_id][2]));
		PlayerTextDrawSetString(playerid, table_TD[playerid][17], fm);
	}
	else PlayerTextDrawSetString(playerid, table_TD[playerid][17], "");
	if(table_playerid[table_id][3] != -1) {
		format(fm,sizeof(fm),"~y~4. ~w~%s",GetName(table_playerid[table_id][3]));
		PlayerTextDrawSetString(playerid, table_TD[playerid][18], fm);
	}
	else PlayerTextDrawSetString(playerid, table_TD[playerid][18], "");
	return 1;
}
stock create_table_TD(playerid) {
	new fm[35],
		table_id = GetPVarInt(playerid, "table_id");

	table_TD[playerid][18] = CreatePlayerTextDraw(playerid, 24.700000, 271.000000, "");
	PlayerTextDrawLetterSize(playerid, table_TD[playerid][18], 0.259310, 1.337499);
	PlayerTextDrawAlignment(playerid, table_TD[playerid][18], 1);
	PlayerTextDrawColor(playerid, table_TD[playerid][18], -1);
	PlayerTextDrawSetShadow(playerid, table_TD[playerid][18], 0);
	PlayerTextDrawSetOutline(playerid, table_TD[playerid][18], 0);
	PlayerTextDrawBackgroundColor(playerid, table_TD[playerid][18], 51);
	PlayerTextDrawFont(playerid, table_TD[playerid][18], 2);
	PlayerTextDrawSetProportional(playerid, table_TD[playerid][18], 1);

	table_TD[playerid][17] = CreatePlayerTextDraw(playerid, 24.700000, 260.000000, "");
	PlayerTextDrawLetterSize(playerid, table_TD[playerid][17], 0.259310, 1.337499);
	PlayerTextDrawAlignment(playerid, table_TD[playerid][17], 1);
	PlayerTextDrawColor(playerid, table_TD[playerid][17], -1);
	PlayerTextDrawSetShadow(playerid, table_TD[playerid][17], 0);
	PlayerTextDrawSetOutline(playerid, table_TD[playerid][17], 0);
	PlayerTextDrawBackgroundColor(playerid, table_TD[playerid][17], 51);
	PlayerTextDrawFont(playerid, table_TD[playerid][17], 2);
	PlayerTextDrawSetProportional(playerid, table_TD[playerid][17], 1);

	table_TD[playerid][16] = CreatePlayerTextDraw(playerid, 24.700000, 249.000000, "");
	PlayerTextDrawLetterSize(playerid, table_TD[playerid][16], 0.259310, 1.337499);
	PlayerTextDrawAlignment(playerid, table_TD[playerid][16], 1);
	PlayerTextDrawColor(playerid, table_TD[playerid][16], -1);
	PlayerTextDrawSetShadow(playerid, table_TD[playerid][16], 0);
	PlayerTextDrawSetOutline(playerid, table_TD[playerid][16], 0);
	PlayerTextDrawBackgroundColor(playerid, table_TD[playerid][16], 51);
	PlayerTextDrawFont(playerid, table_TD[playerid][16], 2);
	PlayerTextDrawSetProportional(playerid, table_TD[playerid][16], 1);

	table_TD[playerid][15] = CreatePlayerTextDraw(playerid, 24.700000, 238.000000, "");
	PlayerTextDrawLetterSize(playerid, table_TD[playerid][15], 0.259310, 1.337499);
	PlayerTextDrawAlignment(playerid, table_TD[playerid][15], 1);
	PlayerTextDrawColor(playerid, table_TD[playerid][15], -1);
	PlayerTextDrawSetShadow(playerid, table_TD[playerid][15], 0);
	PlayerTextDrawSetOutline(playerid, table_TD[playerid][15], 0);
	PlayerTextDrawBackgroundColor(playerid, table_TD[playerid][15], 51);
	PlayerTextDrawFont(playerid, table_TD[playerid][15], 2);
	PlayerTextDrawSetProportional(playerid, table_TD[playerid][15], 1);

	table_TD[playerid][14] = CreatePlayerTextDraw(playerid, 20.000000, 180.000000, "_");
	PlayerTextDrawLetterSize(playerid, table_TD[playerid][14], 0.400000, 18.099997);
	PlayerTextDrawTextSize(playerid, table_TD[playerid][14], 160.000000, 90.000000);
	PlayerTextDrawAlignment(playerid, table_TD[playerid][14], 0);
	PlayerTextDrawColor(playerid, table_TD[playerid][14], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, table_TD[playerid][14], 1);
	PlayerTextDrawBoxColor(playerid, table_TD[playerid][14], 0x30234066);
	PlayerTextDrawSetShadow(playerid, table_TD[playerid][14], 1);
	PlayerTextDrawSetOutline(playerid, table_TD[playerid][14], 0);
	PlayerTextDrawBackgroundColor(playerid, table_TD[playerid][14], 0x000000FF);
	PlayerTextDrawFont(playerid, table_TD[playerid][14], 1);
	PlayerTextDrawSetProportional(playerid, table_TD[playerid][14], 1);
	PlayerTextDrawSetSelectable(playerid, table_TD[playerid][14], 0);

	table_TD[playerid][13] = CreatePlayerTextDraw(playerid, 90.000000, 180.000000, "BONES");
	PlayerTextDrawLetterSize(playerid, table_TD[playerid][13], 0.310000, 1.299998);
	PlayerTextDrawTextSize(playerid, table_TD[playerid][13], 160.000000, 140.000000);
	PlayerTextDrawAlignment(playerid, table_TD[playerid][13], 2);
	PlayerTextDrawColor(playerid, table_TD[playerid][13], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, table_TD[playerid][13], 1);
	PlayerTextDrawBoxColor(playerid, table_TD[playerid][13], 0x201C25BB);
	PlayerTextDrawSetShadow(playerid, table_TD[playerid][13], 0);
	PlayerTextDrawSetOutline(playerid, table_TD[playerid][13], 0);
	PlayerTextDrawBackgroundColor(playerid, table_TD[playerid][13], 0x000000FF);
	PlayerTextDrawFont(playerid, table_TD[playerid][13], 2);
	PlayerTextDrawSetProportional(playerid, table_TD[playerid][13], 1);
	PlayerTextDrawSetSelectable(playerid, table_TD[playerid][13], 0);

	table_TD[playerid][12] = CreatePlayerTextDraw(playerid, 90.000000, 293.000000, "_");
	PlayerTextDrawLetterSize(playerid, table_TD[playerid][12], 0.310000, 2.400000);
	PlayerTextDrawTextSize(playerid, table_TD[playerid][12], 25.000000, 140.000000);
	PlayerTextDrawAlignment(playerid, table_TD[playerid][12], 2);
	PlayerTextDrawColor(playerid, table_TD[playerid][12], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, table_TD[playerid][12], 1);
	PlayerTextDrawBoxColor(playerid, table_TD[playerid][12], 0x201C25BB);
	PlayerTextDrawSetShadow(playerid, table_TD[playerid][12], 0);
	PlayerTextDrawSetOutline(playerid, table_TD[playerid][12], 0);
	PlayerTextDrawBackgroundColor(playerid, table_TD[playerid][12], 0x000000FF);
	PlayerTextDrawFont(playerid, table_TD[playerid][12], 2);
	PlayerTextDrawSetProportional(playerid, table_TD[playerid][12], 1);
	PlayerTextDrawSetSelectable(playerid, table_TD[playerid][12], 1);

	table_TD[playerid][11] = CreatePlayerTextDraw(playerid, 20.000000, 195.000000, "_");
	PlayerTextDrawLetterSize(playerid, table_TD[playerid][11], 0.310000, -0.400000);
	PlayerTextDrawTextSize(playerid, table_TD[playerid][11], 160.000000, 141.000000);
	PlayerTextDrawAlignment(playerid, table_TD[playerid][11], 0);
	PlayerTextDrawColor(playerid, table_TD[playerid][11], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, table_TD[playerid][11], 1);
	PlayerTextDrawBoxColor(playerid, table_TD[playerid][11], 0xFFFFFFBB);
	PlayerTextDrawSetShadow(playerid, table_TD[playerid][11], 0);
	PlayerTextDrawSetOutline(playerid, table_TD[playerid][11], 0);
	PlayerTextDrawBackgroundColor(playerid, table_TD[playerid][11], 0x000000FF);
	PlayerTextDrawFont(playerid, table_TD[playerid][11], 2);
	PlayerTextDrawSetProportional(playerid, table_TD[playerid][11], 1);
	PlayerTextDrawSetSelectable(playerid, table_TD[playerid][11], 0);

	table_TD[playerid][10] = CreatePlayerTextDraw(playerid, 20.000000, 293.000000, "_");
	PlayerTextDrawLetterSize(playerid, table_TD[playerid][10], 0.310000, -0.400000);
	PlayerTextDrawTextSize(playerid, table_TD[playerid][10], 160.000000, 141.000000);
	PlayerTextDrawAlignment(playerid, table_TD[playerid][10], 0);
	PlayerTextDrawColor(playerid, table_TD[playerid][10], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, table_TD[playerid][10], 1);
	PlayerTextDrawBoxColor(playerid, table_TD[playerid][10], 0xFFFFFFBB);
	PlayerTextDrawSetShadow(playerid, table_TD[playerid][10], 0);
	PlayerTextDrawSetOutline(playerid, table_TD[playerid][10], 0);
	PlayerTextDrawBackgroundColor(playerid, table_TD[playerid][10], 0x000000FF);
	PlayerTextDrawFont(playerid, table_TD[playerid][10], 2);
	PlayerTextDrawSetProportional(playerid, table_TD[playerid][10], 1);
	PlayerTextDrawSetSelectable(playerid, table_TD[playerid][10], 0);

	table_TD[playerid][9] = CreatePlayerTextDraw(playerid, 46.000000, 176.000000, "Bone");
	PlayerTextDrawLetterSize(playerid, table_TD[playerid][9], 0.500000, 1.000000);
	PlayerTextDrawTextSize(playerid, table_TD[playerid][9], 30.000000, 20.000000);
	PlayerTextDrawAlignment(playerid, table_TD[playerid][9], 0);
	PlayerTextDrawColor(playerid, table_TD[playerid][9], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, table_TD[playerid][9], 1);
	PlayerTextDrawBoxColor(playerid, table_TD[playerid][9], 0xFFFFFF00);
	PlayerTextDrawSetShadow(playerid, table_TD[playerid][9], 2);
	PlayerTextDrawSetOutline(playerid, table_TD[playerid][9], 1);
	PlayerTextDrawBackgroundColor(playerid, table_TD[playerid][9], 0xFFFFFF00);
	PlayerTextDrawFont(playerid, table_TD[playerid][9], 5);
	PlayerTextDrawSetProportional(playerid, table_TD[playerid][9], 1);
	PlayerTextDrawSetSelectable(playerid, table_TD[playerid][9], 0);
	PlayerTextDrawSetPreviewModel(playerid, table_TD[playerid][9], 1851);
	PlayerTextDrawSetPreviewRot(playerid, table_TD[playerid][9], -20.000000, 0.000000, 20.000000, 1.500000);

	format(fm,sizeof(fm),"PLAYERS: ~r~~h~%d/4",table_players_amount[table_id]);
	table_TD[playerid][8] = CreatePlayerTextDraw(playerid, 28.000000, 195.000000, fm);
	PlayerTextDrawLetterSize(playerid, table_TD[playerid][8], 0.330000, 1.300000);
	PlayerTextDrawTextSize(playerid, table_TD[playerid][8], 220.000000, 53.000000);
	PlayerTextDrawAlignment(playerid, table_TD[playerid][8], 0);
	PlayerTextDrawColor(playerid, table_TD[playerid][8], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, table_TD[playerid][8], 1);
	PlayerTextDrawBoxColor(playerid, table_TD[playerid][8], 0xFFFFFF00);
	PlayerTextDrawSetShadow(playerid, table_TD[playerid][8], 0);
	PlayerTextDrawSetOutline(playerid, table_TD[playerid][8], 0);
	PlayerTextDrawBackgroundColor(playerid, table_TD[playerid][8], 0x000000FF);
	PlayerTextDrawFont(playerid, table_TD[playerid][8], 2);
	PlayerTextDrawSetProportional(playerid, table_TD[playerid][8], 1);
	PlayerTextDrawSetSelectable(playerid, table_TD[playerid][8], 0);

	table_TD[playerid][7] = CreatePlayerTextDraw(playerid, 24.000000, 237.000000, "_");
	PlayerTextDrawLetterSize(playerid, table_TD[playerid][7], 0.200000, 1.199998);
	PlayerTextDrawTextSize(playerid, table_TD[playerid][7], 158.000000, 140.000000);
	PlayerTextDrawAlignment(playerid, table_TD[playerid][7], 0);
	PlayerTextDrawColor(playerid, table_TD[playerid][7], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, table_TD[playerid][7], 1);
	PlayerTextDrawBoxColor(playerid, table_TD[playerid][7], 0xFFFFFF00);
	PlayerTextDrawSetShadow(playerid, table_TD[playerid][7], 0);
	PlayerTextDrawSetOutline(playerid, table_TD[playerid][7], 0);
	PlayerTextDrawBackgroundColor(playerid, table_TD[playerid][7], 0x000000FF);
	PlayerTextDrawFont(playerid, table_TD[playerid][7], 2);
	PlayerTextDrawSetProportional(playerid, table_TD[playerid][7], 1);
	PlayerTextDrawSetSelectable(playerid, table_TD[playerid][7], 0);

	table_TD[playerid][6] = CreatePlayerTextDraw(playerid, 30.000000, 235.000000, "_");
	PlayerTextDrawLetterSize(playerid, table_TD[playerid][6], 0.310000, -0.400000);
	PlayerTextDrawTextSize(playerid, table_TD[playerid][6], 150.000000, 141.000000);
	PlayerTextDrawAlignment(playerid, table_TD[playerid][6], 0);
	PlayerTextDrawColor(playerid, table_TD[playerid][6], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, table_TD[playerid][6], 1);
	PlayerTextDrawBoxColor(playerid, table_TD[playerid][6], 0xFFFFFF55);
	PlayerTextDrawSetShadow(playerid, table_TD[playerid][6], 0);
	PlayerTextDrawSetOutline(playerid, table_TD[playerid][6], 0);
	PlayerTextDrawBackgroundColor(playerid, table_TD[playerid][6], 0x000000FF);
	PlayerTextDrawFont(playerid, table_TD[playerid][6], 2);
	PlayerTextDrawSetProportional(playerid, table_TD[playerid][6], 1);
	PlayerTextDrawSetSelectable(playerid, table_TD[playerid][6], 0);

	table_TD[playerid][5] = CreatePlayerTextDraw(playerid, 90.000000, 293.000000, "BET");
	PlayerTextDrawLetterSize(playerid, table_TD[playerid][5], 0.310000, 2.299999);
	PlayerTextDrawTextSize(playerid, table_TD[playerid][5], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, table_TD[playerid][5], 2);
	PlayerTextDrawColor(playerid, table_TD[playerid][5], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, table_TD[playerid][5], 0);
	PlayerTextDrawBoxColor(playerid, table_TD[playerid][5], 0x80808080);
	PlayerTextDrawSetShadow(playerid, table_TD[playerid][5], 0);
	PlayerTextDrawSetOutline(playerid, table_TD[playerid][5], 0);
	PlayerTextDrawBackgroundColor(playerid, table_TD[playerid][5], 0x000000FF);
	PlayerTextDrawFont(playerid, table_TD[playerid][5], 2);
	PlayerTextDrawSetProportional(playerid, table_TD[playerid][5], 1);
	PlayerTextDrawSetSelectable(playerid, table_TD[playerid][5], 0);

	table_TD[playerid][4] = CreatePlayerTextDraw(playerid, 90.000000, 321.000000, "_");
	PlayerTextDrawLetterSize(playerid, table_TD[playerid][4], 0.310000, 2.400000);
	PlayerTextDrawTextSize(playerid, table_TD[playerid][4], 25.000000, 140.000000);
	PlayerTextDrawAlignment(playerid, table_TD[playerid][4], 2);
	PlayerTextDrawColor(playerid, table_TD[playerid][4], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, table_TD[playerid][4], 1);
	PlayerTextDrawBoxColor(playerid, table_TD[playerid][4], 0x201C25BB);
	PlayerTextDrawSetShadow(playerid, table_TD[playerid][4], 0);
	PlayerTextDrawSetOutline(playerid, table_TD[playerid][4], 0);
	PlayerTextDrawBackgroundColor(playerid, table_TD[playerid][4], 0x000000FF);
	PlayerTextDrawFont(playerid, table_TD[playerid][4], 2);
	PlayerTextDrawSetProportional(playerid, table_TD[playerid][4], 1);
	PlayerTextDrawSetSelectable(playerid, table_TD[playerid][4], 1);

	table_TD[playerid][3] = CreatePlayerTextDraw(playerid, 20.000000, 319.000000, "_");
	PlayerTextDrawLetterSize(playerid, table_TD[playerid][3], 0.310000, -0.400000);
	PlayerTextDrawTextSize(playerid, table_TD[playerid][3], 160.000000, 141.000000);
	PlayerTextDrawAlignment(playerid, table_TD[playerid][3], 0);
	PlayerTextDrawColor(playerid, table_TD[playerid][3], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, table_TD[playerid][3], 1);
	PlayerTextDrawBoxColor(playerid, table_TD[playerid][3], 0xFFFFFFBB);
	PlayerTextDrawSetShadow(playerid, table_TD[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, table_TD[playerid][3], 0);
	PlayerTextDrawBackgroundColor(playerid, table_TD[playerid][3], 0x000000FF);
	PlayerTextDrawFont(playerid, table_TD[playerid][3], 2);
	PlayerTextDrawSetProportional(playerid, table_TD[playerid][3], 1);
	PlayerTextDrawSetSelectable(playerid, table_TD[playerid][3], 0);

	table_TD[playerid][2] = CreatePlayerTextDraw(playerid, 90.000000, 319.000000, "EXIT");
	PlayerTextDrawLetterSize(playerid, table_TD[playerid][2], 0.310000, 2.299998);
	PlayerTextDrawTextSize(playerid, table_TD[playerid][2], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, table_TD[playerid][2], 2);
	PlayerTextDrawColor(playerid, table_TD[playerid][2], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, table_TD[playerid][2], 0);
	PlayerTextDrawBoxColor(playerid, table_TD[playerid][2], 0x80808080);
	PlayerTextDrawSetShadow(playerid, table_TD[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, table_TD[playerid][2], 0);
	PlayerTextDrawBackgroundColor(playerid, table_TD[playerid][2], 0x000000FF);
	PlayerTextDrawFont(playerid, table_TD[playerid][2], 2);
	PlayerTextDrawSetProportional(playerid, table_TD[playerid][2], 1);
	PlayerTextDrawSetSelectable(playerid, table_TD[playerid][2], 0);

	format(fm,sizeof(fm),"BET: ~g~~h~~h~%d CHIPS",table_bet_amount[table_id]);
	table_TD[playerid][1] = CreatePlayerTextDraw(playerid, 28.000000, 207.000000, fm);
	PlayerTextDrawLetterSize(playerid, table_TD[playerid][1], 0.330000, 1.300000);
	PlayerTextDrawTextSize(playerid, table_TD[playerid][1], 220.000000, 53.000000);
	PlayerTextDrawAlignment(playerid, table_TD[playerid][1], 0);
	PlayerTextDrawColor(playerid, table_TD[playerid][1], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, table_TD[playerid][1], 1);
	PlayerTextDrawBoxColor(playerid, table_TD[playerid][1], 0xFFFFFF00);
	PlayerTextDrawSetShadow(playerid, table_TD[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, table_TD[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid, table_TD[playerid][1], 0x000000FF);
	PlayerTextDrawFont(playerid, table_TD[playerid][1], 2);
	PlayerTextDrawSetProportional(playerid, table_TD[playerid][1], 1);
	PlayerTextDrawSetSelectable(playerid, table_TD[playerid][1], 0);

	format(fm,sizeof(fm),"YOUR CHIPS: ~b~~h~~h~%d",pData[playerid][casino_amount]);
	table_TD[playerid][0] = CreatePlayerTextDraw(playerid, 28.000000, 219.000000, fm);
	PlayerTextDrawLetterSize(playerid, table_TD[playerid][0], 0.330000, 1.300000);
	PlayerTextDrawTextSize(playerid, table_TD[playerid][0], 220.000000, 53.000000);
	PlayerTextDrawAlignment(playerid, table_TD[playerid][0], 0);
	PlayerTextDrawColor(playerid, table_TD[playerid][0], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, table_TD[playerid][0], 1);
	PlayerTextDrawBoxColor(playerid, table_TD[playerid][0], 0xFFFFFF00);
	PlayerTextDrawSetShadow(playerid, table_TD[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, table_TD[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid, table_TD[playerid][0], 0x000000FF);
	PlayerTextDrawFont(playerid, table_TD[playerid][0], 2);
	PlayerTextDrawSetProportional(playerid, table_TD[playerid][0], 1);
	PlayerTextDrawSetSelectable(playerid, table_TD[playerid][0], 0);
}
stock clear_crhomeprocess(playerid) {
	for(new i = 0; i < 3; i ++) createhome_posenter[playerid][i] = 0.0;
	for(new i = 0; i < 3; i ++) createhome_posexit[playerid][i] = 0.0;
	for(new i = 0; i < 4; i ++) createhome_carpos[playerid][i] = 0.0;
	createhome_interiorid[playerid] = 0;
	createhome_classid[playerid] = 0;
	return createhome_price[playerid] = 0;
}
stock VodPrava(carid) {
	switch (GetVehicleModel(carid)) {
	case 400..416,418..424,426..429,431..445,449,451,455,456,458,459,461: return 1;
	case 463,466..468,470,471,474,475,477..480,482,483,485,486,489..492,494..496,498..508: return 1;
	case 514..518,521..531,533..537,539..547,549..551,554..562,564..568,572..576,578..583,585..589,596..605,609: return 1;
	}
	return 0;
}

stock Megaphone(carid) {
	switch (GetVehicleModel(carid)) {
		case 425,426,427,433,470,490,497,500,523,528,541,548,560,563,596,597,598,599,601: return 1;
	}
	return 0;
}
LoadPickups() {
	#include <loadpickups>
}
stock Load3DTexts() {
	#include <load3dtexts>
	for(new i = 0x0; i != sizeof(atm_position); i ++) 
		CreateDynamic3DTextLabel("√ç√†√¶√¨√®√≤√• ALT", 0x00CC00AA, atm_position[i][0], atm_position[i][1], atm_position[i][2], 7.0);

	CreateTextMebel("√ä√†√∞√≤√®√≠√†",2500,2287, 2496.429932, 44.835361, 1056.710205);
	CreateTextMebel("√è√≥√¥√®√™ √§√´√ø √™√Æ√¶√†√≠√Æ√£√Æ √§√®√¢√†√≠√†",6000,2293, 2496.471436, 45.768803, 1055.028564);
	CreateTextMebel("√ä√Æ√¶√†√≠√ª√© √§√®√¢√†√≠",29000,2290, 2496.070313, 43.848808, 1055.028564);
	CreateTextMebel("√ä√∞√Æ√¢√†√≤√º",33000,1803, 2488.641113, 46.690670, 1055.077026);
	CreateTextMebel("√ä√†√∞√≤√®√≠√†",1500,2268, 2489.728027, 43.698803, 1056.729370);
	CreateTextMebel("√ä√Æ√¥√•√©√≠√ª√© √±√≤√Æ√´√®√™",3300,1816, 2487.088623, 44.018829, 1055.088257);
	CreateTextMebel("√ä√†√∞√≤√®√≠√†",1500,2255, 2486.522217, 43.688793, 1056.659302);
	CreateTextMebel("√ä√†√∞√≤√®√≠√†",1500,2271, 2485.788574, 44.707611, 1056.689331);
	CreateTextMebel("√ä√∞√•√±√´√Æ",9000,1735, 2485.424805, 45.515217, 1055.088867);
	CreateTextMebel("√í√Æ√∞√∏√•√∞",5500,2069, 2488.457764, 68.725792, 1055.142334);
	CreateTextMebel("√í√Æ√∞√∏√•√∞",5500,2069, 2482.598633, 61.406414, 1055.142334);
	CreateTextMebel("√í√Æ√∞√∏√•√∞",5500,2069, 2482.731445, 77.086029, 1055.142334);
	CreateTextMebel("√í√Æ√∞√∏√•√∞",5500,2069, 2493.156250, 43.835567, 1055.142334);
	CreateTextMebel("√í√Æ√∞√∏√•√∞",5500,2069, 2459.697754, 72.766403, 1055.142334);
	CreateTextMebel("√ä√Æ√¶√†√≠√ª√© √¨√Æ√§√≥√´√º √§√´√ø √§√®√¢√†√≠√†",9700,2291, 2493.172852, 44.158718, 1055.028564);
	CreateTextMebel("√ä√Æ√¶√†√≠√ª√© √¨√Æ√§√≥√´√º √§√´√ø √§√®√¢√†√≠√†",9700,2292, 2492.700439, 45.768791, 1055.028564);
	CreateTextMebel("√ä√†√∞√≤√®√≠√†",2000,2284, 2492.895752, 44.951969, 1056.699585);
	CreateTextMebel("√ä√†√∞√≤√®√≠√†",2500,2286, 2480.909668, 43.228786, 1057.069702);
	CreateTextMebel("√ä√†√∞√≤√®√≠√†",2000,2278, 2483.299316, 45.098461, 1056.908936);
	CreateTextMebel("√ä√†√∞√≤√®√≠√†",1500,2266, 2482.787842, 69.274124, 1056.992310);
	CreateTextMebel("√ä√†√∞√≤√®√≠√†",1500,2266, 2482.787842, 76.174103, 1056.992310);
	CreateTextMebel("√ä√†√∞√≤√®√≠√†",1500,2266, 2482.161865, 75.303238, 1053.813599);
	CreateTextMebel("√ä√†√∞√≤√®√≠√†",1500,2266, 2478.543213, 44.903034, 1056.789307);
	CreateTextMebel("√ä√†√¨√®√≠",12500,11725, 2483.579834, 44.935627, 1055.478760);
	CreateTextMebel("√ë√≤√≥√´",2100,2123, 2482.869385, 43.637920, 1055.728516);
	CreateTextMebel("√ä√Æ√¶√†√≠√ª√© √§√®√¢√†√≠",27000,1713, 2481.747070, 43.778866, 1055.068237);
	CreateTextMebel("√ä√Æ√¥√•√©√≠√ª√© √±√≤√Æ√´√®√™",3600,2234, 2481.386719, 45.882126, 1055.068604);
	CreateTextMebel("√ä√∞√•√±√´√Æ √™√Æ√¶√†√≠√Æ√• \"√ã√æ√™√±\"",10500,1708, 2478.806396, 44.828869, 1055.078247);
	CreateTextMebel("√ä√†√∞√≤√®√≠√†",1700,2277, 2476.082520, 45.020832, 1056.958618);
	CreateTextMebel("√å√≥√ß√ª√™√†√´√º√≠√ª√© √∂√•√≠√≤√∞",6000,2104, 2476.582520, 44.805683, 1055.088501);
	CreateTextMebel("√í√•√´√•√¢√®√ß√Æ√∞ \"√å√Æ√§√•√∞√≠\"",3000,2224, 2485.335938, 72.016075, 1054.693481);
	CreateTextMebel("√í√•√´√•√¢√®√ß√Æ√∞ \"√å√Æ√§√•√∞√≠\"",3000,2224, 2476.047852, 44.428471, 1055.078369);
	CreateTextMebel("√ä√†√∞√≤√®√≠√†",1500,2256, 2473.612061, 43.288815, 1057.049072);
	CreateTextMebel("√ä√†√∞√≤√®√≠√†",1500,2256, 2444.852051, 43.288815, 1057.049072);
	CreateTextMebel("√ä√†√∞√≤√®√≠√†",1700,2276, 2471.081299, 44.921814, 1056.618774);
	CreateTextMebel("√ä√†√∞√≤√®√≠√†",1700,2276, 2450.866211, 68.758797, 1056.689087);
	CreateTextMebel("√ä√†√∞√≤√®√≠√†",1700,2276, 2447.835205, 68.758797, 1056.689087);
	CreateTextMebel("√ë√≤√≥√´ √§√´√ø √Æ√°√•√§√•√≠√≠√Æ√£√Æ √±√≤√Æ√´√†",1800,2724, 2470.871582, 45.472599, 1055.598877);
	CreateTextMebel("√ä√∞√†√±√≠√ª√© √§√®√¢√†√≠ \"√å√Æ√§√•√∞√≠\"",25000,11717, 2473.604492, 43.828808, 1055.078369);
	CreateTextMebel("√ä√Æ√¥√•√©√≠√ª√© √±√≤√Æ√´√®√™",3700,1822, 2484.135498, 70.879120, 1055.104614);
	CreateTextMebel("√ä√Æ√¥√•√©√≠√ª√© √±√≤√Æ√´√®√™",3700,1822, 2473.069580, 44.918827, 1055.078247);
	CreateTextMebel("√Ç√®√§√•√Æ√¨√†√£√≠√®√≤√Æ√¥√Æ√≠",1500,1782, 2471.748291, 43.718838, 1055.619019);
	CreateTextMebel("√ä√Æ√¥√•√©√≠√ª√© √±√≤√Æ√´√®√™",3900,2236, 2471.224365, 43.172115, 1055.068604);
	CreateTextMebel("√è√∞√Æ√®√£√∞√ª√¢√†√≤√•√´√º",4100,2099, 2468.191162, 43.188839, 1055.118286);
	CreateTextMebel("√ä√†√∞√≤√®√≠√†",1500,2273, 2466.462891, 43.688797, 1057.009399);
	CreateTextMebel("√ä√∞√Æ√¢√†√≤√º",31500,1797, 2466.971924, 46.691090, 1055.089844);
	CreateTextMebel("√ä√Æ√¨√Æ√§",6500,1741, 2465.197998, 44.621243, 1055.092651);
	CreateTextMebel("√å√†√£√≠√®√≤√Æ√¥√Æ√≠",3800,2226, 2464.751709, 43.478855, 1056.209106);
	CreateTextMebel("√ë√≤√≥√´",2000,1720, 2464.022461, 45.672123, 1055.078857);
	CreateTextMebel("√ä√†√∞√≤√®√≠√†",1500,2274, 2464.182617, 45.056923, 1056.928955);
	CreateTextMebel("√å√†√£√≠√®√≤√Æ√¥√Æ√≠",2800,2102, 2461.942139, 44.738838, 1056.339355);
	CreateTextMebel("√ä√†√∞√≤√®√≠√†",2000,2281, 2460.962158, 43.678818, 1056.789307);
	CreateTextMebel("√ä√†√∞√≤√®√≠√†",2000,2283, 2459.541992, 43.258785, 1057.159180);
	CreateTextMebel("√ä√†√∞√≤√®√≠√†",2000,2282, 2458.002197, 43.688793, 1056.829346);
	CreateTextMebel("√ä√Æ√¨√Æ√§",7000,1743, 2460.801025, 45.020149, 1055.078491);
	CreateTextMebel("√ä√∞√Æ√¢√†√≤√º",29000,1802, 2460.025635, 46.783672, 1055.090698);
	CreateTextMebel("√ä√Æ√¥√•√©√≠√ª√© √±√≤√Æ√´√®√™",3550,2083, 2457.362305, 43.058826, 1055.098267);
	CreateTextMebel("√ä√†√∞√≤√®√≠√†",2500,2289, 2449.389893, 44.840183, 1056.859497);
	CreateTextMebel("√ä√∞√•√±√´√Æ",7900,1769, 2454.459473, 44.992870, 1055.078491);
	CreateTextMebel("√ä√∞√•√±√´√Æ",7900,1769, 2450.583008, 44.211243, 1055.078491);
	CreateTextMebel("√è√´√†√ß√¨√† √°√Æ√´√º√∏√†√ø",50000,19786, 2489.458252, 68.210342, 1056.535767);
	CreateTextMebel("√è√´√†√ß√¨√† √°√Æ√´√º√∏√†√ø",50000,19786, 2484.747314, 68.210342, 1056.535767);
	CreateTextMebel("√è√´√†√ß√¨√† √°√Æ√´√º√∏√†√ø",50000,19786, 2482.195801, 72.790337, 1055.995728);
	CreateTextMebel("√è√´√†√ß√¨√† √°√Æ√´√º√∏√†√ø",50000,19786, 2482.195801, 72.790337, 1057.265869);
	CreateTextMebel("√è√´√†√ß√¨√† √°√Æ√´√º√∏√†√ø",50000,19786, 2476.481445, 68.022148, 1057.008789);
	CreateTextMebel("√è√´√†√ß√¨√† √°√Æ√´√º√∏√†√ø",50000,19786, 2454.127686, 68.100342, 1056.595825);
	CreateTextMebel("√è√´√†√ß√¨√† √°√Æ√´√º√∏√†√ø",50000,19786, 2448.976807, 68.100342, 1056.595825);
	CreateTextMebel("√è√´√†√ß√¨√† √°√Æ√´√º√∏√†√ø",50000,19786, 2452.226563, 43.160374, 1056.996094);
	CreateTextMebel("√Ñ√®√¢√†√≠",16900,1768, 2453.218506, 43.748829, 1055.128540);
	CreateTextMebel("√ä√Æ√¥√•√©√≠√ª√© √±√≤√Æ√´√®√™",3800,2126, 2451.621094, 45.228882, 1055.098267);
	CreateTextMebel("√í√•√´√•√¢√®√ß√Æ√∞",4000,1752, 2447.621582, 45.168385, 1055.598999);
	CreateTextMebel("√ä√Æ√¥√•√©√≠√ª√© √±√≤√Æ√´√®√™",3100,1819, 2446.850342, 44.658836, 1055.118286);
	CreateTextMebel("√Ñ√®√¢√†√≠",14500,1760, 2445.797363, 43.778885, 1055.118530);
	CreateTextMebel("√ä√†√∞√≤√®√≠√†",2000,2280, 2442.391113, 44.951591, 1056.769531);
	CreateTextMebel("√ä√∞√•√±√´√Æ",6500,1755, 2442.515625, 44.707355, 1055.112671);
	CreateTextMebel("√ä√Æ√¥√•√©√≠√ª√© √±√≤√Æ√´√®√™",3400,1820, 2442.339355, 43.528820, 1055.128296);
	CreateTextMebel("√å√≥√ß√ª√™√†√´√º√≠√ª√© √∂√•√≠√≤√∞",4800,2101, 2442.865234, 44.112865, 1055.628662);
	CreateTextMebel("√ä√∞√•√±√´√Æ",5100,1767, 2438.715332, 48.008896, 1055.078491);
	CreateTextMebel("√Å√Æ√´√º√∏√Æ√© √™√∞√†√±√≠√ª√© √±√≤√Æ√´",5700,2762, 2440.722412, 51.019901, 1055.544556);
	CreateTextMebel("√ä√∞√Æ√¢√†√≤√º",28500,2090, 2441.553711, 53.798817, 1055.118530);
	CreateTextMebel("√ä√∞√Æ√¢√†√≤√º",28500,1745, 2441.653076, 56.762142, 1055.134277);
	CreateTextMebel("√ä√∞√Æ√¢√†√≤√º",26500,1798, 2441.656738, 60.098808, 1055.118530);
	CreateTextMebel("√ä√∞√Æ√¢√†√≤√º",28500,1799, 2441.655762, 63.368843, 1055.168579);
	CreateTextMebel("√ä√∞√Æ√¢√†√≤√º",19500,1795, 2441.775146, 66.508789, 1055.128540);
	CreateTextMebel("√ä√∞√Æ√¢√†√≤√º",28900,1794, 2441.635742, 69.748833, 1055.148560);
	CreateTextMebel("√ä√∞√Æ√¢√†√≤√º",20100,1796, 2441.685059, 73.258820, 1055.118530);
	CreateTextMebel("√Ñ√®√¢√†√≠",13500,1757, 2438.726318, 75.628845, 1055.108521);
	CreateTextMebel("√ä√∞√•√±√´√Æ",5500,1758, 2438.727051, 78.228874, 1055.078491);
	CreateTextMebel("√ê√•√≤√∞√Æ-√≤√•√´√•√¢√®√ß√Æ√∞",3500,1429, 2443.396729, 82.657349, 1056.089600);
	CreateTextMebel("√é√°√•√§√•√≠√≠√ª√© √±√≤√Æ√´",7200,2031, 2443.441895, 82.188820, 1055.058228);
	CreateTextMebel("√ë√≤√Æ√´",4800,1433, 2445.978516, 82.701149, 1055.293579);
	CreateTextMebel("√ë√≤√Æ√´",6800,2117, 2448.709229, 82.698830, 1055.118530);
	CreateTextMebel("√é√¥√®√±√≠√ª√© √±√≤√Æ√´",5900,2206, 2451.570068, 82.708839, 1055.118652);
	CreateTextMebel("√í√•√´√•√¢√®√ß√Æ√∞",4000,2318, 2455.727783, 82.888802, 1056.339355);
	CreateTextMebel("√ä√Æ√¥√•√©√≠√ª√© √±√≤√Æ√´√®√™",3650,2084, 2455.480469, 82.888847, 1055.138306);
	CreateTextMebel("√í√•√´√•√¢√®√ß√Æ√∞",3700,2648, 2458.806885, 82.798813, 1056.179321);
	CreateTextMebel("√ë√≤√≥√´ √§√´√ø √Æ√°√•√§√•√≠√≠√Æ√£√Æ √±√≤√Æ√´√†",7500,2080, 2458.301025, 82.738808, 1055.118286);
	CreateTextMebel("√í√•√´√•√¢√®√ß√Æ√∞",4600,1791, 2462.117432, 83.018814, 1055.568726);
	CreateTextMebel("√ä√Æ√¥√•√©√≠√ª√© √±√≤√Æ√´√®√™",3800,1823, 2461.529785, 82.208824, 1055.098267);
	CreateTextMebel("√ë√≤√Æ√´",6900,2109, 2465.360107, 82.682106, 1055.489258);
	CreateTextMebel("√ë√≤√Æ√´",6500,2112, 2468.478760, 82.718796, 1055.528687);
	CreateTextMebel("√é√°√•√§√•√≠√≠√ª√© √±√≤√Æ√´",11000,2030, 2471.630859, 82.758820, 1055.528687);
	CreateTextMebel("√ä√Æ√¥√•√©√≠√ª√© √±√≤√Æ√´√®√™",3500,2082, 2474.442871, 82.368820, 1055.108398);
	CreateTextMebel("√í√•√´√•√¢√®√ß√Æ√∞",4200,2312, 2478.048340, 82.848778, 1055.989258);
	CreateTextMebel("√ä√Æ√¥√•√©√≠√ª√© √±√≤√Æ√´√®√™",2500,1818, 2477.548340, 82.308838, 1055.108276);
	CreateTextMebel("√ä√Æ√¥√•√©√≠√ª√© √±√≤√Æ√´√®√™",4000,2311, 2480.563477, 82.732132, 1055.128662);
	CreateTextMebel("√ë√≤√Æ√´",8000,19474, 2484.444092, 82.262138, 1055.658691);
	CreateTextMebel("√ä√Æ√¥√•√©√≠√ª√© √±√≤√Æ√´√®√™",3600,2314, 2487.774170, 81.542099, 1055.118652);
	CreateTextMebel("√í√≥√¨√°√†",5600,2208, 2490.961182, 80.948769, 1055.128296);
	CreateTextMebel("√é√¥√®√±√≠√ª√© √±√≤√Æ√´",6000,2207, 2493.189941, 82.258835, 1055.108276);
	CreateTextMebel("√Ñ√®√¢√†√≠",12700,1761, 2500.098877, 78.368401, 1055.105103);
	CreateTextMebel("√ä√∞√•√±√´√Æ",5800,1762, 2500.098877, 78.368401, 1055.105103);
	CreateTextMebel("√Ñ√®√¢√†√≠",13300,1766, 2500.104248, 73.598396, 1055.084961);
	CreateTextMebel("√Ñ√¢√Æ√©√≠√Æ√© √§√®√¢√†√≠",16000,1712, 2489.676758, 59.378860, 1055.108276,1);
	CreateTextMebel("√ä√∞√•√±√´√Æ \"√ê√•√´√†√™√±\"",7200,1711, 2490.365234, 62.365952, 1055.058228,1);
	CreateTextMebel("√ä√Æ√¥√•√©√≠√ª√© √±√≤√Æ√´√®√™",2900,1817, 2488.388428, 60.398830, 1055.098267,1);
	CreateTextMebel("√ä√≠√®√¶√≠√ª√© √∏√™√†√¥",11500,1742, 2482.166504, 60.024616, 1055.101074);
	CreateTextMebel("√í√•√´√•√¥√Æ√≠ \"√ê√•√≤√∞√Æ\"",1200,11705, 2482.665527, 62.107124, 1055.798584);
	CreateTextMebel("√è√∞√®√™√∞√Æ√¢√†√≤√≠√†√ø √≤√≥√¨√°√Æ√∑√™√†",2500,1740, 2483.903809, 62.106506, 1055.052612);
	CreateTextMebel("√ä√∞√Æ√¢√†√≤√º",42000,11720, 2483.716553, 63.310966, 1055.108765);
	CreateTextMebel("√ä√†√∞√≤√®√≠√†",1500,2258, 2482.313232, 63.298782, 1057.379272);
	CreateTextMebel("√í√≥√¨√°√†",5200,2094, 2483.787354, 64.821465, 1055.100464);
	CreateTextMebel("√ä√†√∞√≤√®√≠√†",2000,2288, 2482.799561, 65.808792, 1056.889282);
	CreateTextMebel("√ä√†√∞√≤√®√≠√†",1500,2270, 2483.936035, 67.448814, 1056.839478);
	CreateTextMebel("√ä√Æ√¥√•√©√≠√ª√© √±√≤√Æ√´√®√™",3800,2086, 2483.150635, 69.088600, 1055.474731);
	CreateTextMebel("√è√∞√Æ√®√£√∞√ª√¢√†√≤√•√´√º",4200,2100, 2483.741211, 67.868835, 1055.108276);
	CreateTextMebel("√ä√∞√•√±√´√Æ-√™√†√∑√†√´√™√†",7500,11734, 2489.485840, 66.518806, 1055.138672);
	CreateTextMebel("√ë√≤√Æ√´",7900,2370, 2487.995117, 66.022118, 1055.048584);
	CreateTextMebel("√Ñ√®√¢√†√≠",10600,1763, 2487.753174, 68.857231, 1055.109131);
	CreateTextMebel("√Ç√®√§√•√Æ√¨√†√£√≠√®√≤√Æ√¥√Æ√≠",4900,1785, 2487.264404, 66.643204, 1055.995972);
	CreateTextMebel("√ä√†√∞√≤√®√≠√†",2000,2285, 2490.931152, 68.778793, 1057.029175);
	CreateTextMebel("√ä√∞√•√±√´√Æ",4100,1759, 2489.955811, 71.584641, 1055.109131);
	CreateTextMebel("√ä√∞√•√±√´√Æ",4100,1759, 2489.224854, 74.943398, 1055.109131);
	CreateTextMebel("√ë√≤√Æ√´",8500,2118, 2490.196777, 72.386398, 1055.093872);
	CreateTextMebel("√í√•√´√•√¥√Æ√≠",1500,19807, 2484.702148, 72.246117, 1055.959595);
	CreateTextMebel("√é√°√•√§√•√≠√≠√ª√© √±√≤√Æ√´",7000,2029, 2484.628906, 72.332558, 1055.111938);
	CreateTextMebel("√ë√≤√≥√´",2500,2124, 2483.191162, 73.288208, 1055.917603);
	CreateTextMebel("√ë√≤√•√∞√•√Æ√±√®√±√≤√•√¨√†",6500,2225, 2482.100830, 72.663445, 1055.114990);
	CreateTextMebel("√ç√†√±√≤√•√≠√≠√†√ø √Ø√Æ√´√™√†",2700,1744, 2482.272705, 73.280701, 1056.269897);
	CreateTextMebel("√é√°√•√§√•√≠√≠√ª√© √±√≤√Æ√´",5500,1737, 2478.027344, 73.414032, 1054.769653);
	CreateTextMebel("√í√Æ√∞√∏√•√∞",4500,2023, 2476.441895, 70.637024, 1055.071167);
	CreateTextMebel("√í√Æ√∞√∏√•√∞",4500,2023, 2476.441895, 75.097023, 1055.071167);
	CreateTextMebel("√ó¬∏√∞√≠√Æ√• √™√Æ√¶√†√≠√Æ√• √™√∞√•√±√´√Æ",8500,1704, 2475.646240, 72.444885, 1055.078613);
	CreateTextMebel("√ó¬∏√∞√≠√ª√© √™√Æ√¶√†√≠√ª√© √§√®√¢√†√≠",21000,1703, 2477.106934, 75.074898, 1055.078613);
	CreateTextMebel("√ó¬∏√∞√≠√ª√© √™√Æ√¶√†√≠√ª√© √§√®√¢√†√≠",21000,1703, 2479.057617, 70.774895, 1055.078613);
	CreateTextMebel("√ä√†√∞√≤√®√≠√†",1500,2254, 2482.048584, 69.775986, 1057.280640);
	CreateTextMebel("√è√´√†√ß√¨√† √±√∞√•√§√≠√ø√ø",30000,19787, 2480.507568, 68.205002, 1057.296265);
	CreateTextMebel("√ä√†√∞√≤√®√≠√†",1500,2259, 2479.613281, 67.448799, 1056.459595);
	CreateTextMebel("√ä√Æ√´√Æ√≠√™√† √™ √±√≤√•√∞√•√Æ√±√®√±√≤√•√¨√•",2000,2227, 2476.817383, 68.152069, 1055.138916);
	CreateTextMebel("√ä√≥√´√•√∞ √∑¬∏√∞√≠√ª√©",2200,2002, 2475.359863, 68.796745, 1055.112671);
	CreateTextMebel("√ä√≥√´√•√∞ √°√•√´√ª√©",2100,1808, 2472.022217, 67.802094, 1055.018311);
	CreateTextMebel("√Å√®√´√º√ø√∞√§√≠√ª√© √±√≤√Æ√´",44000,2964, 2473.355225, 70.333542, 1055.084351);
	CreateTextMebel("√í√∞√•√≥√£√Æ√´√º√≠√®√™ √§√´√ø √°√®√´√º√ø√∞S√≠",2000,2965, 2473.369629, 70.023735, 1056.002808);
	CreateTextMebel("√ì√≠√®√¢√•√∞√±√†√´√º√≠√ª√© √≤√∞√•√≠√†√¶¬∏√∞",14500,2628, 2473.520996, 65.252136, 1055.108154);
	CreateTextMebel("√Ç√•√´√Æ√≤√∞√•√≠√†√¶¬∏√∞",12500,2630, 2476.522949, 65.392105, 1055.118286);
	CreateTextMebel("√Å√•√£√Æ√¢√†√ø √§√Æ√∞√Æ√¶√™√†",12000,2627, 2479.521973, 65.102104, 1055.078125);
	CreateTextMebel("√ä√Æ√¥√•√©√≠√ª√© √±√≤√Æ√´√®√™",3600,2081, 2481.094482, 58.645454, 1055.098511);
	CreateTextMebel("√å√†√£√≠√®√≤√Æ√¥√Æ√≠",3000,2103, 2480.927490, 59.359394, 1055.548584);
	CreateTextMebel("√ä√Æ√¶√†√≠√ª√© √§√®√¢√†√≠",26500,1726, 2472.747559, 59.758873, 1055.058228);
	CreateTextMebel("√ä√Æ√¥√•√©√≠√ª√© √±√≤√Æ√´√®√™",2800,1814, 2474.866943, 60.288834, 1055.078247);
	CreateTextMebel("√ä√Æ√¶√†√≠√Æ√• √™√∞√•√±√´√Æ",9500,1727, 2475.854248, 62.321556, 1055.058228);
	CreateTextMebel("√ä√Æ√¶√†√≠√Æ√• √™√∞√•√±√´√Æ",9500,1727, 2476.076904, 59.898891, 1055.058228);
	CreateTextMebel("√Å√Æ√´√º√∏√Æ√© √Æ√°√•√§√•√≠√≠√ª√© √±√≤√Æ√´",9500,2357, 2462.767822, 64.988800, 1055.498779);
	CreateTextMebel("√ë√≤√≥√´ √§√´√ø √Æ√°√•√§√•√≠√≠√Æ√£√Æ √±√≤√Æ√´√†",2100,2079, 2465.680420, 60.028816, 1055.738892);
	CreateTextMebel("√ë√≤√≥√´ √§√´√ø √Æ√°√•√§√•√≠√≠√Æ√£√Æ √±√≤√Æ√´√†",2100,2079, 2464.099609, 61.328819, 1055.738892);
	CreateTextMebel("√ë√≤√≥√´ √§√´√ø √Æ√°√•√§√•√≠√≠√Æ√£√Æ √±√≤√Æ√´√†",1500,2788, 2461.873779, 60.108784, 1055.618896);
	CreateTextMebel("√ë√≤√≥√´ √§√´√ø √Æ√°√•√§√•√≠√≠√Æ√£√Æ √±√≤√Æ√´√†",1500,2788, 2459.943604, 59.758789, 1055.618896);
	CreateTextMebel("√ë√≤√≥√´ √§√´√ø √Æ√°√•√§√•√≠√≠√Æ√£√Æ √±√≤√Æ√´√†",1500,1739, 2465.546387, 64.958870, 1056.008789);
	CreateTextMebel("√ë√≤√≥√´ √§√´√ø √Æ√°√•√§√•√≠√≠√Æ√£√Æ √±√≤√Æ√´√†",1500,1739, 2460.096680, 64.958870, 1056.008789);
	CreateTextMebel("√é√°√•√§√•√≠√≠√ª√© √±√≤√Æ√´",6800,2032, 2460.891113, 59.408848, 1055.067993);
	CreateTextMebel("√ë√≤√≥√´ √§√´√ø √Æ√°√•√§√•√≠√≠√Æ√£√Æ √±√≤√Æ√´√†",1700,2776, 2460.854980, 61.468792, 1055.588867);
	CreateTextMebel("√ä√Æ√¥√•√¨√†√∏√®√≠√†",10000,11743, 2459.051758, 62.962105, 1056.078735);
	CreateTextMebel("√ä√†√∞√≤√®√≠√†",1500,2263, 2455.835449, 59.808807, 1056.929810);
	CreateTextMebel("√ä√†√∞√≤√®√≠√†",1500,2262, 2455.845947, 61.518780, 1056.879883);
	CreateTextMebel("√ä√†√∞√≤√®√≠√†",1500,2265, 2455.828125, 63.168797, 1056.849976);
	CreateTextMebel("√Ç√®√§√•√Æ√¨√†√£√≠√®√≤√Æ√¥√Æ√≠",1700,1788, 2456.008057, 61.488834, 1055.618774);
	CreateTextMebel("√ä√Æ√¥√•√©√≠√ª√© √±√≤√Æ√´√®√™",3500,1821, 2455.519775, 61.998817, 1055.038208);
	CreateTextMebel("√í√•√´√•√¢√®√ß√Æ√∞",4900,1792, 2456.369385, 61.568817, 1055.759033);
	CreateTextMebel("√Å√Æ√´√º√∏√Æ√© √§√®√¢√†√≠ \"√ä√Æ√¨√¥√Æ√∞√≤\"",32000,1710, 2461.008789, 67.490814, 1055.040771);
	CreateTextMebel("√ä√†√∞√≤√®√≠√†",1500,2260, 2460.654785, 67.588806, 1056.519165);
	CreateTextMebel("√ä√†√¨√®√≠",14000,11724, 2461.384766, 68.588814, 1055.628906);
	CreateTextMebel("√ä√†√∞√≤√®√≠√†",1500,2257, 2462.772949, 68.038818, 1056.699097);
	CreateTextMebel("√ä√≠√®√¶√≠√ª√© √∏√™√†√¥",15200,2204, 2456.308105, 66.758827, 1055.118286);
	CreateTextMebel("√ä√Æ√¥√•√©√≠√ª√© √±√≤√Æ√´√®√™",3200,1815, 2456.677002, 68.378761, 1055.108276);
	CreateTextMebel("√è√Æ√§√¢√•√±√≠√Æ√© √∏√™√†√¥ √§√´√ø √°√†√∞√†",5000,11688, 2456.114258, 68.762115, 1057.035645);
	CreateTextMebel("√è√Æ√§√¢√•√±√≠√Æ√© √∏√™√†√¥ √§√´√ø √°√†√∞√†",5000,11688, 2456.114258, 69.762093, 1057.039185);
	CreateTextMebel("√è√Æ√§√¢√•√±√≠√Æ√© √∏√™√†√¥ √§√´√ø √°√†√∞√†",5000,11688, 2454.853027, 68.492119, 1057.032227);
	CreateTextMebel("√í√•√´√•√¢√®√ß√Æ√∞",4500,1786, 2457.064453, 68.634262, 1055.588989);
	CreateTextMebel("√Ç√®√§√•√Æ√¨√†√£√≠√®√≤√Æ√¥√Æ√≠",1600,1783, 2457.459961, 69.107368, 1055.508545);
	CreateTextMebel("√í√≥√¨√°√† √≤√•√´√•√¢√®√ß√®√Æ√≠√≠√†√ø",5800,2093, 2466.151855, 69.104103, 1055.097290);
	CreateTextMebel("√ä√†√∞√≤√®√≠√†",1500,2264, 2465.037354, 67.568825, 1056.589111);
	CreateTextMebel("√ä√†√∞√≤√®√≠√†",1500,2269, 2464.607422, 68.768822, 1056.959595);
	CreateTextMebel("√É√Æ√´√Æ√¢√† √Æ√´√•√≠√ø (√≠√†√±√≤√•√≠√≠√†√ø)",2000,1736, 2461.416504, 68.618874, 1057.748291);
	CreateTextMebel("√ò√™√≥√∞√† √≤√®√£√∞√†",55000,1828, 2461.529541, 70.888855, 1055.108276);
	CreateTextMebel("√ä√∞√•√±√´√Æ",6300,1765, 2463.244385, 72.075340, 1055.078491);
	CreateTextMebel("√ä√∞√•√±√´√Æ",6300,1765, 2458.621338, 71.426605, 1055.078491);
	CreateTextMebel("√ä√†√∞√≤√®√≠√†",1700,2272, 2457.082520, 70.188835, 1057.019653);
	CreateTextMebel("√Ç√®√≤√∞√®√≠√†",15000,2078, 2456.810303, 72.428795, 1055.108276);
	CreateTextMebel("√Ñ√®√¢√†√≠",14300,1764, 2460.287109, 72.848862, 1055.098511);
	CreateTextMebel("√ä√†√∞√≤√®√≠√†",1500,2275, 2457.063721, 76.108810, 1057.079346);
	CreateTextMebel("√ë√≤√≥√´",1600,2120, 2461.537109, 76.008827, 1055.738892);
	CreateTextMebel("√ë√≤√≥√´",1600,2120, 2457.863037, 76.361137, 1055.738892);
	CreateTextMebel("√ë√≤√Æ√´",7350,2116, 2460.296143, 76.092133, 1055.068848);
	CreateTextMebel("√ã√†√¨√Ø√†",2000,2726, 2459.790771, 76.072113, 1056.209229);
	CreateTextMebel("√ë√≤√Æ√´",6750,2119, 2465.029297, 75.978867, 1055.068237);
	CreateTextMebel("√Ñ√®√¢√†√≠ \"√ã√æ√™√±\"",19500,1706, 2463.264893, 74.878860, 1054.998169);
	CreateTextMebel("√í√•√´√•√¢√®√ß√Æ√∞ √Ø√Æ√§√¢√•√±√≠√Æ√©",3900,2596, 2456.023682, 76.732384, 1057.799316);
	CreateTextMebel("√í√†√°√≥√∞√•√≤√™√†",800,1805, 2453.415039, 76.558792, 1055.328491);
	CreateTextMebel("√Å√†√∞√≠√†√ø √±√≤√Æ√©√™√†",43000,11686, 2454.314697, 70.702126, 1055.108887);
	CreateTextMebel("√Å√†√∞√≠√†√ø √±√≤√Æ√©√™√†",43000,11686, 2454.309814, 75.318130, 1055.104980);
	CreateTextMebel("√Å√†√∞√≠√ª√© √±√≤√≥√´",2000,11687, 2453.364258, 74.432083, 1055.118896);
	CreateTextMebel("√í√†√°√≥√∞√•√≤√™√†",1000,2350, 2453.378174, 72.358833, 1055.468750);
	CreateTextMebel("√ó√†√±√ª √≠√†√±√≤√•√≠√≠√ª√•",500,19825, 2456.280518, 73.332100, 1057.549316);
	CreateTextMebel("√Å√†√∞√≠√ª√© √±√≤√≥√´",1800,2723, 2453.352539, 69.908798, 1055.468750);
	CreateTextMebel("√ä√†√∞√≤√®√≠√†",2000,2279, 2453.011719, 68.748772, 1056.939209);
	CreateTextMebel("√ä√†√∞√≤√®√≠√†",1500,2261, 2450.733887, 67.498810, 1056.498901);
	CreateTextMebel("√í√•√´√•√¢√®√ß√Æ√∞ √Ø√Æ√§√¢√•√±√≠√Æ√©",3500,2700, 2449.598389, 68.441833, 1057.778931);
	CreateTextMebel("√ã√æ√±√≤√∞√†",3000,2073, 2448.982178, 70.435600, 1058.165039);
	CreateTextMebel("√ë√≤√≥√´ √§√´√ø √Æ√°√•√§√•√≠√≠√Æ√£√Æ √±√≤√Æ√´√†",1500,2636, 2451.664063, 68.758766, 1055.748779);
	CreateTextMebel("√ë√≤√≥√´ √§√´√ø √Æ√°√•√§√•√≠√≠√Æ√£√Æ √±√≤√Æ√´√†",1500,2636, 2448.583252, 68.758766, 1055.748779);
	CreateTextMebel("√ë√≤√≥√´ √§√´√ø √Æ√°√•√§√•√≠√≠√Æ√£√Æ √±√≤√Æ√´√†",1500,2636, 2446.865723, 69.206894, 1055.748779);
	CreateTextMebel("√ä√Æ√∞√®√∑√≠√•√¢√ª√© √™√Æ√¶√†√≠√ª√© √§√®√¢√†√≠",21000,1702, 2451.440918, 67.891083, 1055.051270);
	CreateTextMebel("√ë√≤√≥√´ √§√´√ø √Æ√°√•√§√•√≠√≠√Æ√£√Æ √±√≤√Æ√´√†",4200,2635, 2450.782227, 68.898773, 1055.528809);
	CreateTextMebel("√ë√≤√≥√´ √§√´√ø √Æ√°√•√§√•√≠√≠√Æ√£√Æ √±√≤√Æ√´√†",4200,2635, 2447.781250, 68.898773, 1055.528809);
	CreateTextMebel("√é√¥√®√±√≠√Æ√• √™√∞√•√±√´√Æ",5500,1714, 2446.850342, 66.171562, 1055.098267);
	CreateTextMebel("√é√¥√®√±√≠√ª√© √±√≤√Æ√´",4200,2173, 2446.527100, 67.538803, 1055.128296);
	CreateTextMebel("√ã√†√¨√Ø√†-√∞√†√™√•√≤√†",1500,2238, 2446.330566, 67.752121, 1056.319336);
	CreateTextMebel("√ä√†√∞√≤√®√≠√†",1700,2267, 2487.056885, 68.310333, 1057.266235);
	CreateTextMebel("√ä√†√∞√≤√®√≠√†",1700,2267, 2447.107666, 67.968788, 1057.049805);
	CreateTextMebel("√ç√Æ√≥√≤√°√≥√™",15000,19893, 2472.733154, 76.162094, 1055.919556);
	CreateTextMebel("√ç√Æ√≥√≤√°√≥√™",15000,19893, 2447.082031, 67.432098, 1055.919678);
	CreateTextMebel("√ä√Æ√¶√†√≠√ª√© √§√®√¢√†√≠",30000,1753, 2446.567139, 73.748863, 1055.078491);
	CreateTextMebel("√ã√æ√±√≤√∞√†",7500,11726, 2449.000732, 75.445702, 1057.815552);
	CreateTextMebel("√ã√æ√±√≤√∞√†-√¢√•√≠√≤√®√´√ø√≤√Æ√∞",3500,16780, 2461.243652, 73.032120, 1058.557861);
	CreateTextMebel("√ã√æ√±√≤√∞√†-√¢√•√≠√≤√®√´√ø√≤√Æ√∞",3500,16780, 2449.013428, 72.792122, 1058.557861);
	CreateTextMebel("√ã√æ√±√≤√∞√†",1000,2074, 2449.022949, 71.305603, 1058.185059);
	CreateTextMebel("√ä√Æ√¶√†√≠√ª√© √¨√Æ√§√≥√´√º √§√´√ø √§√®√¢√†√≠√†",10000,1754, 2450.336182, 77.058876, 1055.078491);
	CreateTextMebel("√ä√Æ√¶√†√≠√ª√© √¨√Æ√§√≥√´√º √§√´√ø √§√®√¢√†√≠√†",10000,1754, 2447.605225, 77.058876, 1055.078491);
	CreateTextMebel("√è√≥√¥√®√™ √™√Æ√¶√†√≠√ª√©",6000,1746, 2448.956543, 77.068924, 1055.078491);
	CreateTextMebel("√ã√æ√±√≤√∞√†",3500,2075, 2454.383057, 63.872093, 1058.389404);
	CreateTextMebel("√ã√æ√±√≤√∞√†",3500,2075, 2449.083008, 63.872093, 1058.389404);
	CreateTextMebel("√ã√æ√±√≤√∞√†",4000,1734, 2448.984375, 66.585701, 1058.585571);
	CreateTextMebel("√ë√≤√≥√´ √§√´√ø √Æ√°√•√§√•√≠√≠√Æ√£√Æ √±√≤√Æ√´√†",1900,1811, 2447.796387, 63.058800, 1055.708862);
	CreateTextMebel("√ä√Æ√¥√•√©√≠√ª√© √±√≤√Æ√´√®√™",3700,2315, 2454.443359, 63.122105, 1055.118652);
	CreateTextMebel("√ì√£√´√Æ√¢√Æ√© √§√®√¢√†√≠",38000,1709, 2453.605469, 61.948841, 1055.058228);
	CreateTextMebel("√ä√Æ√¨√Ø√º√æ√≤√•√∞",4000,2190, 2451.317139, 61.463043, 1055.889038);
	CreateTextMebel("√é√¥√®√±√≠√ª√© √±√≤√≥√´",1750,1671, 2451.435303, 59.778763, 1055.518799);
	CreateTextMebel("√é√¥√®√±√≠√ª√© √±√≤√≥√´",4700,2169, 2450.440186, 61.137848, 1055.118286);
	CreateTextMebel("√ë√≤√≥√´",1500,1721, 2450.163086, 59.082108, 1055.108887);
	CreateTextMebel("√ë√≤√≥√´",1500,1721, 2449.512451, 59.082108, 1055.108887);
	CreateTextMebel("√ë√≤√≥√´",1500,1721, 2448.861816, 59.082108, 1055.108887);
	CreateTextMebel("√é√¥√®√±√≠√ª√© √±√≤√Æ√´",5500,2205, 2446.518555, 62.148838, 1055.048340);
	CreateTextMebel("√é√¥√®√±√≠√Æ√• √™√∞√•√±√´√Æ",5500,19999, 2446.851563, 60.508492, 1055.108643);
}
stock LoadNPC() {
	CreateDynamicActor(150, 1379.5787, -22.1097, 1000.9299, 90.0); // √¢ √Ä√§√¨√®√≠√®√±√≤√∞√†√∂√®√® √è√∞√•√ß√®√§√•√≠√≤√†

	npc_prokat_1 = CreateDynamicActor(13, 1796.3042,-1936.8929,13.5469, 0.0);
	npc_prokat_2 = CreateDynamicActor(85, 1185.1204,-1359.1680,14.2478, 270.0);
	npc_prokat_3 = CreateDynamicActor(191, -1994.5817,97.8639,27.6799, 0.0);
	npc_prokat_4 = CreateDynamicActor(193, -2601.2854,593.5764,14.4531, 90.0);
	npc_prokat_5 = CreateDynamicActor(85, 2822.5020,1291.9958,10.9609, 270.0);
	npc_prokat_6 = CreateDynamicActor(13, 1628.8113,1845.9677,10.8203, 90.0);
	npc_prokat_7 = CreateDynamicActor(85, 1155.3159,-1729.8549,13.8124, 180.0);

	CreateDynamicActor(219, 1385.3733, -20.5038, 1000.9084, 270.0, 1, 100, 17); // √¢ √Æ√≤√•√´√•

	CreateDynamicActor(141, 549.6711, -1283.4023, 3001.0859, 0.0);
	CreateDynamicActor(150, -1951.5784, 298.8322, 35.4688, 90.0);
	CreateDynamicActor(291, 549.6711, -1283.4023, 3001.0859, 0.0, 1, 100, 1);
	CreateDynamicActor(261, 549.6711, -1283.4023, 3001.0859, 0.0, 1, 100, 2);
}
stock rotate_mayak() {
    static Float: rot_pos = 0.1,
           Float: MoveZ;

    rot_pos = -rot_pos;
    MoveZ += 143.0;
    if (MoveZ >= 360.0)
        MoveZ -= 360.0;

    MoveDynamicObject(mayak, 154.79480, -1950.44446, 47.48010 + rot_pos, 0.02, 0.00000, 0.00000, MoveZ);
}
stock LoadObject() {
	#include <atm_objects>

	uprav_stateprez = CreateDynamicCP(-821.6519,1091.2297,2746.1028-0.8, 1.0, -1, -1, -1, 20.0);

	factorystorage = CreateDynamicCP(2564.5488,-1293.0078,1044.1250, 2.0, 10, 2, -1, 2.2);

	new tmpobjid;

	CreateDynamicObject(1499, 2575.081787, -1279.904785, 1043.099976, 0.000000, 0.000000, 0.000000, -1, -1);
	tmpobjid = CreateDynamicObject(19482, -86.191704, -299.028107, 5.072900, 0.000000, 0.000000, -90.000000, -1, -1);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√è√ê√é√à√á√Ç√é√Ñ√ë√í√Ç√Ö√ç√ç√õ√â\n√ñ√Ö√ï", 130, "Tahoma", 52, 1, 0xFF130D06, 0, 1);
	tmpobjid = CreateDynamicObject(19482, -116.624496, -312.736786, 10.226300, 0.000000, 0.000000, -90.000000, -1, -1);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√ë√ä√ã√Ä√Ñ", 130, "Tahoma", 130, 1, 0xFF130D06, 0, 1);
	tmpobjid = CreateDynamicObject(7246, -116.457703, -395.000000, 4.223000, 0.000000, 0.000000, -117.999901, -1, -1);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√á√†√¢√Æ√§", 130, "Tahoma", 130, 1, 0xFFFFFFFF, 0xFF339966, 1);

	tmpobjid = CreateDynamicObject(19327, 1163.895996, 1363.281006, 13.440000, 0.000000, 0.000000, 179.899994, -1, -1);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√Ç√é√Ö√ç√ä", 130, "Ariel", 140, 1, 0xFF006600, 0, 1);
	tmpobjid = CreateDynamicObject(19327, 1162.115967, 1363.286987, 13.442000, 0.000000, 0.000000, -179.998993, -1, -1);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√é√å√Ä√í", 130, "Ariel", 140, 1, 0xFF006600, 0, 1);

	tmpobjid = CreateDynamicObject(19476, 2602.070068, -1285.061035, 1009.940002, 0.000000, 0.000000, 180.000000, -1, -1);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√ë√≤√Æ√´√Æ√¢√†√ø", 40, "Ariel", 30, 0, 0xFFFFFFFF, 0x1, 1);
	tmpobjid = CreateDynamicObject(19476, 2593.979004, -1283.220947, 1009.940002, 0.000000, 0.000000, -90.000000, -1, -1);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√ä√†√°√®No √£√•√≠√•√∞√†√´√†", 110, "Ariel", 60, 0, 0xFFFFFFFF, 0x1, 1);
	tmpobjid = CreateDynamicObject(19476, 2592.427979, -1285.432007, 1009.940002, 0.000000, 0.000000, 0.000000, -1, -1);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√å√•√§√Ø√≥√≠√™√≤", 70, "Ariel", 40, 0, 0xFFFFFFFF, 0x1, 1);
	tmpobjid = CreateDynamicObject(19476, 2602.060059, -1291.322021, 1009.940002, 0.000000, 0.000000, 180.000000, -1, -1);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√Ä√™√†√§√•√¨√®√ø", 40, "Ariel", 30, 0, 0xFFFFFFFF, 0x1, 1);
	tmpobjid = CreateDynamicObject(19476, 2592.427979, -1291.751953, 1009.940002, 0.000000, 0.000000, 0.000000, -1, -1);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√ä√Æ√¨√≠√†√≤√† √±√≠√†", 70, "Ariel", 40, 0, 0xFFFFFFFF, 0x1, 1);
	tmpobjid = CreateDynamicObject(19476, 2598.587891, -1296.098999, 1009.940002, 0.000000, 0.000000, 90.000000, -1, -1);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√ê√†√ß√§√•√¢√†√´√™√†", 80, "Ariel", 48, 0, 0xFFFFFFFF, 0x1, 1);
	tmpobjid = CreateDynamicObject(19476, 2595.495117, -1296.103027, 1009.940002, 0.000000, 0.000000, 90.000000, -1, -1);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√í√≥√†√´√•√≤√ª", 40, "Ariel", 30, 0, 0xFFFFFFFF, 0x1, 1);
	tmpobjid = CreateDynamicObject(19476, 2598.587891, -1304.496948, 1009.940002, 0.000000, 0.000000, 90.000000, -1, -1);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√Ñ√≥√∏√•√¢√†√ø", 40, "Ariel", 30, 0, 0xFFFFFFFF, 0x1, 1);

	tirzone = CreateDynamicSphere(285.7182,-84.4868,1001.5156,140.0,40,4);

	tmpobjid = CreateDynamicObject(2728, 1382.174072, -44.456272, 1001.615356, 89.999992, 179.999985, -90.000008, -1, -1);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√ª", 140, "Webdings", 80, 0, 0xFFFFFFFF, 0, 1);

	#include <loadobjects>

	ashdoor = CreateDynamicSphere(-888.299988, 959.020020, 1133.500000, 2.0); // √†√¢√≤√Æ√∏√™√Æ√´√†

	nojump[0] = CreateDynamicCylinder(-773.5633,-1782.9663, -42.0, 17.0, 5.0, 1, 1, -1);
	nojump[1] = CreateDynamicCylinder(-746.2267,-1777.1226, -92.0, 17.0, 5.0, 1, 1, -1);

	#include <hotel_map>

	g_Blocker[0] = CreateDynamicObject(19376, 1026.438842, -1029.100463, 30.326131, 0.000000, 0.000000, 90.000000); 
	g_Blocker[1] = CreateDynamicObject(19376, 487.725646, -1735.355468, 13.785275, 0.000000, 0.000000, 82.699996); 
	g_Blocker[2] = CreateDynamicObject(19376, 2071.191406, -1831.526733, 12.282822, 0.000000, 0.000000, 0.000000); 
	g_Blocker[3] = CreateDynamicObject(19376, -1903.776489, 277.924163, 41.236850, 0.000000, 0.000000, 90.000000); 
	g_Blocker[4] = CreateDynamicObject(19376, -2425.705810, 1028.021972, 50.380599, 0.000000, 0.000000, 90.000000); 
	g_Blocker[5] = CreateDynamicObject(19376, 1968.766845, 2161.959960, 9.870316, 0.000000, 0.000000, 0.000000); 
	g_Blocker[6] = CreateDynamicObject(19452, 719.014099, -462.409179, 15.283710, 90.000000, 90.000000, 0.000000); 
	g_Blocker[7] = CreateDynamicObject(19452, 722.414611, -462.409179, 15.283710, 90.000000, 90.000000, 0.000000); 
	g_Blocker[8] = CreateDynamicObject(19376, -1421.362792, 2590.988769, 54.857509, 0.000000, 0.000000, 90.000000); 
	g_Blocker[9] = CreateDynamicObject(19376, -99.682464, 1111.699584, 18.922189, 0.000000, 0.000000, 90.000000); 
	g_Blocker[10] = CreateDynamicObject(19376, 1843.539184, -1854.693603, 10.602802, 0.000000, 0.000000, 0.000000); 
	g_Blocker[11] = CreateDynamicObject(19376, -1937.308227, 239.687652, 32.969009, 0.000000, 0.000000, 90.000000); 
	g_Blocker[12] = CreateDynamicObject(19376, 1042.707397, -1025.475708, 29.878086, 0.000000, 0.000000, 90.000000); 
	g_Blocker[13] = CreateDynamicObject(19376, -2717.127685, 216.497787, 2.983225, 0.000000, 0.000000, 0.000000); 
	g_Blocker[14] = CreateDynamicObject(19376, 2386.815429, 1044.059936, 9.441806, 0.000000, 0.000000, 90.000000); 

	for(new i = 0; i < sizeof(g_Blocker); i ++) SetDynamicObjectMaterial(g_Blocker[i], 0, 10806, "airfence_sfse", "ws_griddyfence", 0x00000000);

	for(new k = 0; k < sizeof(pay_n_spray); k ++) 
		pay_n_spray[k] = CreateDynamicSphere(array_pay_n_spray[k][0], array_pay_n_spray[k][1], array_pay_n_spray[k][2], 8.0, 0, 0);

	tmpobjid = CreateDynamicObject(19479, 1461.995483, -1020.488830, 32.046253, 0.000000, 0.000000, -90.000000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√ñ√Ö√ç√í√ê√Ä√ã√ú√ç√õ√â √Å√Ä√ç√ä", 130, "Ariel", 37, 1, -8388608, 0, 1);

	tmpobjid = CreateDynamicObject(19482, 2178.686523, -2255.150146, 18.542520, 0.000000, 0.000000, -45.000000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√ë√Å√é√ê√ä√Ä √Ä√Ç√í√é√å√é√Å√à√ã√Ö√â", 130, "Arial", 42, 1, -16777216, 0, 1);
	tmpobjid = CreateDynamicObject(19477, 2178.686523, -2255.150146, 18.052509, 0.000000, 0.000000, -45.000000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√ê√Ä√Å√é√ó√Ä√ü √á√é√ç√Ä", 130, "Arial", 57, 1, -4521984, 0, 1);

	// √™√®√Æ√±√™√®
	CreateDynamicObject(2543, 1798.598999, -1865.098999, 12.500000, 0.000000, 0.000000, 180.000000); 
	CreateDynamicObject(2542, 1799.698974, -1865.098999, 12.600000, 0.000000, 0.000000, 180.000000); 
	CreateDynamicObject(3089, 1797.900024, -1863.598999, 13.600000, 0.000000, 0.000000, 270.000000); 
	CreateDynamicObject(2541, 1800.800048, -1865.098999, 12.600000, 0.000000, 0.000000, 180.000000); 
	tmpobjid = CreateDynamicObject(1571, 1799.800048, -1864.000000, 13.699000, 0.000000, 0.000000, 180.000000); 
	SetDynamicObjectMaterial(tmpobjid, 2, 10765, "airportgnd_sfse", "white", 0xFFCC9900);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "white", 0);
	tmpobjid = CreateDynamicObject(19353, 1799.644042, -1862.983032, 14.873000, 0.000000, 0.000000, -90.098999); 
	SetDynamicObjectMaterialText(tmpobjid, 0, "BURRITOS", 140, "Arial", 65, 1, 0xFF0099CC, 0, 1);
	CreateDynamicObject(2452, 1802.598999, -1863.400024, 12.600000, 0.000000, 0.000000, 180.000000); 

	CreateDynamicObject(2543, 1299.279785, -1385.846313, 12.255742, -0.000000, 0.000007, -0.199966); 
	CreateDynamicObject(2542, 1298.179809, -1385.842529, 12.355741, -0.000000, 0.000007, -0.199966); 
	CreateDynamicObject(3089, 1299.973510, -1387.348754, 13.355741, 0.000007, 0.000000, 89.799964); 
	CreateDynamicObject(2541, 1297.078735, -1385.838623, 12.355741, -0.000000, 0.000007, -0.199966); 
	tmpobjid = CreateDynamicObject(1571, 1298.074951, -1386.941162, 13.454740, -0.000000, 0.000007, -0.199966); 
	SetDynamicObjectMaterial(tmpobjid, 2, 10765, "airportgnd_sfse", "white", 0xFFCC9900);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "white", 0);
	tmpobjid = CreateDynamicObject(19353, 1298.227416, -1387.958618, 14.628740, 0.000007, 0.000000, 89.700965); 
	SetDynamicObjectMaterialText(tmpobjid, 0, "BURRITOS", 140, "Arial", 65, 1, 0xFF0099CC, 0, 1);
	CreateDynamicObject(2452, 1295.273925, -1387.531372, 12.355741, -0.000000, 0.000007, -0.199966); 

	CreateDynamicObject(2543, 2826.442871, 1252.454101, 9.642492, 0.000000, -0.000007, 179.999954); 
	CreateDynamicObject(2542, 2827.542724, 1252.454101, 9.742491, 0.000000, -0.000007, 179.999954); 
	CreateDynamicObject(3089, 2825.743896, 1253.954101, 10.742491, -0.000007, -0.000000, -89.999977); 
	CreateDynamicObject(2541, 2828.643798, 1252.454101, 9.742491, 0.000000, -0.000007, 179.999954); 
	tmpobjid = CreateDynamicObject(1571, 2827.643798, 1253.553100, 10.841490, 0.000000, -0.000007, 179.999954); 
	SetDynamicObjectMaterial(tmpobjid, 2, 10765, "airportgnd_sfse", "white", 0xFFCC9900);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "white", 0);
	tmpobjid = CreateDynamicObject(19353, 2827.487792, 1254.570068, 12.015490, -0.000007, -0.000000, -90.098976); 
	SetDynamicObjectMaterialText(tmpobjid, 0, "BURRITOS", 140, "Arial", 65, 1, 0xFF0099CC, 0, 1);
	CreateDynamicObject(2452, 2830.442626, 1254.153076, 9.742491, 0.000000, -0.000007, 179.999954); 

	CreateDynamicObject(2543, -1987.115966, 204.050552, 26.562566, 0.000000, -0.000007, -0.100036); 
	CreateDynamicObject(2542, -1988.215942, 204.052474, 26.662567, 0.000000, -0.000007, -0.100036); 
	CreateDynamicObject(3089, -1986.419555, 202.549331, 27.662567, -0.000007, -0.000000, 89.899940); 
	CreateDynamicObject(2541, -1989.317016, 204.054397, 26.662567, 0.000000, -0.000007, -0.100036); 
	tmpobjid = CreateDynamicObject(1571, -1988.318969, 202.953659, 27.761566, 0.000000, -0.000007, -0.100036); 
	SetDynamicObjectMaterial(tmpobjid, 2, 10765, "airportgnd_sfse", "white", 0xFFCC9900);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "white", 0);
	tmpobjid = CreateDynamicObject(19353, -1988.164672, 201.936416, 28.935565, -0.000007, -0.000000, 89.800941); 
	SetDynamicObjectMaterialText(tmpobjid, 0, "BURRITOS", 140, "Arial", 65, 1, 0xFF0099CC, 0, 1);
	CreateDynamicObject(2452, -1991.118896, 202.358566, 26.662567, 0.000000, -0.000007, -0.100036); 
	//

	sport_menu = CreateDynamicCP(769.1658,10.3237,1000.7064, 1.5, 1, 5, -1, 20.0);
	CreateDynamicCP(769.1658,10.3237,1000.7064, 1.5, 2, 5, -1, 20.0);
	CreateDynamicCP(769.1658,10.3237,1000.7064, 1.5, 3, 5, -1, 20.0);
	CreateDynamicCP(769.1658,10.3237,1000.7064, 1.5, 4, 5, -1, 20.0);

	new banklstext = CreateObject(4238, 1418.8273, -1623.7998, 34.3898, 0.0000, 0.0000, 120.2675);
	SetObjectMaterialText(banklstext, "√Å√†√≠√™ √ã√Æ√±-√ë√†√≠√≤√Æ√±√†", 0, 120, "Arial", 63, 1, -268435456, 0, 1);

	sphere_props = CreateDynamicSphere(774.7214,1160.1382,1087.2699,150.0);

	tmpobjid = CreateDynamicObject(19477, 775.005004, 1154.086303, 1088.569946, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.000000);
	format(string,23,"√Ä√£√•√≠√≤√±√≤√¢√Æ\n√≠√•√§√¢√®√¶√®√¨√Æ√±√≤√®");
	SetDynamicObjectMaterialText(tmpobjid, 0, string, 130, "Arial", 85, 0, -11862016, 0, 1);
	tmpobjid = CreateDynamicObject(19477, 775.005004, 1153.065185, 1088.569946, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300.000000);
	SetDynamicObjectMaterialText(tmpobjid, 0, string, 130, "Arial", 80, 0, -11862016, 0, 1);
	tmpobjid = CreateDynamicObject(19477, 775.005004, 1183.868774, 1088.569946, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300.000000);
	format(string,19,"Real estate\nagency");
	SetDynamicObjectMaterialText(tmpobjid, 0, string, 130, "Arial", 85, 0, -11862016, 0, 1);

	// √≤√†√°√´√®√∑√™√® (√£√®√§√ª)
	tmpobjid = CreateDynamicObject(5811, 1268.458862, -1386.471435, 16.481637, 0.000000, 0.000000, 270.000000); 
	SetDynamicObjectMaterial(tmpobjid, 6, 18996, "mattextures", "sampblack", 0);
	SetDynamicObjectMaterialText(tmpobjid, 5, "√é√≤√•√´√º", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFF000000, 1);
	SetDynamicObjectMaterialText(tmpobjid, 4, "√í√æ√≠√®√≠√£", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFFBA55D3, 1);
	SetDynamicObjectMaterialText(tmpobjid, 3, "√Ä√∞√•√≠S√≠", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFF7B68EE, 1);
	SetDynamicObjectMaterialText(tmpobjid, 2, "√Å√Æ√´√º√≠√®√∂√†", 90, "Georgia", 40, 0, 0xFFFFFFFF, 0xFF8A2BE2, 1);
	SetDynamicObjectMaterialText(tmpobjid, 1, "24 / 7", 90, "Georgia", 40, 0, 0xFFFFFFFF, 0xFF191970, 1);
	SetDynamicObjectMaterialText(tmpobjid, 0, "-", 90, "Arial", 24, 1, 0xFFFFFFFF, 0xFF191970, 0);
	tmpobjid = CreateDynamicObject(5811, 1274.963500, -1720.814331, 16.719261, 0.000000, 0.000000, 90.000000); 
	SetDynamicObjectMaterial(tmpobjid, 6, 18996, "mattextures", "sampblack", 0);
	SetDynamicObjectMaterialText(tmpobjid, 5, "√å√Ω√∞√®√ø", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFF000000, 1);
	SetDynamicObjectMaterialText(tmpobjid, 4, "√Å√†√≠√™", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFFBA55D3, 1);
	SetDynamicObjectMaterialText(tmpobjid, 3, "√ë√†√´√Æ√≠", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFF7B68EE, 1);
	SetDynamicObjectMaterialText(tmpobjid, 2, "24 / 7", 90, "Georgia", 40, 0, 0xFFFFFFFF, 0xFF8A2BE2, 1);
	SetDynamicObjectMaterialText(tmpobjid, 1, "√ì√∑√†√±√≤√Æ√™", 90, "Georgia", 40, 0, 0xFFFFFFFF, 0xFF191970, 1);
	SetDynamicObjectMaterialText(tmpobjid, 0, "-", 90, "Arial", 24, 1, 0xFFFFFFFF, 0xFF191970, 0);
	tmpobjid = CreateDynamicObject(5811, 305.822113, -1719.666259, 10.089147, 0.000000, 0.000000, 41.499992); 
	SetDynamicObjectMaterial(tmpobjid, 6, 18996, "mattextures", "sampblack", 0);
	SetDynamicObjectMaterialText(tmpobjid, 5, "√ë√†√´√Æ√≠", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFF000000, 1);
	SetDynamicObjectMaterialText(tmpobjid, 4, "√è√´√ø√¶", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFFBA55D3, 1);
	SetDynamicObjectMaterialText(tmpobjid, 3, "24 / 7", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFF7B68EE, 1);
	SetDynamicObjectMaterialText(tmpobjid, 2, "√Å√†√∞", 90, "Georgia", 40, 0, 0xFFFFFFFF, 0xFF8A2BE2, 1);
	SetDynamicObjectMaterialText(tmpobjid, 1, "√Ä√á√ë", 90, "Georgia", 40, 0, 0xFFFFFFFF, 0xFF191970, 1);
	SetDynamicObjectMaterialText(tmpobjid, 0, "-", 90, "Arial", 24, 1, 0xFFFFFFFF, 0xFF191970, 0);
	tmpobjid = CreateDynamicObject(5811, 145.433792, -1542.926879, 12.830603, 0.000000, 0.000000, -81.899963); 
	SetDynamicObjectMaterial(tmpobjid, 6, 18996, "mattextures", "sampblack", 0);
	SetDynamicObjectMaterialText(tmpobjid, 5, "√í√†√¨√Æ√¶√≠√ø", 90, "Georgia", 50, 0, 0xFFFFFFFF, 0xFF000000, 1);
	SetDynamicObjectMaterialText(tmpobjid, 4, "24 / 7", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFFBA55D3, 1);
	SetDynamicObjectMaterialText(tmpobjid, 3, "√Ä√á√ë", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFF7B68EE, 1);
	SetDynamicObjectMaterialText(tmpobjid, 2, "√Ä√¢√≤√Æ√±√†√´√Æ√≠", 90, "Georgia", 40, 0, 0xFFFFFFFF, 0xFF8A2BE2, 1);
	SetDynamicObjectMaterialText(tmpobjid, 1, "√è√Æ√´¬∏√≤√ª", 90, "Georgia", 40, 0, 0xFFFFFFFF, 0xFF191970, 1);
	SetDynamicObjectMaterialText(tmpobjid, 0, "-", 90, "Arial", 24, 1, 0xFFFFFFFF, 0xFF191970, 0);
	tmpobjid = CreateDynamicObject(5811, 1074.696044, -1133.099243, 26.909461, 0.000000, 0.000000, 47.899974); 
	SetDynamicObjectMaterial(tmpobjid, 6, 18996, "mattextures", "sampblack", 0);
	SetDynamicObjectMaterialText(tmpobjid, 5, "24 / 7", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFF000000, 1);
	SetDynamicObjectMaterialText(tmpobjid, 4, "√Å√Æ√´√º√≠√®√∂√†", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFFBA55D3, 1);
	SetDynamicObjectMaterialText(tmpobjid, 3, "√Ä√á√ë", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFF7B68EE, 1);
	SetDynamicObjectMaterialText(tmpobjid, 2, "Burger S", 90, "Georgia", 40, 0, 0xFFFFFFFF, 0xFF8A2BE2, 1);
	SetDynamicObjectMaterialText(tmpobjid, 1, "√Ä√á√ë", 90, "Georgia", 40, 0, 0xFFFFFFFF, 0xFF191970, 1);
	SetDynamicObjectMaterialText(tmpobjid, 0, "-", 90, "Arial", 24, 1, 0xFFFFFFFF, 0xFF191970, 0);
	tmpobjid = CreateDynamicObject(5811, 1391.048706, -926.771301, 37.497493, 0.000000, 0.000000, -52.700004); 
	SetDynamicObjectMaterial(tmpobjid, 6, 18996, "mattextures", "sampblack", 0);
	SetDynamicObjectMaterialText(tmpobjid, 5, "√í√†√¨√Æ√¶√≠√ø", 90, "Georgia", 50, 0, 0xFFFFFFFF, 0xFF000000, 1);
	SetDynamicObjectMaterialText(tmpobjid, 4, "√Ä√á√ë", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFFBA55D3, 1);
	SetDynamicObjectMaterialText(tmpobjid, 3, "√É√•√≤√≤√Æ", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFF7B68EE, 1);
	SetDynamicObjectMaterialText(tmpobjid, 2, "√Å√†√∞", 90, "Georgia", 40, 0, 0xFFFFFFFF, 0xFF8A2BE2, 1);
	SetDynamicObjectMaterialText(tmpobjid, 1, "24 / 7", 90, "Georgia", 40, 0, 0xFFFFFFFF, 0xFF191970, 1);
	SetDynamicObjectMaterialText(tmpobjid, 0, "-", 90, "Arial", 24, 1, 0xFFFFFFFF, 0xFF191970, 0);
	tmpobjid = CreateDynamicObject(5811, -1808.782348, -592.351562, 19.604383, 0.000000, 0.000000, 49.400001); 
	SetDynamicObjectMaterial(tmpobjid, 6, 18996, "mattextures", "sampblack", 0);
	SetDynamicObjectMaterialText(tmpobjid, 5, "√Ä√á√ë", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFF000000, 1);
	SetDynamicObjectMaterialText(tmpobjid, 4, "√í√†√¨√Æ√¶√≠√ø", 90, "Georgia", 50, 0, 0xFFFFFFFF, 0xFFBA55D3, 1);
	SetDynamicObjectMaterialText(tmpobjid, 3, "√ë√≤√†√§√®√Æ√≠", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFF7B68EE, 1);
	SetDynamicObjectMaterialText(tmpobjid, 2, "√Ç√Æ√™√ß√†√´", 90, "Georgia", 40, 0, 0xFFFFFFFF, 0xFF8A2BE2, 1);
	SetDynamicObjectMaterialText(tmpobjid, 1, "√Ä√Ω√∞√Æ√Ø√Æ√∞√≤", 90, "Georgia", 40, 0, 0xFFFFFFFF, 0xFF191970, 1);
	SetDynamicObjectMaterialText(tmpobjid, 0, "-", 90, "Arial", 24, 1, 0xFFFFFFFF, 0xFF191970, 0);
	tmpobjid = CreateDynamicObject(5811, -1998.492309, 208.672821, 30.817497, 0.000000, 0.000000, 0.000000); 
	SetDynamicObjectMaterial(tmpobjid, 6, 18996, "mattextures", "sampblack", 0);
	SetDynamicObjectMaterialText(tmpobjid, 5, "√Ç√Æ√™√ß√†√´", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFF000000, 1);
	SetDynamicObjectMaterialText(tmpobjid, 4, "√ë√†√´√Æ√≠", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFFBA55D3, 1);
	SetDynamicObjectMaterialText(tmpobjid, 3, "√Ä√á√ë", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFF7B68EE, 1);
	SetDynamicObjectMaterialText(tmpobjid, 2, "√Ä√∞√•√≠S√≠", 90, "Georgia", 40, 0, 0xFFFFFFFF, 0xFF8A2BE2, 1);
	SetDynamicObjectMaterialText(tmpobjid, 1, "24 / 7", 90, "Georgia", 40, 0, 0xFFFFFFFF, 0xFF191970, 1);
	SetDynamicObjectMaterialText(tmpobjid, 0, "-", 90, "Arial", 24, 1, 0xFFFFFFFF, 0xFF191970, 0);
	tmpobjid = CreateDynamicObject(5811, -2760.484375, 353.463287, 7.535943, 0.000000, 0.000000, 0.000000); 
	SetDynamicObjectMaterial(tmpobjid, 6, 18996, "mattextures", "sampblack", 0);
	SetDynamicObjectMaterialText(tmpobjid, 5, "√å√Ω√∞√®√ø", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFF000000, 1);
	SetDynamicObjectMaterialText(tmpobjid, 4, "24 / 7", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFFBA55D3, 1);
	SetDynamicObjectMaterialText(tmpobjid, 3, "Cluckin B", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFF7B68EE, 1);
	SetDynamicObjectMaterialText(tmpobjid, 2, "√í√®√∞", 90, "Georgia", 40, 0, 0xFFFFFFFF, 0xFF8A2BE2, 1);
	SetDynamicObjectMaterialText(tmpobjid, 1, "√é√∞√≥√¶√®√•", 90, "Georgia", 40, 0, 0xFFFFFFFF, 0xFF191970, 1);
	SetDynamicObjectMaterialText(tmpobjid, 0, "-", 90, "Arial", 24, 1, 0xFFFFFFFF, 0xFF191970, 0);
	tmpobjid = CreateDynamicObject(5811, -2559.324218, 579.835815, 17.687942, 0.000000, 0.000000, 48.999996); 
	SetDynamicObjectMaterial(tmpobjid, 6, 18996, "mattextures", "sampblack", 0);
	SetDynamicObjectMaterialText(tmpobjid, 5, "√Å√†√∞", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFF000000, 1);
	SetDynamicObjectMaterialText(tmpobjid, 4, "√Ä√∞√•√≠S√≠", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFFBA55D3, 1);
	SetDynamicObjectMaterialText(tmpobjid, 3, "√î√Å√ê", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFF7B68EE, 1);
	SetDynamicObjectMaterialText(tmpobjid, 2, "√é√∞√≥√¶√®√•", 90, "Georgia", 40, 0, 0xFFFFFFFF, 0xFF8A2BE2, 1);
	SetDynamicObjectMaterialText(tmpobjid, 1, "√Å√Æ√´√º√≠√®√∂√†", 90, "Georgia", 40, 0, 0xFFFFFFFF, 0xFF191970, 1);
	SetDynamicObjectMaterialText(tmpobjid, 0, "-", 90, "Arial", 24, 1, 0xFFFFFFFF, 0xFF191970, 0);
	tmpobjid = CreateDynamicObject(5811, -845.060913, 1608.645141, 30.255941, 0.000000, 0.000000, 56.000019); 
	SetDynamicObjectMaterial(tmpobjid, 6, 18996, "mattextures", "sampblack", 0);
	SetDynamicObjectMaterialText(tmpobjid, 5, "√ë√Ç", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFF000000, 1);
	SetDynamicObjectMaterialText(tmpobjid, 4, "√Ç√Ç√ë", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFFBA55D3, 1);
	SetDynamicObjectMaterialText(tmpobjid, 3, "√ã√Ç", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFF7B68EE, 1);
	SetDynamicObjectMaterialText(tmpobjid, 2, "24 / 7", 90, "Georgia", 40, 0, 0xFFFFFFFF, 0xFF8A2BE2, 1);
	SetDynamicObjectMaterialText(tmpobjid, 1, "√Ä√á√ë", 90, "Georgia", 40, 0, 0xFFFFFFFF, 0xFF191970, 1);
	SetDynamicObjectMaterialText(tmpobjid, 0, "-", 90, "Arial", 24, 1, 0xFFFFFFFF, 0xFF191970, 0);
	tmpobjid = CreateDynamicObject(5811, 2378.188720, 2405.724365, 13.966094, 0.000000, 0.000000, 0.000000); 
	SetDynamicObjectMaterial(tmpobjid, 6, 18996, "mattextures", "sampblack", 0);
	SetDynamicObjectMaterialText(tmpobjid, 5, "√ì√∑√†√±√≤√Æ√™", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFF000000, 1);
	SetDynamicObjectMaterialText(tmpobjid, 4, "√å√Ω√∞√®√ø", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFFBA55D3, 1);
	SetDynamicObjectMaterialText(tmpobjid, 3, "24 / 7", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFF7B68EE, 1);
	SetDynamicObjectMaterialText(tmpobjid, 2, "√Å√†√≠√™", 90, "Georgia", 40, 0, 0xFFFFFFFF, 0xFF8A2BE2, 1);
	SetDynamicObjectMaterialText(tmpobjid, 1, "√Ä√á√ë", 90, "Georgia", 40, 0, 0xFFFFFFFF, 0xFF191970, 1);
	SetDynamicObjectMaterialText(tmpobjid, 0, "-", 90, "Arial", 24, 1, 0xFFFFFFFF, 0xFF191970, 0);
	tmpobjid = CreateDynamicObject(5811, 2029.761840, 957.839660, 13.531128, 0.000000, 0.000000, 0.000000); 
	SetDynamicObjectMaterial(tmpobjid, 6, 18996, "mattextures", "sampblack", 0);
	SetDynamicObjectMaterialText(tmpobjid, 5, "√ä√†√ß√®√≠√Æ", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFF000000, 1);
	SetDynamicObjectMaterialText(tmpobjid, 4, "√Ç√•√π√®", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFFBA55D3, 1);
	SetDynamicObjectMaterialText(tmpobjid, 3, "√Ä√á√ë", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFF7B68EE, 1);
	SetDynamicObjectMaterialText(tmpobjid, 2, "24 / 7", 90, "Georgia", 40, 0, 0xFFFFFFFF, 0xFF8A2BE2, 1);
	SetDynamicObjectMaterialText(tmpobjid, 1, "√ò√Æ√±√±√•", 90, "Georgia", 40, 0, 0xFFFFFFFF, 0xFF191970, 1);
	SetDynamicObjectMaterialText(tmpobjid, 0, "-", 90, "Arial", 24, 1, 0xFFFFFFFF, 0xFF191970, 0);
	tmpobjid = CreateDynamicObject(5811, 2799.107910, 1303.023925, 14.030000, 0.000000, 0.000000, 90.000000); 
	SetDynamicObjectMaterial(tmpobjid, 6, 18996, "mattextures", "sampblack", 0);
	SetDynamicObjectMaterialText(tmpobjid, 5, "√Ç√Æ√™√ß√†√´", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFF000000, 1);
	SetDynamicObjectMaterialText(tmpobjid, 4, "√Ä√∞√•√≠S√≠", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFFBA55D3, 1);
	SetDynamicObjectMaterialText(tmpobjid, 3, "√ë√†√´√Æ√≠", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFF7B68EE, 1);
	SetDynamicObjectMaterialText(tmpobjid, 2, "√Ä√á√ë", 90, "Georgia", 40, 0, 0xFFFFFFFF, 0xFF8A2BE2, 1);
	SetDynamicObjectMaterialText(tmpobjid, 1, "24 / 7", 90, "Georgia", 40, 0, 0xFFFFFFFF, 0xFF191970, 1);
	SetDynamicObjectMaterialText(tmpobjid, 0, "-", 90, "Arial", 24, 1, 0xFFFFFFFF, 0xFF191970, 0);
	tmpobjid = CreateDynamicObject(5811, 2108.467285, 2207.250732, 13.977972, 0.000000, 0.000000, -42.599998); 
	SetDynamicObjectMaterial(tmpobjid, 6, 18996, "mattextures", "sampblack", 0);
	SetDynamicObjectMaterialText(tmpobjid, 5, "24 / 7", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFF000000, 1);
	SetDynamicObjectMaterialText(tmpobjid, 4, "√è√®√∂√∂√†", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFFBA55D3, 1);
	SetDynamicObjectMaterialText(tmpobjid, 3, "√Å√†√≠√™", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFF7B68EE, 1);
	SetDynamicObjectMaterialText(tmpobjid, 2, "√ç√Æ√¨√•√∞√†", 90, "Georgia", 40, 0, 0xFFFFFFFF, 0xFF8A2BE2, 1);
	SetDynamicObjectMaterialText(tmpobjid, 1, "B Shot", 90, "Georgia", 40, 0, 0xFFFFFFFF, 0xFF191970, 1);
	SetDynamicObjectMaterialText(tmpobjid, 0, "-", 90, "Arial", 24, 1, 0xFFFFFFFF, 0xFF191970, 0);
	tmpobjid = CreateDynamicObject(5811, 671.268493, -680.228637, 19.379302, 0.000000, 0.000000, -21.199991); 
	SetDynamicObjectMaterial(tmpobjid, 6, 18996, "mattextures", "sampblack", 0);
	SetDynamicObjectMaterialText(tmpobjid, 5, "√ã√ë", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFF000000, 1);
	SetDynamicObjectMaterialText(tmpobjid, 4, "√Ä√á√ë", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFFBA55D3, 1);
	SetDynamicObjectMaterialText(tmpobjid, 3, "√Å√†√∞", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFF7B68EE, 1);
	SetDynamicObjectMaterialText(tmpobjid, 2, "√ç√Æ√¨√•√∞√†", 90, "Georgia", 40, 0, 0xFFFFFFFF, 0xFF8A2BE2, 1);
	SetDynamicObjectMaterialText(tmpobjid, 1, "24 / 7", 90, "Georgia", 40, 0, 0xFFFFFFFF, 0xFF191970, 1);
	SetDynamicObjectMaterialText(tmpobjid, 0, "-", 90, "Arial", 24, 1, 0xFFFFFFFF, 0xFF191970, 0);
	tmpobjid = CreateDynamicObject(5811, 1131.199951, -1380.420043, 17.070299, 0.000000, 0.000000, 0.000000); // √ß√†√¨√•√≠¬∏√≠√≠√†√ø √±√≤√†√≠S√≠√∞√≤√≠√†√ø
	SetDynamicObjectMaterial(tmpobjid, 6, 18996, "mattextures", "sampblack", 0);
	SetDynamicObjectMaterialText(tmpobjid, 5, "24 / 7", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFF000000, 1);
	SetDynamicObjectMaterialText(tmpobjid, 4, "√Å√†√∞", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFFBA55D3, 1);
	SetDynamicObjectMaterialText(tmpobjid, 3, "Jims K", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFF7B68EE, 1);
	SetDynamicObjectMaterialText(tmpobjid, 2, "√Å√Æ√´√º√≠√®√∂√†", 90, "Georgia", 40, 0, 0xFFFFFFFF, 0xFF8A2BE2, 1);
	SetDynamicObjectMaterialText(tmpobjid, 1, "√Ä√á√ë", 90, "Georgia", 40, 0, 0xFFFFFFFF, 0xFF191970, 1);
	SetDynamicObjectMaterialText(tmpobjid, 0, "-", 90, "Arial", 24, 1, 0xFFFFFFFF, 0xFF191970, 0);
	tmpobjid = CreateDynamicObject(5811, 202.489044, 64.191184, 5.558123, 0.000000, 0.000000, 90.000000); 
	SetDynamicObjectMaterial(tmpobjid, 6, 18996, "mattextures", "sampblack", 0);
	SetDynamicObjectMaterialText(tmpobjid, 5, "Blue B", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFF000000, 1);
	SetDynamicObjectMaterialText(tmpobjid, 4, "√ã√ë", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFFBA55D3, 1);
	SetDynamicObjectMaterialText(tmpobjid, 3, "√í√∞√†√±√±√†", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFF7B68EE, 1);
	SetDynamicObjectMaterialText(tmpobjid, 2, "√ë√≤√Æ√ø√≠√™√†", 90, "Georgia", 40, 0, 0xFFFFFFFF, 0xFF8A2BE2, 1);
	SetDynamicObjectMaterialText(tmpobjid, 1, "24 / 7", 90, "Georgia", 40, 0, 0xFFFFFFFF, 0xFF191970, 1);
	SetDynamicObjectMaterialText(tmpobjid, 0, "-", 90, "Arial", 24, 1, 0xFFFFFFFF, 0xFF191970, 0);
	tmpobjid = CreateDynamicObject(5811, 2279.468750, 31.840316, 29.604387, 0.000000, 0.000000, 90.000000); 
	SetDynamicObjectMaterial(tmpobjid, 6, 18996, "mattextures", "sampblack", 0);
	SetDynamicObjectMaterialText(tmpobjid, 5, "P Creek", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFF000000, 1);
	SetDynamicObjectMaterialText(tmpobjid, 4, "√í√∞√†√±√±√†", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFFBA55D3, 1);
	SetDynamicObjectMaterialText(tmpobjid, 3, "√ã√ë", 90, "Georgia", 70, 0, 0xFFFFFFFF, 0xFF7B68EE, 1);
	SetDynamicObjectMaterialText(tmpobjid, 2, "√ã√Ç", 90, "Georgia", 40, 0, 0xFFFFFFFF, 0xFF8A2BE2, 1);
	SetDynamicObjectMaterialText(tmpobjid, 1, "24 / 7", 90, "Georgia", 40, 0, 0xFFFFFFFF, 0xFF191970, 1);
	SetDynamicObjectMaterialText(tmpobjid, 0, "-", 90, "Arial", 24, 1, 0xFFFFFFFF, 0xFF191970, 0);

	// √¨√†√ø√™ √≠√† √ë√†√≠√≤√† √å√†√∞√®√®
	mayak = CreateDynamicObject(18656, 154.79480, -1950.44446, 47.48010, 0.00000, 0.00000, 0.00000);
	rotate_mayak();

	tmpobjid = CreateDynamicObject(19980, -278.417053, -1813.121948, 14.648257, 0.000000, 0.000000, 180.000000);
	SetDynamicObjectMaterialText(tmpobjid, 2, "√ò√†√µ√≤√†\n{ffd770}>>>", 130, "Arial", 115, 0, -1, -16750934, 1);

	// √ë√†√´√Æ√≠ √¨√Æ√°√®√´√º√≠√Æ√© √±√¢√ø√ß√®
	tmpobjid = CreateDynamicObject(19483, 2337.823975, -801.393005, 3002.824951, 0.000000, -0.000000, -0.400000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√è√∞√ÆS√≠√¶√† SIM-√™√†√∞√≤", 130, "Engravers MT", 31, 1, 0xFFFFFFFF, 0, 1);
	tmpobjid = CreateDynamicObject(19483, 2347.322998, -801.413025, 3002.824951, 0.000000, -0.000000, 179.998993);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√è√∞√ÆS√≠√¶√† SIM-√™√†√∞√≤", 130, "Engravers MT", 31, 1, 0xFFFFFFFF, 0, 1);
	tmpobjid = CreateDynamicObject(19483, 2342.596924, -806.763977, 3001.803955, 0.000000, 0.000000, 89.999001);
	SetDynamicObjectMaterialText(tmpobjid, 0, "SIM √ä√Ä√ê√í√õ", 140, "Ariel", 20, 1, 0xFFFFFFFF, 0, 1);
	tmpobjid = CreateDynamicObject(19483, 2342.596924, -806.763977, 3001.934082, 0.000000, 0.000000, 89.999001);
	SetDynamicObjectMaterialText(tmpobjid, 0, "c", 140, "Webdings", 70, 0, 0xFFFFFFFF, 0, 1);
	tmpobjid = CreateDynamicObject(19483, 2342.537109, -806.763977, 3001.924072, 0.000000, 0.000000, 89.999001);
	SetDynamicObjectMaterialText(tmpobjid, 0, "3", 140, "Wingdings", 70, 0, 0xFFFFFFFF, 0, 1);
	tmpobjid = CreateDynamicObject(19483, 2349.604980, -800.293030, 3002.145020, 0.000000, -0.000000, 179.998993);
	SetDynamicObjectMaterialText(tmpobjid, 0, "J", 130, "Wingdings", 150, 0, 0xF0000000, 0, 1);
	tmpobjid = CreateDynamicObject(19483, 2342.596924, -806.763977, 3002.165039, 0.000000, 0.000000, 89.999001);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√ë√é√í√é√Ç√é√â √ë√Ç√ü√á√à", 140, "Engravers MT", 33, 1, 0xFFFFFFFF, 0, 1);
	tmpobjid = CreateDynamicObject(19483, 2342.596924, -806.763977, 3002.344971, 0.000000, 0.000000, 89.999001);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√ë√Ä√ã√é√ç", 130, "Engravers MT", 80, 0, 0xFFFFFFFF, 0, 1);
	tmpobjid = CreateDynamicObject(19483, 2349.614990, -801.353027, 3002.205078, 0.000000, -0.000000, 179.998993);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√ë√é√í√é√Ç√é√â √ë√Ç√ü√á√à", 140, "Engravers MT", 33, 1, 0xFFFFFFFF, 0, 1);
	tmpobjid = CreateDynamicObject(19483, 2349.614990, -801.353027, 3002.385010, 0.000000, -0.000000, 179.998993);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√ë√Ä√ã√é√ç", 130, "Engravers MT", 80, 0, 0xFFFFFFFF, 0, 1);
	tmpobjid = CreateDynamicObject(19483, 2335.394043, -801.327026, 3002.205078, 0.000000, 0.000000, -0.200000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√ë√é√í√é√Ç√é√â √ë√Ç√ü√á√à", 140, "Engravers MT", 33, 1, 0xFFFFFFFF, 0, 1);
	tmpobjid = CreateDynamicObject(19483, 2335.394043, -801.327026, 3002.385010, 0.000000, 0.000000, -0.200000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√ë√Ä√ã√é√ç", 130, "Engravers MT", 80, 0, 0xFFFFFFFF, 0, 1);
	tmpobjid = CreateDynamicObject(19483, 2347.422119, -806.273987, 3002.935059, 0.000000, 0.000000, 89.999001);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√í√•√´√•√¥√Æ√≠√ª", 130, "Engravers MT", 60, 0, 0xFFFFFFFF, 0, 1);
	tmpobjid = CreateDynamicObject(19483, 2337.685059, -806.273987, 3002.935059, 0.000000, 0.000000, 89.999001);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√í√•√´√•√¥√Æ√≠√ª", 130, "Engravers MT", 60, 0, 0xFFFFFFFF, 0, 1);

	// √ë√å√à
	tmpobjid = CreateDynamicObject(19483, 1651.303223, -1642.467651, 64.897301, 0.000000, 0.000000, -0.019200, 1);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√ã√ì√ó√ò√à√Ö √ê√Ä√Å√é√í√ç√à√ä√à", 140, "Arial", 40, 0, 0xFF000000, 0, 1);

	// √≤√•√™√±√≤√ª √¢ √®√≠√≤√•√∞√º√•√∞√• √î√Å√ê
	tmpobjid = CreateDynamicObject(2661, 835.893738, -1043.405884, 2108.431641, 0.000000, 0.000000, 0.000000, -1, -1);
	format(string, 16, "√™√Æ√¨√≠√†√≤√†\n√§√Æ√Ø√∞√Æ√±√†");
	SetDynamicObjectMaterialText(tmpobjid, 0, string, 140, "Arial", 100, 0, 0xFFFFFFFF, 0xFF000000, 1);
	tmpobjid = CreateDynamicObject(19483, 834.249512, -1057.478760, 2101.445801, 0.000000, 0.000000, 90.000000, -1, -1);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√ª", 90, "Webdings", 175, 0, 0xFF848484, 0, 1);
	tmpobjid = CreateDynamicObject(19483, 834.262329, -1057.478271, 2101.716309, 0.000000, 0.000000, 90.000000, -1, -1);
	format(string, 32, "FEDERAL BUREAU\nOF INVESTIGATION");
	SetDynamicObjectMaterialText(tmpobjid, 0, string, 140, "Arial", 60, 0, 0xFF000000, 0, 1);
	tmpobjid = CreateDynamicObject(19483, 834.179504, -1057.925659, 2101.585938, 0.000000, 0.000000, 270.000000, -1, -1);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√ª", 90, "Webdings", 175, 0, 0xFF848484, 0, 1);
	tmpobjid = CreateDynamicObject(19483, 834.262329, -1057.929077, 2101.716309, 0.000000, 0.000000, -90.000000, -1, -1);
	format(string, 32, "FEDERAL BUREAU\nOF INVESTIGATION");
	SetDynamicObjectMaterialText(tmpobjid, 0, string, 140, "Arial", 60, 0, 0xFF000000, 0, 1);
	tmpobjid = CreateDynamicObject(2661, 840.372070, -1051.940063, 2108.431641, 0.000000, 0.000000, 180.000000, -1, -1);
	format(string, 14, "√ß√†√´\n√±√Æ√¢√•√π√†√≠√®√©");
	SetDynamicObjectMaterialText(tmpobjid, 0, string, 140, "Arial", 100, 0, 0xFFFFFFFF, 0xFF000000, 1);
	tmpobjid = CreateDynamicObject(2661, 824.942078, -1051.940063, 2108.431641, 0.000000, 0.000000, 180.000000, -1, -1);
	format(string, 20, "√™√†√°√®No\n√ß√†√¨√•√±√≤√®√≤√•√´√ø");
	SetDynamicObjectMaterialText(tmpobjid, 0, string, 140, "Arial", 100, 0, 0xFFFFFFFF, 0xFF000000, 1);
	tmpobjid = CreateDynamicObject(2661, 823.033203, -1043.408813, 2108.431641, 0.000000, 0.000000, 0.000000, -1, -1);
	format(string, 20, "√±√´√≥√¶√•√°√≠√Æ√•\n√Ø√Æ√¨√•√π√•√≠√®√•");
	SetDynamicObjectMaterialText(tmpobjid, 0, string, 140, "Arial", 100, 0, 0xFFFFFFFF, 0xFF000000, 1);
	tmpobjid = CreateDynamicObject(2661, 819.893066, -1046.302612, 2108.431641, 0.000000, 0.000000, 90.000000, -1, -1);
	format(string, 18, "√™√†√°√®No\n√§√®√∞√•√™√≤√Æ√∞√†");
	SetDynamicObjectMaterialText(tmpobjid, 0, string, 140, "Arial", 100, 0, 0xFFFFFFFF, 0xFF000000, 1);
	tmpobjid = CreateDynamicObject(2661, 838.617371, -1072.009888, 2108.431641, 0.000000, 0.000000, 180.000000, -1, -1);
	format(string, 14, "√™√Æ√≠√¥√•√∞√•√≠√∂\n√ß√†√´");
	SetDynamicObjectMaterialText(tmpobjid, 0, string, 140, "Arial", 100, 0, 0xFFFFFFFF, 0xFF000000, 1);
	tmpobjid = CreateDynamicObject(2661, 821.765625, -1069.870605, 2108.431641, 0.000000, 0.000000, 90.000000, -1, -1);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√≤√®√∞", 140, "Arial", 100, 0, 0xFFFFFFFF, 0xFF000000, 1);

	////////////////////////////////////////////////////////////////////////////////
	// √Æ√±√≤√†√≠√Æ√¢√™√®

	new bus_str[12];
	format(bus_str, 12, "BUS\nSTATION");

	tmpobjid = CreateDynamicObject(1257, 1123.15, -1748.52, 13.8184, 0.0, 0.0, 270.0);
	SetDynamicObjectMaterialText(tmpobjid, 0, bus_str, 100, "Ariel", 40, 1, 0xFFFFFFFF, 0xFF3333, 1);
	SetDynamicObjectMaterial(tmpobjid, 15, 3988, "civic06_lan", "pediments2", 0);
	SetDynamicObjectMaterial(tmpobjid, 3, 1977, "cooler1", "kb_vend2", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 17562, "coast_apts", "sunsetmall03b_law", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 1977, "cooler1", "koen_win", 0);

	tmpobjid = CreateDynamicObject(1257, 1115.34, -1733.06, 13.8184, 0.0, 0.0, 90.0);
	SetDynamicObjectMaterialText(tmpobjid, 0, bus_str, 100, "Ariel", 40, 1, 0xFFFFFFFF, 0xFF3333, 1);
	SetDynamicObjectMaterial(tmpobjid, 15, 3988, "civic06_lan", "pediments2", 0);
	SetDynamicObjectMaterial(tmpobjid, 3, 1977, "cooler1", "kb_vend2", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 17562, "coast_apts", "sunsetmall03b_law", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 1977, "cooler1", "koen_win", 0);

	tmpobjid = CreateDynamicObject(1257, 1258.0, -1304.16, 13.5439, 0.0, 0.0, 0.0);
	SetDynamicObjectMaterialText(tmpobjid, 0, bus_str, 100, "Ariel", 40, 1, 0xFFFFFFFF, 0xFF3333, 1);
	SetDynamicObjectMaterial(tmpobjid, 15, 3988, "civic06_lan", "pediments2", 0);
	SetDynamicObjectMaterial(tmpobjid, 3, 1977, "cooler1", "kb_vend2", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 17562, "coast_apts", "sunsetmall03b_law", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 1977, "cooler1", "koen_win", 0);

	tmpobjid = CreateDynamicObject(1257, 1258.0, -1320.49, 13.5439, 0.0, 0.0, 0.0);
	SetDynamicObjectMaterialText(tmpobjid, 0, bus_str, 100, "Ariel", 40, 1, 0xFFFFFFFF, 0xFF3333, 1);
	SetDynamicObjectMaterial(tmpobjid, 15, 3988, "civic06_lan", "pediments2", 0);
	SetDynamicObjectMaterial(tmpobjid, 3, 1977, "cooler1", "kb_vend2", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 17562, "coast_apts", "sunsetmall03b_law", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 1977, "cooler1", "koen_win", 0);

	tmpobjid = CreateDynamicObject(1257, 1258.0, -1347.86, 13.5439, 0.0, 0.0, 0.0);
	SetDynamicObjectMaterialText(tmpobjid, 0, bus_str, 100, "Ariel", 40, 1, 0xFFFFFFFF, 0xFF3333, 1);
	SetDynamicObjectMaterial(tmpobjid, 15, 3988, "civic06_lan", "pediments2", 0);
	SetDynamicObjectMaterial(tmpobjid, 3, 1977, "cooler1", "kb_vend2", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 17562, "coast_apts", "sunsetmall03b_law", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 1977, "cooler1", "koen_win", 0);

	tmpobjid = CreateDynamicObject(1257, 1258.0, -1364.03, 13.5439, 0.0, 0.0, 0.0);
	SetDynamicObjectMaterialText(tmpobjid, 0, bus_str, 100, "Ariel", 40, 1, 0xFFFFFFFF, 0xFF3333, 1);
	SetDynamicObjectMaterial(tmpobjid, 15, 3988, "civic06_lan", "pediments2", 0);
	SetDynamicObjectMaterial(tmpobjid, 3, 1977, "cooler1", "kb_vend2", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 17562, "coast_apts", "sunsetmall03b_law", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 1977, "cooler1", "koen_win", 0);

	tmpobjid = CreateDynamicObject(1257, -2023.694335, -2519.291992, 33.801807, 2.700002, 0.000000, -135.000000);
	SetDynamicObjectMaterialText(tmpobjid, 0, bus_str, 100, "Ariel", 40, 1, 0xFFFFFFFF, 0xFF3333, 1);
	SetDynamicObjectMaterial(tmpobjid, 15, 3988, "civic06_lan", "pediments2", 0);
	SetDynamicObjectMaterial(tmpobjid, 3, 1977, "cooler1", "kb_vend2", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 17562, "coast_apts", "sunsetmall03b_law", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 1977, "cooler1", "koen_win", 0);

	tmpobjid = CreateDynamicObject(1257, -278.823516, -1806.071533, 14.870571, 10.700001, 0.000000, 169.600021);
	SetDynamicObjectMaterialText(tmpobjid, 0, bus_str, 100, "Ariel", 40, 1, 0xFFFFFFFF, 0xFF3333, 1);
	SetDynamicObjectMaterial(tmpobjid, 15, 3988, "civic06_lan", "pediments2", 0);
	SetDynamicObjectMaterial(tmpobjid, 3, 1977, "cooler1", "kb_vend2", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 17562, "coast_apts", "sunsetmall03b_law", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 1977, "cooler1", "koen_win", 0);

	tmpobjid = CreateDynamicObject(1257, -2026.307495, -77.887023, 35.551891, 0.000000, 0.000000, -90.000000);
	SetDynamicObjectMaterialText(tmpobjid, 0, bus_str, 100, "Ariel", 40, 1, 0xFFFFFFFF, 0xFF3333, 1);
	SetDynamicObjectMaterial(tmpobjid, 15, 3988, "civic06_lan", "pediments2", 0);
	SetDynamicObjectMaterial(tmpobjid, 3, 1977, "cooler1", "kb_vend2", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 17562, "coast_apts", "sunsetmall03b_law", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 1977, "cooler1", "koen_win", 0);

	tmpobjid = CreateDynamicObject(1257, 2253.410888, -2231.481933, 13.786870, 0.000000, 0.000000, -135.000000);
	SetDynamicObjectMaterialText(tmpobjid, 0, bus_str, 100, "Ariel", 40, 1, 0xFFFFFFFF, 0xFF3333, 1);
	SetDynamicObjectMaterial(tmpobjid, 15, 3988, "civic06_lan", "pediments2", 0);
	SetDynamicObjectMaterial(tmpobjid, 3, 1977, "cooler1", "kb_vend2", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 17562, "coast_apts", "sunsetmall03b_law", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 1977, "cooler1", "koen_win", 0);

	tmpobjid = CreateDynamicObject(1257, 1566.128906, -1724.154174, 13.812813, 0.000000, 0.000000, 90.000000);
	SetDynamicObjectMaterialText(tmpobjid, 0, bus_str, 100, "Ariel", 40, 1, 0xFFFFFFFF, 0xFF3333, 1);
	SetDynamicObjectMaterial(tmpobjid, 15, 3988, "civic06_lan", "pediments2", 0);
	SetDynamicObjectMaterial(tmpobjid, 3, 1977, "cooler1", "kb_vend2", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 17562, "coast_apts", "sunsetmall03b_law", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 1977, "cooler1", "koen_win", 0);

	tmpobjid = CreateDynamicObject(1257, 1282.734008, -1387.700683, 13.663872, 0.000000, 0.000000, 90.000000);
	SetDynamicObjectMaterialText(tmpobjid, 0, bus_str, 100, "Ariel", 40, 1, 0xFFFFFFFF, 0xFF3333, 1);
	SetDynamicObjectMaterial(tmpobjid, 15, 3988, "civic06_lan", "pediments2", 0);
	SetDynamicObjectMaterial(tmpobjid, 3, 1977, "cooler1", "kb_vend2", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 17562, "coast_apts", "sunsetmall03b_law", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 1977, "cooler1", "koen_win", 0);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	////////////////////////////////////////////////////////////////////////////////////////////////////
	////////////////////////////////////////////////////////////////////////////////////////////////////

	// √≤√•√™√±√≤√ª √®√≠√≤√•√∞√º√•√∞√† √Ä√§√¨. √è√∞√•√ß.
	tmpobjid = CreateDynamicObject(3111, -815.818115, 1092.708618, 2747.999268, 90.000000, 0.000000, 180.000000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√ä√Ä√Å√àNo\n√è√ê√Ö√á√à√Ñ√Ö√ç√í√Ä", 140, "Arial", 40, 0, 0xFF000000, 1, 1);
	tmpobjid = CreateDynamicObject(3111, -815.818115, 1110.457642, 2747.999268, 90.000000, 0.000000, 0.000000);
	format(string,16,"√ä√Ä√Å√àNo\n√Ç√à√ñ√Ö-√è√ê√Ö√á√à√Ñ√Ö√ç√í√Ä");
	SetDynamicObjectMaterialText(tmpobjid, 0, string, 140, "Arial", 40, 0, 0xFF000000, 1, 1);
	tmpobjid = CreateDynamicObject(3111, -819.242615, 1094.296143, 2747.999268, 90.000000, 0.000000, 90.000000);
	format(string,30,"√é√î√à√ë\n√à√ë√è√é√ã√ç√à√í√Ö√ã√ú√ç√é√É√é\n√ä√é√å√à√í√Ö√í√Ä");
	SetDynamicObjectMaterialText(tmpobjid, 0, string, 140, "Arial", 40, 0, 0xFF000000, 1, 1);
	tmpobjid = CreateDynamicObject(3111, -819.242615, 1108.890137, 2747.999268, 90.000000, 0.000000, 90.000000);
	format(string,30,"√é√î√à√ë\n√à√ë√è√é√ã√ç√à√í√Ö√ã√ú√ç√é√É√é\n√ä√é√å√à√í√Ö√í√Ä");
	SetDynamicObjectMaterialText(tmpobjid, 0, string, 140, "Arial", 40, 0, 0xFF000000, 1, 1);
	tmpobjid = CreateDynamicObject(3111, -820.705322, 1088.388550, 2745.982666, 0.000000, 0.000000, 270.000000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√ª", 100, "Webdings", 200, 0, 0xFF000000, 0, 1);
	//

	// √≤√•√™√±√≤√ª // √™√¢√†√∞√≤√®√∞√ª

	tmpobjid = CreateDynamicObject(19327, 287.497009, -1611.635010, 49.494999, 0.000000, 0.000000, -9.999000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√ù√í√Ä√Ü: 1", 130, "Calibri", 90, 1, 0xFF00FF00, 0, 1);
	tmpobjid = CreateDynamicObject(19327, 287.497009, -1611.635010, 53.994999, 0.000000, 0.000000, -9.999000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√ù√í√Ä√Ü: 2", 130, "Calibri", 90, 1, 0xFF00FF00, 0, 1);
	tmpobjid = CreateDynamicObject(19327, 287.497009, -1611.635010, 58.494999, 0.000000, 0.000000, -9.999000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√ù√í√Ä√Ü: 3", 130, "Calibri", 90, 1, 0xFF00FF00, 0, 1);
	tmpobjid = CreateDynamicObject(19327, 287.497009, -1611.635010, 62.994999, 0.000000, 0.000000, -9.999000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√ù√í√Ä√Ü: 4", 130, "Calibri", 90, 1, 0xFF00FF00, 0, 1);
	tmpobjid = CreateDynamicObject(19327, 287.497009, -1611.635010, 67.494995, 0.000000, 0.000000, -9.999000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√ù√í√Ä√Ü: 5", 130, "Calibri", 90, 1, 0xFF00FF00, 0, 1);
	tmpobjid = CreateDynamicObject(19327, 287.497009, -1611.635010, 71.994995, 0.000000, 0.000000, -9.999000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√ù√í√Ä√Ü: 6", 130, "Calibri", 90, 1, 0xFF00FF00, 0, 1);
	tmpobjid = CreateDynamicObject(19327, 287.497009, -1611.635010, 76.494995, 0.000000, 0.000000, -9.999000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√ù√í√Ä√Ü: 7", 130, "Calibri", 90, 1, 0xFF00FF00, 0, 1);
	tmpobjid = CreateDynamicObject(19327, 287.497009, -1611.635010, 80.994995, 0.000000, 0.000000, -9.999000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√ù√í√Ä√Ü: 8", 130, "Calibri", 90, 1, 0xFF00FF00, 0, 1);
	tmpobjid = CreateDynamicObject(19327, 287.497009, -1611.635010, 85.494995, 0.000000, 0.000000, -9.999000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√ù√í√Ä√Ü: 9", 130, "Calibri", 90, 1, 0xFF00FF00, 0, 1);
	tmpobjid = CreateDynamicObject(19327, 287.497009, -1611.635010, 89.994995, 0.000000, 0.000000, -9.999000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√ù√í√Ä√Ü: 10", 130, "Calibri", 90, 1, 0xFF00FF00, 0, 1);
	tmpobjid = CreateDynamicObject(19327, 287.497009, -1611.635010, 94.494995, 0.000000, 0.000000, -9.999000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√ù√í√Ä√Ü: 11", 130, "Calibri", 90, 1, 0xFF00FF00, 0, 1);
	tmpobjid = CreateDynamicObject(19327, 287.497009, -1611.635010, 98.994995, 0.000000, 0.000000, -9.999000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√ù√í√Ä√Ü: 12", 130, "Calibri", 90, 1, 0xFF00FF00, 0, 1);

	//////////////////////////////////////////////////////////////////////////////////////

	// √≤√•√™√±√≤√ª / √≤√æ√∞√º√¨√†

	tmpobjid = CreateDynamicObject(19477, -99.259300, 2434.837891, 1188.213501, 0.000000, 0.000151, 0.000000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√ä√Æ√¨√≠√†√≤√† √Æ√µ√∞√†√≠√ª", 130, "Ariel", 70, 1, 0xFF000000, 0, 1);
	tmpobjid = CreateDynamicObject(19477, -99.299286, 2434.837891, 1188.213501, 0.000000, 0.000151, 0.000000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√ä√Æ√¨√≠√†√≤√† √Æ√µ√∞√†√≠√ª", 130, "Ariel", 70, 1, 0xFF000000, 0, 1);
	tmpobjid = CreateDynamicObject(19477, -96.041908, 2439.784912, 1180.820190, 0.000000, 0.000000, 90.000000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√Ñ√Ö√Ü√ì√ê√ç√õ√â", 130, "Ariel", 70, 1, 0xFF000000, 0, 1);

	//

	tmpobjid = CreateDynamicObject(2599, 354.943054, -1806.696777, 4.084018, 0.000000, 0.000000, 0.000000);
    SetDynamicObjectMaterialText(tmpobjid, 0, "ELEGY\n\n"CWHITE"√è√Æ√§√∞√Æ√°√≠√•√•:\n"CORANGE"/vinfo 1", 100, "Ariel", 50, 0, 0xFF66AAFF, 0xFFBB0000, 1);
    tmpobjid = CreateDynamicObject(2599, 345.323242, -1806.696777, 4.084018, 0.000000, 0.000000, 0.000000);
    SetDynamicObjectMaterialText(tmpobjid, 0, "INFERNUS\n\n"CWHITE"√è√Æ√§√∞√Æ√°√≠√•√•:\n"CORANGE"/vinfo 2", 100, "Ariel", 50, 0, 0xFF66AAFF, 0xFFBB0000, 1);
    tmpobjid = CreateDynamicObject(2599, 335.583496, -1806.696777, 4.084018, 0.000000, 0.000000, 0.000000);
    SetDynamicObjectMaterialText(tmpobjid, 0, "BULLET\n\n"CWHITE"√è√Æ√§√∞√Æ√°√≠√•√•:\n"CORANGE"/vinfo 3", 100, "Ariel", 50, 0, 0xFF66AAFF, 0xFFBB0000, 1);
    tmpobjid = CreateDynamicObject(2599, 325.983734, -1806.696777, 4.084018, 0.000000, 0.000000, 0.000000);
    SetDynamicObjectMaterialText(tmpobjid, 0, "TURISMO\n\n"CWHITE"√è√Æ√§√∞√Æ√°√≠√•√•:\n"CORANGE"/vinfo 4", 100, "Ariel", 50, 0, 0xFF66AAFF, 0xFFBB0000, 1);
    tmpobjid = CreateDynamicObject(2599, 316.233703, -1806.696777, 4.084018, 0.000000, 0.000000, 0.000000);
    SetDynamicObjectMaterialText(tmpobjid, 0, "PERENNIEL\n\n"CWHITE"√è√Æ√§√∞√Æ√°√≠√•√•:\n"CORANGE"/vinfo 5", 100, "Ariel", 50, 0, 0xFF66AAFF, 0xFFBB0000, 1);
    tmpobjid = CreateDynamicObject(2599, 313.543487, -1791.268676, 3.998999, 0.000000, 0.000000, 0.000000);
    SetDynamicObjectMaterialText(tmpobjid, 0, "BULLET\n\n"CWHITE"√è√Æ√§√∞√Æ√°√≠√•√•:\n"CORANGE"/vinfo 6", 100, "Ariel", 50, 0, 0xFF66AAFF, 0xFFBB0000, 1);

    tmpobjid = CreateDynamicObject(2599, 323.090515, -1790.681518, 4.217584, 0.000000, 0.000000, 0.000000);
    SetDynamicObjectMaterialText(tmpobjid, 0, "INFERNUS\n\n"CWHITE"√è√Æ√§√∞√Æ√°√≠√•√•:\n"CORANGE"/vinfo 7", 100, "Ariel", 50, 0, 0xFF66AAFF, 0xFFBB0000, 1);
    tmpobjid = CreateDynamicObject(2599, 332.910308, -1790.871704, 4.317585, 0.000000, 0.000000, 0.000000);
    SetDynamicObjectMaterialText(tmpobjid, 0, "ZR-350\n\n"CWHITE"√è√Æ√§√∞√Æ√°√≠√•√•:\n"CORANGE"/vinfo 8", 100, "Ariel", 50, 0, 0xFF66AAFF, 0xFFBB0000, 1);

    tmpobjid = CreateDynamicObject(2599, 317.74399, -1803.72461, 4.054, 0.00, 0.00, 90);
    SetDynamicObjectMaterialText(tmpobjid, 0, "SANDKING\n{ffff00}STOCK\n"CWHITE"√è√Æ√§√∞√Æ√°√≠√•√•:\n"CORANGE"/vinfo 9", 100, "Ariel", 50, 0, 0xFF66AAFF, 0xFFBB0000, 1);
    tmpobjid = CreateDynamicObject(2599, 317.74399, -1795.90002, 4.054, 0.00, 0.00, 90);
    SetDynamicObjectMaterialText(tmpobjid, 0, "SANDKING\n{ff3300}AMG\n"CWHITE"√è√Æ√§√∞√Æ√°√≠√•√•:\n"CORANGE"/vinfo 10", 100, "Ariel", 50, 0, 0xFF66AAFF, 0xFFBB0000, 1);

	fix_light_bank = CreateDynamicSphere(4.8594,164.3349,1243.9440,110.0);


	tmpobjid = CreateObject(19483, 2181.065918, 1626.826050, 1045.088989, 0.000000, 0.000000, 270.000000);
	SetObjectMaterialText(tmpobjid, "√í√≥√†√´√•√≤", 0, 130, "Ariel", 45, 0, 0xFF000000, 0, 1);
	tmpobjid = CreateObject(19483, 2182.585938, 1633.258057, 1046.489990, 0.000000, 0.000000, 270.000000);
	SetObjectMaterialText(tmpobjid, "√å", 0, 130, "Ariel", 45, 0, 0xFF000000, 0, 1);
	tmpobjid = CreateObject(19483, 2179.333984, 1633.258057, 1046.489990, 0.000000, 0.000000, 270.000000);
	SetObjectMaterialText(tmpobjid, "√Ü", 0, 130, "Ariel", 45, 0, 0xFF000000, 0, 1);


	new str_bankobj[17];
	format(str_bankobj, sizeof(str_bankobj), "BANK\nSAN ANDREAS");

	tmpobjid = CreateDynamicObject(19482, -3.533782, 160.552764, 1245.543945, 0.000000, 0.000000, 0.079396);
	SetDynamicObjectMaterialText(tmpobjid, 0, str_bankobj, 130, "Verdana", 60, 0, -1, 0, 1);

	kill_zone = CreateDynamicSphere(-2.0,172.8,1243.9,3.5);
	bank_exits = CreateDynamicSphere(5.0744,150.3098,1243.1780,1.0);
	bank_payproperty = CreateDynamicSphere(-0.6927,161.4400,1243.9670,1.0);
	bank_pickmenu = CreateDynamicSphere(-0.6922,159.5390,1243.9670,1.0);
	helpbank = CreateDynamicSphere(-0.6930,157.5813,1243.9670, 1.0);

	tmpobjid = CreateDynamicObject(19481, -1494.000000, 920.049988, 27.737400, 0.000000, 0.000000, 180.000000, -1, -1);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√Å√†√≠√™", 80, "Arial", 23, 1, 0xFF00FF00, 0, 1);

	tmpobjid = CreateDynamicObject(19327, 1795.911987, -549.343018, 2135.931885, 0.000000, 0.000000, 89.899002, -1, -1);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√Ç√Ö√ê√ï√é√Ç√ç√õ√â √ë√ì√Ñ", 130, "Ariel", 65, 1, 0xFFFFFFFF, 0, 1);

	tmpobjid = CreateDynamicObject(19980, -1996.585327, 137.310455, 26.539062, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00); 
	format(string, 18, "√è√∞√Æ√™√†√≤\n√†√¢√≤√Æ\n<<<");
	SetDynamicObjectMaterialText(tmpobjid, 2, string, 130, "Tahoma", 85, 1, 0xFFffcd00, 0xFF885525, 1);
	tmpobjid = CreateDynamicObject(19980, 1634.059082, 1824.079223, 9.800312, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterialText(tmpobjid, 2, string, 130, "Tahoma", 85, 1, 0xFFffcd00, 0xFF885525, 1);
	tmpobjid = CreateDynamicObject(19980, 1190.001342, -1324.813476, 12.479000, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300.00, 300.00); 
	format(string, 18, "√è√∞√Æ√™√†√≤\n√†√¢√≤√Æ\n>>>");
	SetDynamicObjectMaterialText(tmpobjid, 2, string, 130, "Tahoma", 85, 1, 0xFFffcd00, 0xFF885525, 1);
	tmpobjid = CreateDynamicObject(19980, -2656.417236, 619.411315, 13.453125, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00); 
	format(string, 18, "√è√∞√Æ√™√†√≤\n√†√¢√≤√Æ\n<<<");
	SetDynamicObjectMaterialText(tmpobjid, 2, string, 130, "Tahoma", 85, 1, 0xFFffcd00, 0xFF885525, 1);

	tmpobjid = CreateDynamicObject(19482, 1798.413940, -1936.316650, 15.809900, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterialText(tmpobjid, 0, "√è√ê√é√ä√Ä√í √Ä√Ç√í√é", 130, "Tahoma", 80, 1, 0xFF800000, 0, 1);
	tmpobjid = CreateDynamicObject(8168, 1798.380126, -1938.823364, 14.358599, 0.000000, 0.000000, -163.300094, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 10, 5033, "union_las", "lasunion7", 0);
	SetDynamicObjectMaterial(tmpobjid, 8, 5033, "union_las", "lasunion2", 0);
	tmpobjid = CreateDynamicObject(19482, 1185.831665, -1361.276367, 16.505439, 0.000007, 0.000030, -0.000029, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterialText(tmpobjid, 0, "√è√ê√é√ä√Ä√í √Ä√Ç√í√é", 130, "Tahoma", 80, 1, 0xFF800000, 0, 1);
	tmpobjid = CreateDynamicObject(8168, 1183.324707, -1361.242553, 15.054141, 0.000027, -0.000016, 106.699760, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 10, 5033, "union_las", "lasunion7", 0);
	SetDynamicObjectMaterial(tmpobjid, 8, 5033, "union_las", "lasunion2", 0);
	tmpobjid = CreateDynamicObject(19482, -1992.488891, 98.440368, 29.834726, 0.000007, 0.000000, 89.999977, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterialText(tmpobjid, 0, "√è√ê√é√ä√Ä√í √Ä√Ç√í√é", 130, "Tahoma", 80, 1, 0xFF800000, 0, 1);
	tmpobjid = CreateDynamicObject(8168, -1992.522705, 95.933654, 28.383426, -0.000002, -0.000007, -163.300048, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 10, 5033, "union_las", "lasunion7", 0);
	SetDynamicObjectMaterial(tmpobjid, 8, 5033, "union_las", "lasunion2", 0);
	tmpobjid = CreateDynamicObject(19482, -2601.842285, 595.663635, 16.458782, 0.000007, 0.000000, -179.999938, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterialText(tmpobjid, 0, "√è√ê√é√ä√Ä√í √Ä√Ç√í√é", 130, "Tahoma", 80, 1, 0xFF800000, 0, 1);
	tmpobjid = CreateDynamicObject(8168, -2599.335449, 595.629943, 15.007483, -0.000002, -0.000007, -73.300056, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 10, 5033, "union_las", "lasunion7", 0);
	SetDynamicObjectMaterial(tmpobjid, 8, 5033, "union_las", "lasunion2", 0);
	tmpobjid = CreateDynamicObject(19482, 2823.253906, 1289.907958, 13.343982, 0.000007, 0.000007, 0.099952, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterialText(tmpobjid, 0, "√è√ê√é√ä√Ä√í √Ä√Ç√í√é", 130, "Tahoma", 80, 1, 0xFF800000, 0, 1);
	tmpobjid = CreateDynamicObject(8168, 2820.747314, 1289.937255, 11.892683, 0.000005, -0.000009, 106.799812, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 10, 5033, "union_las", "lasunion7", 0);
	SetDynamicObjectMaterial(tmpobjid, 8, 5033, "union_las", "lasunion2", 0);
	tmpobjid = CreateDynamicObject(19482, 1628.234497, 1848.087402, 13.265968, 0.000007, 0.000000, 179.999954, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterialText(tmpobjid, 0, "√è√ê√é√ä√Ä√í √Ä√Ç√í√é", 130, "Tahoma", 80, 1, 0xFF800000, 0, 1);
	tmpobjid = CreateDynamicObject(8168, 1630.741210, 1848.053588, 11.814669, -0.000002, -0.000007, -73.300079, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 10, 5033, "union_las", "lasunion7", 0);
	SetDynamicObjectMaterial(tmpobjid, 8, 5033, "union_las", "lasunion2", 0);
	tmpobjid = CreateDynamicObject(19482, 1153.179077, -1730.879028, 16.049091, -0.000007, -0.000000, -90.099876, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterialText(tmpobjid, 0, "√è√ê√é√ä√Ä√í √Ä√Ç√í√é", 130, "Tahoma", 80, 1, 0xFF800000, 0, 1);
	tmpobjid = CreateDynamicObject(8168, 1153.217285, -1728.372314, 14.597791, 0.000002, 0.000007, 16.599958, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 10, 5033, "union_las", "lasunion7", 0);
	SetDynamicObjectMaterial(tmpobjid, 8, 5033, "union_las", "lasunion2", 0);

	tmpobjid = CreateDynamicObject(19482, 1576.910034, -312.411011, 1321.338989, -0.000000, -0.000000, -89.999001, -1, -1);
	format(string, 15, "√í√û√ç√à√ç√É\n√Ä√í√Ö√ã√ú√Ö");
	SetDynamicObjectMaterialText(tmpobjid, 0, string, 130, "Ariel", 55, 1, 0xFFFFFFFF, 0, 1);

	tmpobjid = CreateDynamicObject(18066, -770.6159, -1785.2416, 15.9305, -19.1000, 0.4000, -125.1424, 1, 1);
	SetDynamicObjectMaterialText(tmpobjid, 0, "{000000}√ò√†√µ√≤√† √¨√•√´√™√Æ√£√Æ\n√ß√†√´√Æ√¶√•√≠√®√ø", 120, "Arial", 32, 1, -1, 0, 1);
	tmpobjid = CreateDynamicObject(18066, -753.1917, -1779.6311, 15.7277, -18.1999, 0.0000, 109.9066, 1, 1);
	SetDynamicObjectMaterialText(tmpobjid, 0, "{000000}√ò√†√µ√≤√† √£√´√≥√°√Æ√™√Æ√£√Æ\n√ß√†√´√Æ√¶√•√≠√®√ø", 120, "Arial", 32, 1, -1, 0, 1);

	tmpobjid = CreateDynamicObject(18066, -753.1914, -1779.6265, 15.7240, -17.9000, 0.0000, 109.8888, 1, 1);
	SetDynamicObjectMaterialText(tmpobjid, 0, "", 50, "Arial", 24, 0, -32256, -16777216, 1);
	tmpobjid = CreateDynamicObject(18066, -770.6235, -1785.2443, 15.9206, -18.8000, 0.0000, -125.0209, 1, 1);
	SetDynamicObjectMaterialText(tmpobjid, 0, "", 50, "Arial", 24, 0, -32256, -16777216, 1);

	tmpobjid = CreateDynamicObject(19482, 1274.262939, -1251.744995, 17.986000, -0.000000, -0.000000, -89.999001, -1, -1);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√í√û√ç√à√ç√É √Ä√í√Ö√ã√ú√Ö", 130, "Ariel", 60, 1, 0xFF000000, 0, 1);

	tmpobjid = CreateDynamicObject(19479, 1173.051025, -1352.881958, 22.278000, 0.000000, 0.000000, 0.000000, -1, -1);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√ñ√Ö√ç√í√ê√Ä√ã√ú√ç√Ä√ü √Å√é√ã√ú√ç√à√ñ√Ä", 130, "Ariel", 40, 1, 0xFFFF0000, 0, 1);

	army_foodsv = CreateDynamicCP(447.9718,-83.6843,999.5547, 1.0, 1, 4, -1, 30.0);
	army_foodvvc = CreateDynamicCP(447.9718,-83.6843,999.5547, 1.0, 2, 4, -1, 30.0);
	prop_info_cp = CreateDynamicCP(1490.2841,1305.7219,1093.2964, 1.0, 17, 3, -1, 15.0);
	
	army_foodvmf = CreateDynamicCP(447.9718,-83.6843,999.5547, 1.0, 3, 4, -1, 30.0);

	new lesopilkaTATA = CreateObject(19980, -2024.41602, -2497.58789, 31.289, 0.00, 0.00, 40);
	format(string, 40, "√ã√•√±√Æ√Ø√®√´√™√†\n"CYELLOW">>>");
	SetObjectMaterialText(lesopilkaTATA, string, 2, 130, "Arial", 110, 0, -1, -16724839, 1);
	
    news_checkpoint_LV = CreateDynamicCP(2308.8, -13.2, 26.7, 1.5, 4, 0, -1, 5.0);
	news_checkpoint_SF = CreateDynamicCP(2308.8, -13.2, 26.7, 1.5, 5, 0, -1, 5.0);
	news_checkpoint = CreateDynamicCP(2308.8, -13.2, 26.7, 1.5, 3, 0, -1, 5.0);
	armysv_patr_check = CreateDynamicCP(311.9093, -165.8559, 999.6010, 1.5, 229, 6, -1, 10.0);
	armyvvc_patr_check = CreateDynamicCP(311.9093, -165.8559, 999.6010, 1.5, 74, 6, -1, 10.0);
	armyvmf_patr_check = CreateDynamicCP(311.9093, -165.8559, 999.6010, 1.5, 23, 6, -1, 10.0);
	new bolka_nazv_ls = CreateDynamicObject(19353, 1194.1088, -1323.2445, 1585.7120, 0.0000, 0.0000, 179.9830, 7, 7);
	format(string, 45, "{000000}√Å√Æ√´√º√≠√®√∂√†\n√ã√Æ√±-√ë√†√≠√≤√Æ√±√†");
	SetDynamicObjectMaterialText(bolka_nazv_ls, 0, string, 140, "Arial", 70, 0, -1, 0, 1);
	new shtab_vvc = CreateObject(19353, 411.9735, 2536.5178, 19.2559, 0.0000, 0.0000, -179.8503);
	SetObjectMaterialText(shtab_vvc, "{000000}√ò√≤√†√°", 0, 140, "Arial", 140, 0, -16777216, 0, 1);

	new bolka_nazv_sf = CreateDynamicObject(19353, 1194.1088, -1323.2445, 1585.7120, 0.0000, 0.0000, 179.9830, 3, 7);
	format(string, 45, "{000000}√Å√Æ√´√º√≠√®√∂√†\n√ë√†√≠-√î√®√•√∞√∞√Æ");
	SetDynamicObjectMaterialText(bolka_nazv_sf, 0, string, 140, "Arial", 70, 0, -1, 0, 1);
	new bolka_nazv_lv = CreateDynamicObject(19353, 1194.1088, -1323.2445, 1585.7120, 0.0000, 0.0000, 179.9830, 4, 7);
	format(string, 45, "{000000}√Å√Æ√´√º√≠√®√∂√†\n√ã√†√±-√Ç√•√≠√≤√≥√∞√†√±√†");
	SetDynamicObjectMaterialText(bolka_nazv_lv, 0, string, 140, "Arial", 70, 0, -1, 0, 1);

	ammunation = CreateDynamicCP(291.6252,-84.1213,1001.5156, 1.0, -1, -1, -1, 8.0);

	new kv_adm = CreateObject(19353, -123.7554, -506.9361, 2999.9941, 0.0000, 0.0000, -89.8824);
	new str_kv[25];
	format(str_kv, 25, "√ä√¢√†√∞√≤√®√∞√†\n√†√§√¨√®√≠√®√±√≤√∞√†√∂√®√®");
	SetObjectMaterialText(kv_adm, str_kv, 0, 140, "Arial", 50, 0, -16777216, 0, 1);

	CreateDynamicObject(9525, -2658.906250, -5.530800, 16.182800, 0.000000, 0.000000, -90.000000, -1, -1);
	tmpobjid = CreateDynamicObject(19480, -2659.011963, -5.617600, 16.444201, 0.000000, 0.000000, 180.000000, -1, -1);
	SetDynamicObjectMaterialText(tmpobjid, 0, "√í√®√∞", 120, "Verdana", 90, 1, 0xFF663300, 0, 1);
}
stock CreateTruckBody(vehicleid) {
    AttachDynamicObjectToVehicle(CreateDynamicObject(2909,0.0,0.0,-1000.0,0.0,0.0,0.0), vehicleid, 1.391, -1.911, 1.030, 0.000, 0.000, 0.000);
    AttachDynamicObjectToVehicle(CreateDynamicObject(2909,0.0,0.0,-1000.0,0.0,0.0,0.0), vehicleid, -1.382, -1.901, 1.070, 0.000, 0.000, 0.000);
    AttachDynamicObjectToVehicle(CreateDynamicObject(2909,0.0,0.0,-1000.0,0.0,0.0,0.0), vehicleid, -0.017, -1.919, 2.310, 0.000, 90.799, 0.000);
    AttachDynamicObjectToVehicle(CreateDynamicObject(2904,0.0,0.0,-1000.0,0.0,0.0,0.0), vehicleid, 0.000, -6.033, 0.930, 0.000, 0.000, 0.000);
}
LoadVehicles() { // √≤√∞√†√≠√±√Ø√Æ√∞√≤
	#include <loadvehicles>

	// DFT 30 √§√´√ø √∞√†√°√Æ√≤√ª
	new tmpveh;

	af_orig_truck[0] = CreateVehicleEx(578,2248.9758,-2242.3655,14.1731,44.9295,1,1,360); // 1
	CreateTruckBody(af_orig_truck[0]);
	tmpveh = CreateVehicleEx(578,2241.8613,-2249.6189,14.1722,44.1467,1,1,360); // 2
	CreateTruckBody(tmpveh);
	tmpveh = CreateVehicleEx(578,2234.8230,-2256.7407,14.1782,43.1500,1,1,360); // 3
	CreateTruckBody(tmpveh);
	tmpveh = CreateVehicleEx(578,2227.6055,-2263.9524,14.1816,45.9869,1,1,360); // 4
	CreateTruckBody(tmpveh);
	tmpveh = CreateVehicleEx(578,2212.0391,-2280.2217,14.1813,45.7099,1,1,360); // 5
	CreateTruckBody(tmpveh);
	tmpveh = CreateVehicleEx(578,2208.7568,-2283.3406,14.1798,45.4458,1,1,360); // 6
	CreateTruckBody(tmpveh);
	tmpveh = CreateVehicleEx(578,2205.4792,-2286.7327,14.1757,46.7885,1,1,360); // 7
	CreateTruckBody(tmpveh);
	tmpveh = CreateVehicleEx(578,2202.1709,-2290.0400,14.1722,46.0170,1,1,360); // 8
	CreateTruckBody(tmpveh);
	tmpveh = CreateVehicleEx(578,2198.7114,-2293.6797,14.1714,46.6026,1,1,360); // 9
	CreateTruckBody(tmpveh);
	tmpveh = CreateVehicleEx(578,2195.1714,-2297.4751,14.1717,44.9319,1,1,360); // 10
	CreateTruckBody(tmpveh);
	tmpveh = CreateVehicleEx(578,2191.6055,-2301.3247,14.1722,45.4955,1,1,360); // 11
	CreateTruckBody(tmpveh);
	tmpveh = CreateVehicleEx(578,2180.4058,-2295.7715,14.1789,313.3638,1,1,360); // 12
	CreateTruckBody(tmpveh);
	af_orig_truck[1] = CreateVehicleEx(578,2176.3206,-2291.4778,14.1098,313.2157,1,1,360); // 13
	CreateTruckBody(af_orig_truck[1]);
	//

	bulletsecond_car = CreateVehicleEx(541,311.7748,-1788.4626,4.2822, 180.00,15,128,CAR_SPAWN);

    tmpobjid = CreateDynamicObject(1115,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "bwtilebroth", 0);
    AttachDynamicObjectToVehicle(tmpobjid, bulletsecond_car, 0.000, 2.372, -0.460, 0.000, 0.000, 0.000);
    tmpobjid = CreateDynamicObject(1001,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(tmpobjid, bulletsecond_car, 0.000, -2.201, 0.280, 0.000, 0.000, 0.000);
    tmpobjid = CreateDynamicObject(19797,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(tmpobjid, bulletsecond_car, 0.480, -2.171, 0.090, 0.000, 0.000, 0.000);
    tmpobjid = CreateDynamicObject(19797,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(tmpobjid, bulletsecond_car, -0.480, -2.172, 0.090, 0.000, 0.000, 0.000);
    tmpobjid = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
    SetDynamicObjectMaterialText(tmpobjid, 0, "n", 130, "Webdings", 80, 0, -9868951, 0, 0);
    AttachDynamicObjectToVehicle(tmpobjid, bulletsecond_car, -0.480, 1.020, 0.656, 2.731, 89.799, 0.000);
    tmpobjid = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
    SetDynamicObjectMaterialText(tmpobjid, 0, "√ª", 130, "Wingdings", 167, 0, -16751616, 0, 0);
    AttachDynamicObjectToVehicle(tmpobjid, bulletsecond_car, -1.130, -0.416, 0.598, 0.000, 88.390, 90.200);
    tmpobjid = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
    SetDynamicObjectMaterialText(tmpobjid, 0, "AMG", 130, "Arial", 40, 0, -1, 0, 0);
    AttachDynamicObjectToVehicle(tmpobjid, bulletsecond_car, -0.590, -2.849, 0.107, -13.000, 270.000, 180.000);
    tmpobjid = CreateDynamicObject(1061,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 18996, "mattextures", "sampblack", -1);
    SetDynamicObjectMaterial(tmpobjid, 2, 19480, "signsurf", "sign", 0);
    AttachDynamicObjectToVehicle(tmpobjid, bulletsecond_car, 0.000, 1.561, 0.260, 0.000, 0.000, 0.000);
    tmpobjid = CreateDynamicObject(18652,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 19480, "signsurf", "sign", 0);
    AttachDynamicObjectToVehicle(tmpobjid, bulletsecond_car, -0.660, 0.000, -1.150, 0.000, 0.000, 0.000);
    tmpobjid = CreateDynamicObject(18652,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 19480, "signsurf", "sign", 0);
    AttachDynamicObjectToVehicle(tmpobjid, bulletsecond_car, 0.660, 0.000, -1.160, 0.000, 0.000, 0.000);

	metarmy_3d[0] = CreateDynamic3DTextLabel("√Ñ√Æ√±√≤√†√¢√™√† √¨√•√≤√†√´√´√†\n"CORANGE"√á√†√£√∞√≥√¶√•√≠√Æ: "CERROR"0 √®√ß 700", COLOR_LITEBLUE, 0.0, 0.0, 2.5, 7.5, INVALID_PLAYER_ID, armcar[0] + 1);
	metarmy_3d[1] = CreateDynamic3DTextLabel("√Ñ√Æ√±√≤√†√¢√™√† √¨√•√≤√†√´√´√†\n"CORANGE"√á√†√£√∞√≥√¶√•√≠√Æ: "CERROR"0 √®√ß 700", COLOR_LITEBLUE, 0.0, 0.0, 2.5, 7.5, INVALID_PLAYER_ID, vvcveh[1] - 1);
	metarmy_3d[2] = CreateDynamic3DTextLabel("√Ñ√Æ√±√≤√†√¢√™√† √¨√•√≤√†√´√´√†\n"CORANGE"√á√†√£√∞√≥√¶√•√≠√Æ: "CERROR"0 √®√ß 700", COLOR_LITEBLUE, 0.0, 0.0, 2.5, 7.5, INVALID_PLAYER_ID, vmfcar[0] + 1);
}
public OnPlayerGiveDamage(playerid, damagedid, Float: amount, weaponid) {
	if(GetPVarInt(playerid, "KickTimeDM") == 5) {
		SCM(playerid, COLOR_ERROR, "√Ñ√å √®√£√∞√Æ√™√Æ√¢ √ß√†√Ø√∞√•√π√•√≠ √≠√† √±√•√∞√¢√•√∞√•");
		SCM(playerid, COLOR_ERROR, "√Ç√¢√•√§√®√≤√• "CPALEGREEN"/q "CERROR"√∑√≤√Æ√°√ª √¢√ª√©√≤√®");
		return Kick(playerid);
	}
	if(IsACop(playerid) && weaponid == 3 && IsPlayerConnected(damagedid) && !IsACop(damagedid)) {
		if(GetPVarInt(damagedid, #tazer_dest)) return 1;
		TogglePlayerControllable(damagedid, false);
		ClearAnimations(damagedid);
		ApplyAnimation(damagedid,"PED","KO_skid_front",4.1,0,1,1,1,0);
		format(string, 100, "%s %s √Æ√£√´√≥√∏√®√´ √Ç√†√± √≠√† 15 √±√•√™√≥√≠√§",new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1],pData[playerid][pName]);
		SCM(damagedid, COLOR_BLUE, string);
		SetTimerEx("TazedTimer", 15000, false, "i", damagedid);
		SetPVarInt(damagedid, #tazer_dest, true);
		return SCMF(playerid, COLOR_BLUE, "√Ç√ª √Æ√£√´√≥√∏√®√´√® %s √≠√† 15 √±√•√™√≥√≠√§", GetName(damagedid));
	}
	if(!IsPlayerConnected(playerid)) return 1;
	if(!IsPlayerConnected(damagedid)) return 1;
	if(PlayerInAntiDM(playerid)) {
		if(!IsPlayerInAnyVehicle(playerid) && pData[playerid][pLevel] >= 3) {
			if(IsACop(playerid) || IsAArm(playerid) || IsAGang(playerid) || IsAMafia(playerid) || GetPVarInt(playerid, "MaskPlayer")) return 1;
			if(GetPVarInt(playerid,"dm_timers") > gettime()) SetPVarInt(playerid, "KickTimeDM", 1);
			SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CORANGE"√è√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√•", ""CWHITE"√Ç√†√¨ √≠√•√´√º√ß√ø √§√∞√†√≤√º√±√ø √®√´√® √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Æ√∞√≥√¶√®√• √Ø√∞√Æ√≤√®√¢ √Ω√≤√Æ√£√Æ √®√£√∞√Æ√™√†.\n√è√∞√® √¨√≠√Æ√£√Æ√™√∞√†√≤√≠√ª√µ √Ø√Æ√Ø√ª√≤√™√†√µ {ff3300}√Ç√ª √°√≥√§√•√≤√• √™√®√™√≠√≥√≤√ª.", "Cerrar", "");
			
			new Float:amounthp;
			GetPlayerHealth(damagedid, amounthp);
			SetPlayerHealth(damagedid, amounthp);

			SetPVarInt(playerid, "dm_timers", gettime() + 10);
			if(!GetPVarInt(playerid, "KickTimeDM")) return SetPVarInt(playerid, "KickTimeDM", 1);
			if(GetPVarInt(playerid, "KickTimeDM") != 5) SetPVarInt(playerid, "KickTimeDM", GetPVarInt(playerid, "KickTimeDM") + 1);
			
			return 0;
		}
	}
	return 1;
}
CB: TazedTimer(id) {
	TogglePlayerControllable(id, true);
	ClearAnimations(id);
	DeletePVar(id, #tazer_dest);
	return 1;
}
public OnPlayerTakeDamage(playerid, issuerid, Float: amount, weaponid) {
	if(issuerid != INVALID_PLAYER_ID && (weaponid >= 22 && weaponid <= 32)) {
		new Float: hp, Float: ar;
		GetPlayerHealth(playerid,hp);
		GetPlayerArmour(playerid,ar);

		if(hp >= OldHealth[playerid] && ar == 0.0 || ar >= OldArmour[playerid]) 
			Shot_AntiGM_Total[playerid]++;
		else Shot_AntiGM_Total[playerid] = 0;

		if(Shot_AntiGM_Total[playerid] == 3) 
			Shot_AntiGM_Total[playerid] = 0;
		
		OldArmour[playerid] = ar;

		OldHealth[playerid] = 
		pData[playerid][p_hp] = hp;
	}
	return 1;
}
public OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ)
{
	if(pData[playerid][pAdmin] > 0)
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);

        if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
        {
        	new vehicleid = GetPlayerVehicleID(playerid);
        	
        	SetVehiclePos(vehicleid, fX, fY, fZ);
        	LinkVehicleToInterior(vehicleid, 0);
        	SetVehicleVirtualWorld(vehicleid, 0);
        }
		else SetPlayerPos(playerid, fX, fY, fZ);
	}
	return 1;
}
stock PlayerToKvadrat(playerid,Float:min_x,Float:min_y,Float:max_x,Float:max_y) {
	new Float:xxp,Float:yyp,Float:zzp;
	GetPlayerPos(playerid, xxp, yyp, zzp);
	return ((xxp <= max_x && xxp >= min_x) && (yyp <= max_y && yyp >= min_y))?true:false;
}
stock CheckPlayerDistanceToVehicle(Float:radi, playerid, vehicleid) {
	if(!IsPlayerConnected(playerid)) return 0;
	new Float: PX, Float: PY, Float: PZ, Float: X, Float: Y,Float: Z;
	GetPlayerPos(playerid,PX,PY,PZ);
	GetVehiclePos(vehicleid, X,Y,Z);
	new Float:dist_player = (X-PX)*(X-PX)+(Y-PY)*(Y-PY)+(Z-PZ)*(Z-PZ);
	if(dist_player <= radi*radi) return 1;
	return 0;
}
GetGangZoneColor(gangzonex) {
	new color;
	switch(GZInfo[gangzonex][gFrakVlad]) {
		case 12: color = 0xCC00FFAA;
		case 13: color = 0xFFCD00AA;
		case 15: color = 0x009900AA;
		case 17: color = 0x00CCFFAA;
		case 18: color = 0x6666FFAA;
		default: color = COLOR_WHITE;
	}
	return color;
}
stock GetNearestVehicle(playerid) {
	for(new i = 0, ps = GetVehiclePoolSize(); i <= ps; i++) {
		if(IsPlayerInRangeOfPoint(playerid, 12.0, VehInfo[i][vehicleX],VehInfo[i][vehicleY],VehInfo[i][vehicleZ])) return i;
	}
	return 0;
}
stock IsPlayerInBandMafiaOnline(org_ID) {
	new total;
	foreach(new i:Player) {
		if(!pData[i][pLogin]) continue;
		if(pData[i][pMember] == org_ID || pData[i][pLeader] == org_ID) total++;
	}
	return total;
}
stock Menu() {
	sp_menu = CreateMenu("_", 1, 555, 130, 50);
	AddMenuItem(sp_menu, 0, "NEXT >>");
	AddMenuItem(sp_menu, 0, "UPDATE");
	AddMenuItem(sp_menu, 0, "MUTE");
	AddMenuItem(sp_menu, 0, "SLAP");
	AddMenuItem(sp_menu, 0, "WEAP");
	AddMenuItem(sp_menu, 0, "FREEZE");
	AddMenuItem(sp_menu, 0, "INFO");
	AddMenuItem(sp_menu, 0, "STAT");
	AddMenuItem(sp_menu, 0, "EXIT");
	return 1;
}
stock RelevantWeapon(weaponid)
{
	switch(weaponid)
	{
		case 22: return 0;
		case 23: return 1;
		case 24: return 2;
		case 25: return 3;
		case 29: return 4;
		case 30: return 5;
		case 31: return 6;
		case 34: return 7;
		case 26: return 8;
		case 27: return 9;
		case 28: return 10;
	}
	return -1;
}
public OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ) {
	new weaponskillindex = RelevantWeapon(weaponid);
	if(weaponskillindex != -1 && !IsPlayerInAnyVehicle(playerid))
	{
		new_playerammo[playerid] = GetPlayerAmmo(playerid);
		if(new_playerammo[playerid] != playerammo[playerid])
		{
			OnPlayerAmmoChange(playerid, weaponskillindex, new_playerammo[playerid], playerammo[playerid]);
			playerammo[playerid] = new_playerammo[playerid];
		}
	}
	return 1;
}
stock OnPlayerAmmoChange(playerid, weaponskillindex, newammo, oldammo)
{
	if(newammo < oldammo)
	{
		skillgun[playerid][weaponskillindex]++;
		if(pData[playerid][pSkill][weaponskillindex] < 100)
		{
			if(skillgun[playerid][weaponskillindex] >= skillup_count[weaponskillindex])
			{
				skillgun[playerid][weaponskillindex] = 0;
				pData[playerid][pSkill][weaponskillindex] ++;
				SetPlayerSkills(playerid);
				SaveSkills(playerid);
				PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
				GameTextForPlayer(playerid, "~y~SKILL ~b~UP", 2000, 4);
			}
		}
	}
	return 1;
}
stock SaveSkills(playerid)
{
	new str[255], str_last[30];
	format(str_last,sizeof(str_last),"UPDATE accounts SET ");
 	strcat(str,str_last);
 	format(str_last,sizeof(str_last),"`COLT45` = %i,",pData[playerid][pSkill][0]);
 	strcat(str,str_last);
 	format(str_last,sizeof(str_last),"`SDPISTOL` = %i,",pData[playerid][pSkill][1]);
 	strcat(str,str_last);
 	format(str_last,sizeof(str_last),"`DEAGLE` = %i,",pData[playerid][pSkill][2]);
 	strcat(str,str_last);
 	format(str_last,sizeof(str_last),"`SHOTGUN` = %i,",pData[playerid][pSkill][3]);
 	strcat(str,str_last);
 	format(str_last,sizeof(str_last),"`MP5` = %i,",pData[playerid][pSkill][4]);
 	strcat(str,str_last);
 	format(str_last,sizeof(str_last),"`AK47` = %i,",pData[playerid][pSkill][5]);
 	strcat(str,str_last);
 	format(str_last,sizeof(str_last),"`M4` = %i,",pData[playerid][pSkill][6]);
 	strcat(str,str_last);
 	format(str_last,sizeof(str_last),"`SNIPER` = %i,",pData[playerid][pSkill][7]);
 	strcat(str,str_last);
 	format(str_last,sizeof(str_last),"`SAWNOFF` = %i,",pData[playerid][pSkill][8]);
 	strcat(str,str_last);
 	format(str_last,sizeof(str_last),"`COMBAT_SG` = %i,",pData[playerid][pSkill][9]);
 	strcat(str,str_last);
 	format(str_last,sizeof(str_last),"`MICRO_UZI` = %i",pData[playerid][pSkill][10]);
 	strcat(str,str_last);
 	format(str_last,sizeof(str_last)," WHERE `id`= %d", pData[playerid][pID]);
 	strcat(str,str_last);
 	return mysql_tquery(mysql_Handle, str);
}
stock SetPlayerSkills(playerid) {
	SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, pData[playerid][pSkill][0] * 10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, pData[playerid][pSkill][1] * 10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, pData[playerid][pSkill][2] * 10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, pData[playerid][pSkill][3] * 10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, pData[playerid][pSkill][4] * 10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, pData[playerid][pSkill][5] * 10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, pData[playerid][pSkill][6] * 10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_SNIPERRIFLE, pData[playerid][pSkill][7] * 10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_SAWNOFF_SHOTGUN, pData[playerid][pSkill][8] * 10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_SPAS12_SHOTGUN, pData[playerid][pSkill][9] * 10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_MICRO_UZI, pData[playerid][pSkill][10] * 10);
	return 1;
}
stock GetPlayerID(name[]) {
	foreach(new i:Player) if(!strcmp(name, GetName(i), true)) return i;
	return -1;
}
stock IsAnyPlayerInCar(vehicleid,seat) {
	foreach(new i:Player) if(IsPlayerInVehicle(i, vehicleid) && GetPlayerVehicleSeat(i) == seat) return 1;
	return 0;
}
stock GivePayDayMoney(playerid, money) {
	pData[playerid][pPayCheck] += money;
	UpdatePlayerData(playerid, "pPayCheck", pData[playerid][pPayCheck]);
}
stock destroy_objects_and_tune(vehicleid) {
	if(amg_mode[vehicleid]) amg_mode[vehicleid] = false;

	if(boost_veh_lvl[vehicleid] != 0) boost_veh_lvl[vehicleid] = 0;
	if(braking_veh_lvl[vehicleid] != 0) braking_veh_lvl[vehicleid] = 0;

	if(set_boost_by_adm[vehicleid]) set_boost_by_adm[vehicleid] = false;
	if(set_brake_by_adm[vehicleid]) set_brake_by_adm[vehicleid] = false;

	for(new y = 0; y < 22; y ++) {
		if(!IsValidDynamicObject(Unik_Obj[vehicleid][y])) continue;
		DestroyDynamicObject(Unik_Obj[vehicleid][y]);
	}
	return 1;
}

stock savefuel_cars(playerid, vehicleid) {
	if(vehicleid == house_carid[playerid][0]) 
		pData[playerid][FuelCar][0] = floatround(VehInfo[vehicleid][vFuel], floatround_ceil);
	else if(vehicleid == house_carid[playerid][1]) 
		pData[playerid][FuelCar][1] = floatround(VehInfo[vehicleid][vFuel], floatround_ceil);
	else if(vehicleid == house_carid[playerid][2]) 
		pData[playerid][FuelCar][2] = floatround(VehInfo[vehicleid][vFuel], floatround_ceil);
}

CB: FindPlayerInTable(playerid) {
	SCM(playerid, 0x0066CCFF, "√Ñ√Æ√°√∞√Æ √Ø√Æ√¶√†√´√Æ√¢√†√≤√º √≠√† Normative Role Play");

	new vw = playerid + 111;
	SetPlayerVirtualWorld(playerid, vw);
	TogglePlayerSpectating(playerid, 1);

	SetPlayerTime(playerid, time_server, 0);
	SetPlayerWeather(playerid, weather_server);

	new rows;
	cache_get_row_count(rows);
	if(rows) {
		cache_get_value_name_int(0, "id", pData[playerid][pID]);
		cache_get_value_name_int(0, "pMember", pData[playerid][pMember]);
		cache_get_value_name_int(0, "pModel", pData[playerid][pModel]);
		cache_get_value_name_int(0, "pChar", pData[playerid][pChar]);
		cache_get_value_name_int(0, "p_setting_6", pData[playerid][p_setting][6]);

		cache_get_value_name_int(0, "pLogOff", pData[playerid][pLogOff]);
		new ip[16];
		GetServerVarAsString("bind", ip, sizeof(ip));

		if(pData[playerid][pLogOff] == 1 || !strcmp(ip, "127.0.0.1", true))
		{
			strmid(pData[playerid][pLoadName], pData[playerid][pName], 0, 24, 255);
			new QUERY[160];
			mysql_format(mysql_Handle, QUERY, 156, "SELECT * FROM `accounts` WHERE `id` = %d", pData[playerid][pID]);
			mysql_tquery(mysql_Handle, QUERY, "LoginCallback", "d", playerid);
		}
		else
		{
			new skin;
			if(pData[playerid][pMember] > 0) skin = pData[playerid][pModel];
			else skin = pData[playerid][pChar];

			auth_actor[playerid] = CreateDynamicActor(skin, -217.4583, -1737.9454, 1.5188, 180, 1, 100, vw, 0, playerid);
			
			preload_anim_libs(playerid);
			ApplyDynamicActorAnimation(auth_actor[playerid], "BEACH", "LAY_BAC_LOOP", 4.1, 0, 1, 1, 1, 0);
			
			LoginDialog(playerid);
			auth_camstate[playerid] = 1;
		}
	}
	else {
		SetPVarInt(playerid, "RegisterPlayer", 1);
		RegisterDialog(playerid);
		auth_camstate[playerid] = 2;
	}
	return 1;
}
stock RemoveCarFromTruckBody(playerid)
{
	if(!af_load[playerid]) return 1;

	for(new i = 0; i < 5; i ++) DestroyDynamicObject(af_objcar[af_carID[playerid]][i]);
	DisablePlayerCheckpoint(playerid);
	TogglePlayerAllDynamicCPs(playerid, 1);
	
	af_hprem[playerid] = 0;
	af_load[playerid] = false;
	return 1;
}
stock dialog_email(playerid, bool:incorrect = false) {

	SPD(playerid, 3, DIALOG_STYLE_INPUT, "{bbaa00}√ù√´√•√™√≤√∞√Æ√≠√≠√ª√© √†√§√∞√•√±", "\
	"CWHITE"√Ç√¢√•√§√®√≤√• √†√§√∞√•√± √Ç√†√∏√•√© √Ω√´√•√™√≤√∞√Æ√≠√≠√Æ√© √Ø√Æ√∑√≤√ª. √è√Æ√±√´√• √∞√•√£√®√±√≤√∞√†√∂√®√®\n\
	√•√£√Æ √°√≥√§√•√≤ √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √Ø√Æ√§√≤√¢√•√∞√§√®√≤√º, √Ø√Æ√Ω√≤√Æ√¨√≥ √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √¢√¢√•√±√≤√®\n\
	√∞√•√†√´√º√≠√ª√© √†√§√∞√•√±, √™ √™√Æ√≤√Æ√∞√Æ√¨√≥ √≥ √Ç√†√± √°√≥√§√•√≤ √§√Æ√±√≤√≥√Ø. √í√†√™√¶√• √Æ√≠\n\
	√Ø√Æ√≠√†√§√Æ√°√®√≤√±√ø, √•√±√´√® √Ç√ª √≥√≤√•√∞√ø√•√≤√• √§√Æ√±√≤√≥√Ø √™ √†√™√™√†√≥√≠√≤√≥.\n\n\
	√ì√°√•√§√®√≤√•√±√º √¢ √Ø√∞√†√¢√®√´√º√≠√Æ√±√≤√® √¢√¢√ÆS√≠ √® √≠√†√¶√¨√®√≤√• \"S√≠√´√•√•\"\n", "S√≠√´√•√•", "√è√∞√Æ√Ø√≥√±√≤√®√≤√º");

	if(incorrect) {
		PlayerPlaySound(playerid, 1053, 0.0, 0.0, 0.0);
		SCM(playerid, COLOR_ERROR, "√Ç√ª √¢√¢√•√´√® √≠√•√¢√•√∞√≠√ª√© √†√§√∞√•√± √®√´√® √Æ√≠ √≥√¶√• √®√±√Ø√Æ√´√º√ß√≥√•√≤√±√ø");
	}
	return 1;
}
stock dialog_friend(playerid, bool:incorrect) {

	if(incorrect)
		SPD(playerid,7, DIALOG_STYLE_INPUT, ""CERROR"√é√∏√®√°√™√†", ""CWHITE"√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† √≠√• √±√≥√π√•√±√≤√¢√≥√•√≤.\n√Ö√±√´√® √Ç√ª √≠√• √ß√≠√†√•√≤√• √§√∞√≥√£√®√µ √®√£√∞√Æ√™√Æ√¢, √≠√†√¶√¨√®√≤√• √™√≠√Æ√Ø√™√≥ \"√è√∞√Æ√Ø√≥√±√≤√®√≤√º\"", "√Ç√¢√•√±√≤√®", "√è√∞√Æ√Ø√≥√±√≤√®√≤√º");
	else
		SPD(playerid,7, DIALOG_STYLE_INPUT, "{bbaa00}√ç√®√™ √Ø√∞√®√£√´√†√±√®√¢√∏√•√£√Æ √®√£√∞√Æ√™√†", ""CWHITE"√Ö√±√´√® √Ç√ª √≥√ß√≠√†√´√® √Æ √≠√†√∏√•√¨ √±√•√∞√¢√•√∞√• √Æ√≤ √±√¢√Æ√•√£√Æ √§√∞√≥√£√†, √™√Æ√≤√Æ√∞√ª√©\n√≤√≥√≤ √®√£√∞√†√•√≤, √≥√™√†√¶√®√≤√• √•√£√Æ √≠√®√™ √¢ √Ø√Æ√´√• √≠√®√¶√•\n\n{cdff00}√ä√Æ√£S√≠ √Ç√ª √§√Æ√±√≤√®√£No√• 4 √≥√∞√Æ√¢√≠√ø, √Æ√≠ √±√¨√Æ√¶√•√≤ √Ø√Æ√´√≥√∑√®√≤√º √≠√†√£√∞√†√§√≥", "√Ç√¢√•√±√≤√®", "√è√∞√Æ√Ø√≥√±√≤√®√≤√º");
	
	return 1;
}
stock dialog_sex(playerid) return SPD(playerid,8, DIALOG_STYLE_MSGBOX, "{bbaa00}√Ç√ª√°√Æ√∞ √Ø√Æ√´√†", ""CWHITE"√Ç√ª√°√•√∞√®√≤√• √Ø√Æ√´ √Ç√†√∏√•√£√Æ √Ø√•√∞√±√Æ√≠√†√¶√†\n", "√å√≥√¶√±√™√Æ√©", "√Ü√•√≠√±√™√®√©");

stock RegisterDialog(playerid) {
	return SPD(playerid, 1, DIALOG_STYLE_INPUT, "{990000}√ê√•√£√®√±√≤√∞√†√∂√®√ø",
		""CWHITE"√è√∞√®√¢√•√≤√±√≤√¢√≥√•√¨ √≤√•√°√ø √≠√† √≠√†√∏√•√¨ √±√•√∞√¢√•√∞√•, √§√Æ√∞√Æ√£√Æ√© √®√£√∞√Æ√™!\n\
		√ë √Ø√∞√†√¢√®√´√†√¨√® √≤√ª √¨√Æ√¶√•√∏√º √Æ√ß√≠√†√™√Æ√¨√®√≤√º√±√ø √≠√† √¥√Æ√∞√≥√¨√• (forum-normative.ru)\n\
		S√≠√´√•√•, √∑√≤√Æ√°√ª √≠√†√∑√†√≤√º √®√£√∞√≥, √≤√•√°√• √≠√≥√¶√≠√Æ √Ø√∞√Æ√©√≤√® √∞√•√£√®√±√≤√∞√†√∂√®√æ\n\
		\n\
		√Ç√¢√•√§√® √Ø√†√∞√Æ√´√º √§√´√ø √±√¢√Æ√•√£√Æ √†√™√™√†√≥√≠√≤√†\n\
		√é√≠ √°√≥√§√•√≤ √ß√†√Ø√∞√†√∏√®√¢√†√≤√º√±√ø √Ø√∞√® √™√†√¶√§√Æ√¨ √¢√µ√Æ√§√• √≠√† √±√•√∞√¢√•√∞\n\
		\n\
		{66cc33}- √Ñ√Æ√Ø√≥√±√≤√®√¨√ª √´√†√≤√®√≠√±√™√®√• √±√®√¨√¢√Æ√´√ª √® √∂√®√¥√∞√ª\n\
		- √è√†√∞√Æ√´√º √∑√≥√¢√±√≤√¢√®√≤√•√´√•√≠ √™ √∞√•√£√®√±√≤√∞√≥\n\
		- √Ñ√Æ√Ø√≥√±√≤√®√¨√†√ø √§√´√®√≠√† √Ø√†√∞√Æ√´√ø: √Æ√≤ 6 √§√Æ 15 √±√®√¨√¢√Æ√´√Æ√¢", 
	"S√≠√´√•√•", "");
}
stock LoginDialog(playerid) {
	string[0] = EOS;
	format(string,230,""CWHITE"√Ñ√Æ√°√∞√Æ √Ø√Æ√¶√†√´√Æ√¢√†√≤√º √≠√† Normative Role Play\n√Ç√†√∏ √≠√®√™ √ß√†√∞√•√£√®√±√≤√∞√®√∞√Æ√¢√†√≠\n\n√ã√Æ√£√®√≠: {66cc33}%s\n"CWHITE"√Ç√¢√•√§√®√≤√• √Ø√†√∞√Æ√´√º:", pData[playerid][pName]);
	SPD(playerid, 2, (pData[playerid][p_setting][6]) ? DIALOG_STYLE_PASSWORD : DIALOG_STYLE_INPUT, "{bbaa00}√Ä√¢√≤√Æ√∞√®√ß√†√∂√®√ø",string, "√Ç√Æ√©√≤√®", "Cerrar");
	KillTimer(LoginTimer[playerid]);
	return LoginTimer[playerid] = SetTimerEx("LoginTimeExpired", 40000, false, "i", playerid);
}
stock SavePlayerAccount(playerid) {
	if(!pData[playerid][pLogin]) return 1;
	new save_str[450];
	for(new w = 0; w < 13; w++) AntiCheatGetWeaponData(playerid, w, pData[playerid][pWeapons][w], pData[playerid][pAmmos][w]);
	mysql_format(mysql_Handle, save_str, sizeof(save_str), 
		"UPDATE `accounts` SET \
		`time1` = '%d,%d',\
		`pInGameTime` = %d,\
		`pMuteTime` = %d,\
		`pMuteTime_R` = %d,\
		`pJailTime` = %d,\
		`pPrisonTime` = %d,\
		`pCash` = %d,\
		`pChar` = %d,\
		`guns` = '%i,%i,%i,%i,%i,%i,%i,%i,%i,%i,%i,%i,%i',\
		`ammo` = '%i,%i,%i,%i,%i,%i,%i,%i,%i,%i,%i,%i,%i' \
		WHERE `id` = %i",
	pData[playerid][p_time1][0],pData[playerid][p_time1][1],
	pData[playerid][pInGameTime],
	pData[playerid][pMuteTime],
	pData[playerid][pMuteTime_R],
	pData[playerid][pJailTime],
	pData[playerid][pPrisonTime],
	pData[playerid][pCash],
	pData[playerid][pChar],
	pData[playerid][pWeapons][0],pData[playerid][pWeapons][1],pData[playerid][pWeapons][2],pData[playerid][pWeapons][3],pData[playerid][pWeapons][4],pData[playerid][pWeapons][5],pData[playerid][pWeapons][6],pData[playerid][pWeapons][7],pData[playerid][pWeapons][8],pData[playerid][pWeapons][9],pData[playerid][pWeapons][10],pData[playerid][pWeapons][11],pData[playerid][pWeapons][12],
	pData[playerid][pAmmos][0],pData[playerid][pAmmos][1],pData[playerid][pAmmos][2],pData[playerid][pAmmos][3],pData[playerid][pAmmos][4],pData[playerid][pAmmos][5],pData[playerid][pAmmos][6],pData[playerid][pAmmos][7],pData[playerid][pAmmos][8],pData[playerid][pAmmos][9],pData[playerid][pAmmos][10],pData[playerid][pAmmos][11],pData[playerid][pAmmos][12],
	pData[playerid][pID]);
	mysql_tquery(mysql_Handle, save_str);
	if(!GetPVarInt(playerid, "dostup") && pData[playerid][pAdmMember] != 0)
	{
		mysql_format(mysql_Handle, save_str, 80, "UPDATE `accounts` SET `pAdmMember` = 0 WHERE `id` = %i", pData[playerid][pID]);
		mysql_tquery(mysql_Handle, save_str);
	}
	return 1;
}
stock start_animjail(playerid) {
	for(new i = 0; i < 5; i ++) TextDrawShowForPlayer(playerid, arrest[i]);
	return SetTimerEx("arrest_et_2", 1000, 0, "i", playerid);
}
CB: arrest_et_2(playerid) {
	TextDrawShowForPlayer(playerid, arrest[5]);
	return SetTimerEx("arrest_et_3", 1000, 0, "i", playerid);
}
CB: arrest_et_3(playerid) {
	TextDrawShowForPlayer(playerid, arrest[6]);
	return SetTimerEx("arrest_et_4", 2000, 0, "i", playerid);
}
CB: arrest_et_4(playerid) {
	for(new i = 0; i < 9; i ++) TextDrawHideForPlayer(playerid, arrest[i]);
	return SetTimerEx("arrest_et_5", 2000, 0, "i", playerid);
}
CB: arrest_et_5(playerid) {
	for(new i = 0; i < 5; i ++) TextDrawShowForPlayer(playerid, arrest[i]);
	TextDrawHideForPlayer(playerid, arrest[2]);
	TextDrawShowForPlayer(playerid, arrest[7]);
	return SetTimerEx("arrest_et_6", 1000, 0, "i", playerid);
}
CB: arrest_et_6(playerid) {
	TextDrawHideForPlayer(playerid, arrest[5]);
	return SetTimerEx("arrest_et_7", 1000, 0, "i", playerid);
}
CB: arrest_et_7(playerid) {
	TextDrawHideForPlayer(playerid, arrest[6]);
	return SetTimerEx("arrest_et_8", 2000, 0, "i", playerid);
}
CB: arrest_et_8(playerid) {
	for(new i = 0; i < 9; i ++) TextDrawHideForPlayer(playerid, arrest[i]);
	return SetTimerEx("arrest_et_9", 2000, 0, "ii", playerid, 0);
}
CB: arrest_et_9(playerid, i) {
	if(i == 0)
		TextDrawShowForPlayer(playerid, alcatraz[0]);

	new text[18];
	format(text, i, "JEFFERSON COUNTRY");
	PlayerTextDrawSetString(playerid, alcatraztext[playerid], text);
	PlayerTextDrawShow(playerid, alcatraztext[playerid]);
	PlayerPlaySound(playerid, 40402, 0,0,0);

	if(i == 18)
	{
		for(new j = 1; j < 7; j ++)
			TextDrawShowForPlayer(playerid, alcatraz[j]);
		SetTimerEx("arrest_et_10", 3000, 0, "i", playerid);
	}
	else
	{
		SetTimerEx("arrest_et_9", 250, 0, "ii", playerid, i+1);
	}
	return 1;
}
CB: arrest_et_10(playerid) {
	prokurornpc[playerid] = CreateDynamicActor(147, 1800.8678,-546.6038,2132.1230, 270.0);
	sudyanpc[playerid] = CreateDynamicActor(150, 1800.8678,-549.2852,2132.1230, 270.0);
	sekrnpc[playerid] = CreateDynamicActor(98, 1800.8678,-551.9705,2132.1230, 270.0);
	sitnpc_sud1[playerid] = CreateDynamicActor(46, 1808.3208,-542.0566,2131.4250, 180.0);
	sitnpc_sud2[playerid] = CreateDynamicActor(48, 1813.0118,-545.2136,2131.4250, 90.0);
	new vwnum = playerid + 8;
	SetDynamicActorVirtualWorld(sitnpc_sud1[playerid], vwnum);
	SetDynamicActorVirtualWorld(sitnpc_sud2[playerid], vwnum);
	SetDynamicActorVirtualWorld(prokurornpc[playerid], vwnum);
	SetDynamicActorVirtualWorld(sudyanpc[playerid], vwnum);
	SetDynamicActorVirtualWorld(sekrnpc[playerid], vwnum);

	ApplyDynamicActorAnimation(sitnpc_sud1[playerid], "PED", "SEAT_IDLE", 4.1, 0, 1, 1, 1, -1);
	ApplyDynamicActorAnimation(sitnpc_sud2[playerid], "PED", "SEAT_IDLE", 4.1, 0, 1, 1, 1, -1);

	for(new i = 0; i < 7; i ++) TextDrawHideForPlayer(playerid, alcatraz[i]);
	PlayerTextDrawHide(playerid, alcatraztext[playerid]);
	PlayerPlaySound(playerid, 1068, 0.0, 0.0, 0.0);
	SetPlayerPos(playerid, 1807.3104,-556.1954,2131.4250);
	SetPlayerVirtualWorld(playerid, vwnum);
	SetPlayerFacingAngle(playerid, 50.0);
	InterpolateCameraPos(playerid, 1822.869506, -549.525451, 2134.064697, 1805.771240, -557.295593, 2133.290283, 8000);
	InterpolateCameraLookAt(playerid, 1817.984375, -549.441284, 2133.002441, 1808.691528, -555.362731, 2129.721435, 8000);
	return SetTimerEx("arrest_et_11", 10000, 0, "i", playerid);
}
CB: arrest_et_11(playerid) {
	SetPlayerPos(playerid, 1807.3104,-556.1954,2131.4250);
    SetTimerEx("arrest_fix_pos", 1500, 0, "i", playerid);
	SCM(playerid, 0x999933FF, "√ë√•√™√∞√•√≤√†√∞√º: "CWHITE"√Ç√±√≤√†√≤√º √¢√±√•√¨! √ë√≥√§ √®√§¬∏√≤");
	ApplyDynamicActorAnimation(sitnpc_sud1[playerid], "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, -1);
	ApplyDynamicActorAnimation(sitnpc_sud2[playerid], "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, -1);
	ApplyDynamicActorAnimation(sekrnpc[playerid], "PED", "IDLE_CHAT", 4.1, 0, 0, 0, 0, -1);
	SetCameraBehindPlayer(playerid);
	return SetTimerEx("arrest_et_12", 3000, 0, "i", playerid);
}
CB: arrest_fix_pos(playerid) return SetPlayerPos(playerid, 1807.3104,-556.1954,2131.4250);
CB: arrest_et_12(playerid) {
	SCMF(playerid, 0x999933FF, "√è√∞√Æ√™√≥√∞√Æ√∞: "CWHITE"√è√Æ√§√±√≥√§√®√¨√ª√© %s √Æ√°√¢√®√≠√ø√•√≤√±√ø √¢ √≠√†√∞√≥√∏√•√≠√®√® √ß√†√™√Æ√≠√Æ√¢ √∏√≤√†√≤√†", GetName(playerid));
	ApplyDynamicActorAnimation(prokurornpc[playerid], "PED", "IDLE_CHAT", 4.1, 0, 0, 0, 0, -1);
	return SetTimerEx("arrest_et_13", 3000, 0, "i", playerid);
}
CB: arrest_et_13(playerid) {
	TextDrawShowForPlayer(playerid, arrest[1]);
	return SetTimerEx("arrest_et_14", 600, 0, "i", playerid);
}
CB: arrest_et_14(playerid) {
	TextDrawShowForPlayer(playerid, arrest[5]);
	return SetTimerEx("arrest_et_15", 600, 0, "i", playerid);
}
CB: arrest_et_15(playerid) {
	TextDrawShowForPlayer(playerid, arrest[6]);
	return SetTimerEx("arrest_et_16", 2000, 0, "i", playerid);
}
CB: arrest_et_16(playerid) {
	TextDrawShowForPlayer(playerid, arrest[8]);
	return SetTimerEx("arrest_et_17", 2000, 0, "i", playerid);
}
CB: arrest_et_17(playerid) {
	TextDrawHideForPlayer(playerid, arrest[1]);
	TextDrawHideForPlayer(playerid, arrest[5]);
	TextDrawHideForPlayer(playerid, arrest[6]);
	TextDrawHideForPlayer(playerid, arrest[8]);
	return SetTimerEx("arrest_et_18", 2000, 0, "i", playerid);
}
CB: arrest_et_18(playerid) {
	SCMF(playerid, 0x999933FF, "√ë√≥√§√º√ø: "CWHITE"√ë√≥√§ √Ø√∞√®√£√Æ√¢√Æ√∞√®√´: √Ø√∞√®√ß√≠√†√≤√º %s √¢√®√≠√Æ√¢√≠√ª√¨", GetName(playerid));
	ApplyDynamicActorAnimation(sudyanpc[playerid], "PED", "IDLE_CHAT", 4.1, 0, 0, 0, 0, -1);
	return SetTimerEx("arrest_et_19", 3000, 0, "i", playerid);
}
CB: arrest_et_19(playerid) {
	new jtime[7];
	switch(random(8)) {
		case 0: jtime = "1 √£√Æ√§";
		case 1: jtime = "2 √£√ÆS√≠";
		case 2: jtime = "3 √£√ÆS√≠";
		case 3: jtime = "4 √£√ÆS√≠";
		case 4: jtime = "5 √´√•√≤";
		case 5: jtime = "6 √´√•√≤";
		case 6: jtime = "7 √´√•√≤";
		case 7: jtime = "8 √´√•√≤";
	}
	SCMF(playerid, 0x999933FF, "√ë√≥√§√º√ø: "CWHITE"√à √≠√†√ß√≠√†√∑√®√≤√º √•√¨√≥ √≠√†√™√†√ß√†√≠√®√• √¢ √¢√®√§√• √´√®√∏√•√≠√®√ø √±√¢√Æ√°√Æ√§√ª √±√∞√Æ√™√Æ√¨ %s", jtime);
	ApplyDynamicActorAnimation(sudyanpc[playerid], "PED", "IDLE_CHAT", 4.1, 0, 0, 0, 0, -1);
	return SetTimerEx("arrest_et_20", 3000, 0, "i", playerid);
}
CB: arrest_et_20(playerid) {
	TextDrawShowForPlayer(playerid, arrest[1]);
	return SetTimerEx("arrest_et_21", 600, 0, "i", playerid);
}
CB: arrest_et_21(playerid) {
	TextDrawShowForPlayer(playerid, arrest[5]);
	return SetTimerEx("arrest_et_22", 600, 0, "i", playerid);
}
CB: arrest_et_22(playerid) {
	TextDrawShowForPlayer(playerid, arrest[6]);
	return SetTimerEx("arrest_et_23", 2000, 0, "i", playerid);
}
CB: arrest_et_23(playerid) {
	TextDrawShowForPlayer(playerid, arrest[8]);
	return SetTimerEx("arrest_et_24", 2000, 0, "i", playerid);
}
CB: arrest_et_24(playerid) {
	DestroyActor(prokurornpc[playerid]);
	DestroyActor(sudyanpc[playerid]);
	DestroyActor(sekrnpc[playerid]);
	DestroyActor(sitnpc_sud1[playerid]);
	DestroyActor(sitnpc_sud2[playerid]);
	
	TextDrawHideForPlayer(playerid, arrest[1]);
	TextDrawHideForPlayer(playerid, arrest[5]);
	TextDrawHideForPlayer(playerid, arrest[6]);
	TextDrawHideForPlayer(playerid, arrest[8]);
	PlayerPlaySound(playerid, 1069, 0.0, 0.0, 0.0); // √Æ√±√≤√†√≠√Æ√¢√™√† √¨√≥√ß√ª√™√®
	PlayerPlaySound(playerid, 6802, 0.0, 0.0, 0.0);
	return SpawnPlayer(playerid);
}
CB: OffWarn(playerid,tmp[],reason[]) {
	new rows;
	cache_get_row_count(rows);

	new day, month, year, idchecck, hour, minuite, second;
	getdate(year, month, day);
	gettime(hour, minuite, second);
	FixHour(hour);
	hour = shifthour;
	new data2[22];
	format(data2, 22, "%02d.%02d.%d √¢ %02d:%02d",day, month, year, hour, minuite);
	
	new Year, Month, Day;
	getdate(Year, Month, Day);
	if(!rows) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √± √≤√†√™√®√¨ √≠√®√™√Æ√¨ √≠√• √≠√†√©√§√•√≠");
	cache_get_value_name_int(0, "id", idchecck);
	new pl_warns;
	cache_get_value_name_int(0, "pWarns", pl_warns);
	if((pl_warns+1) < 3) {
		mysql_format(mysql_Handle, string, 264, "UPDATE `accounts` SET `pWarns` = `pWarns` + '1', `punishment` = '1', `pLeader` = '0', `pMember` = '0', `pRank` = '0', `punWarnstime` = `punWarnstime` + %i WHERE `Name` = '%s'",gettime() + 10*86400,tmp);
		mysql_tquery(mysql_Handle, string);
		if(pData[playerid][pSex] == 1) format(string,127,"√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √¢√ªS√≠√´ √Æ√¥√¥√´√†√©√≠ √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√• √®√£√∞√Æ√™√≥ %s [%d|3]. √è√∞√®√∑√®√≠√†: %s",pData[playerid][pName],tmp,pl_warns+1,reason);
		else format(string,127,"√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √¢√ªS√≠√´√† √Æ√¥√¥√´√†√©√≠ √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√• √®√£√∞√Æ√™√≥ %s [%d|3]. √è√∞√®√∑√®√≠√†: %s",pData[playerid][pName],tmp,pl_warns+1,reason);
		SCMTA_setting(COLOR_LIGHTRED, string);
		if(pData[playerid][pSex] == 1) mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √¢√ªS√≠√´ √Æ√¥√¥√´√†√©√≠ √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√• √®√£√∞√Æ√™√≥ %s [%d|3]. √è√∞√®√∑√®√≠√†: %s',%d,'%s')", pData[playerid][pName], tmp, pl_warns+1, reason, idchecck, data2);
		else mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √¢√ªS√≠√´√† √Æ√¥√¥√´√†√©√≠ √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√• √®√£√∞√Æ√™√≥ %s [%d|3]. √è√∞√®√∑√®√≠√†: %s',%d,'%s')", pData[playerid][pName], tmp, pl_warns+1, reason, idchecck, data2);
		mysql_tquery(mysql_Handle, string);
		new Hour, Minute, Second;
		string[0] = EOS;
		gettime(Hour, Minute, Second);
		mysql_format(mysql_Handle,string, 200, "INSERT INTO `warninfo` (`id_acc`, `date`, `time`, `anick`, `reason`) VALUES (%d,'%02d.%02d.%d', '%02d:%02d', '%s', '%s')", idchecck, Day, Month, Year, Hour, Minute, pData[playerid][pName], reason);
		mysql_tquery(mysql_Handle, string);

		gAdmin[playerid][ADMIN_WARN] ++;
	}
	else {
		if(pData[playerid][pSex] == 1) format(string,128, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √¢√ªS√≠√´ √Æ√¥√¥√´√†√©√≠ √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√• √®√£√∞√Æ√™√≥ %s [3|3]. √è√∞√®√∑√®√≠√†: %s. √Ä√™√™√†√≥√≠√≤ √ß√†√°√†√≠√•√≠",pData[playerid][pName],tmp,reason);
		else format(string,128, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √¢√ªS√≠√´√† √Æ√¥√¥√´√†√©√≠ √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√• √®√£√∞√Æ√™√≥ %s [3|3]. √è√∞√®√∑√®√≠√†: %s. √Ä√™√™√†√≥√≠√≤ √ß√†√°√†√≠√•√≠",pData[playerid][pName],tmp,reason);
		SCMTA_setting(COLOR_LIGHTRED, string);
		if(pData[playerid][pSex] == 1) mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √¢√ªS√≠√´ √Æ√¥√¥√´√†√©√≠ √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√• √®√£√∞√Æ√™√≥ %s [3|3]. √è√∞√®√∑√®√≠√†: %s. √Ä√™√™√†√≥√≠√≤ √ß√†√°√†√≠√•√≠',%d,'%s')", pData[playerid][pName], tmp, reason, idchecck, data2);
		else mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √¢√ªS√≠√´√† √Æ√¥√¥√´√†√©√≠ √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√• √®√£√∞√Æ√™√≥ %s [3|3]. √è√∞√®√∑√®√≠√†: %s. √Ä√™√™√†√≥√≠√≤ √ß√†√°√†√≠√•√≠',%d,'%s')", pData[playerid][pName], tmp, reason, idchecck, data2);
		mysql_tquery(mysql_Handle, string);
		mysql_format(mysql_Handle, string, 175, "UPDATE `accounts` SET `pWarns` = '0', `punishment` = '1', `pLeader` = '0', `pMember` = '0', `pRank` = '0', `punWarnstime` = '0' WHERE `Name` = '%s'",tmp);
		mysql_tquery(mysql_Handle, string);
		new query_mysql[200], data[16];
		new un_ban_date = gettime() + 10*86400;
		format(data,sizeof(data), "%s",date("%dd.%mm.%yyyy",gettime()));
		mysql_format(mysql_Handle, query_mysql,sizeof(query_mysql), "INSERT INTO `banlist` (`id_acc`,`Nick`,`Admin`, `IP`, `Date` ,`Reason`,`Days`,`UnbanDate`) VALUES (%d,'%s','%s','‚Äî','%s','3 warns','10',%d)", idchecck,tmp, pData[playerid][pName], data, un_ban_date);
		mysql_tquery(mysql_Handle, query_mysql);
		mysql_format(mysql_Handle, query_mysql,sizeof(query_mysql), "DELETE FROM `warninfo` WHERE `id_acc` = %d", idchecck);
		mysql_tquery(mysql_Handle, query_mysql);

		gAdmin[playerid][ADMIN_BAN] ++;
		return 1;
	}
	SetPVarInt(playerid, "OffWarnAdmSo", false);
	mysql_format(mysql_Handle, string, 120, "SELECT `pWarnsAll` FROM `accounts` WHERE `Name` = '%s'", tmp);
	return mysql_tquery(mysql_Handle, string, "querywarns", "ds", playerid, tmp);
}
CB: Delete(typedel, playerid, NAMEDEL[]) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √± √≤√†√™√®√¨ √≠√®√™√Æ√¨ √≠√• √≠√†√©√§√•√≠");
	if(typedel == 0) {
		new dstr[195];
		format(dstr, sizeof(dstr), ""CWHITE"√Ä√™√™√†√≥√≠√≤ "CERROR"%s "CWHITE"√°√≥√§√•√≤ √Ø√Æ√´√≠√Æ√±√≤√º√æ √≥S√≠√´¬∏√≠ √®√ß √°√†√ß√ª S√≠√≠√≠√ª√µ √±√•√∞√¢√•√∞√†\n√Ç√±¬∏ √®√¨√≥√π√•√±√≤√¢√Æ √®√£√∞√Æ√™√† √°√≥√§√•√≤ √†√≠√≠√≥√´√®√∞√Æ√¢√†√≠√Æ\n√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø, √≠√†√¶√¨√®√≤√• √™√≠√Æ√Ø√™√≥ "CBLUE"\"√ìS√≠√´√®√≤√º\"", NAMEDEL);
		SetPVarString(playerid, "for_del", NAMEDEL);
		SPD(playerid, 4584, DIALOG_STYLE_MSGBOX, ""CERROR"√ìS√≠√´√•√≠√®√• √†√™√™√†√≥√≠√≤√† √®√£√∞√Æ√™√†", dstr, "√ìS√≠√´√®√≤√º", "Cerrar");
	}
	else {
		string[0] = EOS;
	    new query_1[120];
	    new query_2[250];
	    mysql_format(mysql_Handle, query_2, sizeof(query_2), "SELECT * FROM `accounts` WHERE `Name` = '%s'", NAMEDEL);
	    mysql_tquery(mysql_Handle, query_2, "acc_prop_remove", "");
		mysql_format(mysql_Handle, query_1, sizeof(query_1), "UPDATE `accounts` SET `Name` = 'DELETED_%s' WHERE `Name` = '%s'", NAMEDEL,NAMEDEL);
		mysql_tquery(mysql_Handle, query_1);
	    new iddel = GetPlayerID(NAMEDEL);
		if(IsPlayerConnected(iddel)) 
	        Kick(iddel);
		SCMF(playerid, 0xFA1010FF, "√Ä√™√™√†√≥√≠√≤ %s √≥√±√Ø√•√∏√≠√Æ √≥S√≠√´¬∏√≠ √®√ß √°√†√ß√ª S√≠√≠√≠√ª√µ", NAMEDEL);
	}
	return 1;
}
CB: LoginCallback(playerid) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) {
		if(GetPVarInt(playerid, "WrongPassword") == 1) {
			SCM(playerid, COLOR_ERROR, "√Ç√¢√•√§√®√≤√• √™√Æ√¨√†√≠√§√≥ /q (/quit) √§√´√ø √¢√ª√µ√ÆS√≠");
			return Kick(playerid);
		}
		SetPVarInt(playerid, "WrongPassword", GetPVarInt(playerid, "WrongPassword") - 1);
		string[0] = EOS;
		PlayerPlaySound(playerid, 1053, 0.0, 0.0, 0.0);
		format(string,230,""CWHITE"√Ñ√Æ√°√∞√Æ √Ø√Æ√¶√†√´√Æ√¢√†√≤√º √≠√† Normative Role Play\n√Ç√†√∏ √≠√®√™ √ß√†√∞√•√£√®√±√≤√∞√®√∞√Æ√¢√†√≠\n\n√ã√Æ√£√®√≠: {66cc33}%s\n{ff3300}√ç√•√¢√•√∞√≠√ª√© √Ø√†√∞√Æ√´√º! √é√±√≤√†√´√Æ√±√º √Ø√Æ√Ø√ª√≤√Æ√™: %d", pData[playerid][pName], GetPVarInt(playerid, "WrongPassword"));  
		return SPD(playerid,2, (pData[playerid][p_setting][6]) ? DIALOG_STYLE_PASSWORD : DIALOG_STYLE_INPUT, "{bbaa00}√Ä√¢√≤√Æ√∞√®√ß√†√∂√®√ø",string, "√Ç√Æ√©√≤√®", "Cerrar");
	}
	if(pData[playerid][pLoadName] != pData[playerid][pName]) {
		SCM(playerid,COLOR_ERROR,"√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [094] [Database is overloaded]");
		return Kick(playerid);
	}
	cache_get_value_name_int(0, "id", pData[playerid][pID]);
	cache_get_value_name(0, "pKey", pData[playerid][pKey]);
	cache_get_value_name_int(0, "pInGameTime", pData[playerid][pInGameTime]);
	cache_get_value_name_int(0, "pColorPhone", pData[playerid][pColorPhone]);
	cache_get_value_name_int(0, "pDrugs", pData[playerid][pDrugs]);
	cache_get_value_name_int(0, "fuelincar_1", pData[playerid][FuelCar][0]);
	cache_get_value_name_int(0, "fuelincar_2", pData[playerid][FuelCar][1]);
	cache_get_value_name_int(0, "fuelincar_3", pData[playerid][FuelCar][2]);
	cache_get_value_name_int(0, "newbiz_Pay", pData[playerid][newbiz_Pay]);
	cache_get_value_name_int(0, "familyID", pData[playerid][familyID]);
	cache_get_value_name_int(0, "p_premium_days", pData[playerid][p_premium_days]);
	cache_get_value_name_int(0, "p_premium", pData[playerid][p_premium]);
	cache_get_value_name_int(0, "allhours", pData[playerid][allhours]);
	cache_get_value_name_int(0, "have_garage", pData[playerid][have_garage]);
	cache_get_value_name_int(0, "pHungry", pData[playerid][pHungry]);
	cache_get_value_name_int(0, "strengh_today", pData[playerid][strengh_today]);
	cache_get_value_name_bool(0, "pRec", pData[playerid][pRec]);
	cache_get_value_name_int(0, "unikauto_Have", pData[playerid][unikauto_Have]);
	cache_get_value_name_int(0, "casino_amount", pData[playerid][casino_amount]);
	cache_get_value_name_int(0, "color_gun_deagle", color_gun_deagle[playerid]);
	cache_get_value_name_int(0, "color_gun_shotgun", color_gun_shotgun[playerid]);
	cache_get_value_name_int(0, "color_gun_ak47", color_gun_ak47[playerid]);
	cache_get_value_name_int(0, "color_gun_m4", color_gun_m4[playerid]);
	cache_get_value_name_int(0, "fam_moder", pData[playerid][fam_moder]);

    cache_get_value_name_int(0, "p_setting_0", pData[playerid][p_setting][0]);
    cache_get_value_name_int(0, "p_setting_1", pData[playerid][p_setting][1]);
    cache_get_value_name_int(0, "p_setting_2", pData[playerid][p_setting][2]);
    cache_get_value_name_int(0, "p_setting_3", pData[playerid][p_setting][3]);
    cache_get_value_name_int(0, "p_setting_4", pData[playerid][p_setting][4]);
    cache_get_value_name_int(0, "p_setting_5", pData[playerid][p_setting][5]);
    // cache_get_value_name_int(0, "p_setting_6", pData[playerid][p_setting][6]);
    cache_get_value_name(0, "p_desc", pData[playerid][p_desc]);
    cache_get_value_name_int(0, "strengh", pData[playerid][p_strengh]);

    new ws[65];
    cache_get_value_name(0, "guns", ws,40), sscanf(ws, "p<,>a<i>[13]",	pData[playerid][pWeapons]);
	cache_get_value_name(0, "ammo", ws,65), sscanf(ws, "p<,>a<i>[13]", pData[playerid][pAmmos]);

    cache_get_value_name_int(0, "autoHave", pData[playerid][autoHave]);
    cache_get_value_name_int(0, "kiosk_have", pData[playerid][kiosk_have]);
    cache_get_value_name_bool(0, "pHelper", pData[playerid][pHelper]);
    cache_get_value_name_int(0, "pHotel", pData[playerid][pHotel]);
    cache_get_value_name_int(0, "pFlat", pData[playerid][pFlat]);
    cache_get_value_name_int(0, "p_rent_flat", pData[playerid][p_rent_flat]);
    cache_get_value_name_int(0, "pAdmJob", pData[playerid][pAdmJob]);
    cache_get_value_name_int(0, "pAdmMember", pData[playerid][pAdmMember]);
    cache_get_value_name_bool(0, "pPayAcc", pData[playerid][pPayAcc]);
	cache_get_value_name_int(0, "adm_good_rate", pData[playerid][adm_good_rate]);
	cache_get_value_name_int(0, "adm_bad_rate", pData[playerid][adm_bad_rate]);
    cache_get_value_name_float(0, "last_hp", pData[playerid][p_hp]);
    cache_get_value_name_int(0, "food_have", pData[playerid][food_have]);
    cache_get_value_name_int(0, "prok_have", pData[playerid][prok_have]);
	if(pData[playerid][pInGameTime] > 60) pData[playerid][pInGameTime] = 0, UpdatePlayerData(playerid, "pInGameTime", 0);
	cache_get_value_name(0, "pPayKey", pData[playerid][pPayKey]);
	cache_get_value_name(0, "googlecode", pData[playerid][GoogleCod]);
	cache_get_value_name_int(0, "pStatusGoogle", pData[playerid][pStatusGoogle]);
	cache_get_value_name_int(0, "pLevel", pData[playerid][pLevel]);
	cache_get_value_name_int(0, "pPhousekey", pData[playerid][pHouse]);
	cache_get_value_name_int(0, "pPbiskey", pData[playerid][pBusiness]);
	cache_get_value_name_int(0, "pPsbiskey", pData[playerid][pFilling]);
	cache_get_value_name_int(0, "pWorkSkill", pData[playerid][pWorkSkill][0]);
	cache_get_value_name_int(0, "pSecCode", pData[playerid][pSecCode]);
	cache_get_value_name_int(0, "pCar", pData[playerid][pCar][0]);
	cache_get_value_name_int(0, "p_bill_id", pData[playerid][p_bill_id]);
	cache_get_value_name_int(0, "pMats", pData[playerid][pMetal]);
	cache_get_value_name(0, "cancellation_bill_reason", pData[playerid][cancellation_bill_reason]);
	cache_get_value_name_int(0, "pCar2", pData[playerid][pCar][1]);
	cache_get_value_name_int(0, "pCar3", pData[playerid][pCar][2]);

	cache_get_value_name_int(0, "Un_CarType_1", pData[playerid][Un_CarType][0]);
	cache_get_value_name_int(0, "Un_CarType_2", pData[playerid][Un_CarType][1]);
	cache_get_value_name_int(0, "Un_CarType_3", pData[playerid][Un_CarType][2]);

	mysql_format(mysql_Handle, string, 164, "SELECT * FROM `promoused` WHERE `idacca` = %d", pData[playerid][pID]);
	mysql_tquery(mysql_Handle, string, "CheckUsePromo", "d", playerid);
	
	cache_get_value_name_int(0, "t_wheel_car_1", pData[playerid][t_wheel][0]);
	cache_get_value_name_int(0, "t_wheel_car_2", pData[playerid][t_wheel][1]);
	cache_get_value_name_int(0, "t_wheel_car_3", pData[playerid][t_wheel][2]);
	cache_get_value_name_int(0, "t_neon_num_1", pData[playerid][t_neon_num][0]);
	cache_get_value_name_int(0, "t_neon_num_2", pData[playerid][t_neon_num][1]);
	cache_get_value_name_int(0, "t_neon_num_3", pData[playerid][t_neon_num][2]);
	cache_get_value_name_int(0, "t_hydraulics_car_1", pData[playerid][t_hydraulics][0]);
	cache_get_value_name_int(0, "t_hydraulics_car_2", pData[playerid][t_hydraulics][1]);
	cache_get_value_name_int(0, "t_hydraulics_car_3", pData[playerid][t_hydraulics][2]);
	cache_get_value_name_int(0, "t_stereo_car_1", pData[playerid][t_stereo][0]);
	cache_get_value_name_int(0, "t_stereo_car_2", pData[playerid][t_stereo][1]);
	cache_get_value_name_int(0, "t_stereo_car_3", pData[playerid][t_stereo][2]);
	cache_get_value_name_int(0, "t_paintjob_car_1", pData[playerid][t_paintjob][0]);
	cache_get_value_name_int(0, "t_paintjob_car_2", pData[playerid][t_paintjob][1]);
	cache_get_value_name_int(0, "t_paintjob_car_3", pData[playerid][t_paintjob][2]);
	cache_get_value_name_int(0, "p_car_cash_1", pData[playerid][p_car_cash][0]);
	cache_get_value_name_int(0, "p_car_cash_2", pData[playerid][p_car_cash][1]);
	cache_get_value_name_int(0, "p_car_cash_3", pData[playerid][p_car_cash][2]);
	cache_get_value_name_int(0, "t_color_1_1", pData[playerid][t_color_1][0]);
	cache_get_value_name_int(0, "t_color_2_1", pData[playerid][t_color_2][0]);
	cache_get_value_name_int(0, "t_color_1_2", pData[playerid][t_color_1][1]);
	cache_get_value_name_int(0, "t_color_2_2", pData[playerid][t_color_2][1]);
	cache_get_value_name_int(0, "t_color_1_3", pData[playerid][t_color_1][2]);
	cache_get_value_name_int(0, "t_color_2_3", pData[playerid][t_color_2][2]);
	cache_get_value_name(0, "num_plate_1", num_plate[playerid][0]);
	cache_get_value_name(0, "num_plate_2", num_plate[playerid][1]);
	cache_get_value_name(0, "num_plate_3", num_plate[playerid][2]);
	cache_get_value_name_int(0, "pSex", pData[playerid][pSex]);
	cache_get_value_name(0, "pDrug", pData[playerid][pRefer]);
	cache_get_value_name_int(0, "pVotedVibor", pData[playerid][pVotedVibor]);
	cache_get_value_name_int(0, "ConfirmEmail", pData[playerid][ConfirmEmail]);
	cache_get_value_name_int(0, "propsold", pData[playerid][pPS]);
	cache_get_value_name_int(0, "pDrugID", pData[playerid][pReferID]);
	cache_get_value_name_int(0, "pPatr", pData[playerid][pPatr]);
	cache_get_value_name_int(0, "punishment", pData[playerid][pPunish]);
	cache_get_value_name_int(0, "pStyle", pData[playerid][pStyle]);

	new time1[20], time2[20];
	cache_get_value_name(0, "time1", time1);
	sscanf(time1, "p<,>a<i>[2]", pData[playerid][p_time1]);
	cache_get_value_name(0, "time2", time2);
	sscanf(time2, "p<,>a<i>[2]", pData[playerid][p_time2]);

	cache_get_value_name_int(0, "p_style_0", pData[playerid][p_style][0]);
	cache_get_value_name_int(0, "p_style_1", pData[playerid][p_style][1]);
	cache_get_value_name_int(0, "p_style_2", pData[playerid][p_style][2]);
	cache_get_value_name_int(0, "pPayCheck", pData[playerid][pPayCheck]);
	cache_get_value_name_int(0, "pExp", pData[playerid][pExp]);
	cache_get_value_name_int(0, "pCash", pData[playerid][pCash]);
	cache_get_value_name_int(0, "pJailTime", pData[playerid][pJailTime]);
	cache_get_value_name_int(0, "pLeader", pData[playerid][pLeader]);
	cache_get_value_name_int(0, "pRank", pData[playerid][pRank]);
	cache_get_value_name_int(0, "pJob", pData[playerid][pJob]);
	cache_get_value_name_int(0, "COLT45", pData[playerid][pSkill][0]);
	cache_get_value_name_int(0, "SDPISTOL", pData[playerid][pSkill][1]);
	cache_get_value_name_int(0, "DEAGLE", pData[playerid][pSkill][2]);
	cache_get_value_name_int(0, "SHOTGUN", pData[playerid][pSkill][3]);
	cache_get_value_name(0, "p_car_charact_1", p_car_charact_1[playerid]);
	cache_get_value_name(0, "p_car_charact_2", p_car_charact_2[playerid]);
	cache_get_value_name(0, "p_car_charact_3", p_car_charact_3[playerid]);
	cache_get_value_name_int(0, "MP5", pData[playerid][pSkill][4]);
	cache_get_value_name_int(0, "AK47", pData[playerid][pSkill][5]);
	cache_get_value_name_int(0, "M4", pData[playerid][pSkill][6]);
	cache_get_value_name_int(0, "SNIPER", pData[playerid][pSkill][7]);
	cache_get_value_name_int(0, "SAWNOFF", pData[playerid][pSkill][8]);
	cache_get_value_name_int(0, "COMBAT_SG", pData[playerid][pSkill][9]);
	cache_get_value_name_int(0, "MICRO_UZI", pData[playerid][pSkill][10]);
	cache_get_value_name_int(0, "pLic0", pData[playerid][pLicenses][0]);
	cache_get_value_name_int(0, "pLic1", pData[playerid][pLicenses][1]);
	cache_get_value_name_int(0, "pLic2", pData[playerid][pLicenses][2]);
	cache_get_value_name_int(0, "pLic3", pData[playerid][pLicenses][3]);
	cache_get_value_name_int(0, "pPnumber", pData[playerid][pPnumber]);
	cache_get_value_name_int(0, "pWarns", pData[playerid][pWarns]);
	cache_get_value_name_int(0, "punWarnstime", pData[playerid][punWarnstime]);
	cache_get_value_name_int(0, "pMarried", pData[playerid][pMarried]);
	cache_get_value_name(0, "pFamilyName", pData[playerid][pFamilyName]);
	cache_get_value_name_int(0, "pMuteTime_R", pData[playerid][pMuteTime_R]);
	cache_get_value_name_int(0, "pMuteTime", pData[playerid][pMuteTime]);
	cache_get_value_name_int(0, "pCashNumber", pData[playerid][pCashNumber]);
	cache_get_value_name_int(0, "pBank", pData[playerid][pBank]);
	cache_get_value_name_int(0, "pZakonp", pData[playerid][pZakonp]);
	cache_get_value_name_int(0, "pWanted", pData[playerid][pWanted]);
	cache_get_value_name(0, "pIpReg", pData[playerid][pIpReg]);
	cache_get_value_name(0, "pDataReg", pData[playerid][pDataReg]);
	cache_get_value_name_bool(0, "ArmyPlay", pData[playerid][ArmyPlay]);
	cache_get_value_name_bool(0, "cancellation_bill", pData[playerid][cancellation_bill]);
	cache_get_value_name(0, "ArmyRank", pData[playerid][ArmyRank]);
	cache_get_value_name_int(0, "pSpawn", pData[playerid][pSpawn]);
	cache_get_value_name_int(0, "apassoff", pData[playerid][pApass]);
	cache_get_value_name_int(0, "pRub", pData[playerid][pRub]);
	cache_get_value_name_int(0, "pRubDonateTotal", pData[playerid][pRubDonateTotal]);
	cache_get_value_name_int(0, "pMedCard", pData[playerid][pMedCard]);
	cache_get_value_name_int(0, "pRubDonate", pData[playerid][pRubDonate]);
	cache_get_value_name_int(0, "pPrisonTime", pData[playerid][pPrisonTime]);
	cache_get_value_name_int(0, "pQuestPR", pData[playerid][pQuestPR]);
	cache_get_value_name(0, "pSuperKey",pData[playerid][pSuperKey]);
	cache_get_value_name_int(0, "pKeylog", pData[playerid][pKeylog]);
	cache_get_value_name_int(0, "pAptech", pData[playerid][pAptech]);
	cache_get_value_name_int(0, "pMasks", pData[playerid][pMasks]);
	cache_get_value_name_int(0, "sigar", pData[playerid][pSiga]);
	cache_get_value_name_int(0, "spal", pData[playerid][pSpal]);
	cache_get_value_name_int(0, "sgf", pData[playerid][pSgf]);
	cache_get_value_name(0, "pEmail",pData[playerid][pEmail]);
	mysql_format(mysql_Handle, string, 96, "SELECT * FROM `bank_acc` WHERE `OWNER` = '%s'", GetName(playerid)); 
    mysql_tquery(mysql_Handle, string, "CheckBanks", "i", playerid);

    new equery[60];
	mysql_format(mysql_Handle, equery, sizeof(equery), "SELECT * FROM `inventory` WHERE `owner_id` = %d", pData[playerid][pID]);
	mysql_tquery(mysql_Handle, equery, "load_inventory", "i", playerid);

    new str[32], str1[105];
    new mcolor;

	for(new slot = 1; slot <= 10; slot ++) {
		str1="";
		format(str,32,"AccessoriesSlot%i",slot);
		cache_get_value_name(0,str,str1);
		sscanf(str1,"p<,>iifffffffffi",
		PLAYER_AO[playerid][slot - 1][g_modelid],
		PLAYER_AO[playerid][slot - 1][g_boneid],
		PLAYER_AO[playerid][slot - 1][g_fOffsetX],
		PLAYER_AO[playerid][slot - 1][g_fOffsetY],
		PLAYER_AO[playerid][slot - 1][g_fOffsetZ],
		PLAYER_AO[playerid][slot - 1][g_fRotX],
		PLAYER_AO[playerid][slot - 1][g_fRotY],
		PLAYER_AO[playerid][slot - 1][g_fRotZ],
		PLAYER_AO[playerid][slot - 1][g_fScaleX],
		PLAYER_AO[playerid][slot - 1][g_fScaleY],
		PLAYER_AO[playerid][slot - 1][g_fScaleZ],
		PLAYER_AO[playerid][slot - 1][acs_color_type]);

		switch(PLAYER_AO[playerid][slot - 1][acs_color_type]) {
			case 1: mcolor = 0xFFE1E1E1;
			case 2: mcolor = 0xFF9E9E9E;
			case 3: mcolor = 0xFF4F4F4F;
			case 4: mcolor = 0xFF0B0B0B;
			case 5: mcolor = 0xFFE1CBB4;
			case 6: mcolor = 0xFFE19544;
			case 7: mcolor = 0xFFB45D00;
			case 8: mcolor = 0xFF5A2F00;
			case 9: mcolor = 0xFFD0AFAF;
			case 10: mcolor = 0xFFB45A5A;
			case 11: mcolor = 0xFF872D2D;
			case 12: mcolor = 0xFF551C1C;
			case 13: mcolor = 0xFFE1AB9E;
			case 14: mcolor = 0xFFE16344;
			case 15: mcolor = 0xFFCB2900;
			case 16: mcolor = 0xFF871B00;
			case 17: mcolor = 0xFF9E9EE1;
			case 18: mcolor = 0xFF2D2DE1;
			case 19: mcolor = 0xFF00009E;
			case 20: mcolor = 0xFF000044;
			case 21: mcolor = 0xFFAFD0AF;
			case 22: mcolor = 0xFF5AB45A;
			case 23: mcolor = 0xFF287628;
			case 24: mcolor = 0xFF113211;
			case 25: mcolor = 0xFFBF9EE1;
			case 26: mcolor = 0xFF9244E1;
			case 27: mcolor = 0xFF5A00B4;
			case 28: mcolor = 0xFF2D005A;
		}
		PLAYER_AO[playerid][slot - 1][g_COLOR1] = mcolor;
		PLAYER_AO[playerid][slot - 1][g_COLOR2] = mcolor;
	}

	cache_get_value_name_bool(0, "pPassport", pData[playerid][pPassport]);
	if(pData[playerid][pSecCode] == 1) {
		new str_query[75];
		mysql_format(mysql_Handle, str_query, sizeof str_query, "SELECT `pGetonIP` FROM `accounts` WHERE `Name` = '%s'", GetName(playerid));
		mysql_tquery(mysql_Handle, str_query, "google_check", "d", playerid);
	}
	else if(pData[playerid][pKeylog]) 
		SPD(playerid, 4929, DIALOG_STYLE_INPUT, "{bbaa00}√ä√Æ√§ √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√®", ""CWHITE"√ó√≤√Æ√°√ª √ß√†√¢√•√∞√∏√®√≤√º √±√≤√†√§√®√æ √†√¢√≤√Æ√∞√®√ß√†√∂√®√®, √Ç√†√¨ √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √Ø√∞√Æ√©√≤√®\n√Ø√∞√Æ√¢√•√∞√™√≥. √Ç√¢√•√§√®√≤√• √¢ √Ø√Æ√´√• √≠√®√¶√• √∂√®√¥√∞√ª, √™√Æ√≤√Æ√∞√ª√• √Ç√ª √≥√™√†√ß√†√´√® √¢ √™√Æ√§√•\n√°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√®:", "√Ç√¢√•√±√≤√®", "Cerrar");
	else LoadPlayerAccount(playerid);
	return 1;
}
CB: google_check(playerid) {
	new last_ip[17];
	cache_get_value_name(0, "pGetonIP", last_ip);
	if(pData[playerid][pStatusGoogle] == 1) return SPD(playerid, 489, DIALOG_STYLE_INPUT, "{bbaa00}√ä√Æ√§ √± √Ø√∞√®√´√Æ√¶√•√≠√®√ø", ""CWHITE"√ì √Ç√†√± √¢√™√´√æ√∑√•√≠√† √§√¢√≥√µ√¥√†√™√≤√Æ√∞√≠√†√ø √†√≥√≤√•√≠√≤√®√¥√®√™√†√∂√®√ø\n√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø, √Æ√≤√™√∞√Æ√©√≤√• √Ø√∞√®√´√Æ√¶√•√≠√®√• "CBLUE"Authenticator\n"CWHITE"√® √¢√¢√•√§√®√≤√• √™√Æ√§ √®√ß √≠√•√£√Æ √¢ √Ø√Æ√´√• √≠√®√¶√•:", "S√≠√´√•√•", "Cerrar");
	else if(pData[playerid][pStatusGoogle] == 2) {
		new playerip[17], paiko;
		GetPlayerIp(playerid,playerip,sizeof(playerip));
		for(new fh = 0; fh < strlen(playerip); fh ++) {
			if(playerip[fh]=='.' && paiko+1==2) strdel(playerip, fh+1, strlen(playerip));
			if(playerip[fh]=='.' && paiko+1<2) paiko++;
		}
		for(new fh = 0; fh < strlen(last_ip); fh ++) {
			if(last_ip[fh]=='.' && paiko+1==2) strdel(last_ip, fh+1, strlen(last_ip));
			if(last_ip[fh]=='.' && paiko+1<2) paiko++;
		}
		if(!strcmp(last_ip, playerip, true)) {
			if(pData[playerid][pKeylog]) 
				SPD(playerid, 4929, DIALOG_STYLE_INPUT, "{bbaa00}√ä√Æ√§ √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√®", ""CWHITE"√ó√≤√Æ√°√ª √ß√†√¢√•√∞√∏√®√≤√º √±√≤√†√§√®√æ √†√¢√≤√Æ√∞√®√ß√†√∂√®√®, √Ç√†√¨ √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √Ø√∞√Æ√©√≤√®\n√Ø√∞√Æ√¢√•√∞√™√≥. √Ç√¢√•√§√®√≤√• √¢ √Ø√Æ√´√• √≠√®√¶√• √∂√®√¥√∞√ª, √™√Æ√≤√Æ√∞√ª√• √Ç√ª √≥√™√†√ß√†√´√® √¢ √™√Æ√§√•\n√°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√®:", "√Ç√¢√•√±√≤√®", "Cerrar");
			else LoadPlayerAccount(playerid);
		}
		else SPD(playerid, 489, DIALOG_STYLE_INPUT, "{bbaa00}√ä√Æ√§ √± √Ø√∞√®√´√Æ√¶√•√≠√®√ø", ""CWHITE"√ì √Ç√†√± √¢√™√´√æ√∑√•√≠√† √§√¢√≥√µ√¥√†√™√≤√Æ√∞√≠√†√ø √†√≥√≤√•√≠√≤√®√¥√®√™√†√∂√®√ø\n√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø, √Æ√≤√™√∞√Æ√©√≤√• √Ø√∞√®√´√Æ√¶√•√≠√®√• "CBLUE"Authenticator\n"CWHITE"√® √¢√¢√•√§√®√≤√• √™√Æ√§ √®√ß √≠√•√£√Æ √¢ √Ø√Æ√´√• √≠√®√¶√•:", "S√≠√´√•√•", "Cerrar");
	}
	else if(pData[playerid][pStatusGoogle] == 3) {
		if(!strcmp(last_ip, pData[playerid][pIP], true)) {
			if(pData[playerid][pKeylog]) 
				SPD(playerid, 4929, DIALOG_STYLE_INPUT, "{bbaa00}√ä√Æ√§ √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√®", ""CWHITE"√ó√≤√Æ√°√ª √ß√†√¢√•√∞√∏√®√≤√º √±√≤√†√§√®√æ √†√¢√≤√Æ√∞√®√ß√†√∂√®√®, √Ç√†√¨ √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √Ø√∞√Æ√©√≤√®\n√Ø√∞√Æ√¢√•√∞√™√≥. √Ç√¢√•√§√®√≤√• √¢ √Ø√Æ√´√• √≠√®√¶√• √∂√®√¥√∞√ª, √™√Æ√≤√Æ√∞√ª√• √Ç√ª √≥√™√†√ß√†√´√® √¢ √™√Æ√§√•\n√°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√®:", "√Ç√¢√•√±√≤√®", "Cerrar");
			else LoadPlayerAccount(playerid);
		}
		else SPD(playerid, 489, DIALOG_STYLE_INPUT, "{bbaa00}√ä√Æ√§ √± √Ø√∞√®√´√Æ√¶√•√≠√®√ø", ""CWHITE"√ì √Ç√†√± √¢√™√´√æ√∑√•√≠√† √§√¢√≥√µ√¥√†√™√≤√Æ√∞√≠√†√ø √†√≥√≤√•√≠√≤√®√¥√®√™√†√∂√®√ø\n√Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø, √Æ√≤√™√∞√Æ√©√≤√• √Ø√∞√®√´√Æ√¶√•√≠√®√• "CBLUE"Authenticator\n"CWHITE"√® √¢√¢√•√§√®√≤√• √™√Æ√§ √®√ß √≠√•√£√Æ √¢ √Ø√Æ√´√• √≠√®√¶√•:", "S√≠√´√•√•", "Cerrar");
	}
	return 1;
}

stock LoadPlayerAccount(playerid) {
	SetPlayerSkills(playerid);
	SetPlayerVirtualWorld(playerid, 0);

	if(IsValidDynamicActor(auth_actor[playerid]))
		DestroyDynamicActor(auth_actor[playerid]);
	HideAuthObjects(playerid);

	pData[playerid][pLogin] = true;
	mysql_format(mysql_Handle, string, 80, "UPDATE `accounts` SET `pOnline` = '1' WHERE `id` = %i", pData[playerid][pID]);
	mysql_tquery(mysql_Handle, string);

	ResetPlayerMoney(playerid);
	GivePlayerMoney(playerid, pData[playerid][pCash]);

	if(pData[playerid][pApass]) {
		if(!GetPVarInt(playerid, "alogin43")) {
			string[0] = EOS;
			format(string, 75, "SELECT * FROM `admin` WHERE `Name` = '%s'", pData[playerid][pName]);
			mysql_tquery(mysql_Handle, string, "password3", "d",playerid);
		}
	}
	else if(!pData[playerid][pCar][0]) pData[playerid][pCar][0] = 0, UpdatePlayerData(playerid, "pCar", 0);
	else if(!pData[playerid][pCar][1]) pData[playerid][pCar][1] = 0, UpdatePlayerData(playerid, "pCar2", 0);
	else if(!pData[playerid][pCar][2]) pData[playerid][pCar][2] = 0, UpdatePlayerData(playerid, "pCar3", 0);
	else if(pData[playerid][pWanted] > 6) pData[playerid][pWanted] = 6, UpdatePlayerData(playerid, "pWanted", pData[playerid][pWanted]);
	else if(!pData[playerid][pChar]) pData[playerid][pChar] = 78, UpdatePlayerData(playerid, "pChar", pData[playerid][pChar]);
	else if(!pData[playerid][pModel]) pData[playerid][pModel] = 78, UpdatePlayerData(playerid, "pModel", pData[playerid][pModel]);
	else if(pData[playerid][pMember]) SetPlayerSkin(playerid, pData[playerid][pModel]);
	else SetPlayerSkin(playerid, pData[playerid][pChar]);
	if(pData[playerid][pHotel] != -1 || pData[playerid][pFlat] != -1) LoadCarPlayer(playerid, 1);
	else if(pData[playerid][pHouse] != -1) {
		if(!strcmp(pData[playerid][pName], HouseInfo[pData[playerid][pHouse]][hOwner], true)) {
			LoadCarPlayer(playerid, 1), LoadCarPlayer(playerid, 2), LoadCarPlayer(playerid, 3);
		}
		else pData[playerid][pHouse] = -1, UpdatePlayerData(playerid, "pPhousekey", -1);
	}
	switch(pData[playerid][pStyle]) {
		case 0: SetPlayerFightingStyle(playerid, FIGHT_STYLE_GRABKICK);
		case 1: SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);
		case 2: SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU);
		case 3: SetPlayerFightingStyle(playerid, FIGHT_STYLE_KNEEHEAD);
	}
	if(pData[playerid][pAdmMember] != 0) {
		new org = pData[playerid][pAdmMember];
		pData[playerid][pMember] = org;
		pData[playerid][pLeader] = org;
		pData[playerid][pRank] = 10;
		pData[playerid][pJob] = 0;
		SetPlayerSkin(playerid, pData[playerid][pChar]);
		SetPlayerColor(playerid, FractionInfo[org][fColor]);
	}

	if(pData[playerid][pAdmJob] != 0) {
		pData[playerid][pMember] = 0;
		pData[playerid][pLeader] = 0;
		pData[playerid][pRank] = 0;
		pData[playerid][pJob] = pData[playerid][pAdmJob];
	}

	switch(pData[playerid][pPS]) {
		case 1: {
			SCM(playerid, COLOR_ERROR, "√Ç√†√∏ √§√Æ√¨ √°√ª√´ √Ø√∞√ÆS√≠√≠ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥ √ß√† √≠√•√≥√Ø√´√†√≤√≥");
			SCM(playerid, COLOR_ERROR, "√ç√† √Ç√†√∏ √°√†√≠√™√Æ√¢√±√™√®√© √±√∑¬∏√≤ √°√ª√´√† √¢√Æ√ß√¢√∞√†√π√•√≠√† √•√£√Æ √£√Æ√±√≥S√≠√∞√±√≤√¢√•√≠√≠√†√ø √±√≤√Æ√®√¨√Æ√±√≤√º");
		}
		case 2: {
			SCM(playerid, COLOR_ERROR, "√Ç√†√∏ √°√®√ß√≠√•√± √°√ª√´ √Ø√∞√ÆS√≠√≠ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥ √ß√† √≠√•√≥√Ø√´√†√≤√≥ √†√∞√•√≠√§√ª");
			SCM(playerid, COLOR_ERROR, "√ç√† √Ç√†√∏ √°√†√≠√™√Æ√¢√±√™√®√© √±√∑¬∏√≤ √°√ª√´√† √¢√Æ√ß√¢√∞√†√π√•√≠√† √•√£√Æ √±√≤√Æ√®√¨√Æ√±√≤√º √± √≥√∑¬∏√≤√Æ√¨ √≠√†√´√Æ√£√†");
		}
		case 3: {
			SCM(playerid, COLOR_ERROR, "√Ç√†√∏√† √Ä√á√ë √°√ª√´√† √Ø√∞√ÆS√≠√≠√† √£√Æ√±√≥S√≠√∞√±√≤√¢√≥ √ß√† √≠√•√≥√Ø√´√†√≤√≥ √†√∞√•√≠√§√ª");
			SCM(playerid, COLOR_ERROR, "√ç√† √Ç√†√∏ √°√†√≠√™√Æ√¢√±√™√®√© √±√∑¬∏√≤ √°√ª√´√† √¢√Æ√ß√¢√∞√†√π√•√≠√† √Ø√Æ√´√Æ√¢√®√≠√† √•¬∏ √±√≤√Æ√®√¨√Æ√±√≤√®");
		}
		case 4: SCM(playerid, COLOR_ERROR, "√ë√∞√Æ√™ √†√∞√•√≠√§√ª √∞√•√™√´√†√¨√≠√Æ√£√Æ √°√®√´√°√Æ√∞S√≠ √ß√†√™√Æ√≠√∑√®√´√±√ø. √Ñ√Æ√£√Æ√¢√Æ√∞ √°√ª√´ √∞√†√±√≤√Æ√∞√£√≠√≥√≤");
		case 5: SCM(playerid, COLOR_ERROR, "√Ç√ª √°√ª√´√® √¢√ª√±√•√´√•√≠√ª √®√ß √Æ√≤√•√´√ø √ß√† √≠√•√≥√Ø√´√†√≤√≥");
		case 6: {
			SCM(playerid, COLOR_ERROR, "√Ç√†√∏√† √™√¢√†√∞√≤√®√∞√† √°√ª√´√† √Ø√∞√ÆS√≠√≠√† √£√Æ√±√≥S√≠√∞√±√≤√¢√≥ √ß√† √≠√•√≥√Ø√´√†√≤√≥");
			SCM(playerid, COLOR_ERROR, "√ç√† √Ç√†√∏ √°√†√≠√™√Æ√¢√±√™√®√© √±√∑¬∏√≤ √°√ª√´√† √¢√Æ√ß√¢√∞√†√π√•√≠√† √•¬∏ √£√Æ√±. √±√≤√Æ√®√¨√Æ√±√≤√º");
		}
		case 7: {
			SCM(playerid, COLOR_ERROR, "√Ç√†√∏ √£√†√∞√†√¶ √°√ª√´ √Ø√∞√ÆS√≠√≠ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥ √ß√† √≠√•√≥√Ø√´√†√≤√≥");
			SCM(playerid, COLOR_ERROR, "√ç√† √Ç√†√∏ √°√†√≠√™√Æ√¢√±√™√®√© √±√∑¬∏√≤ √°√ª√´√† √¢√Æ√ß√¢√∞√†√π√•√≠√† √•√£√Æ √±√≤√Æ√®√¨√Æ√±√≤√º");
		}
	}
	pData[playerid][pPS] = 0;
	UpdatePlayerData(playerid, "propsold", 0);

	if(pData[playerid][cancellation_bill]) {
		SCM(playerid, 0xFF4D4DFF, "√Ç√†√∏ √∞√•√™√´√†√¨√≠√ª√© √°√®√´√°√Æ√∞√§ √°√ª√´ √†√≠√≠√≥√´√®√∞√Æ√¢√†√≠ √†√§√¨√®√≠√®√±√≤√∞√†√∂√®√•√©");
		SCM(playerid, 0xFF4D4DFF, "√è√Æ√§√∞√Æ√°√≠√•√•: "CCYAN"/billcancel");
	}
	if(pData[playerid][p_premium] && pData[playerid][p_premium_days] < 4 && pData[playerid][p_premium_days] != -1) {
		SCM(playerid, 0xCC3D3DFF, "√ë√∞√Æ√™ √§√•√©√±√≤√¢√®√ø √Ø√∞√•√¨√®√≥√¨-√±√≤√†√≤√≥√±√† √±√™√Æ√∞√Æ √ß√†√™√Æ√≠√∑√®√≤√±√ø");
		SCM(playerid, 0xCC3D3DFF, "√Ç√ª √¨√Æ√¶√•√≤√• √Ø√∞√Æ√§√´√®√≤√º √•√£√Æ √®√±√Ø√Æ√´√º√ß√≥√ø √±√Æ√Æ√≤√¢√•√≤√±√≤√¢√≥√æ√π√®√© √Ø√≥√≠√™√≤ √¢ "CORANGE"/mn > √å√†√£√†√ß√®√≠");
	}
	if(pData[playerid][pSecCode] != 1) {
		if(pData[playerid][pLevel] >= 3) {
			SCM(playerid, 0x77CCFFFF, "√ç√†√±√≤√Æ√ø√≤√•√´√º√≠√Æ √∞√•√™√Æ√¨√•√≠√§√≥√•√¨ √ß√†√π√®√≤√®√≤√º √†√™√™√†√≥√≠√≤ √∑√•√∞√•√ß √Ø√∞√®√´√Æ√¶√•√≠√®√• {0066ff}Google Authenticator"); 
			SCM(playerid, 0x77CCFFFF, "√è√Æ√§√∞√Æ√°√≠√•√•: {0066ff}/menu > √Å√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√º");    
		}
	}
	if(pData[playerid][ConfirmEmail] != 1) {
		if(!GetPVarInt(playerid, "anti_email")) {
			SCM(playerid, COLOR_PALEGREEN, "√Ç√†√∏ √Ω√´√•√™√≤√∞√Æ√≠√≠√ª√© √†√§√∞√•√±, √≥√™√†√ß√†√≠√≠√ª√© √Ø√∞√® √∞√•√£√®√±√≤√∞√†√∂√®√® √†√™√™√†√≥√≠√≤√† "CORANGE"√≠√• √Ø√Æ√§√≤√¢√•√∞√¶√§¬∏√≠");
			SCM(playerid, COLOR_PALEGREEN, "√è√Æ√§√≤√¢√•√∞√§√®√≤√º √•√£√Æ √¨√Æ√¶√≠√Æ √¢ √´√®√∑√≠√Æ√¨ √™√†√°√®No√• √≠√† √≠√†√∏√•√¨ √±√†√©√≤√• {669aff}(normative-rp.ru)");
		}
		else DeletePVar(playerid, "anti_email");
	}
	if(pData[playerid][pPunish] == 1) {
		SCM(playerid, -1, "√à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ √Ø√Æ√±√´√•√§√≠√®√µ √≠√†√™√†√ß√†√≠√®√ø√µ, √¢√ªS√≠√≠√≠√ª√µ √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√†√¨√®: "CERROR"/log");
		pData[playerid][pPunish] = 0;
		UpdatePlayerData(playerid, "punishment", 0);
	}
	if(pData[playerid][pRubDonate] > 0) SCM(playerid, COLOR_BLUE, "√ì √Ç√†√± √•√±√≤√º √≠√Æ√¢√ª√• √Ø√Æ√Ø√Æ√´√≠√•√≠√®√ø √±√∑¬∏√≤√†. √Ç√¢√•√§√®√≤√• {FFCD00}/checkpay "CBLUE"√∑√≤√Æ√°√ª √ß√†√∑√®√±√´√®√≤√º √®√µ");
	if(pData[playerid][pWarns]) {
		if(pData[playerid][punWarnstime] > gettime()) {
			SCMF(playerid, COLOR_ERROR, "√ä√Æ√´√®√∑√•√±√≤√¢√Æ √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√©: %d √®√ß 3. √è√Æ√§√∞√Æ√°√≠√†√ø √®√≠√¥√Æ√∞√¨√†√∂√®√ø: "CLITEBLUE"/warninfo", pData[playerid][pWarns]);
			SCM(playerid, COLOR_ERROR, "√è√Æ√±√´√• 3 √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√ø √Ç√†√∏ √†√™√™√†√≥√≠√≤ √°√≥√§√•√≤ √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√≠");
		}
		else if(pData[playerid][punWarnstime] <= gettime())
		{
			SCM(playerid, COLOR_MAIN, "√ì √Ç√†√± √±√≠√ø√≤√Æ 1 √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√•");
			pData[playerid][punWarnstime] = 0;
			pData[playerid][pWarns] = 0;
			UpdatePlayerData(playerid, "pWarns", 0);
			UpdatePlayerData(playerid, "punWarnstime", 0);
		}
	}
	if(!GetPVarInt(playerid, "anti_sales")) {
		if(multiply_exp != 1) {
			format(string, 100, "√è√Æ√§√±√™√†√ß√™√†: √Ñ√•√©√±√≤√¢√≥√•√≤ √†√™√∂√®√ø {40bf40}¬´X%d PAYDAY¬ª", multiply_exp);
			SCM(playerid, 0x66FF99AA, string);
		}
		if(multiply_don != 1) {
			format(string, 100, "√è√Æ√§√±√™√†√ß√™√†: √Ñ√•√©√±√≤√¢√≥√•√≤ √†√™√∂√®√ø √≠√† √Ø√Æ√Ø√Æ√´√≠√•√≠√®√• √±√∑¬∏√≤√† {40bf40}X%d", multiply_don);
			SCM(playerid, 0x66FF99AA, string);
		}
	}
	else DeletePVar(playerid, "anti_sales");
	if(pData[playerid][pHouse] != -1) if(HouseInfo[pData[playerid][pHouse]][hPay] <= 5) SCM(playerid, 0xFFAB15FF, "√ì √Ç√†√± √Æ√±√≤√†√´√Æ√±√º √¨√†√´√Æ √Æ√Ø√´√†√∑√•√≠√≠√ª√µ √§√≠√•√© √Ø√∞√Æ√¶√®√¢√†√≠√®√ø √¢ √§√Æ√¨√•");
	if(pData[playerid][have_garage] != -1) if(garage[pData[playerid][have_garage]][gdays] <= 5) SCM(playerid, 0xFFAB15FF, "√ì √Ç√†√± √Æ√±√≤√†√´√Æ√±√º √¨√†√´√Æ √Æ√Ø√´√†√∑√•√≠√≠√ª√µ √§√≠√•√© √†√∞√•√≠√§√ª √£√†√∞√†√¶√†");
	if(pData[playerid][pFlat] != -1) if(flat_info[pData[playerid][pFlat]][fl_days] <= 5) SCM(playerid, 0xFFAB15FF, "√ì √Ç√†√± √Æ√±√≤√†√´√Æ√±√º √¨√†√´√Æ √Æ√Ø√´√†√∑√•√≠√≠√ª√µ √§√≠√•√© √Ø√∞√Æ√¶√®√¢√†√≠√®√ø √¢ √™√¢√†√∞√≤√®√∞√•");
	
	if(pData[playerid][unikauto_Have] != 0 || pData[playerid][autoHave] != 0 || pData[playerid][food_have] != 0 || pData[playerid][prok_have] != 0 || pData[playerid][kiosk_have] != 0) {
		if(pData[playerid][newbiz_Pay] <= 5) SCM(playerid, 0xFFAB15FF, "√ì √Ç√†√± √Æ√±√≤√†√´√Æ√±√º √¨√†√´√Æ √Æ√Ø√´√†√∑√•√≠√≠√ª√µ √§√≠√•√© √†√∞√•√≠√§√ª √°√®√ß√≠√•√±√†");
	}
	else if(pData[playerid][pBusiness] != -1) if(BizInfo[pData[playerid][pBusiness]][bPay] <= 5) SCM(playerid, 0xFFAB15FF, "√ì √Ç√†√± √Æ√±√≤√†√´√Æ√±√º √¨√†√´√Æ √Æ√Ø√´√†√∑√•√≠√≠√ª√µ √§√≠√•√© √†√∞√•√≠√§√ª √°√®√ß√≠√•√±√†");
	if(pData[playerid][pFilling] != -1) if(Filling[pData[playerid][pFilling]][fPay] <= 5) SCM(playerid, 0xFFAB15FF, "√ì √Ç√†√± √Æ√±√≤√†√´√Æ√±√º √¨√†√´√Æ √Æ√Ø√´√†√∑√•√≠√≠√ª√µ √§√≠√•√© √†√∞√•√≠√§√ª √Ä√á√ë");
	new year,month,day;
	new playersip[16], querystr[160];
	getdate(year, month, day);
	GetPlayerIp(playerid, playersip, sizeof(playersip));
	mysql_format(mysql_Handle, querystr, sizeof(querystr), "UPDATE `accounts` SET `pGetonDate` = '%02d.%02d.%02d', `pGetonIP` = '%s' WHERE `id` = %d LIMIT 1",day,month,year,playersip,pData[playerid][pID]);
	mysql_tquery(mysql_Handle, querystr);
	format(string, 50, "~w~welcome ~n~~b~ %s", pData[playerid][pName]);
	GameTextForPlayer(playerid, string, 5000, 1);

	TogglePlayerSpectating(playerid, 0);
	TogglePlayerControllable(playerid, 0);
	SetTimerEx("unfreeze_fix_Spawn", 2000, 0, "i", playerid);

	SetPVarInt(playerid, "ACKickFix", gettime()+10);
	SpawnPlayer(playerid);

	auth_camstate[playerid] = -1;

	if(strlen(pData[playerid][p_desc]) > 0)
	{
		new text[128];
		ConvertNewLines(text, pData[playerid][p_desc]);
		pData[playerid][p_desc_textid] = CreateDynamic3DTextLabel(text, 0xffffffe0, 0,0,-0.8, 8, playerid, INVALID_VEHICLE_ID, 1, -1, -1, -1, 8);
	}

	if(pData[playerid][pWanted] >= 1) SetPlayerWantedLevel(playerid, pData[playerid][pWanted]);
	return 1;
}

CB: unfreeze_fix_Spawn(playerid) return TogglePlayerControllable(playerid, 1);

public OnRconLoginAttempt(ip[], password[], success) {
	if(!success) { 
		new ip_pl[16];
		foreach(new i:Player) { 
			GetPlayerIp(i, ip_pl, sizeof(ip_pl));
			if(strcmp(ip, ip_pl, true)) continue;
			if(!GetPVarInt(i, "rcon_hack")) {
				SCM(i, COLOR_RED, "√è√ê√Ö√Ñ√ì√è√ê√Ö√Ü√Ñ√Ö√ç√à√Ö: "CWHITE"√è√∞√® √Ø√Æ√¢√≤√Æ√∞√≠√Æ√¨ √¢√¢√Æ√§√• S√≠√≠√≠√Æ√© √™√Æ√¨√†√≠√§√ª √Ç√ª √°√≥√§√•√≤√• √ß√†√°√†√≠√•√≠√ª");
				SetPVarInt(i, "rcon_hack", 1);
				printf("[RCON] IP %s entered the wrong password", ip);
			}
			else {
				printf("[RCON] IP %s was banned for incorrect password entry", ip);
				BlockIpAddress(ip, 600000);
			}
			break;
		}      
	}
	return 1;
} 
CB: UpdateSpeedometr(playerid) {
	if(!GetPVarInt(playerid,"ShowSpeed") || GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
	if(!pTemp[playerid][pAFK]) {
		new vehicleid = GetPlayerVehicleID(playerid), 
			veh_model = GetVehicleModel(vehicleid);

		new newkeys, udown, lright;
		GetPlayerKeys(playerid, newkeys, udown, lright);

		if(vehicleid <= 0) return 0;

		if(VehInfo[vehicleid][vFuel] < 0.1) {
			if(!GetPVarInt(playerid, "fuelisshow")) {
				if(veh_model != 481 && veh_model != 509 && veh_model != 510) {
					new engine, lights, alarm, doors, bonnet, boot, objective;
					GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
					SetVehicleParamsEx(vehicleid, 0, lights, alarm, doors, bonnet, boot, objective);
					PlayerPlaySound(playerid, 25603, 0.0, 0.0, 0.0);
					SetPVarInt(playerid, "fuelisshow", 1);
					VehInfo[vehicleid][vFuel]=0;
					savefuel_cars(playerid, vehicleid);
					SetTimerEx("UpdateSpeedometr", 200, 0, "i", playerid);
					return GameTextForPlayer(playerid, "~r~no fuel", 3000, 1);
				}
			}
		}
		else if(GetPVarInt(playerid, "fuelisshow")) 
			DeletePVar(playerid, "fuelisshow");

		new Float: X2, Float: Y2, Float: Z2, Float: X, Float: Y, Float: Z;

		X2 = VehInfo[vehicleid][vehicleX];
		Y2 = VehInfo[vehicleid][vehicleY];
		Z2 = VehInfo[vehicleid][vehicleZ];

		GetVehicleVelocity(vehicleid,X,Y,Z);

		new Float: speed = floatsqroot(floatadd(floatadd(floatpower(X, 2), floatpower(Y, 2)),  floatpower(Z, 2))) * 126.31;

		new PlayerSpeed = floatround(speed);

		new num = -1;

		if(house_carid[playerid][0] && vehicleid == house_carid[playerid][0]) num = 0;
		if(house_carid[playerid][1] && vehicleid == house_carid[playerid][1]) num = 1;
		if(house_carid[playerid][2] && vehicleid == house_carid[playerid][2]) num = 2;
		if(num != -1) {
			new Float: middle_value[7], Float: result;
			if(!set_boost_by_adm[vehicleid]) {
				switch(veh_charact[vehicleid][0]) {
					case 1: middle_value[0] = 1.5;
					case 2: middle_value[0] = 2.0;
					case 3: middle_value[0] = 2.5;
				}
				switch(veh_charact[vehicleid][1]) {
					case 1: middle_value[1] = 1.5;
					case 2: middle_value[1] = 2.0;
					case 3: middle_value[1] = 2.5;
				}
				switch(veh_charact[vehicleid][2]) {
					case 1: middle_value[2] = 1.5;
					case 2: middle_value[2] = 2.0;
					case 3: middle_value[2] = 2.2;
					case 4: middle_value[2] = 2.5;
				}
				switch(veh_charact[vehicleid][3]) {
					case 1: middle_value[3] = 1.5;
					case 2: middle_value[3] = 2.0;
					case 3: middle_value[3] = 2.2;
					case 4: middle_value[3] = 2.3;
				}
				if(veh_charact[vehicleid][0] != 0 || veh_charact[vehicleid][1] != 0 || veh_charact[vehicleid][2] != 0 || veh_charact[vehicleid][3] != 0) {
					result = middle_value[0] + middle_value[1] + middle_value[2] + middle_value[3];
					boost_veh_lvl[vehicleid] = floatround(result);
				}
				else boost_veh_lvl[vehicleid] = 0;
			}
			if(!set_brake_by_adm[vehicleid]) {
				switch(veh_charact[vehicleid][4]) {
					case 1: middle_value[4] = 1.5;
					case 2: middle_value[4] = 2.3;
					case 3: middle_value[4] = 2.5;
					case 4: middle_value[4] = 2.7;
					case 5: middle_value[4] = 2.8;
				}
				switch(veh_charact[vehicleid][5]) {
					case 1: middle_value[5] = 1.1;
					case 2: middle_value[5] = 1.3;
					case 3: middle_value[5] = 1.7;
					case 4: middle_value[5] = 2.3;
				}
				switch(veh_charact[vehicleid][6]) {
					case 1: middle_value[6] = 1.3;
					case 2: middle_value[6] = 1.5;
					case 3: middle_value[6] = 1.9;
				}
				if(veh_charact[vehicleid][4] != 0 || veh_charact[vehicleid][5] != 0 || veh_charact[vehicleid][6] != 0) {
					result = middle_value[4] + middle_value[5] + middle_value[6];
					braking_veh_lvl[vehicleid] = floatround(result);
				}
				else braking_veh_lvl[vehicleid] = 0;
			}
		}

		GetVehiclePos(vehicleid, X, Y, Z);
		VehInfo[vehicleid][vehicleX] = X;
		VehInfo[vehicleid][vehicleY] = Y;
		VehInfo[vehicleid][vehicleZ] = Z;
		new Float:veloc = PointToPoint3D(X2,Y2,Z2,X,Y,Z)/1000;
		VehInfo[vehicleid - 1][vDrived] += veloc;
		if(VehInfo[vehicleid - 1][vEngine]) {
			if(VehInfo[vehicleid][vFuel] > 0.0 && !IsAPlane(veh_model)) VehInfo[vehicleid][vFuel] -= (veloc*2);
			else if(IsAPlane(veh_model)) VehInfo[vehicleid][vFuel] -= 0.001;
			savefuel_cars(playerid, vehicleid);
		}

		if(pData[playerid][p_setting][5] == 1) {
			if(VehInfo[vehicleid - 1][vLock]) PlayerTextDrawColor(playerid, new_player_speedTD[playerid][5], 0xFA1010FF);
			else PlayerTextDrawColor(playerid, new_player_speedTD[playerid][5], 0xFFFFFFFF);

			if(VehInfo[vehicleid - 1][vLamp]) PlayerTextDrawColor(playerid, new_player_speedTD[playerid][6], 0x00FF00FF);
			else PlayerTextDrawColor(playerid, new_player_speedTD[playerid][6], 0xFFFFFFFF);

			if(VehInfo[vehicleid - 1][vEngine]) PlayerTextDrawColor(playerid, new_player_speedTD[playerid][4], 0x00FF00FF);
			else PlayerTextDrawColor(playerid, new_player_speedTD[playerid][4], 0xFFFFFFFF);

			if(old_lampstat[playerid] != VehInfo[vehicleid - 1][vLamp]) PlayerTextDrawHide(playerid, new_player_speedTD[playerid][6]); PlayerTextDrawShow(playerid, new_player_speedTD[playerid][6]), old_lampstat[playerid] = VehInfo[vehicleid - 1][vLamp];
			if(old_lockstat[playerid] != VehInfo[vehicleid - 1][vLock]) PlayerTextDrawHide(playerid, new_player_speedTD[playerid][5]); PlayerTextDrawShow(playerid, new_player_speedTD[playerid][5]), old_lockstat[playerid] = VehInfo[vehicleid - 1][vLock];
			if(old_enginestat[playerid] != VehInfo[vehicleid - 1][vEngine]) PlayerTextDrawHide(playerid, new_player_speedTD[playerid][4]); PlayerTextDrawShow(playerid, new_player_speedTD[playerid][4]), old_enginestat[playerid] = VehInfo[vehicleid - 1][vEngine];
			
			new Float: CarH;
			GetVehicleHealth(vehicleid, CarH);

			format(string, 64, "%d", floatround(VehInfo[vehicleid][vFuel], floatround_ceil));
			PlayerTextDrawSetString(playerid, new_player_speedTD[playerid][3], string);

			format(string, 64, "%d", floatround(CarH, floatround_ceil));
			PlayerTextDrawSetString(playerid, new_player_speedTD[playerid][2], string);

			format(string, 64, "%i", PlayerSpeed);
			PlayerTextDrawSetString(playerid, new_player_speedTD[playerid][1], string);
		}
		else if(pData[playerid][p_setting][5] == 2) {
			if(pData[playerid][pHouse] != -1) {
				if(pData[playerid][pCar][0] != 0 || pData[playerid][pCar][1] != 0 || pData[playerid][pCar][2] != 0) {
					if(alarm_vehicle[vehicleid] == 60605) PlayerTextDrawColor(playerid, al_indichome[playerid], 0xFFFFFFFF);
					else PlayerTextDrawColor(playerid, al_indichome[playerid], 0xAA80FFFF);
					if(house_carid[playerid][0] && vehicleid == house_carid[playerid][0]) {
						PlayerTextDrawHide(playerid, al_indichome[playerid]);
						PlayerTextDrawShow(playerid, al_indichome[playerid]);
					}
					if(house_carid[playerid][1] && vehicleid == house_carid[playerid][1]) {
						PlayerTextDrawHide(playerid, al_indichome[playerid]);
						PlayerTextDrawShow(playerid, al_indichome[playerid]);
					}
					if(house_carid[playerid][2] && vehicleid == house_carid[playerid][2]) {
						PlayerTextDrawHide(playerid, al_indichome[playerid]);
						PlayerTextDrawShow(playerid, al_indichome[playerid]);
					}
				}
			}

			if(VehInfo[vehicleid][vFuel] <= 15.0) PlayerTextDrawColor(playerid, speed_playertd[playerid][4], 0xFF4400FF); 
			else PlayerTextDrawColor(playerid, speed_playertd[playerid][4], -65281); 
			PlayerTextDrawHide(playerid, speed_playertd[playerid][4]);
			PlayerTextDrawShow(playerid, speed_playertd[playerid][4]);

			if(VehInfo[vehicleid - 1][vLock]) PlayerTextDrawColor(playerid, speed_playertd[playerid][2], 0x00FF00FF);
			else PlayerTextDrawColor(playerid, speed_playertd[playerid][2], 0xFF4400FF);

			if(VehInfo[vehicleid - 1][vLamp]) PlayerTextDrawColor(playerid, speed_playertd[playerid][1], 0x00FF00FF);
			else PlayerTextDrawColor(playerid, speed_playertd[playerid][1], 0xFF4400FF);

			if(VehInfo[vehicleid - 1][vEngine]) PlayerTextDrawColor(playerid, speed_playertd[playerid][3], 0x00FF00FF);
			else PlayerTextDrawColor(playerid, speed_playertd[playerid][3], 0xFF4400FF);

			if(old_lampstat[playerid] != VehInfo[vehicleid - 1][vLamp]) PlayerTextDrawHide(playerid, speed_playertd[playerid][1]); PlayerTextDrawShow(playerid, speed_playertd[playerid][1]), old_lampstat[playerid] = VehInfo[vehicleid - 1][vLamp];
			if(old_lockstat[playerid] != VehInfo[vehicleid - 1][vLock]) PlayerTextDrawHide(playerid, speed_playertd[playerid][2]); PlayerTextDrawShow(playerid, speed_playertd[playerid][2]), old_lockstat[playerid] = VehInfo[vehicleid - 1][vLock];
			if(old_enginestat[playerid] != VehInfo[vehicleid - 1][vEngine]) PlayerTextDrawHide(playerid, speed_playertd[playerid][3]); PlayerTextDrawShow(playerid, speed_playertd[playerid][3]), old_enginestat[playerid] = VehInfo[vehicleid - 1][vEngine];

			new Float: CarH;
			GetVehicleHealth(vehicleid, CarH);

			format(string, 64, "%d", floatround(VehInfo[vehicleid][vFuel], floatround_ceil));
			PlayerTextDrawSetString(playerid, speed_playertd[playerid][4], string);

			format(string, 64, "%d", floatround(CarH, floatround_ceil));
			PlayerTextDrawSetString(playerid, speed_playertd[playerid][5], string);

			format(string, 64, "%i km/h", PlayerSpeed);
			PlayerTextDrawSetString(playerid, speed_playertd[playerid][0], string);
		}
	}
	return SetTimerEx("UpdateSpeedometr", 200, 0, "i", playerid);
}

stock AtSkillBar(count_points) {
	new str[100], point[2] = "|";
	for(new i = 0; i < count_points; i ++) strcat(str, point);
	return str;
}

public OnPlayerCommandPerformed(playerid, cmd[], params[], result, flags)
{
	if(!IsPlayerConnected(playerid)) return 0;
	if(GetPVarInt(playerid, "RegisterPlayer")==1 || pData[playerid][pLogin]==false) return 0;
	printf("[%s] Command(%i, %s %s)", GetName(playerid), playerid, cmd, params);
	return 1;
}
public OnPlayerCommandReceived(playerid, cmd[], params[], flags)
{
	if(!IsPlayerConnected(playerid)) return 0;
	if(GetPVarInt(playerid, "RegisterPlayer")==1 || pData[playerid][pLogin]==false) return 0;
	if(antiflood_cmd[playerid] > gettime())
	{
		SCM(playerid, 0x6B6B6BFF, "√ç√• √¥√´√≥√§√®√≤√•");
		return 0;
	}
	if(pData[playerid][pAdmin] < 1) antiflood_cmd[playerid] = gettime() + 1;
	return 1;
}

CMD:hreset(playerid) return SPD(playerid, 423,DIALOG_STYLE_LIST,"{cc9900}√ìS√≠√´√•√≠√®√• √†√™√±√•√±√±√≥√†√∞√†","√é√∑√™√®\n√É√Æ√´√Æ√¢√≠√Æ√© √≥√°√Æ√∞\n√å√†√±√™√†\n√ì√±√ª\n√è√∞√®√∑¬∏√±√™√†","Seleccione","Cerrar");
CMD:fixaccessory(playerid) return SPD(playerid, 548,DIALOG_STYLE_LIST,"{cc9900}√ê√•S√≠√™√≤√®√∞√Æ√¢√†√≠√®√• √†√™√±√•√±√±√≥√†√∞√†","√é√∑√™√®\n√É√Æ√´√Æ√¢√≠√Æ√© √≥√°√Æ√∞\n√å√†√±√™√†\n√ì√±√ª\n√è√∞√®√∑¬∏√±√™√†","Seleccione","Cerrar");
CMD:strobe(playerid)
{
	if(!pData[playerid][p_premium] && !IsAArm(playerid) && !IsACop(playerid) && !IsAMedic(playerid)) 
		return SCM(playerid, 0xE5B090FF, "√î√≥√≠√™√∂√®√ø √§√Æ√±√≤√≥√Ø√≠√† √≤√Æ√´√º√™√Æ "CCYAN"√Ø√∞√•√¨√®√≥√¨ {e5b090}√®√£√∞√Æ√™√†√¨ √® √£√Æ√±. √±√Æ√≤√∞√≥√§√≠√®√™√†√¨");
    
    if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √†√¢√≤√Æ√¨√Æ√°√®√´√•");
    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_GREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √ß√† √∞√≥√´¬∏√¨");
    
    new vehicleid = GetPlayerVehicleID(playerid);
    if(IsABoat(vehicleid) || IsAPlane(vehicleid) || IsABike(vehicleid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ñ√´√ø √Ω√≤√Æ√£√Æ √≤√∞√†√≠√±√Ø√Æ√∞√≤√† √≠√•√§√Æ√±√≤√≥√Ø√≠√ª √±√≤√∞√Æ√°√Æ√±√™√Æ√Ø√ª");
    
    return SPD(playerid, 148, DIALOG_STYLE_LIST, "{FFCD00}√ë√≤√∞√Æ√°√Æ√±√™√Æ√Ø√ª", ""CMAIN"√Ç√™√´√æ√∑√®√≤√º "CWHITE"√®√´√® "CERROR"√¢√ª√™√´√æ√∑√®√≤√º "CWHITE"√±√≤√∞√Æ√°√Æ√±√™√Æ√Ø√ª", "Seleccione", "Cerrar");
}

CB: function_strobocop(vehicleid)
{
    new panels, doors, lights, tires;
    GetVehicleDamageStatus(vehicleid, panels, doors, lights, tires);
    switch(count_strobrscop[vehicleid])
    {
        case 0: UpdateVehicleDamageStatus(vehicleid, panels, doors, 1, tires), count_strobrscop[vehicleid] = 1;
        case 1: UpdateVehicleDamageStatus(vehicleid, panels, doors, 4, tires), count_strobrscop[vehicleid] = 2;
        case 2: UpdateVehicleDamageStatus(vehicleid, panels, doors, 65,tires), count_strobrscop[vehicleid] = 3;
        case 3: UpdateVehicleDamageStatus(vehicleid, panels, doors, 68,tires), count_strobrscop[vehicleid] = 0;
    }
    return 1;
}

CMD:captivity(playerid, params[]) {
	if(!IsAMafia(playerid)) return SCM(playerid, COLOR_GREY, "√î√≥√≠√™√∂√®√ø √§√Æ√±√≤√≥√Ø√≠√† √≤√Æ√´√º√™√Æ √¨√†√¥√®√ø√¨");
	if(!IsPlayerInRangeOfPoint(playerid, 9.0, 2606.9226, 1315.2701, 1048.5125)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √Æ√™√Æ√´√Æ √Ø√´√•√≠√†");
	new to_player;
	if(sscanf(params, "i", to_player)) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /captivity [id √®√£√∞√Æ√™√†]");
	if(!IsPlayerConnected(to_player)) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(to_player == playerid) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Ω√≤√Æ √§√•√©√±√≤√¢√®√• √≠√† √±√•√°√•");
	if(!ProxDetectorS(2.0, playerid, to_player)) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
	if(GetPVarInt(to_player, "captured")) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √≥√¶√• √¢ √Ø√´√•√≠√≥. √Ñ√´√ø √Æ√±√¢√Æ√°√Æ√¶√§√•√≠√®√ø Usar√≤√• "CPALEGREEN"/uncaptivity");
	SetPVarInt(to_player, "captured", 1);
	TogglePlayerControllable(to_player, 0);
	PlayerPlaySound(playerid, 11200, 0.0, 0.0, 0.0);
	PlayerPlaySound(to_player, 11200, 0.0, 0.0, 0.0);
	GameTextForPlayer(to_player, "~b~you were~n~~b~captured", 5000, 4);
	return SCMF(playerid, COLOR_BLUE, "%s √°√ª√´ √Ø√Æ√±√†√¶√•√≠ √¢ √Ø√´√•√≠. √Ñ√´√ø √Æ√±√¢√Æ√°√Æ√¶√§√•√≠√®√ø Usar√≤√• "CORANGE"/uncaptivity", GetName(to_player));
}
CMD:uncaptivity(playerid, params[]) {
	if(!IsAMafia(playerid)) return SCM(playerid, COLOR_GREY, "√î√≥√≠√™√∂√®√ø √§√Æ√±√≤√≥√Ø√≠√† √≤√Æ√´√º√™√Æ √¨√†√¥√®√ø√¨");
	if(!IsPlayerInRangeOfPoint(playerid, 9.0, 2606.9226, 1315.2701, 1048.5125)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √Æ√™√Æ√´√Æ √Ø√´√•√≠√†");
	new to_player;
	if(sscanf(params, "i", to_player)) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /uncaptivity [id √®√£√∞√Æ√™√†]");
	if(!IsPlayerConnected(to_player)) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(to_player == playerid) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Ω√≤√Æ √§√•√©√±√≤√¢√®√• √≠√† √±√•√°√•");
	if(!ProxDetectorS(2.0, playerid, to_player)) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
	if(!GetPVarInt(to_player, "captured")) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √≠√• √¢ √Ø√´√•√≠√≥");
	DeletePVar(to_player, "captured");
	TogglePlayerControllable(to_player, 1);
	GameTextForPlayer(to_player, "~g~you are~n~~g~released", 5000, 4);
	return SCMF(playerid, COLOR_MAIN, "√Ç√ª √Æ√±√¢√Æ√°√Æ√§√®√´√® %s √®√ß √Ø√´√•√≠√†", GetName(to_player));
}
CMD:amg(playerid) {
	if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √°√ª√≤√º √¢ √†√¢√≤√Æ√¨√Æ√°√®√´√•");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √°√ª√≤√º √ß√† √∞√≥√´¬∏√¨ √†√¢√≤√Æ√¨√Æ√°√®√´√ø");
	new veh = GetPlayerVehicleID(playerid);
	if(boost_veh_lvl[veh] == 0 && braking_veh_lvl[veh] == 0) 
		return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √¢√™√´√æ√∑√®√≤√º AMG √∞√•√¶√®√¨ √≠√† √Ω√≤√Æ√¨ √≤√∞√†√≠√±√Ø√Æ√∞√≤√•");

	if(amg_mode[veh]) {
		PlayerPlaySound(playerid, 14409, 0, 0, 0);
		SCM(playerid, COLOR_ERROR, "AMG √∞√•√¶√®√¨ √≠√† √Ω√≤√Æ√¨ √≤√∞√†√≠√±√Ø√Æ√∞√≤√• √Æ√≤√™√´√æ√∑√•√≠");
		amg_mode[veh] = false;
	}
	else {
		PlayerPlaySound(playerid, 14410, 0, 0, 0);
		SCM(playerid, COLOR_MAIN, "AMG √∞√•√¶√®√¨ √≠√† √Ω√≤√Æ√¨ √≤√∞√†√≠√±√Ø√Æ√∞√≤√• √≥√±√Ø√•√∏√≠√Æ √¢√™√´√æ√∑√•√≠");
		amg_mode[veh] = true;
	}

	return 1;
}
CMD:sellflat(playerid) {
	new flat = pData[playerid][pFlat];
	if(flat == -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √™√¢√†√∞√≤√®√∞√ª");
	if(pData[playerid][pCar][0] != 0) return SCM(playerid, COLOR_LIGHTGREY, "√è√∞√ÆS√≠√©√≤√• √≤√∞√†√≠√±√Ø√Æ√∞√≤ "CPALEGREEN"(/sellcar)");
	new str_sell_flat[170];
	new nalog = flat_info[flat][fl_price] * Business_Nalog / 100;
	format(str_sell_flat, sizeof(str_sell_flat), ""CWHITE"√Ç√ª √§√•√©√±√≤√¢√®√≤√•√´√º√≠√Æ √µ√Æ√≤√®√≤√• √Ø√∞√ÆS√≠√≤√º √™√¢√†√∞√≤√®√∞√≥ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥?\n√ë √≥√∑√•√≤√Æ√¨ √≠√†√´√Æ√£√† √±√≤√Æ√®√¨√Æ√±√≤√º √Ø√∞√ÆS√≠√¶√® √±√Æ√±√≤√†√¢√®√≤ "CCYAN"%d$", flat_info[flat][fl_price] - nalog);
	return SPD(playerid, 1699, DIALOG_STYLE_MSGBOX, ""CMAIN"√è√∞√ÆS√≠√¶√† √™√¢√†√∞√≤√®√∞√ª", str_sell_flat, "S√≠", "No");
}
CMD:flat(playerid) {
	if(pData[playerid][pFlat] == -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √™√¢√†√∞√≤√®√∞√ª");
	return SPD(playerid, 1696, DIALOG_STYLE_LIST, ""CMAIN"√å√•√≠√æ √≥√Ø√∞√†√¢√´√•√≠√®√ø √™√¢√†√∞√≤√®√∞√Æ√©", "{ffe79e}[1] "CWHITE"√à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ √™√¢√†√∞√≤√®√∞√•\n{ffe79e}[2] "CMAIN"√é√≤√™√∞√ª√≤√º "CWHITE"√®√´√® "CERROR"Cerrar "CWHITE"√™√¢√†√∞√≤√®√∞√≥\n{ffe79e}[3] "CWHITE"√è√∞√ÆS√≠√≤√º √™√¢√†√∞√≤√®√∞√≥ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥\n{ffe79e}[4] "CWHITE"√è√∞√ÆS√≠√≤√º √™√¢√†√∞√≤√®√∞√≥ √§√∞√≥√£√Æ√¨√≥ √®√£√∞√Æ√™√≥\n{ffe79e}[5] "CWHITE"√Ñ√Æ√±√≤√†√¢√®√≤√º √≤√∞√†√≠√±√Ø√Æ√∞√≤ √™ √™√Æ√¨√Ø√´√•√™√±√≥\n{ffe79e}[6] "CWHITE"√ì√Ø√∞√†√¢√´√•√≠√®√• √†√∞√•√≠√§√Æ√©\n{ffe79e}[7] {ff6640}√è√∞√ÆS√≠√≤√º "CWHITE"√≤√∞√†√≠√±√Ø√Æ√∞√≤ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥\n{ffe79e}[8] {fa1010}√è√∞√ÆS√≠√≤√º "CWHITE"√≤√∞√†√≠√±√Ø√Æ√∞√≤ √§√∞√≥√£√Æ√¨√≥ √®√£√∞√Æ√™√≥", "Seleccione", "Cerrar");
}
CMD:vinfo(playerid, params[]) {
	if(!IsPlayerInRangeOfPoint(playerid, 40.0, 323.2394, -1798.7316, 4.6925)) 
		return SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √Æ√™√Æ√´√Æ √¨√•√±√≤√† √Ø√Æ√™√≥√Ø√™√® √≥√≠√®√™√†√´√º√≠√ª√µ √†√¢√≤√Æ√¨√Æ√°√®√´√•√©");
	new numbercar;
	if(sscanf(params, "d", numbercar)) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /vinfo [√≠√Æ√¨√•√∞ √¨√†√∏√®√≠√ª]");
	switch(numbercar) {
		case 1: {
			SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{cc9900}√à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ√° √†√¢√≤√Æ√¨√Æ√°√®√´√•", 
				"\n\
				"CWHITE"√ç√Æ√¨√•√∞ √≠√† √Ø√´√Æ√π√†√§√™√•:\t\t"CYELLOW"1\n\n\
				"CWHITE"√å√Æ√§√•√´√º:\t\t\t"CORANGE"Elegy\n\
				"CWHITE"√ë√≤√Æ√®√¨√Æ√±√≤√º:\t\t\t{009900}11.000.000$\n\
				"CWHITE"√å√†√™√±√®√¨√†√´√º√≠√†√ø √±√™√Æ√∞√Æ√±√≤√º:\t"CLITEBLUE"125 √™√¨/√∑\n\
				", 
			"Cerrar", "");
		}
		case 2: {
			SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{cc9900}√à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ√° √†√¢√≤√Æ√¨√Æ√°√®√´√•", 
				"\n\
				"CWHITE"√ç√Æ√¨√•√∞ √≠√† √Ø√´√Æ√π√†√§√™√•:\t\t"CYELLOW"2\n\n\
				"CWHITE"√å√Æ√§√•√´√º:\t\t\t"CORANGE"Infernus\n\
				"CWHITE"√ë√≤√Æ√®√¨√Æ√±√≤√º:\t\t\t{009900}8.500.000$\n\
				"CWHITE"√å√†√™√±√®√¨√†√´√º√≠√†√ø √±√™√Æ√∞√Æ√±√≤√º:\t"CLITEBLUE"150 √™√¨/√∑\n\
				", 
			"Cerrar", "");
		}
		case 3: {
			SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{cc9900}√à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ√° √†√¢√≤√Æ√¨√Æ√°√®√´√•", 
				"\n\
				"CWHITE"√ç√Æ√¨√•√∞ √≠√† √Ø√´√Æ√π√†√§√™√•:\t\t"CYELLOW"3\n\n\
				"CWHITE"√å√Æ√§√•√´√º:\t\t\t"CORANGE"Bullet\n\
				"CWHITE"√ë√≤√Æ√®√¨√Æ√±√≤√º:\t\t\t{009900}10.000.000$\n\
				"CWHITE"√å√†√™√±√®√¨√†√´√º√≠√†√ø √±√™√Æ√∞√Æ√±√≤√º:\t"CLITEBLUE"140 √™√¨/√∑\n\
				", 
			"Cerrar", "");
		}
		case 4: {
			SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{cc9900}√à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ√° √†√¢√≤√Æ√¨√Æ√°√®√´√•", 
				"\n\
				"CWHITE"√ç√Æ√¨√•√∞ √≠√† √Ø√´√Æ√π√†√§√™√•:\t\t"CYELLOW"4\n\n\
				"CWHITE"√å√Æ√§√•√´√º:\t\t\t"CORANGE"Turismo\n\
				"CWHITE"√ë√≤√Æ√®√¨√Æ√±√≤√º:\t\t\t{009900}7.900.000$\n\
				"CWHITE"√å√†√™√±√®√¨√†√´√º√≠√†√ø √±√™√Æ√∞√Æ√±√≤√º:\t"CLITEBLUE"130 √™√¨/√∑\n\
				", 
			"Cerrar", "");
		}
		case 5: {
			SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{cc9900}√à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ√° √†√¢√≤√Æ√¨√Æ√°√®√´√•", 
				"\n\
				"CWHITE"√ç√Æ√¨√•√∞ √≠√† √Ø√´√Æ√π√†√§√™√•:\t\t"CYELLOW"5\n\n\
				"CWHITE"√å√Æ√§√•√´√º:\t\t\t"CORANGE"Perenniel\n\
				"CWHITE"√ë√≤√Æ√®√¨√Æ√±√≤√º:\t\t\t{009900}9.000.000$\n\
				"CWHITE"√å√†√™√±√®√¨√†√´√º√≠√†√ø √±√™√Æ√∞√Æ√±√≤√º:\t"CLITEBLUE"90 √™√¨/√∑\n\
				", 
			"Cerrar", "");
		}
		case 6: {
			SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{cc9900}√à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ√° √†√¢√≤√Æ√¨√Æ√°√®√´√•", 
				"\n\
				"CWHITE"√ç√Æ√¨√•√∞ √≠√† √Ø√´√Æ√π√†√§√™√•:\t\t"CYELLOW"6\n\n\
				"CWHITE"√å√Æ√§√•√´√º:\t\t\t"CORANGE"Bullet\n\
				"CWHITE"√ë√≤√Æ√®√¨√Æ√±√≤√º:\t\t\t{009900}10.000.000$\n\
				"CWHITE"√å√†√™√±√®√¨√†√´√º√≠√†√ø √±√™√Æ√∞√Æ√±√≤√º:\t"CLITEBLUE"140 √™√¨/√∑\n\
				", 
			"Cerrar", "");
		}
		case 7: {
			SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{cc9900}√à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ√° √†√¢√≤√Æ√¨√Æ√°√®√´√•", 
				"\n\
				"CWHITE"√ç√Æ√¨√•√∞ √≠√† √Ø√´√Æ√π√†√§√™√•:\t\t"CYELLOW"7\n\n\
				"CWHITE"√å√Æ√§√•√´√º:\t\t\t"CORANGE"Infernus\n\
				"CWHITE"√ë√≤√Æ√®√¨√Æ√±√≤√º:\t\t\t{009900}8.500.000$\n\
				"CWHITE"√å√†√™√±√®√¨√†√´√º√≠√†√ø √±√™√Æ√∞√Æ√±√≤√º:\t"CLITEBLUE"150 √™√¨/√∑\n\
				", 
			"Cerrar", "");
		}
		case 8: {
			SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{cc9900}√à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ√° √†√¢√≤√Æ√¨√Æ√°√®√´√•", 
				"\n\
				"CWHITE"√ç√Æ√¨√•√∞ √≠√† √Ø√´√Æ√π√†√§√™√•:\t\t"CYELLOW"8\n\n\
				"CWHITE"√å√Æ√§√•√´√º:\t\t\t"CORANGE"ZR-350\n\
				"CWHITE"√ë√≤√Æ√®√¨√Æ√±√≤√º:\t\t\t{009900}12.000.000$\n\
				"CWHITE"√å√†√™√±√®√¨√†√´√º√≠√†√ø √±√™√Æ√∞√Æ√±√≤√º:\t"CLITEBLUE"130 √™√¨/√∑\n\
				", 
			"Cerrar", "");
		}
		case 9: {
			SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{cc9900}√à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ√° √†√¢√≤√Æ√¨√Æ√°√®√´√•", 
				"\n\
				"CWHITE"√ç√Æ√¨√•√∞ √≠√† √Ø√´√Æ√π√†√§√™√•:\t\t"CYELLOW"9\n\n\
				"CWHITE"√å√Æ√§√•√´√º:\t\t\t"CORANGE"Sandking\n\
				"CWHITE"√í√®√Ø:\t\t\t\t{00CCFF}√ë√≤√Æ√™√Æ√¢√ª√©\n\
				"CWHITE"√ë√≤√Æ√®√¨√Æ√±√≤√º:\t\t\t{009900}1.900.000$\n\
				"CWHITE"√å√†√™√±√®√¨√†√´√º√≠√†√ø √±√™√Æ√∞√Æ√±√≤√º:\t"CLITEBLUE"125 √™√¨/√∑\n\
				", 
			"Cerrar", "");
		}
		case 10: {
			SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{cc9900}√à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ√° √†√¢√≤√Æ√¨√Æ√°√®√´√•", 
				"\n\
				"CWHITE"√ç√Æ√¨√•√∞ √≠√† √Ø√´√Æ√π√†√§√™√•:\t\t"CYELLOW"10\n\n\
				"CWHITE"√å√Æ√§√•√´√º:\t\t\t"CORANGE"Sandking\n\
				"CWHITE"√í√®√Ø:\t\t\t\t{00CCFF}AMG\n\
				"CWHITE"√ë√≤√Æ√®√¨√Æ√±√≤√º:\t\t\t{009900}3.800.000$\n\
				"CWHITE"√å√†√™√±√®√¨√†√´√º√≠√†√ø √±√™√Æ√∞√Æ√±√≤√º:\t"CLITEBLUE"205 √™√¨/√∑\n\
				", 
			"Cerrar", "");
		}
		default: return SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§√•√≠ √≠√•√™√Æ√∞√∞√•√™√≤√≠√ª√© √≠√Æ√¨√•√∞. √Ñ√Æ√Ø√≥√±√≤√®√¨√Æ √Æ√≤ 1 √§√Æ 10");
	}
	return 1;
}
CMD:hi(playerid, params[]) {
	if(GetPVarInt(playerid, "hi_cooldown") > gettime()) return SCM(playerid, COLOR_LIGHTGREY, "√è√Æ√§√Æ√¶√§√®√≤√• √≠√•√±√™√Æ√´√º√™√Æ √±√•√™√≥√≠√§...");
	new to_player;
	if(sscanf(params, "d", to_player)) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /hi [id √®√£√∞√Æ√™√†]");
	if(!IsPlayerConnected(to_player)) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(to_player == playerid) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Ω√≤√Æ √§√•√©√±√≤√¢√®√• √≠√† √±√•√°√•");
	if(!ProxDetectorS(2.0, playerid, to_player)) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
	new str_m[65], Float: angle;
	GetPlayerFacingAngle(to_player, angle);
	SetPlayerFacingAngle(playerid, angle + 180.0);
	if(!IsPlayerInAnyVehicle(playerid)) ApplyAnimation(playerid, "GANGS", "hndshkfa", 4.1, 0, 0, 0, 0, 0, 1);
	if(!IsPlayerInAnyVehicle(to_player)) ApplyAnimation(to_player, "GANGS", "hndshkfa", 4.1, 0, 0, 0, 0, 0, 1);
	if(pData[playerid][pSex] == 1) format(str_m, 65, "%s √Ø√Æ√¶√†√´ √∞√≥√™√≥ %s", GetName(playerid), GetName(to_player));
	else format(str_m, 65, "%s √Ø√Æ√¶√†√´√† √∞√≥√™√≥ %s", GetName(playerid), GetName(to_player));
	ProxDetector(30.0, playerid, str_m, COLOR_PURPLE);
	return SetPVarInt(playerid, "hi_cooldown", gettime() + 5);
}
CMD:stand(playerid) {
	if(pData[playerid][pMember] != 16) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √∞√†√°√Æ√≤√†√•√≤√• √¢ √ë√å√à");
	if(pData[playerid][pRank] < 5) return SCM(playerid, COLOR_LIGHTGREY, "√î√≥√≠√™√∂√®√ø √§√Æ√±√≤√≥√Ø√≠√† √± 5-√£√Æ √∞√†√≠√£√†");
	if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √≤√∞√†√≠√±√Ø√Æ√∞√≤√•");
	if(GetPlayerInterior(playerid) != 0) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √Ø√Æ√¨√•√π√•√≠√®√ø√µ");
	if(IsValidDynamicObject(stndobject[playerid])) {
		DestroyDynamicObject(stndobject[playerid]);
		DestroyDynamicObject(stndobject_2[playerid]);
		DestroyDynamic3DTextLabel(stndobject3DText[playerid]);
		stndobject[playerid] = 0;
		stndobject_2[playerid] = 0;
		return SCM(playerid, 0x66CC00FF, "√ä√®√Æ√±√™ √°√ª√´ √≥√°√∞√†√≠");
	}
	new Float: px, Float: py, Float: pz, Float: angle;
    GetPlayerPos(playerid, px, py, pz);
    GetPlayerFacingAngle(playerid, angle);
    px += (2.0 * floatsin(-angle, degrees)); // 2.0 is distance
    py += (2.0 * floatcos(-angle, degrees));
    ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.2, 0, 0, 0, 0, 0, 1);
	new str_r[4];
	valstr(str_r, playerid);
    stndobject[playerid] = CreateDynamicObject(3861, px, py, pz + 0.08, 0.0, 0.0, angle);
    px += (1.40 * floatsin(-angle, degrees));
    py += (1.40 * floatcos(-angle, degrees));
    stndobject_2[playerid] = CreateDynamicObject(19482, px, py, pz + 0.65, 0.000000, 0.000000, angle - 90.0);
    stndobject3DText[playerid] = CreateDynamic3DTextLabel(str_r, 0xBB995580, px, py, pz - 0.2, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0, -1, 5.0);
	SetDynamicObjectMaterialText(stndobject_2[playerid], 0, "√è√∞√•√±√±√†", 130, "Tahoma", 60, 1, 0xFF0099ff, 0, 1);
	return Streamer_Update(playerid);
}
CMD:hhelp(playerid) {
	if(!pData[playerid][pHelper]) return 1;
	return SCM(playerid, 0x99CC66FF, "√ä√Æ√¨√†√≠√§√ª √µ√•√´√Ø√•√∞√†:  /helpers  /pm  /hc");
}
CMD:sethelper(playerid, params[]) {
	if(pData[playerid][pAdmin] < 5) return 1;
	new to_player, status;
	if(sscanf(params, "dd", to_player, status) || status > 1 || status < 0) 
		return SCM(playerid, COLOR_LIGHTGREY, "Usar: /sethelper [id √®√£√∞√Æ√™√†] [0 √®√´√® 1]");
	if(playerid == to_player) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√ß√¨√•√≠√ø√≤√º √±√•√°√• √Ø√∞√†√¢√† √µ√•√´√Ø√•√∞√†");
	if(!IsPlayerConnected(to_player)) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™√† √± √≤√†√™√®√¨ √†√©√§√® No");
	if(pData[to_player][pAdmin] > 0) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √ø√¢√´√ø√•√≤√±√ø √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√Æ√¨");
	if(status) {
		if(pData[to_player][pHelper]) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √≥√¶√• √ø√¢√´√ø√•√≤√±√ø √µ√•√´√Ø√•√∞√Æ√¨");
		pData[to_player][pHelper] = true;
		SCMF(playerid, 0x99CC99FF, "√è√∞√†√¢√† √µ√•√´√Ø√•√∞√† √≥√±√Ø√•√∏√≠√Æ √¢√ªS√≠√≠√ª √§√´√ø %s[%d]", GetName(to_player), to_player);
		SCMF(to_player, 0x99CC99FF, "%s √¢√ªS√≠√´ √Ç√†√¨ √Ø√∞√†√¢√† √µ√•√´√Ø√•√∞√†. √è√Æ√§√∞√Æ√°√≠√•√•: "CYELLOW"/hhelp", GetName(playerid));
	}
	else {
		if(!pData[to_player][pHelper]) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√Æ√≤ √®√£√∞√Æ√™ √≠√• √ø√¢√´√ø√•√≤√±√ø √µ√•√´√Ø√•√∞√Æ√¨");
		pData[to_player][pHelper] = false;
		SCMF(playerid, 0xFF6633FF, "√è√∞√†√¢√† √µ√•√´√Ø√•√∞√† √≥ %s[%d] √†√≠√≠√≥√´√®√∞√Æ√¢√†√≠√ª", GetName(to_player), to_player);
		SCMF(to_player, 0xFF6633FF, "%s √†√≠√≠√≥√´√®√∞√Æ√¢√†√´ √Ç√†√¨ √Ø√∞√†√¢√† √µ√•√´√Ø√•√∞√†", GetName(playerid));
	}
	return UpdatePlayerData(to_player, "pHelper", pData[to_player][pHelper]);
}
CMD:pm(playerid) {
	if(pData[playerid][pAdmin] < 1 && !pData[playerid][pHelper]) return 1;
    if(GetPVarInt(playerid, "AdminMessages")) return SCM(playerid, COLOR_LIGHTGREY, "√Ñ√´√ø √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√ø √Ω√≤√Æ√© √™√Æ√¨√†√≠√§√ª √≠√≥√¶√≠√Æ √¢√™√´√æ√∑√®√≤√º √±√Æ√Æ√°√π√•√≠√®√ø √∞√•√Ø√Æ√∞√≤√† √¢ /apanel");
    if(Iter_Count(Reports) == 0) return SCM(playerid, COLOR_GREY, "No √§√•√©√±√≤√¢√≥√æ√π√®√µ √Æ√°√∞√†√π√•√≠√®√©");
	new questionfrom = Iter_Random(Reports);
    Iter_Remove(Reports, questionfrom);
	new dialog[130], name_dial[44];
	format(dialog, sizeof(dialog), ""CWHITE"%s\n\n"CPALEGREEN"√Ç√∞√•√¨√ø √Æ√≤√Ø√∞√†√¢√´√•√≠√®√ø: %s", pTemp[questionfrom][rep_rport],report_date[questionfrom]);
	SetPVarInt(playerid, "questionfrom", questionfrom);
	format(name_dial, sizeof(name_dial), "{FFCD00}√é√°√∞√†√π√•√≠√®√• √Æ√≤ %s:", GetName(questionfrom));
	return SPD(playerid, 450, DIALOG_STYLE_INPUT, name_dial, dialog, "√é√≤√¢√•√≤√®√≤√º", "√ìS√≠√´√®√≤√º");
}

CMD:charity(playerid) return mysql_tquery(mysql_Handle, "SELECT `Name`, `p_charity` FROM `accounts` WHERE `p_charity` <> '0' ORDER BY `p_charity` DESC LIMIT 20", "get_info_charity", "i", playerid);
CB: get_info_charity(playerid) {
	new rows, ch_query[70], ch_name[24], ch_sum;
	string = "\t√à√¨√ø\t\t√ë√≥√¨√¨√† √Ø√Æ√¶√•√∞√≤√¢√Æ√¢√†√≠√®√©\n\n"CWHITE"";
	cache_get_row_count(rows);
	for(new i = 0; i < rows; i ++) {
		cache_get_value_name(i, "Name", ch_name);
		cache_get_value_name_int(i, "p_charity", ch_sum);
		format(string, 900, "%s%d. %s\t\t%d$\n", string, i + 1, ch_name, ch_sum);
	}
	mysql_format(mysql_Handle, ch_query, sizeof(ch_query), "SELECT `p_charity` FROM `accounts` WHERE `id` = %d", pData[playerid][pID]);
	return mysql_tquery(mysql_Handle, ch_query, "show_charity_list", "is", playerid, string);
}
CB: show_charity_list(playerid, str[]) {
	new player_ch_sum;
	cache_get_value_name_int(0, "p_charity", player_ch_sum);
	format(str, 1000, "%s\n{888888}√ë√≥√¨√¨√† √Ç√†√∏√®√µ √Ø√Æ√¶√•√∞√≤√¢√Æ√¢√†√≠√®√©: %d$\n√ë√Æ√¢√•√∞√∏√®√≤√º √Ø√Æ√¶√•√∞√≤√¢√Æ√¢√†√≠√®√• √¨√Æ√¶√≠√Æ √¢ √Ä√§√¨√®√≠√®√±√≤√∞√†√∂√®√® √è√∞√•√ß√®√§√•√≠√≤√†", string, player_ch_sum);
	return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CBLUE"√ã√≥√∑√∏√®√• √°√´√†√£√Æ√≤√¢√Æ√∞√®√≤√•√´√®", string, "Cerrar", "");
}
CMD:car(playerid) {
	new hid = pData[playerid][pHouse];
	if(hid == -1) return SCM(playerid, COLOR_LIGHTGREY, "√î√≥√≠√™√∂√®√ø √§√Æ√±√≤√≥√Ø√≠√† √≤√Æ√´√º√™√Æ √¢√´√†√§√•√´√º√∂√†√¨ √§√Æ√¨√Æ√¢");
	if(!IsPlayerInRangeOfPoint(playerid, 35, HouseInfo[hid][hEnter][0], HouseInfo[hid][hEnter][1], HouseInfo[hid][hEnter][2])) 
		return SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √Æ√™√Æ√´√Æ √±√¢√Æ√•√£√Æ √§√Æ√¨√†");
	return SPD(playerid, 755, DIALOG_STYLE_MSGBOX, ""CMAIN"√å√•√±√≤√Æ √Ø√Æ√ø√¢√´√•√≠√®√ø √¨√†√∏√®√≠√ª", ""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √≥√±√≤√†√≠√Æ√¢√®√≤√º √¨√•√±√≤√Æ √Ø√Æ√ø√¢√´√•√≠√®√ø\n√±√¢√Æ√•√£√Æ √≤√∞√†√≠√±√Ø√Æ√∞√≤√† √¢ √Ω√≤√Æ√¨ √¨√•√±√≤√•?", "S√≠", "No");
}
CMD:rankname(playerid) {
	new org_id = pData[playerid][pLeader];
	if(!org_id || org_id == 26) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√†√¨ √≠√•√§√Æ√±√≤√≥√Ø√≠√† S√≠√≠√≠√†√ø √¥√≥√≠√™√∂√®√ø");
	string = "√ê√†√≠√£\t√í√•√™√≥√π√•√• √≠√†√ß√¢√†√≠√®√•\t√ë√≤√†√≠S√≠√∞√≤√≠√Æ√• √≠√†√ß√¢√†√≠√®√•\n";
	for(new i = 0; i < 10; i ++) 
		format(string, 1000, "%s%d\t%s\t%s\n", string, i + 1, new_rank_name[org_id - 1][i], rank_name[org_id - 1][i]);
	strcat(string, "\n \t"CMAIN"√Ç√•√∞√≠√≥√≤√º √±√≤√†√≠S√≠√∞√≤√≠√ª√• √≠√†√ß√¢√†√≠√®√ø");
	return SPD(playerid, 911, DIALOG_STYLE_TABLIST_HEADERS, ""CBLUE"√ç√†√ß√¢√†√≠√®√ø √∞√†√≠√£√Æ√¢", string, "Cambio", "Cerrar");
}
CMD:ammoput(playerid) {
	if(!IsAMafia(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√î√≥√≠√™√∂√®√ø √§√Æ√±√≤√≥√Ø√≠√† √≤√Æ√´√º√™√Æ √¨√†√¥√®√ø√¨");
	if(!box_object[playerid]) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √ø√π√®√™√† √± √Ø√†√≤√∞√Æ√≠√†√¨√® √¢ √∞√≥√™√†√µ");
	if(!IsPlayerInRangeOfPoint(playerid, 3.0, 2606.9250,1303.7983,1051.6802)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √±√™√´√†S√≠ √±√¢√Æ√•√© √¨√†√¥√®√®");
	new vw_player = GetPlayerVirtualWorld(playerid);
	if(vw_player == 2 && pData[playerid][pMember] != 5) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √±√™√´√†S√≠ √±√¢√Æ√•√© √¨√†√¥√®√®");
	else if(vw_player == 5 && pData[playerid][pMember] != 14) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √±√™√´√†S√≠ √±√¢√Æ√•√© √¨√†√¥√®√®");
	else if(vw_player == 3 && pData[playerid][pMember] != 6) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √±√™√´√†S√≠ √±√¢√Æ√•√© √¨√†√¥√®√®");
	if((org_ammo[pData[playerid][pMember]] + 500) > 50000) return SCM(playerid, COLOR_GREY, "√ë√™√´√†√§ √ß√†√Ø√Æ√´√≠√•√≠");
	ApplyAnimation(playerid, "CARRY", "PUTDWN", 4.0, 0, 0, 0, 0, 0, 1);
	SetPlayerSpecialAction(playerid, 0);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
	org_ammo[pData[playerid][pMember]] += 500;
	update_mafia_store(pData[playerid][pMember]);
	format(string, 144, "UPDATE `materials_org` SET `count_ammo` = %d WHERE `id` = %d", org_ammo[pData[playerid][pMember]], pData[playerid][pMember]);
	mysql_tquery(mysql_Handle, string);
	box_object[playerid] = false;
	return SCM(playerid, COLOR_BLUE, "√Ç√ª √Ø√Æ√´√Æ√¶√®√´√® √ø√π√®√™ √≠√† √±√™√´√†√§ {00CC00}(+ 500 √Ø√†√≤√∞.)");
}
CMD:pt(playerid, params[]) {
	if(GetPVarInt(playerid, "PT_cooldown") > gettime()) return SCM(playerid, COLOR_LIGHTGREY, "√è√Æ√§√Æ√¶√§√®√≤√• √≠√•√±√™√Æ√´√º√™√Æ √±√•√™√≥√≠√§...");
	if(!IsACop(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √±√Æ√±√≤√Æ√®√≤√• √¢ √å√Ç√Ñ");
	if(!Megaphone(GetPlayerVehicleID(playerid))) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √±√´√≥√¶√•√°√≠√Æ√¨ √≤√∞√†√≠√±√Ø√Æ√∞√≤√•");
    new c1 = 0;
    string[0] = EOS;
    for(new w1 = 0; w1 < sizeof(MegaphoneSounds); w1 ++) {
        new tmp1[2][128];
        split(MegaphoneSounds[w1], tmp1, ',');
        if(c1 == 0) format(string, sizeof(string), "%s\n", tmp1[1]);
        if(c1 > 0) format(string, sizeof(string), "%s%s\n", string, tmp1[1]);
        c1 ++;
    }
    return SPD(playerid, 5554, DIALOG_STYLE_LIST, "{00bb00}√É√∞√Æ√¨√™√Æ√£√Æ√¢√Æ√∞√®√≤√•√´√º", string, "Seleccione", "Cerrar");
}
stock split(const strsrc[], strdest[][], delimiter)
{
	new i, li, len, n;
	while(i <= strlen(strsrc))
	{
		if(strsrc[i] == delimiter || i == strlen(strsrc))
		{
			len = strmid(strdest[n], strsrc, li, i, 128);
			strdest[n][len] = 0;
			li = i+1;
			n++;
		}
		i++;
	}
	return 1;
}
stock PlaySoundEx(soundid, Float:x, Float:y, Float:z, range) {
    foreach(new i:Player) {
	    if(!IsPlayerInRangeOfPoint(i, range, x, y, z)) continue;
	    PlayerPlaySound(i, soundid, 0, 0, 0);
    }
}
CMD:pturn(playerid, params[]) {
	new to_player, p_speed, Float: p_float;
	if(pData[playerid][pAdmin] < 7) return 1;
	if(sscanf(params, "ddf", to_player, p_speed, p_float)) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /pturn [id √®√£√∞√Æ√™√†] [√±√™√Æ√∞√Æ√±√≤√º √¢ √¨√± √®√´√® 0] [√∞√†√ß√¨√•√∞ √Ø√∞√Æ√¨√•√¶√≥√≤√™√† √®√´√® 0]");
	if(!IsPlayerConnected(to_player)) return SCM(playerid, COLOR_GREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(p_float == 0 && p_speed == 0) {
		if(!player_p_turned[to_player]) return SCM(playerid, COLOR_GREY, "√ê√•√¶√®√¨ √°√•√±√™√Æ√≠√•√∑√≠√Æ√£√Æ √¢√∞√†√π√•√≠√®√ø √Ω√≤√Æ√£√Æ √®√£√∞√Æ√™√† √≠√• √¢√™√´√æ√∑¬∏√≠");
		player_p_turned[to_player] = false;
		player_p_turned_angel[to_player] = 0.0;
		KillTimer(turn_timer[to_player]);
		return SCMF(playerid, COLOR_ERROR, "√ê√•√¶√®√¨ √°√•√±√™√Æ√≠√•√∑√≠√Æ√£√Æ √¢√∞√†√π√•√≠√®√ø %s √Æ√≤√™√´√æ√∑√•√≠", GetName(to_player));
	}
	if(p_speed < 50 || p_speed > 5000) return SCM(playerid, COLOR_GREY, "√Ç√¢√•√§√•√≠√† √≠√•√§√Æ√Ø√≥√±√≤√®√¨√†√ø √±√™√Æ√∞√Æ√±√≤√º. √Ñ√Æ√±√≤√≥√Ø√≠√Æ √Æ√≤ 50 √§√Æ 5000 √¨√±");
	if(p_float < 0.0 || p_float > 360.0) return SCM(playerid, COLOR_GREY, "√Ç√¢√•√§¬∏√≠ √≠√•√§√Æ√Ø√≥√±√≤√®√¨√ª√© √∞√†√ß√¨√•√∞ √Ø√∞√Æ√¨√•√¶√≥√≤√™√†");
	if(player_p_turned[to_player]) {
		SCM(playerid, COLOR_GREY, "√ê√•√¶√®√¨ √°√•√±√™√Æ√≠√•√∑√≠√Æ√£√Æ √¢√∞√†√π√•√≠√®√ø √Ω√≤√Æ√£√Æ √®√£√∞√Æ√™√† √≥√¶√• √¢√™√´√æ√∑¬∏√≠");
		return SCMF(playerid, COLOR_GREY, "Usar "CBLUE"/pturn %d 0 0 "CGREY"√§√´√ø √Æ√≤√™√´√æ√∑√•√≠√®√ø √∞√•√¶√®√¨√†", to_player);
	}
	turn_timer[to_player] = SetTimerEx("t_turn", p_speed, 1, "d", to_player);
	new Float: static_angle;
	GetPlayerFacingAngle(to_player, static_angle);
	SetPlayerFacingAngle(to_player, static_angle + p_float);
	player_p_turned[to_player] = true; 
	player_p_turned_angel[to_player] = p_float;
	if(IsPlayerInAnyVehicle(to_player)) {
		new veh_id = GetPlayerVehicleID(to_player);
		GetVehicleZAngle(veh_id, static_angle);
		SetVehicleZAngle(veh_id, static_angle + p_float);
	}
	return SCMF(playerid, COLOR_MAIN, "√ê√•√¶√®√¨ √°√•√±√™√Æ√≠√•√∑√≠√Æ√£√Æ √¢√∞√†√π√•√≠√®√ø %s √≥√±√Ø√•√∏√≠√Æ √¢√™√´√æ√∑¬∏√≠", GetName(to_player));
}
CB: t_turn(playerid) {
	if(!player_p_turned[playerid]) 
		return KillTimer(turn_timer[playerid]);
	new Float: static_angle;
	GetPlayerFacingAngle(playerid, static_angle);
	SetPlayerFacingAngle(playerid, static_angle + player_p_turned_angel[playerid]);
	if(IsPlayerInAnyVehicle(playerid)) {
		new veh_id = GetPlayerVehicleID(playerid);
		GetVehicleZAngle(veh_id, static_angle);
		SetVehicleZAngle(veh_id, static_angle + player_p_turned_angel[playerid]);
	}
	return 1;
}
CMD:prepair(playerid) {
	if(!IsPlayerInRangeOfPoint(playerid, 15.0, 1889.4867,-2640.4285,13.5469) && 
	   !IsPlayerInRangeOfPoint(playerid, 15.0, -1459.8622,-634.5694,14.1484) && 
	   !IsPlayerInRangeOfPoint(playerid, 15.0, 1609.4713,1646.1305,10.8203)) 
		return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √†√≠√£√†√∞√† √Æ√°√±√´√≥√¶√®√¢√†√≠√®√ø √¢√Æ√ß√§√≥√∏√≠√Æ√£√Æ √≤√∞√†√≠√±√Ø√Æ√∞√≤√†");
	new vehid = GetPlayerVehicleID(playerid);
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || !IsAPlane(vehid)) 
		return SCM(playerid, COLOR_GREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √ß√† √°√Æ√∞√≤√Æ√¨ √¢√Æ√ß√§√≥√∏√≠√Æ√£√Æ √≤√∞√†√≠√±√Ø√Æ√∞√≤√†");
	new Float: health;
	GetVehicleHealth(vehid, health);
	if(health > 990.0) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√†√∏ √≤√∞√†√≠√±√Ø√Æ√∞√≤ √≠√• √≠√≥√¶SNo√±√ø √¢ √∞√•√¨√Æ√≠√≤√•");
	SetVehicleHealth(vehid, 1000.0);
	GameTextForPlayer(playerid, "~b~plane repaired", 3000, 1);
	return SCM(playerid, COLOR_PALEGREEN, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √Æ√≤√∞√•√¨√Æ√≠√≤√®√∞√Æ√¢√†√≠");
}
CMD:prefill(playerid) {
	if(!IsPlayerInRangeOfPoint(playerid, 15.0, 1889.4867,-2640.4285,13.5469) && 
	   !IsPlayerInRangeOfPoint(playerid, 15.0, -1459.8622,-634.5694,14.1484) && 
	   !IsPlayerInRangeOfPoint(playerid, 15.0, 1609.4713,1646.1305,10.8203)) 
		return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √†√≠√£√†√∞√† √Æ√°√±√´√≥√¶√®√¢√†√≠√®√ø √¢√Æ√ß√§√≥√∏√≠√Æ√£√Æ √≤√∞√†√≠√±√Ø√Æ√∞√≤√†");
	new vehid = GetPlayerVehicleID(playerid);
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || !IsAPlane(vehid)) 
		return SCM(playerid, COLOR_GREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √ß√† √°√Æ√∞√≤√Æ√¨ √¢√Æ√ß√§√≥√∏√≠√Æ√£√Æ √≤√∞√†√≠√±√Ø√Æ√∞√≤√†");
	if(VehInfo[vehid][vFuel] > 40) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√†√∏ √≤√∞√†√≠√±√Ø√Æ√∞√≤ √≠√• √≠√≥√¶SNo√±√ø √¢ √ß√†√Ø√∞√†√¢√™√• √≤√Æ√Ø√´√®√¢√Æ√¨");
	VehInfo[vehid][vFuel] = 50;
	GameTextForPlayer(playerid, "~b~plane refueled", 3000, 1);
	return SCM(playerid, COLOR_PALEGREEN, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √ß√†√Ø√∞√†√¢√´√•√≠ √§√Æ 50 √´√®√≤√∞√Æ√¢ √≤√Æ√Ø√´√®√¢√†");
}
CMD:atune(playerid) {
	if(pData[playerid][pAdmin] < 3) return 1;
	if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¢ √≤√∞√†√≠√±√Ø√Æ√∞√≤√•");
	new veh_id = GetPlayerVehicleID(playerid);
	if(IsABoat(veh_id) || IsAPlane(veh_id) || IsABike(veh_id)) return SCM(playerid, COLOR_ERROR, "√ç√† √Ω√≤√Æ√≤ √≤√∞√†√≠√±√Ø√Æ√∞√≤ √≠√•√´√º√ß√ø √≥√±√≤√†√≠√Æ√¢√®√≤√º √≤√æ√≠√®√≠√£");
	AddVehicleComponent(veh_id, 1010);
	AddVehicleComponent(veh_id, 1086);
	AddVehicleComponent(veh_id, 1087);
	boost_veh_lvl[veh_id] = 10;
	braking_veh_lvl[veh_id] = 8;
	set_boost_by_adm[veh_id] = true;
	set_brake_by_adm[veh_id] = true;
	amg_mode[veh_id] = true;
	PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	return SCM(playerid, COLOR_BLUE, "√ç√† √Ω√≤√Æ√≤ √≤√∞√†√≠√±√Ø√Æ√∞√≤ √≥√±√Ø√•√∏√≠√Æ √≥√±√≤√†√≠√Æ√¢√´√•√≠ √¢√∞√•√¨√•√≠√≠√ª√© √≤√æ√≠√®√≠√£");
}
CMD:raterep(playerid, params[]) {
	if(pData[playerid][pAdmin] < 4) return 1;
	new adm_name[MAX_PLAYER_NAME];
	if(sscanf(params, "s[24]", adm_name)) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /raterep [√≠√®√™ √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√†]");
	string[0] = EOS;
	mysql_format(mysql_Handle, string, 128, "SELECT `name` FROM `admin` WHERE `name` = '%s'", adm_name);
	return mysql_tquery(mysql_Handle, string, "info_rate_stat", "is", playerid, adm_name);
}
CB: info_rate_stat(playerid, name_adm[]) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SCM(playerid, COLOR_LIGHTGREY, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ √± √≤√†√™√®√¨ √≠√®√™√Æ√¨ √≠√• √≠√†√©√§√•√≠");
	mysql_format(mysql_Handle, string, 128, "SELECT `adm_good_rate`, `adm_bad_rate` FROM `accounts` WHERE `Name` = '%s'", name_adm);
	return mysql_tquery(mysql_Handle, string, "show_rate_stat", "is", playerid, name_adm);
}
CB: show_rate_stat(playerid, name_adm[]) {
	new rows, good_rates, bad_rates;
	cache_get_row_count(rows);
	if(!rows) return SCM(playerid, COLOR_LIGHTGREY, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ √± √≤√†√™√®√¨ √≠√®√™√Æ√¨ √≠√• √≠√†√©√§√•√≠");
	cache_get_value_name_int(0, "adm_good_rate", good_rates);
	cache_get_value_name_int(0, "adm_bad_rate", bad_rates);
	format(string, 70, ""CWHITE"√é√≤√ß√ª√¢√Æ√¢:\n\n√ï√Æ√∞√Æ√∏√®√µ: "CMAIN"%d\n"CWHITE"√è√´√Æ√µ√®√µ: "CMAIN"%d", good_rates, bad_rates);
	SCMF(playerid, -1, "√Ç√ª √Ø√∞√Æ√±√¨√†√≤√∞√®√¢√†√•√≤√• √Æ√≤√ß√ª√¢√ª √Æ√° √Æ√≤√¢√•√≤√†√µ √≠√† √∞√•√Ø√Æ√∞√≤ √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√† %s", name_adm);
	return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, " ", string, "Cerrar", "");
}
stock get_orig_num_hotel(hotelid) {
	new orignum;
	switch(hotelid) {
		case 0: orignum = 201;
		case 1: orignum = 202;
		case 2: orignum = 203;
		case 3: orignum = 204;
		case 4: orignum = 205;
		case 5: orignum = 206;
		case 6: orignum = 207;
		case 7: orignum = 208;
		case 8: orignum = 209;
		case 9: orignum = 210;
		case 10: orignum = 211;
		case 11: orignum = 212;
		case 12: orignum = 301;
		case 13: orignum = 302;
		case 14: orignum = 303;
		case 15: orignum = 304;
		case 16: orignum = 305;
		case 17: orignum = 306;
		case 18: orignum = 307;
		case 19: orignum = 308;
		case 20: orignum = 309;
		case 21: orignum = 310;
		case 22: orignum = 311;
		case 23: orignum = 312;
		case 24: orignum = 401;
		case 25: orignum = 402;
		case 26: orignum = 403;
		case 27: orignum = 404;
		case 28: orignum = 405;
		case 29: orignum = 406;
		case 30: orignum = 407;
		case 31: orignum = 408;
		case 32: orignum = 409;
		case 33: orignum = 410;
		case 34: orignum = 411;
		case 35: orignum = 412;
	}
	return orignum;
}
CMD:mbuy(playerid, params[]) {
	if(!IsAArm(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√î√≥√≠√™√∂√®√ø √§√Æ√±√≤√≥√Ø√≠√† √≤√Æ√´√º√™√Æ √†√∞√¨√®√ø√¨");
	new met_numarmy = -1, met_query[90], metbuy_c, str_gmtmbuy[40], veh_id = GetPlayerVehicleID(playerid);
	if(veh_id != armcar[0] + 1 && veh_id != vvcveh[1] - 1 && veh_id != vmfcar[0] + 1) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √¨√•√≤√†√´√´√Æ√¢√Æ√ß√•");
	if(GetVehicleDistanceFromPoint(veh_id, -804.1, -1881.5, 11.7) >= 11.0) return SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √±√™√´√†S√≠ √¨√•√≤√†√´√´√† √≠√† √∏√†√µ√≤√•");
	if(sscanf(params, "d", metbuy_c)) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /mbuy [√™√Æ√´-√¢√Æ √™√£] (1 √™√£ - 15$)");
	if(metbuy_c < 1 || metbuy_c > 700) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§√•√≠√Æ √≠√•√¢√•√∞√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √™√®√´√Æ√£√∞√†√¨√¨ √¨√•√≤√†√´√´√†");
	new price_metbuy = metbuy_c * 15, str_str3d[60];
	if(veh_id == armcar[0] + 1) met_numarmy = 0;
	else if(veh_id == vvcveh[1] - 1) met_numarmy = 1;
	else if(veh_id == vmfcar[0] + 1) met_numarmy = 2;
	if(700 <= metarmy_count[met_numarmy]) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √≤√∞√†√≠√±√Ø√Æ√∞√≤√• √ß√†√£√∞√≥√¶√•√≠√Æ √¨√†√™√±√®√¨√†√´√º√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √¨√•√≤√†√´√´√†");
	if(700 < metarmy_count[met_numarmy] + metbuy_c) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √™√≥√Ø√®√≤√º √±√≤√Æ√´√º√™√Æ √™√®√´√Æ√£√∞√†√¨√¨ √¨√•√≤√†√´√´√†");
	if(met_numarmy == -1) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [063]");
	if(pData[playerid][pCash] < price_metbuy) return SCMF(playerid, COLOR_GREY, "√Ñ√´√ø √Ø√Æ√™√≥√Ø√™√® √≤√†√™√Æ√£√Æ √™√Æ√´√®√∑√•√±√≤√¢√† √¨√•√≤√†√´√´√† √≤√∞√•√°√≥√•√≤√±√ø "CPALEGREEN"%d$", price_metbuy);
	if(metbuy_c > storage_mine[StLowReady]/2) return SCM(playerid,COLOR_LIGHTGREY,"√ç√† √±√™√´√†√§√• No √±√≤√Æ√´√º√™√Æ √™√®√´√Æ√£√∞√†√¨√¨ √¨√•√≤√†√´√´√†");
	Hook_GivePlayerMoney(playerid, -price_metbuy);
	format(str_gmtmbuy, 40, "~r~-%d$", price_metbuy);
	GameTextForPlayer(playerid, str_gmtmbuy, 3000, 1);
	storage_mine[StLowReady] -= metbuy_c * 2;
	mysql_format(mysql_Handle, met_query, 90, "UPDATE `storages` SET `minelowready` = %d", storage_mine[StLowReady]);
	mysql_tquery(mysql_Handle, met_query); UpdateStorages(2);
	metarmy_count[met_numarmy] += metbuy_c;
	format(str_str3d, 60, "√Ñ√Æ√±√≤√†√¢√™√† √¨√•√≤√†√´√´√†\n"CORANGE"√á√†√£√∞√≥√¶√•√≠√Æ: "CERROR"%d √®√ß 700", metarmy_count[met_numarmy]);
	UpdateDynamic3DTextLabelText(metarmy_3d[met_numarmy], COLOR_LITEBLUE, str_str3d);
	PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
	SCMF(playerid, COLOR_BLUE, "√Ç√ª √™√≥√Ø√®√´√® "CPALEGREEN"%d √™√£ "CBLUE"√¨√•√≤√†√´√´√† √ß√† {FFCD00}%d$", metbuy_c, price_metbuy);
	return SCM(playerid, -1, "√é√≤√Ø√∞√†√¢√´√ø√©√≤√•√±√º √™ √±√™√´√†√§√≥ √¨√•√≤√†√´√´√† √≠√† √°√†√ß√• √® √∞√†√ß√£√∞√≥√ß√®√≤√•√±√º √®√±√Ø√Æ√´√º√ß√≥√ø {00cc99}/mput");
}
CMD:mput(playerid, params[]) {
	if(!IsAArm(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¢√Æ√•√≠√≠√ª√©");
	new str_rmp[100], met_c, str_met[90], query_mput[90], str_str3d[60], veh_id = GetPlayerVehicleID(playerid);
	if(veh_id == armcar[0] + 1 || veh_id == vvcveh[1] - 1 || veh_id == vmfcar[0] + 1) {
		new met_numarmy = -1;
		if(veh_id == armcar[0] + 1) met_numarmy = 0;
		else if(veh_id == vvcveh[1] - 1) met_numarmy = 1;
		else if(veh_id == vmfcar[0] + 1) met_numarmy = 2;
		if(GetVehicleDistanceFromPoint(veh_id, 144.7318, 1875.4525, 19.2959) < 8.0) {
			if(pData[playerid][pMember] != 19) return SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √±√™√´√†S√≠ √¨√•√≤√†√´√´√† √±√¢√Æ√•√£√Æ √Ø√Æ√§√∞√†√ß√§√•√´√•√≠√®√ø");
			if(sscanf(params, "d", met_c)) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /mput [√™√Æ√´-√¢√Æ √™√£]");
			if(met_c < 1) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√¢√•√∞√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ");
			if(met_numarmy == -1) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [064]");
			if(12000 <= metsv_count) return SCM(playerid, COLOR_LIGHTGREY, "√ë√™√´√†√§ √¨√•√≤√†√´√´√† √ß√†√Ø√Æ√´√≠√•√≠. √è√Æ√´√Æ√¶√®√≤√º √¨√•√≤√†√´√´ √≠√•√´√º√ß√ø");
			if(12000 < metsv_count + met_c) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √±√™√´√†√§ √≠√• √Ø√Æ√¨√•√±√≤√®√≤√±√ø √≤√†√™√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √¨√•√≤√†√´√´√†");
			if(metarmy_count[met_numarmy] < met_c) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √¨√•√≤√†√´√´√Æ√¢√Æ√ß√• No √±√≤√Æ√´√º√™√Æ √™√®√´√Æ√£√∞√†√¨√¨ √¨√•√≤√†√´√´√†");
			metsv_count += met_c;
			format(str_met, 90, "√ë√™√´√†√§ √¨√•√≤√†√´√´√†\n\n"CLITEBLUE"√ç√† √±√™√´√†√§√•: %d √™√£\n/mput - √Ø√Æ√´√Æ√¶√®√≤√º √¨√•√≤√†√´√´", metsv_count);
			UpdateDynamic3DTextLabelText(met3d_sv, 0x0066CCFF, str_met);
			mysql_format(mysql_Handle, query_mput, 90, "UPDATE `otherfuncs` SET `metsv_count` = %d", metsv_count);
			mysql_tquery(mysql_Handle, query_mput);
		}
		else if(GetVehicleDistanceFromPoint(veh_id, 402.2118, 2543.7114, 16.6796) < 8.0) {
			if(pData[playerid][pMember] != 20) return SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √±√™√´√†S√≠ √¨√•√≤√†√´√´√† √±√¢√Æ√•√£√Æ √Ø√Æ√§√∞√†√ß√§√•√´√•√≠√®√ø");
			if(sscanf(params, "d", met_c)) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /mput [√™√Æ√´-√¢√Æ √™√£]");
			if(met_c < 1) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√¢√•√∞√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ");
			if(met_numarmy == -1) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [065]");
			if(12000 <= metvvc_count) return SCM(playerid, COLOR_LIGHTGREY, "√ë√™√´√†√§ √¨√•√≤√†√´√´√† √ß√†√Ø√Æ√´√≠√•√≠. √è√Æ√´√Æ√¶√®√≤√º √¨√•√≤√†√´√´ √≠√•√´√º√ß√ø");
			if(12000 < metvvc_count + met_c) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √±√™√´√†√§ √≠√• √Ø√Æ√¨√•√±√≤√®√≤√±√ø √≤√†√™√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √¨√•√≤√†√´√´√†");
			if(metarmy_count[met_numarmy] < met_c) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √¨√•√≤√†√´√´√Æ√¢√Æ√ß√• No √±√≤√Æ√´√º√™√Æ √™√®√´√Æ√£√∞√†√¨√¨ √¨√•√≤√†√´√´√†");
			metvvc_count += met_c;
			format(str_met, 90, "√ë√™√´√†√§ √¨√•√≤√†√´√´√†\n\n"CLITEBLUE"√ç√† √±√™√´√†√§√•: %d √™√£\n/mput - √Ø√Æ√´√Æ√¶√®√≤√º √¨√•√≤√†√´√´", metvvc_count);
			UpdateDynamic3DTextLabelText(met3d_vvc, 0x0066CCFF, str_met);
			mysql_format(mysql_Handle, query_mput, 90, "UPDATE `otherfuncs` SET `metvvc_count` = %d", metvvc_count);
			mysql_tquery(mysql_Handle, query_mput);
		}
		else if(GetVehicleDistanceFromPoint(veh_id, -2183.6907, 2414.8186, 4.9868) < 8.0) {
			if(pData[playerid][pMember] != 27) return SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √±√™√´√†S√≠ √¨√•√≤√†√´√´√† √±√¢√Æ√•√£√Æ √Ø√Æ√§√∞√†√ß√§√•√´√•√≠√®√ø");
			if(sscanf(params, "d", met_c)) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /mput [√™√Æ√´-√¢√Æ √™√£]");
			if(met_c < 1) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√¢√•√∞√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ");
			if(met_numarmy == -1) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [066]");
			if(12000 <= metvmf_count) return SCM(playerid, COLOR_LIGHTGREY, "√ë√™√´√†√§ √¨√•√≤√†√´√´√† √ß√†√Ø√Æ√´√≠√•√≠. √è√Æ√´√Æ√¶√®√≤√º √¨√•√≤√†√´√´ √≠√•√´√º√ß√ø");
			if(12000 < metvmf_count + met_c) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √±√™√´√†√§ √≠√• √Ø√Æ√¨√•√±√≤√®√≤√±√ø √≤√†√™√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √¨√•√≤√†√´√´√†");
			if(metarmy_count[met_numarmy] < met_c) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √¨√•√≤√†√´√´√Æ√¢√Æ√ß√• No √±√≤√Æ√´√º√™√Æ √™√®√´√Æ√£√∞√†√¨√¨ √¨√•√≤√†√´√´√†");
			metvmf_count += met_c;
			format(str_met, 90, "√ë√™√´√†√§ √¨√•√≤√†√´√´√†\n\n"CLITEBLUE"√ç√† √±√™√´√†√§√•: %d √™√£\n/mput - √Ø√Æ√´√Æ√¶√®√≤√º √¨√•√≤√†√´√´", metvmf_count);
			UpdateDynamic3DTextLabelText(met3d_vmf, 0x0066CCFF, str_met);
			mysql_format(mysql_Handle, query_mput, 90, "UPDATE `otherfuncs` SET `metvmf_count` = %d", metvmf_count);
			mysql_tquery(mysql_Handle, query_mput);
		}
		else return SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √±√™√´√†S√≠ √¨√•√≤√†√´√´√† √±√¢√Æ√•√£√Æ √Ø√Æ√§√∞√†√ß√§√•√´√•√≠√®√ø");
		metarmy_count[met_numarmy] -= met_c;
		format(str_str3d, 60, "√Ñ√Æ√±√≤√†√¢√™√† √¨√•√≤√†√´√´√†\n"CORANGE"√á√†√£√∞√≥√¶√•√≠√Æ: "CERROR"%d √®√ß 700", metarmy_count[met_numarmy]);
		UpdateDynamic3DTextLabelText(metarmy_3d[met_numarmy], 0x0066CCFF, str_str3d);
		format(str_rmp, 100, "%s %s[%d] √¢√ª√£√∞√≥√ß√®√´ {40bf40}%d √™√£ "CLITEBLUE"√¨√•√≤√†√´√´√† √≠√† √±√™√´√†√§ √®√ß √¨√•√≤√†√´√´√Æ√¢√Æ√ß√†", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], GetName(playerid), playerid, met_c);
		return SFFM(pData[playerid][pMember], COLOR_LITEBLUE, str_rmp);
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0, 144.7318, 1875.4525, 19.2959)) {
		if(pData[playerid][pMember] != 19) return SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √±√™√´√†S√≠ √¨√•√≤√†√´√´√† √±√¢√Æ√•√£√Æ √Ø√Æ√§√∞√†√ß√§√•√´√•√≠√®√ø");
		if(sscanf(params, "d", met_c)) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /mput [√™√Æ√´-√¢√Æ √™√£]");
		if(met_c < 1) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√¢√•√∞√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ");
		if(pData[playerid][pMetal] < met_c) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √±√≤√Æ√´√º√™√Æ √™√®√´√Æ√£√∞√†√¨√¨ √¨√•√≤√†√´√´√†");
		if(12000 <= metsv_count) return SCM(playerid, COLOR_LIGHTGREY, "√ë√™√´√†√§ √¨√•√≤√†√´√´√† √ß√†√Ø√Æ√´√≠√•√≠. √è√Æ√´√Æ√¶√®√≤√º √¨√•√≤√†√´√´ √≠√•√´√º√ß√ø");
		if(12000 < metsv_count + met_c) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √±√™√´√†√§ √≠√• √Ø√Æ√¨√•√±√≤√®√≤√±√ø √≤√†√™√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √¨√•√≤√†√´√´√†");
		pData[playerid][pMetal] -= met_c; UpdatePlayerData(playerid, "pMats", pData[playerid][pMetal]);
		metsv_count += met_c;
		format(str_met, 90, "√ë√™√´√†√§ √¨√•√≤√†√´√´√†\n\n"CLITEBLUE"√ç√† √±√™√´√†√§√•: %d √™√£\n/mput - √Ø√Æ√´√Æ√¶√®√≤√º √¨√•√≤√†√´√´", metsv_count);
		UpdateDynamic3DTextLabelText(met3d_sv, 0x0066CCFF, str_met);
		mysql_format(mysql_Handle, query_mput, 90, "UPDATE `otherfuncs` SET `metsv_count` = %d", metsv_count);
		mysql_tquery(mysql_Handle, query_mput);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 5.0, 402.2118, 2543.7114, 16.6796)) {
		if(pData[playerid][pMember] != 20) return SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √±√™√´√†S√≠ √¨√•√≤√†√´√´√† √±√¢√Æ√•√£√Æ √Ø√Æ√§√∞√†√ß√§√•√´√•√≠√®√ø");
		if(sscanf(params, "d", met_c)) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /mput [√™√Æ√´-√¢√Æ √™√£]");
		if(met_c < 1) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√¢√•√∞√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ");
		if(pData[playerid][pMetal] < met_c) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √±√≤√Æ√´√º√™√Æ √™√®√´√Æ√£√∞√†√¨√¨ √¨√•√≤√†√´√´√†");
		pData[playerid][pMetal] -= met_c; UpdatePlayerData(playerid, "pMats", pData[playerid][pMetal]);
		if(12000 < metvvc_count + met_c) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √±√™√´√†√§ √≠√• √Ø√Æ√¨√•√±√≤√®√≤√±√ø √≤√†√™√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √¨√•√≤√†√´√´√†");
		if(12000 < metvvc_count) return SCM(playerid, COLOR_LIGHTGREY, "√ë√™√´√†√§ √¨√•√≤√†√´√´√† √ß√†√Ø√Æ√´√≠√•√≠. √è√Æ√´√Æ√¶√®√≤√º √¨√•√≤√†√´√´ √≠√•√´√º√ß√ø");
		metvvc_count += met_c;
		format(str_met, 90, "√ë√™√´√†√§ √¨√•√≤√†√´√´√†\n\n"CLITEBLUE"√ç√† √±√™√´√†√§√•: %d √™√£\n/mput - √Ø√Æ√´√Æ√¶√®√≤√º √¨√•√≤√†√´√´", metvvc_count);
		UpdateDynamic3DTextLabelText(met3d_vvc, 0x0066CCFF, str_met);
		mysql_format(mysql_Handle, query_mput, 90, "UPDATE `otherfuncs` SET `metvvc_count` = %d", metvvc_count);
		mysql_tquery(mysql_Handle, query_mput);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 5.0, -2183.6907, 2414.8186, 4.9868)) {
		if(pData[playerid][pMember] != 27) return SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √±√™√´√†S√≠ √¨√•√≤√†√´√´√† √±√¢√Æ√•√£√Æ √Ø√Æ√§√∞√†√ß√§√•√´√•√≠√®√ø");
		if(sscanf(params, "d", met_c)) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /mput [√™√Æ√´-√¢√Æ √™√£]");
		if(met_c < 1) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√¢√•√∞√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ");
		if(pData[playerid][pMetal] < met_c) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √±√≤√Æ√´√º√™√Æ √™√®√´√Æ√£√∞√†√¨√¨ √¨√•√≤√†√´√´√†");
		if(12000 < metvmf_count + met_c) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √±√™√´√†√§ √≠√• √Ø√Æ√¨√•√±√≤√®√≤√±√ø √≤√†√™√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √¨√•√≤√†√´√´√†");
		if(12000 < metvmf_count) return SCM(playerid, COLOR_LIGHTGREY, "√ë√™√´√†√§ √¨√•√≤√†√´√´√† √ß√†√Ø√Æ√´√≠√•√≠. √è√Æ√´√Æ√¶√®√≤√º √¨√•√≤√†√´√´ √≠√•√´√º√ß√ø");
		pData[playerid][pMetal] -= met_c; UpdatePlayerData(playerid, "pMats", pData[playerid][pMetal]);
		metvmf_count += met_c;
		format(str_met, 90, "√ë√™√´√†√§ √¨√•√≤√†√´√´√†\n\n"CLITEBLUE"√ç√† √±√™√´√†√§√•: %d √™√£\n/mput - √Ø√Æ√´√Æ√¶√®√≤√º √¨√•√≤√†√´√´", metvmf_count);
		UpdateDynamic3DTextLabelText(met3d_vmf, 0x0066CCFF, str_met);
		mysql_format(mysql_Handle, query_mput, 90, "UPDATE `otherfuncs` SET `metvmf_count` = %d", metvmf_count);
		mysql_tquery(mysql_Handle, query_mput);
	}
	else return SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √±√™√´√†S√≠ √¨√•√≤√†√´√´√† √±√¢√Æ√•√£√Æ √Ø√Æ√§√∞√†√ß√§√•√´√•√≠√®√ø");
	format(str_rmp, 100, "%s %s[%d] √Ø√Æ√´√Æ√¶√®√´ {40bf40}%d √™√£ "CLITEBLUE"√¨√•√≤√†√´√´√† √≠√† √±√™√´√†√§", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], GetName(playerid), playerid, met_c);
	return SFFM(pData[playerid][pMember], COLOR_LITEBLUE, str_rmp);
}
CMD:multiply(playerid) {
	if(pData[playerid][pAdmin] < 7) return 1;
	return SPD(playerid, 479, DIALOG_STYLE_LIST, "{99cc33}√Ä√™√∂√®√® X-", "√é√Ø√ª√≤\n√Ñ√Æ√≠√†√≤", "Seleccione", "Cerrar");
}
stock show_dialog_exppan(playerid) {
	new multiply_exp1[8], multiply_exp2[8], multiply_exp3[8];
	switch(multiply_exp) {
		case 1: { multiply_exp1 = "009900"; multiply_exp2 = "ffffff"; multiply_exp3 = "ffffff"; }
		case 2: { multiply_exp1 = "ffffff"; multiply_exp2 = "009900"; multiply_exp3 = "ffffff"; }
		case 3: { multiply_exp1 = "ffffff"; multiply_exp2 = "ffffff"; multiply_exp3 = "009900"; }
	}
	format(string, 80, "{%s}√Å√•√ß √†√™√∂√®√®\n{%s}x2\n{%s}x3", multiply_exp1, multiply_exp2, multiply_exp3);
	SPD(playerid, 841, DIALOG_STYLE_LIST, "{99cc33}√Ä√™√∂√®√® X- | √é√Ø√ª√≤", string, "√Ç√™√´√æ√∑√®√≤√º", "Siguiente");
}
stock show_dialog_donpan(playerid) {
	new multiply_don1[8], multiply_don2[8], multiply_don3[8];
	switch(multiply_don) {
		case 1: { multiply_don1 = "009900"; multiply_don2 = "ffffff"; multiply_don3 = "ffffff"; }
		case 2: { multiply_don1 = "ffffff"; multiply_don2 = "009900"; multiply_don3 = "ffffff"; }
		case 3: { multiply_don1 = "ffffff"; multiply_don2 = "ffffff"; multiply_don3 = "009900"; }
	}
	format(string, 80, "{%s}√Å√•√ß √†√™√∂√®√®\n{%s}x2\n{%s}x3", multiply_don1, multiply_don2, multiply_don3);
	SPD(playerid, 842, DIALOG_STYLE_LIST, "{99cc33}√Ä√™√∂√®√® X- | √Ñ√Æ√≠√†√≤", string, "√Ç√™√´√æ√∑√®√≤√º", "Siguiente");
}
CMD:blow(playerid) {
	if(blow_num[playerid] < 1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √Ø√®√∞√Æ√≤√•√µ√≠√®√∑√•√±√™√®√µ √®√ß√§√•√´√®√©");
	if(GetPlayerInterior(playerid) != 0) return SCM(playerid, COLOR_GREY, "√á√†√Ø√≥√±√™ √Ø√®√∞√Æ√≤√•√µ√≠√®√™√® √¢ √ßS√≠√≠√®√ø√µ √ß√†√Ø√∞√•√π¬∏√≠");
	if(GetPVarInt(playerid, "blowdelay") > gettime()) 
		return SCM(playerid, COLOR_LIGHTGREY, "√è√Æ√¶√†√´√≥√©√±√≤√†, √Ø√Æ√§√Æ√¶√§√®√≤√•...");

	ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0);
	new Float: x, Float: y, Float: z;
	GetPlayerPos(playerid, x, y, z);
	blow_num[playerid] --;
	SetPVarInt(playerid,"blowdelay",gettime() + 20);
	switch(GetPVarInt(playerid, "pType")) {
		case 1: // √∏√≥√¨√Æ√¢√ª√• √Ø√•√≤√†√∞√§√ª
		{
			blow_object[playerid][0] = CreateObject(18717, x, y, z - 2.6, 0, 0, 0);
			SetTimerEx("dimstart", 6000, 0, "d", playerid);
		}
		case 2: // √±√¢√•√≤√Æ√¢√ª√• √Ø√•√≤√†√∞√§√ª
		{
			blow_object[playerid][0] = CreateObject(18717, x, y, z - 2.6, 0, 0, 0);
			SetTimerEx("svetstart", 6000, 0, "d", playerid);
		}
		case 3: // √§√ª√¨√Æ√¢√†√ø √∏√†√∏√™√†
		{
			blow_object[playerid][0] = CreateObject(18728, x, y, z - 2, 0, 0, 0);
			SetTimerEx("destroyFlare", 10000, 0, "d", playerid);
		}
		case 4: // √Æ√§√®√≠√Æ√∑√≠√†√ø √∞√†√™√•√≤√†
		{
			new obj;
			switch(GetPVarInt(playerid, "PColor"))
			{
				case 1: obj = 1215;
				case 2: obj = 19122;
				case 3: obj = 19123;
				case 4: obj = 19124;
				case 5: obj = 19125;
				case 6: obj = 19126;
				case 7: obj = 19127;
			}
			blow_object[playerid][0] = CreateObject(obj, x, y, z-0.5, 0, 0, 0);
			SetTimerEx("startone", 6000, 0, "d", playerid);
		}
		case 5: // √≤√∞√Æ√©√≠√†√ø √∞√†√™√•√≤√†
		{
			new obj;
			switch(GetPVarInt(playerid, "PColor"))
			{
				case 1: obj = 1215;
				case 2: obj = 19122;
				case 3: obj = 19123;
				case 4: obj = 19124;
				case 5: obj = 19125;
				case 6: obj = 19126;
				case 7: obj = 19127;
			}
			blow_object[playerid][0] = CreateObject(obj, x, y, z-0.5, 0, 0, 0);
			blow_object[playerid][1] = CreateObject(obj, x+1, y, z-0.5, 0, 0, 0);
			blow_object[playerid][2] = CreateObject(obj, x-1, y, z-0.5, 0, 0, 0);
			SetTimerEx("startthree", 6000, 0, "d", playerid);
		}
		case 6: // √Ø√∞√Æ√¥√•√±√±√®√Æ√≠√†√´√º√≠√ª√© √±√†√´√æ√≤
		{
			new id;
			id = FindSalut();
			SALUTEINFOS[id][SalutePos][0] = x+1.5;
			SALUTEINFOS[id][SalutePos][1] = y;
			SALUTEINFOS[id][SalutePos][2] = z;
			SALUTEINFOS[id][Salute] = 350;
			SALUTEINFOS[id][SaluteUse] = true;
			SALUTEINFOS[id][SaluteBox] = CreateDynamicObject(964,x+1.5,y,z-1,0.0,0.0,0.0);
			SALUTEINFOS[id][SaluteTimer] = SetTimerEx("SaluteMachineTimer",floatround((400 + random(300)) * 0.26),false,"ii",id,playerid);
		}
	}
	return Streamer_Update(playerid);
}
CMD:salut(playerid)
{
	if(pData[playerid][pAdmin] < 6)
		return 1;
	if(GetPlayerInterior(playerid) != 0) return SCM(playerid, COLOR_GREY, "√á√†√Ø√≥√±√™ √Ø√®√∞√Æ√≤√•√µ√≠√®√™√® √¢ √ßS√≠√≠√®√ø√µ √ß√†√Ø√∞√•√π¬∏√≠");
	if(GetPVarInt(playerid, "blowdelay") > gettime()) 
		return SCM(playerid, COLOR_LIGHTGREY, "√è√Æ√¶√†√´√≥√©√±√≤√†, √Ø√Æ√§√Æ√¶√§√®√≤√•...");

	new Float:x, Float:y, Float:z,id;
	id = FindSalut();
	GetPlayerPos(playerid,x,y,z);
	SALUTEINFOS[id][SalutePos][0] = x+1.5;
	SALUTEINFOS[id][SalutePos][1] = y;
	SALUTEINFOS[id][SalutePos][2] = z;
	SALUTEINFOS[id][Salute] = 350;
	SALUTEINFOS[id][SaluteUse] = true;
	SALUTEINFOS[id][SaluteBox] = CreateDynamicObject(964,x+1.5,y,z-1,0.0,0.0,0.0);
	SALUTEINFOS[id][SaluteTimer] = SetTimerEx("SaluteMachineTimer",floatround((400 + random(300)) * 0.26),false,"ii",id,playerid);
	ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0);
	SCM(playerid, -1, "√ë√Æ√¢√•√≤: √¢√Æ √®√ß√°√•√¶√†√≠√®√• √´√†√£√Æ√¢, √≠√• √ß√†√Ø√≥√±√™√†√©√≤√• √≠√•√±√™√Æ√´√º√™√Æ √±√†√´√æ√≤√Æ√¢ √Æ√§√≠√Æ√¢√∞√•√¨√•√≠√≠√Æ");
	return Streamer_Update(playerid);
}
stock CreateSalut(Float:x,Float:y,Float:z)
{
	new sal = CheckSalut();
	if(sal == -1) return 0;
	Salut[sal][SaluteObject] = CreateDynamicObject(SaluteColorTypes[random(sizeof(SaluteColorTypes))],x,y,z,0.0,0.0,0.0);
	Salut[sal][SaluteInUse] = true;
	Salut[sal][SaluteStatus] = 1;
	GetXYInFrontOfPosition(x,y,random(360),18);
	MoveDynamicObject(Salut[sal][SaluteObject],x,y,z+45,30);

	return 1;
}
stock CheckSalut()
{
	for(new i = 0; i < MAX_SALUTE; i++) if(!Salut[i][SaluteInUse]) return i;
	return -1;
}
stock DestroySalut(id)
{
	DestroyDynamicObject(Salut[id][SaluteObject]);
	Salut[id][SaluteInUse] = false;
}
stock SaluteOnObjectMovedEx(objectid)
{
	for(new id = 0; id < MAX_SALUTE; id++)
	{
		if(Salut[id][SaluteObject] == objectid)
		{
			switch(Salut[id][SaluteStatus])
			{
			case 1..4:
				{
					new Float:x, Float:y, Float:z;
					GetDynamicObjectPos(objectid,x,y,z);
					GetXYInFrontOfPosition(x,y,Salut[id][SaluteLeanDir],Salut[id][SaluteWindOffset] / 5);
					z += Salut[id][height] / 5;
					Salut[id][SaluteStatus]++;
					MoveDynamicObject(Salut[id][SaluteObject],x,y,z,Salut[id][SaluteClimeSpeed]);
					GetDynamicObjectPos(objectid,x,y,z);
					CreateExplosion(x,y,z,Salut[id][SaluteExplType],Salut[id][SaluteExplSize]);
					DestroySalut(id);
				}
			}
		}
	}
	return 1;
}
stock GetXYInFrontOfPosition(&Float:x, &Float:y, Float:a, Float:distance)
{
	x += (distance * floatsin(-a, degrees));
	y += (distance * floatcos(-a, degrees));
}
stock FindSalut()
{
	for (new i=0;i<sizeof(SALUTEINFOS);i++) if (!SALUTEINFOS[i][SaluteUse]) return i;
	return -1;
}
CB: SaluteMachineTimer(id,playerid)
{
	if(SALUTEINFOS[id][Salute])
	{
		CreateSalut(SALUTEINFOS[id][SalutePos][0]+random(3),SALUTEINFOS[id][SalutePos][1],SALUTEINFOS[id][SalutePos][2]);
		CreateSalut(SALUTEINFOS[id][SalutePos][0],SALUTEINFOS[id][SalutePos][1]+random(3),SALUTEINFOS[id][SalutePos][2]);
		CreateSalut(SALUTEINFOS[id][SalutePos][0]+random(3),SALUTEINFOS[id][SalutePos][1],SALUTEINFOS[id][SalutePos][2]);
		CreateSalut(SALUTEINFOS[id][SalutePos][0],SALUTEINFOS[id][SalutePos][1]+random(3),SALUTEINFOS[id][SalutePos][2]);
		CreateSalut(SALUTEINFOS[id][SalutePos][0]+random(3),SALUTEINFOS[id][SalutePos][1],SALUTEINFOS[id][SalutePos][2]);
		CreateSalut(SALUTEINFOS[id][SalutePos][0],SALUTEINFOS[id][SalutePos][1]+random(3),SALUTEINFOS[id][SalutePos][2]);
		CreateSalut(SALUTEINFOS[id][SalutePos][0]+random(3),SALUTEINFOS[id][SalutePos][1],SALUTEINFOS[id][SalutePos][2]);
		CreateSalut(SALUTEINFOS[id][SalutePos][0],SALUTEINFOS[id][SalutePos][1]+random(3),SALUTEINFOS[id][SalutePos][2]);
		SALUTEINFOS[id][Salute]--;
		Streamer_Update(playerid, STREAMER_TYPE_OBJECT);
		SALUTEINFOS[id][SaluteTimer] = SetTimerEx("SaluteMachineTimer",floatround((400 + random(300)) * 0.26),false,"ii",id,playerid);
	}
	else
	{
		KillTimer(SALUTEINFOS[id][SaluteTimer]);
		SALUTEINFOS[id][SaluteTimer] = -1;
		SALUTEINFOS[id][SaluteUse] = false;
		DestroyDynamicObject(SALUTEINFOS[id][SaluteBox]);
	}
}
CB: svetstart(playerid) {
	new Float: simx, Float: simy, Float: simz;
	GetObjectPos(blow_object[playerid][0], simx, simy, simz);
	DestroyObject(blow_object[playerid][0]);
	blow_object[playerid][0] = CreateObject(354, simx, simy, simz + 2, 0, 0, 0);
	SetTimerEx("destroyFlare", 15000, 0, "d", playerid);
}
CB: dimstart(playerid) {
	new Float: dimx, Float: dimy, Float: dimz;
	GetObjectPos(blow_object[playerid][0], dimx, dimy, dimz);
	DestroyObject(blow_object[playerid][0]);
	blow_object[playerid][0] = CreateObject(18715, dimx, dimy, dimz + 2, 0, 0, 0);
	SetTimerEx("destroyFlare", 500, 0, "d", playerid);
	new Float: X, Float: Y, Float: Z;
	GetObjectPos(blow_object[playerid][0], X, Y, Z);
	foreach(new i:Player) {
		if(!IsPlayerInRangeOfPoint(i, 20.0, X, Y, Z)) continue;
		PlayerPlaySound(i, 1141, X, Y, Z);
	}
}

CB: startthree(playerid)
{
	new Float: objx, Float: objy, Float: objz;

	new t_spark[3], t_dim[3];

	for(new i = 0; i < 3; i++)
	{
		GetObjectPos(blow_object[playerid][i], objx, objy, objz);
		MoveObject(blow_object[playerid][i], objx, objy, objz + 13, 10);
		t_spark[i] = CreateObject(18718, objx, objy, objz, 0, 0, 0);
		t_dim[i] = CreateObject(18715, objx, objy, objz, 0, 0, 0);
		AttachObjectToObject(t_spark[i], blow_object[playerid][i], 0, 0, -1, 0, 0, 0, 0);
		AttachObjectToObject(t_dim[i], blow_object[playerid][i], 0, 0, 0, 0, 0, 0, 0);
	}

	SetTimerEx("startthreex", 1200, 0, "ddddddd", playerid, t_spark[0], t_dim[0], t_spark[1], t_dim[1], t_spark[2], t_dim[2]);
}

CB: startthreex(playerid, spark1, spark2, spark3, dim1, dim2, dim3)
{
	new Float: oobjx, Float: oobjy, Float: oobjz;

	GetObjectPos(blow_object[playerid][0], oobjx, oobjy, oobjz);
	CreateExplosion(oobjx, oobjy, oobjz, 0, 5);
	DestroyObject(blow_object[playerid][0]);
	DestroyObject(spark1);
	DestroyObject(dim1);

	GetObjectPos(blow_object[playerid][1], oobjx, oobjy, oobjz);
	CreateExplosion(oobjx, oobjy, oobjz, 0, 5);
	DestroyObject(blow_object[playerid][1]);
	DestroyObject(spark2);
	DestroyObject(dim2);

	GetObjectPos(blow_object[playerid][2], oobjx, oobjy, oobjz);
	CreateExplosion(oobjx, oobjy, oobjz, 0, 5);
	DestroyObject(blow_object[playerid][2]);
	DestroyObject(spark3);
	DestroyObject(dim3);
}

CB: startone(playerid) {
	new Float: objx, Float: objy, Float: objz;

	new spark, dim;

	GetObjectPos(blow_object[playerid][0], objx, objy, objz);
	MoveObject(blow_object[playerid][0], objx, objy, objz + 13, 10);
	spark = CreateObject(18718, objx, objy, objz, 0, 0, 0);
	dim = CreateObject(18715, objx, objy, objz, 0, 0, 0);
	AttachObjectToObject(spark, blow_object[playerid][0], 0, 0, -1, 0, 0, 0, 0);
	AttachObjectToObject(dim, blow_object[playerid][0], 0, 0, 0, 0, 0, 0, 0);
	SetTimerEx("startonex", 1200, 0, "ddd", playerid, spark, dim);
}

CB: startonex(playerid, spark, dim) {
	new Float: oobjx, Float: oobjy, Float: oobjz;
	GetObjectPos(blow_object[playerid][0], oobjx, oobjy, oobjz);
	CreateExplosion(oobjx, oobjy, oobjz, 0, 5);
	DestroyObject(blow_object[playerid][0]);
	DestroyObject(spark);
	DestroyObject(dim);
}
CB: destroyFlare(playerid) DestroyObject(blow_object[playerid][0]);
CMD:buybiz(playerid) {
	if(pData[playerid][unikauto_Have] != 0 || pData[playerid][autoHave] != 0 || pData[playerid][pBusiness] != -1 || pData[playerid][pFilling] != -1 || pData[playerid][food_have] != 0 || pData[playerid][prok_have] != 0 || pData[playerid][kiosk_have] != 0) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≥√¶√• √•√±√≤√º √°√®√ß√≠√•√± √®√´√® √Ä√á√ë");
	if(IsPlayerInRangeOfPoint(playerid, 6.0, 2146.1821,-2291.7102,14.7500)) return SPD(playerid, 3952, DIALOG_STYLE_MSGBOX, "{ffd770}√è√Æ√™√≥√Ø√™√† √°√®√ß√≠√•√±√†", ""CWHITE"√ç√†√ß√¢√†√≠√®√•:\t\t{009900}√Ä√¢√≤√Æ√¨√Æ√°√®√´√º√≠√†√ø √¥√†√°√∞√®√™√†\n"CWHITE"√ë√≤√Æ√®√¨√Æ√±√≤√º:\t\t{009900}13000000$\n\n{ccff66}√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √™√≥√Ø√®√≤√º √Ω√≤√Æ√≤ √°√®√ß√≠√•√±?", "S√≠", "No");
	if(IsPlayerInRangeOfPoint(playerid, 6.0, 1146.06201, -1755.98499, 15.11)) return SPD(playerid, 3514, DIALOG_STYLE_MSGBOX, "{ffd770}√è√Æ√™√≥√Ø√™√† √°√®√ß√≠√•√±√†", ""CWHITE"√ç√†√ß√¢√†√≠√®√•:\t\t{009900}√ã√†√∞√•√™ √± √•√§√Æ√©\n"CWHITE"√ë√≤√Æ√®√¨√Æ√±√≤√º:\t\t{009900}350000$\n\n{ccff66}√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √™√≥√Ø√®√≤√º √Ω√≤√Æ√≤ √°√®√ß√≠√•√±?", "S√≠", "No");
	if(IsPlayerInRangeOfPoint(playerid, 6.0, 1771.739990, -1903.270020, 14.21)) return SPD(playerid, 3517, DIALOG_STYLE_MSGBOX, "{ffd770}√è√Æ√™√≥√Ø√™√† √°√®√ß√≠√•√±√†", ""CWHITE"√ç√†√ß√¢√†√≠√®√•:\t\t{009900}√ã√†√∞√•√™ √± √•√§√Æ√©\n"CWHITE"√ë√≤√Æ√®√¨√Æ√±√≤√º:\t\t{009900}350000$\n\n{ccff66}√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √™√≥√Ø√®√≤√º √Ω√≤√Æ√≤ √°√®√ß√≠√•√±?", "S√≠", "No");
	new bool: status_biz, str_buyb[200];
	for(new i = 1; i != BIZES + 1; i ++) {
		if(!IsPlayerInRangeOfPoint( playerid, 6.0, BizInfo[ i ][EnterBiz][0], BizInfo[ i ][EnterBiz][1], BizInfo[ i ][EnterBiz][2] ) ) continue;
		status_biz = true;
		SetPVarInt(playerid, "buybiz_id", i);
		format(str_buyb, sizeof(str_buyb), ""CWHITE"√ç√Æ√¨√•√∞:\t\t\t{FFCD00}%d\n"CWHITE"√ç√†√ß√¢√†√≠√®√•:\t\t{009900}%s\n"CWHITE"√ë√≤√Æ√®√¨√Æ√±√≤√º:\t\t{009900}%d$\n\n{ccff66}√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √™√≥√Ø√®√≤√º √Ω√≤√Æ√≤ √°√®√ß√≠√•√±?", BizInfo[i][bID], BizInfo[i][bName], BizInfo[i][bPrice]);
		SPD(playerid, 692, DIALOG_STYLE_MSGBOX, "{ffd770}√è√Æ√™√≥√Ø√™√† √°√®√ß√≠√•√±√†", str_buyb, "S√≠", "No");
		break;
	}
	if(!status_biz) SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √°√®√ß√≠√•√±√†, √™√Æ√≤√Æ√∞√ª√© √µ√Æ√≤√®√≤√• √™√≥√Ø√®√≤√º");
	return 1;
}
CMD:buydrugs(playerid, params[]) {
	if(!IsAGang(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √±√Æ√±√≤√Æ√®√≤√• √¢ √°√†√≠√§√•");
	if(!IsPlayerInRangeOfPoint(playerid, 3.0, 1048.7194, 2910.1699, 47.8231)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √≠√†√∞√™√Æ√ß√†√¢√ÆS√≠");
	new drugs_count; if(sscanf(params, "d", drugs_count)) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /buydrugs [√™√Æ√´-√¢√Æ √£√∞√†√¨√¨]");
	if(drugs_count < 1) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§√•√≠√Æ √≠√•√¢√•√∞√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √£√∞√†√¨√¨");
	if(drugs_factorygang < drugs_count) return SCM(playerid, COLOR_GREY, "√ç√† √≠√†√∞√™√Æ√ß√†√¢√Æ√§√• No √±√≤√Æ√´√º√™√Æ √≠√†√∞√™√Æ√≤√®√™√Æ√¢");
	if(!pData[playerid][p_premium] && pData[playerid][pDrugs] >= 1000) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √± √±√Æ√°√Æ√© √¨√†√™√±√®√¨√†√´√º√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √≠√†√∞√™√Æ√≤√®√™√Æ√¢");
	if(pData[playerid][p_premium] && pData[playerid][pDrugs] >= 2000) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √± √±√Æ√°√Æ√© √¨√†√™√±√®√¨√†√´√º√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √≠√†√∞√™√Æ√≤√®√™√Æ√¢");
	if(!pData[playerid][p_premium] && pData[playerid][pDrugs] + drugs_count > 1000) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √±√¨√Æ√¶√•√≤√• √≥√≠√•√±√≤√® √± √±√Æ√°√Æ√© √±√≤√Æ√´√º√™√Æ √≠√†√∞√™√Æ√≤√®√™√Æ√¢");
	if(pData[playerid][p_premium] && pData[playerid][pDrugs] + drugs_count > 2000) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √±√¨√Æ√¶√•√≤√• √≥√≠√•√±√≤√® √± √±√Æ√°√Æ√© √±√≤√Æ√´√º√™√Æ √≠√†√∞√™√Æ√≤√®√™√Æ√¢");
	new price_drugs = drugs_count * 25, str_drdialog[160];
	if(pData[playerid][pCash] < price_drugs) return SCMF(playerid, COLOR_LIGHTGREY, "√Ñ√´√ø √Ø√Æ√™√≥√Ø√™√® √≤√†√™√Æ√£√Æ √™√Æ√´√®√∑√•√±√≤√¢√† √≠√†√∞√™√Æ√≤√®√™√Æ√¢ √≤√∞√•√°√≥√•√≤√±√ø %d$", price_drugs);
	SetPVarInt(playerid, "drugs_count_PP", drugs_count); SetPVarInt(playerid, "drugs_price_PP", price_drugs);
	format(str_drdialog, 160, ""CWHITE"√è√Æ√™√≥√Ø√™√† {99bbff}%d √£ "CWHITE"√≠√†√∞√™√Æ√≤√®√™√Æ√¢ √Æ√°√Æ√©√§¬∏√≤√±√ø √Ç√†√¨ √¢ {00cc00}%d$"CWHITE".\n√Ç√ª √¶√•√´√†√•√≤√• √±√Æ√¢√•√∞√∏√®√≤√º √Ø√Æ√™√≥√Ø√™√≥?", drugs_count, price_drugs);
	return SPD(playerid, 9484, DIALOG_STYLE_MSGBOX, ""CMAIN"√ç√†√∞√™√Æ√ß√†√¢√Æ√§", str_drdialog, "S√≠", "No");
}
CMD:brleave(playerid) {
	if(!bloody_en[playerid]) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √ß√†√∞√•√£√®√±√≤√∞√®√∞√Æ√¢√†√≠√ª √¢ √®√£√∞√• {cc3344}¬´√ä√∞√Æ√¢√†√¢√Æ√• √™√Æ√´√º√∂√Æ¬ª");
	return SPD(playerid, 494, DIALOG_STYLE_MSGBOX, ""CORANGE"√è√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√•", ""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √Ø√Æ√™√®√≠√≥√≤√º √®√£√∞√≥?\n{dddd70}√è√∞√®√¨√•√∑√†√≠√®√•: √±√≥√¨√¨√† √Ç√†√∏√•√© √±√≤√†√¢√™√® √¢√Æ√ß√¢√∞√†√π√•√≠√† √≠√• √°√≥√§√•√≤", "S√≠", "No");
}
CMD:gskill(playerid, params[]) {
	if(IsAFull(playerid)) {
		new pl_id, num_gun, procent_st;
		if(sscanf(params, "ddd", pl_id, num_gun, procent_st)) {
			SCM(playerid, COLOR_LIGHTGREY, "Usar: /gskill [id √®√£√∞√Æ√™√†] [√≠√Æ√¨√•√∞ √Æ√∞√≥√¶√®√ø √®√ß √±√Ø√®√±√™√†] [√™√Æ√´-√¢√Æ √Ø√∞√Æ√∂√•√≠√≤√Æ√¢]");
			SCM(playerid, 0xBFBB41FF, "[1] Colt 45 [2] SD Pistol [3] Desert Eagle [4] Shotgun [5] MP5");
			SCM(playerid, 0xBFBB41FF, "[6] AK47 [7] M4 [8] Sniper Rifle [9] Sawnoff [10] Combat SG");
			return SCM(playerid, 0xBFBB41FF, "[11] Micro UZI");
		}
		if(!IsPlayerConnected(pl_id)) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
		if(num_gun < 1 || num_gun > 11) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§¬∏√≠ √≠√•√¢√•√∞√≠√ª√© √≠√Æ√¨√•√∞ √Æ√∞√≥√¶√®√ø. √Ñ√Æ√±√≤√≥√Ø√≠√Æ √Æ√≤ 1 √§√Æ 11");
		if(procent_st < 0 || procent_st > 100) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§√•√≠√Æ √≠√•√¢√•√∞√≠√Æ√• √™√Æ√´-√¢√Æ √Ø√∞√Æ√∂√•√≠√≤√Æ√¢. √Ñ√Æ√±√≤√≥√Ø√≠√Æ √Æ√≤ 0 √§√Æ 100");
		new id_var = num_gun - 1, gun_name[13];
		pData[pl_id][pSkill][id_var] = procent_st;
		switch(id_var) {
			case 0: {
				gun_name = "Colt 45";
				UpdatePlayerData(pl_id, "COLT45", pData[pl_id][pSkill][id_var]);
			}
			case 1: {
				gun_name = "SD Pistol";
				UpdatePlayerData(pl_id, "SDPISTOL", pData[pl_id][pSkill][id_var]);
			}
			case 2: {
				gun_name = "Desert Eagle";
				UpdatePlayerData(pl_id, "DEAGLE", pData[pl_id][pSkill][id_var]);
			}
			case 3: {
				gun_name = "Shotgun";
				UpdatePlayerData(pl_id, "SHOTGUN", pData[pl_id][pSkill][id_var]);
			}
			case 4: {
				gun_name = "MP5";
				UpdatePlayerData(pl_id, "MP5", pData[pl_id][pSkill][id_var]);
			}
			case 5: {
				gun_name = "AK47";
				UpdatePlayerData(pl_id, "AK47", pData[pl_id][pSkill][id_var]);
			}
			case 6: {
				gun_name = "M4";
				UpdatePlayerData(pl_id, "M4", pData[pl_id][pSkill][id_var]);
			}
			case 7: {
				gun_name = "Sniper Rifle";
				UpdatePlayerData(pl_id, "SNIPER", pData[pl_id][pSkill][id_var]);
			}
			case 8: {
				gun_name = "Sawnoff";
				UpdatePlayerData(pl_id, "SAWNOFF", pData[pl_id][pSkill][id_var]);
			}
			case 9: {
				gun_name = "Combat SG";
				UpdatePlayerData(pl_id, "COMBAT_SG", pData[pl_id][pSkill][id_var]);
			}
			case 10: {
				gun_name = "Micro UZI";
				UpdatePlayerData(pl_id, "MICRO_UZI", pData[pl_id][pSkill][id_var]);
			}
		}
		SetPlayerSkills(pl_id);
		SCMF(playerid, COLOR_MAIN, "√ç√†√¢√ª√™ √¢√´√†√§√•√≠√®√ø √Æ√∞√≥√¶√®√•√¨ %s √≥ %s[%d] √≥√±√Ø√•√∏√≠√Æ √®√ß√¨√•√≠¬∏√≠ √≠√† "CLIGHTBLUE"%d √Ø√∞√Æ√∂√•√≠√≤√†(√Æ√¢)", gun_name, GetName(pl_id), pl_id, procent_st);
		SCMF(pl_id, COLOR_MAIN, "%s[%d] √®√ß√¨√•√≠√®√´ √Ç√†√∏ √≠√†√¢√ª√™ √¢√´√†√§√•√≠√®√ø √Æ√∞√≥√¶√®√•√¨ %s √≠√† "CLIGHTBLUE"%d √Ø√∞√Æ√∂√•√≠√≤√†(√Æ√¢)", GetName(playerid), playerid, gun_name, procent_st);
	} return 1;
}
CMD:gate(playerid) {
	if(!IsACop(playerid) && !IsAArm(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√ä√Æ√¨√†√≠S√≠ √§√Æ√±√≤√≥√Ø√≠√† √≤√Æ√´√º√™√Æ √§√´√ø √å√Ç√Ñ √® √å√é");
	if(GetPlayerInterior(playerid) != 0 || GetPlayerVirtualWorld(playerid) != 0) return SCM(playerid, COLOR_GREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √Æ√™√Æ√´√Æ √¢√Æ√∞√Æ√≤ √®√´√® √∏√´√†√£√°√†√≥√¨√†");
	if(IsPlayerInRangeOfPoint(playerid, 8.0, 431.650800, 2561.797600, 16.599400)) {
		if(!vvc_open) {
			MoveObject(gateobj[0], 431.800010, 2577.100000, 18.100000, 1.5);
			SetPlayerChatBubble(playerid, "√é√≤√™√∞√ª√¢√†√•√≤ √¢√Æ√∞√Æ√≤√†", 0x00CC00FF, 15.0, 3000);
			vvc_open = true;
		}
		else {
			MoveObject(gateobj[0], 431.700010, 2567.100000, 18.100000, 1.5);
			SetPlayerChatBubble(playerid, "√á√†√™√∞√ª√¢√†√•√≤ √¢√Æ√∞√Æ√≤√†", 0xFF6600FF, 15.0, 3000);
			vvc_open = false;
		}
	}
	else if(IsPlayerInRangeOfPoint(playerid, 8.0, -2299.999000, 2366.250000, 5.156900)) {
		if(!vmf_open) {
			MoveDynamicObject(gateobj[1], -2299.999000, 2366.250000, 5.156900 + 0.004000, 0.004000, 0.000000, 0.000000, -122.820000);
			SetPlayerChatBubble(playerid, "√é√≤√™√∞√ª√¢√†√•√≤ √∏√´√†√£√°√†√≥√¨", 0x00CC00FF, 15.0, 3000);
			vmf_open = true;
		}
		else {
			MoveDynamicObject(gateobj[1], -2299.999000, 2366.250000, 5.156800 - 0.004000, 0.004000, 0.000000, 270.000000, -122.820000);
			SetPlayerChatBubble(playerid, "√á√†√™√∞√ª√¢√†√•√≤ √∏√´√†√£√°√†√≥√¨", 0xFF6600FF, 15.0, 3000);
			vmf_open = false;
		}
	}
	else if(IsPlayerInRangeOfPoint(playerid, 8.0, 347.754000, 1799.864990, 18.199940)) {
		if(!sv1_open) {
			MoveDynamicObject(gateobj[2], 347.754000, 1799.864990, 18.199940 + 0.004000, 0.004000, 0.000000, 0.000000, 40.000000);
			SetPlayerChatBubble(playerid, "√é√≤√™√∞√ª√¢√†√•√≤ √∏√´√†√£√°√†√≥√¨", 0x00CC00FF, 15.0, 3000);
			sv1_open = true;
		}
		else {
			MoveDynamicObject(gateobj[2], 347.754000, 1799.864990, 18.199940 - 0.004000, 0.004000, 0.000000, 268.300000, 40.000000);
			SetPlayerChatBubble(playerid, "√á√†√™√∞√ª√¢√†√•√≤ √∏√´√†√£√°√†√≥√¨", 0xFF6600FF, 15.0, 3000);
			sv1_open = false;
		}
	}
	else if(IsPlayerInRangeOfPoint(playerid, 8.0, 96.671000, 1920.802980, 14.121000)) {
		if(!sv2_open) {
			MoveObject(gateobj[3], 96.671000, 1920.802980, 14.121000, 1.5);
			SetPlayerChatBubble(playerid, "√é√≤√™√∞√ª√¢√†√•√≤ √§√¢√•√∞√º", 0x00CC00FF, 15.0, 3000);
			sv2_open = true;
		}
		else {
			MoveObject(gateobj[3], 96.671000, 1920.802980, 18.221000, 1.5);
			SetPlayerChatBubble(playerid, "√á√†√™√∞√ª√¢√†√•√≤ √§√¢√•√∞√º", 0xFF6600FF, 15.0, 3000);
			sv2_open = false;
		}
	}
	else if(IsPlayerInRangeOfPoint(playerid, 8.0, -1526.400020, 481.380000, 6.880000)) {
		if(!avik_open) {
			MoveDynamicObject(gateobj[4], -1526.400020, 481.380000, 6.880000 + 0.004000, 0.004000, 0.000000, 0.000000, 0.000000);
			SetPlayerChatBubble(playerid, "√é√≤√™√∞√ª√¢√†√•√≤ √∏√´√†√£√°√†√≥√¨", 0x00CC00FF, 15.0, 3000);
			avik_open = true;
		}
		else {
			MoveDynamicObject(gateobj[4], -1526.400020, 481.380000, 6.880000 - 0.004000, 0.004000, 0.000000, 270.000000, 0.000000);
			SetPlayerChatBubble(playerid, "√á√†√™√∞√ª√¢√†√•√≤ √∏√´√†√£√°√†√≥√¨", 0xFF6600FF, 15.0, 3000);
			avik_open = false;
		}
	}
	else if(IsPlayerInRangeOfPoint(playerid, 8.0, 2238.199950, 2450.379880, 10.513000)) {
		if(!lvpd_open) {
			MoveDynamicObject(gateobj[5], 2238.199950, 2450.379880, 10.513000 + 0.004000, 0.004000, 0.000000, 0.000000, 90.000000);
			SetPlayerChatBubble(playerid, "√é√≤√™√∞√ª√¢√†√•√≤ √∏√´√†√£√°√†√≥√¨", 0x00CC00FF, 15.0, 3000);
			lvpd_open = true;
		}
		else {
			MoveDynamicObject(gateobj[5], 2238.199950, 2450.379880, 10.513000 - 0.004000, 0.004000, 0.000000, 90.000000, 90.000000);
			SetPlayerChatBubble(playerid, "√á√†√™√∞√ª√¢√†√•√≤ √∏√´√†√£√°√†√≥√¨", 0xFF6600FF, 15.0, 3000);
			lvpd_open = false;
		}
	}
	else if(IsPlayerInRangeOfPoint(playerid, 8.0, -2436.905030, 495.420010, 29.768000)) {
		if(!fbr_open) {
			MoveDynamicObject(gateobj[6], -2436.905030, 495.420010, 29.768000 + 0.004000, 0.004000, 0.000000, 0.000000, 25.000000);
			SetPlayerChatBubble(playerid, "√é√≤√™√∞√ª√¢√†√•√≤ √∏√´√†√£√°√†√≥√¨", 0x00CC00FF, 15.0, 3000);
			fbr_open = true;
		}
		else {
			MoveDynamicObject(gateobj[6], -2436.905030, 495.420010, 29.768000 - 0.004000, 0.004000, 0.000000, 90.000000, 25.000000);
			SetPlayerChatBubble(playerid, "√á√†√™√∞√ª√¢√†√•√≤ √∏√´√†√£√°√†√≥√¨", 0xFF6600FF, 15.0, 3000);
			fbr_open = false;
		}
	}
	else if(IsPlayerInRangeOfPoint(playerid, 8.0, 1544.671020, -1630.817990, 13.120000)) {
		if(!lspd_open) {
			MoveDynamicObject(gateobj[7], 1544.671020, -1630.817990, 13.120000 + 0.004000, 0.004000, 0.000000, 0.000000, 90.000000);
			SetPlayerChatBubble(playerid, "√é√≤√™√∞√ª√¢√†√•√≤ √∏√´√†√£√°√†√≥√¨", 0x00CC00FF, 15.0, 3000);
			lspd_open = true;
		}
		else {
			MoveDynamicObject(gateobj[7], 1544.671020, -1630.817990, 13.120000 - 0.004000, 0.004000, 0.000000, 90.000000, 90.000000);
			SetPlayerChatBubble(playerid, "√á√†√™√∞√ª√¢√†√•√≤ √∏√´√†√£√°√†√≥√¨", 0xFF6600FF, 15.0, 3000);
			lspd_open = false;
		}
	}
	else if(IsPlayerInRangeOfPoint(playerid, 8.0, -1572.199950, 658.799990, 6.850000)) {
		if(!sfpd1_open) {
			MoveDynamicObject(gateobj[8], -1572.199950, 658.799990, 6.850000 + 0.004000, 0.004000, 0.000000, 0.000000, 90.000000);
			SetPlayerChatBubble(playerid, "√é√≤√™√∞√ª√¢√†√•√≤ √∏√´√†√£√°√†√≥√¨", 0x00CC00FF, 15.0, 3000);
			sfpd1_open = true;
		}
		else {
			MoveDynamicObject(gateobj[8], -1572.199950, 658.799990, 6.850000 - 0.004000, 0.004000, 0.000000, 90.000000, 90.000000);
			SetPlayerChatBubble(playerid, "√á√†√™√∞√ª√¢√†√•√≤ √∏√´√†√£√°√†√≥√¨", 0xFF6600FF, 15.0, 3000);
			sfpd1_open = false;
		}
	}
	else if(IsPlayerInRangeOfPoint(playerid, 8.0, -1701.430050, 687.599980, 24.700000)) {
		if(!sfpd2_open) {
			MoveDynamicObject(gateobj[9], -1701.430050, 687.599980, 24.700000 + 0.004000, 0.004000, 0.000000, 0.000000, 270.000000);
			SetPlayerChatBubble(playerid, "√é√≤√™√∞√ª√¢√†√•√≤ √∏√´√†√£√°√†√≥√¨", 0x00CC00FF, 15.0, 3000);
			sfpd2_open = true;
		}
		else {
			MoveDynamicObject(gateobj[9], -1701.430050, 687.599980, 24.700000 - 0.004000, 0.004000, 0.000000, 90.000000, 270.000000);
			SetPlayerChatBubble(playerid, "√á√†√™√∞√ª√¢√†√•√≤ √∏√´√†√£√°√†√≥√¨", 0xFF6600FF, 15.0, 3000);
			sfpd2_open = false;
		}
	}
	else if(IsPlayerInRangeOfPoint(playerid, 8.0, 286.335021, 1819.782836, 17.640625)) {
		if(!kpp2sv_open) {
			MoveDynamicObject(gateobj[11], 285.984010, 1832.299560, 20.101000, 1.5, 0.000000, 0.000000, 90.000000);
			SetPlayerChatBubble(playerid, "√é√≤√™√∞√ª√¢√†√•√≤ √¢√Æ√∞√Æ√≤√†", 0x00CC00FF, 15.0, 3000);
			kpp2sv_open = true;
		}
		else {
			MoveDynamicObject(gateobj[11], 285.984010, 1822.299560, 20.101000, 1.5, 0.000000, 0.000000, 90.000000);
			SetPlayerChatBubble(playerid, "√á√†√™√∞√ª√¢√†√•√≤ √¢√Æ√∞√Æ√≤√†", 0xFF6600FF, 15.0, 3000);
			kpp2sv_open = false;
		}
	}
	else return SCM(playerid, COLOR_GREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √Æ√™√Æ√´√Æ √¢√Æ√∞√Æ√≤ √®√´√® √∏√´√†√£√°√†√≥√¨√†");
	if(!IsPlayerInAnyVehicle(playerid)) ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch", 4.0, 0, 0, 0, 0, 0, 1);
	return PlayerPlaySound(playerid, 4203, 0.0, 0.0, 0.0);
}
CMD:givelic(playerid, params[]) {
	if(pData[playerid][pMember] == 11) {
		if(pData[playerid][pRank] < 2) return SCM(playerid,COLOR_LIGHTGREY,"√î√≥√≠√™√∂√®√ø √§√Æ√±√≤√≥√Ø√≠√† √±√Æ 2-√£√Æ √∞√†√≠√£√†");
		if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_GREY, "Usar√≤√•: /givelic [id √®√£√∞√Æ√™√†]");
		if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
        if(params[0] == playerid) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √¢√ªS√≠√¢√†√≤√º √´√®√∂√•√≠√ß√®√® √±√•√°√•");
		SetPVarInt(playerid, "ChosenPlayer", params[0]);
		return SPD(playerid, 7777, DIALOG_STYLE_LIST, ""CLITEBLUE"√Ç√ªS√≠√∑√† √´√®√∂√•√≠√ß√®√©", ""CWHITE"- √Ç√Æ√§√®√≤√•√´√º√±√™√®√• √Ø√∞√†√¢√†\n- √ã√®√∂√•√≠√ß√®√ø √Ø√®√´√Æ√≤√†\n- √ã√®√∂√•√≠√ß√®√ø √≠√† √¢√Æ√¶√§√•√≠√®√• √¢√Æ√§√≠√Æ√£√Æ √≤√∞√†√≠√±√Ø√Æ√∞√≤√†\n- √ã√®√∂√•√≠√ß√®√ø √≠√† √Æ√∞√≥√¶√®√•", "√Ç√ªS√≠√≤√º", "Cerrar");
	}
	else return SCM(playerid, COLOR_LIGHTGREY, "√Ç√†√¨ √≠√•√§√Æ√±√≤√≥√Ø√≠√† S√≠√≠√≠√†√ø √¥√≥√≠√™√∂√®√ø");
}
CMD:book(playerid) {
	if(PhoneOnline{playerid}) return SCM(playerid, COLOR_GREY, "√Ç√†√∏ √≤√•√´√•√¥√Æ√≠ √Æ√≤√™√´√æ√∑¬∏√≠");
	if(GetPVarInt(playerid, "takephone")) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√•√´√•√¥√Æ√≠√†");
	if(pData[playerid][pPnumber] == -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√•√´√•√¥√Æ√≠√†. √ä√≥√Ø√®√≤√º √•√£√Æ √¨√Æ√¶√≠√Æ √¢ 24-7");
	string[0] = EOS;
	mysql_format(mysql_Handle, string, 128, "SELECT `ownerid_acc_add` FROM `phone_book` WHERE `ownerid_acc` = %d", pData[playerid][pID]);
	return mysql_tquery(mysql_Handle, string, "CheckContact", "i", playerid);
}
CB: off_leader_info(playerid, nameleader[]) {

	new rows;
	cache_get_row_count(rows);
	if(!rows) return 1;

	new numberleader, lvl_pl, org_pl;
	cache_get_value_name_int(0, "pPnumber", numberleader);
	cache_get_value_name_int(0, "pLevel", lvl_pl);
	cache_get_value_name_int(0, "pMember", org_pl);
	string[0] = EOS;
	if(numberleader == -1) format(string, 280, ""CWHITE"√ç√®√™: {40bf40}%s\n"CWHITE"√ë√≤√†√≤√≥√±: {ff242b}√é√¥√¥√´√†√©√≠\n"CWHITE"√ì√∞√Æ√¢√•√≠√º: {40bf40}%d\n"CWHITE"√é√∞√£√†√≠√®√ß√†√∂√®√ø: "CPALEGREEN"%s\n"CWHITE"√Ñ√Æ√´√¶√≠√Æ√±√≤√º: "CPALEGREEN"%s\n"CWHITE"√í√•√´√•√¥√Æ√≠: {ff242b}No", nameleader, lvl_pl, FractionInfo[org_pl][fName], new_rank_name[org_pl - 1][9]);
	else format(string, 280, ""CWHITE"√ç√®√™: {40bf40}%s\n"CWHITE"√ë√≤√†√≤√≥√±: {ff242b}√é√¥√¥√´√†√©√≠\n"CWHITE"√ì√∞√Æ√¢√•√≠√º: {40bf40}%d\n"CWHITE"√é√∞√£√†√≠√®√ß√†√∂√®√ø: "CPALEGREEN"%s\n"CWHITE"√Ñ√Æ√´√¶√≠√Æ√±√≤√º: "CPALEGREEN"%s\n"CWHITE"√í√•√´√•√¥√Æ√≠: {40bf40}%d", nameleader, lvl_pl, FractionInfo[org_pl][fName], new_rank_name[org_pl - 1][9], numberleader);
	return SPD(playerid, 143, DIALOG_STYLE_MSGBOX, "{FFCD00}√à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ √´√®√§√•√∞√•", string, "Siguiente", "Cerrar");
}
CB: ActionPlayerPhone(playerid, listitem_dlg) {

	new rows;
	cache_get_row_count(rows);
	if(!rows) return 1;
	
	new p_id, number_abonent;
	new bool:status;
	cache_get_value_name_int(0, "id", p_id);
	cache_get_value_name_int(0, "pPnumber", number_abonent);
	
	switch(listitem_dlg) {
		case 0: // √Ø√Æ√ß√¢√Æ√≠√®√≤√º
		{
			if(pData[playerid][pCashNumber] <= 0) 
				return SCM(playerid, COLOR_LIGHTGREY, "√Ñ√´√ø √±√Æ√¢√•√∞√∏√•√≠√®√ø √ß√¢√Æ√≠√™√† √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √Ø√Æ√Ø√Æ√´√≠√®√≤√º √±√∑¬∏√≤ √¨√Æ√°√®√´√º√≠√Æ√£√Æ √≤√•√´√•√¥√Æ√≠√†. √Ç√ª √¨√Æ√¶√•√≤√• √Ω√≤√Æ √±√§√•√´√†√≤√º √¢ √´√æ√°√Æ√¨ √°√†√≠√™√Æ√¨√†√≤√•");
			if(PhoneOnline{playerid}) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√†√∏ √≤√•√´√•√¥√Æ√≠ "CERROR"√Æ√≤√™√´√æ√∑¬∏√≠"CLIGHTGREY". √Ñ√´√ø √±√Æ√¢√•√∞√∏√•√≠√®√ø √ß√¢√Æ√≠√™√† √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √•√£√Æ {00cc66}√¢√™√´√æ√∑√®√≤√º");
			if(GetPVarInt(playerid, "gag")) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √™√´√ø√Ø, √Ç√ª √≠√• √¨√Æ√¶√•√≤√• √£√Æ√¢√Æ√∞√®√≤√º");
			if(CellTime{playerid}) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≥√¶√• √™√Æ√¨√≥-√≤√Æ √ß√¢√Æ√≠√®√≤√•. √Ñ√´√ø √±√Æ√¢√•√∞√∏√•√≠√®√ø √ß√¢√Æ√≠√™√† √Æ√≤√¨√•√≠√®√≤√• √≤√•√™√≥√π√®√© {ff9945}(/h)");
            if(GetPVarInt(playerid, "Mobile") != 999) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≥√¶√• √∞√†√ß√£√Æ√¢√†√∞√®√¢√†√•√≤√•. √Ñ√´√ø √ß√†√¢√•√∞√∏√•√≠√®√ø √ß√¢√Æ√≠√™√† √¢√¢√•√§√®√≤√• {ff9945}/h");
            if(number_abonent == pData[playerid][pPnumber] || number_abonent == -1 || number_abonent == 0) {
				PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
				return SCM(playerid, COLOR_LIGHTGREY, "√í√•√´√•√¥√Æ√≠ √†√°√Æ√≠√•√≠√≤√† √≠√•√§√Æ√±√≤√≥√Ø√•√≠");
			}
			foreach(new i:Player) {
				if(pData[i][pPnumber] != number_abonent) continue;
				SetPVarInt(playerid, "Mobile", i);
				if(pData[i][pMuteTime]) return SCM(playerid, COLOR_ERROR, "√ç√† S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤ √†√°√Æ√≠√•√≠√≤ √≠√• √¨√Æ√¶√•√≤ √± √¢√†√¨√® √Ø√Æ√£√Æ√¢√Æ√∞√®√≤√º"), PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
				if(PhoneOnline{i}) return SCM(playerid, COLOR_LIGHTGREY, "√í√•√´√•√¥√Æ√≠ √†√°√Æ√≠√•√≠√≤√† √¢√ª√™√´√æ√∑√•√≠ √®√´√® √≠√†√µ√Æ√§√®√≤√±√ø √¢√≠√• √ß√Æ√≠√ª √§√Æ√±√≤√≥√Ø√†"), PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
				if(GetPVarInt(i, "Mobile") != 999) {
                    PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
                    return SCM(playerid, COLOR_LIGHTGREY, "√Ç S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤ √†√°√Æ√≠√•√≠√≤ √∞√†√ß√£√Æ√¢√†√∞√®√¢√†√•√≤. √ë√Æ√¢√•√∞√∏√•√≠√®√• √ß√¢√Æ√≠√™√† √≠√•√¢√Æ√ß√¨√Æ√¶√≠√Æ");
                }
                else {
					SCMF(i, COLOR_MAIN, "√Ç√µ√Æ√§√ø√π√®√© √ß√¢√Æ√≠√Æ√™ √Æ√≤ %s {FFCD00}| √ç√Æ√¨√•√∞: %d", pData[playerid][pName],pData[playerid][pPnumber]);
					SCM(i, -1, "Usar√≤√• {00cc00}/p "CWHITE"√∑√≤√Æ√°√ª √Æ√≤√¢√•√≤√®√≤√º √®√´√® "CERROR"/h "CWHITE"√∑√≤√Æ√°√ª √Æ√≤√™√´√Æ√≠√®√≤√º √ß√¢√Æ√≠√Æ√™");
					SetPlayerSpecialAction(playerid,11);
					SetPVarInt(playerid, "Mobile",i);
					PlayerPlaySound(i, 23000, 0.0, 0.0, 0.0);
					SCMF(playerid, COLOR_MAIN, "√à√±√µ√Æ√§√ø√π√®√© √ß√¢√Æ√≠√Æ√™ | √ç√Æ√¨√•√∞: %d {FFCD00}| √é√¶√®S√≠√≠√®√• √Æ√≤√¢√•√≤√† √Æ√≤ %s...", pData[i][pPnumber], GetName(i));
					PlayerPlaySound(playerid, 16001, 0.0, 0.0, 0.0);
					SetPlayerAttachedObject(playerid, 0, 19513, 6, 0.113999, -0.006000, 0.007999, 83.899971, -178.700103, 0.000000, 1.000000, 1.000000, 1.000000, phone_color[pData[i][pColorPhone]], 0);
					CellTime{playerid} = true;
				}
				status=true;
			}
			if(!status) {
				PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
				return SCM(playerid, COLOR_LIGHTGREY, "√í√•√´√•√¥√Æ√≠ √†√°√Æ√≠√•√≠√≤√† √≠√†√µ√Æ√§√®√≤√±√ø √¢√≠√• √ß√Æ√≠√ª √§√Æ√±√≤√≥√Ø√†");
			}
		}
		case 1: // √Æ√≤√Ø√∞√†√¢√®√≤√º √±√Æ√Æ√°√π√•√≠√®√•
		{
			if(GetPVarInt(playerid, "gag")) return SCM(playerid, COLOR_LIGHTRED, "√ì √Ç√†√± √™√´√ø√Ø, √Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Æ√≤√Ø√∞√†√¢√®√≤√º √±√Æ√Æ√°√π√•√≠√®√•");
			if(PhoneOnline{playerid}) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√†√∏ √≤√•√´√•√¥√Æ√≠ "CERROR"√Æ√≤√™√´√æ√∑¬∏√≠"CLIGHTGREY". √Ñ√´√ø √Æ√≤√Ø√∞√†√¢√´√•√≠√®√ø √±√Æ√Æ√°√π√•√≠√®√ø √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √•√£√Æ {00cc66}√¢√™√´√æ√∑√®√≤√º");
			if(pData[playerid][pMuteTime]) return SCM(playerid, COLOR_ERROR, "√ù√≤√† √¥√≥√≠√™√∂√®√ø √≠√•√§√Æ√±√≤√≥√Ø√≠√† √¢√Æ √¢√∞√•√¨√ø √°√´√Æ√™√®√∞√Æ√¢√™√® √∑√†√≤√†");
			if(number_abonent == -1) return SCM(playerid, COLOR_LIGHTGREY, "√í√•√´√•√¥√Æ√≠ √†√°√Æ√≠√•√≠√≤√† √≠√†√µ√Æ√§√®√≤√±√ø √¢√≠√• √ß√Æ√≠√ª √§√Æ√±√≤√≥√Ø√†"), PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
			SetPVarInt(playerid, "SmsText", number_abonent);
			return SPD(playerid, 661, DIALOG_STYLE_INPUT, ""CPALEGREEN"√é√≤√Ø√∞√†√¢√´√•√≠√®√• √±√Æ√Æ√°√π√•√≠√®√ø", ""CWHITE"√Ç√¢√•√§√®√≤√• √±√Æ√Æ√°√π√•√≠√®√• √§√´√ø √†√°√Æ√≠√•√≠√≤√† √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√é√≤√Ø√∞√†√¢√®√≤√º", "Cerrar");
		}
		case 2: // √≥S√≠√´√®√≤√º √™√Æ√≠√≤√†√™√≤
		{
			string[0] = EOS;
			mysql_format(mysql_Handle, string, 240, "DELETE FROM `phone_book` WHERE `ownerid_acc_add` = %d AND `ownerid_acc` = %d", p_id, pData[playerid][pID]);
			mysql_tquery(mysql_Handle, string);
			return SCM(playerid, COLOR_BLUE, "√ä√Æ√≠√≤√†√™√≤ √≥S√≠√´¬∏√≠ √®√ß √Ø√†√¨√ø√≤√® √Ç√†√∏√•√£√Æ √≤√•√´√•√¥√Æ√≠√†");
		}
	}
	return 1;
}
CB: time_syn(playerid) {
	if(GetPVarInt(playerid, "Mobile") == 999) return KillTimer(Cell_Timer[playerid]);
	if(pData[playerid][pCashNumber] < smspricels) {
		new caller = GetPVarInt(playerid, "Mobile");
		SCM(caller, COLOR_ERROR, "√ì √†√°√Æ√≠√•√≠√≤√† √ß√†√™√Æ√≠√∑√®√´√®√±√º √±√∞√•√§√±√≤√¢√† √≠√† √±√∑√•√≤√≥ √≤√•√´√•√¥√Æ√≠√†. √á√¢√Æ√≠√Æ√™ √Ø√∞√•√∞√¢√†√≠");
		if(IsPlayerAttachedObjectSlotUsed(caller, 0)) RemovePlayerAttachedObject(caller, 0);
		if(IsPlayerAttachedObjectSlotUsed(playerid, 0)) RemovePlayerAttachedObject(playerid, 0);
		if(GetPlayerSpecialAction(playerid) == 11) SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
		if(GetPlayerSpecialAction(caller) == 11) SetPlayerSpecialAction(caller, SPECIAL_ACTION_STOPUSECELLPHONE);
		CellTime{caller} = false;
		CellTime{playerid} = false;
		KillTimer(Cell_Timer[caller]);
		KillTimer(Cell_Timer[playerid]);
		SetPVarInt(caller, "Mobile", 999);
		SetPVarInt(playerid, "Mobile", 999);
		return SCM(playerid, COLOR_ERROR, "√ì √Ç√†√± √ß√†√™√Æ√≠√∑√®√´√®√±√º √±√∞√•√§√±√≤√¢√† √≠√† √±√∑√•√≤√≥ √≤√•√´√•√¥√Æ√≠√†. √á√¢√Æ√≠√Æ√™ √Ø√∞√•√∞√¢√†√≠");
	}
	format(string, 30, "-%d$~n~~w~CALL", smspricels);
	GameTextForPlayer(playerid, string, 2000, 1);
	pData[playerid][pCashNumber] -= smspricels;
	return UpdatePlayerData(playerid, "pCashNumber", pData[playerid][pCashNumber]);
}
CB: CheckContact(playerid) {
	string[0] = EOS;
	new total;
	cache_get_row_count(total);
	if(total) {
		for(new idx, p_id; idx < total; idx ++) {
			cache_get_value_name_int(idx, "ownerid_acc_add", p_id);
			format(string, 240, "%sid = %d%s", string, p_id, (idx != total-1 ? (" OR ") : ("")));
		}
		mysql_format(mysql_Handle, string, 240, "SELECT Name, pPnumber FROM accounts WHERE %s", string);
		mysql_tquery(mysql_Handle, string, "ShowContactBook", "i", playerid);
	}
	else SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CPALEGREEN"√í√•√´√•√¥√Æ√≠√≠√†√ø √™√≠√®√£√†", ""CWHITE"√Ç√†√∏√† √≤√•√´√•√¥√Æ√≠√≠√†√ø √™√≠√®√£√† √Ø√≥√±√≤√†\n√Ñ√Æ√°√†√¢√®√≤√º √™√Æ√≠√≤√†√™√≤ √¨√Æ√¶√≠√Æ √± √Ø√Æ√¨√Æ√π√º√æ √™√Æ√¨√†√≠√§√ª {FFCD00}/add", "Cerrar", "");
	return 1;
}
CB: ShowContactBook(playerid) {
	string[0] = EOS;
	new tmpplayername[24], numberp;
	strcat(string, "√à√¨√ø\t\t√ç√Æ√¨√•√∞ √≤√•√´√•√¥√Æ√≠√†\n");

	new total;
	cache_get_row_count(total);
	for(new idx; idx < total; idx ++) {

		cache_get_value_name_int(idx, "pPnumber", numberp);
		cache_get_value_name(idx, "Name", tmpplayername);
		format(string, 700, "%s%s\t\t%d\n", string, tmpplayername, numberp);
	}
	return SPD(playerid, 124, DIALOG_STYLE_TABLIST_HEADERS, ""CPALEGREEN"√í√•√´√•√¥√Æ√≠√≠√†√ø √™√≠√®√£√†", string, "Seleccione", "Cerrar");
}
CMD:slap(playerid, params[]) {
	if(pData[playerid][pAdmin] < 1) return 1;
	if(slap_delay[playerid] > gettime()) return SCM(playerid, COLOR_ERROR, "√è√Æ√§√Æ√¶√§√®√≤√• √≠√•√±√™√Æ√´√º√™√Æ √±√•√™√≥√≠√§...");
	new to_player;
	if(sscanf(params, "d", to_player)) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /slap [id √®√£√∞√Æ√™√†]");
	if(!IsPlayerConnected(to_player)) return SCM(playerid, COLOR_GREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	new Float: slx, Float: sly, Float: slz; GetPlayerPos(to_player, slx, sly, slz); SetPlayerPos(to_player, slx, sly, slz+5);
	PlayerPlaySound(to_player, 1130, slx, sly, slz + 5); string[0] = EOS;
	if(pData[playerid][pSex] == 1) format(string, 100, "[A] %s[%d] √Ø√≠√≥√´ √®√£√∞√Æ√™√† %s[%d]", pData[playerid][pName], playerid, pData[to_player][pName], to_player);
	else format(string, 100, "[A] %s[%d] √Ø√≠√≥√´√† √®√£√∞√Æ√™√† %s[%d]", pData[playerid][pName], playerid, pData[to_player][pName], to_player);
	if(GetPVarInt(playerid, "AdminMessages")) SCM(playerid, COLOR_GREY, string);
	slap_delay[playerid] = gettime() + 10;
	return AdminMessage(COLOR_GREY, string);
}
CMD:drop(playerid) {
	if(GetPVarInt(playerid, "drop_delay") > gettime()) return SCM(playerid, 0x888888FF, "√è√Æ√§√Æ√¶√§√®√≤√• √≠√•√±√™√Æ√´√º√™√Æ √±√•√™√≥√≠√§...");
	new bool: weap_status, weaponid, ammo, str_dropweaps[420], weaponname[30];
	for(new i = 0; i <= 12; i ++) {
		GetPlayerWeaponData(playerid, i, weaponid, ammo);
		if(weaponid == 0 || ammo == 0) continue;
		weap_status = true;
	}
	if(!weap_status) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √Æ√∞√≥√¶√®√ø");
	strcat(str_dropweaps, ""CERROR"√Ç√ª√°√∞√Æ√±√®√≤√º √¢√±¬∏ √Æ√∞√≥√¶√®√•\n");
	for(new i = 0; i <= 12; i ++) {
		GetPlayerWeaponData(playerid, i, weaponid, ammo);
		if(weaponid == 0 || ammo == 0) continue;
		GetWeaponName(weaponid, weaponname, sizeof(weaponname));
		format(str_dropweaps, sizeof(str_dropweaps), "%s%s\n", str_dropweaps, weaponname);
	}
	return SPD(playerid, 495, DIALOG_STYLE_LIST, ""CMAIN"√ä√†√™√Æ√• √Æ√∞√≥√¶√®√• Quieres √¢√ª√°√∞√Æ√±√®√≤√º?", str_dropweaps, "√Ç√ª√°√∞√Æ√±√®√≤√º", "Cerrar");
}
CMD:object(playerid) {
	if(!IsAMafia(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√î√≥√≠√™√∂√®√ø √§√Æ√±√≤√≥√Ø√≠√† √≤√Æ√´√º√™√Æ √¨√†√¥√®√ø√¨");
	if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √≤√∞√†√≠√±√Ø√Æ√∞√≤√•");
	if(GetPlayerInterior(playerid) != 0) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √Ø√Æ√¨√•√π√•√≠√®√ø√µ");
	if(mafia_object[playerid] != 0) {
		DestroyObject(mafia_object[playerid]);
		Delete3DTextLabel(mafia_object_text[playerid]);
		mafia_object[playerid] = 0;
		SCM(playerid, 0x66CC00FF, "√é√°√∫√•√™√≤ √≥√°√∞√†√≠");
	}
	return SPD(playerid, 133, DIALOG_STYLE_LIST, "{99ff00}√ë√Ø√®√±√Æ√™ √Æ√°√∫√•√™√≤√Æ√¢", "[1] √è√ÆS√≠√∞√Æ√∑√≠√†√ø √™√Æ√∞√Æ√°√™√†\n[2] √é√£√Æ√≠√º\n[3] √è√∞√Æ√¶√•√™√≤√Æ√∞\n[4] √å√†√≠√£√†√´\n[5] √í√ª√™√¢√†", "Seleccione", "Cerrar");
}
CMD:break(playerid) {
	if(!IsACop(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √±√Æ√±√≤√Æ√®√≤√• √¢ √å√Ç√Ñ");
	if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √≤√∞√†√≠√±√Ø√Æ√∞√≤√•");
    if(GetPlayerInterior(playerid) != 0) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √Ø√Æ√¨√•√π√•√≠√®√ø√µ");
	if(IsValidDynamicObject(pdobject[playerid])) {
		DestroyDynamicObject(pdobject[playerid]);
		DestroyDynamic3DTextLabel(pdobject3DText[playerid]);
		pdobject[playerid] = 0;
		SCM(playerid, 0x66CC00FF, "√è√Æ√±√≤√†√¢√´√•√≠√≠√Æ√• √Ç√†√¨√® √Æ√£√∞√†√¶√§√•√≠√®√• √°√ª√´√Æ √≥√°√∞√†√≠√Æ");
	}
	return SPD(playerid, 2044, DIALOG_STYLE_LIST, ""CPALEGREEN"√Ç√ª√°√•√∞√®√≤√• √Æ√°√∫√•√™√≤", 
		"[1] √ä√∞√≥√£√´√Æ√• √Æ√£√∞√†√¶√§√•√≠√®√•\n\
		[2] √ê√†√±√™√´√†√§√≠√Æ√• √Æ√£√∞√†√¶√§√•√≠√®√•\n\
		[3] √Å√≥√§√™√† √ä√è√è\n\
		[4] √å√•√≤√†√´. √Æ√£√∞√†√¶√§√•√≠√®√•\n\
		[5] √é√≤√°√Æ√©√≠√®√™\n\
		[6] √é√£√∞√†√¶√§√•√≠√®√• √± √™√∞√†√±√≠√Æ√© √´√•√≠√≤√Æ√©\n\
		[7] √ã√•√¶√†√∑√®√© √Ø√Æ√´√®√∂√•√©√±√™√®√©\n\
		{99bbff}[8] √ë√®√±√≤√•√¨√† √Æ√Ø√Æ√¢√•√π√•√≠√®√ø\n\
		{99bbff}[9] √ä√†√¨√•√∞√† √™√Æ√≠√≤√∞√Æ√´√ø √±√™√Æ√∞√Æ√±√≤√®\n\
		{b3e6b3}[10] √å√†√´√•√≠√º√™√†√ø √¢√ª√¢√•√±√™√† √± √≠√†√§√Ø√®√±√º√æ\n\
		{b3e6b3}[11] √Å√Æ√´√º√∏√†√ø √¢√ª√¢√•√±√™√† √± √≠√†√§√Ø√®√±√º√æ\n\
		{ff9999}[12] √á√≠√†√™ \"√ç√†√Ø√∞√†√¢√Æ\"\n\
		{ff9999}[13] √á√≠√†√™ \"√ç√†√´√•√¢√Æ\"\n\
		{ff9999}[14] √á√≠√†√™ \"√Ñ√¢√®√¶√•√≠√®√• √Ø√∞√ø√¨√Æ √ß√†√Ø√∞√•√π√•√≠√Æ\"\n\
		{ff9999}[15] √á√≠√†√™ \"√Ñ√¢√®√¶√•√≠√®√• √≠√†√´√•√¢√Æ √ß√†√Ø√∞√•√π√•√≠√Æ\"\n\
		{ff9999}[16] √á√≠√†√™ \"√Ñ√¢√®√¶√•√≠√®√• √≠√†√Ø√∞√†√¢√Æ √ß√†√Ø√∞√•√π√•√≠√Æ\"\n\
		{ff9999}[17] √á√≠√†√™ \"√Ñ√¢√®√¶√•√≠√®√• √Ø√∞√ø√¨√Æ\"\n\
		{ff9999}[18] √á√≠√†√™ \"√ä√®√∞√Ø√®√∑\"\n\
		{ff9999}[19] √á√≠√†√™ \"STOP\"\n\
		{ff9999}[20] √á√≠√†√™ \"√ä√†√¨√•√∞√†\"\n\
		{ff9999}[21] √á√≠√†√™ \"√ê√†√°√Æ√≤√†√•√≤ √Ω√¢√†√™√≥√†√≤√Æ√∞\"\n\
		{ff9999}[22] √á√≠√†√™ \"√ì√±√≤√≥√Ø√®√≤√º √§√Æ√∞√Æ√£√≥\"\n\
		{ff9999}[23] √á√≠√†√™ \"√Ñ√Æ√∞√Æ√¶√≠√ª√• √∞√†√°√Æ√≤√ª\"", 
	"Seleccione", "Cerrar");
}
CB: EditObjectTable(playerid, type) {
    if(IsValidDynamicObject(pdobject[playerid])) {
		if(type == 1) SPD(playerid, 2051, DIALOG_STYLE_INPUT, ""CPALEGREEN"√ì√±√≤√†√≠√Æ√¢√™√† √¢√ª√¢√•√±√™√®", ""CWHITE"√Ç√¢√•√§√®√≤√• √≤√•√™√±√≤, √™√Æ√≤√Æ√∞√ª√© √µ√Æ√≤√®√≤√• √∞√†√ß√¨√•√±√≤√®√≤√º √≠√† √¢√ª√¢√•√±√™√•\n\n- Usar√≤√• √∂√¢√•√≤√Æ√¢√ª√• √™√Æ√§√ª √¢ √¢√®√§√• "CLIGHTGREY"{------} "CWHITE"√§√´√ø √¢√ª√¢√ÆS√≠ √∂√¢√•√≤√≠√Æ√£√Æ √≤√•√™√±√≤√†\n- √å√†√™√±√®√¨√†√´√º√≠√†√ø √Æ√°√π√†√ø √§√´√®√≠√† √≤√•√™√±√≤√†: 30 √±√®√¨√¢√Æ√´√Æ√¢", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
		else if(type == 2) SPD(playerid, 2052, DIALOG_STYLE_INPUT, ""CPALEGREEN"√ì√±√≤√†√≠√Æ√¢√™√† √¢√ª√¢√•√±√™√®", ""CWHITE"√Ç√¢√•√§√®√≤√• √≤√•√™√±√≤, √™√Æ√≤√Æ√∞√ª√© √µ√Æ√≤√®√≤√• √∞√†√ß√¨√•√±√≤√®√≤√º √≠√† √¢√ª√¢√•√±√™√•\n\n- Usar√≤√• √±√®√¨√¢√Æ√´ / √§√´√ø √Ø√•√∞√•√µ√ÆS√≠ √≠√† √≠√Æ√¢√≥√æ √±√≤√∞√Æ√™√≥\n- Usar√≤√• √∂√¢√•√≤√Æ√¢√ª√• √™√Æ√§√ª √¢ √¢√®√§√• "CLIGHTGREY"{------} "CWHITE"√§√´√ø √¢√ª√¢√ÆS√≠ √∂√¢√•√≤√≠√Æ√£√Æ √≤√•√™√±√≤√†\n- √å√†√™√±√®√¨√†√´√º√≠√†√ø √Æ√°√π√†√ø √§√´√®√≠√† √≤√•√™√±√≤√†: 60 √±√®√¨√¢√Æ√´√Æ√¢", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
	} return 1;
}
CMD:canfilling(playerid) {
	if(!fuelcan_buyed[playerid]) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √™√†√≠√®√±√≤√∞√ª √± √≤√Æ√Ø√´√®√¢√Æ√¨");
	if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √≤√∞√†√≠√±√Ø√Æ√∞√≤√•, √™√Æ√≤√Æ√∞√ª√© √µ√Æ√≤√®√≤√• √ß√†√Ø√∞√†√¢√®√≤√º");
	new vehicleid = GetPlayerVehicleID(playerid);
	if(VehInfo[vehicleid][vFuel] > 85.0) return SCM(playerid, COLOR_LIGHTGREY, "√í√Æ√Ø√´√®√¢√≠√ª√© √°√†√™ √Ω√≤√Æ√£√Æ √†√¢√≤√Æ√¨√Æ√°√®√´√ø √Ø√Æ√´√Æ√≠");
	fuelcan_buyed[playerid] = false;
	RemoveItemFromInventory(playerid, 7);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
	VehInfo[vehicleid][vFuel] += 15.0;
	savefuel_cars(playerid, vehicleid);
	PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
	return SCM(playerid, 0x99CC33FF, "√ù√≤√Æ√≤ √†√¢√≤√Æ√¨√Æ√°√®√´√º √°√ª√´ √ß√†√Ø√∞√†√¢√´√•√≠ √™√†√≠√®√±√≤√∞√Æ√© "CYELLOW"(+ 15 √´√®√≤√∞√Æ√¢)");
}
CMD:fuelcan(playerid) {
	if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √≤√∞√†√≠√±√Ø√Æ√∞√≤√•");
	if(fuelcan_buyed[playerid]) return SCM(playerid, COLOR_LIGHTGREY, "√ä√†√≠√®√±√≤√∞√† √± √≤√Æ√Ø√´√®√¢√Æ√¨ √≥√¶√• √™√≥√Ø√´√•√≠√†");
	new bool: st_mes;
	for(new b = 1; b != FILLING_TOTAL + 1; b ++) {
		if(!IsPlayerInRangeOfPoint(playerid, 10.0, Filling[b][fPos][0], Filling[b][fPos][1], Filling[b][fPos][2])) continue;
		if(Filling[b][fBenz] < 15) return SCM(playerid, COLOR_LIGHTGREY, "√ç√† √Ω√≤√Æ√© √Ä√á√ë √ß√†√™√Æ√≠√∑√®√´√®√±√º √™√†√≠√®√±√≤√∞√ª √± √≤√Æ√Ø√´√®√¢√Æ√¨");
		st_mes = true;
		SetPVarInt(playerid, "num_filling", b);
		SPD(playerid, 887, DIALOG_STYLE_MSGBOX, "{FFCD00}√è√Æ√™√≥√Ø√™√† √™√†√≠√®√±√≤√∞√ª", ""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √™√≥√Ø√®√≤√º √™√†√≠√®√±√≤√∞√≥ √≠√† "CLITEBLUE"15 √´√®√≤√∞√Æ√¢ "CWHITE"√≤√Æ√Ø√´√®√¢√†?\n√ë√≤√Æ√®√¨√Æ√±√≤√º √™√†√≠√®√±√≤√∞√ª: "CMAIN"1500$", "S√≠", "No");
		break;
	}
	if(!st_mes) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √Æ√™√Æ√´√Æ √Ä√á√ë");
	return 1;
}
CMD:fwarning(playerid, params[]) {
	if(!permission_fcmd[playerid]) return 1;
	if(sscanf(params, "dd", params[0], params[1])) return SCM(playerid, 0xBFBB41FF, "Usar: /fwarning [id √®√£√∞√Æ√™√†] [√™√Æ√´-√¢√Æ √¢√†√∞√≠√®√≠√£√Æ√¢]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(params[1] < 0 || params[1] > 50) return SCM(playerid, COLOR_GREY, "√Ñ√Æ√Ø√≥√±√≤√®√¨√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √¢√†√∞√≠√®√≠√£√Æ√¢ √Æ√≤ 1 √§√Æ 50");
	for(new i = 0; i < params[1]; i ++) SCM(params[0], 0xA9C4E4FF, "Warning(opcode 0x6E7): Exception 0xC0000005 at 0x7F0BF7");
	return SCMF(playerid, 0xCCCCFFFF, "√Ñ√´√ø %s[%d] √°√ª√´√® √Ø√Æ√™√†√ß√†√≠√ª √¢√†√∞√≠√®√≠√£√®", GetName(params[0]), params[0]);
}
CMD:fhelp(playerid, params[]) {
	if(!permission_fcmd[playerid]) return 1;
	return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{80aaff}√Ñ√Æ√±√≤√≥√Ø√≠√ª√• √™√Æ√¨√†√≠√§√ª", 
		""CMAIN"/ftext "CWHITE"- √Æ√≤√Ø√∞√†√¢√®√≤√º √¥√•√©√™-√±√Æ√Æ√°√π√•√≠√®√• √®√£√∞√Æ√™√≥\n\
		"CMAIN"/fchat "CWHITE"- √≠√†√Ø√®√±√†√≤√º √¢ √∑√†√≤ √Æ√≤ √®√¨√•√≠√® √®√£√∞√Æ√™√†\n\
		"CMAIN"/fcmd "CWHITE"- √¢√ª√Ø√Æ√´√≠√®√≤√º √Æ√≤√ª√£√∞√Æ√¢√™√≥ √Æ√≤ √®√¨√•√≠√® √®√£√∞√Æ√™√†\n\
		"CMAIN"/fmsg "CWHITE"- √≠√†√Ø√®√±√†√≤√º √¢ √Æ√°√π√®√© √∑√†√≤ √Æ√≤ √®√¨√•√≠√® √®√£√∞√Æ√™√†\n\
		"CMAIN"/sayrange "CWHITE"- √≠√†√Ø√®√±√†√≤√º √¢ √∑√†√≤ √Æ√≤ √¢√±√•√µ, √™√≤√Æ √¢ √∞√†√§√®√≥√±√•\n\
		"CMAIN"/skinrange "CWHITE"- √¢√ªS√≠√≤√º √¢√∞√•√¨√•√≠√≠√ª√© √±√™√®√≠ √¢ √∞√†√§√®√≥√±√•\n\
		"CMAIN"/fdance "CWHITE"- √¢√™√´√æ√∑√®√≤√º √†√≠√®√¨√†√∂√®√æ √≤√†√≠√∂√† √§√´√ø √®√£√∞√Æ√™√†\n\
		"CMAIN"/fdanceall "CWHITE"- √¢√™√´√æ√∑√®√≤√º √†√≠√®√¨√†√∂√®√æ √≤√†√≠√∂√† √§√´√ø √®√£√∞√Æ√™√Æ√¢ √∞√ø√§√Æ√¨\n\
		"CMAIN"/freset "CWHITE"- √¢√®√ß√≥√†√´√º√≠√Æ √Æ√°√≠√≥√´√®√≤√º √†√™√™√†√≥√≠√≤ √®√£√∞√Æ√™√†\n\
		"CMAIN"/fsetmoney "CWHITE"- √¢√®√ß√≥√†√´√º√≠√Æ Cambio √™√Æ√´√®√∑√•√±√≤√¢√Æ √§√•√≠√•√£ √®√£√∞√Æ√™√†\n\
		"CMAIN"/fwarning "CWHITE"- √Ø√Æ√™√†√ß√†√≤√º √™√´√®√•√≠√≤√±√™√®√• √¢√†√∞√≠√®√≠√£√® √§√´√ø √®√£√∞√Æ√™√†\n\
		"CMAIN"/fban "CWHITE"- √¢√ªS√≠√≤√º √¥√•√©√™√Æ√¢√ª√© √°√†√≠ √®√£√∞√Æ√™√≥\n\
		"CMAIN"/fwarn "CWHITE"- √¢√ªS√≠√≤√º √¥√•√©√™√Æ√¢√Æ√• √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√• √®√£√∞√Æ√™√≥\n\
		"CMAIN"/fmute "CWHITE"- √¢√ªS√≠√≤√º √¥√•√©√™√Æ√¢√ª√© √¨√≥√≤ √®√£√∞√Æ√™√≥\n\
		"CMAIN"/fjail "CWHITE"- √¥√•√©√™√Æ√¢√Æ √Ø√Æ√±√†√§√®√≤√º √®√£√∞√Æ√™√† √¢ √≤√æ√∞√º√¨√≥", 
	"Cerrar", "");
}
CMD:fban(playerid, params[]) {
	if(!permission_fcmd[playerid]) return 1;
	if(sscanf(params, "ddds[64]", params[0], params[1], params[2], params[3])) return SCM(playerid, 0xBFBB41FF, "Usar: /fban [√™√≤√Æ] [√™√Æ√£√Æ] [√§√≠√®] [√Ø√∞√®√∑√®√≠√†]");
	if(!IsPlayerConnected(params[0]) || !IsPlayerConnected(params[1])) return SCM(playerid, COLOR_GREY, "√ä√Æ√£√Æ-√≤√Æ √®√ß √¢√¢√•√§¬∏√≠√≠√ª√µ ID No √≠√† √±√•√∞√¢√•√∞√•");
	if(pData[playerid][pSex] == 1) format(string, 128, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √ß√†√°√†√≠√®√´ √®√£√∞√Æ√™√† %s √≠√† %d √§√≠√•√©. √è√∞√®√∑√®√≠√†: %s", GetName(params[0]), GetName(params[1]), params[2], params[3]);
	else format(string, 128, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √ß√†√°√†√≠√®√´√† √®√£√∞√Æ√™√† %s √≠√† %d √§√≠√•√©. √è√∞√®√∑√®√≠√†: %s", GetName(params[0]), GetName(params[1]), params[2], params[3]);
	if(!pData[params[1]][p_setting][2]) SCM(params[1], COLOR_LIGHTRED, string);
	return SCMTA_setting(COLOR_LIGHTRED, string);
}
CMD:fwarn(playerid, params[]) {
	if(!permission_fcmd[playerid]) return 1;
	if(sscanf(params, "dds[64]", params[0], params[1], params[2])) return SCM(playerid, 0xBFBB41FF, "Usar: /fwarn [√™√≤√Æ] [√™√Æ√£√Æ] [√Ø√∞√®√∑√®√≠√†]");
	if(!IsPlayerConnected(params[0]) || !IsPlayerConnected(params[1])) return SCM(playerid, COLOR_GREY, "√ä√Æ√£√Æ-√≤√Æ √®√ß √¢√¢√•√§¬∏√≠√≠√ª√µ ID No √≠√† √±√•√∞√¢√•√∞√•");
	if(pData[params[1]][pWarns] >= 2) {
		if(pData[playerid][pSex] == 1) format(string, 128, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √¢√ªS√≠√´ √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√• √®√£√∞√Æ√™√≥ %s [%d|3]. √è√∞√®√∑√®√≠√†: %s. √Ä√™√™√†√≥√≠√≤ √ß√†√°√†√≠√•√≠", GetName(params[0]), GetName(params[1]), pData[params[1]][pWarns]+1, params[2]);
		else format(string, 128, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √¢√ªS√≠√´√† √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√• √®√£√∞√Æ√™√≥ %s [%d|3]. √è√∞√®√∑√®√≠√†: %s. √Ä√™√™√†√≥√≠√≤ √ß√†√°√†√≠√•√≠", GetName(params[0]), GetName(params[1]), pData[params[1]][pWarns]+1, params[2]);
	}
	else {
		if(pData[playerid][pSex] == 1) format(string, 128, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √¢√ªS√≠√´ √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√• √®√£√∞√Æ√™√≥ %s [%d|3]. √è√∞√®√∑√®√≠√†: %s", GetName(params[0]), GetName(params[1]), pData[params[1]][pWarns]+1, params[2]);
		else format(string, 128, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √¢√ªS√≠√´√† √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√• √®√£√∞√Æ√™√≥ %s [%d|3]. √è√∞√®√∑√®√≠√†: %s", GetName(params[0]), GetName(params[1]), pData[params[1]][pWarns]+1, params[2]);
	}
	if(!pData[params[1]][p_setting][2]) SCM(params[1], COLOR_LIGHTRED, string);
	return SCMTA_setting(COLOR_LIGHTRED, string);
}
CMD:fmute(playerid, params[]) {
	if(!permission_fcmd[playerid]) return 1;
	if(sscanf(params, "ddds[64]", params[0], params[1], params[2], params[3])) return SCM(playerid, 0xBFBB41FF, "Usar: /fmute [√™√≤√Æ] [√™√Æ√£√Æ] [√¨√®√≠√≥√≤√ª] [√Ø√∞√®√∑√®√≠√†]");
	if(!IsPlayerConnected(params[0]) || !IsPlayerConnected(params[1])) return SCM(playerid, COLOR_GREY, "√ä√Æ√£√Æ-√≤√Æ √®√ß √¢√¢√•√§¬∏√≠√≠√ª√µ ID No √≠√† √±√•√∞√¢√•√∞√•");
	if(pData[playerid][pSex] == 1) format(string, 128, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√´ √∑√†√≤ √®√£√∞√Æ√™√≥ %s √≠√† %d √¨√®√≠. √è√∞√®√∑√®√≠√†: %s", GetName(params[0]), GetName(params[1]), params[2], params[3]);
	else format(string, 128, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√´√† √∑√†√≤ √®√£√∞√Æ√™√≥ %s √≠√† %d √¨√®√≠. √è√∞√®√∑√®√≠√†: %s", GetName(params[0]), GetName(params[1]), params[2], params[3]);
	if(!pData[params[1]][p_setting][2]) SCM(params[1], COLOR_LIGHTRED, string);
	return SCMTA_setting(COLOR_LIGHTRED, string);
}
CMD:fjail(playerid, params[]) {
	if(!permission_fcmd[playerid]) return 1;
	if(sscanf(params, "ddds[64]", params[0], params[1], params[2], params[3])) return SCM(playerid, 0xBFBB41FF, "Usar: /fjail [√™√≤√Æ] [√™√Æ√£√Æ] [√¨√®√≠√≥√≤√ª] [√Ø√∞√®√∑√®√≠√†]");
	if(!IsPlayerConnected(params[0]) || !IsPlayerConnected(params[1])) return SCM(playerid, COLOR_GREY, "√ä√Æ√£√Æ-√≤√Æ √®√ß √¢√¢√•√§¬∏√≠√≠√ª√µ ID No √≠√† √±√•√∞√¢√•√∞√•");
	if(pData[playerid][pSex] == 1) format(string, 128, "[A] %s[%d] √Ø√Æ√±√†√§√®√´ √¢ √≤√æ√∞√º√¨√≥ %s[%d] √≠√† %d √¨√®√≠√≥√≤ (%s)", GetName(params[0]), params[0], GetName(params[1]), params[1], params[2], params[3]);
	else format(string, 128, "[A] %s[%d] √Ø√Æ√±√†√§√®√´√† √¢ √≤√æ√∞√º√¨√≥ %s[%d] √≠√† %d √¨√®√≠√≥√≤ (%s)", GetName(params[0]), params[0], GetName(params[1]), params[1], params[2], params[3]);
	return AdminMessage(COLOR_GREY, string);
}
CMD:faccept(playerid, params[]) {
	if(IsAFull(playerid)) {
		if(sscanf(params, "d", params[0])) return SCM(playerid, 0xCC3344FF, "Usar: /faccept [id √®√£√∞√Æ√™√†]");
		if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
		if(permission_fcmd[params[0]]) return SCM(playerid, 0xE5B090FF, "√ì √Ω√≤√Æ√£√Æ √®√£√∞√Æ√™√† √≥√¶√• √•√±√≤√º √§√Æ√±√≤√≥√Ø √™ √¥√•√©√™-√™√Æ√¨√†√≠S√≠√¨");
		permission_fcmd[params[0]] = true; SCMF(params[0], 0xAA80FFFF, "%s[%d] √¢√ªS√≠√´ √¢√†√¨ √§√Æ√±√≤√≥√Ø √™ √¥√•√©√™-√™√Æ√¨√†√≠S√≠√¨. √è√Æ√§√∞√Æ√°√≠√•√•: {ff9966}/fhelp", GetName(playerid), playerid);
		SCMF(playerid, 0x09E34EFF, "√Ç√ª √¢√ªS√≠√´√® √§√Æ√±√≤√≥√Ø √™ √¥√•√©√™-√™√Æ√¨√†√≠S√≠√¨ √§√´√ø %s[%d]", GetName(params[0]), params[0]);
	} return 1;
}
CMD:fdecline(playerid, params[]) {
	if(IsAFull(playerid)) {
		if(sscanf(params, "d", params[0])) return SCM(playerid, 0xCC3344FF, "Usar: /fdecline [id √®√£√∞√Æ√™√†]");
		if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
		if(!permission_fcmd[params[0]]) return SCM(playerid, 0xE5B090FF, "√ì √Ω√≤√Æ√£√Æ √®√£√∞√Æ√™√† √Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤ √§√Æ√±√≤√≥√Ø √™ √¥√•√©√™-√™√Æ√¨√†√≠S√≠√¨");
		permission_fcmd[params[0]] = false; SCMF(params[0], 0xAA80FFFF, "%s[%d] √Æ√≤√™√´√æ√∑√®√´ √¢√†√¨ √§√Æ√±√≤√≥√Ø √™ √¥√•√©√™-√™√Æ√¨√†√≠S√≠√¨", GetName(playerid), playerid);
		SCMF(playerid, 0x09E34EFF, "√Ç√ª √Æ√≤√™√´√æ√∑√®√´√® √§√Æ√±√≤√≥√Ø √™ √¥√•√©√™-√™√Æ√¨√†√≠S√≠√¨ √§√´√ø %s[%d]", GetName(params[0]), params[0]);
	} return 1;
}
CMD:fdance(playerid, params[]) {
	if(!permission_fcmd[playerid]) return 1;
	if(sscanf(params, "dd", params[0], params[1])) return SCM(playerid, 0xBFBB41FF, "Usar: /fdance [id √®√£√∞√Æ√™√†] [√≠√Æ√¨√•√∞ √≤√†√≠√∂√† (1-4)]");
	if(params[1] < 1 || params[1] > 4) return SCM(playerid, COLOR_GREY, "√ç√Æ√¨√•√∞ √≤√†√≠√∂√† √Æ√≤ 1 √§√Æ 4");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	switch(params[1]) {
		case 1: SetPlayerSpecialAction(params[0], SPECIAL_ACTION_DANCE1);
		case 2: SetPlayerSpecialAction(params[0], SPECIAL_ACTION_DANCE2);
		case 3: SetPlayerSpecialAction(params[0], SPECIAL_ACTION_DANCE3);
		case 4: SetPlayerSpecialAction(params[0], SPECIAL_ACTION_DANCE4);
	}
	return SCMF(playerid, COLOR_PURPLE, "√Ç√ª √¢√™√´√æ√∑√®√´√® √†√≠√®√¨√†√∂√®√æ √≤√†√≠√∂√† √§√´√ø %s[%d]", GetName(params[0]), params[0]);
}
CMD:fdanceall(playerid, params[]) {
	if(!permission_fcmd[playerid]) return 1;
	if(sscanf(params, "dd", params[0], params[1])) return SCM(playerid, 0xBFBB41FF, "Usar: /fdanceall [id √®√£√∞√Æ√™√†] [√≠√Æ√¨√•√∞ √≤√†√≠√∂√† (1-4)]");
	if(params[1] < 1 || params[1] > 4) return SCM(playerid, COLOR_GREY, "√ç√Æ√¨√•√∞ √≤√†√≠√∂√† √Æ√≤ 1 √§√Æ 4");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	new Float:position[3];
	GetPlayerPos(params[0], position[0], position[1], position[2]);
	foreach(new i:Player) {
		if(!IsPlayerInRangeOfPoint(i, 40.0, position[0], position[1], position[2])) continue;
		switch(params[1]) {
			case 1: SetPlayerSpecialAction(i, SPECIAL_ACTION_DANCE1);
			case 2: SetPlayerSpecialAction(i, SPECIAL_ACTION_DANCE2);
			case 3: SetPlayerSpecialAction(i, SPECIAL_ACTION_DANCE3);
			case 4: SetPlayerSpecialAction(i, SPECIAL_ACTION_DANCE4);
		}
	}
	return SCMF(playerid, COLOR_PURPLE, "√Ñ√´√ø √®√£√∞√Æ√™√Æ√¢ √Ø√Æ√°√´√®√ß√Æ√±√≤√® %s[%d] √°√ª√´√† √¢√™√´√æ√∑√•√≠√† √†√≠√®√¨√†√∂√®√ø √≤√†√≠√∂√†", GetName(params[0]), params[0]);
}
CMD:fmsg(playerid, params[]) {
	if(!permission_fcmd[playerid]) return 1;
	if(sscanf(params, "ds[64]", params[0], params[1])) return SCM(playerid, 0xBFBB41FF, "Usar: /fmsg [id √®√£√∞√Æ√™√†] [√≤√•√™√±√≤]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	string[0] = EOS;
	format(string, 128, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s: %s", pData[params[0]][pName], params[1]);
	SCMTA(0xFFCD00AA, string);
	return SCMF(playerid, COLOR_PURPLE, "√Ç√ª √≠√†√Ø√®√±√†√´√® √¢ √Æ√°√π√®√© √∑√†√≤ √Æ√≤ √®√¨√•√≠√® %s[%d]", GetName(params[0]), params[0]);
}
CMD:fcmd(playerid, params[]) {
	if(!permission_fcmd[playerid]) return 1;
	if(pData[playerid][pAdmin] < 5) return 1;
	if(sscanf(params, "dds[64]", params[0], params[1], params[2])) {
		SCM(playerid, 0xBFBB41FF, "Usar: /fcmd [id √®√£√∞√Æ√™√†] [√≠√Æ√¨√•√∞ √®√ß √±√Ø√®√±√™√†] [√Ø√†√∞√†√¨√•√≤√∞]");
		return SCM(playerid, 0xFFA64DFF, "[1] /me [2] /do [3] /try [4] /todo [5] /s [6] /w");
	}
	if(strval(params[2]) > 64) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§¬∏√≠ √±√´√®√∏√™√Æ√¨ √§√´√®√≠√≠√ª√© √≤√•√™√±√≤");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(params[1] < 1 || params[1] > 6) {
		SCM(playerid, 0xBFBB41FF, "Usar: /fcmd [id √®√£√∞√Æ√™√†] [√≠√Æ√¨√•√∞ √®√ß √±√Ø√®√±√™√†] [√Ø√†√∞√†√¨√•√≤√∞]");
		return SCM(playerid, 0xFFA64DFF, "[1] /me [2] /do [3] /try [4] /todo [5] /s [6] /w");
	}
	switch(params[1]) {
		case 1: {
			format(string, 128, "%s %s", GetName(params[0]), params[2]);
			SetPlayerChatBubble(params[0], params[2], COLOR_PURPLE, 30.0, 10000);
			ProxDetector(30.0, params[0], string, COLOR_PURPLE);

		}
		case 2: {
			format(string, 128, "%s (%s)", params[2], GetName(params[0]));
			SetPlayerChatBubble(params[0], params[2], COLOR_PURPLE, 30.0, 10000);
			ProxDetector(30.0, params[0], string, COLOR_PURPLE);
		}
		case 3: {
			switch(random(2)) {
				case 0: format(string, 128, "%s %s "CMAIN"| √ìS√≠√∑√≠√Æ", GetName(params[0]),params[2]);
				case 1: format(string, 128, "%s %s "CERROR"| √ç√•√≥S√≠√∑√≠√Æ", GetName(params[0]),params[2]);
			}
			SetPlayerChatBubble(params[0], params[2], COLOR_PURPLE, 20.0, 10000);
			ProxDetector(10.0, params[0], string, COLOR_PURPLE);
		}
		case 4: {
			if(strfind(params[2], "*", true, 0) == -1) return SCM(playerid, COLOR_LIGHTGREY, "√à√±√Ø√Æ√´√º√ß√≥√ø √™√Æ√¨√†√≠√§√≥ "CLITEBLUE"/todo "CLIGHTGREY"√Ç√ª √§√Æ√´√¶√≠√ª √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √±√®√¨√¢√Æ√´-√∞√†√ß√§√•√´√®√≤√•√´√º "CPALEGREEN"* (√ß√¢¬∏√ß√§√Æ√∑√™√≥)");
			new var_coord[2][128];
			sscanf(params[2], "p<*>s[128]s[128]", var_coord[0], var_coord[1]);
			if(pData[params[0]][pSex] == 1) format(string, 128, "%s, %s √±√™√†√ß√†√´: {99ccff}%s", var_coord[0], pData[params[0]][pName], var_coord[1]);
			else format(string, 128, "%s, %s √±√™√†√ß√†√´√†: {99ccff}%s", var_coord[0], pData[params[0]][pName], var_coord[1]);
			SetPlayerChatBubble(params[0], var_coord[1], 0x99ccffFF, 4.0, 10000);
			ProxDetector(30.0, params[0], string, COLOR_PURPLE);
		}
		case 5: {
            if(pData[params[0]][pSex] == 1) format(string, 128, "%s[%d] √™√∞√®√™√≠√≥√´: %s", pData[params[0]][pName], params[0], params[2]);
            else format(string, 128, "%s[%d] √™√∞√®√™√≠√≥√´√†: %s", pData[params[0]][pName], params[0], params[2]);
			ProxDetector(60.0, params[0], string, -1);
			if(GetPlayerState(params[0]) == PLAYER_STATE_ONFOOT) { if(!GetPVarInt(params[0], "PlayerCuffed") ) {   ApplyAnimation(params[0],"ON_LOOKERS","shout_01",4.1,0,0,0,0,0,1); } }
			SetPlayerChatBubble(params[0], params[2], -1, 60.0, 10000);
		}
		case 6: {
			format(string,128, "%s √∏√•√Ø√∑√•√≤: %s", pData[params[0]][pName], params[2]);
			ProxDetector(4.0, params[0], string, 0xACCE90AA);
			SetPlayerChatBubble(params[0],params[2],0xACCE90AA,4.0,10000);
		}
	}
	return 1;
}
CMD:ftext(playerid, params[]) {
	if(!permission_fcmd[playerid]) return 1;
	new to_player, color[8], text[64];
	if(sscanf(params, "ds[8]s[64]", to_player, color, text)) {
		SCM(playerid, 0xBFBB41FF, "Usar: /ftext [id √®√£√∞√Æ√™√†] [√∂√¢√•√≤] [√≤√•√™√±√≤]");
		return SCM(playerid, 0xFFA64DFF, "#red #orange #yellow #green #blue #white");
	}
	if(!IsPlayerConnected(to_player)) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	new colorcode;
	if(!strcmp(color, "#red", true)) colorcode = 0xFF0000FF;
	else if(!strcmp(color, "#orange", true)) colorcode = 0xFF9900FF;
	else if(!strcmp(color, "#yellow", true)) colorcode = 0xFFFF00FF;
	else if(!strcmp(color, "#green", true)) colorcode = 0x00CC00FF;
	else if(!strcmp(color, "#blue", true)) colorcode = 0x3399FFFF;
	else if(!strcmp(color, "#white", true)) colorcode = 0xFFFFFFFF;
	else {
		SCM(playerid, 0xBFBB41FF, "Usar: /ftext [id √®√£√∞√Æ√™√†] [√∂√¢√•√≤] [√≤√•√™√±√≤]");
		return SCM(playerid, 0xFFA64DFF, "#red #orange #yellow #green #blue #white");
	}
	SCM(to_player,colorcode,text);
	SCMF(playerid, -1, "√à√£√∞√Æ√™√≥ %s[%d] √¢√ª√¢√•√§√•√≠√Æ √±√Æ√Æ√°√π√•√≠√®√•:", GetName(to_player), to_player);
	return SCM(playerid,colorcode,text);
}
CMD:skinrange(playerid, params[])
{
	if(!permission_fcmd[playerid]) return 1;
	new to, skin;
	if(sscanf(params, "ii", to, skin)) return SCM(playerid, 0xBFBB41FF, "Usar: /skinrange [id √®√£√∞√Æ√™√†] [id √±√™√®√≠√†]");
	if(!IsPlayerConnected(to)) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(skin < 1 || skin > 311) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√¢√•√∞√≠√ª√© √±√™√®√≠");
	new Float:position[3];
	GetPlayerPos(to, position[0], position[1], position[2]);
	foreach(new i:Player)
	{
		if(!IsPlayerInRangeOfPoint(i, 40.0, position[0], position[1], position[2])) continue;
		SetPlayerSkin(i, skin);
	}
	SCMF(playerid, 0x00FF00FF, "√ë√™√®√≠√ª √≥√±√≤√†√≠√Æ√¢√´√•√≠√ª √¢√±√•√¨ √¢ √∞√†√§√®√≥√±√• %s", GetName(to));
	return 1;
}
CMD:sayrange(playerid, params[])
{
	if(!permission_fcmd[playerid]) return 1;
	new to, text[96];
	if(sscanf(params, "is[96]", to, text)) return SCM(playerid, 0xBFBB41FF, "Usar: /sayrange [id √®√£√∞√Æ√™√†] [√≤√•√™√±√≤]");
	if(!IsPlayerConnected(to)) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	new Float:position[3];
	GetPlayerPos(to, position[0], position[1], position[2]);
	foreach(new i:Player)
	{
		if(!IsPlayerInRangeOfPoint(i, 40.0, position[0], position[1], position[2])) continue;
		OnPlayerText(i, text);
	}
	SCMF(playerid, 0x00FF00FF, "√î√∞√†√ß√† √°√ª√´√† √±√™√†√ß√†√≠√† √Æ√≤ √¢√±√•√µ √®√£√∞√Æ√™√Æ√¢ √¢ √∞√†√§√®√≥√±√• %s", GetName(to));
	return 1;
}
CMD:fchat(playerid, params[]) {
	if(!permission_fcmd[playerid]) return 1;
	new to_player, str[128], text[64];
	if(sscanf(params, "ds[64]", to_player, text)) return SCM(playerid, 0xBFBB41FF, "Usar: /fchat [id √®√£√∞√Æ√™√†] [√≤√•√™√±√≤]");
	if(to_player == playerid) return SCM(playerid, COLOR_ERROR, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Ω√≤√≥ √¥√≥√≠√™√∂√®√æ √≠√† √±√•√°√•");
	if(!IsPlayerConnected(to_player)) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	OnPlayerText(to_player, text);
	format(str, sizeof str, "~y~fake chat~n~~p~%s", GetName(to_player));
	return GameTextForPlayer(playerid, str, 3000, 3);
}
CMD:freset(playerid, params[]) {
	if(!permission_fcmd[playerid]) return 1;
	new to_player;
	if(sscanf(params, "d", to_player)) return SCM(playerid, 0xBFBB41FF, "Usar: /freset [id √®√£√∞√Æ√™√†]");
	if(!IsPlayerConnected(to_player)) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	SetPlayerSkin(to_player, 78);
	SetPlayerPos(to_player, 1763.2140, -1894.0676, 13.5612);
	SetPlayerFacingAngle(to_player, 270);
	SetCameraBehindPlayer(to_player);
	ResetPlayerMoney(to_player);
    GivePlayerMoney(to_player, 200);
    SCM(to_player, 0x009900FF, "√ê√•√£√®√±√≤√∞√†√∂√®√ø √ß√†√¢√•√∞√∏√•√≠√†!");
	SCM(to_player, -1, "√ê√•√™√Æ√¨√•√≠√§√≥√•√¨ √¢√†√¨ √Ø√∞√Æ√∑√®√≤√†√≤√º √∞√†√ß√§√•√´ √Ø√Æ√¨√Æ√π√® √Ø√Æ √®√£√∞√• "CLITEBLUE"(/help)");
	SCM(to_player, -1, "√ó√≤√Æ√°√ª √Æ√≤√™√∞√ª√≤√º √¨√•√≠√æ √®√£√∞√Æ√™√†, √¢√¢√•√§√®√≤√• "CYELLOW"/menu (/mn)");
	SCM(to_player, -1, "√ó√≤√Æ√°√ª √Æ√≤√™√∞√ª√≤√º √®√≠√¢√•√≠√≤√†√∞√º, √≠√†√¶√¨√®√≤√• {6699cc}Y "CWHITE"√®√´√® √¢√¢√•√§√®√≤√• {6699cc}/inv");
	SCM(to_player, -1, "3 √§√≠√ø √Ç√†√¨ √§√Æ√±√≤√≥√Ø√≠√ª √°√•√±√Ø√´√†√≤√≠√ª√• √±√™√≥√≤√•√∞√ª, √Ø√Æ√±√´√• √Ω√≤√Æ√£√Æ √Ç√†√¨ √Ø√∞√®√§√•√≤√±√ø √Ø√Æ√´√º√ß√Æ√¢√†√≤√º√±√ø √≤√†√™√±√® √®√´√® √™√≥√Ø√®√≤√º √¨√†√∏√®√≠√≥");
	
	SCMF(playerid, COLOR_PURPLE, "√Ä√™√™√†√≥√≠√≤ √®√£√∞√Æ√™√† %s[%d] √°√ª√´ √¢√®√ß√≥√†√´√º√≠√Æ √Æ√°√≠√≥√´√•√≠", GetName(to_player), to_player);
	return 1;
}
CMD:fsetmoney(playerid, params[]) {
	if(!permission_fcmd[playerid]) return 1;
	new to_player, amount;
	if(sscanf(params, "dd", to_player, amount)) return SCM(playerid, 0xBFBB41FF, "Usar: /fsetmoney [id √®√£√∞√Æ√™√†] [√±√≥√¨√¨√†]");
	if(!IsPlayerConnected(to_player)) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	ResetPlayerMoney(to_player);
    GivePlayerMoney(to_player, amount);
    new str[50];
    format(str, sizeof(str), "~b~%d$", amount);
	GameTextForPlayer(to_player, str, 3000, 1);
	return SCMF(playerid, COLOR_PURPLE, "√ç√†√´√®√∑√≠√ª√• √§√•√≠√º√£√® %s[%d] √¢√®√ß√≥√†√´√º√≠√Æ √®√ß√¨√•√≠√•√≠√ª", GetName(to_player), to_player);
}
CMD:add(playerid, params[]) {
	if(GetPVarInt(playerid, "takephone")) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√•√´√•√¥√Æ√≠√†");
	if(pData[playerid][pPnumber] == -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√•√´√•√¥√Æ√≠√†. √ä√≥√Ø√®√≤√º √•√£√Æ √¨√Æ√¶√≠√Æ √¢ 24-7");
	if(PhoneOnline{playerid}) return SCM(playerid, COLOR_GREY, "√Ç√†√∏ √≤√•√´√•√¥√Æ√≠ √Æ√≤√™√´√æ√∑¬∏√≠");
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_GREY, "Usar√≤√•: /add [id √®√£√∞√Æ√™√†]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(pData[params[0]][pPnumber] == -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ω√≤√Æ√£√Æ √∑√•√´√Æ√¢√•√™√† No √≤√•√´√•√¥√Æ√≠√†");
	if(params[0] == playerid) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √§√Æ√°√†√¢√®√≤√º √±√•√°√ø √¢ √≤√•√´√•√¥√Æ√≠√≠√≥√æ √™√≠√®√£√≥");
	string[0] = EOS;
	SetPVarInt(playerid, "Temp_ID_Book_Cmd", params[0]);

	mysql_format(mysql_Handle, string, 128, "SELECT * FROM `phone_book` WHERE `ownerid_acc` = %d AND `ownerid_acc_add` = %d", pData[playerid][pID], pData[params[0]][pID]);
	return mysql_tquery(mysql_Handle, string, "CheckValidContact", "i", playerid);
}
CB: CheckValidContactTAB(playerid) {
	new rows;
	cache_get_row_count(rows);
	if(rows) {
		SCM(playerid, COLOR_ERROR, "√ù√≤√Æ√≤ √∑√•√´√Æ√¢√•√™ √≥√¶√• √•√±√≤√º √¢ √Ç√†√∏√•√© √≤√•√´√•√¥√Æ√≠√≠√Æ√© √™√≠√®√£√•");
		return 0;
	}
	return 1;
}
CB: CheckValidContact(playerid) {
	new rows, tempid_cont = GetPVarInt(playerid, "Temp_ID_Book_Cmd");
	cache_get_row_count(rows);
	if(rows) return SCM(playerid, COLOR_ERROR, "√ù√≤√Æ√≤ √∑√•√´√Æ√¢√•√™ √≥√¶√• √•√±√≤√º √¢ √Ç√†√∏√•√© √≤√•√´√•√¥√Æ√≠√≠√Æ√© √™√≠√®√£√•");
	string[0] = EOS;
	format(string, 120, ""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √§√Æ√°√†√¢√®√≤√º "CPALEGREEN"%s "CWHITE"√¢ √±√¢√Æ√æ √≤√•√´√•√¥√Æ√≠√≠√≥√æ √™√≠√®√£√≥?", GetName(tempid_cont));
	return SPD(playerid, 127, DIALOG_STYLE_MSGBOX, "{3cb300}√Ñ√Æ√°√†√¢√´√•√≠√®√• √™√Æ√≠√≤√†√™√≤√†", string, "S√≠", "No");
}
CMD:aget(playerid, params[]) {
	new authname[24];
	if(pData[playerid][pAdmin] < 2) return 1;
	if(sscanf(params, "s[24]", authname)) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /aget [√≠√®√™ √®√£√∞√Æ√™√†]");
	if(IsPlayerConnected(GetPlayerID(authname))) return SCM(playerid, 0xE5B090FF, "√à√£√∞√Æ√™ √≠√• √§√Æ√´√¶√•√≠ √°√ª√≤√º √Ø√Æ√§√™√´√æ√∑¬∏√≠ √™ √±√•√∞√¢√•√∞√≥");
	mysql_format(mysql_Handle, string, 128, "SELECT `pGetonDate` FROM `accounts` WHERE `Name` = '%s'", authname);
	return mysql_tquery(mysql_Handle, string, "auth_date", "ds", playerid, authname);
}
CB: auth_date(playerid, t_name[]) {
	new rows, a_date[30], day, month, year, hour, minuite, second;
	cache_get_row_count(rows);

	getdate(year, month, day);
	gettime(hour, minuite, second);
	FixHour(hour);
	hour = shifthour;
	new data2[22];
	format(data2, 22, "%02d.%02d.%d √¢ %02d:%02d", day, month, year, hour, minuite);

	if(!rows) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No √¢ √°√†√ß√• S√≠√≠√≠√ª√µ");
	cache_get_value_name(0, "pGetonDate", a_date);
	mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('%s[%d] √Ø√∞√Æ√±√¨√Æ√≤√∞√•√´ √Ø√Æ√±√´√•√§√≠√æ√æ S√≠√≤√≥ √†√¢√≤√Æ√∞√®√ß√†√∂√®√® %s','‚Äî','%s')", GetName(playerid), playerid, t_name, data2);
	mysql_tquery(mysql_Handle, string);
	return SCMF(playerid, COLOR_LITEBLUE, "[AGET] %s [%s]", t_name, a_date);
}
CMD:elections(playerid) {
	if(pData[playerid][pAdmin] < 6) return 1;
	return SPD(playerid, 177, DIALOG_STYLE_LIST, "{FFCD00}√ì√Ø√∞√†√¢√´√•√≠√®√• √¢√ª√°√Æ√∞√†√¨√®", "[1] Cambio √≠√†√ß√¢√†√≠√®√• √¢√ª√°√Æ√∞√Æ√¢\n[2] √á√†√Ø√≥√±√≤√®√≤√º / √Æ√±√≤√†√≠√Æ√¢√®√≤√º √¢√ª√°√Æ√∞√ª\n[3] √ê√•S√≠√™√≤√®√∞√Æ√¢√†√≠√®√• √±√Ø√®√±√™√† √™√†√≠√§√®S√≠√≤√Æ√¢\n[4] √ì√ß√≠√†√≤√º √∞√•√ß√≥√´√º√≤√†√≤√ª\n[5] √é√°√≠√≥√´√®√≤√º √∞√•√ß√≥√´√º√≤√†√≤√ª", "Seleccione", "Cerrar");
}
CMD:e(playerid) {
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √°√ª√≤√º √ß√† √∞√≥√´¬∏√¨ √†√¢√≤√Æ√¨√Æ√°√®√´√ø");
	new vehicleid = GetPlayerVehicleID(playerid);
	new fixed_veh = vehicleid - 1;
	if(fixed_veh <= -1 || fixed_veh >= MAX_VEHICLES) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [077]");
	if(vehicleid >= veh_taxi[0] && vehicleid <= veh_taxi[1] && !arenda_taxi[playerid]) return SCM(playerid, COLOR_GREY, "√á√†√¢√•√±√≤√® √®√´√® √ß√†√£√´√≥√∏√®√≤√º √§√¢√®√£√†√≤√•√´√º √¢ S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤ √≠√•√´√º√ß√ø");
	if(vehicleid >= veh_bus[0] && vehicleid <= veh_bus[1] && !arenda_bus[playerid]) return SCM(playerid, COLOR_GREY, "√á√†√¢√•√±√≤√® √®√´√® √ß√†√£√´√≥√∏√®√≤√º √§√¢√®√£√†√≤√•√´√º √¢ S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤ √≠√•√´√º√ß√ø");
	if(GetVehicleModel(vehicleid) == 481 || GetVehicleModel(vehicleid) == 509 || GetVehicleModel(vehicleid) == 510) return 1;
	if(VehInfo[vehicleid][vFuel] < 0.1 && !VehInfo[fixed_veh][vEngine]) {
		PlayerPlaySound(playerid, 25603, 0.0, 0.0, 0.0);
		return GameTextForPlayer(playerid, "~r~no fuel", 3000, 1);
	}
	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
    anti_flood_eng[playerid] = gettime() + 1;
    if(!VehInfo[fixed_veh][vEngine]) SetVehicleParamsEx(vehicleid, 1, lights, alarm, doors, bonnet, boot, objective);
    else SetVehicleParamsEx(vehicleid, 0, lights, alarm, doors, bonnet, boot, objective);
	return 1;
}
CMD:l(playerid) {
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √°√ª√≤√º √ß√† √∞√≥√´¬∏√¨ √†√¢√≤√Æ√¨√Æ√°√®√´√ø");
	new vehid = GetPlayerVehicleID(playerid);
	if(GetVehicleModel(vehid) == 481 || GetVehicleModel(vehid) == 509 || GetVehicleModel(vehid) == 510) return 1;
	new engine, lights, alarm, doors, bonnet, boot, objective;
	PlayerPlaySound(playerid, 4604, 0.0, 0.0, 0.0);
	GetVehicleParamsEx(vehid,engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx(vehid,engine,(VehInfo[vehid - 1][vLamp]?(0):(1)),alarm,doors,bonnet,boot,objective);
	return VehInfo[vehid - 1][vLamp] = (VehInfo[vehid - 1][vLamp])?(false):(true);
}
CMD:addit(playerid) {
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √°√ª√≤√º √ß√† √∞√≥√´¬∏√¨ √†√¢√≤√Æ√¨√Æ√°√®√´√ø");
	new veh_id = GetPlayerVehicleID(playerid);
	if(IsABoat(veh_id) || IsAPlane(veh_id) || IsABike(veh_id)) return SCM(playerid, COLOR_GREY, "√è√†√≠√•√´√º √Ø√∞√®√°√Æ√∞√Æ√¢ √≠√•√§√Æ√±√≤√≥√Ø√≠√† √≠√† √Ω√≤√Æ√¨ √≤√∞√†√≠√±√Ø√Æ√∞√≤√•");
	for(new i = 0; i < 11; i ++) TextDrawShowForPlayer(playerid, td_panel_auto[i]);
	TextDrawShowForPlayer(playerid, td_panel_auto[16]);
	TextDrawShowForPlayer(playerid, td_panel_auto[17]);
	TextDrawShowForPlayer(playerid, td_panel_auto[18]);
	TextDrawShowForPlayer(playerid, td_panel_auto[19]);
	panelauto_en[playerid] = true;
	return SelectTextDraw(playerid, 0x77AA55FF);
}
CMD:alarm(playerid) {
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √°√ª√≤√º √ß√† √∞√≥√´¬∏√¨ √†√¢√≤√Æ√¨√Æ√°√®√´√ø");
	if(pData[playerid][pHouse] == -1) return SCM(playerid, COLOR_LIGHTGREY, "√ë√®√£√≠√†√´√®√ß√†√∂√®√ø √≠√•√§√Æ√±√≤√≥√Ø√≠√† √§√´√ø √Ω√≤√Æ√£√Æ √≤√∞√†√≠√±√Ø√Æ√∞√≤√†");
	new veh_id = GetPlayerVehicleID(playerid);
	if(veh_id != house_carid[playerid][0] && veh_id != house_carid[playerid][1] && veh_id != house_carid[playerid][2]) 
		return SCM(playerid, COLOR_LIGHTGREY, "√ë√®√£√≠√†√´√®√ß√†√∂√®√ø √≠√•√§√Æ√±√≤√≥√Ø√≠√† √§√´√ø √Ω√≤√Æ√£√Æ √≤√∞√†√≠√±√Ø√Æ√∞√≤√†");
	if(alarm_vehicle[veh_id] == 60605) {
    	alarm_vehicle[veh_id] = playerid;
    	SetPVarInt(playerid, "SIGNAL", veh_id);
    	PlayerPlaySound(playerid, 21000, 0.0, 0.0, 0.0);
    }
    else {
    	alarm_vehicle[veh_id] = 60605;
    	SetPVarInt(playerid, "SIGNAL", 60605);
    	PlayerPlaySound(playerid, 21000, 0.0, 0.0, 0.0);
    	new engine, lights, alarm, doors, bonnet, boot, objective;
    	GetVehicleParamsEx(veh_id, engine, lights, alarm, doors, bonnet, boot, objective);
	    SetVehicleParamsEx(veh_id, engine, lights, VEHICLE_PARAMS_OFF, doors, bonnet, boot, objective);
    }
    return 1;
}
CMD:r(playerid, params[]) {
	if(!pData[playerid][pMember]) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √±√Æ√±√≤√Æ√®√≤√• √¢ √Æ√∞√£√†√≠√®√ß√†√∂√®√ø√µ");
	if(OrgNotUnite(pData[playerid][pMember])) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√∏√•√© √Æ√∞√£√†√≠√®√ß√†√∂√®√® No √Ø√Æ√§√∞√†√ß√§√•√´√•√≠√®√©");
    if(pData[playerid][pMuteTime]) return SCM(playerid, COLOR_ERROR, "√Ñ√Æ√±√≤√≥√Ø √™ √Ω√≤√Æ√¨√≥ √∑√†√≤√≥ √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√≠");
	if(!pData[playerid][p_setting][3]) return SCM(playerid, COLOR_GREY, "√ó√†√≤ √Æ√∞√£√†√≠√®√ß√†√∂√®√® √¢√ª√™√´√æ√∑√•√≠ √¢ √≠√†√±√≤√∞√Æ√©√™√†√µ "CPALEGREEN"(/mn)");
	if(sscanf(params, "s[96]", params[0])) return SCM(playerid, COLOR_GREY, "Usar√≤√•: /r [√≤√•√™√±√≤]");
    if(strlen(params[0]) > 70) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§¬∏√≠ √±√´√®√∏√™√Æ√¨ √§√´√®√≠√≠√ª√© √≤√•√™√±√≤");
	string[0] = EOS;
	format(string, 128, "[R] %s %s[%d]: %s", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], pData[playerid][pName], playerid, params[0]);
	SetPlayerChatBubble(playerid, "√ë√Æ√Æ√°√π√•√≠√®√• √Ø√Æ √∞√†√∂√®√®", COLOR_PURPLE, 20.0, 2000);
	SFFM(pData[playerid][pMember], 0x33CC66FF, string);
	foreach(new i:Player) {
		if(GetPVarInt(i, "listeningaddit")) continue;
		if(!GetPVarInt(i, "listening_enabled")) continue;
		if(GetPVarInt(i, "listening_orgid") != pData[playerid][pMember]) continue;
		SCMF(i, COLOR_CYAN, "[√è√∞√Æ√±√´√≥√∏√®√¢√†√≠√®√•] {33cc66}[R] %s %s[%d]: %s", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], pData[playerid][pName], playerid, params[0]);
	} return 1;
}
stock GetJobName(jobid) {
	new name_job[20];
	if(jobid == 1) name_job = "√å√•√µ√†√≠√®√™";
	else if(jobid == 2) name_job = "√ê√†√ß√¢√Æ√ß√∑√®√™ √Ø√∞√Æ√§√≥√™√≤√Æ√¢";
	else if(jobid == 5) name_job = "√Ç√Æ√§√®√≤√•√´√º √†√¢√≤√Æ√°√≥√±√†";
	else if(jobid == 6) name_job = "√í√†√™√±√®√±√≤";
	else name_job = "√Å√•√ß√∞√†√°√Æ√≤√≠√ª√©";
	return name_job;
}
CMD:f(playerid, params[]) {
	string[0] = EOS;
	if(!IsAGang(playerid) && !IsAMafia(playerid) && pData[playerid][pMember] != 11) {
		if(pData[playerid][pJob] == 0) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√†√¨ √≠√•√§√Æ√±√≤√≥√Ø√≠√† √Ω√≤√† √¥√≥√≠√™√∂√®√ø");
		if(pData[playerid][pMuteTime]) return SCM(playerid, COLOR_ERROR, "√Ñ√Æ√±√≤√≥√Ø √™ √Ω√≤√Æ√¨√≥ √∑√†√≤√≥ √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√≠");
		if(sscanf(params, "s[96]", params[0])) return SCM(playerid, COLOR_GREY, "Usar√≤√•: /f [√≤√•√™√±√≤]");
        if(strlen(params[0]) > 70) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§¬∏√≠ √±√´√®√∏√™√Æ√¨ √§√´√®√≠√≠√ª√© √≤√•√™√±√≤");
		format(string, 144, "[F] %s %s[%d]: %s", GetJobName(pData[playerid][pJob]), pData[playerid][pName], playerid, params[0]);
		SJM(pData[playerid][pJob], 0xBF8040FF, string);
		SetPlayerChatBubble(playerid, "√ë√Æ√Æ√°√π√•√≠√®√• √Ø√Æ √∞√†√∂√®√®", 0xBF8040FF, 20.0, 2000);
	}
	else {
		if(!pData[playerid][p_setting][3]) return SCM(playerid, COLOR_GREY, "√ó√†√≤ √Æ√∞√£√†√≠√®√ß√†√∂√®√® √¢√ª√™√´√æ√∑√•√≠ √¢ √≠√†√±√≤√∞√Æ√©√™√†√µ "CPALEGREEN"(/mn)");
		if(pData[playerid][pMuteTime]) return SCM(playerid, COLOR_ERROR, "√Ñ√Æ√±√≤√≥√Ø √™ √Ω√≤√Æ√¨√≥ √∑√†√≤√≥ √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√≠");
		if(sscanf(params, "s[96]", params[0])) return SCM(playerid, COLOR_GREY, "Usar√≤√•: /f [√≤√•√™√±√≤]");
        if(strlen(params[0]) > 70) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§¬∏√≠ √±√´√®√∏√™√Æ√¨ √§√´√®√≠√≠√ª√© √≤√•√™√±√≤");
		format(string, 144, "[F] %s %s[%d]: %s", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], pData[playerid][pName], playerid, params[0]);
		SetPlayerChatBubble(playerid, "√ë√Æ√Æ√°√π√•√≠√®√• √Ø√Æ √∞√†√∂√®√®", COLOR_PURPLE, 20.0, 2000);
		SFFM(pData[playerid][pMember], 0x6699CCFF, string);
		if(pData[playerid][pMember] == 11 || pData[playerid][pMember] == 16) {
			foreach(new i:Player) {
				if(!GetPVarInt(i, "listeningaddit")) continue;
				if(!GetPVarInt(i, "listening_enabled")) continue;
				if(GetPVarInt(i, "listening_orgid") != pData[playerid][pMember]) continue;
				SCMF(i, COLOR_CYAN, "[√è√∞√Æ√±√´√≥√∏√®√¢√†√≠√®√•] {6699cc}[F] %s %s[%d]: %s", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], pData[playerid][pName], playerid, params[0]);
			}
		}
		
	}
	return 1;
}
stock IsMinistr(playerid) {
	if(pData[playerid][pMember] == 26 && (pData[playerid][pRank] == 7 || pData[playerid][pRank] == 8 || pData[playerid][pRank] == 6)) 
		return 1;
	return 0;
}
stock IsDepartament(playerid) {
	new leader = pData[playerid][pLeader];
	if(leader == 26 || 
		IsMinistr(playerid) || 
		leader == 16 || 
		leader == 7 || 
		leader == 8 || 
		leader == 9 || 
		leader == 2 || 
		leader == 1 || 
		leader == 10 || 
		leader == 21 || 
		leader == 4 || 
		leader == 28 || 
		leader == 29 || 
		leader == 19 || 
		leader == 20 || 
		leader == 27) 
		return 1;
	else return 0;
}
CMD:d(playerid, params[]) {
	if(!IsDepartament(playerid)) 
		return SCM(playerid, COLOR_LIGHTGREY, "√Ç√†√¨ √≠√•√§√Æ√±√≤√≥√Ø√≠√† S√≠√≠√≠√†√ø √¥√≥√≠√™√∂√®√ø");
	string[0] = EOS;
	if(!pData[playerid][p_setting][3]) return SCM(playerid, COLOR_GREY, "√ó√†√≤ √Æ√∞√£√†√≠√®√ß√†√∂√®√® √¢√ª√™√´√æ√∑√•√≠ √¢ √≠√†√±√≤√∞√Æ√©√™√†√µ "CPALEGREEN"(/mn)");
	if(pData[playerid][pMuteTime]) return SCM(playerid, COLOR_ERROR, "√Ñ√Æ√±√≤√≥√Ø √™ √Ω√≤√Æ√¨√≥ √∑√†√≤√≥ √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√≠");
	if(sscanf(params, "s[96]", params[0])) return SCM(playerid, COLOR_GREY, "Usar√≤√•: /d [√≤√•√™√±√≤]");
    if(strlen(params[0]) > 70) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§¬∏√≠ √±√´√®√∏√™√Æ√¨ √§√´√®√≠√≠√ª√© √≤√•√™√±√≤");
	format(string, 144, "[D] %s %s[%d]: %s", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], pData[playerid][pName], playerid, params[0]);
	SetPlayerChatBubble(playerid, "√ë√Æ√Æ√°√π√•√≠√®√• √Ø√Æ √∞√†√∂√®√®", COLOR_PURPLE, 20.0, 2000);
	foreach(new i:Player) { 
		if(!pData[i][p_setting][3]) continue;
		if(!IsDepartament(i)) continue;
		SCM(i, 0xFF6640FF, string);
	}
	return 1;
}
CMD:billboard(playerid) {
	if(pData[playerid][pAdmin] < 6) return 1;
	return SPD(playerid, 1515, DIALOG_STYLE_TABLIST_HEADERS, "{ff4d4d}√Ä√≠√≠√≥√´√®√∞√Æ√¢√†√≠√®√• √°√®√´√°√Æ√∞S√≠", "√Ç√ª√°√•√∞√®√≤√• √†√£√•√≠√≤√±√≤√¢√Æ, √™√Æ√≤√Æ√∞√Æ√¨√≥ √Ø√∞√®√≠√†√§√´√•√¶√®√≤ √°√®√´√°√Æ√∞√§:\n"CWHITE"√ê√•√™√´. √†√£√•√≠√≤√±√≤√¢√Æ √ã√ë\n√ê√•√™√´. √†√£√•√≠√≤√±√≤√¢√Æ √ë√î\n√ê√•√™√´. √†√£√•√≠√≤√±√≤√¢√Æ √ã√Ç", "Seleccione", "Cerrar");
}
CB: billboardsinfo_adm(playerid, type_show) {
	new rows, status_bs[50], name_ownerrent[24];
	string = "√ç√Æ√¨√•√∞\t√å√•√±√≤√Æ√Ø√Æ√´√Æ√¶√•√≠√®√•\t\t√Ç√´√†√§√•√´√•√∂\t\t√ë√≤√†√≤√≥√±\n\n";
	cache_get_row_count(rows); DeletePVar(playerid, "type_admbill");
	switch(type_show) {
		case 1: {
			for(new i = 1; i < 11; i ++) {
				if(!strcmp(billboard_info[i][bs_renter], "None")) status_bs = ""CERROR"√ç√• √ß√†√≠√ø√≤", name_ownerrent = "No";
				else format(status_bs, sizeof status_bs, "{00cc00}√Ä√∞√•√≠√§√Æ√¢√†√≠ √≠√† {009900}%d {00cc00}√§√≠.", billboard_info[i][bs_rental_days]), strmid(name_ownerrent, billboard_info[i][bs_renter], 0, strlen(billboard_info[i][bs_renter]), 255);
				format(string, 1200, "%s"CWHITE"%d\t\t%s\t\t%s\t\t%s\n", string, i, billboard_info[i][bs_name], name_ownerrent, status_bs);
			}
			SPD(playerid, 1514, DIALOG_STYLE_TABLIST_HEADERS, "{ff4d4d}√Ä√≠√≠√≥√´√®√∞√Æ√¢√†√≠√®√• √°√®√´√°√Æ√∞S√≠", string, "Seleccione", "Siguiente");
		}
		case 2: {
			for(new i = 21; i < 31; i ++) {
				if(!strcmp(billboard_info[i][bs_renter], "None")) status_bs = ""CERROR"√ç√• √ß√†√≠√ø√≤", name_ownerrent = "No";
				else format(status_bs, sizeof status_bs, "{00cc00}√Ä√∞√•√≠√§√Æ√¢√†√≠ √≠√† {009900}%d {00cc00}√§√≠.", billboard_info[i][bs_rental_days]), strmid(name_ownerrent, billboard_info[i][bs_renter], 0, strlen(billboard_info[i][bs_renter]), 255);
				format(string, 1200, "%s"CWHITE"%d\t\t%s\t\t%s\t\t%s\n", string, i - 20, billboard_info[i][bs_name], name_ownerrent, status_bs);
			}
			SPD(playerid, 1714, DIALOG_STYLE_TABLIST_HEADERS, "{ff4d4d}√Ä√≠√≠√≥√´√®√∞√Æ√¢√†√≠√®√• √°√®√´√°√Æ√∞S√≠", string, "Seleccione", "Siguiente");
		}
		case 3: {
			for(new i = 11; i < 21; i ++) {
				if(!strcmp(billboard_info[i][bs_renter], "None")) status_bs = ""CERROR"√ç√• √ß√†√≠√ø√≤", name_ownerrent = "No";
				else format(status_bs, sizeof status_bs, "{00cc00}√Ä√∞√•√≠√§√Æ√¢√†√≠ √≠√† {009900}%d {00cc00}√§√≠.", billboard_info[i][bs_rental_days]), strmid(name_ownerrent, billboard_info[i][bs_renter], 0, strlen(billboard_info[i][bs_renter]), 255);
				format(string, 1200, "%s"CWHITE"%d\t\t%s\t\t%s\t\t%s\n", string, i - 10, billboard_info[i][bs_name], name_ownerrent, status_bs);
			}
			SPD(playerid, 1614, DIALOG_STYLE_TABLIST_HEADERS, "{ff4d4d}√Ä√≠√≠√≥√´√®√∞√Æ√¢√†√≠√®√• √°√®√´√°√Æ√∞S√≠", string, "Seleccione", "Siguiente");
		}
	} return 1;
}

alias:menu("mn", "mm");
CMD:menu(playerid) 
	return SPD(playerid, 119, DIALOG_STYLE_LIST, "{ffda00}Men√∫ de Persona",
		"{4271ff}[1] "CWHITE"Estad√≠sticas de acreditaci√≥n\n\
		{4271ff}[2] "CWHITE"Configuraci√≥n general\n\
		{4271ff}[3] "CWHITE"Lista de facciones\n\
		{4271ff}[4] "CWHITE"Contacto con la administraci√≥n\n\
		{4271ff}[5] "CWHITE"La seguridad\n\
		{4271ff}[6] "CWHITE"Donar dinero\n\
		{4271ff}[7] "CWHITE"Navegador GPS\n\
		{4271ff}[8] "CWHITE"Ravila severa\n\
		{4271ff}[9] "CWHITE"Cambiar nombres que no sean RP\n\
		{4271ff}[10] "CWHITE"Telefono\n\
		{4271ff}[11] "CWHITE"Nuevo\n\
		{4271ff}[12] "CWHITE"Entrada de alimentaci√≥n\n\
		{4271ff}[13] "CWHITE"Descripci√≥n del permiso",
	"Seleccione", "Cerrar");

CMD:find(playerid) {
	new dial_title[55], countmember = 0;
	string[0]=EOS;
	if(!pData[playerid][pMember]) {
		if(pData[playerid][pJob] == 0) return SCM(playerid, COLOR_LIGHTGREY, "Las cosas no se entendieron y no eran nuevas.");
		strcat(string, "si\tnosabemos\tnosabemosxdd\n");
		foreach(new i:Player) {
			if(pData[i][pJob] != pData[playerid][pJob] || !IsPlayerConnected(i)) continue;
			if(pData[i][pPnumber] == -1) format(string,1500, "%s"CWHITE"%d. %s[%d]\t%d\t\t{40bf40}%d\n", string, countmember + 1, GetName(i), i, pData[i][pLevel]);
			else format(string, 1500, "%s"CWHITE"%d. %s[%d]\t%d\t\t{40bf40}%d\n", string, countmember + 1, GetName(i), i, pData[i][pLevel], pData[i][pPnumber]);
			countmember ++;
		}
        if(countmember == 0) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{ff9945}√é√∏√®√°√™√†", ""CWHITE"√é√≠√´√†√©√≠ √∞√†√°√Æ√≤√≠√®√™√® √Ω√≤√Æ√© √∞√†√°√Æ√≤√ª √≠√• √≠√†√©√§√•√≠√ª", "Cerrar", "");
		format(dial_title, 55, ""CCYAN"√ë√Æ√≤√∞√≥√§√≠√®√™√® √Æ√≠√´√†√©√≠ {bfbb41}(%d √∑√•√´.)", countmember);
		SPD(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, dial_title, string, "Cerrar", "");
	}
	else {
        new teamnumber = pData[playerid][pMember], 
        	dop_info[40] = "‚Äî";

        if(pData[playerid][pLeader] == 26) 
			return SPD(playerid, 2188, DIALOG_STYLE_LIST, "{cccc00}√Ç√ª√°√•√∞√®√≤√• √Ø√Æ√§√∞√†√ß√§√•√´√•√≠√®√•", "Administraci√≥n residente\nTyr Kos-Anthosa\nKyryo Pan-Hiero\nTyr Vas-Venturasa", "Seleccione", "Cerrar");
		if(teamnumber == 26) {
			switch(pData[playerid][pRank]) {
				case 7: return SPD(playerid, 296, DIALOG_STYLE_LIST, "{cccc00}√Ç√ª√°√•√∞√®√≤√• √Ø√Æ√§√∞√†√ß√§√•√´√•√≠√®√•", "Administraci√≥n residente\n√ì√Ø√∞. Por el favor de Ros-Anthos\n√ì√Ø√∞. por orden de Pan-Riero\n√ì√Ø√∞-√Ø√Æ√´√®√∂√®√•√© √ã√†√±-√Ç√•√≠√≤√≥√∞√†√±√†\n√î√Å√ê", "Seleccione", "Cerrar");
				case 8: return SPD(playerid, 291, DIALOG_STYLE_LIST, "{cccc00}√Ç√ª√°√•√∞√®√≤√• √Ø√Æ√§√∞√†√ß√§√•√´√•√≠√®√•", "Administraci√≥n residente\nNoticias de oficina\nFuerza a√©rea militar\nArmada", "Seleccione", "Cerrar");
				case 6: return SPD(playerid, 297, DIALOG_STYLE_LIST, "{cccc00}√Ç√ª√°√•√∞√®√≤√• √Ø√Æ√§√∞√†√ß√§√•√´√•√≠√®√•", "Administraci√≥n residente\nColumna de Ros-Anthos\nColinitza Pan-Riero\nColumbia Vas-Venturasa", "Seleccione", "Cerrar");
			}
		}
		
		strcat(string, "√à√¨√ø\t√ì√∞√Æ√¢√•√≠√º\t√Ñ√Æ√´√¶√≠√Æ√±√≤√º\t√Ñ√Æ√Ø. √®√≠√¥√Æ√∞√¨√†√∂√®√ø\n");
		foreach(new i:Player) {
			if(pData[i][pMember] != teamnumber || !IsPlayerConnected(i)) continue; 
			dop_info = "‚Äî";
			if(pTemp[i][pAFK] + 2 > AFK_SECOND) {
				if(pTemp[i][pAFK] >= 3600) format(dop_info, 26, "AFK {00cc99}(√°√Æ√´√•√• √∑√†√±√†)");
				else format(dop_info, 40, "AFK {00cc99}(%s)", TimeConverter(pTemp[i][pAFK]));
			}
			if(pData[i][pMuteTime] > 0) format(dop_info, 40, "√Å√´√Æ√™√®√∞√Æ√¢√™√† √∑√†√≤√† "CERROR"(%s)", TimeConverter(pData[i][pMuteTime]));
			else if(pData[i][pPrisonTime] > 0) format(dop_info, 40, "√í√æ√∞√º√¨√† "CERROR"(%s)", TimeConverter(pData[i][pPrisonTime]));
			else if(pData[i][pJailTime] > 0) format(dop_info, 40, "√í√æ√∞√º√¨√† "CERROR"(%s)", TimeConverter(pData[i][pJailTime]));
			if(pData[i][pPnumber] != -1) format(string, 1500, "%s%d. %s[%d]\t%d\t%d √∞√†√≠√£. %s\t{cccc66}%s\n", string, countmember + 1, GetName(i), i, pData[i][pLevel], pData[i][pRank], new_rank_name[pData[i][pMember] - 1][pData[i][pRank] - 1], dop_info);
			else format(string, 1500, "%s%d. %s[%d]\t%d\t%d √∞√†√≠√£. %s\t{cccc66}%s\n", string, countmember + 1, GetName(i), i, pData[i][pLevel], pData[i][pRank], new_rank_name[pData[i][pMember] - 1][pData[i][pRank] - 1], dop_info);
            countmember ++;
		}
		if(countmember == 0) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{ff9945}√é√∏√®√°√™√†", ""CWHITE"√é√≠√´√†√©√≠ √®√£√∞√Æ√™√® √Ω√≤√Æ√© √Æ√∞√£√†√≠√®√ß√†√∂√®√® (√Ø√Æ√§√∞√†√ß√§√•√´√•√≠√®√ø) √≠√• √≠√†√©√§√•√≠√ª", "Cerrar", "");
		if(teamnumber == 26 || teamnumber == 22 || teamnumber == 23 || teamnumber == 24 || teamnumber == 5 || teamnumber == 6 || 
		teamnumber == 11 || teamnumber == 12 || teamnumber == 13 || teamnumber == 14 || teamnumber == 15 || teamnumber == 16 || teamnumber == 17 || teamnumber == 18) 
			format(dial_title, 55, ""CCYAN"√ó√´√•√≠√ª √Æ√∞√£√†√≠√®√ß√†√∂√®√® √Æ√≠√´√†√©√≠ {bfbb41}(%d √∑√•√´.)", countmember);
		else format(dial_title, 55, ""CCYAN"√ó√´√•√≠√ª √Ø√Æ√§√∞√†√ß√§√•√´√•√≠√®√ø √Æ√≠√´√†√©√≠ {bfbb41}(%d √∑√•√´.)", countmember);
		SPD(playerid, 8415, DIALOG_STYLE_TABLIST_HEADERS, dial_title, string, "√Ñ√•√≤√†√´√®", "Cerrar");
	}
	return 1;
}
CMD:fpanel(playerid) {
	if(pData[playerid][pFilling] == -1 || strcmp(pData[playerid][pName], Filling[pData[playerid][pFilling]][fOwner], true) == -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √Ä√á√ë");
	return ShowFilling(playerid);
}
ShowFilling(playerid) {
	new f = pData[playerid][pFilling];
	format(string, 400, ""CWHITE"√é√Ø√´√†√≤√† √Ä√á√ë:\t\t"CORANGE"%d √®√ß 30 √§√≠√•√©\n"CWHITE"√Å√†√´√†√≠√±:\t\t"CMAIN"%d$\n√ñ√•√≠√† √ß√† 1 √´√®√≤√∞:\t\t"CMAIN"%d$\n√á√†√™√≥√Ø√™√† √≤√Æ√Ø√´√®√¢√†:\t"CMAIN"90$ (%d/%d)\n√á√†√Ø√∞√†√¢√™√†:\t\t%s\n√è√∞√ÆS√≠√≤√º √ß√†√Ø√∞√†√¢√™√≥ √§√∞√≥√£√Æ√¨√≥ √®√£√∞√Æ√™√≥\n√é√°√¨√•√≠√ø√≤√º√±√ø √ß√†√Ø√∞√†√¢√™√†√¨√® √± √®√£√∞√Æ√™√Æ√¨\n"CYELLOW"√è√∞√ÆS√≠√≤√º √ß√†√Ø√∞√†√¢√™√≥ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥",
		Filling[f][fPay],Filling[f][fBankMoney], Filling[f][fPriceBenz], Filling[f][fBenz], Filling[f][fMaxBenz], (Filling[f][fLock] ? ("{ff4d4d}√á√†√™√∞√ª√≤√†") : (""CMAIN"√é√≤√™√∞√ª√≤√†")));
	return SPD(playerid, 200, DIALOG_STYLE_LIST, ""CLITEBLUE"√å√•√≠√æ √Ä√á√ë", string, "Seleccione", "Cerrar");
}
CMD:lift(playerid) {
	if(IsPlayerInRangeOfPoint(playerid, 2.5, -773.5633,-1782.9663,13.9770) && minefirstlift[3] == 1) {
		MoveDynamicObject(minefirstlift[1], -769.6777, -1783.7776, 14.2662, 0.7);
		minefirstlift[3] = 2;
		SetTimer("MineFirstLiftDown", 5000, false);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 2.5, -746.2267,-1777.1226,13.9770) && minesecondlift[3] == 1) {
		if(pData[playerid][pWorkSkill][0] < 6000) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√†√¨ √≠√•√§√Æ√±√≤√≥√Ø√≠√† S√≠√≠√≠√†√ø √∏√†√µ√≤√†. √ë√≤√†√≠√º√≤√• √Ø√∞√Æ√¢√•√∞√•√≠√≠√ª√¨ √∞√†√°√Æ√∑√®√¨ {FFCD00}(√Æ√≤√≠√•√±√®√≤√• √°√Æ√´√•√• 6000 √™√£)");
		MoveDynamicObject(minesecondlift[1], -748.9438, -1779.9019, 14.2662, 0.7);
		minesecondlift[3] = 2;
		SetTimer("MineSecondLiftDown", 5000, false);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 2.5, -773.4855,-1782.7478,-38.9230) && minefirstlift[3] == 3) {
		MoveDynamicObject(minefirstlift[2], -769.6777, -1783.7776, -37.3100, 0.7);
		minefirstlift[3] = 2;
		SetTimer("MineFirstLiftUp", 5000, false);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 2.5, -745.9865,-1777.3615,-88.9030) && minesecondlift[3] == 3) {
		if(pData[playerid][pWorkSkill][0] < 6000) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√†√¨ √≠√•√§√Æ√±√≤√≥√Ø√≠√† S√≠√≠√≠√†√ø √∏√†√µ√≤√†. √ë√≤√†√≠√º√≤√• √Ø√∞√Æ√¢√•√∞√•√≠√≠√ª√¨ √∞√†√°√Æ√∑√®√¨ {FFCD00}(√Æ√≤√≠√•√±√®√≤√• √°√Æ√´√•√• 6000 √™√£)");
		MoveDynamicObject(minesecondlift[2], -748.9438, -1779.9019, -87.3062, 0.7);
		minesecondlift[3] = 2;
		SetTimer("MineSecondLiftUp", 5000, false);
	}
	else SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√≥ √™√Æ√¨√†√≠√§√≥ √¨√Æ√¶√≠√Æ √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √≤√Æ√´√º√™√Æ √¢ √∏√†√µ√≤¬∏√∞√±√™√Æ√¨ √´√®√¥√≤√•");
	return 1;
}
CB: MineFirstLiftDown() MoveDynamicObject(minefirstlift[0], -773.5040, -1783.1396, -38.5600, 3.0);
CB: MineFirstLiftDownDoorsOpen() minefirstlift[3] = 3;
CB: MineSecondLiftDown() MoveDynamicObject(minesecondlift[0], -746.1660, -1777.1144, -88.5400, 3.0);
CB: MineSecondLiftDownDoorsOpen() minesecondlift[3] = 3;
CB: MineFirstLiftUp() MoveDynamicObject(minefirstlift[0], -773.5040, -1783.1396, 14.3400, 3.0);
CB: MineFirstLiftUpDoorsOpen() minefirstlift[3] = 1;
CB: MineSecondLiftUp() MoveDynamicObject(minesecondlift[0], -746.1660, -1777.1144, 14.3400, 3.0);
CB: MineSecondLiftUpDoorsOpen() minesecondlift[3] = 1;
CMD:gohouse(playerid, params[]) {
	if(pData[playerid][pAdmin] < 3) return 1;
	if(sscanf(params,"d", params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /gohouse [√≠√Æ√¨√•√∞ √§√Æ√¨√†]");
	if(params[0] == 0) return SCM(playerid, COLOR_GREY, "√Ç√¢√•√§¬∏√≠ √≠√•√§√Æ√Ø√≥√±√≤√®√¨√ª√© √≠√Æ√¨√•√∞ √§√Æ√¨√†");
	if(params[0] > TOTAL_HOUSE) return SCMF(playerid, COLOR_GREY, "√Ç√¢√•√§¬∏√≠ √≠√•√§√Æ√Ø√≥√±√≤√®√¨√ª√© √≠√Æ√¨√•√∞ √§√Æ√¨√†. √Ñ√Æ√±√≤√≥√Ø√≠√ª √≠√Æ√¨√•√∞√† √§√Æ {FFCD00}%d", TOTAL_HOUSE);
	SetPlayerPos(playerid, HouseInfo[params[0]][hEnter][0], HouseInfo[params[0]][hEnter][1], HouseInfo[params[0]][hEnter][2]);
	SetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	antiflood_move[playerid] = gettime() + 3;
	return GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~TELEPORT", 1000, 3);
}
CMD:gobiz(playerid, params[]) {
	if(pData[playerid][pAdmin] < 3) return 1;
	if(sscanf(params,"d", params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /gobiz [La cantidad de dinero]");
	if(params[0] == 0) return SCM(playerid, COLOR_GREY, "√Ç√¢√•√§¬∏√≠ √≠√•√§√Æ√Ø√≥√±√≤√®√¨√ª√© La cantidad de dinero");
	if(params[0] > BIZES) return SCMF(playerid, COLOR_GREY, "√Ç√¢√•√§¬∏√≠ √≠√•√§√Æ√Ø√≥√±√≤√®√¨√ª√© La cantidad de dinero. √Ñ√Æ√±√≤√≥√Ø√≠√ª √≠√Æ√¨√•√∞√† √§√Æ {FFCD00}%d", BIZES);
	SetPlayerPos(playerid, BizInfo[params[0]][EntBizVh][0], BizInfo[params[0]][EntBizVh][1], BizInfo[params[0]][EntBizVh][2]);
	SetPlayerFacingAngle(playerid, BizInfo[params[0]][EntBizVh][3]);
	SetCameraBehindPlayer(playerid);
	SetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	antiflood_move[playerid] = gettime() + 3;
	return GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~TELEPORT", 1000, 3);
}
CMD:hotel(playerid) {
	if(pData[playerid][pHotel] == -1) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √Ø√∞√Æ√¶√®√¢√†√•√≤√• √¢ √Æ√≤√•√´√•");
	new hotel = pData[playerid][pHotel];
	if(hotel_info[hotel][hotel_lock]) {
		hotel_info[hotel][hotel_lock] = false;
		mysql_format(mysql_Handle, string, 60, "UPDATE `hotel` SET `lock` = '0' WHERE `id` = %d", hotel);
		SCM(playerid, COLOR_MAIN, "√Ñ√¢√•√∞√º √¢ √Ç√†√∏ √≠√Æ√¨√•√∞ √°√ª√´√† √Æ√≤√™√∞√ª√≤√†");
	}
	else {
		hotel_info[hotel][hotel_lock] = true;
		mysql_format(mysql_Handle, string, 60, "UPDATE `hotel` SET `lock` = '1' WHERE `id` = %d", hotel);
		SCM(playerid, COLOR_ERROR, "√Ñ√¢√•√∞√º √¢ √Ç√†√∏ √≠√Æ√¨√•√∞ √°√ª√´√† √ß√†√™√∞√ª√≤√†");
	}
	return mysql_tquery(mysql_Handle, string);
}
CMD:help(playerid) {
	return SPD(playerid, 690, DIALOG_STYLE_LIST, "{00cc33}√è√Æ√¨√Æ√π√º √Ø√Æ √®√£√∞√•", 
		"[1] √é √Ø√∞√Æ√•√™√≤√•\n\
		[2] √Å√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√º\n\
		[3] √é√±√≠√Æ√¢√ª √®√£√∞√ª\n\
		[4] Role Play\n\
		[5] √è√•√∞√¢√ª√• √∏√†√£√®\n\
		[6] √é√°√π√•√≠√®√•\n\
		[7] √í√∞√†√≠√±√Ø√Æ√∞√≤\n\
		[8] √É√Æ√±√≥S√≠√∞√±√≤√¢√•√≠√≠√†√ø √±√®√±√≤√•√¨√†\n\
		[9] √Ü√®√´√º¬∏\n\
		[10] √Å√®√ß√≠√•√± √® √Ä√á√ë\n\
		[11] √Å√†√≠√™√®, √µ√∞√†√≠√•√≠√®√• √±√∞√•√§√±√≤√¢\n\
		[12] √é√∞√£√†√≠√®√ß√†√∂√®√®\n\
		[13] √ê√†√°√Æ√≤√ª\n\
		[14] √ê√†√ß√¢√´√•√∑√•√≠√®√ø", 
	"Seleccione", "Cerrar");
}
CMD:giverank(playerid, params[]) {
	if(pData[playerid][pRank] < 9) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√†√¨ √≠√•√§√Æ√±√≤√≥√Ø√≠√† S√≠√≠√≠√†√ø √¥√≥√≠√™√∂√®√ø");
	if(sscanf(params,"dd",params[0],params[1])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /giverank [id √®√£√∞√Æ√™√†] [√∞√†√≠√£]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(params[0] == playerid) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Ω√≤√≥ √¥√≥√≠√™√∂√®√æ √≠√† √±√•√°√•");
	if(params[1] < 1 || params[1] > 9) return SCM(playerid, COLOR_LIGHTGREY, "√ç√Æ√¨√•√∞ √∞√†√≠√£√† √Æ√≤ 1 √§√Æ 9");
	if(pData[params[0]][pLeader] >= 1) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √ø√¢√´√ø√•√≤√±√ø √´√®√§√•√∞√Æ√¨");
	if(pData[playerid][pMember] != pData[params[0]][pMember]) return SCM(playerid, COLOR_LIGHTGREY, "S√≠√≠√≠√ª√© √®√£√∞√Æ√™ √≠√• √±√Æ√±√≤√Æ√®√≤ √¢ √Ç√†√∏√•√© √Æ√∞√£√†√≠√®√ß√†√∂√®√® (√®√´√® √Ø√Æ√§√∞√†√ß√§√•√´√•√≠√®√®)");
	if(pData[params[0]][pRank] == params[1]) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √≥√¶√• √®√¨√•√•√≤ √Ω√≤√Æ√≤ √∞√†√≠√£");
    if(pData[playerid][pMember] > 0 && pData[playerid][pRank] <= params[1]) return 1;
	if(pData[playerid][pLeader] <= 0 && pData[playerid][pRank] <=  pData[params[0]][pRank]) return 1;
	new plmember = pData[params[0]][pMember];
	string[0] = EOS;
	if(params[1] > pData[params[0]][pRank]) {
		format(string, 128, "%s[%d] √Ø√Æ√¢√ª√±√®√´ √Ç√†√∏ √∞√†√≠√£ √¢ √Æ√∞√£√†√≠√®√ß√†√∂√®√® √§√Æ %d (%s)", pData[playerid][pName], playerid, params[1], new_rank_name[plmember-1][params[1] - 1]);
		SCM(params[0], COLOR_BLUE, string);
		format(string, 128, "√Ç√ª √Ø√Æ√¢√ª√±√®√´√® √∞√†√≠√£ %s[%d] √¢ √Æ√∞√£√†√≠√®√ß√†√∂√®√® √§√Æ %d (%s)", GetName(params[0]),params[0], params[1], new_rank_name[plmember-1][params[1] - 1]);
		SCM(playerid, COLOR_BLUE, string);
	}
	else {
		format(string, 128, "%s[%d] √Ø√Æ√≠√®√ß√®√´ √Ç√†√∏ √∞√†√≠√£ √¢ √Æ√∞√£√†√≠√®√ß√†√∂√®√® √§√Æ %d (%s)", pData[playerid][pName], playerid, params[1], new_rank_name[plmember-1][params[1] - 1]);
		SCM(params[0], COLOR_BLUE, string);
		format(string, 128, "√Ç√ª √Ø√Æ√≠√®√ß√®√´√® √∞√†√≠√£ %s[%d] √¢ √Æ√∞√£√†√≠√®√ß√†√∂√®√® √§√Æ %d (%s)", GetName(params[0]),params[0], params[1], new_rank_name[plmember-1][params[1] - 1]);
		SCM(playerid, COLOR_BLUE, string);
	}
	pData[params[0]][pRank] = params[1];
	UpdatePlayerData(params[0], "pRank", pData[params[0]][pRank]);
	if(pData[params[0]][pMember] == 3 || pData[params[0]][pMember] == 19 || pData[params[0]][pMember] == 27) strmid(pData[params[0]][ArmyRank], new_rank_name[pData[params[0]][pMember] - 1][pData[params[0]][pRank] - 1], 0, strlen(new_rank_name[pData[params[0]][pMember] - 1][pData[params[0]][pRank] - 1]), 255), UpdatePlayerDataEx(params[0], "ArmyRank", pData[params[0]][ArmyRank]);
	return 1;
}
CMD:settp(playerid) {
	if(pData[playerid][pAdmin] < 3) return 1;
	if(!tp_set)
	{
		GetPlayerPos(playerid, TeleportFloat[0], TeleportFloat[1], TeleportFloat[2]);
		TeleportInfo[0] = GetPlayerInterior(playerid);
		TeleportInfo[1] = GetPlayerVirtualWorld(playerid);
	}
	new str[100];
	format(str, sizeof(str), "[A] %s[%d] %s%s √≤√Æ√∑√™√≥ √§√´√ø √≤√•√´√•√Ø√Æ√∞√≤√† √®√£√∞√Æ√™√Æ√¢. %s",
	pData[playerid][pName], playerid, (!tp_set) ? ("√≥√±√≤√†√≠√Æ√¢√®√´") : ("√≥S√≠√´√®√´"), (pData[playerid][pSex] == 2) ? ("√†") : (""), (!tp_set) ? ("{00CC00}√í√è √¢√™√´√æ√∑√•√≠") : ("{FF6600}√í√è √¢√ª√™√´√æ√∑√•√≠"));
	tp_set = !tp_set;
	if(GetPVarInt(playerid, "AdminMessages"))
		SCM(playerid, 0x00CCCCFF, str);
	AdminMessage(0x00CCCCFF, str);
	return 1;
}

CMD:patrtake(playerid, params[]) {
	if(!IsAGang(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√ä√Æ√¨√†√≠S√≠ √§√Æ√±√≤√≥√Ø√≠√† √≤√Æ√´√º√™√Æ √°√†√≠S√≠√¨");
	if(IsPlayerInRangeOfPoint(playerid, 1.75, 2740.0842,-1957.2704,662.6328)) {

		new vw=GetPlayerVirtualWorld(playerid),
			org=pData[playerid][pMember],
			bool:status;
		if(vw==34 && org !=12) status=true;
		else if(vw==75 && org !=13) status=true;
		else if(vw==1 && org !=15) status=true;
		else if(vw==36 && org !=17) status=true;
		else if(vw==63 && org !=18) status=true;
		if(status) 
			return SCM(playerid, COLOR_LIGHTGREY, "√ë√™√´√†√§, √¢√Æ√ß√´√• √™√Æ√≤√Æ√∞√Æ√£√Æ √Ç√ª √≠√†√µ√Æ√§√®√≤√•√±√º √Ø√∞√®√≠√†√§√´√•√¶√®√≤ √§√∞√≥√£√Æ√© √°√†√≠√§√•");

		new param_patr;
		if(sscanf(params, "d", param_patr)) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /patrtake [√™√Æ√´-√¢√Æ √Ø√†√≤√∞√Æ√≠√Æ√¢]");
		if(param_patr < 1) return SCM(playerid, COLOR_GREY, "√Ç√¢√•√§√•√≠√Æ √≠√•√¢√•√∞√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √Ø√†√≤√∞√Æ√≠√Æ√¢");
		switch(pData[playerid][pMember]) {
			case 12: if(b_Sklad{0} == true) return SCM(playerid, COLOR_GREY, "√ë√™√´√†√§ √ß√†√™√∞√ª√≤. √Ç√ß√ø√≤√º √Ø√†√≤√∞√Æ√≠√ª √≠√•√´√º√ß√ø");
			case 13: if(b_Sklad{1} == true) return SCM(playerid, COLOR_GREY, "√ë√™√´√†√§ √ß√†√™√∞√ª√≤. √Ç√ß√ø√≤√º √Ø√†√≤√∞√Æ√≠√ª √≠√•√´√º√ß√ø");
			case 15: if(b_Sklad{2} == true) return SCM(playerid, COLOR_GREY, "√ë√™√´√†√§ √ß√†√™√∞√ª√≤. √Ç√ß√ø√≤√º √Ø√†√≤√∞√Æ√≠√ª √≠√•√´√º√ß√ø");
			case 17: if(b_Sklad{3} == true) return SCM(playerid, COLOR_GREY, "√ë√™√´√†√§ √ß√†√™√∞√ª√≤. √Ç√ß√ø√≤√º √Ø√†√≤√∞√Æ√≠√ª √≠√•√´√º√ß√ø");
			case 18: if(b_Sklad{4} == true) return SCM(playerid, COLOR_GREY, "√ë√™√´√†√§ √ß√†√™√∞√ª√≤. √Ç√ß√ø√≤√º √Ø√†√≤√∞√Æ√≠√ª √≠√•√´√º√ß√ø");
		}
		new unput = pData[playerid][pPatr] + param_patr;
		if(org_ammo[pData[playerid][pMember]] < param_patr) return SCM(playerid, COLOR_LIGHTGREY, "√ç√† √±√™√´√†√§√• √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √Ø√†√≤√∞√Æ√≠√Æ√¢");
		if(!pData[playerid][p_premium] && unput > 300) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √≥√≠√•√±√≤√® √± √±√Æ√°√Æ√© √±√≤√Æ√´√º√™√Æ √Ø√†√≤√∞√Æ√≠√Æ√¢");
		else if(pData[playerid][p_premium] && unput > 600) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √≥√≠√•√±√≤√® √± √±√Æ√°√Æ√© √±√≤√Æ√´√º√™√Æ √Ø√†√≤√∞√Æ√≠√Æ√¢");
		org_ammo[pData[playerid][pMember]] -= param_patr;
		pData[playerid][pPatr] += param_patr;
		UpdatePlayerData(playerid,"pPatr",pData[playerid][pPatr]);
		string[0] = EOS;
		if(pData[playerid][pSex] == 1) format(string, 128, "%s %s[%d] √¢√ß√ø√´ √±√Æ √±√™√´√†S√≠ "CBLUE"%i √∏√≤"CMAIN" √Ø√†√≤√∞√Æ√≠√Æ√¢",new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1],pData[playerid][pName], playerid, param_patr);
		else format(string, 128, "%s %s[%d] √¢√ß√ø√´√† √±√Æ √±√™√´√†S√≠ "CBLUE"%i √∏√≤"CMAIN" √Ø√†√≤√∞√Æ√≠√Æ√¢",new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1],pData[playerid][pName], playerid, param_patr);
		SFFM(pData[playerid][pMember], COLOR_MAIN, string);
		UpdateStoreGang(pData[playerid][pMember]);
		format(string, 144, "UPDATE `materials_org` SET `count_ammo` = %d WHERE `id` = %d", org_ammo[pData[playerid][pMember]],pData[playerid][pMember]);
		mysql_tquery(mysql_Handle,string);
	}
	return 1;
}
CMD:mtake(playerid, params[]) {
	if(!IsAGang(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√ä√Æ√¨√†√≠S√≠ √§√Æ√±√≤√≥√Ø√≠√† √≤√Æ√´√º√™√Æ √°√†√≠S√≠√¨");
	if(IsPlayerInRangeOfPoint(playerid, 1.75, 2740.0842,-1957.2704,662.6328)) {

		new vw=GetPlayerVirtualWorld(playerid),
			org=pData[playerid][pMember],
			bool:status;
		if(vw==34 && org !=12) status=true;
		else if(vw==75 && org !=13) status=true;
		else if(vw==1 && org !=15) status=true;
		else if(vw==36 && org !=17) status=true;
		else if(vw==63 && org !=18) status=true;
		if(status) 
			return SCM(playerid, COLOR_LIGHTGREY, "√ë√™√´√†√§, √¢√Æ√ß√´√• √™√Æ√≤√Æ√∞√Æ√£√Æ √Ç√ª √≠√†√µ√Æ√§√®√≤√•√±√º √Ø√∞√®√≠√†√§√´√•√¶√®√≤ √§√∞√≥√£√Æ√© √°√†√≠√§√•");

		new param_patr;
		if(sscanf(params, "d", param_patr)) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /mtake [√™√Æ√´-√¢√Æ √™√£ √¨√•√≤√†√´√´√†]");
		if(param_patr < 1) return SCM(playerid, COLOR_GREY, "√Ç√¢√•√§√•√≠√Æ √≠√•√¢√•√∞√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √™√®√´√Æ√£√∞√†√¨√¨");
		switch(org) {
			case 12: if(b_Sklad{0} == true) return SCM(playerid, COLOR_GREY, "√ë√™√´√†√§ √ß√†√™√∞√ª√≤. √Ç√ß√ø√≤√º √¨√•√≤√†√´√´ √≠√•√´√º√ß√ø");
			case 13: if(b_Sklad{1} == true) return SCM(playerid, COLOR_GREY, "√ë√™√´√†√§ √ß√†√™√∞√ª√≤. √Ç√ß√ø√≤√º √¨√•√≤√†√´√´ √≠√•√´√º√ß√ø");
			case 15: if(b_Sklad{2} == true) return SCM(playerid, COLOR_GREY, "√ë√™√´√†√§ √ß√†√™√∞√ª√≤. √Ç√ß√ø√≤√º √¨√•√≤√†√´√´ √≠√•√´√º√ß√ø");
			case 17: if(b_Sklad{3} == true) return SCM(playerid, COLOR_GREY, "√ë√™√´√†√§ √ß√†√™√∞√ª√≤. √Ç√ß√ø√≤√º √¨√•√≤√†√´√´ √≠√•√´√º√ß√ø");
			case 18: if(b_Sklad{4} == true) return SCM(playerid, COLOR_GREY, "√ë√™√´√†√§ √ß√†√™√∞√ª√≤. √Ç√ß√ø√≤√º √¨√•√≤√†√´√´ √≠√•√´√º√ß√ø");
		}
		new unput = pData[playerid][pMetal] + param_patr;
		if(org_materials[org] < param_patr) return SCM(playerid, COLOR_LIGHTGREY, "√ç√† √±√™√´√†√§√• √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √¨√•√≤√†√´√´√†");
		if(!pData[playerid][p_premium] && unput > 20) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √°√∞√†√≤√º √°√Æ√´√º√∏√• 20 √™√£ √¨√•√≤√†√´√´√†");
		else if(pData[playerid][p_premium] && unput > 40) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √°√∞√†√≤√º √°√Æ√´√º√∏√• 40 √™√£ √¨√•√≤√†√´√´√†");
		org_materials[org] -= param_patr;
		pData[playerid][pMetal] += param_patr;
		UpdatePlayerData(playerid,"pMats",pData[playerid][pMetal]);
		string[0] = EOS;
		if(pData[playerid][pSex] == 1) format(string, 128, "%s %s[%d] √¢√ß√ø√´ √±√Æ √±√™√´√†S√≠ "CBLUE"%i √™√£"CMAIN" √¨√•√≤√†√´√´√†",new_rank_name[org - 1][pData[playerid][pRank] - 1],pData[playerid][pName], playerid, param_patr);
		else format(string, 128, "%s %s[%d] √¢√ß√ø√´√† √±√Æ √±√™√´√†S√≠ "CBLUE"%i √™√£"CMAIN" √¨√•√≤√†√´√´√†",new_rank_name[org - 1][pData[playerid][pRank] - 1],pData[playerid][pName], playerid, param_patr);
		SFFM(org, COLOR_MAIN, string);
		UpdateStoreGang(org);
		format(string, 144, "UPDATE `materials_org` SET `count_materials` = %d WHERE `id` = %d", org_materials[org],org);
		mysql_tquery(mysql_Handle,string);
	}
	return 1;
}
CMD:bomb(playerid) {
	if(!IsAMafia(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√î√≥√≠√™√∂√®√ø √§√Æ√±√≤√≥√Ø√≠√† √≤√Æ√´√º√™√Æ √¨√†√¥√®√ø√¨");
	if(!bomb[playerid]) 
		return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √°√Æ√¨√°√ª");
	if(PlayerInAntiDM(playerid)) 
		return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √≥√±√≤√†√≠√†√¢√´√®√¢√†√≤√º √°√Æ√¨√°√ª √¢ √´√æ√§√≠√ª√µ √¨√•√±√≤√†√µ (√ß√•√´¬∏√≠√ª√µ √ß√Æ√≠√†√µ)");
	if(GetPlayerInterior(playerid) != 0) 
		return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √≥√±√≤√†√≠√Æ√¢√®√≤√º √°√Æ√¨√°√≥ √¢ √Ø√Æ√¨√•√π√•√≠√®√®");
    new Float:X,Float:Y,Float:Z;
    GetPlayerPos(playerid,X,Y,Z);
    GameTextForPlayer(playerid, "~w~bomb~r~mounted",4000,1);
    ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.2, 0, 0, 0, 0, 0, 1);
    tmpobj_bomb[playerid] = CreateDynamicObject(1654, X, Y+0.25, Z-0.9, 0,0,0);
    Streamer_Update(playerid);
    bomb[playerid] = false;
    SetTimerEx("bombexplosion", 14000, 0, "ifff", playerid,X,Y,Z);
    SCM(playerid,COLOR_BLUE,"√Å√Æ√¨√°√† √≥√±√≤√†√≠√Æ√¢√´√•√≠√† √® √°√≥√§√•√≤ √¢√ß√Æ√∞√¢√†√≠√† √∑√•√∞√•√ß √≠√•√±√™√Æ√´√º√™√Æ √±√•√™√≥√≠√§");
    return SCM(playerid,COLOR_BLUE,"√é√≤√Æ√©√§√®√≤√• √Æ√≤ √≠√•¬∏ √Ø√ÆS√≠√´√º√∏√•, √∑√≤√Æ√°√ª √Ç√†√± √≠√• √ß√†√§√•√´√Æ");
}
CB: bombexplosion(playerid,Float:bx,Float:by,Float:bz) {
	new boom;
	DestroyDynamicObject(tmpobj_bomb[playerid]);
	while(boom++ < 3) 
    	CreateExplosion(bx+random(5),by-random(5),bz,6,15.0);
	return 1;
}
CMD:prhelp(playerid) {
	if(!pData[playerid][p_premium]) return SCM(playerid, 0xE5B090FF, "√ì √Ç√†√± No "CCYAN"√Ø√∞√•√¨√®√≥√¨-√±√≤√†√≤√≥√±√† {e5b090}√≠√† √†√™√™√†√≥√≠√≤√•");
	if(pData[playerid][p_premium_days] == -1) SPD(playerid, 4881, DIALOG_STYLE_LIST, "{b22222}√è√∞√•√¨√®√≥√¨-√±√≤√†√≤√≥√±. √è√Æ√¨√Æ√π√º", "[1] √ä√Æ√¨√†√≠√§√ª\n[2] √è√∞√•√®√¨√≥√π√•√±√≤√¢√† √® √¢√Æ√ß√¨√Æ√¶√≠√Æ√±√≤√®", "Seleccione", "Cerrar");
	else {
		new str_prh[105];
		format(str_prh, sizeof(str_prh), "{ffff66}√é√±√≤√†√´√Æ√±√º √§√≠√•√© √§√•√©√±√≤√¢√®√ø: "CCYAN"%d\n"CWHITE"[1] √ä√Æ√¨√†√≠√§√ª\n[2] √è√∞√•√®√¨√≥√π√•√±√≤√¢√† √® √¢√Æ√ß√¨√Æ√¶√≠√Æ√±√≤√®", pData[playerid][p_premium_days]);
		SPD(playerid, 4881, DIALOG_STYLE_TABLIST_HEADERS, "{b22222}√è√∞√•√¨√®√≥√¨-√±√≤√†√≤√≥√±. √è√Æ√¨√Æ√π√º", str_prh, "Seleccione", "Cerrar");
	}
	return 1;
}
CMD:prc(playerid, params[]) {
	if(!pData[playerid][p_premium]) return SCM(playerid, 0xE5B090FF, "√ì √Ç√†√± No "CCYAN"√Ø√∞√•√¨√®√≥√¨-√±√≤√†√≤√≥√±√† {e5b090}√≠√† √†√™√™√†√≥√≠√≤√•");
	new str_send[128], str_mes[64];
	if(sscanf(params, "s[64]", str_mes)) return SCM(playerid, 0xBFBB41FF, "Usar√≤√•: /prc [√≤√•√™√±√≤]");
	if(strlen(str_mes) > 64) return SCM(playerid, COLOR_GREY, "√Ç√¢√•√§¬∏√≠ √±√´√®√∏√™√Æ√¨ √§√´√®√≠√≠√ª√© √≤√•√™√±√≤ √§√´√ø √±√Æ√Æ√°√π√•√≠√®√ø");
	format(str_send, sizeof(str_send), "[√è√∞√•√¨√®√≥√¨] {cccc66}%s: %s", GetName(playerid), str_mes);
	foreach(new i:Player) {
		if(!pData[i][p_premium]) continue;
		SCM(i, 0xB22222FF, str_send);
	} return 1;
}
CMD:prodbuy(playerid, params[]) {
	if(!prodworker_status[playerid]) return SCM(playerid, COLOR_LIGHTGREY, "√Ç S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤ √Ç√ª √≠√• √∞√†√°√Æ√≤√†√•√≤√• √Ø√Æ √ß√†√™√†√ß√≥");
	if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √∞√†√°√Æ√∑√•√© √¨√†√∏√®√≠√• √§√´√ø √Ø√Æ√™√≥√Ø√™√® √Ø√∞√Æ√§√≥√™√≤√Æ√¢");
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 456) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √∞√†√°√Æ√∑√•√© √¨√†√∏√®√≠√• √§√´√ø √Ø√Æ√™√≥√Ø√™√® √Ø√∞√Æ√§√≥√™√≤√Æ√¢");
	if(GetVehicleDistanceFromPoint(GetPlayerVehicleID(playerid), -118.7, -320.2, 1.4) >= 20.0) return SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √Æ√™√Æ√´√Æ √Ø√∞√Æ√®√ß√¢√Æ√§√±√≤√¢√•√≠√≠√Æ√£√Æ √∂√•√µ√†");
	new param_prod;
	if(sscanf(params, "d", param_prod)) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /prodbuy [√™√Æ√´-√¢√Æ √Ø√∞√Æ√§√≥√™√≤√Æ√¢] (1 √∏√≤ = 25$)");
	if(param_prod < 1) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√¢√•√∞√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ");
	new str_gmtpr[40], f_prd_str[60], priceprod = param_prod * 25;
	if(pData[playerid][pCash] < priceprod) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Ø√Æ√™√≥√Ø√™√® √≤√†√™√Æ√£√Æ √™√Æ√´√®√∑√•√±√≤√¢√† √Ø√∞√Æ√§√≥√™√≤√Æ√¢");
	if(2000 <= prodwork_prods[playerid]) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √ß√†√£√∞√≥√¶√•√≠√Æ √¨√†√™√±√®√¨√†√´√º√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √Ø√∞√Æ√§√≥√™√≤√Æ√¢");
	if(2000 < prodwork_prods[playerid] + param_prod) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √™√≥√Ø√®√≤√º √±√≤√Æ√´√º√™√Æ √Ø√∞√Æ√§√≥√™√≤√Æ√¢");
	if(prods_factory < param_prod) return SCM(playerid, COLOR_LIGHTGREY, "√ç√† √±√™√´√†√§√• √∂√•√µ√† √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √Ø√∞√Æ√§√≥√™√≤√Æ√¢");
	Hook_GivePlayerMoney(playerid, -priceprod);
	format(str_gmtpr, 40, "~r~-%d$", priceprod);
	GameTextForPlayer(playerid, str_gmtpr, 3000, 1);
	prodwork_prods[playerid] += param_prod;
	DisablePlayerCheckpoint(playerid);
	prods_factory-=param_prod;
	new pq[70];
	mysql_format(mysql_Handle, pq, sizeof(pq), "UPDATE `otherfuncs` SET `prods_factory` = %d", prods_factory);
	mysql_tquery(mysql_Handle, pq);
	SetPlayerCheckpoint(playerid,BizInfo[prodwork_bizid[playerid]][EnterBiz][0], BizInfo[prodwork_bizid[playerid]][EnterBiz][1], BizInfo[prodwork_bizid[playerid]][EnterBiz][2], 4.5);
	format(f_prd_str, 60, "√Ñ√Æ√±√≤√†√¢√™√† √Ø√∞√Æ√§√≥√™√≤√Æ√¢\n"CYELLOW"√á√†√£√∞√≥√¶√•√≠√Æ: %d/2000", prodwork_prods[playerid]);
	UpdateDynamic3DTextLabelText(prodwork_3d[prodworker_vehicle[playerid]], 0xFF9900FF, f_prd_str);
	SCMF(playerid, COLOR_MAIN, "√Ç√ª √Ø√∞√®√Æ√°√∞√•√´√® "CYELLOW"%d √∏√≤ "CMAIN"√Ø√∞√Æ√§√≥√™√≤√Æ√¢ √ß√† %d$. √ç√Æ√¢√Æ√© √¨√•√≤√™√Æ√© √Æ√≤√¨√•√∑√•√≠√Æ √∞√†√±√Ø√Æ√´√Æ√¶√•√≠√®√• √≠√•√Æ√°√µ√Æ√§√®√¨√Æ√£√Æ √°√®√ß√≠√•√±√†", param_prod, priceprod);
	return SCM(playerid, COLOR_LITEBLUE, "√é√≤√Ø√∞√†√¢√´√ø√©√≤√•√±√º √≤√≥S√≠ √® √Ø√∞√ÆS√≠√©√≤√• √Ø√∞√Æ√§√≥√™√≤√ª "CGREY"(√™√Æ√¨√†√≠S√≠ /prodsell)");
}
CMD:prodsell(playerid, params[]) {
	if(!prodworker_status[playerid]) return SCM(playerid, COLOR_LIGHTGREY, "√Ç S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤ √Ç√ª √≠√• √∞√†√°√Æ√≤√†√•√≤√• √Ø√Æ √ß√†√™√†√ß√≥");
	if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √∞√†√°√Æ√∑√•√© √¨√†√∏√®√≠√• √§√´√ø √Ø√∞√ÆS√≠√¶√® √Ø√∞√Æ√§√≥√™√≤√Æ√¢");
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 456) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √∞√†√°√Æ√∑√•√© √¨√†√∏√®√≠√• √§√´√ø √Ø√∞√ÆS√≠√¶√® √Ø√∞√Æ√§√≥√™√≤√Æ√¢");
	if(GetVehicleDistanceFromPoint(GetPlayerVehicleID(playerid), BizInfo[prodwork_bizid[playerid]][EnterBiz][0], BizInfo[prodwork_bizid[playerid]][EnterBiz][1], BizInfo[prodwork_bizid[playerid]][EnterBiz][2]) >= 20.0) 
		return SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √¢√µ√ÆS√≠ √¢ √°√®√ß√≠√•√± √ß√†√™√†√ß√†");
	new param_prod, f_prd_str[60], str_prs[22];
	if(sscanf(params, "d", param_prod)) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /prodsell [√™√Æ√´-√¢√Æ √Ø√∞√Æ√§√≥√™√≤√Æ√¢]");
	if(param_prod < 1) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√¢√•√∞√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ");
	if(prodwork_prods[playerid] < param_prod) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √±√≤√Æ√´√º√™√Æ √Ø√∞√Æ√§√≥√™√≤√Æ√¢");
	if(10000 < BizInfo[prodwork_bizid[playerid]][bProd]) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √°√®√ß√≠√•√±√• √¨√†√™√±√®√¨√†√´√º√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √Ø√∞√Æ√§√≥√™√≤√Æ√¢");
	if(10000 < BizInfo[prodwork_bizid[playerid]][bProd] + param_prod) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √°√®√ß√≠√•√±√• √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √¨√•√±√≤√† √§√´√ø √≤√†√™√Æ√£√Æ √™√Æ√´√®√∑√•√±√≤√¢√† √Ø√∞√Æ√§√≥√™√≤√Æ√¢");
	if(BizInfo[prodwork_bizid[playerid]][bProdOrder] < param_prod) return SCM(playerid, COLOR_LIGHTGREY, "√Å√®√ß√≠√•√±√≥ √≠√• √≤√∞√•√°√≥√•√≤√±√ø √±√≤√Æ√´√º√™√Æ √Ø√∞√Æ√§√≥√™√≤√Æ√¢");
	prodwork_prods[playerid] -= param_prod;
	format(f_prd_str, 60, "√Ñ√Æ√±√≤√†√¢√™√† √Ø√∞√Æ√§√≥√™√≤√Æ√¢\n"CYELLOW"√á√†√£√∞√≥√¶√•√≠√Æ: %d/2000", prodwork_prods[playerid]);
	UpdateDynamic3DTextLabelText(prodwork_3d[prodworker_vehicle[playerid]], 0xFF9900FF, f_prd_str);
	Hook_GivePlayerMoney(playerid, BizInfo[prodwork_bizid[playerid]][bProdOrderPrice] * param_prod);
	BizInfo[prodwork_bizid[playerid]][bProd] += param_prod;
	BizInfo[prodwork_bizid[playerid]][bProdOrder] -= param_prod;
	format(str_prs, 22, "~g~+%d$", BizInfo[prodwork_bizid[playerid]][bProdOrderPrice] * param_prod);
	GameTextForPlayer(playerid, str_prs, 3000, 1);
	SCMF(playerid, COLOR_MAIN, "√Ç√ª √Ø√∞√ÆS√≠√´√® "CYELLOW"%d √∏√≤ "CMAIN"√°√®√ß√≠√•√±√≥ √® √ß√†√∞√†√°√Æ√≤√†√´√® "CMAIN"%d$", param_prod, BizInfo[prodwork_bizid[playerid]][bProdOrderPrice] * param_prod);
	new f_prd_query[128];
	mysql_format(mysql_Handle, f_prd_query, 128, "UPDATE `business` SET `bProd` = %d, `bProdOrder` = %d, `bProdOrderPrice` = %d WHERE `bID` = %d", BizInfo[prodwork_bizid[playerid]][bProd], 
	BizInfo[prodwork_bizid[playerid]][bProdOrder], BizInfo[prodwork_bizid[playerid]][bProdOrderPrice], prodwork_bizid[playerid]);
	if(BizInfo[prodwork_bizid[playerid]][bProdOrder] <= 0) {
		SCM(playerid, COLOR_YELLOW, "√á√†√™√†√ß √¢√ª√Ø√Æ√´√≠√•√≠. √ê√†√°√Æ√∑√®√© √§√•√≠√º √ß√†√¢√•√∞√∏√•√≠");
		SCM(playerid, COLOR_LITEBLUE, "√ç√†√¶√¨√®√≤√• {FFCD00}2"CLITEBLUE", √•√±√´√® √µ√Æ√≤√®√≤√• √¢√ß√ø√≤√º √•√π¬∏ √Æ√§√®√≠ √ß√†√™√†√ß");
		DestroyDynamic3DTextLabel(prodwork_3d[prodworker_vehicle[playerid]]);
		prodworker_vehicle[playerid] = -1;
		BizInfo[prodwork_bizid[playerid]][bProdOrderPrice] = 0;
		prodwork_bizid[playerid] = 0;
		prodwork_prods[playerid] = 0;
		prodworker_status[playerid] = false;
	}
	return mysql_tquery(mysql_Handle, f_prd_query);
}
CMD:phone(playerid) {
	if(IsPlayerInRangeOfPoint(playerid,200.0,1989.5132,1018.3199,994.8906)) 
		return SCM(playerid, COLOR_GREY, "√à√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√• √≤√•√´√•√¥√Æ√≠√† √¢ √Ω√≤√Æ√¨ √Ø√Æ√¨√•√π√•√≠√®√® √≠√•√¢√Æ√ß√¨√Æ√¶√≠√Æ");
	if(GetPVarInt(playerid, "takephone")) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√•√´√•√¥√Æ√≠√†");
	if(pData[playerid][pPnumber] == -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√•√´√•√¥√Æ√≠√†. √ä√≥√Ø√®√≤√º √•√£√Æ √¨√Æ√¶√≠√Æ √¢ 24-7");
	if(used_NRP_phone[playerid] == 0) {
		if(pData[playerid][pSex] == 1) MeAction(playerid, "√§√Æ√±√≤√†√´ √®√ß √™√†√∞√¨√†√≠√† √≤√•√´√•√¥√Æ√≠ "CCYAN"Samsung");
		else MeAction(playerid, "√§√Æ√±√≤√†√´√† √®√ß √™√†√∞√¨√†√≠√† √≤√•√´√•√¥√Æ√≠ "CCYAN"Samsung");
		SetPlayerChatBubble(playerid, "√Ñ√Æ√±√≤√†¬∏√≤ √≤√•√´√•√¥√Æ√≠", COLOR_PURPLE, 4.0, 5000);
		SCM(playerid, COLOR_ORANGE, "√ó√≤√Æ√°√ª √≥√°√∞√†√≤√º √≤√•√´√•√¥√Æ√≠, √¢√¢√•√§√®√≤√• √™√Æ√¨√†√≠√§√≥ √•√π¬∏ √∞√†√ß √®√´√® √≠√†√¶√¨√®√≤√• ESC");
		TogglePlayerControllable(playerid, 0);
		SelectTextDraw(playerid, 0x000000AA);
		used_NRP_phone[playerid] = 1;
		for(new i = 0; i < 28; i ++) TextDrawShowForPlayer(playerid, PHONETD[i]);
	}
	else {
		if(pData[playerid][pSex] == 1) MeAction(playerid, "√≥√°√∞√†√´ √¢ √™√†√∞√¨√†√≠ √≤√•√´√•√¥√Æ√≠ "CCYAN"Samsung");
		else MeAction(playerid, "√≥√°√∞√†√´√† √¢ √™√†√∞√¨√†√≠ √≤√•√´√•√¥√Æ√≠ "CCYAN"Samsung");
		SetPlayerChatBubble(playerid, "√ì√°√®√∞√†√•√≤ √≤√•√´√•√¥√Æ√≠", COLOR_PURPLE, 4.0, 5000);
		used_NRP_phone[playerid] = 0;
		CancelSelectTextDraw(playerid);
		TogglePlayerControllable(playerid, 1);
		for(new i = 0; i < 28; i ++) TextDrawHideForPlayer(playerid, PHONETD[i]);
	}
	return 1;
}

CMD:restart(playerid) {
	if(pData[playerid][pAdmin] < 7) return 1;
	return SPD(playerid, 4841, DIALOG_STYLE_INPUT, ""CERROR"√è√Æ√§√≤√¢√•√∞√¶√§√•√≠√®√•", ""CWHITE"√Ñ√´√ø √Ø√Æ√´√≥√∑√•√≠√®√ø √§√Æ√±√≤√≥√Ø√† √™ √Ω√≤√Æ√© √¥√≥√≠√™√∂√®√®,\n√¢√¢√•√§√®√≤√• √Ø√†√∞√Æ√´√º √∞√†√ß√∞√†√°√Æ√≤√∑√®√™√†:", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
}
CMD:tpcor(playerid, params[]) {
	if(pData[playerid][pAdmin] < 7) return 1;
	new Float:x, Float:z, Float:y;
	if(sscanf(params, "p<,>fff", x, y, z)) return SCM(playerid, COLOR_GREY, "Usar: /tpcor [X] [Y] [Z] (√∑√•√∞√•√ß √ß√†√Ø√ø√≤√≥√æ √®√´√® √Ø√∞√Æ√°√•√´)");
	SetPlayerPos(playerid, x, y, z);
	return SCMF(playerid, 0x00CC66FF, "√ä√Æ√Æ√∞√§√®√≠√†√≤√ª: (x) %f (y) %f (z) %f", x, y, z);
}
stock teleport_player_to_bloody(playerid) {
	SetPlayerInterior(playerid, 15);
	SetPlayerVirtualWorld(playerid, 10);
	PutPlayerInVehicle(playerid, bloody_car[bloody_players], 0);
	enable_toggle[playerid] = true;
	SetCameraBehindPlayer(playerid);
}
stock create_carsbloody(id_car) {
	bloody_car[1] = CreateVehicleEx(id_car, -1361.83704, 934.19202, 1036.16895, 0.00, 114, 0, CAR_SPAWN);
	bloody_car[2] = CreateVehicleEx(id_car, -1353.80103, 935.78101, 1036.19397, 0.00, 114, 0, CAR_SPAWN);
	bloody_car[3] = CreateVehicleEx(id_car, -1346.45496, 937.09399, 1036.20801, 10, 114, 0, CAR_SPAWN);
	bloody_car[4] = CreateVehicleEx(id_car, -1337.93506, 939.21399, 1036.22998, 10, 114, 0, CAR_SPAWN);
	bloody_car[5] = CreateVehicleEx(id_car, -1313.55396, 950.90601, 1036.37903, 39.996, 114, 0, CAR_SPAWN);
	bloody_car[6] = CreateVehicleEx(id_car, -1329.60095, 941.99402, 1036.26196, 30.004, 114, 0, CAR_SPAWN);
	bloody_car[7] = CreateVehicleEx(id_car, -1305.97302, 956.12299, 1036.45496, 59.991, 114, 0, CAR_SPAWN);
	bloody_car[8] = CreateVehicleEx(id_car, -1298.51794, 961.11298, 1036.52795, 59.991, 114, 0, CAR_SPAWN);
	bloody_car[9] = CreateVehicleEx(id_car, -1291.46997, 968.242, 1036.62695, 49.009, 114, 0, CAR_SPAWN);
	bloody_car[10] = CreateVehicleEx(id_car, -1284.12805, 1011.17297, 1037.33704, 109.979, 114, 0, CAR_SPAWN);
	bloody_car[11] = CreateVehicleEx(id_car, -1302.95105, 1034.45801, 1037.75903, 139.976, 114, 0, CAR_SPAWN);
	bloody_car[12] = CreateVehicleEx(id_car, -1499.08496, 960.57599, 1036.87402, 329.024, 43, 0, CAR_SPAWN);
	bloody_car[13] = CreateVehicleEx(id_car, -1311.34497, 1039.72095, 1037.85596, 139.971, 114, 0, CAR_SPAWN);
	bloody_car[14] = CreateVehicleEx(id_car, -1320.23096, 1045.07202, 1037.95801, 153.971, 114, 0, CAR_SPAWN);
	bloody_car[15] = CreateVehicleEx(id_car, -1329.97205, 1049.69397, 1038.052, 159.972, 114, 0, CAR_SPAWN);
	bloody_car[16] = CreateVehicleEx(id_car, -1337.51904, 1051.52502, 1038.10095, 159.966, 114, 0, CAR_SPAWN);
	bloody_car[17] = CreateVehicleEx(id_car, -1345.41101, 1054.276, 1038.15698, 159.966, 114, 0, CAR_SPAWN);
	bloody_car[18] = CreateVehicleEx(id_car, -1487.12598, 951.35547, 1036.69897, 329.019, 43, 0, CAR_SPAWN);
	bloody_car[19] = CreateVehicleEx(id_car, -1493.625, 955.55273, 1036.77405, 329.019, 43, 0, CAR_SPAWN);
	bloody_car[20] = CreateVehicleEx(id_car, -1515.15295, 990.38397, 1037.39697, 290.186, 43, 0, CAR_SPAWN);
	bloody_car[21] = CreateVehicleEx(id_car, -1503.86719, 965.76855, 1036.96594, 301.811, 43, 0, CAR_SPAWN);
	bloody_car[22] = CreateVehicleEx(id_car, -1507.26562, 971.3418, 1037.06897, 301.811, 43, 0, CAR_SPAWN);
	bloody_car[23] = CreateVehicleEx(id_car, -1510.68164, 977.25586, 1037.17505, 301.811, 43, 0, CAR_SPAWN);
	bloody_car[24] = CreateVehicleEx(id_car, -1513.60156, 983.67578, 1037.27795, 290.182, 43, 0, CAR_SPAWN);
	bloody_car[25] = CreateVehicleEx(id_car, -1479.01599, 1044.27698, 1038.229, 209.531, 43, 0, CAR_SPAWN);
	bloody_car[26] = CreateVehicleEx(id_car, -1515.49597, 997.57098, 1037.51294, 264.814, 43, 0, CAR_SPAWN);
	bloody_car[27] = CreateVehicleEx(id_car, -1514.2832, 1004.35742, 1037.61096, 264.814, 43, 0, CAR_SPAWN);
	bloody_car[28] = CreateVehicleEx(id_car, -1512.35449, 1011.00977, 1037.729, 249.543, 43, 0, CAR_SPAWN);
	bloody_car[29] = CreateVehicleEx(id_car, -1508.93262, 1017.63477, 1037.828, 244.528, 43, 0, CAR_SPAWN);
	bloody_car[30] = CreateVehicleEx(id_car, -1505.41699, 1022.60547, 1037.90906, 244.528, 43, 0, CAR_SPAWN);
	bloody_car[31] = CreateVehicleEx(id_car, -1501.01697, 1028.80798, 1038.00598, 239.532, 43, 0, CAR_SPAWN);
	bloody_car[32] = CreateVehicleEx(id_car, -1496.81494, 1033.65796, 1038.07898, 219.468, 43, 0, CAR_SPAWN);
	bloody_car[33] = CreateVehicleEx(id_car, -1490.97803, 1037.69202, 1038.13904, 209.531, 43, 0, CAR_SPAWN);
	bloody_car[34] = CreateVehicleEx(id_car, -1484.12793, 1040.93066, 1038.18005, 209.531, 43, 0, CAR_SPAWN);
	bloody_car[35] = CreateVehicleEx(id_car, -1474.03503, 1047.63696, 1038.27295, 209.531, 43, 0, CAR_SPAWN);
	bloody_car[36] = CreateVehicleEx(id_car, -1447.49695, 1055.96497, 1038.36206, 189.469, 43, 0, CAR_SPAWN);
	bloody_car[37] = CreateVehicleEx(id_car, -1467.42102, 1049.88098, 1038.29504, 189.465, 43, 0, CAR_SPAWN);
	bloody_car[38] = CreateVehicleEx(id_car, -1460.81201, 1052.38794, 1038.32605, 189.465, 43, 0, CAR_SPAWN);
	bloody_car[39] = CreateVehicleEx(id_car, -1453.72205, 1054.55103, 1038.34595, 189.465, 43, 0, CAR_SPAWN);
	bloody_car[40] = CreateVehicleEx(id_car, -1441.12695, 1056.79297, 1038.37, 189.535, 43, 0, CAR_SPAWN);
	bloody_car[41] = CreateVehicleEx(id_car, -1434.68298, 1057.22302, 1038.36304, 189.531, 43, 0, CAR_SPAWN);
	bloody_car[42] = CreateVehicleEx(id_car, -1427.979, 1057.74402, 1038.35901, 189.531, 43, 0, CAR_SPAWN);
	bloody_car[43] = CreateVehicleEx(id_car, -1421.45605, 1057.97803, 1038.35498, 179.531, 43, 0, CAR_SPAWN);
	bloody_car[44] = CreateVehicleEx(id_car, -1409.47205, 1058.25195, 1038.33606, 179.528, 43, 0, CAR_SPAWN);
	bloody_car[45] = CreateVehicleEx(id_car, -1415.3252, 1058.00391, 1038.34204, 179.522, 43, 0, CAR_SPAWN);
	bloody_car[46] = CreateVehicleEx(id_car, -1403.32397, 1058.51697, 1038.32996, 179.522, 43, 0, CAR_SPAWN);
	bloody_car[47] = CreateVehicleEx(id_car, -1355.40405, 1055.95105, 1038.203, 169.034, 114, 0, CAR_SPAWN);
	bloody_car[48] = CreateVehicleEx(id_car, -1364.97205, 1057.23901, 1038.24304, 169.03, 114, 0, CAR_SPAWN);
	bloody_car[49] = CreateVehicleEx(id_car, -1374.15698, 1057.69495, 1038.271, 179.97, 114, 0, CAR_SPAWN);
	bloody_car[50] = CreateVehicleEx(id_car, -1382.33301, 1057.96594, 1038.28503, 179.967, 114, 0, CAR_SPAWN);
	bloody_car[51] = CreateVehicleEx(id_car, -1389.28198, 1058.26599, 1038.302, 179.967, 114, 0, CAR_SPAWN);
	bloody_car[52] = CreateVehicleEx(id_car, -1397.16699, 1058.20605, 1038.31396, 179.967, 114, 0, CAR_SPAWN);
	bloody_car[53] = CreateVehicleEx(id_car, -1295.16895, 1027.48999, 1037.62695, 134.015, 114, 0, CAR_SPAWN);
	bloody_car[54] = CreateVehicleEx(id_car, -1288.53699, 1019.521, 1037.48596, 119.98, 114, 0, CAR_SPAWN);
	bloody_car[55] = CreateVehicleEx(id_car, -1281.26501, 995.5, 1037.06494, 89.022, 114, 0, CAR_SPAWN);
	bloody_car[56] = CreateVehicleEx(id_car, -1282.10803, 1003.82001, 1037.20605, 109.979, 114, 0, CAR_SPAWN);
	bloody_car[57] = CreateVehicleEx(id_car, -1281.39404, 987.992, 1036.94897, 89.017, 114, 0, CAR_SPAWN);
	bloody_car[58] = CreateVehicleEx(id_car, -1285.99402, 975.19702, 1036.745, 49.005, 114, 0, CAR_SPAWN);
	bloody_car[59] = CreateVehicleEx(id_car, -1283.67297, 981.07397, 1036.82703, 49.005, 114, 0, CAR_SPAWN);
	bloody_car[60] = CreateVehicleEx(id_car, -1320.9541, 945.1377, 1036.30005, 30.004, 114, 0, CAR_SPAWN);

	for(new i = 0, ps = GetVehiclePoolSize(); i <= ps; i++) 
		if(i >= bloody_car[1] && i <= bloody_car[60]) LinkVehicleToInterior(i, 15), SetVehicleVirtualWorld(i, 10);
}
stock show_bloodyring_dialog(playerid) {
	SPD(playerid, 7451, DIALOG_STYLE_INPUT, "{009966}√ê√•√£√®√±√≤√∞√†√∂√®√ø √≠√† ¬´√ä√∞√Æ√¢√†√¢√Æ√• √™√Æ√´√º√∂√Æ¬ª", "\
	√ñ√•√´√º√æ √Ω√≤√Æ√© √®√£√∞√ª √ø√¢√´√ø√•√≤√±√ø √±√°√Æ√∞ √™√∞√†√±√≠√ª√µ √¨√•√≤√Æ√™, √Ø√•√∞√•√§√¢√®√£√†√ø√±√º √≠√† √†√¢√≤√Æ√¨√Æ√°√®√´√•.\n\
	√á√† 1 √¨√•√≤√™√≥ √¢√ª √Ø√Æ√´√≥√∑√†√•√≤√• + 15 √±√•√™√≥√≠√§ √™ √±√¢√Æ√•√¨√≥ √¢√∞√•√¨√•√≠√®.\n\
	√ä√Æ√£S√≠ √¢√∞√•√¨√ø √ß√†√™√Æ√≠√∑√®√≤√±√ø, √†√¢√≤√Æ√¨√Æ√°√®√´√º √≠√†√∑√®√≠√†√•√≤ √≤√•√∞√ø√≤√º √±√¢√Æ√æ √Ø√∞√Æ√∑√≠√Æ√±√≤√º, √Ø√Æ√±√´√•\n\
	√∑√•√£√Æ √¢√ß√∞√ª√¢√†√•√≤√±√ø √® √¢√ª √¢√ª√°√ª√¢√†√•√≤√• √®√ß √®√£√∞√ª.\n\
	√í√†√™√¶√• √¨√Æ√¶√≠√Æ √∞√•√¨√Æ√≠√≤√®√∞√Æ√¢√†√≤√º √†√¢√≤√Æ√¨√Æ√°√®√´√º, √±√Æ√°√®√∞√†√ø √¨√•√≤√™√® √± √£√†√•√∑√≠√ª√¨√® √™√´√æ√∑√†√¨√®.\n\
	√é√≠√® √Ø√Æ√ø√¢√´√ø√æ√≤√±√ø √∞√†√ß √¢ 30 √±√•√™√≥√≠√§.\n\
	√è√Æ√°√•√¶SNo √Ø√Æ√±√´√•√§√≠√®√© √Æ√±√≤√†√¢√∏√®√©√±√ø √®√£√∞√Æ√™ √® √Ø√Æ√´√≥√∑√†√•√≤ 50%% √Æ√≤ √±√≤√†√¢√Æ√™ √®√£√∞√Æ√™√Æ√¢.\n\
	√Ö√±√´√® √®√£√∞√† √§√´√®√≤√±√ø √°√Æ√´√•√• 5-√≤√® √¨√®√≠√≥√≤, √¢√±√• √†√¢√≤√Æ√¨√Æ√°√®√´√® √≠√†√∑√®√≠√†√æ√≤ √´√Æ√¨√†√≤√º√±√ø.\n\n\
	"CWHITE"√å√†√™√±√®√¨√†√´√º√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √®√£√∞√Æ√™√Æ√¢ - {6699ff}60 "CWHITE"√∑√•√´√Æ√¢√•√™.\n\
	√ó√≤√Æ√°√ª √Ø√∞√®√≠√ø√≤√º √≥√∑√†√±√≤√®√•, √±√§√•√´√†√©√≤√• √§√•√≠√•√¶√≠√≥√æ √±√≤√†√¢√™√≥ √Æ√≤ "CPALEGREEN"3000$ "CWHITE"√§√Æ "CPALEGREEN"100000$"CWHITE".", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
	return 1;
}
CMD:gotp(playerid) {
	if(!tp_set) return SCM(playerid, COLOR_LIGHTGREY, "√î√≥√≠√™√∂√®√ø √Æ√≤√™√´√æ√∑√•√≠√† √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√Æ√¨");
	if(is_salonsee[playerid]) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Ω√≤√≥ √™√Æ√¨√†√≠√§√≥ √¢ S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤");
	if(GetPVarInt(playerid, "loader_job") == 1) return SCM(playerid, COLOR_GREY, "√Ç√†√¨ √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √ß√†√¢√•√∞√∏√®√≤√º √¢√±√• √≠√†√∑√†√≤√ª√• √∞√†√°√Æ√≤√ª √® √§√•√©√±√≤√¢√®√ø");
    if(bloody_en[playerid]) return SCM(playerid, COLOR_GREY, "√Ç√†√¨ √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √ß√†√¢√•√∞√∏√®√≤√º √¢√±√• √≠√†√∑√†√≤√ª√• √∞√†√°√Æ√≤√ª √® √§√•√©√±√≤√¢√®√ø");
	if(pData[playerid][pLowSkill] == 1 || pData[playerid][pHighSkill] == 1) return SCM(playerid, COLOR_GREY, "√Ç√†√¨ √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √ß√†√¢√•√∞√∏√®√≤√º √¢√±√• √≠√†√∑√†√≤√ª√• √∞√†√°√Æ√≤√ª √® √§√•√©√±√≤√¢√®√ø");
	if(pData[playerid][pJailTime] > 0 || pData[playerid][pPrisonTime] > 0) return SCM(playerid, COLOR_LIGHTGREY, "√Ä√∞√•√±√≤√Æ√¢√†√≠√≠√ª√¨ √ß√†√Ø√∞√•√π√•√≠√Æ √≥√∑√†√±√≤√¢√Æ√¢√†√≤√º √¢ √¨√•√∞√Æ√Ø√∞√®√ø√≤√®√ø√µ");
	if(GetPVarInt(playerid, "PlayerCuffed")) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √≤√•√´√•√Ø√Æ√∞√≤√®√∞√Æ√¢√†√≤√º√±√ø √≠√† √¨√•√∞√Æ√Ø√∞√®√ø√≤√®√• √¢ √≠√†√∞√≥√∑√≠√®√™√†√µ");
    if(GetPlayerInterior(playerid) != 0) return SCM(playerid, COLOR_GREY, "√Ç√ª√©√§√®√≤√• √®√ß √Ø√Æ√¨√•√π√•√≠√®√ø");
	return SPD(playerid, 944, DIALOG_STYLE_MSGBOX, "{99ccff}√í√•√´√•√Ø√Æ√∞√≤√†√∂√®√ø", ""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √Ø√Æ√Ø√†√±√≤√º √≠√† √¨√•√±√≤√Æ √Ø√∞√Æ√¢√•√§√•√≠√®√ø √¨√•√∞√Æ√Ø√∞√®√ø√≤√®√ø?\n{FFCD00}√è√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√•: √¢√±¬∏ √Ç√†√∏√• √Æ√∞√≥√¶√®√• √°√≥√§√•√≤ √™√Æ√≠√¥√®√±√™√Æ√¢√†√≠√Æ.", "S√≠", "No");
}
CMD:robcar(playerid) {
	if(!IsAGang(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √±√Æ√±√≤√Æ√®√≤√• √¢ √°√†√≠√§√•");
	new bool: terr_status;
	for(new i = 0; i < sizeof(GZInfo); i ++) {
		if(!PlayerToKvadrat(playerid, GZInfo[i][gCoords][0], GZInfo[i][gCoords][1], GZInfo[i][gCoords][2], GZInfo[i][gCoords][3])) continue;
		if(pData[playerid][pMember] != GZInfo[i][gFrakVlad]) continue;
		new vehid = GetPlayerVehicleID(playerid);
		if(!Megaphone(vehid) || IsAPlane(vehid) || IsABoat(vehid)) return SCM(playerid, COLOR_GREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √¨√†√∏√®√≠√•, √™√Æ√≤√Æ√∞√≥√æ √¨√Æ√¶√≠√Æ √Æ√£√∞√†√°√®√≤√º");
		new gmt_text[20], summa = random(2000), str_rob[70], Float: rb_x, Float: rb_y, Float: rb_z;
        if(robcar[vehid]) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√† √¨√†√∏√®√≠√† √≥√¶√• √°√ª√´√† √Æ√£√∞√†√°√´√•√≠√†");
        SCMF(playerid, 0x6AB1FFFF, "√Ç√ª √Æ√£√∞√†√°√®√´√® √¨√†√∏√®√≠√≥ √≠√† %d$. √Ç√†√∏√† √ß√†√™√Æ√≠√Æ√Ø√Æ√±√´√≥√∏√≠√Æ√±√≤√º √Ø√Æ√≠√®√¶√•√≠√†", summa);
        format(str_rob, sizeof(str_rob), "√å√†√∏√®√≠√† √Æ√£√∞√†√°√´√•√≠√† √°√†√≠√§√Æ√©:\n%s", GetGangName(pData[playerid][pMember]));
        carom[vehid] = Create3DTextLabel(str_rob, 0xFF9900AA, 0.0, 0.0, 999.9, 20.0, 0, 1);
        Attach3DTextLabelToVehicle(carom[vehid], vehid, 0.0, 0.0, 1.25);
    	Hook_GivePlayerMoney(playerid, summa);
    	format(gmt_text, 20, "~g~+%d$", summa);
        GameTextForPlayer(playerid, gmt_text, 3000, 1);
    	GetPlayerPos(playerid, rb_x, rb_y, rb_z);
    	SetPlayerPosFindZ(playerid, rb_x, rb_y, rb_z);
    	SetVehicleParamsCarDoors(vehid, 1, 1, 1, 1);
        pData[playerid][pZakonp] -= 2;
        UpdatePlayerData(playerid, "pZakonp", pData[playerid][pZakonp]);
        robcar[vehid] = true;
        terr_status = true;
	}
	if(!terr_status) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √≠√† √≤√•√∞√∞√®√≤√Æ√∞√®√® √±√¢√Æ√•√© √°√†√≠√§√ª");
	return 1;
}
CMD:revoke(playerid) {
	if(!GetPVarInt(playerid, "cancel_act")) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √†√™√≤√®√¢√≠√ª√µ √Ø√∞√•√§√´√Æ√¶√•√≠√®√©");
	new id_offerer = GetPVarInt(playerid, "cancel_act_id");
	if(pData[playerid][pSex] == 1) SCMF(id_offerer, COLOR_ERROR, "%s √Æ√≤√Æ√ß√¢√†√´ √±√¢√Æ¬∏ √Ø√∞√•√§√´√Æ√¶√•√≠√®√•", GetName(playerid));
	else SCMF(id_offerer, COLOR_ERROR, "%s √Æ√≤√Æ√ß√¢√†√´√† √±√¢√Æ¬∏ √Ø√∞√•√§√´√Æ√¶√•√≠√®√•", GetName(playerid));
	DeletePVar(playerid, "cancel_act"), DeletePVar(playerid, "cancel_act_id");
    DeletePVar(id_offerer, "offer_SELLMYFLAT");
    DeletePVar(id_offerer, "SELLMYFLAT_targetid");
    DeletePVar(id_offerer, "SELLMYFLAT_price");
	DeletePVar(id_offerer, "offer_CSEX");
	DeletePVar(id_offerer, "CSEX_targetid");
	DeletePVar(id_offerer, "CSEX_price");
    SetPVarInt(id_offerer, "ProposeOffer", 999);
    SetPVarInt(id_offerer, "offer", 9999);
    SetPVarInt(id_offerer, "sellerbiz", 999);
    DeletePVar(id_offerer, "bizcost");
    DeletePVar(id_offerer, "Player");
    SetPVarInt(id_offerer, "CarOffer", 999);
    DeletePVar(id_offerer, "CarPrice");
    DeletePVar(id_offerer, "CarNum");
    SetPVarInt(id_offerer, "MarryWitness", 999);
    DeletePVar(id_offerer, "RepairPrice");
    SetPVarInt(id_offerer, "RepairOffer", 999);
    SetPVarInt(id_offerer, "MarryWitnessOffer", 999);
    SetPVarInt(id_offerer, "hProdaet", 999);
    DeletePVar(id_offerer, "hCena");
    SetPVarInt(id_offerer, "RefillOffer", 999);
    DeletePVar(id_offerer, "RefillPrice");
    SetPVarInt(id_offerer, "TicketOffer", 999);
    DeletePVar(id_offerer, "TicketMoney");
    SetPVarInt(id_offerer, "ZoneOffer", 999);
    DeletePVar(id_offerer, "ZonePrice");
    DeletePVar(id_offerer, "sellzone");
	SetPVarInt(id_offerer, "LiveOfferls", 999);
	DeletePVar(id_offerer, "offer_SELLGUN");
    DeletePVar(id_offerer, "SELLGUN_targetid");
	DeletePVar(id_offerer, "SELLGUN_gunid");
	DeletePVar(id_offerer, "SELLGUN_ammos");
	DeletePVar(id_offerer, "SELLGUN_price");
	DeletePVar(id_offerer, "SELLDRUGS_targetid");
	DeletePVar(id_offerer, "SELLDRUGS_count");
	DeletePVar(id_offerer, "offer_SELLDRUGS");
	DeletePVar(id_offerer, "PASS_targetid");
	DeletePVar(id_offerer, "offer_PASS");
	DeletePVar(id_offerer, "ARMY_targetid");
	DeletePVar(id_offerer, "offer_ARMY");
	DeletePVar(id_offerer, "MED_targetid");
	DeletePVar(id_offerer, "offer_MED");
	DeletePVar(id_offerer, "LIC_targetid");
	DeletePVar(id_offerer, "offer_LIC");
	DeletePVar(id_offerer, "SKILL_targetid");
	DeletePVar(id_offerer, "offer_SKILL");
	DeletePVar(id_offerer, "newlead_offer");
	DeletePVar(id_offerer, "sim_offer");
	DeletePVar(id_offerer, "SIM_seller");
	DeletePVar(id_offerer, "SIM_price");
	DeletePVar(id_offerer, "csim_offer");
	DeletePVar(id_offerer, "√ëSIM_seller");
	DeletePVar(id_offerer, "CSIM_surcharge");
	SetPVarInt(id_offerer, "KostiName", 999);
	DeletePVar(id_offerer, "KostiMoney");
	DeletePVar(id_offerer, "BetType");
	DeletePVar(id_offerer, "ProverkaDice");
	DeletePVar(id_offerer, "ZapretDice");
	return SCMF(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√Æ√ß√¢√†√´√® √±√¢√Æ¬∏ √Ø√∞√•√§√´√Æ√¶√•√≠√®√• √§√´√ø %s", GetName(id_offerer));
}
CMD:usedrugs(playerid, params[]) {
	if(drugs_time[playerid] > 0) return SCMF(playerid, COLOR_LIGHTGREY, "√Ç√ª √±√¨√Æ√¶√•√≤√• √≥√Ø√Æ√≤√∞√•√°√®√≤√º √≠√†√∞√™√Æ√≤√®√™√® √∑√•√∞√•√ß {99cc33}%d √±√•√™", drugs_time[playerid]);
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /usedrugs [√™√Æ√´-√¢√Æ √£√∞√†√¨√¨]");
	if(params[0] < 1) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§√•√≠√Æ √≠√•√¢√•√∞√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √£√∞√†√¨√¨");
	if(pData[playerid][pDrugs] < params[0]) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √±√≤√Æ√´√º√™√Æ √£√∞√†√¨√¨");
	if(params[0] > 10) return SCM(playerid, COLOR_LIGHTGREY, "√å√†√™√±√®√¨√†√´√º√≠√†√ø √§√Æ√ß√†: 10 √£√∞√†√¨√¨");
	new gdr_str[12], Float: c_health;
	if(pData[playerid][pSex] == 1)
	{
		format(string, 128, "%s √≥√Ø√Æ√≤√∞√•√°√®√´ "CLITEBLUE"%d √£ "CPURPLE"√≠√†√∞√™√Æ√≤√®√™√Æ√¢", GetName(playerid), params[0]);
		SetPlayerChatBubble(playerid, "√≥√Ø√Æ√≤√∞√•√°√®√´ √≠√†√∞√™√Æ√≤√®√™√®", COLOR_PURPLE, 30.0, 10000);
	}
	else
	{
		format(string, 128, "%s √≥√Ø√Æ√≤√∞√•√°√®√´√† "CLITEBLUE"%d √£ "CPURPLE"√≠√†√∞√™√Æ√≤√®√™√Æ√¢", GetName(playerid), params[0]);
		SetPlayerChatBubble(playerid, "√≥√Ø√Æ√≤√∞√•√°√®√´√† √≠√†√∞√™√Æ√≤√®√™√®", COLOR_PURPLE, 30.0, 10000);
	}
	GetPlayerHealth(playerid, c_health);

	switch(params[0])
	{
		case 1..3: {
			SetPlayerHealth(playerid, c_health + 5.0);
			SetPlayerDrunkLevel(playerid, 1500);
			SetPlayerWeather(playerid, -84);
			drugs_time[playerid] = 5;
		}
		case 4..6: {
			SetPlayerHealth(playerid, c_health + 20.0);
			SetPlayerDrunkLevel(playerid, 4000);
			SetPlayerWeather(playerid, -84);
			drugs_time[playerid] = 10;
		}
		case 7..10: {
			SetPlayerHealth(playerid, c_health + 35.0);
			SetPlayerDrunkLevel(playerid, 7000);
			SetPlayerWeather(playerid, -68);
			drugs_time[playerid] = 20;
		}
	}
	if(c_health >= 100.0) 
		SetPlayerHealth(playerid, 100.0);

	SetPlayerTime(playerid, 6, 0);

	pData[playerid][pDrugs] -= params[0];
	UpdatePlayerData(playerid, "pDrugs", pData[playerid][pDrugs]);
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_SMOKE_CIGGY);
	
	format(gdr_str, 12, "~y~-%i g", params[0]);
	GameTextForPlayer(playerid, gdr_str, 3000, 1);
	return ProxDetector(30.0, playerid, string, COLOR_PURPLE);
}
CMD:changeservername(playerid) {
	if(!IsAFull(playerid)) return 1;
	return SPD(playerid, 917, DIALOG_STYLE_INPUT, "{99cc33}√ë√¨√•√≠√† √≠√†√ß√¢√†√≠√®√ø √±√•√∞√¢√•√∞√†", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¢√Æ√• √≠√†√ß√¢√†√≠√®√• √§√´√ø √±√•√∞√¢√•√∞√† √¢ √Ø√Æ√´√• √≠√®√¶√•:\n√é√≠√Æ √°√≥√§√•√≤ √≥√±√≤√†√≠√Æ√¢√´√•√≠√Æ √¢ 'hostname' √Ø√Æ√´√• √±√•√∞√¢√•√∞√†", "√É√Æ√≤√Æ√¢√Æ", "Cerrar");
}
CMD:changesex(playerid, params[]) {
	if(!IsAMedic(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √±√Æ√±√≤√Æ√®√≤√• √¢ √¨√®√≠√®√±√≤√•√∞√±√≤√¢√• √ß√§√∞√†√¢√Æ√Æ√µ√∞√†√≠√•√≠√®√ø");
	if(!IsPlayerInRangeOfPoint(playerid, 75.0, 1192.2051, -1313.2767, 1584.9719) && 
		!IsPlayerInRangeOfPoint(playerid, 75.0, 1508.6653,-1802.1176,2982.6953)) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√Æ√°√µ√Æ√§√®√¨√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √Ø√Æ√¨√•√π√•√≠√®√® √°√Æ√´√º√≠√®√∂√ª");
	if(GetPlayerVirtualWorld(playerid) != 1 && GetPlayerVirtualWorld(playerid) != 2 && GetPlayerVirtualWorld(playerid) != 3) 
		return SCM(playerid, COLOR_GREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √Ø√Æ√¨√•√π√•√≠√®√® √°√Æ√´√º√≠√®√∂√ª");
	if(GetPVarInt(playerid, "cancel_act")) return SCM(playerid, COLOR_LIGHTGREY, "√Ñ√´√ø √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√ø √™√Æ√¨√†√≠√§√ª √Ç√†√¨ √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √Æ√≤√Æ√ß√¢√†√≤√º √±√¢√Æ¬∏ √Ø√∞√•√§√ª√§√≥√π√•√• √Ø√∞√•√§√´√Æ√¶√•√≠√®√• "CBLUE"(/revoke)");	
	new to_player, price;
	if(sscanf(params, "dd", to_player, price)) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /changesex [id √®√£√∞√Æ√™√†] [√∂√•√≠√† √ß√† √Æ√Ø√•√∞√†√∂√®√æ]");
	if(playerid == to_player) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Ø√∞√Æ√¢√Æ√§√®√≤√º √Æ√Ø√•√∞√†√∂√®√® √± √±√Æ√°√Æ√©");
	if(price < 1 || price > 7000) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§√•√≠√† √≠√•√§√Æ√Ø√≥√±√≤√®√¨√†√ø √∂√•√≠√†. √Ñ√Æ√±√≤√≥√Ø√≠√Æ √Æ√≤ 1$ √§√Æ 7000$");
	if(!IsPlayerConnected(to_player)) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(!IsPlayerInRangeOfPoint(to_player, 75.0, 1192.2051, -1313.2767, 1584.9719) && 
		!IsPlayerInRangeOfPoint(to_player, 75.0, 1508.6653,-1802.1176,2982.6953)) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √® √Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √Æ√§√≠√Æ√© √°√Æ√´√º√≠√®√∂√•");
	if(GetPlayerVirtualWorld(to_player) != GetPlayerVirtualWorld(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √® √Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √Æ√§√≠√Æ√© √°√Æ√´√º√≠√®√∂√•");
	if(GetPVarInt(to_player, "offer") != 9999) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™√≥ √≥√¶√• √±√§√•√´√†√´√® √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √é√≠ √§√Æ√´√¶√•√≠ {00cc00}√Ø√∞√®√≠√ø√≤√º "CLIGHTGREY"√®√´√® "CERROR"√Æ√≤√¨√•√≠√®√≤√º "CLIGHTGREY"√•√£√Æ");
	if(pData[to_player][pCash] < price) return SCM(playerid, COLOR_LIGHTGREY, "√ì √®√£√∞√Æ√™√† No √≤√†√™√Æ√© √±√≥√¨√¨√ª √§√•√≠√•√£");
	if(!pTemp[to_player][pInHospital]) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √§√Æ√´√¶√•√≠ √≠√†√µ√Æ√§√®√≤√º√±√ø √≠√† √±√≤√†√∂√®√Æ√≠√†√∞√≠√Æ√¨ √´√•√∑√•√≠√®√® (√ß√†√≠√ø√≤√º √™√Æ√©√™√≥)");
	SCMF(playerid, COLOR_BLUE, "√Ç√ª √Ø√∞√•√§√´√Æ√¶√®√´√® %s √Ø√∞√Æ√©√≤√® √Æ√Ø√•√∞√†√∂√®√æ √Ø√Æ √±√¨√•√≠√• √Ø√Æ√´√† √ß√† {00cc00}%d$", GetName(to_player), price);
	SetPVarInt(playerid, "cancel_act", 1);
	SetPVarInt(playerid, "cancel_act_id", to_player);
	SCMF(to_player, COLOR_BLUE, "%s √Ø√∞√•√§√´√†√£√†√•√≤ √Ç√†√¨ √Ø√∞√Æ√©√≤√® √Æ√Ø√•√∞√†√∂√®√æ √Ø√Æ √±√¨√•√≠√• √Ø√Æ√´√† √ß√† %d$", GetName(playerid), price);
	SetPVarInt(to_player, "offer", 1);
	SetPVarInt(to_player, "offer_CSEX", 1);
	SetPVarInt(to_player, "CSEX_price", price);
	SetPVarInt(to_player, "CSEX_targetid", playerid);
	return SCM(to_player, -1, "√ç√†√¶√¨√®√≤√• "CMAIN"Y "CWHITE"√∑√≤√Æ√°√ª √±√Æ√£√´√†√±√®√≤√º√±√ø √®√´√® "CERROR"N "CWHITE"√§√´√ø √Æ√≤√™√†√ß√†");
}
CMD:changeskin(playerid, params[]) {
	if(!pData[playerid][pMember]) return SCM(playerid, COLOR_LIGHTGREY, "√ä√Æ√¨√†√≠S√≠ √§√Æ√±√≤√≥√Ø√≠√† √≤√Æ√´√º√™√Æ √§√´√ø 9 √∞√†√≠√£√Æ√¢ √® √´√®√§√•√∞√Æ√¢ √Æ√∞√£√†√≠√®√ß√†√∂√®√©");
	if(pData[playerid][pRank] < 9) return SCM(playerid, COLOR_LIGHTGREY, "√ä√Æ√¨√†√≠S√≠ √§√Æ√±√≤√≥√Ø√≠√† √≤√Æ√´√º√™√Æ √§√´√ø 9 √∞√†√≠√£√Æ√¢ √® √´√®√§√•√∞√Æ√¢ √Æ√∞√£√†√≠√®√ß√†√∂√®√©");
	if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /changeskin [id √®√£√∞√Æ√™√†]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(pData[playerid][pMember] != pData[params[0]][pMember]) return SCM(playerid, COLOR_LIGHTGREY, "S√≠√≠√≠√ª√© √®√£√∞√Æ√™ √≠√• √±√Æ√±√≤√Æ√®√≤ √¢ √Ç√†√∏√•√© √Æ√∞√£√†√≠√®√ß√†√∂√®√® (√®√´√® √Ø√Æ√§√∞√†√ß√§√•√´√•√≠√®√®)");
	new fractionid = pData[playerid][pMember] - 1;
	TextDrawShowForPlayer(playerid, chskin_box);
	SelectTextDraw(playerid, 0x3399FFAA);
	new name_pvar[16];
	for(new i = 0, skinid = 0; i < 16; i ++) {
		skinid = ChangeSkin[fractionid][i];
		if(!skinid) break;
		format(name_pvar, sizeof(name_pvar), "chskin_%d", i);
		SetPVarInt(playerid, name_pvar, skinid);
		PlayerTextDrawSetPreviewModel(playerid, chskin_td[playerid][i], skinid);
		PlayerTextDrawShow(playerid, chskin_td[playerid][i]);
	}
	SetPVarInt(playerid, "changed_skin_mode", 1);
	SetPVarInt(playerid, "actinplayerid", params[0]);
	return SetPVarInt(params[0], "pOfferFractionid", pData[playerid][pMember]);
}
CMD:invite(playerid, params[]) {
	if(!pData[playerid][pMember]) return SCM(playerid, COLOR_LIGHTGREY, "√ä√Æ√¨√†√≠S√≠ √§√Æ√±√≤√≥√Ø√≠√† √≤√Æ√´√º√™√Æ √§√´√ø 9 √∞√†√≠√£√Æ√¢ √® √´√®√§√•√∞√Æ√¢ √Æ√∞√£√†√≠√®√ß√†√∂√®√©");
	if(pData[playerid][pRank] < 9) return SCM(playerid, COLOR_LIGHTGREY, "√ä√Æ√¨√†√≠S√≠ √§√Æ√±√≤√≥√Ø√≠√† √≤√Æ√´√º√™√Æ √§√´√ø 9 √∞√†√≠√£√Æ√¢ √® √´√®√§√•√∞√Æ√¢ √Æ√∞√£√†√≠√®√ß√†√∂√®√©");
	if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /invite [id √®√£√∞√Æ√™√†]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(IsPlayerInAnyVehicle(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √≠√• √§√Æ√´√¶√•√≠ √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √≤√∞√†√≠√±√Ø√Æ√∞√≤√•");
	if(!IsAMafia(pData[playerid][pMember]) && !IsAGang(pData[playerid][pMember]) && pData[params[0]][pLevel] < 2) 
		return SCM(playerid, COLOR_LIGHTGREY, "√ì√∞√Æ√¢√•√≠√º √®√£√∞√Æ√™√† √§√Æ√´√¶√•√≠ √°√ª√≤√º √≠√• √¨√•√≠√º√∏√• 2-√£√Æ");
	if(pData[params[0]][pMember] > 0 || pData[params[0]][pLeader] > 0) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √≥√¶√• √£√§√•-√≤√Æ √±√Æ√±√≤√Æ√®√≤");
	if(pData[params[0]][pWarns] >= 1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √®√£√∞√Æ√™√† √®√¨√•√æ√≤√±√ø √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√ø");
	if(!ProxDetectorS(10.0, playerid, params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
	if(!pData[params[0]][pPassport]) return SCM(playerid, COLOR_LIGHTGREY, "√ì √®√£√∞√Æ√™√† No √Ø√†√±√Ø√Æ√∞√≤√†");
    if(GetPVarInt(playerid, "cancel_act")) return SCM(playerid, COLOR_GREY, "√Ç√ª √≥√¶√• √±√§√•√´√†√´√® √™√†√™√Æ√•-√≤√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √Ç√¢√•√§√®√≤√• "CBLUE"/revoke"CGREY", √∑√≤√Æ√°√ª √Æ√≤√Æ√ß√¢√†√≤√º √•√£√Æ");
    if(GetPVarInt(params[0], "offer") != 9999) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™√≥ √≥√¶√• √±√§√•√´√†√´√® √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √é√≠ √§√Æ√´√¶√•√≠ {00cc00}√Ø√∞√®√≠√ø√≤√º "CLIGHTGREY"√®√´√® "CERROR"√Æ√≤√¨√•√≠√®√≤√º "CLIGHTGREY"√•√£√Æ");
	string[0] = EOS;
	SCMF(playerid, COLOR_BLUE, "√Ç√ª √Ø√∞√•√§√´√Æ√¶√®√´√® %s √¢√±√≤√≥√Ø√®√≤√º √¢ √Æ√∞√£√†√≠√®√ß√†√∂√®√æ (√Ø√Æ√§√∞√†√ß√§√•√´√•√≠√®√•) %s", GetName(params[0]),GetMember[pData[playerid][pMember] - 1]);
	SetPVarInt(params[0], "pOfferFractionid", pData[playerid][pMember]);
	SetPVarInt(params[0],"Player",playerid);
    SetPVarInt(playerid, "cancel_act", 1); SetPVarInt(playerid, "cancel_act_id", params[0]);
	SetPVarInt(playerid,"actinplayerid",params[0]);
    SetPVarInt(params[0], "offer", 1);
    SCMF(params[0], COLOR_BLUE, "%s √Ø√∞√•√§√´√†√£√†√•√≤ √Ç√†√¨ √¢√±√≤√≥√Ø√®√≤√º √¢ √Æ√∞√£√†√≠√®√ß√†√∂√®√æ (√Ø√Æ√§√∞√†√ß√§√•√´√•√≠√®√•) %s", pData[playerid][pName],GetMember[pData[playerid][pMember] - 1]);
	return SCM(params[0], -1, "√ç√†√¶√¨√®√≤√• "CMAIN"Y "CWHITE"√∑√≤√Æ√°√ª √±√Æ√£√´√†√±√®√≤√º√±√ø √®√´√® "CERROR"N "CWHITE"√§√´√ø √Æ√≤√™√†√ß√†");
}
CMD:billcancel(playerid) {
	if(!pData[playerid][cancellation_bill]) return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± No √†√≠√≠√≥√´√®√∞√Æ√¢√†√≠√≠√ª√µ √°√®√´√°√Æ√∞√§√Æ√¢");
	new cancelbill_str[150]; format(cancelbill_str, sizeof cancelbill_str, ""CWHITE"√Å√®√´√°√Æ√∞√§, √™√Æ√≤√Æ√∞√ª√© √Ç√ª √†√∞√•√≠√§√Æ√¢√†√´√® √°√ª√´ √†√≠√≠√≥√´√®√∞√Æ√¢√†√≠.\n√è√∞√®√∑√®√≠√†: "CLITEBLUE"%s", pData[playerid][cancellation_bill_reason]);
	return SPD(playerid, 184, DIALOG_STYLE_MSGBOX, ""CORANGE"√à√≠√¥√Æ√∞√¨√†√∂√®√ø", cancelbill_str, "√ìS√≠√´√®√≤√º", "Cerrar");
}
CMD:unrent(playerid) {
	if(GetPVarInt(playerid, "veh_rent") == -1) return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± No √†√∞√•√≠√§√Æ√¢√†√≠√≠√Æ√£√Æ √≤√∞√†√≠√±√Ø√Æ√∞√≤√†");
	new veh_for_check;
	for(new i = 0, ps = GetVehiclePoolSize(); i <= ps; i++) {
		if(rentID[i] != playerid) continue;
		veh_for_check = i;
		if(i == af_carID[playerid] && af_load[playerid]) 
			RemoveCarFromTruckBody(playerid);
		if(i >= af_orig_truck[0] && i <= af_orig_truck[1]) 
			SetVehicleToRespawn(i);
		else DestroyVehicle(i);
		break;
	}
	if(!IsValidVehicle(veh_for_check)) {
		rentID[GetPVarInt(playerid, "veh_rent")] = -1;
		SetPVarInt(playerid, "veh_rent", -1);
	}
	af_carID[playerid] = 0;
	return SCM(playerid, COLOR_YELLOW, "√Ñ√Æ√£√Æ√¢√Æ√∞ √†√∞√•√≠√§√ª √≥√±√Ø√•√∏√≠√Æ √∞√†√±√≤√Æ√∞√£√≠√≥√≤");
}
CMD:uninvite(playerid, params[]) {
	if(pData[playerid][pAdmin] >= 3) {
		if(sscanf(params, "dS()[100]",params[0],params[1])) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /uninvite [id √®√£√∞√Æ√™√†] [√Ø√∞√®√∑√®√≠√† (√≠√•√Æ√°√ø√ß√†√≤√•√´√º√≠√Æ)]");
		if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
		if(!pData[params[0]][pMember]) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √≠√• √±√Æ√±√≤√Æ√®√≤ √¢ √Æ√∞√£√†√≠√®√ß√†√∂√®√®");
		if(pData[params[0]][pAdmMember] != 0) return SCM(playerid, COLOR_ERROR, "√à√£√∞√Æ√™ √ø√¢√´√ø√•√≤√±√ø √¢√∞√•√¨√•√≠√≠√ª√¨ √´√®√§√•√∞√Æ√¨ √Æ√∞√£√†√≠√®√ß√†√∂√®√®. √ì√¢√Æ√´√º√≠√•√≠√®√• √≠√•√¢√Æ√ß√¨√Æ√¶√≠√Æ");
		if(!strlen(params[1])) {
			format(string, 128, "[A] %s[%d] √≥√¢√Æ√´√®√´ %s[%d] √®√ß %s", GetName(playerid), playerid, GetName(params[0]), params[0], FractionInfo[pData[params[0]][pMember]][fName]);
			AdminMessage(COLOR_GREY, string);

			if(pData[playerid][pSex] == 1) format(string, 144, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s[%d] √≥√¢√Æ√´√®√´ √Ç√†√± √®√ß √Æ√∞√£√†√≠√®√ß√†√∂√®√® %s", pData[playerid][pName],playerid, FractionInfo[pData[params[0]][pMember]][fName]);
			else format(string, 144, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s[%d] √≥√¢√Æ√´√®√´√† √Ç√†√± √®√ß √Æ√∞√£√†√≠√®√ß√†√∂√®√® %s", pData[playerid][pName],playerid, FractionInfo[pData[params[0]][pMember]][fName]);
			SCM(params[0], COLOR_BLUE, string);
		}
		else {
			format(string, 128, "[A] %s[%d] √≥√¢√Æ√´√®√´ %s[%d] √®√ß %s. √è√∞√®√∑√®√≠√†: %s", GetName(playerid), playerid, GetName(params[0]), params[0], FractionInfo[pData[params[0]][pMember]][fName], params[1]);
			AdminMessage(COLOR_GREY, string);

			if(pData[playerid][pSex] == 1) format(string, 144, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s[%d] √≥√¢√Æ√´√®√´ √Ç√†√± √®√ß √Æ√∞√£√†√≠√®√ß√†√∂√®√® %s. √è√∞√®√∑√®√≠√†: %s", pData[playerid][pName],playerid, FractionInfo[pData[params[0]][pMember]][fName],params[1]);
			else format(string, 144, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s[%d] √≥√¢√Æ√´√®√´√† √Ç√†√± √®√ß √Æ√∞√£√†√≠√®√ß√†√∂√®√® %s. √è√∞√®√∑√®√≠√†: %s", pData[playerid][pName],playerid, FractionInfo[pData[params[0]][pMember]][fName],params[1]);
			SCM(params[0], COLOR_BLUE, string);
		}
		check_badgevalid(playerid);
		pData[params[0]][pMember] = 0;
		pData[params[0]][pRank] = 0;
		pData[params[0]][pLeader] = 0;
		pData[params[0]][pJob] = 0;
		pData[params[0]][pModel] = pData[params[0]][pChar];
		string[0] = EOS;
		mysql_format(mysql_Handle, string, 164, "UPDATE `accounts` SET `pMember` = '0', `pRank` = '0', `pModel` = %d, `pLeader` = '0', `pJob` = '0' WHERE `id` = %d", pData[params[0]][pChar], pData[params[0]][pID]);
		SetPlayerColor(params[0], FractionInfo[pData[params[0]][pMember]][fColor]);
		SetPlayerSkin(params[0], pData[params[0]][pChar]);
		return mysql_tquery(mysql_Handle, string);
	}
	if(pData[playerid][pRank] < 8) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√†√¨ √≠√•√§√Æ√±√≤√≥√Ø√≠√† S√≠√≠√≠√†√ø √¥√≥√≠√™√∂√®√ø");
	if(sscanf(params, "ds[100]",params[0],params[1])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /uninvite [id √®√£√∞√Æ√™√†] [√Ø√∞√®√∑√®√≠√†]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(params[0] == playerid) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Ω√≤√≥ √¥√≥√≠√™√∂√®√æ √≠√† √±√•√°√•");
	if(pData[params[0]][pMember] != pData[playerid][pMember]) 
		return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √≠√• √±√Æ√±√≤√Æ√®√≤ √¢ √Ω√≤√Æ√© √Æ√∞√£√†√≠√®√ß√†√∂√®√®");
	if(pData[params[0]][pAdmMember] != 0) return SCM(playerid, COLOR_ERROR, "√à√£√∞√Æ√™ √ø√¢√´√ø√•√≤√±√ø √¢√∞√•√¨√•√≠√≠√ª√¨ √´√®√§√•√∞√Æ√¨ √Æ√∞√£√†√≠√®√ß√†√∂√®√®. √ì√¢√Æ√´√º√≠√•√≠√®√• √≠√•√¢√Æ√ß√¨√Æ√¶√≠√Æ");
	if(pData[playerid][pLeader] <= 0 && pData[playerid][pRank] <= pData[params[0]][pRank]) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [079]");
	if(pData[playerid][pSex] == 1) format(string, 144, "%s[%d] √≥√¢√Æ√´√®√´ √Ç√†√± √®√ß √Æ√∞√£√†√≠√®√ß√†√∂√®√® %s. √è√∞√®√∑√®√≠√†: %s", pData[playerid][pName],playerid, FractionInfo[pData[params[0]][pMember]][fName],params[1]);
	else format(string, 144, "%s[%d] √≥√¢√Æ√´√®√´√† √Ç√†√± √®√ß √Æ√∞√£√†√≠√®√ß√†√∂√®√® %s. √è√∞√®√∑√®√≠√†: %s", pData[playerid][pName],playerid, FractionInfo[pData[params[0]][pMember]][fName],params[1]);
	SCM(params[0], COLOR_ERROR, string);
	format(string, 144, "√Ç√ª √≥√¢√Æ√´√®√´√® %s[%d] √®√ß √±√¢√Æ√•√© √Æ√∞√£√†√≠√®√ß√†√∂√®√®. √è√∞√®√∑√®√≠√†: %s", GetName(params[0]),params[0],params[1]);
	SCM(playerid, COLOR_BLUE, string);
	check_badgevalid(playerid);
	pData[params[0]][pMember] = 0;
	pData[params[0]][pRank] = 0;
	pData[params[0]][pLeader] = 0;
	pData[params[0]][pJob] = 0;
	string[0] = EOS;
	mysql_format(mysql_Handle, string, 164, "UPDATE `accounts` SET `pMember` = '0', `pRank` = '0', `pLeader` = '0', `pJob` = '0' WHERE `id` = %d", pData[params[0]][pID]);
	mysql_tquery(mysql_Handle, string);
	SetPlayerColor(params[0], FractionInfo[pData[params[0]][pMember]][fColor]);
	return SetPlayerSkin(params[0], pData[params[0]][pChar]);
}
CMD:uninviteall(playerid) {
	if(IsAGang(playerid) || IsAMafia(playerid)) {
		if(!pData[playerid][pLeader]) return SCM(playerid, COLOR_LIGHTGREY, "√ä√Æ√¨√†√≠S√≠ √§√Æ√±√≤√≥√Ø√≠√† √≤√Æ√´√º√™√Æ √´√®√§√•√∞√†√¨ √°√†√≠√§ √® √¨√†√¥√®√©");
		return SPD(playerid, 4974, DIALOG_STYLE_MSGBOX, ""CERROR"√è√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√•", ""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √≥√¢√Æ√´√®√≤√º √¢√±√•√µ "CYELLOW"√Æ√¥√¥√´√†√©√≠ "CWHITE"√®√£√∞√Æ√™√Æ√¢ √®√ß √Ç√†√∏√•√© √Æ√∞√£√†√≠√®√ß√†√∂√®√®?", "S√≠", "No");
	}
	else return SCM(playerid, COLOR_LIGHTGREY, "√ä√Æ√¨√†√≠S√≠ √§√Æ√±√≤√≥√Ø√≠√† √≤√Æ√´√º√™√Æ √´√®√§√•√∞√†√¨ √°√†√≠√§ √® √¨√†√¥√®√©");
}
CMD:gps(playerid) {
	if(GetPVarInt(playerid, "playerisGPS")) 
		DisableGPS(playerid);
	return SPD(playerid, 7626, DIALOG_STYLE_LIST, "{FFCD00}GPS", "[1] Espacio libre\n[2] Organizaciones sostenibles\n[3] √Ä√ß b√°nd y mafie(no traducio)\n[4] PANKS(nosabemos)\n[5] Vacas(xd)\n[6] Desarrollo\n[7] En el trabajo\n[8] Divisa\n[9] Estaciones de referencia\n[10] Espacio adicional\n{66b3ff}[11] Adi√≥s a Blyraeshur(ni idea)\n{66b3ff}[12] Guardar el banco vinculado\n{66b3ff}[13] Cambiar la fuente de alimentaci√≥n", "Seleccione", "Cerrar");
}
CMD:setweather(playerid, params[]) {
	if(pData[playerid][pAdmin] < 5) return 1;
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /setweather [id √Ø√Æ√£√Æ√§√ª] (0-45)");
	if(params[0] < 0 || params[0] > 45) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /setweather [id √Ø√Æ√£√Æ√§√ª] (0-45)");
	foreach(new i:Player) {
		if(GetPlayerInterior(i) == 0) SetPlayerWeather(i, params[0]);
		else SetPlayerWeather(i, 1);
	}
	weather_server = params[0];
	return SCMF(playerid, 0x009966FF, "√ì√±√≤√†√≠√Æ√¢√´√•√≠√† √Ø√Æ√£√ÆS√≠ √± id %d", params[0]);
}
CMD:settime(playerid, params[]) {
	if(pData[playerid][pAdmin] < 5) return 1;
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /settime [√∑√†√±] (0-23)");
	if(params[0] < 0 || params[0] > 23) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /settime [√∑√†√±] (0-23)");
	foreach(new i:Player) {
		if(GetPlayerInterior(i) == 0) SetPlayerTime(i, params[0], 0);
		else SetPlayerTime(i, 12, 0);
	}
	time_server = params[0];
	return SCMF(playerid, 0x6598CBFF, "√Ç√∞√•√¨√ø √®√ß√¨√•√≠√•√≠√Æ √≠√† %d:00", params[0]);
}
CMD:todo(playerid, params[]) {
	if(pData[playerid][pMuteTime]) return SCM(playerid, COLOR_ERROR, "√Ñ√Æ√±√≤√≥√Ø √¢ √∑√†√≤ √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√≠. √ì√ß√≠√†√≤√º √¢√∞√•√¨√ø √§√Æ √Æ√™√Æ√≠√∑√†√≠√®√ø √°√†√≠√† √∑√†√≤√†: {66cc33}/time");
	if(sscanf(params, "s[128]", params[0])) {
		SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /todo [√§√•√©√±√≤√¢√®√•*√≤√•√™√±√≤]");
		return SCM(playerid, COLOR_LIGHTGREY, "√è√∞√®√¨√•√∞: "CPALEGREEN"/todo"CWHITE" √Ç√ß√ø√¢ √Ø√®√±√≤√Æ√´√•√≤ √¢ √∞√≥√™√®{ff6666}*"CWHITE"√å√Æ¬∏ √≤√•√∞√Ø√•√≠√®√• √ß√†√™√†√≠√∑√®√¢√†√•√≤√±√ø");
	}
	if(strfind(params,"*", true,0) == -1) return SCM(playerid, COLOR_GREY, "√Ç√†√¨ √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √±√®√¨√¢√Æ√´-√∞√†√ß√§√•√´√®√≤√•√´√º {ff6666}* (√ß√¢¬∏√ß√§√Æ√∑√™√≥)");
	new var_coord[2][128];
	sscanf(params[0], "p<*>s[128]s[128]", var_coord[0], var_coord[1]);
	format(string, 128, "%s, %s √±√™√†√ß√†√´%s: "CWHITE"%s", var_coord[0], pData[playerid][pName], (pData[playerid][pSex] == 2) ? ("√†") : (""), var_coord[1]);
	SetPlayerChatBubble(playerid, var_coord[1], 0x99ccffFF, 4.0, 10000);
	return ProxDetector(30.0, playerid, string, COLOR_PURPLE);
}
alias:donate("donat");
CMD:donate(playerid)
{
	new donate_str[600];
	format(donate_str, 600, ""CWHITE"√Ç√ª √¨√Æ√¶√•√≤√• √Ø√Æ√Ø√Æ√´√≠√®√≤√º √±√¢√Æ√© √±√∑¬∏√≤ √≠√† √±√†√©√≤√•\n\
		"CCYAN"normative-rp.ru "CWHITE"√¢ √∞√†√ß√§√•√´√• ¬´√å√†√£√†√ß√®√≠¬ª.\n\n\
		"CLITEBLUE"√à√≠√¥√Æ√∞√¨√†√∂√®√ø:"CWHITE"\n\
		√ç√Æ√¨√•√∞ √†√™√™√†√≥√≠√≤√†:\t\t\t%d\n\
		√í√•√™√≥√π√•√• √±√Æ√±√≤√Æ√ø√≠√®√• √±√∑¬∏√≤√†:\t\t%d √∞√≥√°.",
	pData[playerid][pID],pData[playerid][pRub]);
	SPD(playerid, 9777, DIALOG_STYLE_MSGBOX, ""CPALEGREEN"√å√†√£√†√ß√®√≠", donate_str, "S√≠√´√•√•", "Cerrar");
}
CMD:checkpay(playerid) {
	string[0] = EOS;
	mysql_format(mysql_Handle, string, 128, "SELECT `pRubDonate`, `pRub` FROM `accounts` WHERE `Name` = '%s'", pData[playerid][pName]);
	return mysql_tquery(mysql_Handle, string, "__@CheckDonate", "d",playerid);
}
stock GetEngineStat(vehicleid) {
	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	return engine;
}
stock ToggleLock(vehicleid, bool: door_status = false) {
	VehInfo[vehicleid - 1][vLock] = door_status;
	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx(vehicleid, engine, lights, alarm, (door_status) ? (VEHICLE_PARAMS_ON) : (VEHICLE_PARAMS_OFF), bonnet, boot, objective);
	return 0;
}

CMD:lock(playerid, params[]) {
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_GREY, "Usar√≤√•: /lock [√≤√®√Ø √≤√∞√†√≠√±√Ø√Æ√∞√≤√†] (1-√Ñ√Æ√¨√†√∏√≠√®√©, 2-√Ä√∞√•√≠√§√Æ√¢√†√≠√≠√ª√©, 3-√Ñ√Æ√¢√•√∞√•√≠√≠√ª√©)");
	new Float:pos[3];
	switch(params[0]) {
		case 1:
		{
			if(pData[playerid][pHouse] == -1 && pData[playerid][pHotel] == -1 && pData[playerid][pFlat] == -1 && pData[playerid][have_garage] == -1)
				return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± No √§√Æ√¨√†√∏√≠√•√£√Æ √≤√∞√†√≠√±√Ø√Æ√∞√≤√†");
			if(pData[playerid][pCar][0] == 0 && pData[playerid][pCar][1] == 0 && pData[playerid][pCar][2] == 0)
				return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± No √§√Æ√¨√†√∏√≠√•√£√Æ √≤√∞√†√≠√±√Ø√Æ√∞√≤√†");
			new bool:status;
			for(new i = 0; i < 3; i++)
			{
				if(house_carid[playerid][i])
				{
					GetVehiclePos(house_carid[playerid][i], pos[0],pos[1],pos[2]);
					if(GetPlayerDistanceFromPoint(playerid, pos[0],pos[1],pos[2]) <= 5)
					{
						ToggleLock(house_carid[playerid][i], (VehInfo[house_carid[playerid][i] - 1][vLock]) ? (false) : (true));
						PlayerPlaySound(playerid, 25800, pos[0],pos[1],pos[2]);
						GameTextForPlayer(playerid, (VehInfo[house_carid[playerid][i] - 1][vLock]) ? ("~r~~h~close") : ("~g~~h~open"), 1100, 3);
						status = true;
						break;
					}
				}
			}
			if(!status) SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √Æ√™√Æ√´√Æ √±√¢√Æ√•√£√Æ √≤√∞√†√≠√±√Ø√Æ√∞√≤√†");
		}
		case 2:
		{
			if(GetPVarInt(playerid, "veh_rent") == -1) return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± No √†√∞√•√≠√§√Æ√¢√†√≠√≠√Æ√£√Æ √≤√∞√†√≠√±√Ø√Æ√∞√≤√†");
			new nearestcar = GetNearestVehicle(playerid);
			GetVehiclePos(nearestcar, pos[0], pos[1], pos[2]);
			if(GetPlayerDistanceFromPoint(playerid, pos[0],pos[1],pos[2]) <= 5 && GetVehicleKey(playerid, nearestcar))
			{
				ToggleLock(nearestcar, (VehInfo[nearestcar - 1][vLock]) ? (false) : (true));
				PlayerPlaySound(playerid, 25800, pos[0], pos[1], pos[2]);
				GameTextForPlayer(playerid, (VehInfo[nearestcar - 1][vLock]) ? ("~r~~h~close") : ("~g~~h~open"), 1100, 3);
			}
			else SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √†√∞√•√≠√§√Æ√¢√†√≠√≠√Æ√£√Æ √≤√∞√†√≠√±√Ø√Æ√∞√≤√†");
		}
		case 3:
		{
			if(!player_allowed[playerid]) return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± No √§√Æ√¢√•√∞√•√≠√≠√Æ√£√Æ √≤√∞√†√≠√±√Ø√Æ√∞√≤√†");
			new nearestcar = GetNearestVehicle(playerid);
			GetVehiclePos(nearestcar, pos[0], pos[1], pos[2]);
			if(GetPlayerDistanceFromPoint(playerid, pos[0],pos[1],pos[2]) <= 5 && GetIsAllow(playerid, nearestcar) == 1)
			{
				ToggleLock(nearestcar, (VehInfo[nearestcar - 1][vLock]) ? (false) : (true));
				PlayerPlaySound(playerid, 25800, pos[0], pos[1], pos[2]);
				GameTextForPlayer(playerid, (VehInfo[nearestcar - 1][vLock]) ? ("~r~~h~close") : ("~g~~h~open"), 1100, 3);
			}
			else SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √§√Æ√¢√•√∞√•√≠√≠√Æ√© √¨√†√∏√®√≠√ª");
		}
		default: SCM(playerid, COLOR_GREY, "Usar√≤√•: /lock [√≤√®√Ø √≤√∞√†√≠√±√Ø√Æ√∞√≤√†] (1-√Ñ√Æ√¨√†√∏√≠√®√©, 2-√Ä√∞√•√≠√§√Æ√¢√†√≠√≠√ª√©, 3-√Ñ√Æ√¢√•√∞√•√≠√≠√ª√©)");
	}
	return 1;
}
stock GetIsAllow(playerid, vehicleid) {
	if(player_allowed[playerid] && player_allowed_model[playerid] == vehicleid) return 1;
	else return -1;
}
CMD:allow(playerid, params[]) {
	if(pData[playerid][pHouse] == -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √§√Æ√¨√†");
	new id_player;
	if(sscanf(params, "d", id_player)) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /allow [id √®√£√∞√Æ√™√†]");
	if(id_player == playerid) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Ω√≤√≥ √¥√≥√≠√™√∂√®√æ √≠√† √±√•√°√•");
	if(!IsPlayerConnected(id_player)) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(!ProxDetectorS(3.0, playerid, id_player)) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
	if((house_carid[playerid][0] && player_allowed_model[id_player] == house_carid[playerid][0]) || 
		(house_carid[playerid][1] && player_allowed_model[id_player] == house_carid[playerid][1]) || 
		(house_carid[playerid][2] && player_allowed_model[id_player] == house_carid[playerid][2])) {
		player_allowed[id_player] = false; player_allowed_model[id_player] = -1;
		RemoveItemFromInventory(playerid, 2);
		if(pData[playerid][pSex] == 1) SCMF(id_player, COLOR_ERROR, "%s √ß√†√°√∞√†√´ √≥ √¢√†√± √™√´√æ√∑√® √Æ√≤ √±√¢√Æ√•√£√Æ √≤√∞√†√≠√±√Ø√Æ√∞√≤√†", GetName(playerid));
		else SCMF(id_player, COLOR_ERROR, "%s √ß√†√°√∞√†√´√† √≥ √¢√†√± √™√´√æ√∑√® √Æ√≤ √±√¢√Æ√•√£√Æ √≤√∞√†√≠√±√Ø√Æ√∞√≤√†", GetName(playerid));
		return SCMF(playerid, COLOR_ERROR, "√Ç√ª √ß√†√°√∞√†√´√® √™√´√æ√∑√® √Æ√≤ √±√¢√Æ√•√£√Æ √≤√∞√†√≠√±√Ø√Æ√∞√≤√† √≥ %s", GetName(id_player));
	}
	if(player_allowed[id_player]) return SCM(playerid, COLOR_GREY, "√ì √Ω√≤√Æ√£√Æ √®√£√∞√Æ√™√† √≥√¶√• √•√±√≤√º √§√Æ√¢√•√∞√•√≠√≠√ª√© √≤√∞√†√≠√±√Ø√Æ√∞√≤");
	player_allowed[id_player] = true;
	RemoveItemFromInventory(playerid, 2);
	AddItemToInventory(playerid, 1, 2);
	if(house_carid[playerid][0]) player_allowed_model[id_player] = house_carid[playerid][0];
	if(house_carid[playerid][1]) player_allowed_model[id_player] = house_carid[playerid][1];
	if(house_carid[playerid][2]) player_allowed_model[id_player] = house_carid[playerid][2];
	if(pData[playerid][pSex] == 1) SCMF(id_player, COLOR_BLUE, "%s √¢√ªS√≠√´ √¢√†√¨ √™√´√æ√∑√® √Æ√≤ √±√¢√Æ√•√£√Æ √≤√∞√†√≠√±√Ø√Æ√∞√≤√†", GetName(playerid));
	else SCMF(id_player, COLOR_BLUE, "%s √¢√ªS√≠√´√† √¢√†√¨ √™√´√æ√∑√® √Æ√≤ √±√¢√Æ√•√£√Æ √≤√∞√†√≠√±√Ø√Æ√∞√≤√†", GetName(playerid));
	SCM(id_player, COLOR_BLUE, "√Ñ√´√ø √ß√†√™√∞√ª√≤√®√ø √®√´√® √Æ√≤√™√∞√ª√≤√®√ø √ß√†√¨√™√Æ√¢ √≤√∞√†√≠√±√Ø√Æ√∞√≤√† Usar√≤√• "CMAIN"/lock 3");
	return SCMF(playerid, COLOR_BLUE, "√Ç√ª √¢√ªS√≠√´√® √™√´√æ√∑√® √Æ√≤ √±√¢√Æ√•√£√Æ √≤√∞√†√≠√±√Ø√Æ√∞√≤√† %s", GetName(id_player));
}
CMD:togphone(playerid) {
	if(!pData[playerid][p_premium]) return SCM(playerid, 0xE5B090FF, "√ä√Æ√¨√†√≠S√≠ √§√Æ√±√≤√≥√Ø√≠√† √≤√Æ√´√º√™√Æ √®√£√∞√Æ√™√†√¨ √± "CCYAN"√Ø√∞√•√¨√®√≥√¨-√±√≤√†√≤√≥√±√Æ√¨");
	if(GetPVarInt(playerid, "takephone")) return SCM(playerid, 0xE5B090FF, "√ì √Ç√†√± No √≤√•√´√•√¥√Æ√≠√†");
	if(pData[playerid][pPnumber] == -1) return SCM(playerid, 0xE5B090FF, "√ì √Ç√†√± No √≤√•√´√•√¥√Æ√≠√†. √ä√≥√Ø√®√≤√º √•√£√Æ √¨√Æ√¶√≠√Æ √¢ 24-7");
	if(PhoneOnline{playerid}) {
		PhoneOnline{playerid} = false;
		SCM(playerid, COLOR_MAIN, "√í√•√´√•√¥√Æ√≠ √¢√™√´√æ√∑¬∏√≠");
	}
	else {
		PhoneOnline{playerid} = true;
		SCM(playerid, COLOR_ERROR, "√í√•√´√•√¥√Æ√≠ √Æ√≤√™√´√æ√∑¬∏√≠");
	}
	return 1;
}
CMD:time(playerid) {
	if(pData[playerid][pMuteTime] == 0 && pData[playerid][pMuteTime_R] == 0 && pData[playerid][pJailTime] == 0 && pData[playerid][pPrisonTime] == 0)
		return SCM(playerid, -1, "Usar√≤√• {6699ff}/c 060 "CWHITE"(√±√´√≥√¶√°√† √≤√Æ√∑√≠√Æ√£√Æ √¢√∞√•√¨√•√≠√®)");

	new timemute, secondmute, minutemute, 
		timermute, secondrmute, minutermute, 
		timeprison, secondprison, minuteprison, 
		timejail, secondjail, minutejail;

	timemute = pData[playerid][pMuteTime];
	secondmute = timemute%60;
	minutemute = (timemute-secondmute)/60;

	timermute = pData[playerid][pMuteTime_R];
	secondrmute = timermute%60;
	minutermute = (timermute-secondrmute)/60;
	
	timejail = pData[playerid][pJailTime];
	secondjail = timejail%60;
	minutejail = (timejail-secondjail)/60;
	
	timeprison = pData[playerid][pPrisonTime];
	secondprison = timeprison%60;
	minuteprison = (timeprison-secondprison)/60;
	
	if(pData[playerid][pMuteTime] > 0) SCMF(playerid, COLOR_ERROR, "√Ç√∞√•√¨√ø √§√Æ √∞√†√ß√°√´√Æ√™√®√∞√Æ√¢√™√® √∑√†√≤√†: %d:%02d", minutemute, secondmute);
	if(pData[playerid][pMuteTime_R] > 0) SCMF(playerid, COLOR_ERROR, "√Ç√∞√•√¨√ø √§√Æ √∞√†√ß√°√´√Æ√™√®√∞√Æ√¢√™√® √∞√•√Ø√Æ√∞√≤√†: %d:%02d", minutermute, secondrmute);

	if(pData[playerid][pJailTime] > 0) SCMF(playerid, COLOR_ERROR, "√Ç√∞√•√¨√ø √§√Æ √¢√ª√µ√ÆS√≠ √≠√† √±√¢√Æ√°√Æ√§√≥: %d:%02d", minutejail, secondjail);
	else if(pData[playerid][pPrisonTime] > 0) SCMF(playerid, COLOR_ERROR, "√Ç√∞√•√¨√ø √§√Æ √¢√ª√µ√ÆS√≠ √≠√† √±√¢√Æ√°√Æ√§√≥: %d:%02d", minuteprison, secondprison);

	return 1;
}
CMD:stopcapture(playerid, params[]) {
	if(pData[playerid][pAdmin] < 4) return 1;
	if(!CaptureInfo || stopped_capture) return SCM(playerid, COLOR_LIGHTGREY, "√ë√•√©√∑√†√± √≠√• √Ø√∞√Æ√µ√Æ√§√®√≤ √ß√†√µ√¢√†√≤ √≤√•√∞√∞√®√≤√Æ√∞√®√®");
	new reason[32];
	if(sscanf(params, "s[32]", reason)) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /stopcapture [√Ø√∞√®√∑√®√≠√†]");
	if(strlen(reason) > 32) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§√•√≠√† √±√´√®√∏√™√Æ√¨ √§√´√®√≠√≠√†√ø √Ø√∞√®√∑√®√≠√†");
	stopped_capture = true;
	return format(stopping_mes, sizeof(stopping_mes), "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √Æ√±√≤√†√≠√Æ√¢√®√´ √ß√†√µ√¢√†√≤ √≤√•√∞√∞√®√≤√Æ√∞√®√®. √è√∞√®√∑√®√≠√†: %s", GetName(playerid), reason);
}
CMD:affect(playerid) {
	if(!IsAMafia(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √±√Æ√±√≤√Æ√®√≤√• √¢ √¨√†√¥√®√®");
	if(pData[playerid][pRank] < 7) return SCM(playerid, COLOR_LIGHTGREY, "√Ñ√´√ø √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√ø √Ω√≤√Æ√© √™√Æ√¨√†√≠√§√ª √≠√•√Æ√°√µ√Æ√§√®√¨ 7 √∞√†√≠√£");
	if(AffectInfo) return SCM(playerid, COLOR_LIGHTGREY, "√Ç S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤ √≥√¶√• √®√§√•√≤ √ß√†√µ√¢√†√≤ √ß√Æ√≠√ª");
	if(AffectTime) return SCMF(playerid, COLOR_LIGHTGREY, "√ë√´√•√§√≥√æ√π√®√© √ß√†√µ√¢√†√≤ √ß√Æ√≠√ª √¢√Æ√ß√¨√Æ√¶√•√≠ √∑√•√∞√•√ß "CPALEGREEN"%i √¨√®√≠", AffectTime);
	for(new i = 0; i < sizeof(MZ_Info); i ++) {
		if(PlayerToKvadrat(playerid,MZ_Info[i][maf_Coords][0], MZ_Info[i][maf_Coords][1],MZ_Info[i][maf_Coords][2],MZ_Info[i][maf_Coords][3])) {
			if(i == 9 || i == 17 || i == 21) return SCM(playerid, COLOR_LIGHTGREY, "√á√Æ√≠√† √Ø√∞√®√´√•√£√†√•√≤ √™ √∞√•√±√Ø√†√¢√≠√≥");
			if(pData[playerid][pMember] == MZ_Info[i][maf_FrakVlad]) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √≠√†√∑√†√≤√º √ß√†√µ√¢√†√≤ √ß√Æ√≠√ª √±√¢√Æ√•√© √¨√†√¥√®√®");
			if(IsPlayerInBandMafiaOnline(MZ_Info[i][maf_FrakVlad]) < 1) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √¨√†√¥√®√® √≠√† √™√Æ√≤√Æ√∞√≥√æ Quieres √≠√†√Ø√†√±√≤√º No √®√£√∞√Æ√™√Æ√¢ √Æ√≠√´√†√©√≠");
			new affect_str[120];
			format(affect_str,sizeof(affect_str),""CWHITE"√ù√≤√† √ß√Æ√≠√† √Ø√∞√®√≠√†√§√´√•√¶√®√≤ √¨√†√¥√®√® %s\n√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √≠√†√∑√†√≤√º √•¬∏ √ß√†√µ√¢√†√≤?",GetMember[MZ_Info[i][maf_FrakVlad]-1]);
			return SPD(playerid, 1004, DIALOG_STYLE_MSGBOX, "{FFCD00}√á√†√µ√¢√†√≤", affect_str, "S√≠", "No");
		}
	}
	return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √≠√†√µ√Æ√§√®√≤√•√±√º √≠√† √ß√Æ√≠√•, √™√Æ√≤√Æ√∞√≥√æ √¨√Æ√¶√≠√Æ √ß√†√µ√¢√†√≤√®√≤√º");
}
CB: MafCheck(i, napad, vlad) {
	foreach(new m:Player) {
		if(pData[m][in_capture] && !IsAMafia(m)) EndAffect(m);
		if(pData[m][pMember] == napad || pData[m][pMember] == vlad) {
			if(!pData[m][in_capture]) {
				PlayerTextDrawShow(m, affectTD[m]);
				pData[m][in_capture] = true;
			}
			format(MZ_Info[i][maf_strtd],150,"Time: %s~n~~w~%s__~b~~h~%d~n~~w~%s__~b~~h~%d", 
			TimeConverterGang(MZ_Info[i][maf_Time]), MafFrac(vlad), CountOnZone[vlad], MafFrac(napad), CountOnZone[napad]);
			PlayerTextDrawSetString(m,affectTD[m],MZ_Info[i][maf_strtd]);
		}
	}
	if(MZ_Info[i][maf_Time]) MZ_Info[i][maf_Time] --;
	else if(MZ_Info[i][maf_Time] <= 0) {
		if(CountOnZone[napad] != 0 && CountOnZone[napad] >= CountOnZone[vlad]) {
			maf_zone[MZ_Info[i][maf_FrakVlad]]--;
			maf_zone[MZ_Info[i][maf_Napad]]++;
			MZ_Info[i][maf_FrakVlad] = MZ_Info[i][maf_Napad];
			format(string,164,"%s √∞√†√±√∏√®√∞√®√´√® √±√¢√Æ√æ √ß√Æ√≠√≥ √¢√´√®√ø√≠√®√ø √¢ √∞√†√©√Æ√≠√• %s",MafFrac(napad),MZ_Info[i][maf_Name]);
		}
		else 
			format(string,164,"%s √≠√• √≥S√≠√´√Æ√±√º √∞√†√±√∏√®√∞√®√≤√º √±√¢√Æ√æ √ß√Æ√≠√≥ √¢√´√®√ø√≠√®√ø √¢ √∞√†√©√Æ√≠√• %s",MafFrac(napad),MZ_Info[i][maf_Name]);
		SendBandMafia(napad,vlad,COLOR_ERROR,string);
		foreach(new m:Player) {
			if(pData[m][pMember] != napad && pData[m][pMember] != vlad) continue;
			EndAffect(m);
		}
		mysql_tquery(mysql_Handle,"UPDATE `accounts` SET `kill_capture` = 0");
		CountOnZone[napad] = 0;
		CountOnZone[vlad] = 0;
		GangZoneStopFlashForAll(MZ_Info[i][maf_ID]);
		GangZoneHideForAll(MZ_Info[i][maf_ID]);
		GangZoneShowForAll(MZ_Info[i][maf_ID],GetMafiaZoneColor(i));
		AffectTime = 60;
		AffectInfo=false;
		SaveMAFZ(MZ_Info[i][maf_ID]);
		KillTimer(MZ_Info[i][maf_Timer]);
	}
	return 1;
}
CMD:capture(playerid) {
	if(!IsAGang(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √±√Æ√±√≤√Æ√®√≤√• √¢ √°√†√≠√§√•");
	if(pData[playerid][pRank] < 7) return SCM(playerid, COLOR_LIGHTGREY, "√Ñ√´√ø √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√ø √Ω√≤√Æ√© √™√Æ√¨√†√≠√§√ª √≠√•√Æ√°√µ√Æ√§√®√¨ 7 √∞√†√≠√£");
	new t;
	gettime(t);
	if(t < 10 || t >= 23) return SCM(playerid, COLOR_LIGHTGREY, "√á√†√µ√¢√†√≤ √≠√•√¢√Æ√ß√¨√Æ√¶√•√≠ √± "CPALEGREEN"23.00 "CLIGHTGREY"√§√Æ "CPALEGREEN"10.00 "CLIGHTGREY"√±√´√•√§√≥√æ√π√•√£√Æ √§√≠√ø");
	if(CaptureInfo) return SCM(playerid, COLOR_LIGHTGREY, "√Ç S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤ √≥√¶√• √®√§√•√≤ √ß√†√µ√¢√†√≤ √≤√•√∞√∞√®√≤√Æ√∞√®√®");
	if(CaptureTime) return SCMF(playerid, COLOR_LIGHTGREY, "√ë√´√•√§√≥√æ√π√®√© √ß√†√µ√¢√†√≤ √≤√•√∞√∞√®√≤√Æ√∞√®√® √¢√Æ√ß√¨√Æ√¶√•√≠ √∑√•√∞√•√ß "CPALEGREEN"%i √¨√®√≠", CaptureTime);
	for(new i = 0; i < sizeof(GZInfo); i ++) {
		if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3])) {
			if(i == 7 || i == 67 || i == 89 || i == 74 || i == 69) return SCM(playerid, COLOR_LIGHTGREY, "√í√•√∞√∞√®√≤√Æ√∞√®√ø, √≠√† √™√Æ√≤√Æ√∞√Æ√© √Ç√ª √≠√†√µ√Æ√§√®√≤√•√±√º, √Ø√∞√®√´√•√£√†√•√≤ √™ √∞√•√±√Ø√†√¢√≠√≥ √°√†√≠√§√ª");
			if(GZInfo[i][gFrakVlad] == 0) return SCM(playerid,COLOR_GREY,"√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √ß√†√µ√¢√†√≤√®√≤√º √≠√•√©√≤√∞√†√´√º√≠√≥√æ √≤√•√∞√∞√®√≤√Æ√∞√®√æ");
			if(pData[playerid][pMember] == GZInfo[i][gFrakVlad]) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √≠√†√∑√†√≤√º √ß√†√µ√¢√†√≤ √≤√•√∞√∞√®√≤√Æ√∞√®√® √±√¢√Æ√•√© √°√†√≠√§√ª");
			if(IsPlayerInBandMafiaOnline(GZInfo[i][gFrakVlad]) < 1) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √°√†√≠√§√• √≠√† √™√Æ√≤√Æ√∞√≥√æ Quieres √≠√†√Ø√†√±√≤√º No √®√£√∞√Æ√™√Æ√¢ √Æ√≠√´√†√©√≠");
			return SPD(playerid, 388, DIALOG_STYLE_INPUT, ""CMAIN"√á√†√µ√¢√†√≤ √≤√•√∞√∞√®√≤√Æ√∞√®√®", ""CWHITE"Quieres √≠√†√∑√†√≤√º √ß√†√µ√¢√†√≤ √≤√•√∞√∞√®√≤√Æ√∞√®√® √°√†√≠√§√ª. √Ñ√´√ø √Ø√∞√Æ√§√Æ√´√¶√•√≠√®√ø,\n√¢√¢√•√§√®√≤√• √¢√∞√•√¨√ø √ß√†√µ√¢√†√≤√† √¢ √Ø√Æ√´√• √≠√®√¶√• {cc9955}(√§√Æ√Ø√≥√±√≤√®√¨√Æ √Æ√≤ 5 √§√Æ 30)"CWHITE":", "√ç√†√∑√†√≤√º", "Cerrar");
		}
	}
	return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√Æ√°√µ√Æ√§√®√¨√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √≠√† √≤√•√∞√∞√®√≤√Æ√∞√®√®, √™√Æ√≤√Æ√∞√≥√æ Quieres √ß√†√µ√¢√†√≤√®√≤√º");
}
stock AdminMessageCapt(color,const string_massive[]) {
	foreach(new i:Player) {
		if(GetPVarInt(i, "AdminMessages")) continue;
		if(!IsPlayerConnected(i)) continue;
		if(IsAGang(i)) continue;
		if(pData[i][pAdmin] >= 1 && GetPVarInt(i, "dostup")) SCM(i, color, string_massive), PlayerPlaySound(i,30802,0.0,0.0,0.0);
	}
	return 1;
}
CMD:power(playerid) {
	if(pData[playerid][pHouse] == -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √§√Æ√¨√†");
	if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √ß√† √∞√≥√´¬∏√¨ √±√¢√Æ√•√£√Æ √†√¢√≤√Æ");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √ß√† √∞√≥√´¬∏√¨ √±√¢√Æ√•√£√Æ √†√¢√≤√Æ");
	new veh_id = GetPlayerVehicleID(playerid);
	if(house_carid[playerid][0] && veh_id != house_carid[playerid][0]) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √ß√† √∞√≥√´¬∏√¨ √±√¢√Æ√•√£√Æ √†√¢√≤√Æ");
	if(house_carid[playerid][1] && veh_id != house_carid[playerid][1]) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √ß√† √∞√≥√´¬∏√¨ √±√¢√Æ√•√£√Æ √†√¢√≤√Æ");
	if(house_carid[playerid][2] && veh_id != house_carid[playerid][2]) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √ß√† √∞√≥√´¬∏√¨ √±√¢√Æ√•√£√Æ √†√¢√≤√Æ");
	if(IsABoat(veh_id) || IsAPlane(veh_id) || IsABike(veh_id)) return SCM(playerid, COLOR_LIGHTGREY, "√è√∞√Æ√±√¨√Æ√≤√∞ √®√´√® √®√ß√¨√•√≠√•√≠√®√• √µ√†√∞√†√™√≤√•√∞√®√±√≤√®√™ √Ω√≤√Æ√£√Æ √≤√∞√†√≠√±√Ø√Æ√∞√≤√† √≠√•√§√Æ√±√≤√≥√Ø√≠√ª");
	if(veh_id != house_carid[playerid][0] && veh_id != house_carid[playerid][1] && veh_id != house_carid[playerid][2]) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √ß√† √∞√≥√´¬∏√¨ √±√¢√Æ√•√£√Æ √†√¢√≤√Æ");
	new name_charact_1[45], name_charact_2[45], name_charact_3[45], name_charact_4[45], name_charact_5[45], name_charact_6[45], name_charact_7[45];
	switch(veh_charact[veh_id][0]) {
		case 0: name_charact_1 = "√á√†√¢√Æ√§√±√™√®√• √§√•√≤√†√´√®";
		case 1: name_charact_1 = "√ì√´√≥√∑√∏√•√≠√≠√ª√© √¢√Ø√≥√±√™√≠√Æ√© √™√Æ√´√´√•√™√≤√Æ√∞";
		case 2: name_charact_1 = "√î√®√´√º√≤√∞ √± √Ø√Æ√≠√®√¶√•√≠√≠√ª√¨ √±√Æ√Ø√∞√Æ√≤√®√¢√´√•√≠√®√•√¨ √≥√∞. 1";
		case 3: name_charact_1 = "√î√®√´√º√≤√∞ √± √Ø√Æ√≠√®√¶√•√≠√≠√ª√¨ √±√Æ√Ø√∞√Æ√≤√®√¢√´√•√≠√®√•√¨ √≥√∞. 2";
	}
	switch(veh_charact[veh_id][1]) {
		case 0: name_charact_2 = "√á√†√¢√Æ√§√±√™√®√• √§√•√≤√†√´√®";
		case 1: name_charact_2 = "√ìS√≠√´√•√≠√®√• √™√†√≤√†√´√®√ß√†√≤√Æ√∞√†";
		case 2: name_charact_2 = "√ë√Ø√Æ√∞√≤√®√¢√≠√ª√© √£√´√≥√∏√®√≤√•√´√º";
		case 3: name_charact_2 = "√è√∞√ø√¨√Æ√≤√Æ√∑√≠√ª√© √¢√ª√Ø√≥√±√™";
	}
	switch(veh_charact[veh_id][2]) {
		case 0: name_charact_3 = "√á√†√¢√Æ√§√±√™√®√• √§√•√≤√†√´√®";
		case 1: name_charact_3 = "√ä√Æ√¨√Ø√∞√•√±√±√Æ√∞";
		case 2: name_charact_3 = "√í√≥√∞√°√Æ√≠√†√£No√†√≤√•√´√º √≥√∞√Æ√¢√≠√ø 1";
		case 3: name_charact_3 = "√í√≥√∞√°√Æ√≠√†√£No√†√≤√•√´√º √≥√∞√Æ√¢√≠√ø 2";
		case 4: name_charact_3 = "√Å√®-√≤√≥√∞√°√Æ √™√Æ√¨√Ø√´√•√™√≤";
	}
	switch(veh_charact[veh_id][3]) {
		case 0: name_charact_4 = "√á√†√¢√Æ√§√±√™√®√• √§√•√≤√†√´√®";
		case 1: name_charact_4 = "√ê√†√§√®√†√≤√Æ√∞ √Ø√Æ√¢√ª√∏√•√≠√≠√Æ√© √¨√Æ√π√≠√Æ√±√≤√®";
		case 2: name_charact_4 = "√à√≠√≤√•√∞√™√≥√´√´√•√∞ √≥√∞√Æ√¢√≠√ø 1";
		case 3: name_charact_4 = "√à√≠√≤√•√∞√™√≥√´√´√•√∞ √≥√∞√Æ√¢√≠√ø 2";
		case 4: name_charact_4 = "√Ç√ª√±√Æ√™√Æ√Ø√∞√Æ√®√ß√¢√Æ√§√®√≤√•√´√º√≠√ª√© √®√≠√≤√•√∞√™√≥√´√´√•√∞";
	}
	switch(veh_charact[veh_id][4]) {
		case 0: name_charact_5 = "√á√†√¢√Æ√§√±√™√®√• √§√•√≤√†√´√®";
		case 1: name_charact_5 = "√Ñ√®√±√™√Æ√¢√ª√• √≤√Æ√∞√¨√Æ√ß√† √≥√∞√Æ√¢√≠√ø 1";
		case 2: name_charact_5 = "√Ñ√®√±√™√Æ√¢√ª√• √≤√Æ√∞√¨√Æ√ß√† √≥√∞√Æ√¢√≠√ø 2";
		case 3: name_charact_5 = "√Ç√•√≠√≤√®√´√®√∞√≥√•√¨√ª√• √§√®√±√™√Æ√¢√ª√• √≤√Æ√∞√¨√Æ√ß√†";
		case 4: name_charact_5 = "√Ç√•√≠√≤√®√´√®√∞√≥√•√¨√ª√• √™√•√∞√†√¨√®√∑√•√±√™√®√• √§√®√±√™√Æ√¢√ª√• √≤√Æ√∞√¨√Æ√ß√†";
		case 5: name_charact_5 = "√ä√†√∞√°√Æ√≠√Æ√¢√ª√• √§√®√±√™√Æ√¢√ª√• √≤√Æ√∞√¨√Æ√ß√†";
	}
	switch(veh_charact[veh_id][5]) {
		case 0: name_charact_6 = "√á√†√¢√Æ√§√±√™√®√• √§√•√≤√†√´√®";
		case 1: name_charact_6 = "√ì√¢√•√´√®√∑√•√≠√≠√ª√• √±√≥√Ø√Ø√Æ√∞√≤√†";
		case 2: name_charact_6 = "4-√µ √Ø√Æ√∞√∏√≠√•√¢√ª√• √±√≥√Ø√Ø√Æ√∞√≤√†";
		case 3: name_charact_6 = "8-√¨√® √Ø√Æ√∞√∏√≠√•√¢√ª√• √±√≥√Ø√Ø√Æ√∞√≤√†";
		case 4: name_charact_6 = "12-√≤√® √Ø√Æ√∞√∏√≠√•√¢√ª√• √±√≥√Ø√Ø√Æ√∞√≤√†";
	}
	switch(veh_charact[veh_id][6]) {
		case 0: name_charact_7 = "√á√†√¢√Æ√§√±√™√®√• √§√•√≤√†√´√®";
		case 1: name_charact_7 = "√ì√´√≥√∑√∏√•√≠√≠√ª√• √Æ√∞√£√†√≠√®√∑√•√±√™√®√• √™√Æ√´√Æ√§√™√®";
		case 2: name_charact_7 = "√è√Æ√´√≥√¨√•√≤√†√´√´√®√∑√•√±√™√®√• √™√Æ√´√Æ√§√™√®";
		case 3: name_charact_7 = "√ä√•√∞√†√¨√®√∑√•√±√™√®√• √™√Æ√´√Æ√§√™√®";
	}
	new re_str[700];
	format(re_str, sizeof(re_str), "{cc9955}√Ñ√¢√®√£√†√≤√•√´√º\t \n"CWHITE"√Ç√Ø√≥√±√™\t"CPALEGREEN"%s\n"CWHITE"√Ç√ª√Ø√≥√±√™\t"CPALEGREEN"%s\n"CWHITE"√ç√†√§√§√≥√¢\t"CPALEGREEN"%s\n"CWHITE"√é√µ√´√†√¶√§√•√≠√®√•\t"CPALEGREEN"%s\n \n{cc9955}√í√Æ√∞√¨√Æ√ß√†\t \n"CWHITE"√Ñ√®√±√™√®\t"CPALEGREEN"%s\n"CWHITE"√ë√≥√Ø√Ø√Æ√∞√≤√†\t"CPALEGREEN"%s\n"CWHITE"√ä√Æ√´√Æ√§√™√®\t"CPALEGREEN"%s", 
	name_charact_1, name_charact_2, name_charact_3, name_charact_4, name_charact_5, name_charact_6, name_charact_7);
	return SPD(playerid, 885, DIALOG_STYLE_TABLIST, "{FFCD00}√ï√†√∞√†√™√≤√•√∞√®√±√≤√®√™√® √†√¢√≤√Æ√¨√Æ√°√®√´√ø", re_str, "Seleccione", "Cerrar");
}
CMD:tune(playerid) {
	if(!bilet_tune[playerid]) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √°√ª√≤√º √ß√†√Ø√®√±√†√≠√ª √≠√† √Æ√°√±√´√≥√¶√®√¢√†√≠√®√• √¢ √≤√æ√≠√®√≠√£-√†√≤√•√´√º√•");
	if(pData[playerid][pCar][0] == 0 && pData[playerid][pCar][1] == 0 && pData[playerid][pCar][2] == 0) 
		return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± No √§√Æ√¨√†√∏√≠√•√£√Æ √≤√∞√†√≠√±√Ø√Æ√∞√≤√†");
	new veh_id = GetPlayerVehicleID(playerid);
	if(IsABike(veh_id) || (pData[playerid][pHotel] != -1 && pData[playerid][pCar][0] != 0) || (pData[playerid][have_garage] != -1 && pData[playerid][pCar][0] != 0) || (pData[playerid][pFlat] != -1 && pData[playerid][pCar][0] != 0)) {
		if(pData[playerid][have_garage] != -1 || pData[playerid][pHotel] != -1 || pData[playerid][pFlat] != -1) SCM(playerid, -1, "√Ç√∞√•√¨√•√≠√≠√Æ √Ç√†√¨ √§√Æ√±√≤√≥√Ø√≠√Æ √≤√Æ√´√º√™√Æ √®√ß√¨√•√≠√•√≠√®√• √∂√¢√•√≤√† √†√¢√≤√Æ√¨√Æ√°√®√´√ø "CCYAN"(400$)");
		else SCM(playerid, -1, "√Ñ√´√ø √Ω√≤√Æ√£√Æ √≤√∞√†√≠√±√Ø√Æ√∞√≤√† √§√Æ√±√≤√≥√Ø√≠√Æ √≤√Æ√´√º√™√Æ √®√ß√¨√•√≠√•√≠√®√• √∂√¢√•√≤√Æ√¢ "CCYAN"(400$)");
		return SPD(playerid, 924, DIALOG_STYLE_TABLIST_HEADERS, "{FFCD00}√ë√¨√•√≠√† √∂√¢√•√≤√Æ√¢ √†√¢√≤√Æ√¨√Æ√°√®√´√ø", "√Ç√ª√°√•√∞√®√≤√• √∂√¢√•√≤ ¬π1:\n{000000}√ó¬∏√∞√≠√ª√©\n"CWHITE"√Å√•√´√ª√©\n{336699}√ë√®√≠√®√©\n{cc0000}√ä√∞√†√±√≠√ª√©\n{cc3370}√î√®√Æ√´√•√≤√Æ√¢√ª√©\n{ff8800}√é√∞√†√≠√¶√•√¢√ª√©\n{339900}√á√•√´¬∏√≠√ª√©\n{ff66cc}√ê√Æ√ß√Æ√¢√ª√©\n"CWHITE"√Ñ√∞√≥√£√Æ√© √∂√¢√•√≤...", "Seleccione", "Cerrar");
	}
	if(pData[playerid][pHouse] == -1) return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± No √§√Æ√¨√† | √™√¢√†√∞√≤√®√∞√ª | √≠√Æ√¨√•√∞√† √¢ √Æ√≤√•√´√•");
	if(in_menutune[playerid]) {
		SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≥√¶√• √≠√†√µ√Æ√§√®√≤√•√±√º √¢ √¨√•√≠√æ √≤√æ√≠√®√≠√£√†");
		return SCM(playerid, COLOR_LIGHTGREY, "√Ñ√´√ø √¢√ª√µ√ÆS√≠ Usar√≤√• {FFCD00}ESC "CLIGHTGREY"√®√´√® √™√≠√Æ√Ø√™√≥ "CERROR"CANCEL "CLIGHTGREY"√¢ √¨√•√≠√æ");
	}
	if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √ß√† √∞√≥√´¬∏√¨ √±√¢√Æ√•√£√Æ √†√¢√≤√Æ");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √ß√† √∞√≥√´¬∏√¨ √±√¢√Æ√•√£√Æ √†√¢√≤√Æ");
	if(house_carid[playerid][0] && veh_id != house_carid[playerid][0]) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √ß√† √∞√≥√´¬∏√¨ √±√¢√Æ√•√£√Æ √†√¢√≤√Æ");
	if(house_carid[playerid][1] && veh_id != house_carid[playerid][1]) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √ß√† √∞√≥√´¬∏√¨ √±√¢√Æ√•√£√Æ √†√¢√≤√Æ");
	if(house_carid[playerid][2] && veh_id != house_carid[playerid][2]) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √ß√† √∞√≥√´¬∏√¨ √±√¢√Æ√•√£√Æ √†√¢√≤√Æ");
	if(GetVehicleDistanceFromPoint(veh_id, 1271.8901,-1251.1680,13.6460) > 35.0) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √≤√æ√≠√®√≠√£-√†√≤√•√´√º√•");
	if(veh_id != house_carid[playerid][0] && veh_id != house_carid[playerid][1] && veh_id != house_carid[playerid][2]) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √ß√† √∞√≥√´¬∏√¨ √±√¢√Æ√•√£√Æ √†√¢√≤√Æ");
	if(IsABoat(veh_id) || IsAPlane(veh_id)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √≥√±√≤√†√≠√Æ√¢√®√≤√º √≤√æ√≠√®√≠√£ √≠√† √Ω√≤√Æ√≤ √≤√∞√†√≠√±√Ø√Æ√∞√≤");
	if(IsABike(veh_id)) {
		SCM(playerid, -1, "√Ñ√´√ø √Ω√≤√Æ√£√Æ √≤√∞√†√≠√±√Ø√Æ√∞√≤√† √§√Æ√±√≤√≥√Ø√≠√Æ √≤√Æ√´√º√™√Æ √®√ß√¨√•√≠√•√≠√®√• √∂√¢√•√≤√Æ√¢ "CCYAN"(400$)");
		return SPD(playerid, 924, DIALOG_STYLE_TABLIST_HEADERS, "{FFCD00}√ë√¨√•√≠√† √∂√¢√•√≤√Æ√¢ √†√¢√≤√Æ√¨√Æ√°√®√´√ø", "√Ç√ª√°√•√∞√®√≤√• √∂√¢√•√≤ ¬π1:\n{000000}√ó¬∏√∞√≠√ª√©\n"CWHITE"√Å√•√´√ª√©\n{336699}√ë√®√≠√®√©\n{cc0000}√ä√∞√†√±√≠√ª√©\n{cc3370}√î√®√Æ√´√•√≤√Æ√¢√ª√©\n{ff8800}√é√∞√†√≠√¶√•√¢√ª√©\n{339900}√á√•√´¬∏√≠√ª√©\n{ff66cc}√ê√Æ√ß√Æ√¢√ª√©\n"CWHITE"√Ñ√∞√≥√£√Æ√© √∂√¢√•√≤...", "Seleccione", "Cerrar");
	}
	if(GetVehSpeed(veh_id) > 0) return 1;
	in_menutune[playerid] = true;
	TogglePlayerControllable(playerid, 0);
	new Float: pv[3], Float: pc[3], Float: lc[3];
	GetVehiclePos(veh_id, pv[0], pv[1], pv[2]);
	GetPlayerCameraPos(playerid, pc[0], pc[1], pc[2]);
	GetPlayerCameraFrontVector(playerid, lc[0], lc[1], lc[2]);

	InterpolateCameraPos(playerid, pc[0], pc[1], pc[2], pv[0] + 3, pv[1] + 5, pv[2] + 0.5, 1300);
	InterpolateCameraLookAt(playerid, lc[0], lc[1], lc[2], pv[0], pv[1], pv[2], 1300);
	
	for(new i = 0; i < 17; i ++) TextDrawShowForPlayer(playerid, tune_td[i]);
	SelectTextDraw(playerid, 0x000000AA);
	SCM(playerid, COLOR_BLUE, "Usar√≤√• √¨√•√≠√æ √±√´√•√¢√† √§√´√ø √≤√æ√≠√®√≠√£√† √±√¢√Æ√•√£√Æ √†√¢√≤√Æ√¨√Æ√°√®√´√ø");
	SCM(playerid, -1, "√ó√≤√Æ√°√ª √±√Æ√µ√∞√†√≠√®√≤√º √® √Æ√Ø√´√†√≤√®√≤√º √≥√±√≤√†√≠√Æ√¢√´√•√≠√≠√ª√© √Ç√†√¨√® √≤√æ√≠√®√≠√£ √≠√†√¶√¨√®√≤√• "CCYAN"SAVE");
	SCM(playerid, -1, "√Ñ√´√ø √≥S√≠√´√•√≠√®√ø √≤√æ√≠√®√≠√£√† √± √¨√†√∏√®√≠√ª √≠√†√¶√¨√®√≤√• {c00000}REMOVE TUNING");
	return SCM(playerid, -1, "√Ñ√´√ø √¢√ª√µ√ÆS√≠ √®√ß √¨√•√≠√æ √≠√†√¶√¨√®√≤√• "CERROR"CANCEL");
}
CMD:tempzone(playerid, params[]) {
	if(pData[playerid][pAdmin] < 7) return 1;
	if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /tempzone [√≠√Æ√¨√•√∞ √∂√¢√•√≤√†] (0-8)");
	new org_numb, bool: total_terr;
	if(params[0] < 0 || params[0] > 8) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§√®√≤√• √≠√Æ√¨√•√∞ √Æ√≤ 0 √§√Æ 8");
	switch(params[0]) {
		case 1: org_numb = 12;
		case 2: org_numb = 13;
		case 3: org_numb = 15;
		case 4: org_numb = 17;
		case 5: org_numb = 18;
		case 6: org_numb = 5;
		case 7: org_numb = 14;
		case 8: org_numb = 6;
	}
	for(new i = 0; i < sizeof(MZ_Info); i ++)
	{
		if(PlayerToKvadrat(playerid,MZ_Info[i][maf_Coords][0], MZ_Info[i][maf_Coords][1],MZ_Info[i][maf_Coords][2],MZ_Info[i][maf_Coords][3])) {
			if(i == 9 || i == 17 || i == 21) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√Æ √Æ√±√≠√Æ√¢√≠√†√ø √≤√•√∞√∞√®√≤√Æ√∞√®√ø, √•¬∏ √≠√•√´√º√ß√ø √Ø√•√∞√•√™√∞√†√±√®√≤√º");
			if(params[0] != 0 && params[0] < 6) 
				return SCM(playerid,COLOR_GREY,"√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Ø√Æ√™√∞√†√±√®√≤√º √ß√Æ√≠√≥ √¨√†√¥√®√® √¢ √∂√¢√•√≤ √°√†√≠√§√ª");
			maf_zone[MZ_Info[i][maf_FrakVlad]]--;
			maf_zone[org_numb]++;
			MZ_Info[i][maf_FrakVlad] = org_numb;
			GangZoneStopFlashForAll(MZ_Info[i][maf_ID]);
			GangZoneHideForAll(MZ_Info[i][maf_ID]);
			GangZoneShowForAll(MZ_Info[i][maf_ID],GetMafiaZoneColor(i));
			SCMF(playerid, -1, "√í√•√∞√∞√®√≤√Æ√∞√®√ø √Ø√•√∞√•√™√∞√†√∏√•√≠√†. √ç√Æ√¨√•√∞: {00cc33}%d", i);
			SaveMAFZ(i);
			total_terr = true;
			break;
		}
	}
	if(!total_terr) {
		for(new i = 0; i < sizeof(GZInfo); i ++) {
			if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3])) {
				if(i == 7 || i == 69 || i == 67 || i == 74 || i == 90) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√Æ √Æ√±√≠√Æ√¢√≠√†√ø √≤√•√∞√∞√®√≤√Æ√∞√®√ø, √•¬∏ √≠√•√´√º√ß√ø √Ø√•√∞√•√™√∞√†√±√®√≤√º");
				if(params[0] > 5) return SCM(playerid,COLOR_GREY,"√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Ø√Æ√™√∞√†√±√®√≤√º √ß√Æ√≠√≥ √°√†√≠√§√ª √¢ √∂√¢√•√≤ √¨√†√¥√®√®");
				frac_gangzone[GZInfo[i][gFrakVlad]]--;
				frac_gangzone[org_numb]++;
				UpdateStoreGang(GZInfo[i][gFrakVlad]), UpdateStoreGang(org_numb);
				GZInfo[i][gFrakVlad] = org_numb;
				GangZoneStopFlashForAll(GZInfo[i][gID]);
				GangZoneHideForAll(GZInfo[i][gID]);
				GangZoneShowForAll(GZInfo[i][gID],GetGangZoneColor(i));
				SCMF(playerid, -1, "√í√•√∞√∞√®√≤√Æ√∞√®√ø √Ø√•√∞√•√™√∞√†√∏√•√≠√†. √ç√Æ√¨√•√∞: {00cc33}%d", i);
				SaveGZ(i);
				total_terr = true;
				break;
			}
		}
	}
	if(!total_terr) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√Æ√°√µ√Æ√§√®√¨√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √≠√† √≤√•√∞√∞√®√≤√Æ√∞√®√®, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√•√∞√•√™√∞√†√±√®√≤√º");
	return 1;
}
stock SCMTA_setting(color, message_str[]) {
	foreach(new i:Player) {
		if(!pData[i][p_setting][2]) continue;
		SCM(i, color, message_str);
	}
	return 1;
}
CMD:warn(playerid, params[]) {
	if(pData[playerid][pAdmin] < 3) return 1;
	if(pData[playerid][pAdmin] < 7 && GetPVarInt(playerid, "counting_punish") > gettime()) 
		return SCM(playerid, COLOR_ERROR, "√è√Æ√§√Æ√¶√§√®√≤√• √≠√•√±√™√Æ√´√º√™√Æ √±√•√™√≥√≠√§...");
	if(sscanf(params,"dS()[34]",params[0],params[1])) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /warn [id √®√£√∞√Æ√™√†] [√Ø√∞√®√∑√®√≠√† (√≠√•√Æ√°√ø√ß√†√≤√•√´√º√≠√Æ)]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™√† √± √≤√†√™√®√¨ √†√©√§√® No");
	if(IsPlayerNPC(params[0])) return SCM(playerid, COLOR_ERROR, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √¢√ªS√≠√≤√º √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√• √Ω√≤√Æ√¨√≥ √∑√•√´√Æ√¢√•√™√≥");

	new day, month, year, hour, minuite, second;
	getdate(year, month, day);
	gettime(hour, minuite, second);
	FixHour(hour);
	hour = shifthour;
	new data2[22];
	format(data2, 22, "%02d.%02d.%d √¢ %02d:%02d",day, month, year, hour, minuite);

	new Year, Month, Day, dial_str[500];
	getdate(Year, Month, Day);
	new monthname[9];
	switch(Month) {
		case 1: monthname = "√ø√≠√¢√†√∞√ø";
		case 2: monthname = "√¥√•√¢√∞√†√´√ø";
		case 3: monthname = "√¨√†√∞√≤√†";
		case 4: monthname = "√†√Ø√∞√•√´√ø";
		case 5: monthname = "√¨√†√ø";
		case 6: monthname = "√®√æ√≠√ø";
		case 7: monthname = "√®√æ√´√ø";
		case 8: monthname = "√†√¢√£√≥√±√≤√†";
		case 9: monthname = "√±√•√≠√≤√ø√°√∞√ø";
		case 10: monthname = "√Æ√™√≤√ø√°√∞√ø";
		case 11: monthname = "√≠√Æ√ø√°√∞√ø";
		case 12: monthname = "√§√•√™√†√°√∞√ø";
	}
	if(pData[params[0]][pAdmin] > 0 || pData[params[0]][pLeader]) {
		if(GetPVarInt(playerid, "nowarnadm")) {
			SetPVarInt(playerid, "nowarnadm", false);
			return SCM(playerid, COLOR_ERROR, "√Ç√ª √±√Æ√°√®√∞√†√•√≤√•√±√º √¢√ªS√≠√≤√º √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√• √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√≥ √®√´√® √´√®√§√•√∞√≥. √ó√≤√Æ√°√ª √Ø√∞√Æ√§√Æ√´√¶√®√≤√º, √¢√¢√•√§√®√≤√• √™√Æ√¨√†√≠√§√≥ √•√π¬∏ √∞√†√ß");
		}
	}
	pData[params[0]][pWarns] ++;
	UpdatePlayerData(params[0],"pWarns",pData[params[0]][pWarns]);
	pData[params[0]][punWarnstime] = gettime() + 10*86400;
	UpdatePlayerData(params[0],"punWarnstime",pData[params[0]][punWarnstime]);
	pData[params[0]][pMember] = 0;
	pData[params[0]][pLeader] = 0;
	pData[params[0]][pJob] = 0;
	mysql_format(mysql_Handle, string, 164, "UPDATE `accounts` SET `pMember` = '0', `pLeader` = '0', `pJob` = '0' WHERE `id` = %i", pData[params[0]][pID]);
	mysql_tquery(mysql_Handle, string);
	if(pData[params[0]][pWarns] >= 3) {
		if(!strlen(params[1])) {
			if(pData[playerid][pSex] == 1) format(string,128, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √¢√ªS√≠√´ √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√• √®√£√∞√Æ√™√≥ %s [3|3]. √Ä√™√™√†√≥√≠√≤ √ß√†√°√†√≠√•√≠",pData[playerid][pName],GetName(params[0]));
			else format(string,128, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √¢√ªS√≠√´√† √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√• √®√£√∞√Æ√™√≥ %s [3|3]. √Ä√™√™√†√≥√≠√≤ √ß√†√°√†√≠√•√≠",pData[playerid][pName],GetName(params[0]));
			SCMTA_setting(COLOR_LIGHTRED, string); if(!pData[params[0]][p_setting][2]) SCM(params[0], COLOR_LIGHTRED, string);
			if(pData[playerid][pSex] == 1) mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √¢√ªS√≠√´ √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√• √®√£√∞√Æ√™√≥ %s [3|3]. √Ä√™√™√†√≥√≠√≤ √ß√†√°√†√≠√•√≠',%d,'%s')", pData[playerid][pName], GetName(params[0]), pData[params[0]][pID], data2);
			else mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √¢√ªS√≠√´√† √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√• √®√£√∞√Æ√™√≥ %s [3|3]. √Ä√™√™√†√≥√≠√≤ √ß√†√°√†√≠√•√≠',%d,'%s')", pData[playerid][pName], GetName(params[0]), pData[params[0]][pID], data2);
			mysql_tquery(mysql_Handle, string);
		}
		else {
			if(pData[playerid][pSex] == 1) format(string,128, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √¢√ªS√≠√´ √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√• √®√£√∞√Æ√™√≥ %s [3|3]. √è√∞√®√∑√®√≠√†: %s. √Ä√™√™√†√≥√≠√≤ √ß√†√°√†√≠√•√≠",pData[playerid][pName],GetName(params[0]), params[1]);
			else format(string,128, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √¢√ªS√≠√´√† √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√• √®√£√∞√Æ√™√≥ %s [3|3]. √è√∞√®√∑√®√≠√†: %s. √Ä√™√™√†√≥√≠√≤ √ß√†√°√†√≠√•√≠",pData[playerid][pName],GetName(params[0]), params[1]);
			SCMTA_setting(COLOR_LIGHTRED, string); if(!pData[params[0]][p_setting][2]) SCM(params[0], COLOR_LIGHTRED, string);
			if(pData[playerid][pSex] == 1) mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √¢√ªS√≠√´ √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√• √®√£√∞√Æ√™√≥ %s [3|3]. √è√∞√®√∑√®√≠√†: %s. √Ä√™√™√†√≥√≠√≤ √ß√†√°√†√≠√•√≠',%d,'%s')", pData[playerid][pName], GetName(params[0]), params[1], pData[params[0]][pID], data2);
			else mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √¢√ªS√≠√´√† √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√• √®√£√∞√Æ√™√≥ %s [3|3]. √è√∞√®√∑√®√≠√†: %s. √Ä√™√™√†√≥√≠√≤ √ß√†√°√†√≠√•√≠',%d,'%s')", pData[playerid][pName], GetName(params[0]), params[1], pData[params[0]][pID], data2);
			mysql_tquery(mysql_Handle, string);
		}
		format(dial_str, sizeof dial_str, ""CWHITE"S√≠√≤√†: %02d %s %d √£.\n√Ç√†√∏ √≠√®√™: %s\n√ç√®√™ √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√†: %s\n√è√∞√®√∑√®√≠√†: 3 warns\n\n{94b695}√Ö√±√´√® √Ç√ª √≠√• √±√Æ√£√´√†√±√≠√ª √± √≠√†√™√†√ß√†√≠√®√•√¨, √±√§√•√´√†√©√≤√• √±√™√∞√®√≠√∏√Æ√≤ (√™√´√†√¢√®√∏√† F8)\n√® √Æ√±√≤√†√¢√º√≤√• √¶√†√´√Æ√°√≥ √≠√† √¥√Æ√∞√≥√¨√• (√±√±√ª√´√™√†: forum-normative.ru)", Day, monthname, Year, GetName(params[0]), pData[playerid][pName]);
		SPD(params[0], 89, DIALOG_STYLE_MSGBOX, "{ff7336}√Å√´√Æ√™√®√∞√Æ√¢√™√†", dial_str, "Cerrar", "");
		pData[params[0]][pJob] = 0;
		UpdatePlayerData(params[0], "pJob", 0);
		pData[params[0]][pWarns] = 0;
		pData[params[0]][punWarnstime] = 0;
		mysql_format(mysql_Handle, string, 164, "UPDATE `accounts` SET `pWarns` = '0', `punWarnstime` = '0' WHERE `id` = %i", pData[params[0]][pID]);
		mysql_tquery(mysql_Handle, string);
		new query_mysql[264], data[16], ip[16];
		GetPlayerIp(params[0],ip,sizeof(ip));
		SetPVarInt(playerid, "UnBanDate", gettime() + 10*86400), format(data,sizeof(data), "%s",date("%dd.%mm.%yyyy",gettime()));
		mysql_format(mysql_Handle,query_mysql,sizeof(query_mysql), "INSERT INTO `banlist` (`id_acc`,`Nick`,`Admin`, `IP`, `Date` ,`Reason`,`Days`,`UnbanDate`) VALUES (%d,'%s','%s','%s','%s','3 warns','10',%d)", pData[params[0]][pID],GetName(params[0]), pData[playerid][pName], ip, data, GetPVarInt(playerid, "UnBanDate"));
		mysql_tquery(mysql_Handle, query_mysql);
		add_c_warns(params[0]);
		Kick(params[0]);
		SetPVarInt(playerid,"counting_punish",gettime() + 5);
		gAdmin[playerid][ADMIN_BAN] ++;
		return 1;
	}
	if(!strlen(params[1])) {
		if(pData[playerid][pSex] == 1) format(string,200, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √¢√ªS√≠√´ √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√• √®√£√∞√Æ√™√≥ %s [%d|3]", pData[playerid][pName], GetName(params[0]), pData[params[0]][pWarns]);
		else format(string,200, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √¢√ªS√≠√´√† √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√• √®√£√∞√Æ√™√≥ %s [%d|3]", pData[playerid][pName], GetName(params[0]), pData[params[0]][pWarns]);
		SCMTA_setting(COLOR_LIGHTRED, string); if(!pData[params[0]][p_setting][2]) SCM(params[0], COLOR_LIGHTRED, string);
		if(pData[playerid][pSex] == 1) mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √¢√ªS√≠√´ √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√• √®√£√∞√Æ√™√≥ %s [%d|3]',%d,'%s')", pData[playerid][pName], GetName(params[0]), pData[params[0]][pWarns], pData[params[0]][pID], data2);
		else mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √¢√ªS√≠√´√† √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√• √®√£√∞√Æ√™√≥ %s [%d|3]',%d,'%s')", pData[playerid][pName], GetName(params[0]), pData[params[0]][pWarns], pData[params[0]][pID], data2);
		mysql_tquery(mysql_Handle, string);
	}
	else {
		if(pData[playerid][pSex] == 1) format(string,200, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √¢√ªS√≠√´ √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√• √®√£√∞√Æ√™√≥ %s [%d|3]. √è√∞√®√∑√®√≠√†: %s", pData[playerid][pName], GetName(params[0]), pData[params[0]][pWarns], params[1]);
		else format(string,200, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √¢√ªS√≠√´√† √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√• √®√£√∞√Æ√™√≥ %s [%d|3]. √è√∞√®√∑√®√≠√†: %s", pData[playerid][pName], GetName(params[0]), pData[params[0]][pWarns], params[1]);
		SCMTA_setting(COLOR_LIGHTRED, string); if(!pData[params[0]][p_setting][2]) SCM(params[0], COLOR_LIGHTRED, string);
		if(pData[playerid][pSex] == 1) mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √¢√ªS√≠√´ √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√• √®√£√∞√Æ√™√≥ %s [%d|3]. √è√∞√®√∑√®√≠√†: %s',%d,'%s')", pData[playerid][pName], GetName(params[0]), pData[params[0]][pWarns], params[1], pData[params[0]][pID], data2);
		else mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √¢√ªS√≠√´√† √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√• √®√£√∞√Æ√™√≥ %s [%d|3]. √è√∞√®√∑√®√≠√†: %s',%d,'%s')", pData[playerid][pName], GetName(params[0]), pData[params[0]][pWarns], params[1], pData[params[0]][pID], data2);
		mysql_tquery(mysql_Handle, string);
	}
	new Hour, Minute, Second, dialstr[500];
	string[0] = EOS;
	gettime(Hour, Minute, Second);
	mysql_format(mysql_Handle,string, 200, "INSERT INTO `warninfo` (`id_acc`, `date`, `time`, `anick`, `reason`) VALUES (%d, '%02d.%02d.%d', '%02d:%02d', '%s', '%s')", pData[params[0]][pID], Day, Month, Year, Hour, Minute, pData[playerid][pName], params[1]);
	mysql_tquery(mysql_Handle, string);
	SCM(params[0], COLOR_ERROR, "√Ñ√Æ √±√≠√ø√≤√®√ø √¢√±√•√µ √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√© √¢√†√¨ √ß√†√Ø√∞√•√π√•√≠√Æ √¢√±√≤√≥√Ø√†√≤√º √¢ √´√æ√°√ª√• √Æ√∞√£√†√≠√®√ß√†√∂√®√®");
	format(dialstr, sizeof dialstr, ""CWHITE"S√≠√≤√†: %02d %s %d √£.\n√Ç√†√∏ √≠√®√™: %s\n√ç√®√™ √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√†: %s\n√è√∞√®√∑√®√≠√†: %s\n\n{94b695}√Ö√±√´√® √Ç√ª √≠√• √±√Æ√£√´√†√±√≠√ª √± √≠√†√™√†√ß√†√≠√®√•√¨, √±√§√•√´√†√©√≤√• √±√™√∞√®√≠√∏√Æ√≤ (√™√´√†√¢√®√∏√† F8)\n√® √Æ√±√≤√†√¢√º√≤√• √¶√†√´√Æ√°√≥ √≠√† √¥√Æ√∞√≥√¨√• (√±√±√ª√´√™√†: forum-normative.ru)", Day, monthname, Year, GetName(params[0]), pData[playerid][pName], params[1]);
	SPD(params[0], 89, DIALOG_STYLE_MSGBOX, "{ff7336}√è√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√• (√¢√†√∞√≠)", dialstr, "Cerrar", "");

	add_c_warns(params[0]);
	Kick(params[0]);
	gAdmin[playerid][ADMIN_WARN] ++;
	SetPVarInt(playerid, "nowarnadm", true);
	return 1;
}
stock SecurityRemoveAdm(playerid) {
	new str_query[70];
	mysql_format(mysql_Handle, str_query, sizeof(str_query), "DELETE FROM `admin` WHERE `name` = '%s'", GetName(playerid));
	mysql_tquery(mysql_Handle, str_query);
	pData[playerid][pAdmin] = 0;
	TextDrawHideForPlayer(playerid, cheatpanelTD[0]);
	TextDrawHideForPlayer(playerid, cheatpanelTD[1]);
	SetPVarInt(playerid, "alogin33", false);
	SetPVarInt(playerid, "alogin43", false);

	format(string, 144, "[A] %s[%i] √°√ª√´ √±√≠√ø√≤ √±√®√±√≤√•√¨√Æ√© √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√®", GetName(playerid), playerid);
	AdminMessage(COLOR_RED, string);
}
CMD:apanel(playerid) {
	if(pData[playerid][pAdmin] < 1) return 1;
	return SPD(playerid, 24623, DIALOG_STYLE_LIST, "{cc9900}√è√†√≠√•√´√º √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√†", "[1] {00cc66}√è√Æ√™√†√ß√†√≤√º "CWHITE"√®√´√® "CERROR"√±√™√∞√ª√≤√º "CWHITE"√†√§√¨√®√≠-√±√Æ√Æ√°√π√•√≠√®√ø √¢ √∑√†√≤√•\n[2] {00cc66}√è√Æ√™√†√ß√†√≤√º "CWHITE"√®√´√® "CERROR"√±√™√∞√ª√≤√º "CWHITE"√Ø√Æ√´√Æ√±√™√® √†√≠√≤√®√∑√®√≤√Æ√¢\n[3] {00cc66}√è√Æ√™√†√ß√†√≤√º "CWHITE"√®√´√® "CERROR"√±√™√∞√ª√≤√º "CWHITE"√±√Æ√Æ√°√π√•√≠√®√ø √µ√•√´√Ø√•√∞√Æ√¢ √¢ √∑√†√≤√•\n"CLIGHTGREY"[4] √í√•√´√•√Ø√Æ√∞√≤√®√∞√Æ√¢√†√≤√º√±√ø √¢ √†√§√¨√®√≠-√™√¢√†√∞√≤√®√∞√≥","Seleccione", "Cerrar");
}
CMD:hcreate(playerid) {
	if(!IsAFull(playerid)) return 1;
	return SPD(playerid, 1919, DIALOG_STYLE_MSGBOX, ""CLITEBLUE"√ë√Æ√ßS√≠√≠√®√• √§√Æ√¨√†", ""CWHITE"√Ç√µ√Æ√§ √¢ √§√Æ√¨ √°√≥√§√•√≤ √∞√†√±√Ø√Æ√´√Æ√¶√•√≠ √¢ √¨√•√±√≤√•, √£√§√• √Ç√ª √±√≤√Æ√®√≤√•.\nQuieres √Ø√∞√Æ√§√Æ√´√¶√®√≤√º √±√Æ√ßS√≠√≠√®√• √§√Æ√¨√†?", "S√≠", "Cerrar");
}
CMD:proppanel(playerid) {
	if(!IsAFull(playerid)) return 1;
	return SPD(playerid, 3725, DIALOG_STYLE_LIST, ""CLITEBLUE"√à√¨√≥√π√•√±√≤√¢√Æ √±√•√∞√¢√•√∞√†", "{009933}[1] "CWHITE"√è√∞√ÆS√≠√≤√º √¢√±√• √§√Æ√¨√† √£√Æ√±√≥S√≠√∞√±√≤√¢√≥\n{009933}[2] "CWHITE"√è√∞√ÆS√≠√≤√º √¢√±√• √£√†√∞√†√¶√® √£√Æ√±√≥S√≠√∞√±√≤√¢√≥\n{009933}[3] "CWHITE"√è√∞√ÆS√≠√≤√º √¢√±√• √™√¢√†√∞√≤√®√∞√ª √£√Æ√±√≥S√≠√∞√±√≤√¢√≥\n{009933}[4] "CWHITE"√è√∞√ÆS√≠√≤√º √¢√±√• √Ø√∞√•√§√Ø√∞√®√ø√≤√®√ø (√°√®√ß√≠√•√±√ª) √£√Æ√±√≥S√≠√∞√±√≤√¢√≥\n{009933}[5] "CWHITE"√è√∞√ÆS√≠√≤√º √¢√±√• √Ä√á√ë √£√Æ√±√≥S√≠√∞√±√≤√¢√≥", "Seleccione", "Cerrar");
}
CMD:badge(playerid) {
	if(!IsAAudit(playerid) && !IsAMayor(playerid) && pData[playerid][pMember] != 11)
		return SCM(playerid, COLOR_LIGHTGREY, "√Ç√†√¨ √≠√•√§√Æ√±√≤√≥√Ø√≠√† √Ω√≤√† √¥√≥√≠√™√∂√®√ø");

	new badge_text[20];
	if(IsAAudit(playerid))
	{
		if(pData[playerid][pRank] == 6) badge_text = "√Ä√≥√§√®√≤√Æ√∞";
		else badge_text = "√ë√≤√†√∞√∏√®√© √†√≥√§√®√≤√Æ√∞";
	}
	else if(IsAMayor(playerid))
		badge_text = "√Ä√§√¢√Æ√™√†√≤";
	else if(pData[playerid][pMember] == 11)
		badge_text = "√à√≠√±√≤√∞√≥√™√≤√Æ√∞";
	PlayerPlaySound(playerid, 5202, 0.0, 0.0, 0.0);
	if(!badge_enable[playerid])
	{
		badge_3d[playerid] = Create3DTextLabel(badge_text,0xFFB000FF,0,0,0,15,0);
		Attach3DTextLabelToPlayer(badge_3d[playerid], playerid, 0.0, 0.0, 0.7);
		for(new i = 0; i < sizeof(badgeTD); i++)
			TextDrawShowForPlayer(playerid, badgeTD[i]);
		badge_enable[playerid] = true;
		SCM(playerid, COLOR_MAIN, "√Ç√ª √¢√™√´√æ√∑√®√´√® √Æ√≤√Æ√°√∞√†√¶√•√≠√®√• √±√¢√Æ√•√© √§√Æ√´√¶√≠√Æ√±√≤√® √≠√†√§ √£√Æ√´√Æ√¢√Æ√©");
	}
	else
	{
		Delete3DTextLabel(badge_3d[playerid]);
		for(new i = 0; i < sizeof(badgeTD); i++)
			TextDrawHideForPlayer(playerid, badgeTD[i]);
		badge_enable[playerid] = false;
		SCM(playerid, COLOR_ORANGE, "√Ç√ª √Æ√≤√™√´√æ√∑√®√´√® √Æ√≤√Æ√°√∞√†√¶√•√≠√®√• √±√¢√Æ√•√© √§√Æ√´√¶√≠√Æ√±√≤√® √≠√†√§ √£√Æ√´√Æ√¢√Æ√©");
	}
	return 1;
}
CMD:kick(playerid, params[]) {
	new day, month, year, hour, minuite, second;
	getdate(year, month, day);
	gettime(hour, minuite, second);
	FixHour(hour);
	hour = shifthour;
	new data2[22];
	format(data2, 22, "%02d.%02d.%d √¢ %02d:%02d",day, month, year, hour, minuite);
	if(pData[playerid][pAdmin] < 3) 
		return 1;
	if(pData[playerid][pAdmin] < 7 && GetPVarInt(playerid, "counting_punish") > gettime()) 
		return SCM(playerid, COLOR_ERROR, "√è√Æ√§√Æ√¶√§√®√≤√• √≠√•√±√™√Æ√´√º√™√Æ √±√•√™√≥√≠√§...");
	if(sscanf(params,"dS()[64]",params[0],params[1])) 
		return SCM(playerid, COLOR_LIGHTGREY, "Usar: /kick [id √®√£√∞√Æ√™√†] [√Ø√∞√®√∑√®√≠√† (√≠√•√Æ√°√ø√ß√†√≤√•√´√º√≠√Æ)]");
	if(IsPlayerNPC(params[0])) return SCM(playerid, COLOR_ERROR, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √™√®√™√≠√≥√≤√º √Ω√≤√Æ√£√Æ √∑√•√´√Æ√¢√•√™√†");
	if(!IsPlayerConnected(params[0])) 
		return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(pData[params[0]][pAdmin] > 0 || pData[params[0]][pLeader]) {
		if(GetPVarInt(playerid, "nokickadm")) {
			SetPVarInt(playerid, "nokickadm", false);
			return SCM(playerid, COLOR_ERROR, "√Ç√ª √±√Æ√°√®√∞√†√•√≤√•√±√º √™√®√™√≠√≥√≤√º √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√† √®√´√® √´√®√§√•√∞√†. √ó√≤√Æ√°√ª √Ø√∞√Æ√§√Æ√´√¶√®√≤√º, √¢√¢√•√§√®√≤√• √™√Æ√¨√†√≠√§√≥ √•√π¬∏ √∞√†√ß");
		}
	}
	string[0] = EOS;
	if(!strlen(params[1])) {
		if(pData[playerid][pSex] == 1) format(string,128, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √™√®√™√≠√≥√´ √®√£√∞√Æ√™√† %s",pData[playerid][pName],GetName(params[0]));
		else format(string,128, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √™√®√™√≠√≥√´√† √®√£√∞√Æ√™√† %s",pData[playerid][pName],GetName(params[0]));
		SCMTA_setting(COLOR_LIGHTRED, string); if(!pData[params[0]][p_setting][2]) SCM(params[0], COLOR_LIGHTRED, string);
		if(pData[playerid][pSex] == 1) mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √™√®√™√≠√≥√´ √®√£√∞√Æ√™√† %s',%d,'%s')", pData[playerid][pName], GetName(params[0]), pData[params[0]][pID], data2);
		else mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √™√®√™√≠√≥√´√† √®√£√∞√Æ√™√† %s',%d,'%s')", pData[playerid][pName], GetName(params[0]), pData[params[0]][pID], data2);
		mysql_tquery(mysql_Handle, string);
		Kick(params[0]);
	}
	else {
		if(pData[playerid][pSex] == 1) format(string,128, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √™√®√™√≠√≥√´ √®√£√∞√Æ√™√† %s. √è√∞√®√∑√®√≠√†: %s",pData[playerid][pName],GetName(params[0]), params[1]);
		else format(string,128, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √™√®√™√≠√≥√´√† √®√£√∞√Æ√™√† %s. √è√∞√®√∑√®√≠√†: %s",pData[playerid][pName],GetName(params[0]), params[1]);
		SCMTA_setting(COLOR_LIGHTRED, string); if(!pData[params[0]][p_setting][2]) SCM(params[0], COLOR_LIGHTRED, string);
		if(pData[playerid][pSex] == 1) mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √™√®√™√≠√≥√´ √®√£√∞√Æ√™√† %s. √è√∞√®√∑√®√≠√†: %s',%d,'%s')", pData[playerid][pName], GetName(params[0]), params[1], pData[params[0]][pID], data2);
		else mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √™√®√™√≠√≥√´√† √®√£√∞√Æ√™√† %s. √è√∞√®√∑√®√≠√†: %s',%d,'%s')", pData[playerid][pName], GetName(params[0]), params[1], pData[params[0]][pID], data2);
		mysql_tquery(mysql_Handle, string);
		Kick(params[0]);
	}
	gAdmin[playerid][ADMIN_KICK] ++;
	SetPVarInt(playerid,"counting_punish",gettime() + 5);
	SetPVarInt(playerid, "nokickadm", true);
	return 1;
}
CMD:sellsim(playerid, params[]) {
	if(pData[playerid][pPnumber] == -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√•√´√•√¥√Æ√≠√†. √ä√≥√Ø√®√≤√º √•√£√Æ √¨√Æ√¶√≠√Æ √¢ 24-7");
	if(GetPVarInt(playerid, "takephone")) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√•√´√•√¥√Æ√≠√†");
	if(!IsPlayerInRangeOfPoint(playerid, 50.0, 2342.4448,-801.1534,3001.0930)) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√Æ√°√µ√Æ√§√®√¨√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √±√†√´√Æ√≠√• √±√¢√ø√ß√®");
	if(GetPVarInt(playerid, "cancel_act")) return SCM(playerid, COLOR_GREY, "√Ç√ª √≥√¶√• √±√§√•√´√†√´√® √™√†√™√Æ√•-√≤√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √Ç√¢√•√§√®√≤√• "CBLUE"/revoke"CGREY", √∑√≤√Æ√°√ª √Æ√≤√Æ√ß√¢√†√≤√º √•√£√Æ");
	if(pData[playerid][pLevel] < 5) return SCM(playerid, COLOR_LIGHTGREY, "√è√∞√ÆS√≠√¶√† SIM-√™√†√∞√≤ √§√Æ√±√≤√≥√Ø√≠√† √± 5-√£√Æ √≥√∞√Æ√¢√≠√ø");
	if(sscanf(params,"dd", params[0], params[1])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /sellsim [id √®√£√∞√Æ√™√†] [√∂√•√≠√†]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(!ProxDetectorS(3.0, playerid, params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
	if(pData[params[0]][pLevel] < 5) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√¢√Æ√© √≥√∞√Æ√¢√•√≠√º √®√£√∞√Æ√™√† √§√Æ√´√¶√•√≠ √°√ª√≤√º √¢√ª√∏√• 5-√£√Æ");
	if(params[1] < 500 || params[1] > 500000) return SCM(playerid, COLOR_GREY, "√ñ√•√≠√† √Æ√≤ 500$ √§√Æ 500000$");
	if(GetPVarInt(params[0], "offer") != 9999) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™√≥ √≥√¶√• √±√§√•√´√†√´√® √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √é√≠ √§√Æ√´√¶√•√≠ "CMAIN"√Ø√∞√®√≠√ø√≤√º {cecece}√®√´√® "CERROR"√Æ√≤√¨√•√≠√®√≤√º "CLIGHTGREY"√•√£√Æ");
	if(pData[params[0]][pCash] < params[1]) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ω√≤√Æ√£√Æ √®√£√∞√Æ√™√† No √≤√†√™√Æ√© √±√≥√¨√¨√ª");
	if(params[0] == playerid) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Ø√∞√ÆS√≠√≤√º SIM-√™√†√∞√≤√≥ √±√•√°√•");
	SetPVarInt(playerid, "cancel_act", 1); SetPVarInt(playerid, "cancel_act_id", params[0]);
	SCMF(playerid, COLOR_BLUE, "√Ç√ª √Ø√∞√•√§√´√Æ√¶√®√´√® %s √™√≥√Ø√®√≤√º √Ç√†√∏√≥ SIM-√™√†√∞√≤√≥ √Ø√Æ√§ √≠√Æ√¨√•√∞√Æ√¨ %d √ß√† %d$", GetName(params[0]), pData[playerid][pPnumber], params[1]);
	SCMF(params[0], COLOR_BLUE, "%s √Ø√∞√•√§√´√†√£√†√•√≤ √Ç√†√¨ √™√≥√Ø√®√≤√º SIM-√™√†√∞√≤√≥ √Ø√Æ√§ √≠√Æ√¨√•√∞√Æ√¨ %d √ß√† %d$", pData[playerid][pName], pData[playerid][pPnumber], params[1]);
	SetPVarInt(params[0], "offer", 1), SetPVarInt(params[0], "SIM_price", params[1]), SetPVarInt(params[0], "SIM_seller", playerid), SetPVarInt(params[0], "sim_offer", 1);
	return SCM(params[0], -1, "√ç√†√¶√¨√®√≤√• "CMAIN"Y "CWHITE"√∑√≤√Æ√°√ª √±√Æ√£√´√†√±√®√≤√º√±√ø √®√´√® "CERROR"N "CWHITE"√§√´√ø √Æ√≤√™√†√ß√†");
}
CMD:tradesim(playerid, params[]) {
	if(pData[playerid][pPnumber] == -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√•√´√•√¥√Æ√≠√†. √ä√≥√Ø√®√≤√º √•√£√Æ √¨√Æ√¶√≠√Æ √¢ 24-7");
	if(GetPVarInt(playerid, "takephone")) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√•√´√•√¥√Æ√≠√†");
	if(!IsPlayerInRangeOfPoint(playerid, 50.0, 2342.4448,-801.1534,3001.0930)) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√Æ√°√µ√Æ√§√®√¨√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √±√†√´√Æ√≠√• √±√¢√ø√ß√®");
	if(GetPVarInt(playerid, "cancel_act")) return SCM(playerid, COLOR_GREY, "√Ç√ª √≥√¶√• √±√§√•√´√†√´√® √™√†√™√Æ√•-√≤√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √Ç√¢√•√§√®√≤√• "CBLUE"/revoke"CGREY", √∑√≤√Æ√°√ª √Æ√≤√Æ√ß√¢√†√≤√º √•√£√Æ");
	if(pData[playerid][pLevel] < 5) return SCM(playerid, COLOR_LIGHTGREY, "√é√°√¨√•√≠ SIM-√™√†√∞√≤√†√¨√® √§√Æ√±√≤√≥√Ø√•√≠ √± 5-√£√Æ √≥√∞√Æ√¢√≠√ø");
	if(sscanf(params,"dD()", params[0], params[1])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /tradesim [id √®√£√∞√Æ√™√†] [√§√Æ√Ø√´√†√≤√† (√≠√•√Æ√°√ø√ß√†√≤√•√´√º√≠√Æ)]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(!ProxDetectorS(3.0, playerid, params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
	if(pData[params[0]][pLevel] < 5) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√¢√Æ√© √≥√∞√Æ√¢√•√≠√º √®√£√∞√Æ√™√† √§√Æ√´√¶√•√≠ √°√ª√≤√º √¢√ª√∏√• 5-√£√Æ");
	if(GetPVarInt(params[0], "offer") != 9999) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™√≥ √≥√¶√• √±√§√•√´√†√´√® √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √é√≠ √§√Æ√´√¶√•√≠ {00cc00}√Ø√∞√®√≠√ø√≤√º "CLIGHTGREY"√®√´√® "CERROR"√Æ√≤√¨√•√≠√®√≤√º "CLIGHTGREY"√•√£√Æ");
	if(params[0] == playerid) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Æ√°√¨√•√≠√ø√≤√º√±√ø SIM-√™√†√∞√≤√†√¨√® √± √±√Æ√°√Æ√©");
	if(pData[params[0]][pCash] < params[1]) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ω√≤√Æ√£√Æ √®√£√∞√Æ√™√† No √≤√†√™√Æ√© √±√≥√¨√¨√ª");
	if(pData[params[0]][pPnumber] == -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì S√≠√≠√≠√Æ√£√Æ √®√£√∞√Æ√™√† √Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤ SIM-√™√†√∞√≤√†");
	if(GetPVarInt(params[0], "takephone")) return SCM(playerid, COLOR_LIGHTGREY, "√ì S√≠√≠√≠√Æ√£√Æ √®√£√∞√Æ√™√† √Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤ SIM-√™√†√∞√≤√†");
	if(!strlen(params[1])) {
		SCMF(playerid, COLOR_BLUE, "√Ç√ª √Ø√∞√•√§√´√Æ√¶√®√´√® %s √Æ√°√¨√•√≠√ø√≤√º√±√ø SIM-√™√†√∞√≤√†√¨√® √°√•√ß √§√Æ√Ø√´√†√≤√ª", GetName(params[0]));
		SCMF(params[0], COLOR_BLUE, "%s √Ø√∞√•√§√´√†√£√†√•√≤ √¢√†√¨ √Æ√°√¨√•√≠√ø√≤√º√±√ø SIM-√™√†√∞√≤√†√¨√® √°√•√ß √§√Æ√Ø√´√†√≤√ª", pData[playerid][pName]);
		SetPVarInt(params[0], "CSIM_surcharge", 0);
	}
	else if(params[1] < 500 || params[1] > 500000) return SCM(playerid, COLOR_GREY, "√Ñ√Æ√Ø√´√†√≤√† √Æ√≤ 500$ √§√Æ 500000$");
	else {
		SCMF(playerid, COLOR_BLUE, "√Ç√ª √Ø√∞√•√§√´√Æ√¶√®√´√® %s √Æ√°√¨√•√≠√ø√≤√º√±√ø SIM-√™√†√∞√≤√†√¨√® √± √§√Æ√Ø√´√†√≤√Æ√© %d$", GetName(params[0]), params[1]);
		SCMF(params[0], COLOR_BLUE, "%s √Ø√∞√•√§√´√†√£√†√•√≤ √¢√†√¨ √Æ√°√¨√•√≠√ø√≤√º√±√ø SIM-√™√†√∞√≤√†√¨√® √± √§√Æ√Ø√´√†√≤√Æ√© %d$", pData[playerid][pName], params[1]);
		SetPVarInt(params[0], "CSIM_surcharge", params[1]);
	}
	SetPVarInt(playerid, "cancel_act", 1); SetPVarInt(playerid, "cancel_act_id", params[0]);
	SetPVarInt(params[0], "offer", 1), SetPVarInt(params[0], "√ëSIM_seller", playerid), SetPVarInt(params[0], "csim_offer", 1);
	SetPVarInt(params[0], "number_celler", pData[playerid][pPnumber]);
	return SCM(params[0], -1, "√ç√†√¶√¨√®√≤√• "CMAIN"Y "CWHITE"√∑√≤√Æ√°√ª √±√Æ√£√´√†√±√®√≤√º√±√ø √®√´√® "CERROR"N "CWHITE"√§√´√ø √Æ√≤√™√†√ß√†");
}
CMD:drive(playerid) {
	if(pData[playerid][pLeader]) return SPD(playerid, 491, DIALOG_STYLE_MSGBOX, ""CLITEBLUE"√Ç√Æ√ß√¢√∞√†√≤ √≤√∞√†√≠√±√Ø√Æ√∞√≤√†", ""CWHITE"Quieres √ß√†√™√†√ß√†√≤√º √§√Æ√±√≤√†√¢√™√≥ √≠√•√®√±√Ø√Æ√´√º√ß√≥√•√¨√Æ√£√Æ √≤√∞√†√≠√±√Ø√Æ√∞√≤√† √≠√† √°√†√ß√≥ √Æ√∞√£√†√≠√®√ß√†√∂√®√®?\nS√≠√≠√≠√†√ø √≥√±√´√≥√£√† √±√≤√Æ√®√≤ {009966}1500$", "S√≠", "No");
	else return SCM(playerid, COLOR_LIGHTGREY, "√Ç√†√¨ √≠√•√§√Æ√±√≤√≥√Ø√≠√† S√≠√≠√≠√†√ø √¥√≥√≠√™√∂√®√ø");
}
CMD:log(playerid, params[])
{
	string[0] = EOS;
	if(pData[playerid][pAdmin] < 2)
	{
		mysql_format(mysql_Handle, string, 130, "SELECT `Text`, `Date` FROM `logs` WHERE `id_acc` = %d ORDER BY id DESC LIMIT 10", pData[playerid][pID]);
		mysql_tquery(mysql_Handle, string, "PlayerLogAcc", "d", playerid);
	}
	else
	{
		new text[MAX_PLAYER_NAME], bool:findnick = false;
		if(sscanf(params, "s[24]", text)) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /log [id √®√£√∞√Æ√™√† (√®√´√® √≠√®√™ √®√£√∞√Æ√™√† √Æ√¥√¥√´√†√©√≠)]");
		for(new i = 0; i < strlen(text); i ++)
		{
	        if(text[i] >= '0' && text[i] <= '9') continue;
	        findnick = true;
	        break;
	    }
   		if(findnick == true) // √≠√®√™
	   	{
	   		mysql_format(mysql_Handle, string, 128, "SELECT `id` FROM `accounts` WHERE `Name` = '%s'", text);
			mysql_tquery(mysql_Handle, string, "PlayerLogAccAdmCheck", "is", playerid, text);
	    }
   		else
   		{
   			new tid = strval(text);
   			if(!pData[tid][pLogin]) 
   				return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No √®√´√® √Æ√≠ √≠√• √†√¢√≤√Æ√∞√®√ß√Æ√¢√†√≠");
			mysql_format(mysql_Handle, string, 130, "SELECT `Text`, `Date` FROM `logs` WHERE `id_acc` = %d ORDER BY id DESC LIMIT 10", pData[tid][pID]);
			mysql_tquery(mysql_Handle, string, "PlayerLogAccAdmID", "dd", playerid, tid);
		}
	}
	return 1;
}
CB: PlayerLogAccAdmCheck(playerid) {
	new rows, tmpnumber;
	cache_get_row_count(rows);
	if(!rows) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™√† √± √≤√†√™√®√¨ √≠√®√™√Æ√¨ No √®√´√® √ß√†√Ø√®√±√® √Æ√≤√±√≥√≤√±√≤√¢√≥√æ√≤");
	cache_get_value_name_int(0, "id", tmpnumber);
	mysql_format(mysql_Handle, string, 130, "SELECT `Text`, `Date` FROM `logs` WHERE `id_acc` = %d ORDER BY id DESC LIMIT 10", tmpnumber);
	return mysql_tquery(mysql_Handle, string, "PlayerLogAccAdm", "d", playerid);
}
CB: PlayerLogAccAdmID(playerid, targetid) {
	new rows, tmpdte[32], tmptextlog[128];
	cache_get_row_count(rows);
	if(!IsPlayerConnected(targetid)) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™√† √± √≤√†√™√®√¨ ID No √®√´√® √ß√†√Ø√®√±√® √Æ√≤√±√≥√≤√±√≤√¢√≥√æ√≤");
	if(!rows) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™√† √± √≤√†√™√®√¨ ID No √®√´√® √ß√†√Ø√®√±√® √Æ√≤√±√≥√≤√±√≤√¢√≥√æ√≤");
	string[0] = EOS;
	for(new i = 0; i < rows; i ++) {
		cache_get_value_name(i, "Text", tmptextlog);
		cache_get_value_name(i, "Date", tmpdte);
		format(string, 1500, "%s"CWHITE"%s\t%s\n", string, tmpdte, tmptextlog);
	}
	
	return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{FFCD00}√è√Æ√±√´√•√§√≠√®√• √†√§√¨√®√≠ √§√•√©√±√≤√¢√®√ø √± √†√™√™√†√≥√≠√≤√Æ√¨", string, "Cerrar", "");
}
CB: PlayerLogAccAdm(playerid) {
	new rows, tmpdte[32], tmptextlog[128];
	cache_get_row_count(rows);
	if(!rows) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™√† √± √≤√†√™√®√¨ √≠√®√™√Æ√¨ No √®√´√® √ß√†√Ø√®√±√® √Æ√≤√±√≥√≤√±√≤√¢√≥√æ√≤");
	string[0] = EOS;
	for(new i = 0; i < rows; i ++) {
		cache_get_value_name(i, "Text", tmptextlog);
		cache_get_value_name(i, "Date", tmpdte);
		format(string, 1500, "%s"CWHITE"%s\t%s\n", string, tmpdte, tmptextlog);
	}

	return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{FFCD00}√è√Æ√±√´√•√§√≠√®√• √†√§√¨√®√≠ √§√•√©√±√≤√¢√®√ø √± √†√™√™√†√≥√≠√≤√Æ√¨", string, "Cerrar", "");
}
CB: PlayerLogAcc(playerid) {
	new rows, tmpdte[32], tmptextlog[128];
	cache_get_row_count(rows);
	if(!rows) return SCM(playerid, COLOR_LIGHTGREY, "√á√†√Ø√®√±√® √≠√†√™√†√ß√†√≠√®√© √≠√† √Ç√†√∏√•√¨ √†√™√™√†√≥√≠√≤√• √≠√• √≠√†√©√§√•√≠√ª");
	string[0] = EOS;
	for(new i = 0; i < rows; i ++) {
		cache_get_value_name(i, "Text", tmptextlog);
		cache_get_value_name(i, "Date", tmpdte);
		format(string, 1500, "%s"CWHITE"%s\t%s\n", string, tmpdte, tmptextlog);
	}

	return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{FFCD00}√è√Æ√±√´√•√§√≠√®√• √†√§√¨√®√≠ √§√•√©√±√≤√¢√®√ø √± √†√™√™√†√≥√≠√≤√Æ√¨", string, "Cerrar", "");
}
CMD:back(playerid) {
	if(!back_tp[playerid]) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√≥ √¥√≥√≠√™√∂√®√æ √¨√Æ√¶√≠√Æ √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √≤√Æ√´√º√™√Æ √Ø√Æ√±√´√• {ff9945}/gotp");
	if(is_salonsee[playerid]) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Ω√≤√≥ √™√Æ√¨√†√≠√§√≥ √¢ S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤");
	if(GetPVarInt(playerid, "loader_job") == 1) return SCM(playerid, COLOR_GREY, "√Ç√†√¨ √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √ß√†√¢√•√∞√∏√®√≤√º √¢√±√• √≠√†√∑√†√≤√ª√• √∞√†√°√Æ√≤√ª √® √§√•√©√±√≤√¢√®√ø");
    if(bloody_en[playerid]) return SCM(playerid, COLOR_GREY, "√Ç√†√¨ √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √ß√†√¢√•√∞√∏√®√≤√º √¢√±√• √≠√†√∑√†√≤√ª√• √∞√†√°√Æ√≤√ª √® √§√•√©√±√≤√¢√®√ø");
    if(workzavod[playerid]) return SCM(playerid, COLOR_GREY, "√Ç√†√¨ √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √ß√†√¢√•√∞√∏√®√≤√º √¢√±√• √≠√†√∑√†√≤√ª√• √∞√†√°√Æ√≤√ª √® √§√•√©√±√≤√¢√®√ø");
	if(pData[playerid][pLowSkill] == 1 || pData[playerid][pHighSkill] == 1) return SCM(playerid, COLOR_GREY, "√Ç√†√¨ √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √ß√†√¢√•√∞√∏√®√≤√º √¢√±√• √≠√†√∑√†√≤√ª√• √∞√†√°√Æ√≤√ª √® √§√•√©√±√≤√¢√®√ø");
	load_mode(playerid);
	SetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
	SetPlayerInterior(playerid, intback[playerid]);
	SetPlayerVirtualWorld(playerid, vwback[playerid]);
	SCM(playerid, COLOR_BLUE, "√Ç√ª √¢√•√∞√≠√≥√´√®√±√º √≤√≥S√≠, √£√§√• √°√ª√´√® √§√Æ √≤√•√´√•√Ø√Æ√∞√≤√†√∂√®√®");
	return back_tp[playerid] = false;
}
CMD:ip(playerid, params[]) {
	new riptwink[30];
	if(pData[playerid][pAdmin] < 3) return 1;
	if(sscanf(params, "s[30]", riptwink)) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /ip [ip √†√§√∞√•√±]");
	mysql_format(mysql_Handle, string, 128, "SELECT `id`, `Name` FROM `accounts` WHERE `pIpReg` = '%s'", riptwink);
	return mysql_tquery(mysql_Handle, string, "TwinksIP_reg", "ds", playerid, riptwink);
}
CB: TwinksIP_reg(playerid, riptwink[]) {
	string[0] = EOS;
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SCM(playerid, COLOR_LIGHTGREY, "√Ä√™√™√†√≥√≠√≤√ª √± √≤√†√™√®√¨ √∞√•√£√®√±√≤√∞√†√∂√®√Æ√≠√≠√ª√¨ IP √†√§√∞√•√±√Æ√¨ √Æ√≤√±√≥√≤√±√≤√¢√≥√æ√≤");
	new id_accs, name_accs[24];
	strcat(string, "√ç√Æ√¨√•√∞ √†√™√™√†√≥√≠√≤√†\t√ç√®√™\n\n"CWHITE"");
	for(new i = 0; i < rows; i ++) {
		cache_get_value_name_int(i, "id", id_accs);
		cache_get_value_name(i, "Name", name_accs);
		format(string, 700, "%s%d\t\t%s\n", string, id_accs, name_accs);
	}
	return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, riptwink, string, "Cerrar", "");
}
CMD:lip(playerid, params[]) {
	new iptwink[30];
	if(pData[playerid][pAdmin] < 3) return 1;
	if(sscanf(params, "s[30]", iptwink)) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /lip [ip √†√§√∞√•√±]");
	mysql_format(mysql_Handle, string, 128, "SELECT `id`, `Name` FROM `accounts` WHERE `pGetonIP` = '%s'", iptwink);
	return mysql_tquery(mysql_Handle, string, "TwinksIP_log", "ds", playerid, iptwink);
}
CB: TwinksIP_log(playerid, iptwink[]) {
	string[0] = EOS;
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SCM(playerid, COLOR_LIGHTGREY, "√Ä√™√™√†√≥√≠√≤√ª √± √≤√†√™√®√¨ √Ø√Æ√±√´√•√§√≠√®√¨ IP √†√§√∞√•√±√Æ√¨ √Æ√≤√±√≥√≤√±√≤√¢√≥√æ√≤");
	new id_accs, name_accs[24];
	strcat(string, "√ç√Æ√¨√•√∞ √†√™√™√†√≥√≠√≤√†\t√ç√®√™\n\n"CWHITE"");
	for(new i = 0; i < rows; i ++) {
		cache_get_value_name_int(i, "id", id_accs);
		cache_get_value_name(i, "Name", name_accs);
		format(string, 700, "%s%d\t\t%s\n", string, id_accs, name_accs);
	}
	return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, iptwink, string, "Cerrar", "");
}
CMD:setpvw(playerid, params[]) {
	if(pData[playerid][pAdmin] < 7) return 1;
	new to_player, vw;
	if(sscanf(params, "dD()", to_player, vw)) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /setpvw [id √®√£√∞√Æ√™√†] [id √¢√®√∞√≤√≥√†√´√º√≠√Æ√£√Æ √¨√®√∞√† (√≠√•√Æ√°√ø√ß√†√≤√•√´√º√≠√Æ)]");
	if(!IsPlayerConnected(to_player)) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	SetPlayerVirtualWorld(to_player, vw);
	if(IsPlayerInAnyVehicle(to_player)) SetVehicleVirtualWorld(GetPlayerVehicleID(to_player), vw);
	return SCMF(playerid, 0x00CC66FF, "√à√£√∞√Æ√™√≥ id %d √≥√±√≤√†√≠√Æ√¢√´√•√≠ √¢√®√∞√≤. √¨√®√∞ %d", to_player, vw);
}
CMD:setpi(playerid, params[]) {
	if(pData[playerid][pAdmin] < 7) return 1;
	new to_player, int;
	if(sscanf(params, "dD()", to_player, int)) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /setpi [id √®√£√∞√Æ√™√†] [id √®√≠√≤√•√∞√º√•√∞√† (√≠√•√Æ√°√ø√ß√†√≤√•√´√º√≠√Æ)]");
	if(!IsPlayerConnected(to_player)) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	SetPlayerInterior(to_player, int);
	if(IsPlayerInAnyVehicle(to_player)) LinkVehicleToInterior(GetPlayerVehicleID(to_player), int);
	return SCMF(playerid, 0x00CC66FF, "√à√£√∞√Æ√™√≥ id %d √≥√±√≤√†√≠√Æ√¢√´√•√≠ √®√≠√≤√•√∞√º√•√∞ %d", to_player, int);
}

CMD:setvw(playerid, params[]) {
	if(pData[playerid][pAdmin] < 3) return 1;
	new vworld;
	if(sscanf(params,"d",vworld)) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /setvw [id √¢√®√∞√≤√≥√†√´√º√≠√Æ√£√Æ √¨√®√∞√†]");
	SetPlayerVirtualWorld(playerid,vworld);
	if(IsPlayerInAnyVehicle(playerid)) SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), vworld);
	return SCMF(playerid, -1, "√Ç√®√∞√≤√≥√†√´√º√≠√ª√© √¨√®√∞: %d", vworld);
}
CMD:setint(playerid, params[]) {
	if(pData[playerid][pAdmin] < 3) return 1;
	new interior;
	if(sscanf(params,"d",interior)) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /setint [id √®√≠√≤√•√∞√º√•√∞√†]");
	SetPlayerInterior(playerid, interior);
	if(IsPlayerInAnyVehicle(playerid)) LinkVehicleToInterior(GetPlayerVehicleID(playerid), interior);
	return SCMF(playerid, -1, "√à√≠√≤√•√∞√º√•√∞: %d", interior);
}
CMD:spinfo(playerid) {
	if(pData[playerid][pAdmin] < 1) return 1;
	if(GetPVarInt(playerid, "see_status")) {
		DeletePVar(playerid, "see_status");
		SCM(playerid, -1, "√à√≠√¥. √±√Æ√Æ√°√π√•√≠√®√ø √¢ SP √∞√•√¶√®√¨√• "CERROR"√Æ√≤√™√´√æ√∑√•√≠√ª");
	}
	else {
		SetPVarInt(playerid, "see_status", true);
		SCM(playerid, -1, "√à√≠√¥. √±√Æ√Æ√°√π√•√≠√®√ø √¢ SP √∞√•√¶√®√¨√• "CMAIN"√¢√™√´√æ√∑√•√≠√ª");
	}
	return 1;
}
alias:spplayer("sppl");
CMD:spplayer(playerid, params[]) {
	if(pData[playerid][pAdmin] < 2) return 1;
	if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /sppl(ayer) [id √®√£√∞√Æ√™√†]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	string[0] = EOS;
	if(pData[playerid][pSex] == 1) format(string, 128, "[A] %s[%d] √ß√†√±√Ø√†√¢√≠√®√´ √®√£√∞√Æ√™√† %s[%d]",pData[playerid][pName],playerid, GetName(params[0]),params[0]);
	else format(string, 128, "[A] %s[%d] √ß√†√±√Ø√†√¢√≠√®√´√† √®√£√∞√Æ√™√† %s[%d]",pData[playerid][pName],playerid, GetName(params[0]),params[0]);
	AdminMessage(COLOR_GREY, string);
	if(GetPVarInt(playerid, "AdminMessages")) SCM(playerid, COLOR_GREY, string);

	new Float:plx,Float:ply,Float:plz;
	GetPlayerPos(params[0], plx,ply,plz);
	SetPlayerPos(params[0], plx,ply,plz+2);

	return SpawnPlayer(params[0]);
}

CMD:report(playerid, params[]) {
	if(Iter_Contains(Reports, playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≥√¶√• √Æ√±√≤√†√¢√®√´√® √Æ√°√∞√†√π√•√≠√®√• √†√§√¨√®√≠√®√±√≤√∞√†√∂√®√®. √Ñ√Æ√¶√§√®√≤√•√±√º √Æ√≤√¢√•√≤√†");
	if(Iter_Count(Reports) >= 50) return SCM(playerid, COLOR_GREY, "√é√∑√•√∞√•√§√º √Æ√°√∞√†√π√•√≠√®√© √Ø√•√∞√•√Ø√Æ√´√≠√•√≠√†");
	if(pData[playerid][pMuteTime_R]) return SCM(playerid, COLOR_ERROR, "√Ñ√Æ√±√≤√≥√Ø √¢ √∞√•√Ø√Æ√∞√≤ √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√≠");
	if(time_admdelay[playerid] > 0) return SCMF(playerid, COLOR_LIGHTGREY, "√Ç√ª √±√¨√Æ√¶√•√≤√• √±√¢√ø√ß√†√≤√º√±√ø √± √†√§√¨√®√≠√®√±√≤√∞√†√∂√®√•√© √∑√•√∞√•√ß "CORANGE"%d √±√•√™", time_admdelay[playerid]);
	new rep_text[64];
	if(sscanf(params, "s[64]", rep_text)) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /report {cccc66}[√≤√•√™√±√≤ √Æ√°√∞√†√π√•√≠√®√ø]");
	if(strlen(rep_text) > 64) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √¢√¢√•√´√® √±√´√®√∏√™√Æ√¨ √§√´√®√≠√≠√ª√© √≤√•√™√±√≤");
	string[0] = EOS;
	format(string, 128, "[/pm] √é√°√∞√†√π√•√≠√®√• ¬π%d √Æ√≤ %s[%d]: {FFCD00}%s", Iter_Count(Reports) + 1, GetName(playerid), playerid, rep_text);
	SendRepMes(0x35AA50FF, string);
	if(pData[playerid][pAdmin] < 1 && !pData[playerid][pHelper]) SCMF(playerid, 0x35AA50FF, "√é√°√∞√†√π√•√≠√®√• √Æ√≤ %s[%d]: {FFCD00}%s", GetName(playerid), playerid, rep_text);
	else if(GetPVarInt(playerid, "AdminMessages")) SCMF(playerid, 0x35AA50FF, "√é√°√∞√†√π√•√≠√®√• √Æ√≤ %s[%d]: {FFCD00}%s", GetName(playerid), playerid, rep_text);
	
	Iter_Add(Reports, playerid);
	SCM(playerid, -1, "√é√°√∞√†√π√•√≠√®√• √Ø√∞√®√≠√ø√≤√Æ. √é√¶√®S√≠√©√≤√• √Æ√≤√¢√•√≤√† √Æ√≤ √†√§√¨√®√≠√®√±√≤√∞√†√∂√®√®");
	strmid(pTemp[playerid][rep_rport], rep_text, 0, strlen(rep_text), 97);

	new hour, minuite, second;
	gettime(hour, minuite, second);
	format(report_date[playerid], 20, "%02d:%02d",hour, minuite);
	time_admdelay[playerid] = 15;
	return 1;
}
CMD:exit(playerid) {
	new h = GetPVarInt(playerid, "HouseID");
	if(IsPlayerInRangeOfPoint(playerid, 5, HouseInfo[h][hExit][0], HouseInfo[h][hExit][1], HouseInfo[h][hExit][2]) && GetPlayerVirtualWorld(playerid) == h + 50) {
		if(!HouseInfo[h][hPool]) {
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerPos(playerid, HouseInfo[h][hEnter][0], HouseInfo[h][hEnter][1], HouseInfo[h][hEnter][2]);
			DeletePVar(playerid, "HouseID");
			antiflood_move[playerid] = gettime() + 3;
		}
		else SPD(playerid, 70, DIALOG_STYLE_MSGBOX, ""CLITEBLUE"√Ç√ª√µ√Æ√§ √®√ß √§√Æ√¨√†", ""CWHITE"√ä√≥S√≠ Quieres √¢√ª√©√≤√®?", "√ì√´√®√∂√†", "√Å√†√±√±√•√©√≠");
		return 1;
	}
	else return SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √§√Æ√¨√• √¢√Æ√ß√´√• √¢√ª√µ√ÆS√≠");
}

CMD:ears(playerid) {
	if(pData[playerid][pAdmin] < 2) return 1;
	if(GetPVarInt(playerid, "ears")) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√±√´√≥√∏√™√† SMS √±√Æ√Æ√°√π√•√≠√®√© √Æ√≤√™√´√æ√∑√•√≠√†"), SetPVarInt(playerid, "ears", false);
	format(string, 128, "[A] %s[%d] √Ø√∞√Æ√±√´√≥√∏√®√¢√†√•√≤ {febc41}SMS", pData[playerid][pName], playerid);
	AdminMessage(COLOR_GREY, string);
	if(GetPVarInt(playerid, "AdminMessages")) SCM(playerid, COLOR_GREY, string);
	SetPVarInt(playerid, "ears", true);
	return SCM(playerid, COLOR_ORANGE, "√Ñ√´√ø √Æ√≤√™√´√æ√∑√•√≠√®√ø √Ø√∞√Æ√±√´√≥√∏√™√® √¢√¢√•√§√®√≤√• √™√Æ√¨√†√≠√§√≥ √•√π¬∏ √∞√†√ß");
}

CMD:msg(playerid, params[]) {
	if(pData[playerid][pAdmin] < 3) return 1;
	if(sscanf(params, "s[100]", params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /msg [√≤√•√™√±√≤]");
	string[0] = EOS;
	format(string, 144, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s: %s", pData[playerid][pName], params[0]);
	SCMTA(0xFFCD00AA, string);
	return 1;
}
CMD:try(playerid, params[]) {
	if(GetPVarInt(playerid,"gag"))
		return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √™√´√ø√Ø, √Ç√ª √≠√• √¨√Æ√¶√•√≤√• √£√Æ√¢√Æ√∞√®√≤√º");

	if(pData[playerid][pMuteTime])
		return SCM(playerid, COLOR_ERROR, "√Ñ√Æ√±√≤√≥√Ø √¢ √∑√†√≤ √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√≠. √ì√ß√≠√†√≤√º √¢√∞√•√¨√ø √§√Æ √Æ√™√Æ√≠√∑√†√≠√®√ø √°√†√≠√† √∑√†√≤√†: {66cc33}/time");

	if(sscanf(params, "s[64]", params[0]))
		return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /try [√§√•√©√±√≤√¢√®√•]");

	string[0] = EOS;
	switch(random(2)) {
		case 0: format(string, 128, "%s %s "CMAIN"| √ìS√≠√∑√≠√Æ", pData[playerid][pName],params[0]);
		case 1: format(string, 128, "%s %s "CERROR"| √ç√•√≥S√≠√∑√≠√Æ", pData[playerid][pName],params[0]);
	}
	SetPlayerChatBubble(playerid, params[0], COLOR_PURPLE, 20.0, 10000);
	return ProxDetector(10.0, playerid, string, COLOR_PURPLE);
}
CMD:n(playerid, params[]) {
	if(pData[playerid][pMuteTime]) return SCM(playerid, COLOR_ERROR, "√Ñ√Æ√±√≤√≥√Ø √¢ √∑√†√≤ √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√≠. √ì√ß√≠√†√≤√º √¢√∞√•√¨√ø √§√Æ √Æ√™√Æ√≠√∑√†√≠√®√ø √°√†√≠√† √∑√†√≤√†: {66cc33}/time");
	if(sscanf(params,"s[100]",params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /n [non-RP √±√Æ√Æ√°√π√•√≠√®√•]");
	string[0] = EOS;
	format(string, 200, "(( %s: %s ))", pData[playerid][pName], params[0]);
	SetPlayerChatBubble(playerid, params[0], COLOR_GREY, 20.0, 10000);
	return ProxDetector(20.0, playerid, string, 0xCCCC99FF);
}
alias:history("hist");
CMD:history(playerid, params[]) {
	if(sscanf(params, "s[24]", params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /hist(ory) [√®√¨√ø √®√£√∞√Æ√™√†]");
	string[0] = EOS;
	mysql_format(mysql_Handle, string, 90, "SELECT `id` FROM `accounts` WHERE `Name` = '%s'", params[0]);
	return mysql_tquery(mysql_Handle, string, "HistCheck", "ds", playerid, params[0]);
}
CB: HistCheck(playerid, tmpnname[]) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SCM(playerid, COLOR_GREY, "√à√£√∞√Æ√™ √± √≤√†√™√®√¨ √®√¨√•√≠√•√¨ √≠√• √≠√†√©√§√•√≠");
	new tmpidd; cache_get_value_name_int(0, "id", tmpidd);
	string[0] = EOS;
	mysql_format(mysql_Handle, string, 130, "SELECT `Name`, `Date` FROM `log_name` WHERE `IdAcc` = %d ORDER BY id DESC", tmpidd);
	return mysql_tquery(mysql_Handle, string, "HistShow", "ds", playerid, tmpnname);
}
CB: HistShow(playerid, tmpnname[]) {
	new rows;
	cache_get_row_count(rows);
	new tmpnewnick[24], tmpstrin[62], twostrin[512], tmpdata[64]; 
	strcat(twostrin, "S√≠√≤√†\t√à√¨√ø\n");
	format(tmpstrin, sizeof(tmpstrin), ""CCYAN"√è√∞√Æ√∏√´√ª√• √®√¨√•√≠√† %s", tmpnname);
	if(!rows) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, tmpstrin, ""CWHITE"√à√±√≤√Æ√∞√®√ø √Ø√∞√Æ√∏√´√ª√µ √®√¨¬∏√≠ √®√£√∞√Æ√™√† √Ø√≥√±√≤√†", "Cerrar", "");
	for(new i = 0; i < rows; i ++) {
		cache_get_value_name(i, "Name", tmpnewnick);
		cache_get_value_name(i, "Date", tmpdata);
		format(twostrin, sizeof(twostrin), "%s√Ñ√Æ %s\t%s\n", twostrin, tmpdata, tmpnewnick);
	}
	return SPD(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, tmpstrin, twostrin, "Cerrar", "");
}
CMD:warninfo(playerid, params[]) {
	string[0] = EOS;
	if(pData[playerid][pAdmin] < 1) {
		if(pData[playerid][pWarns] == 0) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CERROR"√Ñ√•√©√±√≤√¢√≥√æ√π√®√• √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√ø", ""CWHITE"√ç√† √Ç√†√∏√•√¨ √†√™√™√†√≥√≠√≤√• No √§√•√©√±√≤√¢√≥√æ√π√®√µ √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√© (√¢√†√∞√≠√Æ√¢)", "Cerrar", "");
		mysql_format(mysql_Handle, string, 130, "SELECT * FROM `warninfo` WHERE `id_acc` = %d LIMIT %d", pData[playerid][pID], pData[playerid][pWarns]);
		mysql_tquery(mysql_Handle, string, "WarnInfo", "d", playerid);
	}
	else {
		new text[MAX_PLAYER_NAME], bool:findnick = false;
		if(sscanf(params, "s[24]", text)) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /warninfo [id √®√£√∞√Æ√™√† (√®√´√® √≠√®√™ √®√£√∞√Æ√™√† √Æ√¥√¥√´√†√©√≠)]");
		for(new i = 0; i < strlen(text); i ++) {
	        if(text[i] >= '0' && text[i] <= '9') continue;
	        findnick = true;
	        break;
	    }
   		if(findnick == true) // √≠√®√™
	   	{
	   		mysql_format(mysql_Handle, string, 90, "SELECT `id`, `pWarns` FROM `accounts` WHERE `Name` = '%s'", text);
			mysql_tquery(mysql_Handle, string, "WarnInfoAdmCheck", "d", playerid);
	    }
   		else
   		{
   			new tid = strval(text);
			mysql_format(mysql_Handle, string, 130, "SELECT * FROM `warninfo` WHERE `id_acc` = %d LIMIT %d", pData[tid][pID], pData[tid][pWarns]);
			mysql_tquery(mysql_Handle, string, "WarnInfoAdmID", "ddd", playerid, pData[tid][pWarns], tid);
		}
	}
	return 1;
}
CB: WarnInfoAdmID(playerid, warns, targetid) {
	new data[11], time[32], anick[24], reason[34];
	string[0] = EOS;
	if(!IsPlayerConnected(targetid)) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √± √≤√†√™√®√¨ ID √®√´√® √≠√®√™√Æ√¨ √≠√• √≠√†√©√§√•√≠");
	new rows;
	cache_get_row_count(rows);
	if(warns == 0) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CERROR"√Ñ√•√©√±√≤√¢√≥√æ√π√®√• √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√ø", ""CWHITE"√ç√† √†√™√™√†√≥√≠√≤√• √®√£√∞√Æ√™√† No √§√•√©√±√≤√¢√≥√æ√π√®√µ √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√© (√¢√†√∞√≠√Æ√¢)", "Cerrar", "");
	strcat(string, "S√≠√≤√† √® √¢√∞√•√¨√ø\t\t√ä√•√¨ √¢√ªS√≠√≠\t√è√∞√®√∑√®√≠√†"CWHITE"\n\n");
	for(new i = 0; i < rows; i ++) {
		cache_get_value_name(i, "date", data);
		cache_get_value_name(i, "time", time);
		cache_get_value_name(i, "anick", anick);
		cache_get_value_name(i, "reason", reason);
		format(string, 800, "%s%s √¢ %s\t%s\t%s\n", string, data, time, anick, reason);
	}
	format(string, 800, "%s\n"CWHITE"√ä√Æ√´√®√∑√•√±√≤√¢√Æ √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√©: "CLITEBLUE"%d"CWHITE"", string, warns);
	return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CERROR"√Ñ√•√©√±√≤√¢√≥√æ√π√®√• √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√ø", string, "Cerrar", "");
}
CB: WarnInfoAdmCheck(playerid) {
	new rows, id_acc, c_warns;
	cache_get_row_count(rows);
	if(!rows) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √± √≤√†√™√®√¨ ID √®√´√® √≠√®√™√Æ√¨ √≠√• √≠√†√©√§√•√≠");
	cache_get_value_name_int(0, "id", id_acc);
	cache_get_value_name_int(0, "pWarns", c_warns);
	if(c_warns == 0) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CERROR"√Ñ√•√©√±√≤√¢√≥√æ√π√®√• √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√ø", ""CWHITE"√ç√† √†√™√™√†√≥√≠√≤√• √®√£√∞√Æ√™√† No √§√•√©√±√≤√¢√≥√æ√π√®√µ √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√© (√¢√†√∞√≠√Æ√¢)", "Cerrar", "");
	string[0] = EOS;
	mysql_format(mysql_Handle, string, 130, "SELECT * FROM `warninfo` WHERE `id_acc` = %d LIMIT %d", id_acc, c_warns);
	return mysql_tquery(mysql_Handle, string, "WarnInfoAdm", "dd", playerid, c_warns);
}
CB: WarnInfoAdm(playerid, warns) {
	new data[11], time[32], anick[24], reason[34];
	string[0] = EOS;
	new rows;
	cache_get_row_count(rows);
	strcat(string, "S√≠√≤√† √® √¢√∞√•√¨√ø\t\t√ä√•√¨ √¢√ªS√≠√≠\t√è√∞√®√∑√®√≠√†"CWHITE"\n\n");
	for(new i = 0; i < rows; i ++) {
		cache_get_value_name(i, "date", data);
		cache_get_value_name(i, "time", time);
		cache_get_value_name(i, "anick", anick);
		cache_get_value_name(i, "reason", reason);
		format(string, 800, "%s%s √¢ %s\t%s\t%s\n", string, data, time, anick, reason);
	}
	format(string, 800, "%s\n"CWHITE"√ä√Æ√´√®√∑√•√±√≤√¢√Æ √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√©: "CLITEBLUE"%d"CWHITE"", string, warns);
	return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CERROR"√Ñ√•√©√±√≤√¢√≥√æ√π√®√• √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√ø", string, "Cerrar", "");
}
CB: WarnInfo(playerid) {
	new data[11], time[32], anick[24], reason[34];
	string[0] = EOS;
	new rows;
	cache_get_row_count(rows);
	strcat(string, "S√≠√≤√† √® √¢√∞√•√¨√ø\t\t√ä√•√¨ √¢√ªS√≠√≠\t√è√∞√®√∑√®√≠√†"CWHITE"\n\n");
	for(new i = 0; i < rows; i ++) {
		cache_get_value_name(i, "date", data);
		cache_get_value_name(i, "time", time);
		cache_get_value_name(i, "anick", anick);
		cache_get_value_name(i, "reason", reason);
		format(string, 800, "%s%s √¢ %s\t%s\t%s\n", string, data, time, anick, reason);
	}
	format(string, 800, "%s\n"CWHITE"√ä√Æ√´√®√∑√•√±√≤√¢√Æ √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√©: "CLITEBLUE"%d\n"CWHITE"√Ç√ª √¨√Æ√¶√•√≤√• √¢√Æ√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º√±√ø √≥√±√™√Æ√∞√•√≠√≠√ª√¨ √±√≠√ø√≤√®√•√¨ "CCYAN"(/mn > 6)", string, pData[playerid][pWarns]);
	return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CERROR"√Ñ√•√©√±√≤√¢√≥√æ√π√®√• √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√ø", string, "Cerrar", "");
}
CMD:unrmute(playerid, params[]) {
	if(pData[playerid][pAdmin] < 2) return 1;
	new val[MAX_PLAYER_NAME];
	if(sscanf(params, "s[24]",val)) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /unrmute [id √®√£√∞√Æ√™√† (√®√´√® √≠√®√™ √®√£√∞√Æ√™√† √Æ√¥√¥√´√†√©√≠)]");
	new bool:findnick = false;
	for(new i = 0; i < strlen(val); i ++) {
        if(val[i] >= '0' && val[i] <= '9') continue;
        findnick = true;
        break;
    }
    if(findnick == true) // √≠√®√™
    {
    	if(IsPlayerConnected(GetPlayerID(val))) {
	    	new idd = GetPlayerID(val);
			if(pData[idd][pMuteTime_R] <= 0) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™√≥ √≠√• √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√≠ √§√Æ√±√≤√≥√Ø √¢ √∞√•√Ø√Æ√∞√≤");
			pData[idd][pMuteTime_R] = 0;
			UpdatePlayerData(idd, "pMuteTime_R", 0);
			new day, month, year, hour, minuite, second;
			getdate(year, month, day);
			gettime(hour, minuite, second);
			FixHour(hour);
			hour = shifthour;
			new data2[22];
			format(data2, 22, "%02d.%02d.%d √¢ %02d:%02d",day, month, year, hour, minuite);
			string[0] = EOS;
			if(pData[playerid][pSex] == 1) format(string, 128, "[A] %s[%d] √∞√†√ß√°√´√Æ√™√®√∞√Æ√¢√†√´ √§√Æ√±√≤√≥√Ø √¢ √∞√•√Ø√Æ√∞√≤ %s[%d]", GetName(playerid), playerid, GetName(idd), idd);
			else format(string, 128, "[A] %s[%d] √∞√†√ß√°√´√Æ√™√®√∞√Æ√¢√†√´√† √§√Æ√±√≤√≥√Ø √¢ √∞√•√Ø√Æ√∞√≤ %s[%d]", GetName(playerid), playerid, GetName(idd), idd);
			AdminMessage(COLOR_GREY, string);
			if(pData[playerid][pSex] == 1) SCMF(idd, 0x33CC00AA, "%s[%d] √∞√†√ß√°√´√Æ√™√®√∞√Æ√¢√†√´ √Ç√†√¨ √§√Æ√±√≤√≥√Ø √¢ √∞√•√Ø√Æ√∞√≤", GetName(playerid), playerid);
			else SCMF(idd, 0x33CC00AA, "%s[%d] √∞√†√ß√°√´√Æ√™√®√∞√Æ√¢√†√´√† √Ç√†√¨ √§√Æ√±√≤√≥√Ø √¢ √∞√•√Ø√Æ√∞√≤", GetName(playerid), playerid);
			if(pData[playerid][pSex] == 1) mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('%s[%d] √∞√†√ß√°√´√Æ√™√®√∞√Æ√¢√†√´ √§√Æ√±√≤√≥√Ø √¢ √∞√•√Ø√Æ√∞√≤ %s[%d]',%d,'%s')", GetName(playerid), playerid, GetName(idd), idd, pData[idd][pID], data2);
			else mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('%s[%d] √∞√†√ß√°√´√Æ√™√®√∞√Æ√¢√†√´√† √§√Æ√±√≤√≥√Ø √¢ √∞√•√Ø√Æ√∞√≤ %s[%d]',%d,'%s')", GetName(playerid), playerid, GetName(idd), idd, pData[idd][pID], data2);
			return mysql_tquery(mysql_Handle, string);
    	}
		mysql_format(mysql_Handle, string, 128, "SELECT * FROM `accounts` WHERE `Name` = '%s'", val);
		mysql_tquery(mysql_Handle, string, "UnMute_R", "is",playerid,val);
    }
    else // id
    {
    	new idd = strval(val);
		if(pData[idd][pMuteTime_R] <= 0) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™√≥ √≠√• √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√≠ √§√Æ√±√≤√≥√Ø √¢ √∞√•√Ø√Æ√∞√≤");
		pData[idd][pMuteTime_R] = 0;
		UpdatePlayerData(idd, "pMuteTime_R", 0);
		new day, month, year, hour, minuite, second;
		getdate(year, month, day);
		gettime(hour, minuite, second);
		FixHour(hour);
		hour = shifthour;
		new data2[22];
		format(data2, 22, "%02d.%02d.%d √¢ %02d:%02d",day, month, year, hour, minuite);
		string[0] = EOS;
		if(pData[playerid][pSex] == 1) format(string, 128, "[A] %s[%d] √∞√†√ß√°√´√Æ√™√®√∞√Æ√¢√†√´ √§√Æ√±√≤√≥√Ø √¢ √∞√•√Ø√Æ√∞√≤ %s[%d]", GetName(playerid), playerid, GetName(idd), idd);
		else format(string, 128, "[A] %s[%d] √∞√†√ß√°√´√Æ√™√®√∞√Æ√¢√†√´√† √§√Æ√±√≤√≥√Ø √¢ √∞√•√Ø√Æ√∞√≤ %s[%d]", GetName(playerid), playerid, GetName(idd), idd);
		AdminMessage(COLOR_GREY, string);
		if(pData[playerid][pSex] == 1) SCMF(idd, 0x33CC00AA, "%s[%d] √∞√†√ß√°√´√Æ√™√®√∞√Æ√¢√†√´ √Ç√†√¨ √§√Æ√±√≤√≥√Ø √¢ √∞√•√Ø√Æ√∞√≤", GetName(playerid), playerid);
		else SCMF(idd, 0x33CC00AA, "%s[%d] √∞√†√ß√°√´√Æ√™√®√∞√Æ√¢√†√´√† √Ç√†√¨ √§√Æ√±√≤√≥√Ø √¢ √∞√•√Ø√Æ√∞√≤", GetName(playerid), playerid);
		if(pData[playerid][pSex] == 1) mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('%s[%d] √∞√†√ß√°√´√Æ√™√®√∞√Æ√¢√†√´ √§√Æ√±√≤√≥√Ø √¢ √∞√•√Ø√Æ√∞√≤ %s[%d]',%d,'%s')", GetName(playerid), playerid, GetName(idd), idd, pData[idd][pID], data2);
		else mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('%s[%d] √∞√†√ß√°√´√Æ√™√®√∞√Æ√¢√†√´√† √§√Æ√±√≤√≥√Ø √¢ √∞√•√Ø√Æ√∞√≤ %s[%d]',%d,'%s')", GetName(playerid), playerid, GetName(idd), idd, pData[idd][pID], data2);
		mysql_tquery(mysql_Handle, string);
    }
	return 1;
}
CMD:rmute(playerid, params[]) {
	new timemute, secondmute, minutemute;
	if(pData[playerid][pAdmin] < 2) return 1;
	if(pData[playerid][pAdmin] < 7 && GetPVarInt(playerid, "counting_punish") > gettime()) 
		return SCM(playerid, COLOR_ERROR, "√è√Æ√§√Æ√¶√§√®√≤√• √≠√•√±√™√Æ√´√º√™√Æ √±√•√™√≥√≠√§...");
	if(sscanf(params, "dds[26]",params[0],params[1],params[2])) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /rmute [id √®√£√∞√Æ√™√†] [√™√Æ√´-√¢√Æ √¨√®√≠√≥√≤] [√Ø√∞√®√∑√®√≠√†]");
	if(IsPlayerNPC(params[0])) return SCM(playerid, COLOR_ERROR, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Ø√Æ√±√†√§√®√≤√º √Ω√≤√Æ√£√Æ √∑√•√´√Æ√¢√•√™√†");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™√† √± √≤√†√™√®√¨ √†√©√§√® No");

	timemute = pData[params[0]][pMuteTime_R];
	secondmute=timemute%60;
	minutemute=(timemute-secondmute)/60;

	if(params[1] < 5 || params[1] > 600) return SCM(playerid, COLOR_LIGHTGREY, "√Ñ√Æ√±√≤√≥√Ø√≠√Æ√• √¢√∞√•√¨√ø √Æ√≤ 5 √§√Æ 600 √¨√®√≠√≥√≤");
	if(pData[params[0]][pMuteTime_R] > 0) return SCMF(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™√≥ √≥√¶√• √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√≠ √§√Æ√±√≤√≥√Ø √¢ √∞√•√Ø√Æ√∞√≤. √é√±√≤√†√¢√∏√•√•√±√ø √¢√∞√•√¨√ø √°√´√Æ√™√®√∞√Æ√¢√™√®: "CPALEGREEN"%d:%02d", minutemute, secondmute);
	pData[params[0]][pMuteTime_R] = params[1]*60;
	UpdatePlayerData(params[0], "pMuteTime_R", pData[params[0]][pMuteTime_R]);
	string[0] = EOS;
	new day, month, year, hour, minuite, second;
	getdate(year, month, day);
	gettime(hour, minuite, second);
	FixHour(hour);
	hour = shifthour;
	new data2[22];
	format(data2, 22, "%02d.%02d.%d √¢ %02d:%02d",day, month, year, hour, minuite);
	if(pData[playerid][pSex] == 1) format(string, 128, "[A] %s[%d] √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√´ √§√Æ√±√≤√≥√Ø √¢ √∞√•√Ø√Æ√∞√≤ %s[%d] √≠√† %d √¨√®√≠ (%s)", GetName(playerid), playerid, GetName(params[0]), params[0], params[1], params[2]);
	else format(string, 128, "[A] %s[%d] √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√´√† √§√Æ√±√≤√≥√Ø √¢ √∞√•√Ø√Æ√∞√≤ %s[%d] √≠√† %d √¨√®√≠ (%s)", GetName(playerid), playerid, GetName(params[0]), params[0], params[1], params[2]);
	AdminMessage(COLOR_GREY, string);
	if(pData[playerid][pSex] == 1) mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('%s[%d] √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√´ √§√Æ√±√≤√≥√Ø √¢ √∞√•√Ø√Æ√∞√≤ %s[%d] √≠√† %d √¨√®√≠ (%s)',%d,'%s')", GetName(playerid), playerid, GetName(params[0]), params[0], params[1], params[2], pData[params[0]][pID], data2);
	else mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('%s[%d] √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√´√† √§√Æ√±√≤√≥√Ø √¢ √∞√•√Ø√Æ√∞√≤ %s[%d] √≠√† %d √¨√®√≠ (%s)',%d,'%s')", GetName(playerid), playerid, GetName(params[0]), params[0], params[1], params[2], pData[params[0]][pID], data2);
	mysql_tquery(mysql_Handle, string);
	gAdmin[playerid][ADMIN_MUTE] ++;
	if(pData[playerid][pSex] == 1) format(string, 128, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√´ √Ç√†√¨ √§√Æ√±√≤√≥√Ø √¢ √∞√•√Ø√Æ√∞√≤ √≠√† %d √¨√®√≠ (%s)", GetName(playerid), params[1], params[2]);
	else format(string, 128, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√´√† √Ç√†√¨ √§√Æ√±√≤√≥√Ø √¢ √∞√•√Ø√Æ√∞√≤ √≠√† %d √¨√®√≠ (%s)", GetName(playerid), params[1], params[2]);
	SCM(params[0], COLOR_LIGHTRED, string);
	SetPVarInt(playerid,"counting_punish",gettime() + 5);
	return SCM(params[0], COLOR_LIGHTGREY, "√Ç√∞√•√¨√ø √§√Æ √Æ√™√Æ√≠√∑√†√≠√®√ø √°√´√Æ√™√®√∞√Æ√¢√™√® √∞√•√Ø√Æ√∞√≤√†: {cccc00}/time");
}
CMD:mute(playerid, params[]) {
	new timemute, secondmute, minutemute;
	if(pData[playerid][pAdmin] < 3) return 1;
	if(pData[playerid][pAdmin] < 7 && GetPVarInt(playerid, "counting_punish") > gettime()) 
		return SCM(playerid, COLOR_ERROR, "√è√Æ√§√Æ√¶√§√®√≤√• √≠√•√±√™√Æ√´√º√™√Æ √±√•√™√≥√≠√§...");
	if(sscanf(params, "ddS()[26]",params[0],params[1],params[2])) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /mute [id √®√£√∞√Æ√™√†] [√™√Æ√´-√¢√Æ √¨√®√≠√≥√≤] [√Ø√∞√®√∑√®√≠√† (√≠√•√Æ√°√ø√ß√†√≤√•√´√º√≠√Æ)]");
	if(IsPlayerNPC(params[0])) return SCM(playerid, COLOR_ERROR, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√≤√º √∑√†√≤ √Ω√≤√Æ√¨√≥ √∑√•√´√Æ√¢√•√™√≥");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™√† √± √≤√†√™√®√¨ √†√©√§√® No");

	timemute = pData[params[0]][pMuteTime];
	secondmute=timemute%60;
	minutemute=(timemute-secondmute)/60;

	if(params[1] < 5 || params[1] > 300) return SCM(playerid, COLOR_LIGHTGREY, "√Ñ√Æ√±√≤√≥√Ø√≠√Æ√• √¢√∞√•√¨√ø √Æ√≤ 5 √§√Æ 300 √¨√®√≠√≥√≤");
	if(pData[params[0]][pMuteTime] > 0) return SCMF(playerid, COLOR_LIGHTGREY, "√ì √®√£√∞√Æ√™√† √≥√¶√• √•√±√≤√º √°√´√Æ√™√®√∞√Æ√¢√™√† √∑√†√≤√†. √é√±√≤√†√¢√∏√•√•√±√ø √¢√∞√•√¨√ø √°√´√Æ√™√®√∞√Æ√¢√™√®: "CPALEGREEN"%d:%02d", minutemute, secondmute);
	pData[params[0]][pMuteTime] = params[1]*60;
	UpdatePlayerData(params[0], "pMuteTime", pData[params[0]][pMuteTime]);
	string[0] = EOS;
	new day, month, year, hour, minuite, second;
	getdate(year, month, day);
	gettime(hour, minuite, second);
	FixHour(hour);
	hour = shifthour;
	new data2[22];
	format(data2, 22, "%02d.%02d.%d √¢ %02d:%02d",day, month, year, hour, minuite);
	if(!strlen(params[2])) {
		if(pData[playerid][pSex] == 1) format(string, 128, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√´ √∑√†√≤ √®√£√∞√Æ√™√≥ %s √≠√† %d √¨√®√≠",pData[playerid][pName],GetName(params[0]),params[1]);
		else format(string, 128, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√´√† √∑√†√≤ √®√£√∞√Æ√™√≥ %s √≠√† %d √¨√®√≠",pData[playerid][pName],GetName(params[0]),params[1]);
		SCMTA_setting(COLOR_LIGHTRED, string);
		if(!pData[params[0]][p_setting][2]) SCM(params[0], COLOR_LIGHTRED, string);
		if(pData[playerid][pSex] == 1) mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√´ √∑√†√≤ √®√£√∞√Æ√™√≥ %s √≠√† %d √¨√®√≠',%d,'%s')", pData[playerid][pName], GetName(params[0]), params[1], pData[params[0]][pID], data2);
		else mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√´√† √∑√†√≤ √®√£√∞√Æ√™√≥ %s √≠√† %d √¨√®√≠',%d,'%s')", pData[playerid][pName], GetName(params[0]), params[1], pData[params[0]][pID], data2);
		mysql_tquery(mysql_Handle, string);
	}
	else {
		if(pData[playerid][pSex] == 1) format(string, 128, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√´ √∑√†√≤ √®√£√∞√Æ√™√≥ %s √≠√† %d √¨√®√≠. √è√∞√®√∑√®√≠√†: %s",pData[playerid][pName],GetName(params[0]),params[1], params[2]);
		else format(string, 128, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√´√† √∑√†√≤ √®√£√∞√Æ√™√≥ %s √≠√† %d √¨√®√≠. √è√∞√®√∑√®√≠√†: %s",pData[playerid][pName],GetName(params[0]),params[1], params[2]);
		SCMTA_setting(COLOR_LIGHTRED, string);
		if(!pData[params[0]][p_setting][2]) SCM(params[0], COLOR_LIGHTRED, string);
		if(pData[playerid][pSex] == 1) mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√´ √∑√†√≤ √®√£√∞√Æ√™√≥ %s √≠√† %d √¨√®√≠. √è√∞√®√∑√®√≠√†: %s',%d,'%s')", pData[playerid][pName], GetName(params[0]), params[1], params[2], pData[params[0]][pID], data2);
		else mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√´√† √∑√†√≤ √®√£√∞√Æ√™√≥ %s √≠√† %d √¨√®√≠. √è√∞√®√∑√®√≠√†: %s',%d,'%s')", pData[playerid][pName], GetName(params[0]), params[1], params[2], pData[params[0]][pID], data2);
		mysql_tquery(mysql_Handle, string);
	}
	gAdmin[playerid][ADMIN_MUTE] ++;
	SetPVarInt(playerid,"counting_punish",gettime() + 5);
	return SCM(params[0], COLOR_LIGHTGREY, "√Ç√∞√•√¨√ø √§√Æ √Æ√™√Æ√≠√∑√†√≠√®√ø √°√´√Æ√™√®√∞√Æ√¢√™√® √∑√†√≤√†: {cccc00}/time");
}
CMD:unjail(playerid, params[]) {
	if(pData[playerid][pAdmin] < 3) return 1;
	new val[MAX_PLAYER_NAME];
	if(sscanf(params, "s[24]",val)) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /unjail [id √®√£√∞√Æ√™√† (√®√´√® √≠√®√™ √®√£√∞√Æ√™√† √Æ√¥√¥√´√†√©√≠)]");
	new bool:findnick = false;
	for(new i = 0; i < strlen(val); i ++)
	{
        if(val[i] >= '0' && val[i] <= '9') continue;
        findnick = true;
        break;
    }
    if(findnick == true) // √≠√®√™
    {
    	if(IsPlayerConnected(GetPlayerID(val))) {
	    	new idd = GetPlayerID(val);
			if(pData[idd][pPrisonTime] <= 0 && pData[idd][pJailTime] <= 0) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √≠√• √≠√†√µ√Æ√§√®√≤√±√ø √¢ √≤√æ√∞√º√¨√•");
			pData[idd][pPrisonTime] = 1;
			pData[idd][pJailTime] = 0;

			new day, month, year, hour, minuite, second;
			getdate(year, month, day);
			gettime(hour, minuite, second);
			FixHour(hour);
			hour = shifthour;
			new data2[22];
			format(data2, 22, "%02d.%02d.%d √¢ %02d:%02d",day, month, year, hour, minuite);

			string[0] = EOS;
			mysql_format(mysql_Handle, string, 155, "UPDATE `accounts` SET `pJailTime` = '0', `pPrisonTime` = '1' WHERE `id` = %d", pData[idd][pID]);
			mysql_tquery(mysql_Handle, string);
			SCMF(idd, 0x33CC00AA, "√Ç√ª √°√ª√´√® √Æ√±√¢√Æ√°√Æ√¶√§√•√≠√ª √®√ß √≤√æ√∞√º√¨√ª √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√Æ√¨ %s", pData[playerid][pName]);
			if(pData[playerid][pSex] == 1) format(string, 128, "[A] %s[%d] √¢√ª√≤√†√π√®√´ √®√ß √≤√æ√∞√º√¨√ª %s[%d]", pData[playerid][pName], playerid, GetName(idd), idd);
			else format(string, 128, "[A] %s[%d] √¢√ª√≤√†√π√®√´√† √®√ß √≤√æ√∞√º√¨√ª %s[%d]", pData[playerid][pName], playerid, GetName(idd), idd);
			AdminMessage(COLOR_GREY, string);
			if(GetPVarInt(playerid, "AdminMessages")) SCM(playerid, COLOR_GREY, string);
			if(pData[playerid][pSex] == 1) mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('%s[%d] √¢√ª√≤√†√π√®√´ √®√ß √≤√æ√∞√º√¨√ª %s[%d]',%d,'%s')", pData[playerid][pName], playerid, GetName(idd), idd, pData[idd][pID], data2);
			else mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('%s[%d] √¢√ª√≤√†√π√®√´√† √®√ß √≤√æ√∞√º√¨√ª %s[%d]',%d,'%s')", pData[playerid][pName], playerid, GetName(idd), idd, pData[idd][pID], data2);
			mysql_tquery(mysql_Handle, string);

			return 1;
    	}
		mysql_format(mysql_Handle, string, 128, "SELECT * FROM `accounts` WHERE `Name` = '%s'", val);
		mysql_tquery(mysql_Handle, string, "UnJail", "is",playerid,val);
    }
    else // id
    {
    	new idd = strval(val);
    	if(!IsPlayerConnected(idd)) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √± √≤√†√™√®√¨ ID √®√´√® √≠√®√™√Æ√¨ √≠√• √≠√†√©√§√•√≠");
		if(pData[idd][pPrisonTime] <= 0 && pData[idd][pJailTime] <= 0) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √≠√• √≠√†√µ√Æ√§√®√≤√±√ø √¢ √≤√æ√∞√º√¨√•");
		pData[idd][pPrisonTime] = 1;
		pData[idd][pJailTime] = 0;

		new day, month, year, hour, minuite, second;
		getdate(year, month, day);
		gettime(hour, minuite, second);
		FixHour(hour);
		hour = shifthour;
		new data2[22];
		format(data2, 22, "%02d.%02d.%d √¢ %02d:%02d",day, month, year, hour, minuite);

		string[0] = EOS;
		mysql_format(mysql_Handle, string, 155, "UPDATE `accounts` SET `pJailTime` = '0', `pPrisonTime` = '1' WHERE `id` = %d", pData[idd][pID]);
		mysql_tquery(mysql_Handle, string);
		SCMF(idd, 0x33CC00AA, "√Ç√ª √°√ª√´√® √Æ√±√¢√Æ√°√Æ√¶√§√•√≠√ª √®√ß √≤√æ√∞√º√¨√ª √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√Æ√¨ %s", pData[playerid][pName]);
		if(pData[playerid][pSex] == 1) format(string, 128, "[A] %s[%d] √¢√ª√≤√†√π√®√´ √®√ß √≤√æ√∞√º√¨√ª %s[%d]", pData[playerid][pName], playerid, GetName(idd), idd);
		else format(string, 128, "[A] %s[%d] √¢√ª√≤√†√π√®√´√† √®√ß √≤√æ√∞√º√¨√ª %s[%d]", pData[playerid][pName], playerid, GetName(idd), idd);
		AdminMessage(COLOR_GREY, string);
		if(GetPVarInt(playerid, "AdminMessages")) SCM(playerid, COLOR_GREY, string);
		if(pData[playerid][pSex] == 1) mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('%s[%d] √¢√ª√≤√†√π√®√´ √®√ß √≤√æ√∞√º√¨√ª %s[%d]',%d,'%s')", pData[playerid][pName], playerid, GetName(idd), idd, pData[idd][pID], data2);
		else mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('%s[%d] √¢√ª√≤√†√π√®√´√† √®√ß √≤√æ√∞√º√¨√ª %s[%d]',%d,'%s')", pData[playerid][pName], playerid, GetName(idd), idd, pData[idd][pID], data2);
		mysql_tquery(mysql_Handle, string);
    }
	return 1;
}
CB: UnJail(playerid,NAME[]) {
	new rows;
	cache_get_row_count(rows);
	string[0] = EOS;

	new day, idchecck, month, year, hour, minuite, second;
	getdate(year, month, day);
	gettime(hour, minuite, second);
	FixHour(hour);
	hour = shifthour;
	new data2[22];
	format(data2, 22, "%02d.%02d.%d √¢ %02d:%02d",day, month, year, hour, minuite);
	if(!rows) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √± √≤√†√™√®√¨ ID √®√´√® √≠√®√™√Æ√¨ √≠√• √≠√†√©√§√•√≠");

	cache_get_value_name_int(0, "id", idchecck);
	new querym[200], TimeJail, TimePrison;
	cache_get_value_name_int(0, "pJailTime", TimeJail); cache_get_value_name_int(0, "pPrisonTime", TimePrison);
	if(TimePrison<=0 && TimeJail<=0) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √≠√• √≠√†√µ√Æ√§√®√≤√±√ø √¢ √≤√æ√∞√º√¨√•");
	format(querym,sizeof(querym), "UPDATE `accounts` SET `pJailTime` = '0', `pPrisonTime` = '0' WHERE `Name` = '%s'", NAME);
	mysql_tquery(mysql_Handle, querym);
	if(pData[playerid][pSex] == 1) format(string,128, "[A] %s[%d] √¢√ª√≤√†√π√®√´ √®√ß √≤√æ√∞√º√¨√ª √Æ√¥√¥√´√†√©√≠ %s", pData[playerid][pName], playerid, NAME);
	else format(string,128, "[A] %s[%d] √¢√ª√≤√†√π√®√´√† √®√ß √≤√æ√∞√º√¨√ª √Æ√¥√¥√´√†√©√≠ %s", pData[playerid][pName], playerid, NAME);
	AdminMessage(COLOR_GREY, string);
	if(GetPVarInt(playerid, "AdminMessages")) SCM(playerid, COLOR_GREY, string);
	if(pData[playerid][pSex] == 1) mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('%s[%d] √¢√ª√≤√†√π√®√´ √®√ß √≤√æ√∞√º√¨√ª √Æ√¥√¥√´√†√©√≠ %s',%d,'%s')", pData[playerid][pName], playerid, NAME, idchecck, data2);
	else mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('%s[%d] √¢√ª√≤√†√π√®√´√† √®√ß √≤√æ√∞√º√¨√ª √Æ√¥√¥√´√†√©√≠ %s',%d,'%s')", pData[playerid][pName], playerid, NAME, idchecck, data2);
	return mysql_tquery(mysql_Handle, string);
}
CMD:unwarn(playerid, params[]) {
	if(pData[playerid][pAdmin] < 3) return 1;
	new val[MAX_PLAYER_NAME];
	if(sscanf(params, "s[24]",val)) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /unwarn [id √®√£√∞√Æ√™√† (√®√´√® √≠√®√™ √®√£√∞√Æ√™√† √Æ√¥√¥√´√†√©√≠)]");
	new bool:findnick = false;
	for(new i = 0; i < strlen(val); i ++) {
        if(val[i] >= '0' && val[i] <= '9') continue;
        findnick = true;
        break;
    }
    if(findnick == true) // √≠√®√™
    {
    	if(IsPlayerConnected(GetPlayerID(val))) {
	    	new idd = GetPlayerID(val);
			if(pData[idd][pWarns] <= 0) return SCM(playerid, COLOR_LIGHTGREY, "√ì √®√£√∞√Æ√™√† No √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√©");

			mysql_format(mysql_Handle, string, 128, "DELETE FROM `warninfo` WHERE `id_acc` = %d LIMIT 1", pData[idd][pID]);
			mysql_tquery(mysql_Handle, string);

			pData[idd][pWarns] --;
			if(pData[idd][pWarns] == 0) pData[idd][punWarnstime] = 0;
			string[0] = EOS;

			new day, month, year, hour, minuite, second;
			getdate(year, month, day);
			gettime(hour, minuite, second);
			FixHour(hour);
			hour = shifthour;
			new data2[22];
			format(data2, 22, "%02d.%02d.%d √¢ %02d:%02d",day, month, year, hour, minuite);

			mysql_format(mysql_Handle, string, 1, "UPDATE `accounts` SET `pWarns` = %d, `punWarnstime` = %d WHERE `id` = %i", pData[idd][pWarns], pData[idd][punWarnstime], pData[idd][pID]);
			mysql_tquery(mysql_Handle, string);
			if(pData[playerid][pSex] == 1) format(string, 164, "[A] %s[%d] √±√≠√ø√´ 1 √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√• √®√£√∞√Æ√™√≥ %s[%d]", pData[playerid][pName], playerid, GetName(idd), idd);
			else format(string, 164, "[A] %s[%d] √±√≠√ø√´√† 1 √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√• √®√£√∞√Æ√™√≥ %s[%d]", pData[playerid][pName], playerid, GetName(idd), idd);
			AdminMessage(COLOR_GREY, string);
			if(GetPVarInt(playerid, "AdminMessages")) SCM(playerid, COLOR_GREY, string);
			if(pData[playerid][pSex] == 1) mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('%s[%d] √±√≠√ø√´ 1 √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√• √®√£√∞√Æ√™√≥ %s[%d]',%d,'%s')", pData[playerid][pName], playerid, GetName(idd), idd, pData[idd][pID], data2);
			else mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('%s[%d] √±√≠√ø√´√† 1 √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√• √®√£√∞√Æ√™√≥ %s[%d]',%d,'%s')", pData[playerid][pName], playerid, GetName(idd), idd, pData[idd][pID], data2);
			mysql_tquery(mysql_Handle, string);
			
			return SCM(idd, 0x6BCF00FF, "√ì√∞√Æ√¢√•√≠√º √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√© √≥√¨√•√≠√º√∏√•√≠ √≠√† 1");
    	}
		mysql_format(mysql_Handle, string, 128, "SELECT * FROM `accounts` WHERE `Name` = '%s'", val);
		mysql_tquery(mysql_Handle, string, "UnWarns", "is",playerid,val);
    }
    else // id
    {
    	new idd = strval(val);
    	if(!IsPlayerConnected(idd)) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √± √≤√†√™√®√¨ ID √®√´√® √≠√®√™√Æ√¨ √≠√• √≠√†√©√§√•√≠");
		if(pData[idd][pWarns] <= 0) return SCM(playerid, COLOR_LIGHTGREY, "√ì √®√£√∞√Æ√™√† No √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√©");

		mysql_format(mysql_Handle, string, 128, "DELETE FROM `warninfo` WHERE `id_acc` = %d LIMIT 1", pData[idd][pID]);
		mysql_tquery(mysql_Handle, string);

		pData[idd][pWarns] --;
		if(pData[idd][pWarns] == 0) pData[idd][punWarnstime] = 0;
		string[0] = EOS;

		new day, month, year, hour, minuite, second;
		getdate(year, month, day);
		gettime(hour, minuite, second);
		FixHour(hour);
		hour = shifthour;
		new data2[22];
		format(data2, 22, "%02d.%02d.%d √¢ %02d:%02d",day, month, year, hour, minuite);

		mysql_format(mysql_Handle, string, 120, "UPDATE `accounts` SET `pWarns` = %d, `punWarnstime` = %d WHERE `id` = %i", pData[idd][pWarns], pData[idd][punWarnstime], pData[idd][pID]);
		mysql_tquery(mysql_Handle, string);
		if(pData[playerid][pSex] == 1) format(string, 164, "[A] %s[%d] √±√≠√ø√´ 1 √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√• √®√£√∞√Æ√™√≥ %s[%d]", pData[playerid][pName], playerid, GetName(idd), idd);
		else format(string, 164, "[A] %s[%d] √±√≠√ø√´ 1 √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√• √®√£√∞√Æ√™√≥ %s[%d]", pData[playerid][pName], playerid, GetName(idd), idd);
		AdminMessage(COLOR_GREY, string);
		if(GetPVarInt(playerid, "AdminMessages")) SCM(playerid, COLOR_GREY, string);
		if(pData[playerid][pSex] == 1) mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('%s[%d] √±√≠√ø√´ 1 √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√• √®√£√∞√Æ√™√≥ %s[%d]',%d,'%s')", pData[playerid][pName], playerid, GetName(idd), idd, pData[idd][pID], data2);
		else mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('%s[%d] √±√≠√ø√´√† 1 √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√• √®√£√∞√Æ√™√≥ %s[%d]',%d,'%s')", pData[playerid][pName], playerid, GetName(idd), idd, pData[idd][pID], data2);
		mysql_tquery(mysql_Handle, string);
		
		SCM(idd, 0x6BCF00FF, "√ì√∞√Æ√¢√•√≠√º √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√© √≥√¨√•√≠√º√∏√•√≠ √≠√† 1");
    }
	return 1;
}
CB: UnWarns(playerid,NAME[]) {
	new rows;
	cache_get_row_count(rows);
	string[0] = EOS;

	new day, month, year, idchecck, hour, minuite, second;
	getdate(year, month, day);
	gettime(hour, minuite, second);
	FixHour(hour);
	hour = shifthour;
	new data2[22];
	format(data2, 22, "%02d.%02d.%d √¢ %02d:%02d",day, month, year, hour, minuite);

	cache_get_value_name_int(0, "id", idchecck);
	new querym[200], cWarnsT, CountW;
	cache_get_value_name_int(0, "punWarnstime", cWarnsT); cache_get_value_name_int(0, "pWarns", CountW);
	if(!rows) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √± √≤√†√™√®√¨ ID √®√´√® √≠√®√™√Æ√¨ √≠√• √≠√†√©√§√•√≠");
	if(CountW == 0) return SCM(playerid, COLOR_LIGHTGREY, "√ì √®√£√∞√Æ√™√† No √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√©");

	mysql_format(mysql_Handle, string, 128, "DELETE FROM `warninfo` WHERE `id_acc` = %d LIMIT 1", idchecck);
	mysql_tquery(mysql_Handle, string);

	CountW--;
	if(CountW == 0) cWarnsT = 0;
	format(querym, sizeof(querym), "UPDATE `accounts` SET `pWarns` = %d, `punWarnstime` = %d WHERE `Name` = '%s'",CountW,cWarnsT, NAME);
	mysql_tquery(mysql_Handle, querym);
	if(pData[playerid][pSex] == 1) format(string, 164, "[A] %s[%d] √±√≠√ø√´ 1 √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√• √Æ√¥√¥√´√†√©√≠ √®√£√∞√Æ√™√≥ %s",pData[playerid][pName],playerid,NAME);
	else format(string, 164, "[A] %s[%d] √±√≠√ø√´√† 1 √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√• √Æ√¥√¥√´√†√©√≠ √®√£√∞√Æ√™√≥ %s",pData[playerid][pName],playerid,NAME);
	AdminMessage(COLOR_GREY, string);
	if(GetPVarInt(playerid, "AdminMessages")) SCM(playerid, COLOR_GREY, string);
	if(pData[playerid][pSex] == 1) mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('%s[%d] √±√≠√ø√´ 1 √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√• √Æ√¥√¥√´√†√©√≠ √®√£√∞√Æ√™√≥ %s',%d,'%s')", pData[playerid][pName], playerid, NAME, idchecck, data2);
	else mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('%s[%d] √±√≠√ø√´√† 1 √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√• √Æ√¥√¥√´√†√©√≠ √®√£√∞√Æ√™√≥ %s',%d,'%s')", pData[playerid][pName], playerid, NAME, idchecck, data2);
	return mysql_tquery(mysql_Handle, string);
}
CMD:unmute(playerid, params[]) {
	if(pData[playerid][pAdmin] < 3) return 1;
	new val[MAX_PLAYER_NAME];
	if(sscanf(params, "s[24]",val)) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /unmute [id √®√£√∞√Æ√™√† (√®√´√® √≠√®√™ √®√£√∞√Æ√™√† √Æ√¥√¥√´√†√©√≠)]");
	new bool:findnick = false;
	for(new i = 0; i < strlen(val); i ++) {
        if(val[i] >= '0' && val[i] <= '9') continue;
        findnick = true;
        break;
    }
    if(findnick == true) // √≠√®√™
    {
    	if(IsPlayerConnected(GetPlayerID(val))) {
	    	new idd = GetPlayerID(val);
			if(pData[idd][pMuteTime] <= 0) return SCM(playerid, COLOR_LIGHTGREY, "√ì √®√£√∞√Æ√™√† No √°√´√Æ√™√®√∞√Æ√¢√™√® √∑√†√≤√†");
			pData[idd][pMuteTime] = 0;
			UpdatePlayerData(idd, "pMuteTime", 0);
			new day, month, year, hour, minuite, second;
			getdate(year, month, day);
			gettime(hour, minuite, second);
			FixHour(hour);
			hour = shifthour;
			new data2[22];
			format(data2, 22, "%02d.%02d.%d √¢ %02d:%02d",day, month, year, hour, minuite);
			string[0] = EOS;
			if(pData[playerid][pSex] == 1) format(string, 128, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √±√≠√ø√´ √°√´√Æ√™√®√∞√Æ√¢√™√≥ √∑√†√≤√† √± √®√£√∞√Æ√™√† %s",pData[playerid][pName], GetName(idd));
			else format(string, 128, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √±√≠√ø√´√† √°√´√Æ√™√®√∞√Æ√¢√™√≥ √∑√†√≤√† √± √®√£√∞√Æ√™√† %s",pData[playerid][pName], GetName(idd));
			SCMTA_setting(COLOR_LIGHTRED, string);
			if(!pData[idd][p_setting][2]) SCM(idd, COLOR_LIGHTRED, string);
			if(pData[playerid][pSex] == 1) mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √±√≠√ø√´ √°√´√Æ√™√®√∞√Æ√¢√™√≥ √∑√†√≤√† √± √®√£√∞√Æ√™√† %s',%d,'%s')", pData[playerid][pName], GetName(idd), pData[idd][pID], data2);
			else mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √±√≠√ø√´√† √°√´√Æ√™√®√∞√Æ√¢√™√≥ √∑√†√≤√† √± √®√£√∞√Æ√™√† %s',%d,'%s')", pData[playerid][pName], GetName(idd), pData[idd][pID], data2);
			mysql_tquery(mysql_Handle, string);
			return SCM(idd, COLOR_MAIN, "√Ñ√Æ√±√≤√≥√Ø √¢ √∑√†√≤ √¢√Æ√±√±√≤√†√≠√Æ√¢√´√•√≠");
    	}
		mysql_format(mysql_Handle, string, 128, "SELECT * FROM `accounts` WHERE `Name` = '%s'", val);
		mysql_tquery(mysql_Handle, string, "UnMute", "is",playerid,val);
    }
    else // id
    {
    	new idd = strval(val);
    	if(!IsPlayerConnected(idd)) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √± √≤√†√™√®√¨ ID √®√´√® √≠√®√™√Æ√¨ √≠√• √≠√†√©√§√•√≠");
		if(pData[idd][pMuteTime] <= 0) return SCM(playerid, COLOR_LIGHTGREY, "√ì √®√£√∞√Æ√™√† No √°√´√Æ√™√®√∞√Æ√¢√™√® √∑√†√≤√†");
		pData[idd][pMuteTime] = 0;
		UpdatePlayerData(idd, "pMuteTime", 0);
		new day, month, year, hour, minuite, second;
		getdate(year, month, day);
		gettime(hour, minuite, second);
		FixHour(hour);
		hour = shifthour;
		new data2[22];
		format(data2, 22, "%02d.%02d.%d √¢ %02d:%02d",day, month, year, hour, minuite);
		string[0] = EOS;
		if(pData[playerid][pSex] == 1) format(string, 128, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √±√≠√ø√´ √°√´√Æ√™√®√∞√Æ√¢√™√≥ √∑√†√≤√† √± √®√£√∞√Æ√™√† %s",pData[playerid][pName], GetName(idd));
		else format(string, 128, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √±√≠√ø√´√† √°√´√Æ√™√®√∞√Æ√¢√™√≥ √∑√†√≤√† √± √®√£√∞√Æ√™√† %s",pData[playerid][pName], GetName(idd));
		SCMTA_setting(COLOR_LIGHTRED, string);
		if(!pData[idd][p_setting][2]) SCM(idd, COLOR_LIGHTRED, string);
		if(pData[playerid][pSex] == 1) mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √±√≠√ø√´ √°√´√Æ√™√®√∞√Æ√¢√™√≥ √∑√†√≤√† √± √®√£√∞√Æ√™√† %s',%d,'%s')", pData[playerid][pName], GetName(idd), pData[idd][pID], data2);
		else mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √±√≠√ø√´√† √°√´√Æ√™√®√∞√Æ√¢√™√≥ √∑√†√≤√† √± √®√£√∞√Æ√™√† %s',%d,'%s')", pData[playerid][pName], GetName(idd), pData[idd][pID], data2);
		mysql_tquery(mysql_Handle, string);
		SCM(idd, COLOR_MAIN, "√Ñ√Æ√±√≤√≥√Ø √¢ √∑√†√≤ √¢√Æ√±√±√≤√†√≠√Æ√¢√´√•√≠");
    }
	return 1;
}
CB: UnMute(playerid,NAME[]) {
	new rows;
	cache_get_row_count(rows);
	string[0] = EOS;

	new day, month, year, hour, minuite, idchecck, second;
	getdate(year, month, day);
	gettime(hour, minuite, second);
	FixHour(hour);
	hour = shifthour;
	new data2[22];
	format(data2, 22, "%02d.%02d.%d √¢ %02d:%02d", day, month, year, hour, minuite);

	new querym[200], TimeMute;

	if(!rows) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √± √≤√†√™√®√¨ ID √®√´√® √≠√®√™√Æ√¨ √≠√• √≠√†√©√§√•√≠");
	cache_get_value_name_int(0, "pMuteTime", TimeMute);
	if(TimeMute < 1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √®√£√∞√Æ√™√† No √°√´√Æ√™√®√∞√Æ√¢√™√® √∑√†√≤√†");
	format(querym,sizeof(querym), "UPDATE `accounts` SET `pMuteTime` = '0' WHERE `Name` = '%s'", NAME);
	mysql_tquery(mysql_Handle, querym);
	cache_get_value_name_int(0, "id", idchecck);
	if(pData[playerid][pSex] == 1) format(string, 164, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √±√≠√ø√´ √°√´√Æ√™√®√∞√Æ√¢√™√≥ √∑√†√≤√† √Æ√¥√¥√´√†√©√≠ √± √®√£√∞√Æ√™√† %s",pData[playerid][pName],NAME);
	else format(string, 164, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √±√≠√ø√´√† √°√´√Æ√™√®√∞√Æ√¢√™√≥ √∑√†√≤√† √Æ√¥√¥√´√†√©√≠ √± √®√£√∞√Æ√™√† %s",pData[playerid][pName],NAME);
	SCMTA_setting(COLOR_LIGHTRED, string);
	if(pData[playerid][pSex] == 1) mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √±√≠√ø√´ √°√´√Æ√™√®√∞√Æ√¢√™√≥ √∑√†√≤√† √Æ√¥√¥√´√†√©√≠ √± √®√£√∞√Æ√™√† %s',%d,'%s')", pData[playerid][pName],NAME, idchecck, data2);
	else mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √±√≠√ø√´√† √°√´√Æ√™√®√∞√Æ√¢√™√≥ √∑√†√≤√† √Æ√¥√¥√´√†√©√≠ √± √®√£√∞√Æ√™√† %s',%d,'%s')", pData[playerid][pName],NAME, idchecck, data2);
	return mysql_tquery(mysql_Handle, string);
}
CB: UnMute_R(playerid,NAME[]) {
	new rows;
	cache_get_row_count(rows);
	string[0] = EOS;

	new day, month, year, hour, minuite, idchecck, second;
	getdate(year, month, day);
	gettime(hour, minuite, second);
	FixHour(hour);
	hour = shifthour;
	new data2[22];
	format(data2, 22, "%02d.%02d.%d √¢ %02d:%02d", day, month, year, hour, minuite);

	new querym[200], TimeMute;
	
	if(!rows) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √± √≤√†√™√®√¨ ID √®√´√® √≠√®√™√Æ√¨ √≠√• √≠√†√©√§√•√≠");
	cache_get_value_name_int(0, "pMuteTime_R", TimeMute);
	if(TimeMute < 1) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™√≥ √≠√• √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√≠ √§√Æ√±√≤√≥√Ø √¢ √∞√•√Ø√Æ√∞√≤");
	format(querym,sizeof(querym), "UPDATE `accounts` SET `pMuteTime_R` = '0' WHERE `Name` = '%s'", NAME);
	mysql_tquery(mysql_Handle, querym);
	cache_get_value_name_int(0, "id", idchecck);
	if(pData[playerid][pSex] == 1) format(string, 128, "[A] %s[%d] √∞√†√ß√°√´√Æ√™√®√∞√Æ√¢√†√´ √§√Æ√±√≤√≥√Ø √¢ √∞√•√Ø√Æ√∞√≤ √Æ√¥√¥√´√†√©√≠ %s", GetName(playerid), playerid, NAME);
	else format(string, 128, "[A] %s[%d] √∞√†√ß√°√´√Æ√™√®√∞√Æ√¢√†√´√† √§√Æ√±√≤√≥√Ø √¢ √∞√•√Ø√Æ√∞√≤ √Æ√¥√¥√´√†√©√≠ %s", GetName(playerid), playerid, NAME);
	AdminMessage(COLOR_GREY, string);
	if(pData[playerid][pSex] == 1) mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('%s[%d] √∞√†√ß√°√´√Æ√™√®√∞√Æ√¢√†√´ √§√Æ√±√≤√≥√Ø √¢ √∞√•√Ø√Æ√∞√≤ √Æ√¥√¥√´√†√©√≠ %s',%d,'%s')", GetName(playerid), playerid, NAME, idchecck, data2);
	else mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('%s[%d] √∞√†√ß√°√´√Æ√™√®√∞√Æ√¢√†√´√† √§√Æ√±√≤√≥√Ø √¢ √∞√•√Ø√Æ√∞√≤ √Æ√¥√¥√´√†√©√≠ %s',%d,'%s')", GetName(playerid), playerid, NAME, idchecck, data2);
	return mysql_tquery(mysql_Handle, string);
}
CMD:setstat(playerid, params[])
{
	if(pData[playerid][pAdmin] < 7) 
		return 1;

	new to_player, parameter, value;
	if(sscanf(params, "iii", to_player, parameter, value))
	{
		SCM(playerid, COLOR_LIGHTGREY, "√à√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√•: /setstat [id √®√£√∞√Æ√™√†] [√Ø√†√∞√†√¨√•√≤√∞] [√ß√≠√†√∑√•√≠√®√•]");
		SCM(playerid, COLOR_GREY, "[1] √Ç√Æ√§√®√≤. √Ø√∞√†√¢√† | [2] √ê√†√°√Æ√≤√† | [3] √ì√∞√Æ√¢√•√≠√º | [4] √ç√†√∞√™√Æ√≤√®√™√® | [5] √è√†√≤√∞√Æ√≠√ª");
		SCM(playerid, COLOR_GREY, "[6] √å√•√≤√†√´√´ | [7] √í√•√´√•√¥√Æ√≠ | [8] √Ñ√•√≠√º√£√® | [9] √Ñ√Æ√≠√†√≤ | [10] √è√Æ√´");

		return 1;
	}
	if(!IsPlayerConnected(to_player)) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(parameter < 1 || parameter > 10) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√¢√•√∞√≠√ª√© √Ø√†√∞√†√¨√•√≤√∞");

	new paramname[24];

	switch(parameter)
	{
		case 1:
		{
			if(value != 0 && value != 1) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√§√Æ√Ø√≥√±√≤√®√¨√Æ√• √ß√≠√†√∑√•√≠√®√• √§√´√ø √Ω√≤√Æ√£√Æ √Ø√†√∞√†√¨√•√≤√∞√†");
			pData[to_player][pLicenses][0] = value;
			UpdatePlayerData(to_player, "pLic0", value);
			paramname = "√Ç√Æ√§√®√≤. √Ø√∞√†√¢√†";
		}
		case 2:
		{
			if(value < 0 || value > 4) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√§√Æ√Ø√≥√±√≤√®√¨√Æ√• √ß√≠√†√∑√•√≠√®√• √§√´√ø √Ω√≤√Æ√£√Æ √Ø√†√∞√†√¨√•√≤√∞√†");
			pData[to_player][pJob] = value;
			UpdatePlayerData(to_player, "pJob", value);
			paramname = "√ê√†√°√Æ√≤√†";
		}
		case 3:
		{
			pData[to_player][pLevel] = value;
			UpdatePlayerData(to_player, "pLevel", value);
			SetPlayerScore(to_player, value);

			pData[to_player][pExp] = 0;
			UpdatePlayerData(to_player, "pExp", 0);

			paramname = "√ì√∞√Æ√¢√•√≠√º";
		}
		case 4:
		{
			pData[to_player][pDrugs] = value;
			UpdatePlayerData(to_player, "pDrugs", value);
			paramname = "√ç√†√∞√™√Æ√≤√®√™√®";
		}
		case 5:
		{
			pData[to_player][pPatr] = value;
			UpdatePlayerData(to_player, "pPatr", value);
			paramname = "√è√†√≤√∞√Æ√≠√ª";
		}
		case 6:
		{
			pData[to_player][pMetal] = value;
			UpdatePlayerData(to_player, "pMats", value);
			paramname = "√å√•√≤√†√´√´";
		}
		case 7:
		{
			pData[to_player][pPnumber] = value;
			UpdatePlayerData(to_player, "pPnumber", value);
			paramname = "√í√•√´√•√¥√Æ√≠";
		}
		case 8:
		{
			pData[to_player][pCash] = value;
			UpdatePlayerData(to_player, "pCash", value);
            ResetPlayerMoney(to_player);
            GivePlayerMoney(to_player, value);
            paramname = "√Ñ√•√≠√º√£√®";

           	new log_str[190], l_date[64], day, month, year, hour, minute, second;
            getdate(year, month, day);
            gettime(hour, minute, second);
            FixHour(hour);
            hour = shifthour;
            format(l_date, 64, "%02d.%02d.%d √¢ %02d:%02d", day, month, year, hour, minute);
            mysql_format(mysql_Handle, log_str, 190, "INSERT INTO `logs_money` (`description`, `id_acc`, `Date`) VALUES ('√ì√±√≤√†√≠√Æ√¢√´√•√≠√Æ %d$ √≠√†√´√®√∑√≠√ª√¨√® √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√Æ√¨ %s', '%i', '%s')", pData[to_player][pCash], GetName(playerid), pData[to_player][pID], l_date);
            mysql_tquery(mysql_Handle, log_str);
		}
		case 9:
		{
			pData[to_player][pRub] = value;
			UpdatePlayerData(to_player, "pRub", value);
			paramname = "√Ñ√Æ√≠√†√≤";
		}
		case 10:
		{
			if(value != 1 && value != 2) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√§√Æ√Ø√≥√±√≤√®√¨√Æ√• √ß√≠√†√∑√•√≠√®√• √§√´√ø √Ω√≤√Æ√£√Æ √Ø√†√∞√†√¨√•√≤√∞√†");
			pData[to_player][pSex] = value;
			UpdatePlayerData(to_player, "pSex", value);
			paramname = "√è√Æ√´";
		}
	}

	format(string, 128, "√è√†√∞√†√¨√•√≤√∞ \"%s\" √§√´√ø √®√£√∞√Æ√™√† %i √≥√±√≤√†√≠√Æ√¢√´√•√≠ √≠√† %i", paramname, to_player, value);
	SCM(playerid, -1, string);

	return 1;
}
CMD:toggleorgbank(playerid) {
	if(!pData[playerid][pLeader]) return SCM(playerid, COLOR_LIGHTGREY, "√î√≥√≠√™√∂√®√ø √§√Æ√±√≤√≥√Ø√≠√† √≤√Æ√´√º√™√Æ √´√®√§√•√∞√†√¨ √Æ√∞√£√†√≠√®√ß√†√∂√®√©");
	if(!pData[playerid][pMember]) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [067]");
	new org_num = pData[playerid][pMember], query[120];
	if(!org_bank[org_num][o_status]) {
		format(string, 128, "%s %s[%d] √¢√™√´√æ√∑√®√´ √°√†√≠√™ √Æ√∞√£√†√≠√®√ß√†√∂√®√® {ffa64d}(/orgbank)", new_rank_name[org_num - 1][pData[playerid][pRank] - 1], GetName(playerid), playerid);
		SFFM(org_num, COLOR_MAIN, string); org_bank[org_num][o_status] = true;
		mysql_format(mysql_Handle, query, 120, "UPDATE `bank_orgs` SET `status` = '1' WHERE `orgid` = %d", org_num);
	}
	else {
		format(string, 128, "%s %s[%d] √Æ√≤√™√´√æ√∑√®√´ √°√†√≠√™ √Æ√∞√£√†√≠√®√ß√†√∂√®√®", new_rank_name[org_num - 1][pData[playerid][pRank] - 1], GetName(playerid), playerid);
		SFFM(org_num, 0xFFA64DFF, string); org_bank[org_num][o_status] = false;
		mysql_format(mysql_Handle, query, 120, "UPDATE `bank_orgs` SET `status` = '0' WHERE `orgid` = %d", org_num);
	}
	return mysql_tquery(mysql_Handle, query);
}
CMD:orgbank(playerid) {
	if(!pData[playerid][pMember]) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √±√Æ√±√≤√Æ√®√≤√• √¢ √Æ√∞√£√†√≠√®√ß√†√∂√®√ø√µ");
	if(pData[playerid][pRank] < 6) return SCM(playerid, COLOR_GREY, "√à√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√• √°√†√≠√™√† √Æ√∞√£√†√≠√®√ß√†√∂√®√® √§√Æ√±√≤√≥√Ø√≠√Æ √± 9 √∞√†√≠√£√†");
	if(!org_bank[pData[playerid][pMember]][o_status]) return SCM(playerid, COLOR_GREY, "√Å√†√≠√™ √Æ√≤√™√´√æ√∑√•√≠ √´√®√§√•√∞√Æ√¨ √Æ√∞√£√†√≠√®√ß√†√∂√®√®");
	new str_title[70], str_text[120]; format(str_title, 70, ""CPALEGREEN"√Å√†√≠√™ √Æ√∞√£. %s", FractionInfo[pData[playerid][pMember]][fName]);
	format(str_text, 120, ""CLITEBLUE"√Å√†√´√†√≠√±: "CMAIN"%d$\n"CWHITE"[1] √è√Æ√´√Æ√¶√®√≤√º √±√∞√•√§√±√≤√¢√† √≠√† √°√†√≠√™\n[2] √ë√≠√ø√≤√º √±√∞√•√§√±√≤√¢√† √± √°√†√≠√™√†", org_bank[pData[playerid][pMember]][o_money]);
	return SPD(playerid, 594, DIALOG_STYLE_TABLIST_HEADERS, str_title, str_text, "Seleccione", "Cerrar");
}
CMD:off(playerid, params[]) {
	if(pData[playerid][pAdmin] < 1) return 1;
	if(sscanf(params, "d", params[0])) return 1;
	if(GetPVarInt(params[0], "ZaprosLeader")) {
		if(pData[playerid][pAdmin] < 4) return SCM(playerid, COLOR_LIGHTGREY, "√é√§√Æ√°√∞√ø√≤√º √ß√†√ø√¢√™√® √≠√† √≥√¢√Æ√´√º√≠√•√≠√®√• √¨√Æ√¶√≠√Æ √± 4 √≥√∞√Æ√¢√≠√ø √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√†");
		PlayerPlaySound(params[0], 17001, 0.0, 0.0, 0.0);

		new day,month,year,hour,minuite,second;
		getdate(year, month, day);
		gettime(hour,minuite,second);
		FixHour(hour);
		hour = shifthour;
		new data2[22];
		format(data2, 22, "%02d.%02d.%d √¢ %02d:%d",day,month,year,hour,minuite);

		SCMF(params[0], COLOR_BLUE, "√Ç√†√∏√† √ß√†√ø√¢√™√† √°√ª√´√† √Æ√§√Æ√°√∞√•√≠√† √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√Æ√¨ %s", pData[playerid][pName]);
		SCM(params[0], COLOR_MAIN, "√Ç√±√• √Æ√¥√¥√´√†√©√≠ √®√£√∞√Æ√™√® √°√ª√´√® √≥√¢√Æ√´√•√≠√ª √®√ß √Ç√†√∏√•√© √Æ√∞√£√†√≠√®√ß√†√∂√®√®");
		DeletePVar(params[0], "ZaprosLeader");
		if(pData[playerid][pSex] == 1) format(string, 144, "[A] √Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s[%d] √Æ√§√Æ√°√∞√®√´ √ß√†√ø√¢√™√≥ √Æ√≤ √´√®√§√•√∞√† %s %s √≠√† √≥√¢√Æ√´√º√≠√•√≠√®√• √¢√±√•√µ √Æ√¥√¥√´√†√©√≠ √®√£√∞√Æ√™√Æ√¢", pData[playerid][pName], playerid, FractionInfo[pData[params[0]][pMember]][fName], GetName(params[0]));
		else format(string, 144, "[A] √Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s[%d] √Æ√§√Æ√°√∞√®√´√† √ß√†√ø√¢√™√≥ √Æ√≤ √´√®√§√•√∞√† %s %s √≠√† √≥√¢√Æ√´√º√≠√•√≠√®√• √¢√±√•√µ √Æ√¥√¥√´√†√©√≠ √®√£√∞√Æ√™√Æ√¢", pData[playerid][pName], playerid, FractionInfo[pData[params[0]][pMember]][fName], GetName(params[0]));
		AdminMessage(COLOR_GREY, string);
		if(pData[playerid][pSex] == 1) mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s[%d] √Æ√§√Æ√°√∞√®√´ √ß√†√ø√¢√™√≥ √Æ√≤ √´√®√§√•√∞√† %s %s √≠√† √≥√¢√Æ√´√º√≠√•√≠√®√• √¢√±√•√µ √Æ√¥√¥√´√†√©√≠ √®√£√∞√Æ√™√Æ√¢','‚Äî','%s')",pData[playerid][pName], playerid, FractionInfo[pData[params[0]][pMember]][fName], GetName(params[0]), data2);
		else mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s[%d] √Æ√§√Æ√°√∞√®√´√† √ß√†√ø√¢√™√≥ √Æ√≤ √´√®√§√•√∞√† %s %s √≠√† √≥√¢√Æ√´√º√≠√•√≠√®√• √¢√±√•√µ √Æ√¥√¥√´√†√©√≠ √®√£√∞√Æ√™√Æ√¢','‚Äî','%s')",pData[playerid][pName], playerid, FractionInfo[pData[params[0]][pMember]][fName], GetName(params[0]), data2);
		mysql_tquery(mysql_Handle, string);
		if(GetPVarInt(playerid, "AdminMessages")) SCM(playerid, COLOR_GREY, string);
		mysql_format(mysql_Handle, string, 144, "UPDATE `accounts` SET `pMember` = '0', `pRank` = '0' WHERE `pMember` = %d AND `pLeader` = '0' AND `pOnline` = 0", pData[params[0]][pMember]);
		mysql_tquery(mysql_Handle, string);
	}
	return 1;
}
CMD:nookay(playerid, params[]) {
	if(pData[playerid][pAdmin] < 1) return 1;
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /nookay [id √®√£√∞√Æ√™√†]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(!GetPVarInt(params[0], "setname")) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√Æ√≤ √®√£√∞√Æ√™ √≠√• √Ø√ÆS√≠√¢√†√´ √ß√†√ø√¢√™√≥ √≠√† √±√¨√•√≠√≥ √®√¨√•√≠√®");
	string[0] = EOS;
	format(string, 128, "[A] √á√†√ø√¢√™√† √≠√† √±√¨√•√≠√≥ √®√¨√•√≠√® √Æ√≤ %s[%d] √Æ√≤√™√´√Æ√≠√•√≠√† √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√Æ√¨ %s[%d]", GetName(params[0]), params[0], pData[playerid][pName],playerid);
	AdminMessage(COLOR_GREY, string);
	if(GetPVarInt(playerid, "AdminMessages")) SCM(playerid, COLOR_GREY, string);
	DeletePVar(params[0], "setname");
	PlayerPlaySound(params[0], 21001, 0.0, 0.0, 0.0);
	return SCM(params[0], COLOR_ERROR, "√Ç√†√∏√† √ß√†√ø√¢√™√† √≠√† √±√¨√•√≠√≥ √≠√®√™√† √Æ√≤√™√´√Æ√≠√•√≠√†");
}
CMD:okay(playerid, params[]) {
	if(pData[playerid][pAdmin] < 1) return 1;
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /okay [id √®√£√∞√Æ√™√†]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(!GetPVarInt(params[0], "setname")) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√Æ√≤ √®√£√∞√Æ√™ √≠√• √Ø√ÆS√≠√¢√†√´ √ß√†√ø√¢√™√≥ √≠√† √±√¨√•√≠√≥ √®√¨√•√≠√®");
	
	new checkname[24];
	foreach(new i:Player) {
		GetPlayerName(i, checkname, 24);
		if(!strcmp(checkname,changename[params[0]],true)) {
			SCM(params[0],COLOR_ERROR,"√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† √Ø√∞√® √®√ß√¨√•√≠√•√≠√®√® √®√¨√•√≠√®");
			SCM(playerid,COLOR_ERROR,"√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† √Ø√∞√® √®√ß√¨√•√≠√•√≠√®√® √®√¨√•√≠√® √®√£√∞√Æ√™√†");
			return DeletePVar(params[0], "setname");
		}
	}

	string[0] = EOS;
	if(pData[params[0]][pSex] == 1) format(string, 128, "%s √±√¨√•√≠√®√´ non-RP √®√¨√ø √≠√† %s", GetName(params[0]), changename[params[0]]);
	else format(string, 128, "%s √±√¨√•√≠√®√´√† non-RP √®√¨√ø √≠√† %s", GetName(params[0]), changename[params[0]]);
	SCMTA(0xCCFF00FF, string);
	if(pData[playerid][pSex] == 1) format(string, 128, "[A] √á√†√ø√¢√™√≥ √Æ√§√Æ√°√∞√®√´ √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s[%d]",pData[playerid][pName],playerid);
	else format(string, 128, "[A] √á√†√ø√¢√™√≥ √Æ√§√Æ√°√∞√®√´√† √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s[%d]",pData[playerid][pName],playerid);
	AdminMessage(COLOR_GREY, string);
	if(GetPVarInt(playerid, "AdminMessages")) SCM(playerid, COLOR_GREY, string);
    check_property_names(params[0], changename[params[0]]);
	SetPlayerName(params[0],changename[params[0]]);
	DeletePVar(params[0], "setname");
	new years, months, days,data[32];
	getdate(years, months, days);
	format(data, 32, "%02d.%02d.%04d", days, months, years);
	mysql_format(mysql_Handle,string, 200, "INSERT INTO `log_name` (`Name`, `IdAcc`, `NewName`, `Date`) VALUES ('%s',%d,'%s','%s')", GetName(params[0]), pData[params[0]][pID], changename[params[0]], data);
	mysql_tquery(mysql_Handle,string);
	pData[params[0]][pName] = changename[params[0]];
	UpdatePlayerDataEx(params[0],"Name", GetName(params[0]));
	PlayerPlaySound(params[0], 17000, 0.0, 0.0, 0.0);
	SPD(params[0], 0, DIALOG_STYLE_MSGBOX, "{FFCD00}√à√¨√ø √®√ß√¨√•√≠√•√≠√Æ", "{00FF00}√á√†√ø√¢√™√† √≠√† √®√ß√¨√•√≠√•√≠√®√• √Ç√†√∏√•√£√Æ √®√¨√•√≠√® √Æ√§√Æ√°√∞√•√≠√†, √≠√Æ√¢√Æ√• √®√¨√ø √≥√±√≤√†√≠√Æ√¢√´√•√≠√Æ.\n\n"CWHITE"√Ç √±√´√•√§√≥√æ√π√®√© √∞√†√ß √Ø√∞√® √¢√µ√Æ√§√• √¢ √®√£√∞√≥ Usar√≤√• √±√¢√Æ¬∏ √≠√Æ√¢√Æ√• √®√¨√ø. √Ñ√´√ø\n√Ω√≤√Æ√£√Æ √≠√≥√¶√≠√Æ Cambio √•√£√Æ √¢ √Æ√™√≠√• √™√´√®√•√≠√≤√† SAMP. √ê√•√™√Æ√¨√•√≠√§√≥√•√¨ √Ø√∞√ø√¨√Æ √±√•√©√∑√†√±\n√±√¢√•√∞√≠√≥√≤√º √®√£√∞√≥ √® √±√§√•√´√†√≤√º √Ω√≤√Æ.", "Cerrar", "");
	SCM(params[0], -1, "√Ç√†√¨ √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √≥√™√†√ß√†√≤√º √≠√Æ√¢√Æ√• √®√¨√ø √¢ {0099ff}√Æ√™√≠√• √™√´√®√•√≠√≤√† SAMP");
	return SCM(params[0], -1, "√ê√•√™√Æ√¨√•√≠√§√≥√•√¨ √Ø√∞√ø√¨√Æ √±√•√©√∑√†√± √±√¢√•√∞√≠√≥√≤√º √®√£√∞√≥ {00FF00}(Alt+Tab) "CWHITE"√® √±√§√•√´√†√≤√º √Ω√≤√Æ");
}

CMD:jail(playerid, params[]) {
	new timejail, secondjail, minutejail, timeprison, secondprison, minuteprison;
	if(pData[playerid][pAdmin] < 3) return 1;
	if(pData[playerid][pAdmin] < 7 && GetPVarInt(playerid, "counting_punish") > gettime()) 
		return SCM(playerid, COLOR_ERROR, "√è√Æ√§√Æ√¶√§√®√≤√• √≠√•√±√™√Æ√´√º√™√Æ √±√•√™√≥√≠√§...");
	if(sscanf(params, "dds[100]",params[0],params[1],params[2])) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /jail [id √®√£√∞√Æ√™√†] [√±√∞√Æ√™ √¢ √¨√®√≠√≥√≤√†√µ] [√Ø√∞√®√∑√®√≠√†]");
	if(IsPlayerNPC(params[0])) return SCM(playerid, COLOR_ERROR, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Ø√Æ√±√†√§√®√≤√º √Ω√≤√Æ√£√Æ √∑√•√´√Æ√¢√•√™√†");
	if(params[1] < 5 || params[1] > 300) return SCM(playerid, COLOR_LIGHTGREY, "√Ñ√Æ√±√≤√≥√Ø√≠√Æ√• √¢√∞√•√¨√ø √Æ√≤ 5 √§√Æ 300 √¨√®√≠√≥√≤");

	new day, month, year, hour, minuite, second;
	getdate(year, month, day);
	gettime(hour, minuite, second);
	FixHour(hour);
	hour = shifthour;
	new data2[22];
	format(data2, 22, "%02d.%02d.%d √¢ %02d:%02d",day, month, year, hour, minuite);

	timeprison = pData[params[0]][pPrisonTime];
	secondprison=timeprison%60;
	minuteprison=(timeprison-secondprison)/60;

	timejail = pData[params[0]][pJailTime];
	secondjail=timejail%60;
	minutejail=(timejail-secondjail)/60;
	
	if(pData[params[0]][pJailTime] > 0) return SCMF(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √≥√¶√• √≠√†√µ√Æ√§√®√≤√±√ø √¢ √≤√æ√∞√º√¨√•. √é√±√≤√†√¢√∏√®√©√±√ø √±√∞√Æ√™: {FFCD00}%d:%02d", minutejail, secondjail);
	if(pData[params[0]][pPrisonTime] > 0) return SCMF(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √≥√¶√• √≠√†√µ√Æ√§√®√≤√±√ø √¢ √≤√æ√∞√º√¨√•. √é√±√≤√†√¢√∏√®√©√±√ø √±√∞√Æ√™: {FFCD00}%d:%02d", minuteprison, secondprison);
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™√† √± √≤√†√™√®√¨ √†√©√§√® No");
	ResetPlayerWeapons(params[0]);
	SetPlayerSpecialAction(params[0],SPECIAL_ACTION_NONE);
	DeletePVar(params[0], "PlayerCuffed");

	new id_hold = -1;

    foreach(new i:Player) if(GetPVarInt(i, "hold_player") == params[0]) id_hold = i;
    if(id_hold != -1) {
        hold[params[0]] = -1;
        SetPVarInt(playerid, "hold_player", -1);
    }

	SetPlayerWantedLevel(params[0], 0);
	pData[params[0]][pPrisonTime] = params[1]*60;
	if(pData[params[0]][pWanted] > 0) {
		pData[params[0]][pWanted] = 0;
		UpdatePlayerData(params[0], "pWanted", 0);
	}
	UpdatePlayerData(params[0], "pPrisonTime", pData[params[0]][pPrisonTime]);
	string[0] = EOS;
	if(pData[playerid][pSex] == 1) mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('%s[%d] √Ø√Æ√±√†√§√®√´ √¢ √≤√æ√∞√º√¨√≥ %s[%d] √≠√† %d √¨√®√≠√≥√≤ (%s)',%d,'%s')",pData[playerid][pName], playerid, GetName(params[0]), params[0], params[1], params[2], pData[params[0]][pID], data2);
	else mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('%s[%d] √Ø√Æ√±√†√§√®√´√† √¢ √≤√æ√∞√º√¨√≥ %s[%d] √≠√† %d √¨√®√≠√≥√≤ (%s)',%d,'%s')",pData[playerid][pName], playerid, GetName(params[0]), params[0], params[1], params[2], pData[params[0]][pID], data2);
	mysql_tquery(mysql_Handle, string);
	if(pData[playerid][pSex] == 1) format(string, 128, "[A] %s[%d] √Ø√Æ√±√†√§√®√´ √¢ √≤√æ√∞√º√¨√≥ %s[%d] √≠√† %d √¨√®√≠√≥√≤ (%s)",pData[playerid][pName],playerid, GetName(params[0]),params[0],params[1],params[2]);
	else format(string, 128, "[A] %s[%d] √Ø√Æ√±√†√§√®√´√† √¢ √≤√æ√∞√º√¨√≥ %s[%d] √≠√† %d √¨√®√≠√≥√≤ (%s)",pData[playerid][pName],playerid, GetName(params[0]),params[0],params[1],params[2]);
	AdminMessage(COLOR_GREY, string);
	if(GetPVarInt(playerid, "AdminMessages")) SCM(playerid, COLOR_GREY, string);
	if(pData[playerid][pSex] == 1) format(string, 128, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √Ø√Æ√±√†√§√®√´ √Ç√†√± √¢ √≤√æ√∞√º√¨√≥ √≠√† %d √¨√®√≠ (%s)",pData[playerid][pName], params[1],params[2]);
	else format(string, 128, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √Ø√Æ√±√†√§√®√´√† √Ç√†√± √¢ √≤√æ√∞√º√¨√≥ √≠√† %d √¨√®√≠ (%s)",pData[playerid][pName], params[1],params[2]);
	SCM(params[0], COLOR_LIGHTRED, string);
	SpawnPlayer(params[0]);
	start_animjail(params[0]);
	SCM(params[0], COLOR_LIGHTGREY, "√Ç√∞√•√¨√ø √§√Æ √¢√ª√µ√ÆS√≠ √≠√† √±√¢√Æ√°√Æ√§√≥: {cccc00}/time");
	gAdmin[playerid][ADMIN_JAIL] ++;
	return SetPVarInt(playerid,"counting_punish",gettime() + 5);
}
alias:call("c");
CMD:call(playerid, params[]) {
    if(GetPVarInt(playerid, "takephone")) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√•√´√•√¥√Æ√≠√†");
    if(pData[playerid][pPnumber] == -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√•√´√•√¥√Æ√≠√†. √ä√≥√Ø√®√≤√º √•√£√Æ √¨√Æ√¶√≠√Æ √¢ 24-7");
	if(pData[playerid][pMuteTime]) return SCM(playerid, COLOR_ERROR, "√Ñ√Æ√±√≤√≥√Ø √¢ √∑√†√≤ √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√≠. √ì√ß√≠√†√≤√º √¢√∞√•√¨√ø √§√Æ √Æ√™√Æ√≠√∑√†√≠√®√ø √°√†√≠√† √∑√†√≤√†: {66cc33}/time");
    if(CellTime{playerid}) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≥√¶√• √™√Æ√¨√≥-√≤√Æ √ß√¢√Æ√≠√®√≤√•. √Ñ√´√ø √±√Æ√¢√•√∞√∏√•√≠√®√ø √ß√¢√Æ√≠√™√† √Æ√≤√¨√•√≠√®√≤√• √≤√•√™√≥√π√®√© {ff9945}(/h)");
    if(GetPVarInt(playerid, "Mobile") != 999) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≥√¶√• √∞√†√ß√£√Æ√¢√†√∞√®√¢√†√•√≤√•. √Ñ√´√ø √ß√†√¢√•√∞√∏√•√≠√®√ø √ß√¢√Æ√≠√™√† √¢√¢√•√§√®√≤√• {ff9945}/h");
	if(pData[playerid][pCashNumber] <= 0) return SCM(playerid, COLOR_LIGHTGREY, "√Ñ√´√ø √±√Æ√¢√•√∞√∏√•√≠√®√ø √ß√¢√Æ√≠√™√† √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √Ø√Æ√Ø√Æ√´√≠√®√≤√º √±√∑¬∏√≤ √¨√Æ√°√®√´√º√≠√Æ√£√Æ √≤√•√´√•√¥√Æ√≠√†. √Ç√ª √¨√Æ√¶√•√≤√• √Ω√≤√Æ √±√§√•√´√†√≤√º √¢ √´√æ√°√Æ√¨ √°√†√≠√™√Æ√¨√†√≤√•");
	if(PhoneOnline{playerid}) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√†√∏ √≤√•√´√•√¥√Æ√≠ "CERROR"√Æ√≤√™√´√æ√∑¬∏√≠"CLIGHTGREY". √Ñ√´√ø √±√Æ√¢√•√∞√∏√•√≠√®√ø √ß√¢√Æ√≠√™√† √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √•√£√Æ {00cc66}√¢√™√´√æ√∑√®√≤√º");
	if(GetPVarInt(playerid, "gag")) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √™√´√ø√Ø, √Ç√ª √≠√• √¨√Æ√¶√•√≤√• √£√Æ√¢√Æ√∞√®√≤√º");
    new enter_number;
	if(sscanf(params, "d", enter_number))
	{
		return SPD(playerid, 299, DIALOG_STYLE_INPUT, "{FFCD00}√ç√†√°√•√∞√®√≤√• √≠√Æ√¨√•√∞", 
			"{6699cc}√ç√Æ√¨√•√∞√† √£√Æ√±√≥S√≠√∞√±√≤√¢√•√≠√≠√ª√µ √±√´√≥√¶√°:\n\n\
			"CWHITE"√è√Æ√´√®√∂√®√ø\t\t\t"CMAIN"02\n\
            "CWHITE"√ë√™√Æ√∞√†√ø √Ø√Æ√¨√Æ√π√º\t\t"CMAIN"03\n\
            "CWHITE"√í√†√™√±√®\t\t\t\t"CMAIN"333\n\
            "CWHITE"√ç√Æ√¢√Æ√±√≤√≠√†√ø √±√≤√≥√§√®√ø\t\t"CMAIN"05\n\
            "CWHITE"√ë√´√≥√¶√°√† √≤√Æ√∑√≠√Æ√£√Æ √¢√∞√•√¨√•√≠√®\t"CMAIN"060\n\
            "CWHITE"√é√Ø√•√∞√†√≤√Æ√∞ √±√¢√ø√ß√®\t\t"CMAIN"111", 
        "√è√Æ√ß√¢√Æ√≠√®√≤√º", "Cerrar");
	}
	if(enter_number == pData[playerid][pPnumber] || enter_number == -1 || enter_number == 0) {
		PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
		return SCM(playerid, COLOR_LIGHTGREY, "√ç√†√°√∞√†√≠√≠√ª√© √Ç√†√¨√® √≠√Æ√¨√•√∞ √≠√• √Æ√°√±√´√≥√¶√®√¢√†√•√≤√±√ø");
	}
	if(enter_number == 02) {
		SetPlayerSpecialAction(playerid, 11);
		return SPD(playerid, 243, DIALOG_STYLE_INPUT, ""CLITEBLUE"√Ç√ª√ß√Æ√¢ √Ø√Æ√´√®√∂√®√®", ""CWHITE"√á√§√∞√†√¢√±√≤√¢√≥√©√≤√•! √Ç√ª √Ø√Æ√ß√¢√Æ√≠√®√´√® √¢ √¨√•√±√≤√≠√Æ√• √≥√Ø√∞√†√¢√´√•√≠√®√• √Ø√Æ√´√®√∂√®√®.\n√ä√∞√†√≤√™√Æ √Æ√Ø√®√∏√®√≤√• √Ç√†√∏√≥ √±√®√≤√≥√†√∂√®√æ √¢ √Ø√Æ√´√• √≠√®√¶√•:\n\n"CLIGHTGREY"√è√Æ√¨√≠√®√≤√•, √ß√† √´√Æ√¶√≠√ª√© √¢√ª√ß√Æ√¢ √Ø√∞√•√§√≥√±√¨√Æ√≤√∞√•√≠√† √≥√£√Æ√´√Æ√¢√≠√†√ø\n√Æ√≤√¢√•√≤√±√≤√¢√•√≠√≠√Æ√±√≤√º.", "√Ç√ª√ß√¢√†√≤√º", "Cerrar");
	}
	if(enter_number == 03) {
		SetPlayerSpecialAction(playerid, 11);
		return SPD(playerid, 246, DIALOG_STYLE_INPUT, ""CLITEBLUE"√Ç√ª√ß√Æ√¢ √±√™√Æ√∞√Æ√© √Ø√Æ√¨√Æ√π√®", ""CWHITE"√á√§√∞√†√¢√±√≤√¢√≥√©√≤√•! √Ç√ª √Ø√Æ√ß√¢√Æ√≠√®√´√® √¢ √¨√•√±√≤√≠√Æ√• √≥√Ø√∞√†√¢√´√•√≠√®√• √ß√§√∞√†√¢√Æ√Æ√µ√∞√†√≠√•√≠√®√ø.\n√ä√∞√†√≤√™√Æ √Æ√Ø√®√∏√®√≤√• √£√§√• √Ç√ª √±√•√©√∑√†√± √≠√†√µ√Æ√§√®√≤√•√±√º √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√Ç√ª√ß√¢√†√≤√º", "Cerrar");
	}
	if(enter_number == 333) {
		SetPlayerSpecialAction(playerid, 11);
		return SPD(playerid, 247, DIALOG_STYLE_INPUT, ""CLITEBLUE"√Ç√ª√ß√Æ√¢ √≤√†√™√±√®", ""CWHITE"√á√§√∞√†√¢√±√≤√¢√≥√©√≤√•! √Ç√ª √Ø√Æ√ß√¢√Æ√≠√®√´√® √¢ √§√®√±√Ø√•√≤√∑√•√∞√±√™√≥√æ √≤√†√™√±√®.\n√ä√∞√†√≤√™√Æ √Æ√Ø√®√∏√®√≤√• √£√§√• √Ç√ª √±√•√©√∑√†√± √≠√†√µ√Æ√§√®√≤√•√±√º √¢ √Ø√Æ√´√• √≠√®√¶√•:", "√Ç√ª√ß√¢√†√≤√º", "Cerrar");
	}
	if(enter_number == 05) {
		if(PhoneCall[playerid]) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≥√¶√• √ß√¢√Æ√≠√®√≤√• √¢ √±√≤√≥√§√®√æ √´√®√°√Æ √≠√†√µ√Æ√§√®√≤√•√±√º √¢ √Ø√∞√ø√¨√Æ√¨ √Ω√¥√®√∞√•");
		if(!smsls) return SCM(playerid, COLOR_LIGHTGREY, "√í√•√´√•√¥√Æ√≠ √≠√†√µ√Æ√§√®√≤√±√ø √¢√≠√• √ß√Æ√≠√ª √§√Æ√±√≤√≥√Ø√†"), PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
		format(string, 100, "√Ç√µ√Æ√§√ø√π√®√© √ß√¢√Æ√≠√Æ√™ √¢ √±√≤√≥√§√®√æ √Æ√≤ %s {FFCD00}| √ç√Æ√¨√•√∞: %d", pData[playerid][pName], pData[playerid][pPnumber]);
		SFFM(16, COLOR_MAIN, string);
		format(string, 75, "Usar√≤√• "CBLUE"/yesring %d "CWHITE"√∑√≤√Æ√°√ª √Æ√≤√¢√•√≤√®√≤√º √≠√† √ß√¢√Æ√≠√Æ√™", playerid);
		SFFM(16, -1, string);
		SetPlayerAttachedObject(playerid, 0, 19513, 6, 0.113999, -0.006000, 0.007999, 83.899971, -178.700103, 0.000000, 1.000000, 1.000000, 1.000000, phone_color[pData[playerid][pColorPhone]], 0);
		SetPlayerSpecialAction(playerid,11);
		PlayerPlaySound(playerid, 16001, 0.0, 0.0, 0.0);
		PhoneCall[playerid] = true;
		return SCMF(playerid, COLOR_MAIN, "√à√±√µ√Æ√§√ø√π√®√© √ß√¢√Æ√≠√Æ√™ | √ç√Æ√¨√•√∞: %d {FFCD00}| √é√¶√®S√≠√≠√®√• √Æ√≤√¢√•√≤√† √Æ√≤ √±√≤√≥√§√®√® √≠√Æ√¢√Æ√±√≤√•√©...", enter_number);
	}
	if(enter_number == 060) {
		new h, m, year, month, day;

		getdate(year, month, day);
		gettime(h, m);
		new monthname[9], namewelcome[13], hour;
		gettime(hour);
		switch(hour) {
			case 0..4: namewelcome = "√Ñ√Æ√°√∞√Æ√© √≠√Æ√∑√®";
			case 5..11: namewelcome = "√Ñ√Æ√°√∞√Æ√• √≥√≤√∞√Æ";
			case 12..17: namewelcome = "√Ñ√Æ√°√∞√ª√© √§√•√≠√º";
			case 18..23: namewelcome = "√Ñ√Æ√°√∞√ª√© √¢√•√∑√•√∞";
		}
		switch(month) {
			case 1: monthname = "√ø√≠√¢√†√∞√ø";
			case 2: monthname = "√¥√•√¢√∞√†√´√ø";
			case 3: monthname = "√¨√†√∞√≤√†";
			case 4: monthname = "√†√Ø√∞√•√´√ø";
			case 5: monthname = "√¨√†√ø";
			case 6: monthname = "√®√æ√≠√ø";
			case 7: monthname = "√®√æ√´√ø";
			case 8: monthname = "√†√¢√£√≥√±√≤√†";
			case 9: monthname = "√±√•√≠√≤√ø√°√∞√ø";
			case 10: monthname = "√Æ√™√≤√ø√°√∞√ø";
			case 11: monthname = "√≠√Æ√ø√°√∞√ø";
			case 12: monthname = "√§√•√™√†√°√∞√ø";
		}
		string[0] = EOS;
		format(string, 440, ""CWHITE"%s!\n\
							√Ç√ª √Ø√Æ√ß√¢√Æ√≠√®√´√® √¢ √±√´√≥√¶√°√≥ √≤√Æ√∑√≠√Æ√£√Æ √¢√∞√•√¨√•√≠√®.\n\
							\n\
							√ë√•√£√Æ√§√≠√ø√∏√≠√ø√ø S√≠√≤√†:\t\t{abcdef}%d %s %d √£.\n\
							"CWHITE"√Ñ√•√≠√º √≠√•√§√•√´√®:\t\t\t"CMAIN"%s\n\
							"CWHITE"√í√•√™√≥√π√•√• √¢√∞√•√¨√ø:\t\t{fa8072}%i:%02d\n\
							\n\
							"CWHITE"√Ç√∞√•√¨√ø √¢ √®√£√∞√• √ß√† √∑√†√±:\t\t"CPALEGREEN"%d √¨√®√≠\n\
							"CWHITE"√Ç√∞√•√¨√ø √¢ √®√£√∞√• √ß√† √±√•√£√Æ√§√≠√ø:\t{aa80ff}%s\n\
							"CWHITE"√Ç√∞√•√¨√ø √¢ √®√£√∞√• √ß√† √¢√∑√•√∞√†:\t{aa80ff}%s\n\
							"CWHITE"AFK √ß√† √±√•√£√Æ√§√≠√ø:\t\t"CORANGE"%s\n\
							"CWHITE"AFK √ß√† √¢√∑√•√∞√†:\t\t\t"CORANGE"%s",
		namewelcome,
		day, monthname, year,
		wd_name[weekday(day, month, year)],
		h, m,
		pData[playerid][pInGameTime],
		ConvertTime(pData[playerid][p_time1][0]),
		ConvertTime(pData[playerid][p_time2][0]),
		ConvertTime(pData[playerid][p_time1][1]),
		ConvertTime(pData[playerid][p_time2][1]));
		SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CLITEBLUE"√í√Æ√∑√≠√Æ√• √¢√∞√•√¨√ø", string, "Cerrar", "");
		format(string, 60, "~w~%02d:%02d~n~~b~%02d.%s%d.%s%d", h, m, day, ((month < 10) ? ("0") : ("")), month, (year < 10) ? ("0") : (""), year);
		GameTextForPlayer(playerid, string, 5000, 1);
		SetPlayerChatBubble(playerid, "√ß√¢√Æ√≠√®√≤ √¢ √±√´√≥√¶√°√≥ √≤√Æ√∑√≠√Æ√£√Æ √¢√∞√•√¨√•√≠√®...", COLOR_PURPLE, 4.0, 5000);
		if(!IsPlayerApplyAnimation(playerid, "Bat_4") && 
		!GetPVarInt(playerid, "player_anim") && 
		GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && 
		PlayerTied{playerid} == false && 
		!GetPVarInt(playerid, "PlayerCuffedTime") &&
		!GetPVarInt(playerid, #tazer_dest)) ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_watch", 4.1, 0, 0, 0, 0, 2000, 1);
		return SCM(playerid, 0x99CC00FF, "√Ç√ª √Ø√Æ√ß√¢√Æ√≠√®√´√® √¢ √±√´√≥√¶√°√≥ √≤√Æ√∑√≠√Æ√£√Æ √¢√∞√•√¨√•√≠√®");
	}
	if(enter_number == 111) {
		SetPlayerSpecialAction(playerid, 11);
		SetTimerEx("phoneput", 1000, false, "i", playerid);
		if(pData[playerid][pSex] == 1) MeAction(playerid, "√§√Æ√±√≤√†√´ √≤√•√´√•√¥√Æ√≠");
		else MeAction(playerid, "√§√Æ√±√≤√†√´√† √≤√•√´√•√¥√Æ√≠");
		format(string, 240, ""CWHITE"√á√§√∞√†√¢√±√≤√¢√≥√©√≤√•! √Ç√ª √Ø√Æ√ß√¢√Æ√≠√®√´√® √Æ√Ø√•√∞√†√≤√Æ√∞√≥.\n√ç√† S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤ √°√†√´√†√≠√± √Ç√†√∏√•√£√Æ √≤√•√´√•√¥√Æ√≠√†\n√±√Æ√±√≤√†√¢√´√ø√•√≤ "CLITEBLUE"%d$"CWHITE".\n\n"CPALEGREEN"√Ç√ª √¨√Æ√¶√•√≤√• √Ø√Æ√Ø√Æ√´√≠√®√≤√º √•√£√Æ √¢ √´√æ√°√Æ√¨ √°√†√≠√™√Æ√¨√†√≤√•\n√®√´√® √±√†√´√Æ√≠√• √¨√Æ√°√®√´√º√≠√Æ√© √±√¢√ø√ß√®.", pData[playerid][pCashNumber]);
		return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CLITEBLUE"√é√Ø√•√∞√†√≤√Æ√∞ √¨√Æ√°√®√´√º√≠√Æ√© √±√¢√ø√ß√®", string, "Cerrar", "");
	}
	foreach(new i:Player) {
        if(pData[i][pPnumber] != enter_number) continue;
		SetPVarInt(playerid, "Mobile", i);
		if(pData[i][pMuteTime]) return SCM(playerid, COLOR_ERROR, "√ç√† S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤ √†√°√Æ√≠√•√≠√≤ √≠√• √¨√Æ√¶√•√≤ √± √¢√†√¨√® √Ø√Æ√£√Æ√¢√Æ√∞√®√≤√º"), PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
		if(PhoneOnline{i}) return SCM(playerid, COLOR_LIGHTGREY, "√í√•√´√•√¥√Æ√≠ √†√°√Æ√≠√•√≠√≤√† √¢√ª√™√´√æ√∑√•√≠ √®√´√® √≠√†√µ√Æ√§√®√≤√±√ø √¢√≠√• √ß√Æ√≠√ª √§√Æ√±√≤√≥√Ø√†"),PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
		if(GetPVarInt(i, "Mobile") != 999) {
            PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
            return SCM(playerid, COLOR_LIGHTGREY, "√Ç S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤ √†√°√Æ√≠√•√≠√≤ √∞√†√ß√£√Æ√¢√†√∞√®√¢√†√•√≤. √ë√Æ√¢√•√∞√∏√•√≠√®√• √ß√¢√Æ√≠√™√† √≠√•√¢√Æ√ß√¨√Æ√¶√≠√Æ");
        }
        else {
			SCMF(i, COLOR_MAIN, "√Ç√µ√Æ√§√ø√π√®√© √ß√¢√Æ√≠√Æ√™ √Æ√≤ %s {FFCD00}| √ç√Æ√¨√•√∞: %d", pData[playerid][pName],pData[playerid][pPnumber]);
			SetPlayerSpecialAction(playerid,11);
			SCM(i, -1, "Usar√≤√• {00cc00}/p "CWHITE"√∑√≤√Æ√°√ª √Æ√≤√¢√•√≤√®√≤√º √®√´√® "CERROR"/h "CWHITE"√∑√≤√Æ√°√ª √Æ√≤√™√´√Æ√≠√®√≤√º √ß√¢√Æ√≠√Æ√™");
			PlayerPlaySound(i, 23000, 0.0, 0.0, 0.0);
			SetPVarInt(playerid, "Mobile",i);
			SCMF(playerid, COLOR_MAIN, "√à√±√µ√Æ√§√ø√π√®√© √ß√¢√Æ√≠√Æ√™ | √ç√Æ√¨√•√∞: %d {FFCD00}| √é√¶√®S√≠√≠√®√• √Æ√≤√¢√•√≤√† √Æ√≤ %s...", pData[i][pPnumber], GetName(i));
			PlayerPlaySound(playerid, 16001, 0.0, 0.0, 0.0);
			SetPlayerAttachedObject(playerid, 0, 19513, 6, 0.113999, -0.006000, 0.007999, 83.899971, -178.700103, 0.000000, 1.000000, 1.000000, 1.000000, phone_color[pData[playerid][pColorPhone]], 0);
			if(pData[playerid][pSex] == 1) MeAction(playerid, "√§√Æ√±√≤√†√´ √≤√•√´√•√¥√Æ√≠");
			else MeAction(playerid, "√§√Æ√±√≤√†√´√† √≤√•√´√•√¥√Æ√≠");
			CellTime{playerid} = true;
			return 1;
		}
	}
	PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
	return SCM(playerid, COLOR_LIGHTGREY, "√í√•√´√•√¥√Æ√≠ √≠√†√µ√Æ√§√®√≤√±√ø √¢√≠√• √ß√Æ√≠√ª √§√Æ√±√≤√≥√Ø√†");
}
stock ConvertTime(number)
{
	new strc[20] = "0 √∑ 0 √¨√®√≠";

	if(number > 0)
	{
		new hours = floatround(number / 3600);
		format(strc, 20, "%d √∑ %d √¨√®√≠", hours, floatround((number / 60) - (hours * 60)));
	}

	return strc;
}
CB: phoneput(playerid) SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
CMD:end(playerid) {
	if(pData[playerid][pJailTime] > 0 || pData[playerid][pPrisonTime] > 0) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Ω√≤√≥ √™√Æ√¨√†√≠√§√≥ √¢ S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤");
	if(bloody_en[playerid]) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Ω√≤√≥ √™√Æ√¨√†√≠√§√≥ √¢ S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤");
    if(workzavod[playerid]) return SCM(playerid, COLOR_GREY, "√Ç√†√¨ √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √ß√†√¢√•√∞√∏√®√≤√º √¢√±√• √≠√†√∑√†√≤√ª√• √∞√†√°√Æ√≤√ª √® √§√•√©√±√≤√¢√®√ø");
	if(pData[playerid][pLowSkill] == 1 || pData[playerid][pHighSkill] == 1) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Ω√≤√≥ √™√Æ√¨√†√≠√§√≥ √¢ S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤");
	if(GetPVarInt(playerid, "loader_job") == 1) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Ω√≤√≥ √™√Æ√¨√†√≠√§√≥ √¢ S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤");
	
	else if(pData[playerid][pMember] != 0 && GetPlayerSkin(playerid) != pData[playerid][pModel]) {
		if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √≤√∞√†√≠√±√Ø√Æ√∞√≤√•");
		SetPlayerSkin(playerid, pData[playerid][pModel]);
	}

	else if(pData[playerid][pMember] == 0 && GetPlayerSkin(playerid) != pData[playerid][pChar]) {
		if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √≤√∞√†√≠√±√Ø√Æ√∞√≤√•");
		pData[playerid][pModel] = pData[playerid][pChar];
		SetPlayerSkin(playerid, pData[playerid][pChar]);
		UpdatePlayerData(playerid, "pModel", pData[playerid][pChar]);
	}

	else if(GetPVarInt(playerid, "MaskPlayer")) {
		if(pData[playerid][pSex] == 1) SetPlayerChatBubble(playerid, "√ë√≠√ø√´ √¨√†√±√™√≥", COLOR_YELLOW, 4.0, 5000);
		else SetPlayerChatBubble(playerid, "√ë√≠√ø√´√† √¨√†√±√™√≥", COLOR_YELLOW, 4.0, 5000);
		PlayerTextDrawSetString(playerid, td_mask_time[playerid], "~r~INVISIBLE OFF");
		SetTimerEx("mask_td", 3000, 0, "d", playerid);
		RemovePlayerAttachedObject(playerid, 2);
		SetPlayerColor(playerid, FractionInfo[pData[playerid][pMember]][fColor]);
		DeletePVar(playerid, "MaskPlayer");
	}

	else SCM(playerid, COLOR_LIGHTGREY, "√ç√† √Ç√†√± √≠√• √≠√†√§√•√≤√† √¨√†√±√™√† √´√®√°√Æ √≥√≠√®√¥√Æ√∞√¨√†");
	return 1;
}
CMD:a(playerid, params[]) {
	if(pData[playerid][pAdmin] < 1) return 1;
	if(GetPVarInt(playerid, "AdminMessages")) return SCM(playerid, COLOR_LIGHTGREY, "√Ñ√´√ø √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√ø √†√§√¨√®√≠-√∑√†√≤√† √≠√≥√¶√≠√Æ √¢√™√´√æ√∑√®√≤√º √†√§√¨√®√≠-√±√Æ√Æ√°√π√•√≠√®√ø √¢ /apanel");
	new str[144], mes[100];
	if(sscanf(params, "s[100]", mes)) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /a [√≤√•√™√±√≤]");
	format(str, sizeof(str), "[A] %s[%d]: %s", pData[playerid][pName], playerid, mes);
	AdminMessage(0x99CC00FF, str);
	return 1;
}
CMD:hc(playerid, params[]) {
	if(pData[playerid][pAdmin] < 1 && !pData[playerid][pHelper]) return 1;
	if(pData[playerid][pAdmin] > 0 && GetPVarInt(playerid, "HelpersShow")) 
		return SCM(playerid, COLOR_LIGHTGREY, "√Ñ√´√ø √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√ø √∑√†√≤√† √≠√≥√¶√≠√Æ √¢√™√´√æ√∑√®√≤√º √±√Æ√Æ√°√π√•√≠√®√ø √µ√•√´√Ø√•√∞√Æ√¢ √¢ /apanel");
	new str[144], mes[100];
	if(sscanf(params, "s[100]", mes)) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /hc [√≤√•√™√±√≤]");
	format(str, sizeof(str), "[H] %s %s[%d]: %s", (pData[playerid][pAdmin] > 0) ? ("√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞") : ("√ï√•√´√Ø√•√∞"), pData[playerid][pName], playerid, mes);
	foreach(new i:Player) {
		if(!pData[i][pHelper] && GetPVarInt(i, "HelpersShow")) continue;
		SCM(i, 0xCCCC33FF, str);
	}
	return 1;
}

CMD:respv(playerid, params[]) {
	new Float: xa, Float: xy, Float: xz, Float: axa, Float: axy, Float: axz;
	if(pData[playerid][pAdmin] < 4) return 1;
	if(IsPlayerInAnyVehicle(playerid)) {
		SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		return SCM(playerid, -1, "√í√•√™√≥√π√†√ø √¨√†√∏√®√≠√† √∞√•√±√Ø√†√¢√≠√•√≠√†");
	}
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /respv [√∞√†√§√®√≥√± √Æ√≤ 3 √§√Æ 100 √¨]");
	if(params[0] == -1) {
		if(pData[playerid][pAdmin] < 4) return SCM(playerid, COLOR_LIGHTGREY, "√ê√•√±√Ø√†√¢√≠√®√≤√º √≤√∞√†√≠√±√Ø√Æ√∞√≤ √¢ √Æ√°√´√†√±√≤√® √¢√®√§√®√¨√Æ√±√≤√® √¨√Æ√¶√≠√Æ √± 4 √≥√∞√Æ√¢√≠√ø √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√†");
		for(new i = 0, ps = GetVehiclePoolSize(); i <= ps; i++) {
			if(i == 65535 || IsVehicleOccupied(i)) continue;
			GetVehiclePos(i, axa, axy, axz);
			if(!IsPlayerInRangeOfPoint(playerid, 180.0, axa, axy, axz)) continue;
			SetVehicleToRespawn(i);
		}
		return SCM(playerid, 0x00FF00FF, "√å√†√∏√®√≠√ª √¢ √Ç√†√∏√•√© √Æ√°√´√†√±√≤√® √¢√®√§√®√¨√Æ√±√≤√® √∞√•√±√Ø√†√¢√≠√•√≠√ª");
	}
	if(params[0] < 3 || params[0] > 100) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§¬∏√≠ √≠√•√¢√•√∞√≠√ª√© √∞√†√§√®√≥√±. √Ñ√Æ√±√≤√≥√Ø√≠√Æ √Æ√≤ 3 √§√Æ 100 √¨");
	GetPlayerPos(playerid, xa, xy, xz);
	for(new i = 0, ps = GetVehiclePoolSize(); i <= ps; i++) {
		if(i == 65535 || IsVehicleOccupied(i)) continue;
		if(!VehToPoint(params[0], i, xa, xy, xz)) continue;
		SetVehicleToRespawn(i);
	}
	return SCM(playerid, 0x00FF00FF, "√å√†√∏√®√≠√ª √¢ √≥√™√†√ß√†√≠√≠√Æ√¨ √∞√†√§√®√≥√±√• √°√ª√´√® √∞√•√±√Ø√†√¢√≠√•√≠√ª");
}
CMD:do(playerid, params[]) {
	if(sscanf(params, "s[126]", params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /do [√§√•√©√±√≤√¢√®√•]");
	if(pData[playerid][pMuteTime]) return SCM(playerid, COLOR_ERROR, "√Ñ√Æ√±√≤√≥√Ø √¢ √∑√†√≤ √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√≠. √ì√ß√≠√†√≤√º √¢√∞√•√¨√ø √§√Æ √Æ√™√Æ√≠√∑√†√≠√®√ø √°√†√≠√† √∑√†√≤√†: {66cc33}/time");
	string[0] = EOS;
	format(string, 144, "%s (%s)", params[0], pData[playerid][pName]);
	SetPlayerChatBubble(playerid, params[0], COLOR_PURPLE, 30.0, 10000);
	return ProxDetector(30.0, playerid, string, COLOR_PURPLE);
}
CMD:me(playerid, params[]) {
	if(GetPVarInt(playerid, "gag")) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √™√´√ø√Ø, √Ç√ª √≠√• √¨√Æ√¶√•√≤√• √£√Æ√¢√Æ√∞√®√≤√º");
	if(pData[playerid][pMuteTime]) return SCM(playerid, COLOR_ERROR, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Ω√≤√≥ √¥√≥√≠√™√∂√®√æ √¢ S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤");
	new text[104];
	if(sscanf(params, "s[104]", text)) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /me [√§√•√©√±√≤√¢√®√•]");
	MeAction(playerid, text);
	SetPlayerChatBubble(playerid, params[0], COLOR_PURPLE, 30.0, 10000);
	return 1;
}
CMD:ame(playerid, params[]) {
	if(GetPVarInt(playerid, "gag")) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √™√´√ø√Ø, √Ç√ª √≠√• √¨√Æ√¶√•√≤√• √£√Æ√¢√Æ√∞√®√≤√º");
	if(pData[playerid][pMuteTime]) return SCM(playerid, COLOR_ERROR, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Ω√≤√≥ √¥√≥√≠√™√∂√®√æ √¢ S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤");
	new text[104];
	if(sscanf(params, "s[104]", text)) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /ame [√§√•√©√±√≤√¢√®√•]");
	string[0] = EOS; format(string, 110, ">> %s", text);
	SetPlayerChatBubble(playerid, text, COLOR_PURPLE, 30.0, 10000);
	return SCM(playerid, COLOR_GREY, string);
}
CMD:sms(playerid, params[]) {
	new give_sms_id = -1;
	if(GetPVarInt(playerid, "takephone")) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√•√´√•√¥√Æ√≠√†");
	if(pData[playerid][pPnumber] == -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√•√´√•√¥√Æ√≠√†. √ä√≥√Ø√®√≤√º √•√£√Æ √¨√Æ√¶√≠√Æ √¢ 24-7");
	if(GetPVarInt(playerid, "gag")) return SCM(playerid, COLOR_LIGHTRED, "√ì √Ç√†√± √™√´√ø√Ø, √Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Æ√≤√Ø√∞√†√¢√®√≤√º √±√Æ√Æ√°√π√•√≠√®√•");
	if(pData[playerid][pMuteTime]) return SCM(playerid, COLOR_ERROR, "√Ñ√Æ√±√≤√≥√Ø √¢ √∑√†√≤ √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√≠. √ì√ß√≠√†√≤√º √¢√∞√•√¨√ø √§√Æ √Æ√™√Æ√≠√∑√†√≠√®√ø √°√†√≠√† √∑√†√≤√†: {66cc33}/time");
	if(PhoneOnline{playerid}) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√†√∏ √≤√•√´√•√¥√Æ√≠ "CERROR"√Æ√≤√™√´√æ√∑¬∏√≠"CLIGHTGREY". √Ñ√´√ø √Æ√≤√Ø√∞√†√¢√´√•√≠√®√ø √±√Æ√Æ√°√π√•√≠√®√ø √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √•√£√Æ {00cc66}√¢√™√´√æ√∑√®√≤√º");
	if(pData[playerid][pCashNumber] < 5) return SCM(playerid, COLOR_LIGHTGREY, "√Ñ√´√ø √Æ√≤√Ø√∞√†√¢√´√•√≠√®√ø √±√Æ√Æ√°√π√•√≠√®√ø √≤√∞√•√°√≥√•√≤√±√ø 5$ √≠√† √±√∑√•√≤√≥ √¨√Æ√°√®√´√º√≠√Æ√£√Æ √≤√•√´√•√¥√Æ√≠√†");
	if(sscanf(params,"ds[100]",params[0], params[1])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /sms [√≠√Æ√¨√•√∞ √≤√•√´√•√¥√Æ√≠√†] [√≤√•√™√±√≤]");
	if(strlen(params[1]) > 64) return SCM(playerid, COLOR_LIGHTGREY, "√ë√´√®√∏√™√Æ√¨ √§√´√®√≠√≠√Æ√• √±√Æ√Æ√°√π√•√≠√®√•");
	if(pData[playerid][pPnumber] == params[0]) return SCM(playerid, COLOR_GREY, "√ç√†√°√∞√†√≠√≠√ª√© √Ç√†√¨√® √≠√Æ√¨√•√∞ √≠√• √Æ√°√±√´√≥√¶√®√¢√†√•√≤√±√ø"), PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
	foreach(new i:Player) {
        if(pData[i][pPnumber] != params[0]) continue;
        give_sms_id = i;
    }
	if(give_sms_id == -1) return SCM(playerid, COLOR_LIGHTGREY, "√ç√†√°√∞√†√≠√≠√ª√© √Ç√†√¨√® √≠√Æ√¨√•√∞ √≠√• √Æ√°√±√´√≥√¶√®√¢√†√•√≤√±√ø"), PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
	if(PhoneOnline{give_sms_id}) {
		PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
		return SCM(playerid, COLOR_LIGHTGREY, "√í√•√´√•√¥√Æ√≠ √≠√†√µ√Æ√§√®√≤√±√ø √¢√≠√• √ß√Æ√≠√ª √§√Æ√±√≤√≥√Ø√†");
	}
	if(pData[give_sms_id][pMuteTime]) return SCM(playerid, COLOR_ERROR, "√ç√† S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤ √Æ√≤√Ø√∞√†√¢√´√•√≠√®√• √±√Æ√Æ√°√π√•√≠√®√ø √Ω√≤√Æ√¨√≥ √®√£√∞√Æ√™√≥ √≠√•√¢√Æ√ß√¨√Æ√¶√≠√Æ"), PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
	pData[playerid][pCashNumber] -= 5;
	GameTextForPlayer(playerid, "-5$~n~~w~SMS", 2000, 1);
	UpdatePlayerData(playerid, "pCashNumber", pData[playerid][pCashNumber]);
	SCMF(give_sms_id, 0xFEBC41AA, "SMS: "CYELLOW"%s {febc41}| "CYELLOW"√é√≤√Ø√∞√†√¢√®√≤√•√´√º: %s[%d] [√≤.%i]", params[1], pData[playerid][pName], playerid, pData[playerid][pPnumber]);
	SCMF(playerid,  0xFEBC41AA, "SMS: "CYELLOW"%s {febc41}| "CYELLOW"√è√Æ√´√≥√∑√†√≤√•√´√º: %s[%d] [√≤.%i]", params[1], pData[give_sms_id][pName], give_sms_id, params[0]);
	string[0] = EOS;
	SetPlayerChatBubble(playerid, "SMS >>>", 0xFEBC41AA, 15.0, 2000);
	SetPlayerChatBubble(give_sms_id, "SMS <<<", 0xFEBC41AA, 15.0, 2000);
	foreach(new d:Player) if(GetPVarInt(d, "ears")) SCMF(d, 0xFEBC41AA, "SMS: "CYELLOW"%s {febc41}| "CYELLOW"√é√≤√Ø√∞√†√¢√®√´ %s[%d] √§√´√ø %s[%d]", params[1], pData[playerid][pName], playerid, pData[give_sms_id][pName], give_sms_id);
	return 1;
}
CMD:m(playerid, params[]) {
	if(!IsACop(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √±√Æ√±√≤√Æ√®√≤√• √¢ √å√Ç√Ñ");
	if(!Megaphone(GetPlayerVehicleID(playerid))) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √±√´√≥√¶√•√°√≠√Æ√¨ √≤√∞√†√≠√±√Ø√Æ√∞√≤√•");
	if(sscanf(params, "s[90]", params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /m [√≤√•√™√±√≤]");
    if(strlen(params[0]) > 90) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§¬∏√≠ √±√´√®√∏√™√Æ√¨ √§√´√®√≠√≠√ª√© √≤√•√™√±√≤");
	new mmes_str[128];
	SetPlayerChatBubble(playerid, params[0], 0xFFFF00FF, 15.0, 2000);
	format(mmes_str, 128, "<< %s %s: %s >>", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], GetName(playerid), params[0]);
	return ProxDetector(50.0, playerid, mmes_str, COLOR_YELLOW);
}
CMD:ticket(playerid, params[]) {
	if(!IsACop(playerid)) return SCM(playerid, -1, "√Ç√ª √≠√• √±√Æ√≤√∞√≥√§√≠√®√™ √å√Ç√Ñ");
	if(sscanf(params,"dds[100]",params[0],params[1],params[2])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /ticket [id √®√£√∞√Æ√™√†] [√±√≥√¨√¨√†] [√Ø√∞√®√∑√®√≠√†]");
	if(params[1] < 1 || params[1] > 2000) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§√•√≠√† √≠√•√¢√•√∞√≠√†√ø √±√≥√¨√¨√† √∏√≤√∞√†√¥√†. √Ñ√Æ√±√≤√≥√Ø√≠√Æ √Æ√≤ 1 √§√Æ 2000$");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
	if(pData[params[0]][pCash] < params[1]) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ω√≤√Æ√£√Æ √®√£√∞√Æ√™√† No √±√≤√Æ√´√º√™√Æ √§√•√≠√•√£");
	if(params[0] == playerid) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √¢√ª√Ø√®√±√†√≤√º √∏√≤√∞√†√¥ √±√•√°√•");
    if(strlen(params[2]) > 80) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§√•√≠√† √±√´√®√∏√™√Æ√¨ √§√´√®√≠√≠√†√ø √Ø√∞√®√∑√®√≠√†");
    if(GetPVarInt(playerid, "cancel_act")) return SCM(playerid, COLOR_GREY, "√Ç√ª √≥√¶√• √±√§√•√´√†√´√® √™√†√™√Æ√•-√≤√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √Ç√¢√•√§√®√≤√• "CBLUE"/revoke"CGREY", √∑√≤√Æ√°√ª √Æ√≤√Æ√ß√¢√†√≤√º √•√£√Æ");
    if(GetPVarInt(params[0], "offer") != 9999) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™√≥ √≥√¶√• √±√§√•√´√†√´√® √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √é√≠ √§√Æ√´√¶√•√≠ {00cc00}√Ø√∞√®√≠√ø√≤√º "CLIGHTGREY"√®√´√® "CERROR"√Æ√≤√¨√•√≠√®√≤√º "CLIGHTGREY"√•√£√Æ");
	string[0] = EOS;
	format(string,128, "√Ç√ª √¢√ª√Ø√®√±√†√´√® √∏√≤√∞√†√¥ √¢ √∞√†√ß√¨√•√∞√• %d$ %s. √è√∞√®√∑√®√≠√†: %s",params[1], GetName(params[0]), params[2]);
	SCM(playerid, COLOR_BLUE, string);
	format(string,128, "%s %s √¢√ª√Ø√®√±√†√´ √¢√†√¨ √∏√≤√∞√†√¥ √¢ √∞√†√ß√¨√•√∞√• %d$. √è√∞√®√∑√®√≠√†: %s", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], pData[playerid][pName], params[1], params[2]);
	SCM(params[0], COLOR_BLUE, string);
    SetPVarInt(playerid, "cancel_act", 1); SetPVarInt(playerid, "cancel_act_id", params[0]);
	SetPVarInt(params[0],"TicketOffer",playerid);
	SetPVarInt(params[0],"TicketMoney",params[1]);
    SetPVarInt(params[0], "offer", 1);
    return SCM(params[0], -1, "√ç√†√¶√¨√®√≤√• "CMAIN"Y "CWHITE"√∑√≤√Æ√°√ª √±√Æ√£√´√†√±√®√≤√º√±√ø √®√´√® "CERROR"N "CWHITE"√§√´√ø √Æ√≤√™√†√ß√†");
}
CMD:weap(playerid, params[]) {
	if(pData[playerid][pAdmin] < 2) return 1;
	new query1[1240], weapons[13][2], plid, temp1[440], titleweap[48], temp2[440];
	if(sscanf(params, "d", plid)) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /weap [id √®√£√∞√Æ√™√†]");
	if(!IsPlayerConnected(plid)) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	strcat(query1, ""CLITEBLUE"S√≠√≠√≠√ª√• √™√´√®√•√≠√≤√†:\n\n");
	static const fmt_query1[] = ""CWHITE"√ë√´√Æ√≤ ¬π%d\tID √Æ√∞√≥√¶√®√ø: %d\t\t√è√†√≤√∞√Æ√≠√ª: %d\n", 
				 fmt_query2[] = "√ë√´√Æ√≤ ¬π%d\tID √Æ√∞√≥√¶√®√ø: %d\t\t√è√†√≤√∞√Æ√≠√ª: %d\n";
	for(new i = 0; i <= 12; i ++) {
		GetPlayerWeaponData(plid, i, weapons[i][0], weapons[i][1]);
		if(weapons[i][1] == 0)
			weapons[i][0] = 0;
		format(temp1, sizeof temp1, fmt_query1, i, weapons[i][0], weapons[i][1]);
		strcat(query1, temp1);
	}
	strcat(query1, "\n\n"CLITEBLUE"S√≠√≠√≠√ª√• √†√≠√≤√®√∑√®√≤√†:\n\n{66cc33}");
	for(new i = 0; i <= 12; i ++) {
		AntiCheatGetWeaponData(plid, i, weapons[i][0], weapons[i][1]);
		if(weapons[i][1] == 0)
			weapons[i][0] = 0;
		format(temp2, sizeof temp2, fmt_query2, i, weapons[i][0], weapons[i][1]);
		strcat(query1, temp2);
	}
	format(titleweap, sizeof titleweap, "√ë√≤√†√≤√®√±√≤√®√™√† √Æ√∞√≥√¶√®√ø %s", pData[plid][pName]);
	return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, titleweap, query1, "Cerrar", "");
}
CMD:baninfo(playerid, params[]) {
	if (pData[playerid][pAdmin] < 4) return 1;
	new text[MAX_PLAYER_NAME];
	if(sscanf(params, "s[24]", text)) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /baninfo [√≠√®√™ √®√´√® √≠√Æ√¨√•√∞ √†√™√™√†√≥√≠√≤√†]");
	new bool:findnick = false;
    for(new i = 0; i < strlen(text); i ++) {
        if(text[i] >= '0' && text[i] <= '9') continue;
        findnick = true;
        break;
    }
    if(findnick == true) // √≠√®√™
    {
		mysql_format(mysql_Handle, string, 70, "SELECT * FROM `banlist` WHERE `Nick` = '%s'", text);
		mysql_tquery(mysql_Handle, string, "BanInfo", "ds",playerid,text);
    }
    else
    {
    	new id = strval(text);
		mysql_format(mysql_Handle, string, 70, "SELECT * FROM `banlist` WHERE `id_acc` = %d", id);
		mysql_tquery(mysql_Handle, string, "BanInfoID", "dd", playerid, id);
    }
	return 1;
}
CB: BanInfo(playerid, name[]) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No √¢ √°√†√≠-√´√®√±√≤√•");
	else {
		new admin[24], idaccas, email[32], data[16], ipban[16], unbandays;
		cache_get_value_name_int(0, "id_acc", idaccas);
		cache_get_value_name(0, "IP", ipban);
		cache_get_value_name(0, "Admin", admin);
		cache_get_value_name(0, "Reason", email);
		cache_get_value_name(0, "Date", data);
		cache_get_value_name_int(0, "Days", unbandays);
		new un_gettime, un_date[16];
		cache_get_value_name_int(0, "UnBanDate", un_gettime);
		format(un_date, sizeof(un_date), "%s", date("%dd.%mm.%yyyy", un_gettime));
		if(unbandays > 30) format(string, 330, "√ç√Æ√¨√•√∞ √†√™√™√†√≥√≠√≤√†:\t\t%d\n√ç√®√™ √ß√†√°√†√≠√•√≠√≠√Æ√£√Æ:\t\t%s\n√ç√®√™ √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√†:\t\t%s\nS√≠√≤√† √°√´√Æ√™√®√∞√Æ√¢√™√®:\t\t%s\nS√≠√≤√† √∞√†√ß√°√´√Æ√™√®√∞√Æ√¢√™√®:\t\t‚Äî\t\n√è√∞√®√∑√®√≠√†:\t\t\t%s\nIP √¢√Æ √¢√∞√•√¨√ø √°√†√≠√†:\t\t%s", idaccas, name, admin, data, email, ipban);
		else format(string, 350, "√ç√Æ√¨√•√∞ √†√™√™√†√≥√≠√≤√†:\t\t%d\n√ç√®√™ √ß√†√°√†√≠√•√≠√≠√Æ√£√Æ:\t\t%s\n√ç√®√™ √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√†:\t\t%s\nS√≠√≤√† √°√´√Æ√™√®√∞√Æ√¢√™√®:\t\t%s\nS√≠√≤√† √∞√†√ß√°√´√Æ√™√®√∞√Æ√¢√™√®:\t\t%s\n√è√∞√®√∑√®√≠√†:\t\t\t%s\nIP √¢√Æ √¢√∞√•√¨√ø √°√†√≠√†:\t\t%s", idaccas, name, admin, data, un_date, email, ipban);
		SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "√à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ √°√†√≠√•", string, "Cerrar", "");
	}
	return 1;
}
CB: BanInfoID(playerid, idaccas) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No √¢ √°√†√≠-√´√®√±√≤√•");
	else {
		new admin[24], name[24], email[32], data[16], ipban[16], unbandays;
		cache_get_value_name(0, "Nick", name);
		cache_get_value_name(0, "IP", ipban);
		cache_get_value_name(0, "Admin", admin);
		cache_get_value_name(0, "Reason", email);
		cache_get_value_name(0, "Date", data);
		cache_get_value_name_int(0, "Days", unbandays);
		new un_gettime, un_date[16];
		cache_get_value_name_int(0, "UnBanDate", un_gettime);
		format(un_date, sizeof(un_date), "%s", date("%dd.%mm.%yyyy", un_gettime));
		if(unbandays > 30) format(string, 330, "√ç√Æ√¨√•√∞ √†√™√™√†√≥√≠√≤√†:\t\t%d\n√ç√®√™ √ß√†√°√†√≠√•√≠√≠√Æ√£√Æ:\t\t%s\n√ç√®√™ √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√†:\t\t%s\nS√≠√≤√† √°√´√Æ√™√®√∞√Æ√¢√™√®:\t\t%s\nS√≠√≤√† √∞√†√ß√°√´√Æ√™√®√∞√Æ√¢√™√®:\t\t‚Äî\t\n√è√∞√®√∑√®√≠√†:\t\t\t%s\nIP √¢√Æ √¢√∞√•√¨√ø √°√†√≠√†:\t\t%s", idaccas, name, admin, data, email, ipban);
		else format(string, 350, "√ç√Æ√¨√•√∞ √†√™√™√†√≥√≠√≤√†:\t\t%d\n√ç√®√™ √ß√†√°√†√≠√•√≠√≠√Æ√£√Æ:\t\t%s\n√ç√®√™ √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√†:\t\t%s\nS√≠√≤√† √°√´√Æ√™√®√∞√Æ√¢√™√®:\t\t%s\nS√≠√≤√† √∞√†√ß√°√´√Æ√™√®√∞√Æ√¢√™√®:\t\t%s\n√è√∞√®√∑√®√≠√†:\t\t\t%s\nIP √¢√Æ √¢√∞√•√¨√ø √°√†√≠√†:\t\t%s", idaccas, name, admin, data, un_date, email, ipban);
		SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "√à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ √°√†√≠√•", string, "Cerrar", "");
	}
	return 1;
}
CMD:iget(playerid, params[]) {
	if(pData[playerid][pAdmin] < 3) return 1;
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /iget [id √®√£√∞√Æ√™√†]");
	if(!IsPlayerConnected(params[0]) || IsPlayerNPC(params[0])) {
		SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™√† √± √≤√†√™√®√¨ √†√©√§√® No");
		return SCM(playerid, COLOR_LIGHTGREY, "√Ñ√´√ø √Ø√Æ√´√≥√∑√•√≠√®√ø S√≠√≠√≠√ª√µ √®√£√∞√Æ√™√† √Ø√Æ √≠√®√™√≥ √®√´√® √≠√Æ√¨√•√∞√≥ √†√™√™√†√≥√≠√≤√† Usar√≤√• "CLITEBLUE"/get");
	}
	mysql_format(mysql_Handle, string, 128, "SELECT * FROM `accounts` WHERE `Name` = '%s'", GetName(params[0]));
	return mysql_tquery(mysql_Handle, string, "GetInfoNick", "is",playerid,GetName(params[0]));
}
CMD:get(playerid, params[]) {
	if (pData[playerid][pAdmin] < 3) return 1;
	new text[MAX_PLAYER_NAME];
	if(sscanf(params, "s[24]", text)) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /get [√≠√®√™ √®√´√® √≠√Æ√¨√•√∞ √†√™√™√†√≥√≠√≤√†]");
	new bool:findnick = false;
    for(new i = 0; i < strlen(text); i ++) {
        if(text[i] >= '0' && text[i] <= '9') continue;
        findnick = true;
        break;
    }
    if(findnick == true) // √≠√®√™
    {
		mysql_format(mysql_Handle, string, 128, "SELECT * FROM `accounts` WHERE `Name` = '%s'", text);
		mysql_tquery(mysql_Handle, string, "GetInfoNick", "is",playerid,text);
    }
    else
    {
        mysql_format(mysql_Handle, string, 128, "SELECT * FROM `accounts` WHERE `id` = %d", strval(text));
		mysql_tquery(mysql_Handle, string, "GetInfoID", "d",playerid);
    }
	return 1;
}
CB: GetInfoNick(playerid,name[]) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √± √≤√†√™√®√¨ √≠√®√™√Æ√¨ √®√´√® √≠√Æ√¨√•√∞√Æ√¨ √†√™√™√†√≥√≠√≤√† √≠√• √≠√†√©√§√•√≠");
	else {
		new dLevel, dID, dRub, dRegIP[32],dWarnsAll,dBansAll, dIP[32], dRegDate[32], dDonateTotal;
		cache_get_value_name_int(0, "id", dID);
		cache_get_value_name_int(0, "pLevel", dLevel);
		cache_get_value_name(0, "pIpReg", dRegIP);
		cache_get_value_name(0, "pGetonIP", dIP);
		cache_get_value_name(0, "pDataReg", dRegDate);
		cache_get_value_name_int(0, "pRubDonateTotal", dDonateTotal);
		cache_get_value_name_int(0, "pWarnsAll", dWarnsAll);
		cache_get_value_name_int(0, "pRub", dRub);
		cache_get_value_name_int(0, "pBansAll", dBansAll);
		SetPVarString(playerid, "nameget_d", name);
		new stringer[600];
		format(stringer, 600, "√ç√Æ√¨√•√∞ √†√™√™√†√≥√≠√≤√†:\t\t%d\n√ì√∞√Æ√¢√•√≠√º:\t\t\t%d\nIP √†√§√∞√•√± (√∞√•√£√®√±.):\t\t%s\nIP √†√§√∞√•√± (√Ø√Æ√±√´√•√§.):\t\t%s\nS√≠√≤√† √∞√•√£√®√±√≤√∞√†√∂√®√®:\t\t%s\n√é√°√π√†√ø √±√≥√¨√¨√† √§√Æ√≠√†√≤√†:\t\t%d √∞√≥√°.\n√í√•√™√≥√π√•√• √±√Æ√±√≤√Æ√ø√≠√®√• √±√∑¬∏√≤√†:\t%d √∞√≥√°.\n\n√Ç√†√∞√≠√Æ√¢:\t\t\t%d\n√Å√†√≠√Æ√¢:\t\t\t\t%d\n\n",
		dID, dLevel, dRegIP, dIP, dRegDate, dDonateTotal, dRub, dWarnsAll, dBansAll);
		mysql_format(mysql_Handle, string, 96, "SELECT `BALANCE`, `NAME`, `NUMBER` FROM `bank_acc` WHERE `OWNER` = '%s'", name); 
		mysql_tquery(mysql_Handle, string, "GetGetShow", "ds", playerid, stringer);
	}
	return 1;
}
CB: GetGetShow(playerid, string_get[]) {
	new rows, name_banks[32],number_banks, balance_banks;
	cache_get_row_count(rows);
	if(rows) {
		for(new i = 0; i < rows; i ++) {
			cache_get_value_name_int(i, "BALANCE", balance_banks); 
			cache_get_value_name_int(i, "NUMBER", number_banks); 
			cache_get_value_name(i, "NAME", name_banks);
	        format(string_get, 600, "%s√ë√∑¬∏√≤ ¬π%d (%s): %d$\n", string_get, number_banks, name_banks, balance_banks);
		}
	}
	else format(string_get, 600, "%s√Ñ√Æ√Ø. √±√∑√•√≤√† √Æ√≤√±√≥√≤√±√≤√¢√≥√æ√≤", string_get);

	new day, name[24], month, year, hour, minuite, second;
	getdate(year, month, day);
	gettime(hour, minuite, second);
	FixHour(hour);
	hour = shifthour;
	new data2[22];
	format(data2, 22, "%02d.%02d.%d √¢ %02d:%02d",day, month, year, hour, minuite);
	GetPVarString(playerid, "nameget_d", name, 24);
	DeletePVar(playerid, "nameget_d");

	SPD(playerid, 0, DIALOG_STYLE_MSGBOX, name, string_get, "Cerrar", "");
	format(string, 128, "[A][GET] %s[%d] √Ø√∞√Æ√±√¨√†√≤√∞√®√¢√†√•√≤ S√≠√≠√≠√ª√• √®√£√∞√Æ√™√† %s",pData[playerid][pName],playerid, name);
	AdminMessage(COLOR_GREY, string);
	if(GetPVarInt(playerid, "AdminMessages")) SCM(playerid, COLOR_GREY, string);
	mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('%s[%d] √Ø√∞√Æ√±√¨√†√≤√∞√®√¢√†√•√≤ S√≠√≠√≠√ª√• √®√£√∞√Æ√™√† %s','‚Äî','%s')", pData[playerid][pName],playerid, name, data2);
	mysql_tquery(mysql_Handle, string);
}
CB: GetInfoID(playerid) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √± √≤√†√™√®√¨ √≠√®√™√Æ√¨ √®√´√® √≠√Æ√¨√•√∞√Æ√¨ √†√™√™√†√≥√≠√≤√† √≠√• √≠√†√©√§√•√≠");
	else {
		new dLevel, dID, dRub, name[24],dRegIP[32],dWarnsAll,dBansAll, dIP[32], dRegDate[32], dDonateTotal;
		cache_get_value_name_int(0, "id", dID);
		cache_get_value_name_int(0, "pLevel", dLevel);
		cache_get_value_name(0, "pIpReg", dRegIP);
		cache_get_value_name(0, "pGetonIP", dIP);
		cache_get_value_name(0, "Name", name, 24);
		cache_get_value_name(0, "pDataReg", dRegDate);
		cache_get_value_name_int(0, "pRubDonateTotal", dDonateTotal);
		cache_get_value_name_int(0, "pWarnsAll", dWarnsAll);
		cache_get_value_name_int(0, "pRub", dRub);
		cache_get_value_name_int(0, "pBansAll", dBansAll);
		SetPVarString(playerid, "nameget_d", name);
        new stringer[600];
		format(stringer, 600, "√ç√Æ√¨√•√∞ √†√™√™√†√≥√≠√≤√†:\t\t%d\n√ì√∞√Æ√¢√•√≠√º:\t\t\t%d\nIP √†√§√∞√•√± (√∞√•√£√®√±.):\t\t%s\nIP √†√§√∞√•√± (√Ø√Æ√±√´√•√§.):\t\t%s\nS√≠√≤√† √∞√•√£√®√±√≤√∞√†√∂√®√®:\t\t%s\n√é√°√π√†√ø √±√≥√¨√¨√† √§√Æ√≠√†√≤√†:\t\t%d √∞√≥√°.\n√í√•√™√≥√π√•√• √±√Æ√±√≤√Æ√ø√≠√®√• √±√∑¬∏√≤√†:\t%d √∞√≥√°.\n\n√Ç√†√∞√≠√Æ√¢:\t\t\t%d\n√Å√†√≠√Æ√¢:\t\t\t\t%d\n\n",
		dID, dLevel, dRegIP, dIP, dRegDate, dDonateTotal, dRub, dWarnsAll, dBansAll);
		mysql_format(mysql_Handle, string, 96, "SELECT `BALANCE`, `NAME`, `NUMBER` FROM `bank_acc` WHERE `OWNER` = '%s'", name); 
		mysql_tquery(mysql_Handle, string, "GetGetShow", "ds", playerid, stringer);
	}
	return 1;
}
CMD:st(playerid, params[]) {
	if(pData[playerid][pAdmin] < 1) return 1;
	if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /st [id √®√£√∞√Æ√™√†]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	return player_stats(params[0], playerid);
}
CMD:promost(playerid) {
	if(pData[playerid][pAdmin] < 4) return 1;
	return mysql_tquery(mysql_Handle, "SELECT * FROM `promo`", "promo_stats", "i", playerid);
}
CMD:regst(playerid, params[]) {
	string[0] = EOS;
	mysql_format(mysql_Handle, string, 110, "SELECT `Name`, `pLevel`, `pGetonDate` FROM `accounts` WHERE `pDrugID` = %d", pData[playerid][pID]);
	return mysql_tquery(mysql_Handle, string, "RegST_CallBack", "i", playerid);
}
CMD:showall(playerid) {
	new member = pData[playerid][pMember];
	if(!member) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √±√Æ√±√≤√Æ√®√≤√• √¢ √Æ√∞√£√†√≠√®√ß√†√∂√®√ø√µ");
	if(pData[playerid][pLeader] == 26) 
		return SPD(playerid, 22188, DIALOG_STYLE_LIST, "{cccc00}√Ç√ª√°√•√∞√®√≤√• √Ø√Æ√§√∞√†√ß√§√•√´√•√≠√®√•", "Administraci√≥n residente\nTyr Kos-Anthosa\nKyryo Pan-Hiero\nTyr Vas-Venturasa", "Seleccione", "Cerrar");
	if(member == 26) {
		switch(pData[playerid][pRank]) {
			case 7: return SPD(playerid, 2296, DIALOG_STYLE_LIST, "{cccc00}√Ç√ª√°√•√∞√®√≤√• √Ø√Æ√§√∞√†√ß√§√•√´√•√≠√®√•", "Administraci√≥n residente\n√ì√Ø√∞. Por el favor de Ros-Anthos\n√ì√Ø√∞. por orden de Pan-Riero\n√ì√Ø√∞-√Ø√Æ√´√®√∂√®√•√© √ã√†√±-√Ç√•√≠√≤√≥√∞√†√±√†\n√î√Å√ê", "Seleccione", "Cerrar");
			case 8: return SPD(playerid, 2291, DIALOG_STYLE_LIST, "{cccc00}√Ç√ª√°√•√∞√®√≤√• √Ø√Æ√§√∞√†√ß√§√•√´√•√≠√®√•", "Administraci√≥n residente\nNoticias de oficina\nFuerza a√©rea militar\nArmada", "Seleccione", "Cerrar");
			case 6: return SPD(playerid, 2297, DIALOG_STYLE_LIST, "{cccc00}√Ç√ª√°√•√∞√®√≤√• √Ø√Æ√§√∞√†√ß√§√•√´√•√≠√®√•", "Administraci√≥n residente\nColumna de Ros-Anthos\nColinitza Pan-Riero\nColumbia Vas-Venturasa", "Seleccione", "Cerrar");
		}
	}
    mysql_format(mysql_Handle, string, 164, "SELECT `Name`, `pRank`, `id`, `pLevel` FROM `accounts` WHERE `pMember` = %d", pData[playerid][pMember]);
	return mysql_tquery(mysql_Handle, string, "Fraction_CallBack", "dd", playerid, 1);
}
CMD:inter(playerid, params[]) {
	new interior_id;
	if(pData[playerid][pAdmin] < 3) return 1;
    if(sscanf(params, "d", interior_id)) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /inter [√≠√Æ√¨√•√∞ √´√Æ√™√†√∂√®√®]");
	if(interior_id < 1 || interior_id > 178) return SCM(playerid, COLOR_LIGHTGREY, "√ç√Æ√¨√•√∞ √´√Æ√™√†√∂√®√® √Æ√≤ 1 √§√Æ 178");
	interior_id --;
	SetPlayerPos(playerid, gTeleportPoints[interior_id][e_tpX], gTeleportPoints[interior_id][e_tpY], gTeleportPoints[interior_id][e_tpZ]);
	SetPlayerFacingAngle(playerid, 0);
	SetCameraBehindPlayer(playerid);
	SetPlayerInterior(playerid, gTeleportPoints[interior_id][e_tpInterior]);
	return SetPlayerVirtualWorld(playerid, playerid + interior_id);
}
CMD:offst(playerid, params[]) {
	new Name[24];
	if(pData[playerid][pAdmin] < 2) return 1;
	if(sscanf(params, "s[24]", Name)) 
		return SCM(playerid, COLOR_LIGHTGREY, "Usar: /offst [√≠√®√™ √®√´√® √≠√Æ√¨√•√∞ √†√™√™√†√≥√≠√≤√†]");
	if(IsPlayerConnected(GetPlayerID(Name)))
		return SCMF(playerid, 0xBFBB41FF, "√à√£√∞√Æ√™ √Ø√Æ√§√™√´√æ√∑¬∏√≠ √™ √±√•√∞√¢√•√∞√≥. Usar "CBLUE"/st %d {bfbb41}√§√´√ø √Ø√∞√Æ√±√¨√Æ√≤√∞√† √•√£√Æ √±√≤√†√≤√®√±√≤√®√™√®", GetPlayerID(Name));

	new bool:findnick = false;
    for(new i = 0; i < strlen(Name); i ++) {
        if(Name[i] >= '0' && Name[i] <= '9') continue;
        findnick = true;
        break;
    }
    if(findnick == true) // √≠√®√™
    {
		mysql_format(mysql_Handle, string, 128, "SELECT * FROM `accounts` WHERE `Name` = '%s'", Name);
		mysql_tquery(mysql_Handle, string, "OffSt", "is",playerid,Name);
    }
    else
    {
		mysql_format(mysql_Handle, string, 128, "SELECT * FROM `accounts` WHERE `id` = %d", strval(Name));
		mysql_tquery(mysql_Handle, string, "OffStID", "d",playerid);
    }
	return 1;
}
CB: OffStID(playerid) {
	new rows;
	cache_get_row_count(rows);
	if(!rows)
		return SCM(playerid, COLOR_GREY, "√à√£√∞√Æ√™ √± √≤√†√™√®√¨ √≠√®√™√Æ√¨ √®√´√® √≠√Æ√¨√•√∞√Æ√¨ √†√™√™√†√≥√≠√≤√† √≠√• √≠√†√©√§√•√≠");
	else {
		new dMember,name[24], dPatr, dCashNumber, uPremium, unikAutoHave,dMasks,dAptech,uFill, 
		dLevel, dExp, dWarns, uLeader, is_foodbuy, P_prok_have, hotel,
		dPnumber, dZakonp, dWanted, dRank, sFamilyName[24], strengh, isautoHave,kiosk_hav,
		dMats, dDrugs, dSex, dJob, house, uBusiness, flat_own, flat_rent;
		cache_get_value_name(0, "pFamilyName", sFamilyName);
		cache_get_value_name(0, "Name", name);
		cache_get_value_name_int(0, "pMember", dMember);
		cache_get_value_name_int(0, "strengh", strengh);
		cache_get_value_name_int(0, "autoHave", isautoHave);
		cache_get_value_name_int(0, "pLevel", dLevel);
		cache_get_value_name_int(0, "pFlat", flat_own);
		cache_get_value_name_int(0, "unikauto_Have", unikAutoHave);
		cache_get_value_name_int(0, "p_rent_flat", flat_rent);
		cache_get_value_name_int(0, "pPatr", dPatr);
		cache_get_value_name_int(0, "pHotel", hotel);
		cache_get_value_name_int(0, "kiosk_have", kiosk_hav);
		cache_get_value_name_int(0, "pPsbiskey", uFill);
		cache_get_value_name_int(0, "p_premium", uPremium);
		cache_get_value_name_int(0, "pExp", dExp);
		cache_get_value_name_int(0, "prok_have", P_prok_have);
		cache_get_value_name_int(0, "food_have", is_foodbuy);
		cache_get_value_name_int(0, "pCashNumber", dCashNumber);
		cache_get_value_name_int(0, "pWarns", dWarns);
		cache_get_value_name_int(0, "pAptech", dAptech);
		cache_get_value_name_int(0, "pLeader", uLeader);
		cache_get_value_name_int(0, "pMasks", dMasks);
		cache_get_value_name_int(0, "pPnumber", dPnumber);
		cache_get_value_name_int(0, "pZakonp", dZakonp);
		cache_get_value_name_int(0, "pWanted", dWanted);
		cache_get_value_name_int(0, "pRank", dRank);
		cache_get_value_name_int(0, "pMats", dMats);
		cache_get_value_name_int(0, "pDrugs", dDrugs);
		cache_get_value_name_int(0, "pSex", dSex);
		cache_get_value_name_int(0, "pJob", dJob);
		cache_get_value_name_int(0, "pPbiskey", uBusiness);
		cache_get_value_name_int(0, "pPhousekey", house);
		
		if(IsPlayerConnected(GetPlayerID(name))) return SCMF(playerid, 0xBFBB41FF, "√à√£√∞√Æ√™ √Ø√Æ√§√™√´√æ√∑¬∏√≠ √™ √±√•√∞√¢√•√∞√≥. Usar "CBLUE"/st %d {bfbb41}√§√´√ø √Ø√∞√Æ√±√¨√Æ√≤√∞√† √•√£√Æ √±√≤√†√≤√®√±√≤√®√™√®", GetPlayerID(name));
		new string_last[128];
		string[0] = EOS;
		format(string_last,70,""CWHITE"√à√¨√ø:\t\t\t\t"CBLUE"%s\n",name);
		strcat(string,string_last);
		format(string_last,70,""CWHITE"√ì√∞√Æ√¢√•√≠√º:\t\t\t%i\n",dLevel);
		strcat(string,string_last);
		format(string_last,70,""CWHITE"√é√∑√™√® √Æ√Ø√ª√≤√†:\t\t\t%d √®√ß %d\n",dExp,(dLevel + 1) * 4);
		strcat(string,string_last);
		if(dPnumber != -1) {
			format(string_last,70,""CWHITE"√ç√Æ√¨√•√∞ √≤√•√´√•√¥√Æ√≠√†:\t\t%i\n",dPnumber);
			strcat(string,string_last);
		}
		else strcat(string,""CWHITE"√ç√Æ√¨√•√∞ √≤√•√´√•√¥√Æ√≠√†:\t\tNo\n");
		format(string_last,70,""CWHITE"√ç√† √±√∑√•√≤√≥ √≤√•√´√•√¥√Æ√≠√†:\t\t%i$\n",dCashNumber);
		strcat(string,string_last);
		format(string_last,70,""CWHITE"√á√†√™√Æ√≠√Æ√Ø√Æ√±√´√≥√∏√≠√Æ√±√≤√º:\t\t%i √•√§\n",dZakonp);
		strcat(string,string_last);
		format(string_last,70,""CWHITE"√ë√®√´√†:\t\t\t\t%i √•√§\n",strengh);
		strcat(string,string_last);
		if(dWarns != 0) {
			format(string_last,70,""CWHITE"√è√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√ø:\t\t%i\n",dWarns);
			strcat(string,string_last);
		}
		format(string_last,70,""CWHITE"√ì√∞√Æ√¢√•√≠√º √∞√Æ√ß√ª√±√™√†:\t\t%i\n",dWanted);
		strcat(string,string_last);
		format(string_last,70,""CWHITE"√è√†√≤√∞√Æ√≠√ª:\t\t\t%i √∏√≤\n",dPatr);
		strcat(string,string_last);
		format(string_last,70,""CWHITE"√ç√†√∞√™√Æ√≤√®√™√®:\t\t\t%i √£√∞\n",dDrugs);
		strcat(string,string_last);
		format(string_last,70,""CWHITE"√å√•√≤√†√´√´:\t\t\t%i √™√£\n",dMats);
		strcat(string,string_last);
		format(string_last,70,""CWHITE"√Ä√Ø√≤√•√∑√™√®:\t\t\t%i √∏√≤\n",dAptech);
		strcat(string,string_last);
		format(string_last,70,""CWHITE"√å√†√±√™√®:\t\t\t\t%i √∏√≤\n",dMasks);
		strcat(string,string_last);
		format(string_last,70,""CWHITE"√è√Æ√´:\t\t\t\t%s\n",(dSex == 1 ? ("√å√≥√¶√±√™√Æ√©") : ("√Ü√•√≠√±√™√®√©")));
		strcat(string,string_last);
		if(dSex == 2) {
			if(!strcmp(sFamilyName,"None", true)) format(string_last,70,""CWHITE"√á√†√¨√≥√¶√•√¨ √ß√†:\t\t\tNo\n\n");
			else format(string_last,70,""CWHITE"√á√†√¨√≥√¶√•√¨ √ß√†:\t\t\t%s\n\n",sFamilyName);
		}
		else {
			if(!strcmp(sFamilyName,"None", true)) format(string_last,70,""CWHITE"√Ü√•√≠√†√≤ √≠√†:\t\t\tNo\n\n");
			else format(string_last,70,""CWHITE"√Ü√•√≠√†√≤ √≠√†:\t\t\t%s\n\n",sFamilyName);
		}
		strcat(string,string_last);
		if(dMember != 0) {
			format(string_last,70,""CWHITE"√é√∞√£√†√≠√®√ß√†√∂√®√ø / √Ø√Æ√§√∞.:\t\t%s\n",GetMember[dMember-1]);
			strcat(string,string_last);
			format(string_last,70,""CWHITE"√Ñ√Æ√´√¶√≠√Æ√±√≤√º / √∞√†√≠√£:\t\t%s (%d √∞√†√≠√£)\n",new_rank_name[dMember-1][dRank-1], dRank);
			strcat(string,string_last);
		}
		else {
			strcat(string,""CWHITE"√é√∞√£√†√≠√®√ß√†√∂√®√ø / √Ø√Æ√§√∞.:\t\tNo\n");
			strcat(string,""CWHITE"√Ñ√Æ√´√¶√≠√Æ√±√≤√º / √∞√†√≠√£:\t\t‚Äî\n");
		}
		format(string_last,70,""CWHITE"√ê√†√°√Æ√≤√†:\t\t\t%s\n\n",GetJobName(dJob));
		strcat(string,string_last);
		if(hotel != -1) format(string_last,70,""CWHITE"√è√∞√Æ√¶√®√¢√†√≠√®√•:\t\t\t√ç√Æ√¨√•√∞ %d √≠√† %d √Ω√≤√†√¶√•\n", get_orig_num_hotel(hotel), hotel_info[hotel][hotel_floor]), strcat(string,string_last);
		else if(flat_own != -1) format(string_last,70,""CWHITE"√è√∞√Æ√¶√®√¢√†√≠√®√•:\t\t\t√ä√¢√†√∞√≤√®√∞√† ¬π%d\n", flat_own), strcat(string,string_last);
		else if(flat_rent != -1) format(string_last,70,""CWHITE"√è√∞√Æ√¶√®√¢√†√≠√®√•:\t\t\t√ä√¢√†√∞√≤√®√∞√† ¬π%d (√†√∞√•√≠S√≠)\n", flat_rent), strcat(string,string_last);
		else if(house != -1) format(string_last,70,""CWHITE"√è√∞√Æ√¶√®√¢√†√≠√®√•:\t\t\t√Ñ√Æ√¨ ¬π%d. %s √™√´√†√±√±\n", house, classhome_names[HouseInfo[house][hKlass]]), strcat(string,string_last);
		else strcat(string, ""CWHITE"√è√∞√Æ√¶√®√¢√†√≠√®√•:\t\t\t√Å√•√ß√§√Æ√¨√≠√ª√©\n");
		if(uBusiness != -1) {
			format(string_last,70,""CWHITE"√Å√®√ß√≠√•√±:\t\t\t%s\n",BizInfo[uBusiness][bName]);
			strcat(string,string_last);
		}
		else if(uFill != -1) {
			format(string_last,70,""CWHITE"√Ä√á√ë:\t\t\t\t%s\n", Filling[uFill][ffName]);
			strcat(string,string_last);
		}
		else if(isautoHave != 0) strcat(string,""CWHITE"√Å√®√ß√≠√•√±:\t\t\t√Ä√¢√≤√Æ√¨√Æ√°√®√´√º√≠√†√ø √¥√†√°√∞√®√™√†\n");
		else if(unikAutoHave != 0) strcat(string,""CWHITE"√Å√®√ß√≠√•√±:\t\t\t√Ä√¢√≤√Æ√±√†√´√Æ√≠ √Ω√™√±√™√´√æ√ß√®√¢√≠√ª√µ √†√¢√≤√Æ\n");
		else if(is_foodbuy != 0) strcat(string, ""CWHITE"√Å√®√ß√≠√•√±:\t\t\t√ã√†√∞√•√™ √± √•√§√Æ√©\n");
		else if(kiosk_hav != 0) strcat(string, ""CWHITE"√Å√®√ß√≠√•√±:\t\t\t√ä√®√Æ√±√™\n");
		else if(P_prok_have != 0) strcat(string, ""CWHITE"√Å√®√ß√≠√•√±:\t\t\t√è√≥√≠√™√≤ √Ø√∞√Æ√™√†√≤√†\n");
		else strcat(string,""CWHITE"√Å√®√ß√≠√•√± / √Ä√á√ë:\t\t\tNo\n");
		if(uPremium) strcat(string,""CWHITE"√à√£√∞√Æ√¢√Æ√© √±√≤√†√≤√≥√±:\t\t{0499da}√è√∞√•√¨√®√≥√¨");
		else if(uLeader) strcat(string,""CWHITE"√à√£√∞√Æ√¢√Æ√© √±√≤√†√≤√≥√±:\t\t√ã√®√§√•√∞");
		else {
			new statuspl[30];
			switch(dLevel) {
			    case 1..5: statuspl = "√ç√Æ√¢√®√∑√Æ√™";
			    case 6..9: statuspl = "√ê√†√ß√¢√®√¢√†√æ√π√®√©√±√ø";
			    case 10..14: statuspl = "√é√±√¢√Æ√®√¢√∏√®√©√±√ø";
			    case 15..19: statuspl = "√é√Ø√ª√≤√≠√ª√© √®√£√∞√Æ√™";
			    case 20..29: statuspl = "√Ä√™√≤√®√¢√≠√ª√© √®√£√∞√Æ√™";
			    default: statuspl = "√ã√•√£√•√≠S√≠√∞√≠√ª√©";
			}
			format(string_last,70,""CWHITE"√à√£√∞√Æ√¢√Æ√© √±√≤√†√≤√≥√±:\t\t%s\n",statuspl);
			strcat(string,string_last);
		}

		SPD(playerid, 0, DIALOG_STYLE_MSGBOX,""CPALEGREEN"√é√¥√¥√´√†√©√≠ √±√≤√†√≤√®√±√≤√®√™√† √®√£√∞√Æ√™√†",string, "Cerrar", "");
	}
	return 1;
}
CB: OffSt(playerid,name[]) {
	new rows;
	cache_get_row_count(rows);
	if(!rows)
		return SCM(playerid, COLOR_GREY, "√à√£√∞√Æ√™ √± √≤√†√™√®√¨ √≠√®√™√Æ√¨ √®√´√® √≠√Æ√¨√•√∞√Æ√¨ √†√™√™√†√≥√≠√≤√† √≠√• √≠√†√©√§√•√≠");
	else {
		new dMember, dCashNumber, is_foodbuy, hotel, P_prok_have,kiosk_hav,
		dLevel, dExp,dMasks,dAptech, dPatr, uPremium, unikAutoHave,uLeader, dWarns, uFill,
		dPnumber, dZakonp, dWanted, dRank, sFamilyName[24], strengh, isautoHave,
		dMats, dDrugs, dSex, dJob, house, uBusiness, flat_own, flat_rent;
		cache_get_value_name(0, "pFamilyName", sFamilyName);
		cache_get_value_name_int(0, "pMember", dMember);
		cache_get_value_name_int(0, "pLeader", uLeader);
		cache_get_value_name_int(0, "pHotel", hotel);
		cache_get_value_name_int(0, "prok_have", P_prok_have);
		cache_get_value_name_int(0, "pLevel", dLevel);
		cache_get_value_name_int(0, "pFlat", flat_own);
		cache_get_value_name_int(0, "p_rent_flat", flat_rent);
		cache_get_value_name_int(0, "p_premium", uPremium);
		cache_get_value_name_int(0, "pExp", dExp);
		cache_get_value_name_int(0, "kiosk_have", kiosk_hav);
		cache_get_value_name_int(0, "autoHave", isautoHave);
		cache_get_value_name_int(0, "food_have", is_foodbuy);
		cache_get_value_name_int(0, "unikauto_Have", unikAutoHave);
		cache_get_value_name_int(0, "pCashNumber", dCashNumber);
		cache_get_value_name_int(0, "pWarns", dWarns);
		cache_get_value_name_int(0, "pPatr", dPatr);
		cache_get_value_name_int(0, "pPnumber", dPnumber);
		cache_get_value_name_int(0, "pZakonp", dZakonp);
		cache_get_value_name_int(0, "pWanted", dWanted);
		cache_get_value_name_int(0, "pPsbiskey", uFill);
		cache_get_value_name_int(0, "strengh", strengh);
		cache_get_value_name_int(0, "pAptech", dAptech);
		cache_get_value_name_int(0, "pMasks", dMasks);
		cache_get_value_name_int(0, "pRank", dRank);
		cache_get_value_name_int(0, "pMats", dMats);
		cache_get_value_name_int(0, "pDrugs", dDrugs);
		cache_get_value_name_int(0, "pSex", dSex);
		cache_get_value_name_int(0, "pJob", dJob);
		cache_get_value_name_int(0, "pPbiskey", uBusiness);
		cache_get_value_name_int(0, "pPhousekey", house);

		new string_last[128];
		string[0] = EOS;
		format(string_last,70,""CWHITE"√à√¨√ø:\t\t\t\t"CBLUE"%s\n",name);
		strcat(string,string_last);
		format(string_last,70,""CWHITE"√ì√∞√Æ√¢√•√≠√º:\t\t\t%i\n",dLevel);
		strcat(string,string_last);
		format(string_last,70,""CWHITE"√é√∑√™√® √Æ√Ø√ª√≤√†:\t\t\t%d √®√ß %d\n",dExp,(dLevel + 1) * 4);
		strcat(string,string_last);
		if(dPnumber != -1) {
			format(string_last,70,""CWHITE"√ç√Æ√¨√•√∞ √≤√•√´√•√¥√Æ√≠√†:\t\t%i\n",dPnumber);
			strcat(string,string_last);
		}
		else strcat(string,""CWHITE"√ç√Æ√¨√•√∞ √≤√•√´√•√¥√Æ√≠√†:\t\tNo\n");
		format(string_last,70,""CWHITE"√ç√† √±√∑√•√≤√≥ √≤√•√´√•√¥√Æ√≠√†:\t\t%i$\n",dCashNumber);
		strcat(string,string_last);
		format(string_last,70,""CWHITE"√á√†√™√Æ√≠√Æ√Ø√Æ√±√´√≥√∏√≠√Æ√±√≤√º:\t\t%i √•√§\n",dZakonp);
		strcat(string,string_last);
		format(string_last,70,""CWHITE"√ë√®√´√†:\t\t\t\t%i √•√§\n",strengh);
		strcat(string,string_last);
		if(dWarns != 0) {
			format(string_last,70,""CWHITE"√è√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√ø:\t\t%i\n",dWarns);
			strcat(string,string_last);
		}
		format(string_last,70,""CWHITE"√ì√∞√Æ√¢√•√≠√º √∞√Æ√ß√ª√±√™√†:\t\t%i\n",dWanted);
		strcat(string,string_last);
		format(string_last,70,""CWHITE"√è√†√≤√∞√Æ√≠√ª:\t\t\t%i √∏√≤\n",dPatr);
		strcat(string,string_last);
		format(string_last,70,""CWHITE"√ç√†√∞√™√Æ√≤√®√™√®:\t\t\t%i √£√∞\n",dDrugs);
		strcat(string,string_last);
		format(string_last,70,""CWHITE"√å√•√≤√†√´√´:\t\t\t%i √™√£\n",dMats);
		strcat(string,string_last);
		format(string_last,70,""CWHITE"√Ä√Ø√≤√•√∑√™√®:\t\t\t%i √∏√≤\n",dAptech);
		strcat(string,string_last);
		format(string_last,70,""CWHITE"√å√†√±√™√®:\t\t\t\t%i √∏√≤\n",dMasks);
		strcat(string,string_last);
		format(string_last,70,""CWHITE"√è√Æ√´:\t\t\t\t%s\n",(dSex == 1 ? ("√å√≥√¶√±√™√Æ√©") : ("√Ü√•√≠√±√™√®√©")));
		strcat(string,string_last);
		if(dSex == 2) {
			if(!strcmp(sFamilyName,"None", true)) format(string_last,70,""CWHITE"√á√†√¨√≥√¶√•√¨ √ß√†:\t\t\tNo\n\n");
			else format(string_last,70,""CWHITE"√á√†√¨√≥√¶√•√¨ √ß√†:\t\t\t%s\n\n",sFamilyName);
		}
		else {
			if(!strcmp(sFamilyName,"None", true)) format(string_last,70,""CWHITE"√Ü√•√≠√†√≤ √≠√†:\t\t\tNo\n\n");
			else format(string_last,70,""CWHITE"√Ü√•√≠√†√≤ √≠√†:\t\t\t%s\n\n",sFamilyName);
		}
		strcat(string,string_last);
		if(dMember != 0) {
			format(string_last,70,""CWHITE"√é√∞√£√†√≠√®√ß√†√∂√®√ø / √Ø√Æ√§√∞.:\t\t%s\n",GetMember[dMember-1]);
			strcat(string,string_last);
			format(string_last,70,""CWHITE"√Ñ√Æ√´√¶√≠√Æ√±√≤√º / √∞√†√≠√£:\t\t%s (%d √∞√†√≠√£)\n",new_rank_name[dMember-1][dRank-1], dRank);
			strcat(string,string_last);
		}
		else {
			strcat(string,""CWHITE"√é√∞√£√†√≠√®√ß√†√∂√®√ø / √Ø√Æ√§√∞.:\t\tNo\n");
			strcat(string,""CWHITE"√Ñ√Æ√´√¶√≠√Æ√±√≤√º / √∞√†√≠√£:\t\t‚Äî\n");
		}
		format(string_last,70,""CWHITE"√ê√†√°√Æ√≤√†:\t\t\t%s\n\n",GetJobName(dJob));
		strcat(string,string_last);
		if(hotel != -1) format(string_last,70,""CWHITE"√è√∞√Æ√¶√®√¢√†√≠√®√•:\t\t\t√ç√Æ√¨√•√∞ %d √≠√† %d √Ω√≤√†√¶√•\n", get_orig_num_hotel(hotel), hotel_info[hotel][hotel_floor]), strcat(string,string_last);
		else if(flat_own != -1) format(string_last,70,""CWHITE"√è√∞√Æ√¶√®√¢√†√≠√®√•:\t\t\t√ä√¢√†√∞√≤√®√∞√† ¬π%d\n", flat_own), strcat(string,string_last);
		else if(flat_rent != -1) format(string_last,70,""CWHITE"√è√∞√Æ√¶√®√¢√†√≠√®√•:\t\t\t√ä√¢√†√∞√≤√®√∞√† ¬π%d (√†√∞√•√≠S√≠)\n", flat_rent), strcat(string,string_last);
		else if(house != -1) format(string_last,70,""CWHITE"√è√∞√Æ√¶√®√¢√†√≠√®√•:\t\t\t√Ñ√Æ√¨ ¬π%d. %s √™√´√†√±√±\n", house, classhome_names[HouseInfo[house][hKlass]]), strcat(string,string_last);
		else strcat(string, ""CWHITE"√è√∞√Æ√¶√®√¢√†√≠√®√•:\t\t\t√Å√•√ß√§√Æ√¨√≠√ª√©\n");
		if(uBusiness != -1) {
			format(string_last,70,""CWHITE"√Å√®√ß√≠√•√±:\t\t\t%s\n",BizInfo[uBusiness][bName]);
			strcat(string,string_last);
		}
		else if(uFill != -1) {
			format(string_last,70,""CWHITE"√Ä√á√ë:\t\t\t\t%s\n", Filling[uFill][ffName]);
			strcat(string,string_last);
		}
		else if(isautoHave != 0) strcat(string,""CWHITE"√Å√®√ß√≠√•√±:\t\t\t√Ä√¢√≤√Æ√¨√Æ√°√®√´√º√≠√†√ø √¥√†√°√∞√®√™√†\n");
		else if(is_foodbuy != 0) strcat(string, ""CWHITE"√Å√®√ß√≠√•√±:\t\t\t√ã√†√∞√•√™ √± √•√§√Æ√©\n");
		else if(unikAutoHave != 0) strcat(string,""CWHITE"√Å√®√ß√≠√•√±:\t\t\t√Ä√¢√≤√Æ√±√†√´√Æ√≠ √Ω√™√±√™√´√æ√ß√®√¢√≠√ª√µ √†√¢√≤√Æ\n");
		else if(kiosk_hav != 0) strcat(string, ""CWHITE"√Å√®√ß√≠√•√±:\t\t\t√ä√®√Æ√±√™\n");
		else if(P_prok_have != 0) strcat(string, ""CWHITE"√Å√®√ß√≠√•√±:\t\t\t√è√≥√≠√™√≤ √Ø√∞√Æ√™√†√≤√†\n");
		else strcat(string,""CWHITE"√Å√®√ß√≠√•√±:\t\t\tNo\n");
		if(uPremium) strcat(string,""CWHITE"√à√£√∞√Æ√¢√Æ√© √±√≤√†√≤√≥√±:\t\t{0499da}√è√∞√•√¨√®√≥√¨");
		else if(uLeader) strcat(string,""CWHITE"√à√£√∞√Æ√¢√Æ√© √±√≤√†√≤√≥√±:\t\t√ã√®√§√•√∞");
		else {
			new statuspl[30];
			switch(dLevel) {
			    case 1..5: statuspl = "√ç√Æ√¢√®√∑√Æ√™";
			    case 6..9: statuspl = "√ê√†√ß√¢√®√¢√†√æ√π√®√©√±√ø";
			    case 10..14: statuspl = "√é√±√¢√Æ√®√¢√∏√®√©√±√ø";
			    case 15..19: statuspl = "√é√Ø√ª√≤√≠√ª√© √®√£√∞√Æ√™";
			    case 20..29: statuspl = "√Ä√™√≤√®√¢√≠√ª√© √®√£√∞√Æ√™";
			    default: statuspl = "√ã√•√£√•√≠S√≠√∞√≠√ª√©";
			}
			format(string_last,70,""CWHITE"√à√£√∞√Æ√¢√Æ√© √±√≤√†√≤√≥√±:\t\t%s\n",statuspl);
			strcat(string,string_last);
		}

		SPD(playerid, 0, DIALOG_STYLE_MSGBOX,""CPALEGREEN"√é√¥√¥√´√†√©√≠ √±√≤√†√≤√®√±√≤√®√™√† √®√£√∞√Æ√™√†",string, "Cerrar", "");
	}
	return 1;
}
CMD:style(playerid) {
	new text_1[20] = "", text_2[20] = "", text_3[20] = "";
	if(!pData[playerid][p_style][0]) text_1 = "{ff4530}(√≠√• √™√≥√Ø√´√•√≠)";
	if(!pData[playerid][p_style][1]) text_2 = "{ff4530}(√≠√• √™√≥√Ø√´√•√≠)";
	if(!pData[playerid][p_style][2]) text_3 = "{ff4530}(√≠√• √™√≥√Ø√´√•√≠)";
	format(string, 150, ""CWHITE"√é√°√ª√∑√≠√ª√©\n√Ä√¨√•√∞√®√™√†√≠√±√™√®√© %s\n"CWHITE"√ü√Ø√Æ√≠√±√™√®√© %s\n"CWHITE"√ê√≥√±√±√™√®√© %s", text_1, text_2, text_3);
	return SPD(playerid, 412, DIALOG_STYLE_LIST, ""CPALEGREEN"√ë√¨√•√≠√† √±√≤√®√´√ø √°√Æ√ø", string, "Seleccione", "Cerrar");
}
CMD:newleader(playerid, params[]) {
	new fractid = pData[playerid][pLeader], unitid;

	if(pData[playerid][pMember] == 26) {
		if(pData[playerid][pRank] == 7) fractid = 22;
		if(pData[playerid][pRank] == 8) fractid = 24;
		if(pData[playerid][pRank] == 6) fractid = 23;
	}

	if(fractid == 22 || fractid == 23 || fractid == 24 || fractid == 26) {
	    if(sscanf(params, "dd", params[0], params[1])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /newleader [id √®√£√∞√Æ√™√†] [id √Ø√Æ√§√∞√†√ß√§√•√´√•√≠√®√ø]");
	    if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	    if(!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
	    if(GetPVarInt(playerid, "cancel_act")) return SCM(playerid, COLOR_GREY, "√Ç√ª √≥√¶√• √±√§√•√´√†√´√® √™√†√™√Æ√•-√≤√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √Ç√¢√•√§√®√≤√• "CBLUE"/revoke"CGREY", √∑√≤√Æ√°√ª √Æ√≤√Æ√ß√¢√†√≤√º √•√£√Æ");
	    if(GetPVarInt(params[0], "offer") != 9999) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™√≥ √≥√¶√• √±√§√•√´√†√´√® √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √é√≠ √§√Æ√´√¶√•√≠ {00cc00}√Ø√∞√®√≠√ø√≤√º "CLIGHTGREY"√®√´√® "CERROR"√Æ√≤√¨√•√≠√®√≤√º "CLIGHTGREY"√•√£√Æ");
	    if((fractid == 23 || fractid == 24 || fractid == 26) && (params[1] < 1 || params[1] > 3)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§¬∏√≠ √≠√•√¢√•√∞√≠√ª√© id √Ø√Æ√§√∞√†√ß√§√•√´√•√≠√®√ø");
	    else if(params[1] < 1 || params[1] > 4) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§¬∏√≠ √≠√•√¢√•√∞√≠√ª√© id √Ø√Æ√§√∞√†√ß√§√•√´√•√≠√®√ø");
	    if(params[0] == playerid) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Ω√≤√≥ √¥√≥√≠√™√∂√®√æ √≠√† √±√•√°√•");
	    if(pData[params[0]][pLeader] > 0) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √≠√†√ß√≠√†√∑√®√≤√º √´√®√§√•√∞√Æ√¨ √Ω√≤√Æ√£√Æ √®√£√∞√Æ√™√†");
	    unitid = GetNameUnits(fractid, params[1]);

	    SCMF(playerid, COLOR_BLUE, "√Ç√ª √Ø√∞√•√§√´√Æ√¶√®√´√® %s √±√≤√†√≤√º √´√®√§√•√∞√Æ√¨ √Ø√Æ√§√∞√†√ß√§√•√´√•√≠√®√ø %s", GetName(params[0]), FractionInfo[unitid][fName]);
	    SCMF(params[0], COLOR_BLUE, "%s %s √Ø√∞√•√§√´√Æ√¶√®√´ √¢√†√¨ √±√≤√†√≤√º √´√®√§√•√∞√Æ√¨ √Ø√Æ√§√∞√†√ß√§√•√´√•√≠√®√ø %s", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], pData[playerid][pName], FractionInfo[unitid][fName]);
		
		SetPVarInt(playerid, "cancel_act", 1);
		SetPVarInt(playerid, "cancel_act_id", params[0]);

		SetPVarInt(params[0], "offer", playerid), SetPVarInt(params[0], "newlead_offer", 1), SetPVarInt(params[0], "unit_newlead_id", unitid);
		return SCM(params[0], -1, "√ç√†√¶√¨√®√≤√• "CMAIN"Y "CWHITE"√∑√≤√Æ√°√ª √±√Æ√£√´√†√±√®√≤√º√±√ø √®√´√® "CERROR"N "CWHITE"√§√´√ø √Æ√≤√™√†√ß√†");
	}
	else return SCM(playerid, COLOR_GREY, "√Ç√†√¨ √≠√•√§√Æ√±√≤√≥√Ø√≠√† √Ω√≤√† √™√Æ√¨√†√≠S√≠");
}
CMD:demote(playerid, params[]) {
	new fractid = pData[playerid][pLeader];

	if(pData[playerid][pMember] == 26) {
		if(pData[playerid][pRank] == 7) fractid = 22;
		if(pData[playerid][pRank] == 8) fractid = 24;
		if(pData[playerid][pRank] == 6) fractid = 23;
	}

	if(fractid == 22 || fractid == 23 || fractid == 24 || fractid == 26) {
	    if(sscanf(params, "ds[64]", params[0], params[1])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /demote [id √®√£√∞√Æ√™√†] [√Ø√∞√®√∑√®√≠√†]");
	    if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	    if(!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
	    if(params[0] == playerid) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √≥√¢√Æ√´√®√≤√º √±√•√°√ø");

	    new org = pData[params[0]][pMember];

	    if(fractid == 22 && org != 22 && org != 1 && org != 10 && org != 21) 
	    	return SCM(playerid,COLOR_LIGHTGREY,"√à√£√∞√Æ√™ √≠√• √±√Æ√±√≤√Æ√®√≤ √¢ √Ç√†√∏√•√© √Æ√∞√£√†√≠√®√ß√†√∂√®√®");
	    if(fractid == 23 && org != 23 && org != 4 && org != 28 && org != 29) 
	    	return SCM(playerid,COLOR_LIGHTGREY,"√à√£√∞√Æ√™ √≠√• √±√Æ√±√≤√Æ√®√≤ √¢ √Ç√†√∏√•√© √Æ√∞√£√†√≠√®√ß√†√∂√®√®");
	    if(fractid == 24 && org != 24 && org != 19 && org != 20 && org != 27) 
	    	return SCM(playerid,COLOR_LIGHTGREY,"√à√£√∞√Æ√™ √≠√• √±√Æ√±√≤√Æ√®√≤ √¢ √Ç√†√∏√•√© √Æ√∞√£√†√≠√®√ß√†√∂√®√®");
	    if(fractid == 26 && org != 26 && org != 7 && org != 8 && org != 9) 
	    	return SCM(playerid,COLOR_LIGHTGREY,"√à√£√∞√Æ√™ √≠√• √±√Æ√±√≤√Æ√®√≤ √¢ √Ç√†√∏√•√© √Æ√∞√£√†√≠√®√ß√†√∂√®√®");

	    check_badgevalid(playerid);
	    SetPlayerColor(params[0], FractionInfo[pData[params[0]][pMember]][fColor]);
		SetPlayerSkin(params[0], pData[params[0]][pChar]);
		pData[params[0]][pMember] = 0;
		pData[params[0]][pRank] = 0;
		pData[params[0]][pLeader] = 0;
		pData[params[0]][pJob] = 0;
		pData[params[0]][pModel] = pData[params[0]][pChar];
		string[0] = EOS;
		mysql_format(mysql_Handle, string, 164, "UPDATE `accounts` SET `pMember` = '0', `pRank` = '0', `pModel` = %d, `pLeader` = '0', `pJob` = '0' WHERE `id` = %d", pData[params[0]][pChar], pData[params[0]][pID]);
		mysql_tquery(mysql_Handle, string);
	    format(string, 144, "%s[%d] √≥√¢√Æ√´√®√´ √Ç√†√± √®√ß √Æ√∞√£√†√≠√®√ß√†√∂√®√®. √è√∞√®√∑√®√≠√†: %s", pData[playerid][pName],playerid,params[1]);
		SCM(params[0], COLOR_ERROR, string);
		format(string, 144, "√Ç√ª √≥√¢√Æ√´√®√´√® %s[%d] √®√ß √Æ√∞√£√†√≠√®√ß√†√∂√®√®. √è√∞√®√∑√®√≠√†: %s", GetName(params[0]),params[0],params[1]);
		return SCM(playerid, COLOR_BLUE, string);
	}
	else return SCM(playerid, COLOR_LIGHTGREY, "√ä√Æ√¨√†√≠S√≠ √§√Æ√±√≤√≥√Ø√≠√† √≤√Æ√´√º√™√Æ √¨√®√≠√®√±√≤√∞√†√¨ √® √Ø√∞√•√ß√®√§√•√≠√≤√≥");
}
CMD:nmenu(playerid) {
	if(pData[playerid][pMember] != 16) return SCM(playerid, COLOR_GREY, "√î√≥√≠√™√∂√®√ø √§√Æ√±√≤√≥√Ø√≠√† √≤√Æ√´√º√™√Æ √±√Æ√≤√∞√≥√§√≠√®√™√†√¨ √ë√å√à");
	return SPD(playerid,2224, DIALOG_STYLE_LIST, ""CLITEBLUE"√å√•√≠√æ √ë√å√à", "[1] √ç√†√∑√†√≤√º √∞√†√§√®√Æ√Ω√¥√®√∞\n[2] √á√†√™√Æ√≠√∑√®√≤√º √∞√†√§√®√Æ√Ω√¥√®√∞\n[3] "CMAIN"√ç√†√∑√†√≤√º "CWHITE"√®√´√® "CERROR"√ß√†√¢√•√∞√∏√®√≤√º "CWHITE"√Ø√∞√®¬∏√¨ √ß√¢√Æ√≠√™√Æ√¢", "Seleccione", "Cerrar");
}
CMD:su(playerid, params[]) {
	if(!IsACop(playerid)) return SCM(playerid, COLOR_GREY, "√Ç√ª √§√Æ√´√¶√≠√ª √°√ª√≤√º √±√Æ√≤√∞√≥√§√≠√®√™√Æ√¨ √å√Ç√Ñ");
	if(pData[playerid][pRank] < 2) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ªS√≠√¢√†√≤√º √∞√Æ√ß√ª√±√™ √¨√Æ√£√≥√≤ √±√Æ√≤√∞√≥√§√≠√®√™√® 2-√£√Æ √® √¢√ª√∏√• √∞√†√≠√£√†");
	if(PlayerTied{playerid}) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √¢√ªS√≠√¢√†√≤√º √∞√Æ√ß√ª√±√™ √¢ S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤");
	if(sscanf(params, "dds[64]", params[0], params[1], params[2])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /su [id √®√£√∞√Æ√™√†] [√≥√∞√Æ√¢√•√≠√º √∞√Æ√ß√ª√±√™√†] [√Ø√∞√®√∑√®√≠√†]");
	if(params[1] < 1 || params[1] > 6) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§√•√≠ √≠√•√¢√•√∞√≠√ª√© √≥√∞√Æ√¢√•√≠√º √∞√Æ√ß√ª√±√™√†");
	if(strlen(params[2]) > 64) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§√•√≠√† √±√´√®√∏√™√Æ√¨ √§√´√®√≠√≠√†√ø √Ø√∞√®√∑√®√≠√†");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
    if(params[0] == playerid) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √¢√ªS√≠√¢√†√≤√º √∞√Æ√ß√ª√±√™ √±√•√°√•");
	if(pTemp[params[0]][pAFK] > AFK_SECOND) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√Æ√≤ √®√£√∞√Æ√™ √≠√†√µ√Æ√§√®√≤√±√ø √¢ AFK. √Ç√ªS√≠√∑√† √∞√Æ√ß√ª√±√™√† √≠√•√¢√Æ√ß√¨√Æ√¶√≠√†");
	if(GetPVarInt(params[0], "MaskPlayer")) return SCM(playerid, COLOR_GREY, "√ç√† √®√£√∞√Æ√™√• √≠√†√§√•√≤√† √¨√†√±√™√†. √ì√±√≤√†√≠√Æ√¢√®√≤√º √•√£√Æ √´√®√∑√≠√Æ√±√≤√º √≠√•√¢√Æ√ß√¨√Æ√¶√≠√Æ");
	if(pData[params[0]][pJailTime] > 0 || pData[params[0]][pPrisonTime] > 0) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √ß√†√™√´√æ√∑¬∏√≠ √Ø√Æ√§ √±√≤√∞√†√¶√≥. √Ç√ªS√≠√∑√† √∞√Æ√ß√ª√±√™√† √≠√•√¢√Æ√ß√¨√Æ√¶√≠√†");
	if(pData[params[0]][pWanted] >= 6) return SCM(playerid, COLOR_LIGHTGREY, "√ì √®√£√∞√Æ√™√† √¨√†√™√±√®√¨√†√´√º√≠√ª√© √≥√∞√Æ√¢√•√≠√º √∞√Æ√ß√ª√±√™√†");
	if(params[1] > 6 - pData[params[0]][pWanted]) return SCMF(playerid, COLOR_LIGHTGREY, "√ë√•√©√∑√†√± √≥ √®√£√∞√Æ√™√† %d √≥√∞√Æ√¢√•√≠√º √∞√Æ√ß√ª√±√™√†. √Ç√ª √¨√Æ√¶√•√≤√• √•√£√Æ √≥√¢√•√´√®√∑√®√≤√º √≠√† %d", pData[params[0]][pWanted], 6 - pData[params[0]][pWanted]);
	pData[params[0]][pWanted] += params[1];
	if(pData[params[0]][pWanted] > 6) pData[params[0]][pWanted] = 6;
	SetPlayerWantedLevel(params[0], pData[params[0]][pWanted]);
	UpdatePlayerData(params[0], "pWanted", pData[params[0]][pWanted]);
	SCMF(playerid, COLOR_BLUE, "√Ç√ª √Æ√°√∫√ø√¢√®√´√® %s √¢ √∞√Æ√ß√ª√±√™. √è√∞√®√∑√®√≠√†: %s. √í√•√™√≥√π√®√© √≥√∞√Æ√¢√•√≠√º √∞√Æ√ß√ª√±√™√†: %d", pData[params[0]][pName], params[2], pData[params[0]][pWanted]);
	SCMF(params[0], 0xffcd00FF, "%s %s √Æ√°√∫√ø√¢√®√´ √Ç√†√± √¢ √∞√Æ√ß√ª√±√™. √è√∞√®√∑√®√≠√†: %s. √í√•√™√≥√π√®√© √≥√∞√Æ√¢√•√≠√º √∞√Æ√ß√ª√±√™√†: %d", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], pData[playerid][pName], params[2], pData[params[0]][pWanted]);
	new strsu[144];
	format(strsu, sizeof(strsu), "%s %s[%d] √Æ√°√∫√ø√¢√®√´ %s[%d] √¢ √∞√Æ√ß√ª√±√™ [%d/6]. √è√∞√®√∑√®√≠√†: %s", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], pData[playerid][pName], playerid, pData[params[0]][pName], params[0], pData[params[0]][pWanted], params[2]);
	SFFM(1, 0xffcd00FF, strsu); SFFM(2, 0xffcd00FF, strsu); SFFM(21, 0xffcd00FF, strsu); SFFM(22, 0xffcd00FF, strsu);
	return SFFM(10, 0xffcd00FF, strsu);
}
CMD:w(playerid, params[]) {
	if(pData[playerid][pMuteTime] > 0) return SCM(playerid, COLOR_ERROR, "√Ñ√Æ√±√≤√≥√Ø √¢ √∑√†√≤ √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√≠. √ì√ß√≠√†√≤√º √¢√∞√•√¨√ø √§√Æ √Æ√™√Æ√≠√∑√†√≠√®√ø √°√†√≠√† √∑√†√≤√†: {66cc33}/time");
	if(sscanf(params, "s[100]", params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /w [√≤√•√™√±√≤]");
	string[0] = EOS;
	format(string,128, "%s √∏√•√Ø√∑√•√≤: %s", pData[playerid][pName], params[0]);
	SetPlayerChatBubble(playerid,params[0],0xACCE90AA,3.0,10000);
	return ProxDetector(3.0, playerid, string, 0xACCE90AA);
}
CMD:s(playerid, params[]) {
	if(pData[playerid][pLevel] < 2) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√®√¨ √¨√Æ√¶√≠√Æ √Ø√Æ√´√º√ß√Æ√¢√†√≤√º√±√ø √±√Æ 2 √≥√∞√Æ√¢√≠√ø");
	if(GetPVarInt(playerid, "gag")) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √™√´√ø√Ø, √Ç√ª √≠√• √¨√Æ√¶√•√≤√• √£√Æ√¢√Æ√∞√®√≤√º");
	if(pData[playerid][pMuteTime]) return SCM(playerid, COLOR_ERROR, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Ω√≤√Æ");
	if(sscanf(params,"s[100]",params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /s [√≤√•√™√±√≤]");
	string[0] = EOS;
    if(pData[playerid][pSex] == 1) format(string, 128, "%s[%d] √™√∞√®√™√≠√≥√´: %s", pData[playerid][pName], playerid, params[0]);
    else format(string, 128, "%s[%d] √™√∞√®√™√≠√≥√´√†: %s", pData[playerid][pName], playerid, params[0]);
	if(!IsPlayerApplyAnimation(playerid, "Bat_4") && 
	!GetPVarInt(playerid, "player_anim") && 
	GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && 
	PlayerTied{playerid} == false && 
	!GetPVarInt(playerid, "PlayerCuffedTime") &&
	!GetPVarInt(playerid, #tazer_dest)) ApplyAnimation(playerid, "ON_LOOKERS","shout_01",4.1,0,0,0,0,0,1);
	SetPlayerChatBubble(playerid,params[0],-1,60.0,10000);
	return ProxDetector(60.0, playerid, string,-1);
}
CMD:news(playerid) 
    return mysql_tquery(mysql_Handle, "SELECT * FROM `news_log` ORDER BY id DESC LIMIT 15", "news_show", "i", playerid);
CB: news_show(playerid) {
    new rows, fmtstr[206 * 15 + 8] = ""CWHITE"", n_date[22], oldname[MAX_PLAYER_NAME], name[MAX_PLAYER_NAME], text[96];
    cache_get_row_count(rows);
    if(!rows) return SCM(playerid, COLOR_LIGHTGREY, "No S√≠√≠√≠√ª√µ √Æ √Ø√Æ√±√´√•√§√≠√®√µ √£√Æ√±. √≠√Æ√¢√Æ√±√≤√ø√µ");
    for(new i = 0; i < rows; i ++) {
        if(i >= 15) break;
        cache_get_value_name(i, "date", n_date);
        if(i > 0) cache_get_value_name(i - 1, "name", oldname);
        else cache_get_value_name(i, "name", oldname);
        cache_get_value_name(i, "name", name);
        cache_get_value_name(i, "text", text);
        if(strcmp(oldname, name)) format(fmtstr, sizeof(fmtstr), "%s\n", fmtstr);
        format(fmtstr, sizeof(fmtstr), "%s%s\t\t%s: %s\n", fmtstr, n_date, name, text);
    }
    return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CBLUE"√è√Æ√±√´√•√§√≠√®√• √£√Æ√±. √≠√Æ√¢√Æ√±√≤√®", fmtstr, "Cerrar", "");
}
alias:gnews("gov");
CMD:gnews(playerid, params[]) {
	if(IsAGang(playerid) || IsAMafia(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√†√¨ √≠√•√§√Æ√±√≤√≥√Ø√≠√† S√≠√≠√≠√†√ø √¥√≥√≠√™√∂√®√ø");
	if(!IsMinistr(playerid)) {
		if(!pData[playerid][pMember] || pData[playerid][pRank] < 9) 
			return SCM(playerid, COLOR_LIGHTGREY, "√Ç√†√¨ √≠√•√§√Æ√±√≤√≥√Ø√≠√† S√≠√≠√≠√†√ø √¥√≥√≠√™√∂√®√ø");
	}
	if(pData[playerid][pMuteTime]) return SCM(playerid, COLOR_ERROR, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Ω√≤√Æ √¢ S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤");
	if(GetPVarInt(playerid, "gag")) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √™√´√ø√Ø, √Ç√ª √≠√• √¨√Æ√¶√•√≤√• √£√Æ√¢√Æ√∞√®√≤√º");
	if(sscanf(params,"s[100]",params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /gnews √®√´√® /gov [√≤√•√™√±√≤]");
    if(strlen(params[0]) > 90) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§¬∏√≠ √±√´√®√∏√™√Æ√¨ √§√´√®√≠√≠√ª√© √≤√•√™√±√≤");
	string[0] = EOS; gnews_number_str[playerid] ++;
	format(string, 128, "√É√Æ√±. √≠√Æ√¢√Æ√±√≤√®: %s[%d]: %s", pData[playerid][pName], playerid, params[0]);
	SCMTA(0x4466CCFF, string);

    new day, month, year, hour, minuite, second;
    getdate(year, month, day);
    gettime(hour, minuite, second);
    FixHour(hour);
    hour = shifthour;
    new data2[22];
    format(data2, 22, "%02d.%02d.%d √¢ %02d:%02d",day, month, year, hour, minuite);

    new query[206];
    mysql_format(mysql_Handle,query,sizeof(query),"INSERT INTO `news_log` (`date`,`name`,`text`) VALUES ('%e','%e','%e')",data2,pData[playerid][pName],params[0]);
    mysql_tquery(mysql_Handle, query);
	
    if(gnews_number_str[playerid] > 3) {
		format(string, 128, "[A] √ã√®√§√•√∞ %s[%d] √Ø√∞√•√¢√ª√±√®√´ √´√®√¨√®√≤ √£√Æ√±. √≠√Æ√¢√Æ√±√≤√•√© "CORANGE"[%d/3]", pData[playerid][pName], playerid, gnews_number_str[playerid]);
		AdminMessage(0x99CC33FF, string);
		SCMF(playerid, COLOR_ERROR, "√Ç√ª √Ø√∞√•√¢√ª√±√®√´√® √´√®√¨√®√≤ √£√Æ√±. √≠√Æ√¢√Æ√±√≤√•√© {cccc00}[%d/3]"CERROR". √Ä√§√¨√®√≠√®√±√≤√∞√†√∂√®√ø √°√ª√´√† √Æ√Ø√Æ√¢√•√π√•√≠√†", gnews_number_str[playerid]);
		new minutes_gnews = floatround(time_gnews[playerid] / 60);
		SCMF(playerid, COLOR_ERROR, "√Ç√†√∏ √±√∑√•√≤√∑√®√™ √≠√Æ√¢√Æ√±√≤√•√© √Æ√°√≠√≥√´√®√≤√±√ø √∑√•√∞√•√ß "CPALEGREEN"%d √¨√®√≠", minutes_gnews);
		format(string, 30, "~g~gnews~n~~r~%d/3", gnews_number_str[playerid]);
	}
	else format(string, 30, "~g~gnews~n~~b~%d/3", gnews_number_str[playerid]);
	if(gnews_number_str[playerid] == 3) time_gnews[playerid] = 600;
	return GameTextForPlayer(playerid, string, 5000, 1);
}
CMD:ans(playerid, params[]) {
	if(pData[playerid][pAdmin] < 1) return 1;
	if(GetPVarInt(playerid, "AdminMessages")) return SCM(playerid, COLOR_LIGHTGREY, "√Ñ√´√ø √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√ø √Ω√≤√Æ√© √™√Æ√¨√†√≠√§√ª √≠√≥√¶√≠√Æ √¢√™√´√æ√∑√®√≤√º √±√Æ√Æ√°√π√•√≠√®√ø √∞√•√Ø√Æ√∞√≤√† √¢ /apanel");
	if(sscanf(params, "ds[100]", params[0], params[1])) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /ans [id √®√£√∞√Æ√™√†] [√≤√•√™√±√≤]");
	if(params[0] == playerid) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	SCMF(params[0],0xFF9945FF,"√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s[%d] √≠√†√Ø√®√±√†√´ √Ç√†√¨: "CWHITE"%s", pData[playerid][pName],playerid, params[1]);
	PlayerPlaySound(params[0], 1085, 0.0, 0.0, 0.0);
	
	if(Iter_Contains(Reports, params[0])) {
		Iter_Remove(Reports, params[0]);
    	pTemp[params[0]][rep_rport] = EOS;
	}

	string[0] = EOS;
	format(string, 144, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s[%d] √≠√†√Ø√®√±√†√´ %s[%d]: "CWHITE"%s", pData[playerid][pName], playerid, GetName(params[0]), params[0], params[1]);
	return AdminMessage(0xFF9945FF, string);
}
CMD:pay(playerid, params[]) {
	if(pData[playerid][pLevel] < 2) return SCM(playerid, COLOR_LIGHTGREY, "√è√•√∞√•S√≠√¢√†√≤√º √§√•√≠√º√£√® √∞√†√ß√∞√•√∏√•√≠√Æ √±√Æ 2-√£√Æ √≥√∞√Æ√¢√≠√ø");
	if(sscanf(params, "dd", params[0], params[1])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /pay [id √®√£√∞√Æ√™√†] [√±√≥√¨√¨√†]");
	if(params[1] < 1 || params[1] > 10000) return SCM(playerid, COLOR_LIGHTGREY, "√ë√≥√¨√¨√† √Æ√≤ 1$ √§√Æ 10000$");
	if(params[0] == playerid) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(!ProxDetectorS(5.0, playerid, params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
	if(pData[playerid][pCash] < params[1]) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √±√≤√Æ√´√º√™√Æ √§√•√≠√•√£");
	Hook_GivePlayerMoney(params[0], params[1]); Hook_GivePlayerMoney(playerid, -params[1]);
	if(pData[playerid][pSex] == 1) MeAction(playerid,"√§√Æ√±√≤√†√´ √™√Æ√∏√•√´¬∏√™ √® √Ø√•√∞√•S√≠√´ √§√•√≠√º√£√®");
	else MeAction(playerid,"√§√Æ√±√≤√†√´√† √™√Æ√∏√•√´¬∏√™ √® √Ø√•√∞√•S√≠√´√† √§√•√≠√º√£√®");
	string[0] = EOS;
	if(!IsPlayerApplyAnimation(playerid, "Bat_4") && 
	!GetPVarInt(playerid, "player_anim") && 
	GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && 
	PlayerTied{playerid} == false && 
	!GetPVarInt(playerid, "PlayerCuffedTime") &&
	!GetPVarInt(playerid, #tazer_dest)) ApplyAnimation(playerid, "DEALER", "SHOP_PAY", 4.1, 0, 1, 1, 0, 0, 1);
	format(string,70, "√Ç√ª √Ø√•√∞√•S√≠√´√® √®√£√∞√Æ√™√≥ %s %d$", GetName(params[0]), params[1]);
	SCM(playerid, COLOR_BLUE, string);
	format(string, 11, "-%d$",params[1]);
	SetPlayerChatBubble(playerid, string, COLOR_ERROR, 15.0, 3000);
	format(string, 11, "+%d$",params[1]);
	SetPlayerChatBubble(params[0], string, 0x00CC00FF, 15.0, 3000);
	PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0);
	if(pData[playerid][pSex] == 1) format(string, 70, "%s[%d] √Ø√•√∞√•S√≠√´ √Ç√†√¨ %d$", pData[playerid][pName], playerid, params[1]);
	else format(string, 70, "%s[%d] √Ø√•√∞√•S√≠√´√† √Ç√†√¨ %d$", pData[playerid][pName], playerid, params[1]);
	return SCM(params[0], COLOR_BLUE, string);
}
CMD:cigarettes(playerid) {
	if(pData[playerid][pSiga] < 1 || pData[playerid][pSpal] < 1) 
		return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √ß√†√¶√®√£√†√´√™√® √®√´√® √±√®√£√†√∞√•√≤. √ä√≥√Ø√®√≤√º √®√µ √¨√Æ√¶√≠√Æ √¢ {FFCD00}24-7");
	new marka[15];
	string[0] = EOS;
	switch(pData[playerid][pSgf]) {
		case 1: marka = "Parlament";
		case 2: marka = "Kent";
		case 3: marka = "Winston";
		case 4: marka = "Lucky Strike";
		case 5: marka = "Marlboro";
		default: return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √±√®√£√†√∞√•√≤");
	}
	format(string, 160, ""CWHITE"√é√±√≤√†√´√Æ√±√º √±√®√£√†√∞√•√≤: "CMAIN"%i √∏√≤\n"CWHITE"√å√†√∞√™√†: "CMAIN"%s\n"CWHITE"√Ñ√•√©√±√≤√¢√®√• √ß√†√¶√®√£√†√´√™√®: "CMAIN"√≠√† %i √∞√†√ß", pData[playerid][pSiga], marka, pData[playerid][pSpal]);
	SPD(playerid, 0, 0, "{FFCD00}√ë√®√£√†√∞√•√≤√ª",string, "Cerrar","");
	if(pData[playerid][pSex] == 1) format(string, 128, "%s √ß√†√£√´√ø√≠√≥√´ √¢ √Ø√†√∑√™√≥ √±√®√£√†√∞√•√≤ √¨√†√∞√™√® %s", pData[playerid][pName], marka);
	else format(string, 128, "%s √ß√†√£√´√ø√≠√≥√´√† √¢ √Ø√†√∑√™√≥ √±√®√£√†√∞√•√≤ √¨√†√∞√™√® %s", pData[playerid][pName], marka);
	SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
	return ProxDetector(30.0, playerid, string, COLOR_PURPLE);
}
CMD:smoke(playerid) {
	if(pData[playerid][pSiga] < 1 || pData[playerid][pSpal] < 1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √ß√†√¶√®√£√†√´√™√® √®√´√® √±√®√£√†√∞√•√≤. √ä√≥√Ø√®√≤√º √®√µ √¨√Æ√¶√≠√Æ √¢ {FFCD00}24-7");
	if(GetPVarInt(playerid, "SMOKE")) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≥√¶√• √ß√†√™√≥√∞√®√´√® √±√®√£√†√∞√•√≤√≥");
	new marka[15];
	string[0] = EOS;
	pData[playerid][pSiga]--,pData[playerid][pSpal]--;
	RemoveItemFromInventory(playerid, 0, 1);
	RemoveItemFromInventory(playerid, 1, 1);
	new query[140];
	mysql_format(mysql_Handle,query,sizeof(query),"UPDATE `accounts` SET `sigar` = %d, `spal` = %d WHERE `Name` = '%s'",pData[playerid][pSiga],pData[playerid][pSpal],pData[playerid][pName]);
	mysql_tquery(mysql_Handle, query);
	SetPVarInt(playerid, "SMOKE", gettime()+75);
	SetPlayerAttachedObject(playerid, 3, 19625, 6, 0.103999,0.022999,0.018999,-37.600025,24.899974,55.599994,1.000000,1.000000,1.000000);
	
	switch(pData[playerid][pSgf]) {
		case 1: marka = "Parlament";
		case 2: marka = "Kent";
		case 3: marka = "Winston";
		case 4: marka = "Lucky Strike";
		case 5: marka = "Marlboro";
	}
	if(pData[playerid][pSex] == 1) format(string, 100, "%s √ß√†√™√≥√∞√®√´ √±√®√£√†√∞√•√≤√≥ √¨√†√∞√™√® %s", pData[playerid][pName], marka);
	else format(string, 100, "%s √ß√†√™√≥√∞√®√´√† √±√®√£√†√∞√•√≤√≥ √¨√†√∞√™√® %s", pData[playerid][pName], marka);
	SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
	ProxDetector(30.0, playerid, string, COLOR_PURPLE);
	return SCM(playerid, COLOR_ORANGE, "√ó√≤√Æ√°√ª √±√§√•√´√†√≤√º √ß√†√≤√ø√¶√™√≥, √≠√†√¶√¨√®√≤√• {FF8282}ALT");
}
CMD:loadfs(playerid, params[]) {
	if(pData[playerid][pAdmin] < 7) return 1;
	new f_str[70], fs_name[50];
	if(sscanf(params, "s[50]", fs_name)) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /loadfs [√≠√†√ß√¢√†√≠√®√• √±√™√∞√®√Ø√≤√†]");
    format(f_str, sizeof(f_str), "loadfs %s", fs_name);
    SendRconCommand(f_str);
    return SCMF(playerid, COLOR_MAIN, "√ë√™√∞√®√Ø√≤ %s √ß√†√£√∞√≥√¶√•√≠", fs_name);
}
CMD:unloadfs(playerid, params[]) {
	if(pData[playerid][pAdmin] < 7) return 1;
	new f_str[70], fs_name[50];
	if(sscanf(params, "s[50]", fs_name)) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /unloadfs [√≠√†√ß√¢√†√≠√®√• √±√™√∞√®√Ø√≤√†]");
    format(f_str, sizeof(f_str), "unloadfs %s", fs_name);
    SendRconCommand(f_str);
    return SCMF(playerid, COLOR_ERROR, "√ë√™√∞√®√Ø√≤ %s √¢√ª√£√∞√≥√¶√•√≠", fs_name);
}
CMD:reloadfs(playerid, params[]) {
	if(pData[playerid][pAdmin] < 7) return 1;
	new f_str[70], fs_name[50];
	if(sscanf(params, "s[50]", fs_name)) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /reloadfs [√≠√†√ß√¢√†√≠√®√• √±√™√∞√®√Ø√≤√†]");
    format(f_str, sizeof(f_str), "reloadfs %s", fs_name);
    SendRconCommand(f_str);
    SCMF(playerid, COLOR_ERROR, "√ë√™√∞√®√Ø√≤ %s √¢√ª√£√∞√≥√¶√•√≠", fs_name);
    return SCMF(playerid, COLOR_MAIN, "√ë√™√∞√®√Ø√≤ %s √ß√†√£√∞√≥√¶√•√≠", fs_name);
}
stock add_c_bans(playerid) {
	mysql_format(mysql_Handle, string, 120, "SELECT `pBansAll` FROM `accounts` WHERE `Name` = '%s'", GetName(playerid));
	mysql_tquery(mysql_Handle, string, "querybans", "ds", playerid, GetName(playerid));
}
CB: querybans(playerid, name[]) {
	new p_banspl;
	cache_get_value_name_int(0, "pBansAll", p_banspl);
	mysql_format(mysql_Handle, string, 120, "UPDATE `accounts` SET `pBansAll` = %d WHERE `Name` = '%s'", p_banspl + 1, name);
	mysql_tquery(mysql_Handle, string);
}
stock add_c_warns(playerid) {
	mysql_format(mysql_Handle, string, 120, "SELECT `pWarnsAll` FROM `accounts` WHERE `Name` = '%s'", GetName(playerid));
	mysql_tquery(mysql_Handle, string, "querywarns", "ds", playerid, GetName(playerid));
}
CB: querywarns(playerid, name[]) {
	new p_warnspl;
	cache_get_value_name_int(0, "pWarnsAll", p_warnspl);
	mysql_format(mysql_Handle, string, 120, "UPDATE `accounts` SET `pWarnsAll` = %d WHERE `Name` = '%s'", p_warnspl + 1, name);
	mysql_tquery(mysql_Handle, string);
}
CMD:fcontract(playerid)
{

	if(GetPVarInt(playerid, "ContractMechanic") > 0)
	{
		return SPD(playerid,1804,DIALOG_STYLE_MSGBOX,""CORANGE"√è√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√•", ""CWHITE"Quieres √∞√†√±√≤√Æ√∞√£√≠√≥√≤√º √™√Æ√≠√≤√∞√†√™√≤ √Æ √Ø√∞√ÆS√≠√¶√• √≤√Æ√Ø√´√®√¢√† √± √Ä√á√ë?", "S√≠", "No");
	}

	if(pData[playerid][pJob] != 1) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√•√µ√†√≠√®√™");
	new fillingid = -1;
	for(new b = 1; b != FILLING_TOTAL+1; b++) {
		if(!IsPlayerInRangeOfPoint(playerid, 10.0, Filling[b][fPos][0], Filling[b][fPos][1], Filling[b][fPos][2])) continue;
		fillingid = b;
	}
	if(fillingid == -1) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √Ä√á√ë");
	
	string[0] = EOS;
	SetPVarInt(playerid, "tempcontract", fillingid);
	format(string,420,"\
	"CWHITE"√Ç√ª √¨√Æ√¶√•√≤√• √Ø√∞√ÆS√≠√¢√†√≤√º √≤√Æ√Ø√´√®√¢√Æ √± √Ω√≤√Æ√© √Ä√á√ë √§√∞√≥√£√®√¨ √®√£√∞√Æ√™√†√¨, √Ø√∞√® √Ω√≤√Æ√¨ √°√≥√§√•√≤√•\n\
	√Ø√Æ√´√≥√∑√†√≤√º 20%% √Æ√≤ √•√£√Æ √±√≤√Æ√®√¨√Æ√±√≤√®. √Ç√†√¨ √§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √´√®√∏√º √ß√†√™√´√æ√∑√®√≤√º √™√Æ√≠√≤√∞√†√™√≤ √±\n\
	√ß√†√Ø√∞√†√¢√Æ√∑√≠√Æ√© √±√≤√†√≠√∂√®√•√© √® √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º "CCYAN"/refill "CWHITE"√§√´√ø √Ø√∞√ÆS√≠√¶√®. √á√†√™√≥√Ø√†√≤√º √≤√Æ√Ø√´√®√¢√Æ\n\
	√ß√†√∞√†√≠√•√• √≠√• √≠√≥√¶√≠√Æ. √Ä√á√ë √ß√†√°√®√∞√†√•√≤ √±√¢√Æ√æ √¢√ª√∞√≥√∑√™√≥, √† √¢√ª √Ø√Æ√´√≥√∑√†√•√≤√• √±√¢√Æ√© √Ø√∞√Æ√∂√•√≠√≤\n\
	√Ø√∞√® √ß√†√Ø√∞√†√¢√™√• √≤√∞√†√≠√±√Ø√Æ√∞√≤√† √™√´√®√•√≠√≤√†.\n\
	\n\
	Quieres √ß√†√™√´√æ√∑√®√≤√º √™√Æ√≠√≤√∞√†√™√≤ √± "CLITEBLUE"%s?",Filling[fillingid][ffName]);

	SPD(playerid,1807,DIALOG_STYLE_MSGBOX,"{FFCD00}√á√†√™√´√æ√∑√•√≠√®√• √™√Æ√≠√≤√∞√†√™√≤√† √± √Ä√á√ë",string,"S√≠","No");

	return 1;
}

CMD:fill(playerid,params[]) {
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_GREY, "√Ç√ª √§√Æ√´√¶√≠√ª √°√ª√≤√º √ß√† √∞√≥√´¬∏√¨ √≤√∞√†√≠√±√Ø√Æ√∞√≤√†");
	
	new fillingid = -1;
	for(new b = 1; b != FILLING_TOTAL+1; b++) {
		if(!IsPlayerInRangeOfPoint(playerid, 10.0, Filling[b][fPos][0], Filling[b][fPos][1], Filling[b][fPos][2])) continue;
		if(Filling[b][fLock]) return SCM(playerid, COLOR_LIGHTGREY, "√ç√† S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤ √ß√†√Ø√∞√†√¢√™√† √≠√† √Ω√≤√Æ√© √Ä√á√ë √≠√•√¢√Æ√ß√¨√Æ√¶√≠√†");
		fillingid = b;
	}
	if(fillingid == -1) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √Ä√á√ë");

	if(sscanf(params, "d",params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /fill [√´√®√≤√∞√Æ√¢ √≤√Æ√Ø√´√®√¢√†] (√§√Æ 150)");
	if(params[0] < 10) 
		return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √ß√†√Ø√∞√†√¢√®√≤√º √†√¢√≤√Æ√¨√Æ√°√®√´√º √¨√•√≠√•√• √∑√•√¨ √≠√† 10 √´√®√≤√∞√Æ√¢");
	new vehicleid = GetPlayerVehicleID(playerid);
	if(150 < VehInfo[vehicleid][vFuel] + params[0]) 
		return SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§√•√≠√Æ √≠√•√¢√•√∞√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √≤√Æ√Ø√´√®√¢√†");

	new cenabenz = Filling[fillingid][fPriceBenz]*params[0];
	if(pData[playerid][pCash] < cenabenz) return SCMF(playerid,COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√• √µ√¢√†√≤√†√•√≤ √§√•√≠√•√£ √§√´√ø √ß√†√Ø√∞√†√¢√™√®. √ç√•√Æ√°√µ√Æ√§√®√¨√Æ {40bf40}%d$",cenabenz);
	if(Filling[fillingid][fBenz] < params[0]) return SCM(playerid, COLOR_LIGHTGREY, "√ç√† √Ä√á√ë √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √≤√Æ√Ø√´√®√¢√†");
	Hook_GivePlayerMoney(playerid, -cenabenz);
	Filling[fillingid][fBankMoney] += cenabenz;
	UpdateFuelInfo(playerid, "fBankMoney", Filling[fillingid][fBankMoney]);
	Filling[fillingid][fBenz] -= params[0];
	UpdateFuelInfo(playerid, "fBenz", Filling[fillingid][fBenz]);

	VehInfo[vehicleid][vFuel] += float(params[0]);
	savefuel_cars(playerid, vehicleid);

	new str[55];
	format(str, sizeof(str), "~y~MONEY: ~r~-%d$~n~~w~LITRES: ~b~+%d",cenabenz,params[0]);
	GameTextForPlayer(playerid, str, 4000, 3);

	update_3dtext_fill(fillingid);

	return SCMF(playerid, COLOR_MAIN, "√Ä√¢√≤√Æ√¨√Æ√°√®√´√º √°√ª√´ √≥√±√Ø√•√∏√≠√Æ √ß√†√Ø√∞√†√¢√´√•√≠ √≠√† "CORANGE"%d √´",params[0]);
}
stock sellmybiz_function(playerid,to_player,price) {
	if(pData[playerid][unikauto_Have] == 0 && pData[playerid][autoHave] == 0 && pData[playerid][pBusiness] == -1 && pData[playerid][food_have] == 0 && pData[playerid][prok_have] == 0 && pData[playerid][kiosk_have] == 0) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √°√®√ß√≠√•√±√†");
	if(!IsPlayerConnected(to_player)) return SCM(playerid, COLOR_GREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
    if(to_player == playerid) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Ø√∞√ÆS√≠√≤√º √°√®√ß√≠√•√± √±√•√°√•");
	if(pData[to_player][unikauto_Have] != 0 || pData[to_player][autoHave] != 0 || pData[to_player][pBusiness] != -1 || pData[to_player][pFilling] != -1 || pData[to_player][food_have] != 0 || pData[to_player][prok_have] != 0 || pData[to_player][kiosk_have] != 0) return SCM(playerid, COLOR_LIGHTGREY, "√ì √®√£√∞√Æ√™√† √≥√¶√• √•√±√≤√º √°√®√ß√≠√•√±");
	if(pData[playerid][unikauto_Have] != 0 && !IsPlayerInRangeOfPoint(playerid, 8.0, 354.5406,-1790.6511,5.1084)) 
		return SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √Æ√™√Æ√´√Æ √°√®√ß√≠√•√±√†");
	else if(pData[playerid][autoHave] != 0 && !IsPlayerInRangeOfPoint(playerid, 8.0, 2146.1821,-2291.7102,14.7500)) 
		return SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √Æ√™√Æ√´√Æ √°√®√ß√≠√•√±√†");
	else if(pData[playerid][kiosk_have] != 0) {
		switch(pData[playerid][kiosk_have]) {
			case 1: if(!IsPlayerInRangeOfPoint(playerid, 10.0, 1797.4570,-1864.3280,13.5740)) return SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √Æ√™√Æ√´√Æ √°√®√ß√≠√•√±√†");
			case 2: if(!IsPlayerInRangeOfPoint(playerid, 10.0, 1300.4177,-1386.6145,13.5140)) return SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √Æ√™√Æ√´√Æ √°√®√ß√≠√•√±√†");
			case 3: if(!IsPlayerInRangeOfPoint(playerid, 10.0, 2825.3022,1253.2449,10.7654)) return SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √Æ√™√Æ√´√Æ √°√®√ß√≠√•√±√†");
			case 4: if(!IsPlayerInRangeOfPoint(playerid, 10.0, -1985.9747,203.2735,27.6875)) return SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √Æ√™√Æ√´√Æ √°√®√ß√≠√•√±√†");
		}
	}
	else if(pData[playerid][prok_have] != 0) {
		switch(pData[playerid][prok_have]) {
			case 1: if(!IsPlayerInRangeOfPoint(playerid, 10.0, 1794.0339,-1939.8192,13.5521)) return SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √Æ√™√Æ√´√Æ √°√®√ß√≠√•√±√†");
			case 2: if(!IsPlayerInRangeOfPoint(playerid, 10.0, 1182.3124,-1356.9469,14.2071)) return SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √Æ√™√Æ√´√Æ √°√®√ß√≠√•√±√†");
			case 3: if(!IsPlayerInRangeOfPoint(playerid, 10.0, -1996.8857,94.9524,27.6875)) return SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √Æ√™√Æ√´√Æ √°√®√ß√≠√•√±√†");
			case 4: if(!IsPlayerInRangeOfPoint(playerid, 10.0, 1631.7618,1843.6959,10.8203)) return SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √Æ√™√Æ√´√Æ √°√®√ß√≠√•√±√†");
			case 5: if(!IsPlayerInRangeOfPoint(playerid, 10.0, 2819.8347,1293.8167,10.9609)) return SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √Æ√™√Æ√´√Æ √°√®√ß√≠√•√±√†");
			case 6: if(!IsPlayerInRangeOfPoint(playerid, 10.0, 1631.7504,1844.1727,10.8203)) return SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √Æ√™√Æ√´√Æ √°√®√ß√≠√•√±√†");
			case 7: if(!IsPlayerInRangeOfPoint(playerid, 10.0, 1157.5634,-1727.3196,13.8628)) return SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √Æ√™√Æ√´√Æ √°√®√ß√≠√•√±√†");
		}
	}
	else if(pData[playerid][food_have] == 1 && !IsPlayerInRangeOfPoint(playerid, 8.0, 1146.06201, -1755.98499, 15.11)) return SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √Æ√™√Æ√´√Æ √°√®√ß√≠√•√±√†");
	else if(pData[playerid][food_have] == 2 && !IsPlayerInRangeOfPoint(playerid, 8.0, 1771.739990, -1903.270020, 14.21)) return SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √Æ√™√Æ√´√Æ √°√®√ß√≠√•√±√†");
	else if(!IsPlayerInRangeOfPoint( playerid, 10.0, BizInfo[pData[playerid][pBusiness]][EnterBiz][0], BizInfo[pData[playerid][pBusiness]][EnterBiz][1], BizInfo[pData[playerid][pBusiness]][EnterBiz][2] ) ) return SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √Æ√™√Æ√´√Æ √°√®√ß√≠√•√±√†");
	if(price < 0) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √¢√¢√•√´√® √≠√•√¢√•√∞√≠√≥√æ √∂√•√≠√≥ √Ø√∞√ÆS√≠√¶√®");
	if(pData[to_player][pCash] < price) return SCM(playerid, COLOR_LIGHTGREY, "√ì √®√£√∞√Æ√™√† No √±√≤√Æ√´√º√™√Æ √§√•√≠√•√£");
	if(!ProxDetectorS(8.0, playerid, to_player)) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
    if(GetPVarInt(playerid, "cancel_act")) return SCM(playerid, COLOR_GREY, "√Ç√ª √≥√¶√• √±√§√•√´√†√´√® √™√†√™√Æ√•-√≤√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √Ç√¢√•√§√®√≤√• "CBLUE"/revoke"CGREY", √∑√≤√Æ√°√ª √Æ√≤√Æ√ß√¢√†√≤√º √•√£√Æ");
    if(GetPVarInt(to_player, "offer") != 9999) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™√≥ √≥√¶√• √±√§√•√´√†√´√® √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √é√≠ √§√Æ√´√¶√•√≠ {00cc00}√Ø√∞√®√≠√ø√≤√º "CLIGHTGREY"√®√´√® "CERROR"√Æ√≤√¨√•√≠√®√≤√º "CLIGHTGREY"√•√£√Æ");
	SetPVarInt(to_player, "sellerbiz", playerid);
	SetPVarInt(to_player, "bizcost", price);
    SetPVarInt(to_player, "offer", 1);
    if(pData[playerid][unikauto_Have] != 0) {
    	SCMF(to_player, COLOR_BLUE, "%s √µ√Æ√∑√•√≤ √Ø√∞√ÆS√≠√≤√º √Ç√†√¨ √±√¢√Æ√© √°√®√ß√≠√•√± "CYELLOW"√Ä√¢√≤√Æ√±√†√´√Æ√≠ √Ω√™√±√™√´√æ√ß√®√¢√≠√ª√µ √†√¢√≤√Æ "CBLUE"√ß√† %d$", pData[playerid][pName],price);
    	SCMF(playerid,COLOR_BLUE,"√Ç√ª √Ø√∞√•√§√´√Æ√¶√®√´√® √™√≥√Ø√®√≤√º %s √Ç√†√∏ √°√®√ß√≠√•√± "CYELLOW"√Ä√¢√≤√Æ√±√†√´√Æ√≠ √Ω√™√±√™√´√æ√ß√®√¢√≠√ª√µ √†√¢√≤√Æ "CBLUE"√ß√† %d$", GetName(to_player),price);
    }
    if(pData[playerid][autoHave] != 0) {
    	SCMF(to_player, COLOR_BLUE, "%s √µ√Æ√∑√•√≤ √Ø√∞√ÆS√≠√≤√º √Ç√†√¨ √±√¢√Æ√© √°√®√ß√≠√•√± "CYELLOW"√Ä√¢√≤√Æ√¨√Æ√°√®√´√º√≠√†√ø √¥√†√°√∞√®√™√† "CBLUE"√ß√† %d$", pData[playerid][pName],price);
    	SCMF(playerid,COLOR_BLUE,"√Ç√ª √Ø√∞√•√§√´√Æ√¶√®√´√® √™√≥√Ø√®√≤√º %s √Ç√†√∏ √°√®√ß√≠√•√± "CYELLOW"√Ä√¢√≤√Æ√¨√Æ√°√®√´√º√≠√†√ø √¥√†√°√∞√®√™√† "CBLUE"√ß√† %d$", GetName(to_player),price);
    }
    else if(pData[playerid][prok_have] != 0) {
    	SCMF(to_player, COLOR_BLUE, "%s √µ√Æ√∑√•√≤ √Ø√∞√ÆS√≠√≤√º √Ç√†√¨ √±√¢√Æ√© √°√®√ß√≠√•√± "CYELLOW"√è√≥√≠√™√≤ √Ø√∞√Æ√™√†√≤√† "CBLUE"√ß√† %d$", pData[playerid][pName],price);
    	SCMF(playerid,COLOR_BLUE,"√Ç√ª √Ø√∞√•√§√´√Æ√¶√®√´√® √™√≥√Ø√®√≤√º %s √Ç√†√∏ √°√®√ß√≠√•√± "CYELLOW"√è√≥√≠√™√≤ √Ø√∞√Æ√™√†√≤√† "CBLUE"√ß√† %d$", GetName(to_player),price);
    }
    else if(pData[playerid][kiosk_have] != 0) {
    	SCMF(to_player, COLOR_BLUE, "%s √µ√Æ√∑√•√≤ √Ø√∞√ÆS√≠√≤√º √Ç√†√¨ √±√¢√Æ√© √°√®√ß√≠√•√± "CYELLOW"√ä√®√Æ√±√™ "CBLUE"√ß√† %d$", pData[playerid][pName],price);
    	SCMF(playerid,COLOR_BLUE,"√Ç√ª √Ø√∞√•√§√´√Æ√¶√®√´√® √™√≥√Ø√®√≤√º %s √Ç√†√∏ √°√®√ß√≠√•√± "CYELLOW"√ä√®√Æ√±√™ "CBLUE"√ß√† %d$", GetName(to_player),price);
    }
    else if(pData[playerid][food_have] != 0) {
    	SCMF(to_player, COLOR_BLUE, "%s √µ√Æ√∑√•√≤ √Ø√∞√ÆS√≠√≤√º √Ç√†√¨ √±√¢√Æ√© √°√®√ß√≠√•√± "CYELLOW"√ã√†√∞√•√™ √± √•√§√Æ√© "CBLUE"√ß√† %d$", pData[playerid][pName],price);
    	SCMF(playerid,COLOR_BLUE,"√Ç√ª √Ø√∞√•√§√´√Æ√¶√®√´√® √™√≥√Ø√®√≤√º %s √Ç√†√∏ √°√®√ß√≠√•√± "CYELLOW"√ã√†√∞√•√™ √± √•√§√Æ√© "CBLUE"√ß√† %d$", GetName(to_player),price);
    }
    else {
    	SCMF(to_player, COLOR_BLUE, "%s √µ√Æ√∑√•√≤ √Ø√∞√ÆS√≠√≤√º √Ç√†√¨ √±√¢√Æ√© √°√®√ß√≠√•√± "CYELLOW"%s "CBLUE"√ß√† %d$", pData[playerid][pName],BizInfo[pData[playerid][pBusiness]][bName],price);
 		SCMF(playerid,COLOR_BLUE,"√Ç√ª √Ø√∞√•√§√´√Æ√¶√®√´√® √™√≥√Ø√®√≤√º %s √Ç√†√∏ √°√®√ß√≠√•√± "CYELLOW"%s "CBLUE"√ß√† %d$", GetName(to_player),BizInfo[pData[playerid][pBusiness]][bName],price);
    }
    SetPVarInt(playerid, "cancel_act", 1); SetPVarInt(playerid, "cancel_act_id", to_player);
    return SCM(to_player, -1, "√ç√†√¶√¨√®√≤√• "CMAIN"Y "CWHITE"√∑√≤√Æ√°√ª √±√Æ√£√´√†√±√®√≤√º√±√ø √®√´√® "CERROR"N "CWHITE"√§√´√ø √Æ√≤√™√†√ß√†");
}
CMD:sellmybiz(playerid, params[]) {
	if(pData[playerid][unikauto_Have] == 0 && pData[playerid][autoHave] == 0 && pData[playerid][pBusiness] == -1 && pData[playerid][food_have] == 0 && pData[playerid][prok_have] == 0 && pData[playerid][kiosk_have] == 0) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √°√®√ß√≠√•√±√†");
	if(sscanf(params,"ii",params[0],params[1])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /sellmybiz [id √®√£√∞√Æ√™√†] [√∂√•√≠√†]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
    if(params[0] == playerid) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Ø√∞√ÆS√≠√≤√º √°√®√ß√≠√•√± √±√•√°√•");
	if(pData[params[0]][unikauto_Have] != 0 || pData[params[0]][autoHave] != 0 || pData[params[0]][pBusiness] != -1 || pData[params[0]][pFilling] != -1 || pData[params[0]][food_have] != 0 || pData[params[0]][prok_have] != 0 || pData[params[0]][kiosk_have] != 0) 
		return SCM(playerid, COLOR_LIGHTGREY, "√ì √®√£√∞√Æ√™√† √≥√¶√• √•√±√≤√º √°√®√ß√≠√•√±");
	if(pData[playerid][unikauto_Have] != 0 && !IsPlayerInRangeOfPoint(playerid, 8.0, 354.5406,-1790.6511,5.1084)) 
		return SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √Æ√™√Æ√´√Æ √°√®√ß√≠√•√±√†");
	else if(pData[playerid][autoHave] != 0 && !IsPlayerInRangeOfPoint(playerid, 8.0, 2146.1821,-2291.7102,14.7500)) 
		return SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √Æ√™√Æ√´√Æ √°√®√ß√≠√•√±√†");
	else if(pData[playerid][kiosk_have] != 0) {
		switch(pData[playerid][kiosk_have]) {
			case 1: if(!IsPlayerInRangeOfPoint(playerid, 10.0, 1797.4570,-1864.3280,13.5740)) return SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √Æ√™√Æ√´√Æ √°√®√ß√≠√•√±√†");
			case 2: if(!IsPlayerInRangeOfPoint(playerid, 10.0, 1300.4177,-1386.6145,13.5140)) return SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √Æ√™√Æ√´√Æ √°√®√ß√≠√•√±√†");
			case 3: if(!IsPlayerInRangeOfPoint(playerid, 10.0, 2825.3022,1253.2449,10.7654)) return SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √Æ√™√Æ√´√Æ √°√®√ß√≠√•√±√†");
			case 4: if(!IsPlayerInRangeOfPoint(playerid, 10.0, -1985.9747,203.2735,27.6875)) return SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √Æ√™√Æ√´√Æ √°√®√ß√≠√•√±√†");
		}
	}
	else if(pData[playerid][prok_have] != 0) {
		switch(pData[playerid][prok_have]) {
			case 1: if(!IsPlayerInRangeOfPoint(playerid, 10.0, 1794.0339,-1939.8192,13.5521)) return SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √Æ√™√Æ√´√Æ √°√®√ß√≠√•√±√†");
			case 2: if(!IsPlayerInRangeOfPoint(playerid, 10.0, 1182.3124,-1356.9469,14.2071)) return SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √Æ√™√Æ√´√Æ √°√®√ß√≠√•√±√†");
			case 3: if(!IsPlayerInRangeOfPoint(playerid, 10.0, -1996.8857,94.9524,27.6875)) return SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √Æ√™√Æ√´√Æ √°√®√ß√≠√•√±√†");
			case 4: if(!IsPlayerInRangeOfPoint(playerid, 10.0, 1631.7618,1843.6959,10.8203)) return SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √Æ√™√Æ√´√Æ √°√®√ß√≠√•√±√†");
			case 5: if(!IsPlayerInRangeOfPoint(playerid, 10.0, 2819.8347,1293.8167,10.9609)) return SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √Æ√™√Æ√´√Æ √°√®√ß√≠√•√±√†");
			case 6: if(!IsPlayerInRangeOfPoint(playerid, 10.0, 1631.7504,1844.1727,10.8203)) return SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √Æ√™√Æ√´√Æ √°√®√ß√≠√•√±√†");
			case 7: if(!IsPlayerInRangeOfPoint(playerid, 10.0, 1157.5634,-1727.3196,13.8628)) return SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √Æ√™√Æ√´√Æ √°√®√ß√≠√•√±√†");
		}
	}
	else if(pData[playerid][food_have] == 1 && !IsPlayerInRangeOfPoint(playerid, 8.0, 1146.06201, -1755.98499, 15.11)) return SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √Æ√™√Æ√´√Æ √°√®√ß√≠√•√±√†");
	else if(pData[playerid][food_have] == 2 && !IsPlayerInRangeOfPoint(playerid, 8.0, 1771.739990, -1903.270020, 14.21)) return SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √Æ√™√Æ√´√Æ √°√®√ß√≠√•√±√†");
	else if(!IsPlayerInRangeOfPoint( playerid, 10.0, BizInfo[pData[playerid][pBusiness]][EnterBiz][0], BizInfo[pData[playerid][pBusiness]][EnterBiz][1], BizInfo[pData[playerid][pBusiness]][EnterBiz][2] ) ) return SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √Æ√™√Æ√´√Æ √°√®√ß√≠√•√±√†");

	string[0] = EOS;
	if(params[1] < BizInfo[pData[playerid][pBusiness]][bPrice])
	{
	    format(string, 55, "√ñ√•√≠√† √§√Æ√´√¶√≠√† √°√ª√≤√º √≠√• √¨√•√≠√º√∏√• %d$ (√£√Æ√±. √∂√•√≠√†)", BizInfo[pData[playerid][pBusiness]][bPrice]);
	 	return SCM(playerid, COLOR_LIGHTGREY, string);
	}
	if(params[1] > 50000000) 
		return SCM(playerid, COLOR_LIGHTGREY, "√ì√™√†√ß√†√≠√† √±√´√®√∏√™√Æ√¨ √°√Æ√´√º√∏√†√ø √±√≥√¨√¨√†");

	if(pData[params[0]][pCash] < params[1]) return SCM(playerid, COLOR_LIGHTGREY, "√ì √®√£√∞√Æ√™√† No √±√≤√Æ√´√º√™√Æ √§√•√≠√•√£");
	if(!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
    if(GetPVarInt(playerid, "cancel_act")) return SCM(playerid, COLOR_GREY, "√Ç√ª √≥√¶√• √±√§√•√´√†√´√® √™√†√™√Æ√•-√≤√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √Ç√¢√•√§√®√≤√• "CBLUE"/revoke"CGREY", √∑√≤√Æ√°√ª √Æ√≤√Æ√ß√¢√†√≤√º √•√£√Æ");
    if(GetPVarInt(params[0], "offer") != 9999) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™√≥ √≥√¶√• √±√§√•√´√†√´√® √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √é√≠ √§√Æ√´√¶√•√≠ {00cc00}√Ø√∞√®√≠√ø√≤√º "CLIGHTGREY"√®√´√® "CERROR"√Æ√≤√¨√•√≠√®√≤√º "CLIGHTGREY"√•√£√Æ");
	SetPVarInt(params[0], "sellerbiz", playerid);
	SetPVarInt(params[0], "bizcost", params[1]);
    SetPVarInt(params[0], "offer", 1);
    if(pData[playerid][unikauto_Have] != 0) {
    	SCMF(params[0], COLOR_BLUE, "%s √µ√Æ√∑√•√≤ √Ø√∞√ÆS√≠√≤√º √Ç√†√¨ √±√¢√Æ√© √°√®√ß√≠√•√± "CYELLOW"√Ä√¢√≤√Æ√±√†√´√Æ√≠ √Ω√™√±√™√´√æ√ß√®√¢√≠√ª√µ √†√¢√≤√Æ "CBLUE"√ß√† %d$", pData[playerid][pName],params[1]);
    	SCMF(playerid,COLOR_BLUE,"√Ç√ª √Ø√∞√•√§√´√Æ√¶√®√´√® √™√≥√Ø√®√≤√º %s √Ç√†√∏ √°√®√ß√≠√•√± "CYELLOW"√Ä√¢√≤√Æ√±√†√´√Æ√≠ √Ω√™√±√™√´√æ√ß√®√¢√≠√ª√µ √†√¢√≤√Æ "CBLUE"√ß√† %d$", GetName(params[0]),params[1]);
    }
    if(pData[playerid][autoHave] != 0) {
    	SCMF(params[0], COLOR_BLUE, "%s √µ√Æ√∑√•√≤ √Ø√∞√ÆS√≠√≤√º √Ç√†√¨ √±√¢√Æ√© √°√®√ß√≠√•√± "CYELLOW"√Ä√¢√≤√Æ√¨√Æ√°√®√´√º√≠√†√ø √¥√†√°√∞√®√™√† "CBLUE"√ß√† %d$", pData[playerid][pName],params[1]);
    	SCMF(playerid,COLOR_BLUE,"√Ç√ª √Ø√∞√•√§√´√Æ√¶√®√´√® √™√≥√Ø√®√≤√º %s √Ç√†√∏ √°√®√ß√≠√•√± "CYELLOW"√Ä√¢√≤√Æ√¨√Æ√°√®√´√º√≠√†√ø √¥√†√°√∞√®√™√† "CBLUE"√ß√† %d$", GetName(params[0]),params[1]);
    }
    else if(pData[playerid][prok_have] != 0) {
    	SCMF(params[0], COLOR_BLUE, "%s √µ√Æ√∑√•√≤ √Ø√∞√ÆS√≠√≤√º √Ç√†√¨ √±√¢√Æ√© √°√®√ß√≠√•√± "CYELLOW"√è√≥√≠√™√≤ √Ø√∞√Æ√™√†√≤√† "CBLUE"√ß√† %d$", pData[playerid][pName],params[1]);
    	SCMF(playerid,COLOR_BLUE,"√Ç√ª √Ø√∞√•√§√´√Æ√¶√®√´√® √™√≥√Ø√®√≤√º %s √Ç√†√∏ √°√®√ß√≠√•√± "CYELLOW"√è√≥√≠√™√≤ √Ø√∞√Æ√™√†√≤√† "CBLUE"√ß√† %d$", GetName(params[0]),params[1]);
    }
    else if(pData[playerid][kiosk_have] != 0) {
    	SCMF(params[0], COLOR_BLUE, "%s √µ√Æ√∑√•√≤ √Ø√∞√ÆS√≠√≤√º √Ç√†√¨ √±√¢√Æ√© √°√®√ß√≠√•√± "CYELLOW"√ä√®√Æ√±√™ "CBLUE"√ß√† %d$", pData[playerid][pName],params[1]);
    	SCMF(playerid,COLOR_BLUE,"√Ç√ª √Ø√∞√•√§√´√Æ√¶√®√´√® √™√≥√Ø√®√≤√º %s √Ç√†√∏ √°√®√ß√≠√•√± "CYELLOW"√ä√®√Æ√±√™ "CBLUE"√ß√† %d$", GetName(params[0]),params[1]);
    }
    else if(pData[playerid][food_have] != 0) {
    	SCMF(params[0], COLOR_BLUE, "%s √µ√Æ√∑√•√≤ √Ø√∞√ÆS√≠√≤√º √Ç√†√¨ √±√¢√Æ√© √°√®√ß√≠√•√± "CYELLOW"√ã√†√∞√•√™ √± √•√§√Æ√© "CBLUE"√ß√† %d$", pData[playerid][pName],params[1]);
    	SCMF(playerid,COLOR_BLUE,"√Ç√ª √Ø√∞√•√§√´√Æ√¶√®√´√® √™√≥√Ø√®√≤√º %s √Ç√†√∏ √°√®√ß√≠√•√± "CYELLOW"√ã√†√∞√•√™ √± √•√§√Æ√© "CBLUE"√ß√† %d$", GetName(params[0]),params[1]);
    }
    else {
    	SCMF(params[0], COLOR_BLUE, "%s √µ√Æ√∑√•√≤ √Ø√∞√ÆS√≠√≤√º √Ç√†√¨ √±√¢√Æ√© √°√®√ß√≠√•√± "CYELLOW"%s "CBLUE"√ß√† %d$", pData[playerid][pName],BizInfo[pData[playerid][pBusiness]][bName],params[1]);
 		SCMF(playerid,COLOR_BLUE,"√Ç√ª √Ø√∞√•√§√´√Æ√¶√®√´√® √™√≥√Ø√®√≤√º %s √Ç√†√∏ √°√®√ß√≠√•√± "CYELLOW"%s "CBLUE"√ß√† %d$", GetName(params[0]),BizInfo[pData[playerid][pBusiness]][bName],params[1]);
    }
    SetPVarInt(playerid, "cancel_act", 1); SetPVarInt(playerid, "cancel_act_id", params[0]);
    return SCM(params[0], -1, "√ç√†√¶√¨√®√≤√• "CMAIN"Y "CWHITE"√∑√≤√Æ√°√ª √±√Æ√£√´√†√±√®√≤√º√±√ø √®√´√® "CERROR"N "CWHITE"√§√´√ø √Æ√≤√™√†√ß√†");
}
CMD:buyfuel(playerid) {
	new filling = -1, bool: st_mess;
	if(pData[playerid][unikauto_Have] != 0 || pData[playerid][autoHave] != 0 || pData[playerid][pBusiness] != -1 || pData[playerid][pFilling] != -1 || pData[playerid][food_have] != 0 || pData[playerid][prok_have] != 0 || pData[playerid][kiosk_have] != 0) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≥√¶√• √•√±√≤√º √°√®√ß√≠√•√± √®√´√® √Ä√á√ë");
	for(new b = 1; b != FILLING_TOTAL+1; b++) {
		if(!IsPlayerInRangeOfPoint(playerid, 10.0, Filling[b][fPos][0], Filling[b][fPos][1], Filling[b][fPos][2])) continue;
		filling = b; st_mess = true; new bf_tstr[50];
		if(strcmp(Filling[b][fOwner], "None", true)) continue;
		if(pData[playerid][pCash] < Filling[b][fPrice]) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Ø√Æ√™√≥√Ø√™√® √Ω√≤√Æ√© √Ä√á√ë");
		SetPVarInt(playerid, "fillnum_buy", b);
		format(bf_tstr, 50, ""CMAIN"%s", Filling[b][ffName]);
		SPD(playerid, 2448, DIALOG_STYLE_MSGBOX, bf_tstr, ""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √Ø√∞√®√Æ√°√∞√•√±√≤√® √Ω√≤√≥ √Ä√á√ë?", "S√≠", "No");
		break;
	}
	if(!st_mess) return SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √Æ√™√Æ√´√Æ √Ä√á√ë");
	if(strcmp(Filling[filling][fOwner], "None", true)) return SCM(playerid, COLOR_GREY, "√ì √Ω√≤√Æ√© √Ä√á√ë √≥√¶√• √•√±√≤√º √¢√´√†√§√•√´√•√∂");
	return 1;
}
CMD:give(playerid, params[]) {
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /give [id √®√£√∞√Æ√™√†]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(params[0] == playerid) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Ø√•√∞√•S√≠√≤√º √∑√≤√Æ-√≤√Æ √±√•√°√•");
	if(!ProxDetectorS(3.5, playerid, params[0])) return SCM(playerid, COLOR_GREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
	SetPVarInt(playerid, "give_targetplayer", params[0]);
	return SPD(playerid, 1955, DIALOG_STYLE_LIST, "{bf8040}√ó√≤√Æ Quieres √Ø√•√∞√•S√≠√≤√º?", "[1] √è√†√≤√∞√Æ√≠√ª\n[2] √ç√†√∞√™√Æ√≤√®√™√®\n[3] √å√•√≤√†√´√´\n[4] √Ä√Ø√≤√•√∑√™√®\n[5] √å√†√±√™√®", "Seleccione", "Cerrar");
}
CMD:givephone(playerid, params[]) {
	if(!IsAMafia(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√î√≥√≠√™√∂√®√ø √§√Æ√±√≤√≥√Ø√≠√† √≤√Æ√´√º√™√Æ √¨√†√¥√®√ø√¨");
	if(pData[playerid][pRank] < 3) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√†√¨ √≠√•√§√Æ√±√≤√≥√Ø√≠√† S√≠√≠√≠√†√ø √¥√≥√≠√™√∂√®√ø");
	if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /givephone [id √®√£√∞√Æ√™√†]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
	if(params[0] == playerid) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√´√º√ß√ø √¢√•√∞√≠√≥√≤√º √≤√•√´√•√¥√Æ√≠ √±√†√¨√Æ√¨√≥ √±√•√°√•");
	string[0] = EOS;
	format(string,128, "%s %s √¢√•√∞√≠√≥√´ √¢√†√¨ √≤√•√´√•√¥√Æ√≠", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], pData[playerid][pName]);
	SCM(params[0], COLOR_BLUE, string); DeletePVar(params[0], "takephone");
	format(string,128, "%s %s √¢√•√∞√≠√≥√´ √≤√•√´√•√¥√Æ√≠ %s", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], pData[playerid][pName] ,GetName(params[0]));
	return ProxDetector(30.0, playerid, string, COLOR_PURPLE);
}
CMD:to(playerid, params[]) {
	if(!player_is_taxi[playerid]) return SCM(playerid, COLOR_LIGHTGREY, "√î√≥√≠√™√∂√®√ø √§√Æ√±√≤√≥√Ø√≠√† √≤√Æ√´√º√™√Æ √≤√†√™√±√®√±√≤√†√¨, √≠√†√µ√Æ√§√ø√π√®√¨√±√ø √¢ √≤√†√™√±√®");
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_GREY, "Usar√≤√•: /to [id √®√£√∞√Æ√™√†]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(!GetPVarInt(params[0], "ring_taxi")) return SCM(playerid, COLOR_GREY, "√ù√≤√Æ√≤ √®√£√∞√Æ√™ √≠√• √¢√ª√ß√ª√¢√†√´ √≤√†√™√±√® √®√´√® √•√£√Æ √¢√ª√ß√Æ√¢ √≥√¶√• √Ø√∞√®√≠√ø√´√®");
	DeletePVar(params[0], "ring_taxi");
	new Float:place_player[3];
	GetPlayerPos(params[0], place_player[0], place_player[1], place_player[2]);
	SetPlayerCheckpoint(playerid, place_player[0], place_player[1], place_player[2], 6.0);
	SetPVarInt(playerid, "vizov_prinyat", true);
	PlayerPlaySound(playerid, 4601, 0.0, 0.0, 0.0);
	SCMF(playerid, 0x009933FF, "√Ç√ª √Ø√∞√®√≠√ø√´√® √¢√ª√ß√Æ√¢ √Æ√≤ %s. √ç√† √Ç√†√∏√•√¨ GPS √≥√±√≤√†√≠√Æ√¢√´√•√≠√† √¨√•√≤√™√† √≤√•√™√≥√π√•√£√Æ √∞√†√±√Ø√Æ√´√Æ√¶√•√≠√®√ø √®√£√∞√Æ√™√†", GetName(params[0]));
	format(string, 128, "√í√†√™√±√®√±√≤ %s √Ø√∞√®√≠√ø√´ √¢√ª√ß√Æ√¢ √≤√†√™√±√® √Æ√≤ %s", GetName(playerid), GetName(params[0]));
	message_taxi_around(params[0], COLOR_PALEGREEN, string);
	return SCMF(params[0], 0x009933FF, "√í√†√™√±√®√±√≤ %s √Ø√∞√®√≠√ø√´ √Ç√†√∏ √¢√ª√ß√Æ√¢. √é√¶√®S√≠√©√≤√•", GetName(playerid));
}
CMD:callto(playerid, params[]) {
	if(!IsAMedic(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√î√≥√≠√™√∂√®√ø √§√Æ√±√≤√≥√Ø√≠√† √≤√Æ√´√º√™√Æ √∞√†√°√Æ√≤√≠√®√™√†√¨ √°√Æ√´√º√≠√®√∂√ª");
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 416) return SCM(playerid, COLOR_LIGHTGREY, "√Ñ√´√ø √Ø√∞√®√≠√ø√≤√®√ø √¢√ª√ß√Æ√¢√Æ√¢ √≠√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √¨√†√∏√®√≠√• √±√™√Æ√∞√Æ√© √Ø√Æ√¨√Æ√π√®");
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_GREY, "Usar√≤√•: /callto [id √®√£√∞√Æ√™√†]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(!GetPVarInt(params[0], "ring_mz")) return SCM(playerid, COLOR_GREY, "√ù√≤√Æ√≤ √®√£√∞√Æ√™ √≠√• √¢√ª√ß√ª√¢√†√´ √±√™√Æ√∞√≥√æ √Ø√Æ√¨√Æ√π√º √®√´√® √•√£√Æ √¢√ª√ß√Æ√¢ √≥√¶√• √Ø√∞√®√≠√ø√´√®");
	DeletePVar(params[0], "ring_mz");
	new Float:place_player[3];
	GetPlayerPos(params[0], place_player[0], place_player[1], place_player[2]);
	SetPlayerCheckpoint(playerid, place_player[0], place_player[1], place_player[2], 6.0);
	SetPVarInt(playerid, "vizov_prinyat", true);
	PlayerPlaySound(playerid, 4601, 0.0, 0.0, 0.0);
	SCMF(playerid, 0xFF6666FF, "√Ç√ª √Ø√∞√®√≠√ø√´√® √¢√ª√ß√Æ√¢ √Æ√≤ %s. √ç√† √Ç√†√∏√•√¨ GPS √≥√±√≤√†√≠√Æ√¢√´√•√≠√† √¨√•√≤√™√† √≤√•√™√≥√π√•√£√Æ √∞√†√±√Ø√Æ√´√Æ√¶√•√≠√®√ø √®√£√∞√Æ√™√†", GetName(params[0]));
	format(string, 128, "%s %s √Ø√∞√®√≠√ø√´ √¢√ª√ß√Æ√¢ √±√™√Æ√∞√Æ√© √Ø√Æ√¨√Æ√π√® √Æ√≤ %s", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], GetName(playerid), GetName(params[0]));
	SFFM_Call_MZ(4, 0xFF6666FF, string); SFFM_Call_MZ(28, 0xFF6666FF, string); SFFM_Call_MZ(29, 0xFF6666FF, string); SFFM_Call_MZ(23, 0xFF6666FF, string);
	return SCMF(params[0], 0xFF6666FF, "%s %s √Ø√∞√®√≠√ø√´ √Ç√†√∏ √¢√ª√ß√Æ√¢. √é√¶√®S√≠√©√≤√•", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], GetName(playerid));
}
CMD:takecall(playerid, params[]) {
	if(!IsACop(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√î√≥√≠√™√∂√®√ø √§√Æ√±√≤√≥√Ø√≠√† √≤√Æ√´√º√™√Æ √±√Æ√≤√∞√≥√§√≠√®√™√†√¨ √å√Ç√Ñ");
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 596) return SCM(playerid, COLOR_LIGHTGREY, "√Ñ√´√ø √Ø√∞√®√≠√ø√≤√®√ø √¢√ª√ß√Æ√¢√Æ√¢ √≠√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √Ø√†√≤√∞√≥√´√º√≠√Æ√¨ √†√¢√≤√Æ√¨√Æ√°√®√´√•");
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /takecall [id √®√£√∞√Æ√™√†]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(!GetPVarInt(params[0], "ring_mvd")) return SCM(playerid, COLOR_GREY, "√ù√≤√Æ√≤ √®√£√∞√Æ√™ √≠√• √¢√ª√ß√ª√¢√†√´ √Ø√Æ√´√®√∂√®√æ √®√´√® √•√£√Æ √¢√ª√ß√Æ√¢ √≥√¶√• √Ø√∞√®√≠√ø√´√®");
	DeletePVar(params[0], "ring_mvd");
	SetPVarInt(playerid, "vizov_prinyat", true);
	new Float: place_player[3];
	PlayerPlaySound(playerid, 4601, 0.0, 0.0, 0.0);
	GetPlayerPos(params[0], place_player[0], place_player[1], place_player[2]);
	SetPlayerCheckpoint(playerid, place_player[0], place_player[1], place_player[2], 6.0);
	format(string, 128, "%s %s √Ø√∞√®√≠√ø√´ √¢√ª√ß√Æ√¢ √Ø√Æ√´√®√∂√®√® √Æ√≤ %s", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], GetName(playerid), GetName(params[0]));
	SFFM_Call_PD(1, 0x00CCFFAA, string); SFFM_Call_PD(2, 0x00CCFFAA, string); SFFM_Call_PD(21, 0x00CCFFAA, string); SFFM_Call_PD(22, 0x00CCFFAA, string); SFFM_Call_PD(10, 0x00CCFFAA, string);
	SCMF(playerid, COLOR_LITEBLUE, "√Ç√ª √Ø√∞√®√≠√ø√´√® √¢√ª√ß√Æ√¢ √Æ√≤ %s. √ç√† √Ç√†√∏√•√¨ GPS √≥√±√≤√†√≠√Æ√¢√´√•√≠√† √¨√•√≤√™√† √≤√•√™√≥√π√•√£√Æ √∞√†√±√Ø√Æ√´√Æ√¶√•√≠√®√ø √®√£√∞√Æ√™√†", GetName(params[0]));
	return SCMF(params[0], 0x00CCFFFF, "%s %s √Ø√∞√®√≠√ø√´ √Ç√†√∏ √¢√ª√ß√Æ√¢. √é√¶√®S√≠√©√≤√•", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], GetName(playerid));
}
CMD:takephone(playerid, params[]) {
	if(!IsAMafia(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√î√≥√≠√™√∂√®√ø √§√Æ√±√≤√≥√Ø√≠√† √≤√Æ√´√º√™√Æ √¨√†√¥√®√ø√¨");
	if(pData[playerid][pRank] < 3) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √°√ª√≤√º 3 √∞√†√≠√£√Æ√¨");
	if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /takephone [id √®√£√∞√Æ√™√†]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(GetPVarInt(params[0], "takephone") > 0) return SCM(playerid, COLOR_LIGHTGREY, "√ì √≠√•√£√Æ No √≤√•√´√•√¥√Æ√≠√†");
	if(!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
	if(params[0] == playerid) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√´√º√ß√ø √ß√†√°√∞√†√≤√º √≤√•√´√•√¥√Æ√≠ √≥ √±√†√¨√Æ√£√Æ √±√•√°√ø");
	string[0] = EOS;
	if(pData[playerid][pSex] == 1) format(string,128, "%s %s √®√ß√∫√ø√´ √≥ √Ç√†√± √≤√•√´√•√¥√Æ√≠", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], pData[playerid][pName]);
	else format(string,128, "%s %s √®√ß√∫√ø√´√† √≥ √Ç√†√± √≤√•√´√•√¥√Æ√≠", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], pData[playerid][pName]);
	SCM(params[0], COLOR_BLUE, string);
	SetPVarInt(params[0], "takephone",1);
	if(pData[playerid][pSex] == 1) format(string,128, "%s %s √®√ß√∫√ø√´ √≤√•√´√•√¥√Æ√≠ √≥ %s", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], pData[playerid][pName] ,GetName(params[0]));
	else format(string,128, "%s %s √®√ß√∫√ø√´√† √≤√•√´√•√¥√Æ√≠ √≥ %s", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], pData[playerid][pName] ,GetName(params[0])); 
	return ProxDetector(30.0, playerid, string, COLOR_PURPLE);
}
CMD:pass(playerid, params[]) {
	new stringnick[96];
	if(!pData[playerid][pPassport]) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √Ø√†√±√Ø√Æ√∞√≤√†. √Ç√ª √¨√Æ√¶√•√≤√• √Ø√Æ√´√≥√∑√®√≤√º √•√£√Æ √≥ √Ø√†√±√Ø√Æ√∞√≤√®√±√≤√™√® √¢ √¨√Ω√∞√®√® √ã√Æ√±-√ë√†√≠√≤√Æ√±√†");
	if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /pass [id √®√£√∞√Æ√™√†]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
	if(params[0] == playerid) {
		new text[300], Member[250], phone[20], sexp[46]; MeAction(playerid, "√Ø√∞√Æ√±√¨√†√≤√∞√®√¢√†√•√≤ √±√¢√Æ√© √Ø√†√±√Ø√Æ√∞√≤");
		new text_car_1[70], text_car_2[70], text_car_3[70];
		if(pData[playerid][pHotel] != -1) {
			new h = pData[playerid][pHotel];
			if(pData[playerid][pCar][0] != 0) format(text_car_1, 70, VehicleNames[pData[playerid][pCar][0] - 400]);
			else strcat(text_car_1, "{ff4d4d}√é√≤√±√≥√≤√±√≤√¢√≥√•√≤");
			format(text, 300, ""CWHITE"√è√∞√Æ√¶√®√¢√†√≠√®√•: "CLIGHTBLUE"√ç√Æ√¨√•√∞ %d √≠√† %d √Ω√≤√†√¶√•"CWHITE"\n√Ñ√Æ√¨. √†√¢√≤√Æ√¨√Æ√°√®√´√º: {99cc33}%s"CWHITE"", get_orig_num_hotel(h), hotel_info[h][hotel_floor], text_car_1);
		}
		else if(pData[playerid][pFlat] != -1 || pData[playerid][p_rent_flat] != -1) {
			if(pData[playerid][pFlat] != -1) {
				if(pData[playerid][pCar][0] != 0) format(text_car_1, 70, VehicleNames[pData[playerid][pCar][0] - 400]);
				else strcat(text_car_1, "{ff4d4d}√é√≤√±√≥√≤√±√≤√¢√≥√•√≤");
				format(text, 300, ""CWHITE"√è√∞√Æ√¶√®√¢√†√≠√®√•: "CLIGHTBLUE"√ä√¢√†√∞√≤√®√∞√† ¬π%d"CWHITE"\n√Ñ√Æ√¨. √†√¢√≤√Æ√¨√Æ√°√®√´√º: {99cc33}%s"CWHITE"", pData[playerid][pFlat], text_car_1);
			}
			else format(text, 300, ""CWHITE"√è√∞√Æ√¶√®√¢√†√≠√®√•: "CLIGHTBLUE"√ä√¢√†√∞√≤√®√∞√† ¬π%d"CWHITE"", pData[playerid][p_rent_flat]);
		}
		else if(pData[playerid][pHouse] != -1) {
			new Float: x,  Float: y;
			new h = pData[playerid][pHouse];
			x = HouseInfo[h][hEnter][0];
			y = HouseInfo[h][hEnter][1];
			new ids = GetCityName ( x, y );
			new id = GetZonaName ( x, y );
			if(pData[playerid][pCar][0] != 0) format(text_car_1, 70, VehicleNames[pData[playerid][pCar][0] - 400]);
			else strcat(text_car_1, "{ff4d4d}√é√≤√±√≥√≤√±√≤√¢√≥√•√≤");
			if(pData[playerid][pCar][1] != 0) format(text_car_2, 70, VehicleNames[pData[playerid][pCar][1] - 400]);
			else strcat(text_car_2, "{ff4d4d}√é√≤√±√≥√≤√±√≤√¢√≥√•√≤");
			if(pData[playerid][pCar][2] != 0) format(text_car_3, 70, VehicleNames[pData[playerid][pCar][2] - 400]);
			else strcat(text_car_3, "{ff4d4d}√é√≤√±√≥√≤√±√≤√¢√≥√•√≤");
			format(text, 300, ""CWHITE"√É√Æ√∞√Æ√§ / √§√•√∞√•√¢√≠√ø: {cccc00}%s"CWHITE"\n√ê√†√©√Æ√≠: {cccc00}%s"CWHITE"\n√è√∞√Æ√¶√®√¢√†√≠√®√•: "CLIGHTBLUE"√Ñ√Æ√¨ ¬π%d"CWHITE"\n√Ñ√Æ√¨. √†√¢√≤√Æ√¨√Æ√°√®√´√º ¬π1: {99cc33}%s\n"CWHITE"√Ñ√Æ√¨. √†√¢√≤√Æ√¨√Æ√°√®√´√º ¬π2: {99cc33}%s\n"CWHITE"√Ñ√Æ√¨. √†√¢√≤√Æ√¨√Æ√°√®√´√º ¬π3: {99cc33}%s"CWHITE"", gSAZonesCity[ids][SAZONE_NAME], gSAZones[id][SAZONE_NAME], pData[playerid][pHouse], text_car_1, text_car_2, text_car_3);
		}
		else format(text, 300, ""CWHITE"√É√Æ√∞√Æ√§ / √§√•√∞√•√¢√≠√ø: {cccc00}No √®√≠√¥√Æ√∞√¨√†√∂√®√®"CWHITE"\n√ê√†√©√Æ√≠: {cccc00}No √®√≠√¥√Æ√∞√¨√†√∂√®√®"CWHITE"\n√è√∞√Æ√¶√®√¢√†√≠√®√•: "CLIGHTBLUE"No √®√≠√¥√Æ√∞√¨√†√∂√®√®"CWHITE"");
		if(GetPVarInt(playerid, "disguise_enabled")) format(Member, sizeof(Member), ""CWHITE"√é√∞√£√†√≠√®√ß√†√∂√®√ø: "CBLUE"%s"CWHITE"\n√Ñ√Æ√´√¶√≠√Æ√±√≤√º: "CBLUE"%s"CWHITE"", FractionInfo[GetPVarInt(playerid, #fraction_id)][fName], new_rank_name[GetPVarInt(playerid, #fraction_id) - 1][GetPVarInt(playerid, "SPY_rank_id")]);
		else if(pData[playerid][pMember] != 0) format(Member,sizeof(Member),""CWHITE"√é√∞√£√†√≠√®√ß√†√∂√®√ø: "CBLUE"%s"CWHITE"\n√Ñ√Æ√´√¶√≠√Æ√±√≤√º: "CBLUE"%s"CWHITE"",GetMember[pData[playerid][pMember] - 1], new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1]);
		else if(pData[playerid][pJob] != 0) format(Member,sizeof(Member),""CWHITE"√ê√†√°√Æ√≤√†: {40bf80}%s",GetJobName(pData[playerid][pJob]));
		else format(Member,250,""CWHITE"√é√∞√£√†√≠√®√ß√†√∂√®√ø: "CBLUE"No √®√≠√¥√Æ√∞√¨√†√∂√®√®"CWHITE"\n√Ñ√Æ√´√¶√≠√Æ√±√≤√º: "CBLUE"No √®√≠√¥√Æ√∞√¨√†√∂√®√®"CWHITE"\n√ê√†√°√Æ√≤√†: {40bf80}No √®√≠√¥√Æ√∞√¨√†√∂√®√®");

		if(pData[playerid][pSex] == 1) {
			if(!strcmp(pData[playerid][pFamilyName],"None", true)) format(sexp, sizeof(sexp), "√ç√• √¶√•√≠√†√≤");
			else if(!strcmp(pData[playerid][pFamilyName],"No", true)) format(sexp, sizeof(sexp), "√ç√• √¶√•√≠√†√≤");
			else format(sexp, sizeof(sexp), "√Ü√•√≠√†√≤ √≠√† %s", pData[playerid][pFamilyName]);
		}
		else {
			if(!strcmp(pData[playerid][pFamilyName],"None", true)) format(sexp, sizeof(sexp), "√ç√• √ß√†√¨√≥√¶√•√¨");
			else if(!strcmp(pData[playerid][pFamilyName],"No", true)) format(sexp, sizeof(sexp), "√ç√• √ß√†√¨√≥√¶√•√¨");
			else format(sexp, sizeof(sexp), "√á√†√¨√≥√¶√•√¨ √ß√† %s", pData[playerid][pFamilyName]);
		}
		if(pData[playerid][pPnumber] == -1) format(phone,sizeof phone, "No √®√≠√¥√Æ√∞√¨√†√∂√®√®");
		else format(phone,sizeof phone, "%d", pData[playerid][pPnumber]);
		format(stringnick,56,"{FFCD00}√è√†√±√Ø√Æ√∞√≤ %s",pData[playerid][pName]);
		format(string, 1000, ""CWHITE"√à√¨√ø: "CBLUE"%s"CWHITE"\n√è√∞√Æ√¶√®√¢√†√≠√®√• √¢ √±√≤√∞√†√≠√• (√´√•√≤): {00cc66}%d"CWHITE"\n√í√•√´√•√¥√Æ√≠: "CPALEGREEN"%s"CWHITE"\n√ë√•√¨√•√©√≠√Æ√• √Ø√Æ√´√Æ√¶√•√≠√®√•: %s\n√è√Æ√´: %s\n√á√†√™√Æ√≠√Æ√Ø√Æ√±√´√≥√∏√≠√Æ√±√≤√º: "CBLUE"%d"CWHITE"\n\
		√ì√∞√Æ√¢√•√≠√º √∞√Æ√ß√ª√±√™√†: "CBLUE"%d"CWHITE"\n%s\n%s",
		pData[playerid][pName],pData[playerid][pLevel],phone,sexp,(pData[playerid][pSex] == 1) ? ("√å√≥√¶√±√™√Æ√©") : ("√Ü√•√≠√±√™√®√©"),pData[playerid][pZakonp],pData[playerid][pWanted],text,Member);
		return SPD(params[0], 000, DIALOG_STYLE_MSGBOX, stringnick, string, "Cerrar", "");
	}
	if(GetPVarInt(playerid, "cancel_act")) return SCM(playerid, COLOR_GREY, "√Ç√ª √≥√¶√• √±√§√•√´√†√´√® √™√†√™√Æ√•-√≤√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √Ç√¢√•√§√®√≤√• "CBLUE"/revoke"CGREY", √∑√≤√Æ√°√ª √Æ√≤√Æ√ß√¢√†√≤√º √•√£√Æ");
	if(GetPVarInt(params[0], "offer") != 9999) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™√≥ √≥√¶√• √±√§√•√´√†√´√® √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √é√≠ √§√Æ√´√¶√•√≠ {00cc00}√Ø√∞√®√≠√ø√≤√º "CLIGHTGREY"√®√´√® "CERROR"√Æ√≤√¨√•√≠√®√≤√º "CLIGHTGREY"√•√£√Æ");
	SCMF(playerid, COLOR_BLUE, "√Ç√ª √Ø√∞√•√§√´√Æ√¶√®√´√® %s √Ø√Æ√±√¨√Æ√≤√∞√•√≤√º √Ç√†√∏ √Ø√†√±√Ø√Æ√∞√≤", GetName(params[0]));
	SCMF(params[0], COLOR_BLUE, "%s √µ√Æ√∑√•√≤ √Ø√Æ√™√†√ß√†√≤√º √¢√†√¨ √±√¢√Æ√© √Ø√†√±√Ø√Æ√∞√≤", pData[playerid][pName]);
	SetPVarInt(playerid, "cancel_act", 1); SetPVarInt(playerid, "cancel_act_id", params[0]);
	SetPVarInt(params[0], "offer", 1); SetPVarInt(params[0], "offer_PASS", 1); SetPVarInt(params[0], "PASS_targetid", playerid);
	return SCM(params[0], -1, "√ç√†√¶√¨√®√≤√• "CMAIN"Y "CWHITE"√∑√≤√Æ√°√ª √±√Æ√£√´√†√±√®√≤√º√±√ø √®√´√® "CERROR"N "CWHITE"√§√´√ø √Æ√≤√™√†√ß√†");
}
CMD:upass(playerid, params[]) {
	if(!IsACop(playerid) && !IsAArm(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √±√Æ√±√≤√Æ√®√≤√• √¢ √å√Ç√Ñ √®√´√® √å√é");
	new to_id;
	if(sscanf(params,"d",to_id)) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /upass [id √®√£√∞√Æ√™√†]");
	if(!IsPlayerConnected(to_id)) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(!ProxDetectorS(8.0, playerid, to_id)) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
	new str_num[20];
	valstr(str_num, pData[playerid][pPnumber]);
	if(to_id == playerid) {
		string[0] = EOS;
		MeAction(playerid, "√Ø√∞√Æ√±√¨√†√≤√∞√®√¢√†√•√≤ √±√¢√Æ¬∏ √≥√§√Æ√±√≤√Æ√¢√•√∞√•√≠√®√•");
		if(!GetPVarInt(playerid, "disguise_enabled")) format(string,250, ""CWHITE"√à√¨√ø: %s\n√í√•√´√•√¥√Æ√≠: %s\n√è√∞√Æ√¶√®√¢√†√•√≤ √¢ √∏√≤√†√≤√•: %d √´√•√≤\n√è√Æ√§√∞√†√ß√§√•√´√•√≠√®√•: %s\n√Ñ√Æ√´√¶√≠√Æ√±√≤√º: %s", pData[playerid][pName], (pData[playerid][pPnumber] == -1) ? ("No") : (str_num), pData[playerid][pLevel],FractionInfo[pData[playerid][pMember]][fName],new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1]);
		else format(string,250, ""CWHITE"√à√¨√ø: %s\n√í√•√´√•√¥√Æ√≠: %s\n√è√∞√Æ√¶√®√¢√†√•√≤ √¢ √∏√≤√†√≤√•: %d √´√•√≤\n√è√Æ√§√∞√†√ß√§√•√´√•√≠√®√•: %s\n√Ñ√Æ√´√¶√≠√Æ√±√≤√º: %s", pData[playerid][pName], (pData[playerid][pPnumber] == -1) ? ("No") : (str_num), pData[playerid][pLevel],FractionInfo[GetPVarInt(playerid, #fraction_id)][fName], new_rank_name[GetPVarInt(playerid, #fraction_id) - 1][GetPVarInt(playerid, "SPY_rank_id")]);
        return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CMAIN"√ì√§√Æ√±√≤√Æ√¢√•√∞√•√≠√®√•",string, "Cerrar", "");
	}
	if(GetPVarInt(playerid, "cancel_act")) return SCM(playerid, COLOR_GREY, "√Ç√ª √≥√¶√• √±√§√•√´√†√´√® √™√†√™√Æ√•-√≤√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √Ç√¢√•√§√®√≤√• "CBLUE"/revoke"CGREY", √∑√≤√Æ√°√ª √Æ√≤√Æ√ß√¢√†√≤√º √•√£√Æ");
	if(GetPVarInt(to_id, "offer") != 9999) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™√≥ √≥√¶√• √±√§√•√´√†√´√® √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √é√≠ √§√Æ√´√¶√•√≠ {00cc00}√Ø√∞√®√≠√ø√≤√º "CLIGHTGREY"√®√´√® "CERROR"√Æ√≤√¨√•√≠√®√≤√º "CLIGHTGREY"√•√£√Æ");
	SCMF(playerid, COLOR_BLUE, "√Ç√ª √Ø√∞√•√§√´√Æ√¶√®√´√® %s √Ø√Æ√±√¨√Æ√≤√∞√•√≤√º √Ç√†√∏√• √≥√§√Æ√±√≤√Æ√¢√•√∞√•√≠√®√•", GetName(to_id));
	SCMF(to_id, COLOR_BLUE, "%s √µ√Æ√∑√•√≤ √Ø√Æ√™√†√ß√†√≤√º √¢√†√¨ √±√¢√Æ¬∏ √≥√§√Æ√±√≤√Æ√¢√•√∞√•√≠√®√•", pData[playerid][pName]);
	SetPVarInt(playerid, "cancel_act", 1); SetPVarInt(playerid, "cancel_act_id", to_id);
	SetPVarInt(to_id, "offer", 1); SetPVarInt(to_id, "offer_UPASS", 1); SetPVarInt(to_id, "UPASS_targetid", playerid);
	return SCM(to_id, -1, "√ç√†√¶√¨√®√≤√• "CMAIN"Y "CWHITE"√∑√≤√Æ√°√ª √±√Æ√£√´√†√±√®√≤√º√±√ø √®√´√® "CERROR"N "CWHITE"√§√´√ø √Æ√≤√™√†√ß√†");
}
CMD:cuff(playerid, params[]) {
	if(!IsACop(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √±√Æ√±√≤√Æ√®√≤√• √¢ √å√Ç√Ñ");
	new to_id;
	if(sscanf(params,"d",to_id)) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /cuff [id √®√£√∞√Æ√™√†]");
	if(!IsPlayerConnected(to_id)) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(PlayerTied{playerid} > false) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Ω√≤√≥ √¥√≥√≠√™√∂√®√æ √¢ S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤");
	if(pTemp[to_id][pAFK] >= AFK_SECOND) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√Æ√≤ √®√£√∞√Æ√™ √¢ AFK. √ç√† √≠√•√£√Æ √≠√•√´√º√ß√ø √≠√†√§√•√≤√º √≠√†√∞√≥√∑√≠√®√™√®");
	if(IsACop(to_id)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √≠√†√§√•√≤√º √≠√†√∞√≥√∑√≠√®√™√® √≠√† √±√Æ√≤√∞√≥√§√≠√®√™√† √å√Ç√Ñ");
	if(GetPVarInt(to_id, "PlayerCuffed") == 2) return SCM(playerid, COLOR_LIGHTGREY, "√ç√† √Ω√≤√Æ√£√Æ √®√£√∞√Æ√™√† √≥√¶√• √≠√†√§√•√≤√ª √≠√†√∞√≥√∑√≠√®√™√®");
	if(!GetPVarInt(to_id, #tazer_dest) && !Megaphone(GetPlayerVehicleID(to_id))) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √§√Æ√´√¶√•√≠ √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √Ø√†√≤√∞√≥√´√º√≠√Æ√¨ √†√¢√≤√Æ√¨√Æ√°√®√´√• √®√´√® √°√ª√≤√º √Æ√£√´√≥√∏√•√≠");
	if(!ProxDetectorS(2.0, playerid, to_id)) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
	if(to_id == playerid) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √≠√†√§√•√≤√º √≠√†√∞√≥√∑√≠√®√™√® √≠√† √±√†√¨√Æ√£√Æ √±√•√°√ø");
	string[0] = EOS;
	if(pData[playerid][pSex] == 1) format(string, 128, "%s %s √≠√†√§√•√´ √≠√† %s √≠√†√∞√≥√∑√≠√®√™√®", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], pData[playerid][pName], GetName(to_id));
	else format(string, 128, "%s %s √≠√†√§√•√´√† √≠√† %s √≠√†√∞√≥√∑√≠√®√™√®", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], pData[playerid][pName], GetName(to_id));
	SetPlayerAttachedObject(to_id, 2, 19418, 6, -0.011, 0.028, -0.022, -15.600012, -33.699977, -81.700035, 0.891999, 1.00, 1.168);
	GameTextForPlayer(to_id, "~r~Cuffed", 2500, 3);
	ProxDetector(30.0, playerid, string, COLOR_PURPLE);
	SetPlayerSpecialAction(to_id,SPECIAL_ACTION_CUFFED);
	SetPVarInt(to_id, "PlayerCuffed", 2);
	return SetPVarInt(to_id, "PlayerCuffedTime", 3600);
}
CMD:uncuff(playerid, params[]) {
	if(!IsACop(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √±√Æ√±√≤√Æ√®√≤√• √¢ √å√Ç√Ñ");
	new to_id;
	if(sscanf(params,"d",to_id)) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /uncuff [id √®√£√∞√Æ√™√†]");
	if(!IsPlayerConnected(to_id)) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(PlayerTied{playerid} > false) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Ω√≤√≥ √™√Æ√¨√†√≠√§√≥ √¢ S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤");
	if(!ProxDetectorS(5.0, playerid, to_id)) return SCM(playerid, COLOR_LIGHTGREY, "√ê√ø√§√Æ√¨ √± √Ç√†√¨√® √≠√®√™√Æ√£√Æ No");
	if(to_id == playerid) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √±√≠√ø√≤√º √≠√†√∞√≥√∑√≠√®√™√® √± √±√†√¨√Æ√£√Æ √±√•√°√ø");
	if(GetPVarInt(to_id, "PlayerCuffed") != 2) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√Æ√≤ √à√£√∞√Æ√™ √§√Æ√´√¶√•√≠ √°√ª√≤√º √¢ √≠√†√∞√≥√∑√≠√®√™√†√µ");
	string[0] = EOS;
	if(pData[playerid][pSex] == 1) format(string, 40, "√ë √Ç√†√± √±√≠√ø√´ √≠√†√∞√≥√∑√≠√®√™√® %s", pData[playerid][pName]);
	else format(string, 40, "√ë √Ç√†√± √±√≠√ø√´√† √≠√†√∞√≥√∑√≠√®√™√® %s", pData[playerid][pName]);
	SCM(to_id, COLOR_BLUE, string);
	GameTextForPlayer(to_id, "~g~Uncuffed", 2500, 3);
	if(IsPlayerAttachedObjectSlotUsed(to_id, 2)) RemovePlayerAttachedObject(to_id, 2);
	format(string, 40, "√Ç√ª √±√≠√ø√´√® √≠√†√∞√≥√∑√≠√®√™√® √± %s", GetName(to_id));
	SetPlayerSpecialAction(to_id, SPECIAL_ACTION_NONE);
	TogglePlayerControllable(to_id, 1);
	DeletePVar(to_id, "PlayerCuffed");
	return SCM(playerid, COLOR_BLUE, string);
}
CMD:refill(playerid, params[]) {
	if(pData[playerid][pJob] != 1) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√•√µ√†√≠√®√™");
	new contract = GetPVarInt(playerid, "ContractMechanic");
	if(!contract) return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± √≠√• √Ø√Æ√§√Ø√®√±√†√≠ √™√Æ√≠√≤√∞√†√™√≤ √± √Ä√á√ë");
	if(sscanf(params,"dd",params[0],params[1])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /refill [id √®√£√∞√Æ√™√†] [√∂√•√≠√†]");
	if(params[1] < 1 || params[1] > 5000) return SCM(playerid, COLOR_LIGHTGREY, "√ñ√•√≠√† √Æ√≤ 1$ √§√Æ 5000$");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
    new veh_ = GetPlayerVehicleID(params[0]), _veh = GetPlayerVehicleID(playerid);
	if(GetVehicleModel(_veh) != 525) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √∞√†√°√Æ√∑√•√¨ √†√¢√≤√Æ");
	if(!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
	if(!IsPlayerInAnyVehicle(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √≠√• √¢ √¨√†√∏√®√≠√•");
	if(IsABike(veh_)) return SCM(playerid, COLOR_LIGHTGREY, "√á√†√Ø√∞√†√¢√®√≤√º √≤√∞√†√≠√±√Ø√Æ√∞√≤ √®√£√∞√Æ√™√† √≠√•√´√º√ß√ø");
	if(Filling[contract][fBenz] < 100)
	{
		return SCM(playerid, COLOR_GREY, "√ç√† √Ä√á√ë, √± √™√Æ√≤√Æ√∞√Æ√© √≥ √¢√†√± √Ø√Æ√§√Ø√®√±√†√≠ √™√Æ√≠√≤√∞√†√™√≤ √ß√†√™√Æ√≠√∑√®√´√Æ√±√º √≤√Æ√Ø√´√®√¢√Æ");
	}
    if(pData[params[0]][pCash] < params[1]) return SCM(playerid, COLOR_LIGHTGREY, "√ì √®√£√∞√Æ√™√† √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Æ√Ø√´√†√≤√ª");
    if(VehInfo[veh_][vFuel] >= 100.0) return SCM(playerid, COLOR_LIGHTGREY, "√í√Æ√Ø√´√®√¢√≠√ª√© √°√†√™ √¢ √¨√†√∏√®√≠√• √®√£√∞√Æ√™√† √Ø√Æ√´√Æ√≠");
	if(params[0] == playerid) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
    if(GetPVarInt(playerid, "cancel_act")) return SCM(playerid, COLOR_GREY, "√Ç√ª √≥√¶√• √±√§√•√´√†√´√® √™√†√™√Æ√•-√≤√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √Ç√¢√•√§√®√≤√• "CBLUE"/revoke"CGREY", √∑√≤√Æ√°√ª √Æ√≤√Æ√ß√¢√†√≤√º √•√£√Æ");
    if(GetPVarInt(params[0], "offer") != 9999) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™√≥ √≥√¶√• √±√§√•√´√†√´√® √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √é√≠ √§√Æ√´√¶√•√≠ {00cc00}√Ø√∞√®√≠√ø√≤√º "CLIGHTGREY"√®√´√® "CERROR"√Æ√≤√¨√•√≠√®√≤√º "CLIGHTGREY"√•√£√Æ");
	string[0] = EOS;
	format(string,90, "√Ç√ª √Ø√∞√•√§√´√Æ√¶√®√´√® %s √ß√†√Ø√∞√†√¢√®√≤√º √•√£√Æ √¨√†√∏√®√≠√≥ √ß√† %d$", GetName(params[0]),params[1]);
	SCM(playerid, COLOR_BLUE, string);
	format(string,100, "√å√•√µ√†√≠√®√™ %s √Ø√∞√•√§√´√†√£√†√•√≤ √ß√†√Ø√∞√†√¢√®√≤√º √¢√†√∏√≥ √¨√†√∏√®√≠√≥ √ß√† %d$",pData[playerid][pName],params[1]);
	SCM(params[0], COLOR_BLUE, string);
    SCM(params[0], -1, "√ç√†√¶√¨√®√≤√• "CMAIN"Y "CWHITE"√∑√≤√Æ√°√ª √±√Æ√£√´√†√±√®√≤√º√±√ø √®√´√® "CERROR"N "CWHITE"√§√´√ø √Æ√≤√™√†√ß√†");
	SetPVarInt(params[0], "RefillOffer", playerid);
	SetPVarInt(params[0], "RefillPrice", params[1]);
    SetPVarInt(params[0], "offer", 1);
    SetPVarInt(playerid, "cancel_act", 1); SetPVarInt(playerid, "cancel_act_id", params[0]);
	return 1;
}

stock sellmyhome_function(playerid, to_player, price) {
	new home = pData[playerid][pHouse];
	if(home == -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √§√Æ√¨√†");
	if(pData[playerid][pCar][0] != 0 || pData[playerid][pCar][1] != 0 || pData[playerid][pCar][2] != 0)
		return SCM(playerid, COLOR_GREY, "√è√∞√•√¶√§√• √∑√•√¨ √Ø√∞√ÆS√≠√≤√º √§√Æ√¨, √Ç√ª √§√Æ√´√¶√≠√ª √Ø√∞√ÆS√≠√≤√º √§√Æ√¨√†√∏√≠√®√© √≤√∞√†√≠√±√Ø√Æ√∞√≤ "CLITEBLUE"(/sellcar)");
	if(price < 20000 || price > 25000000) return SCM(playerid, COLOR_LIGHTGREY, "√ñ√•√≠√† √¨√Æ√¶√•√≤ √°√ª√≤√º √Æ√≤ 20000$ √§√Æ 25000000$");
	if(!IsPlayerConnected(to_player)) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
    if(playerid == to_player) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Ø√∞√ÆS√≠√≤√º √§√Æ√¨ √±√•√°√•");
	if(!ProxDetectorS(5.0, playerid, to_player)) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
	if(pData[to_player][pFlat] != -1 || pData[to_player][p_rent_flat] != -1) 
		return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √Ø√∞√Æ√¶√®√¢√†√•√≤ √¢ √™√¢√†√∞√≤√®√∞√•. √è√∞√ÆS√≠√≤√º √•√¨√≥ √§√Æ√¨ √≠√•√´√º√ß√ø");
	if(pData[to_player][pHouse] != -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √®√£√∞√Æ√™√† √≥√¶√• √•√±√≤√º √§√Æ√¨");
	if(pData[to_player][pHotel] != -1) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √Ø√∞√Æ√¶√®√¢√†√•√≤ √¢ √Æ√≤√•√´√•");
    if(pData[to_player][pCash] < price) return SCM(playerid, COLOR_LIGHTGREY, "√ì √®√£√∞√Æ√™√† √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Æ√Ø√´√†√≤√ª");
	if(to_player == playerid) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Ø√∞√ÆS√≠√≤√º √§√Æ√¨ √±√†√¨√Æ√¨√≥ √±√•√°√•");
    if(GetPVarInt(playerid, "cancel_act")) return SCM(playerid, COLOR_GREY, "√Ç√ª √≥√¶√• √±√§√•√´√†√´√® √™√†√™√Æ√•-√≤√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √Ç√¢√•√§√®√≤√• "CBLUE"/revoke"CGREY", √∑√≤√Æ√°√ª √Æ√≤√Æ√ß√¢√†√≤√º √•√£√Æ");
    if(GetPVarInt(to_player, "offer") != 9999) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™√≥ √≥√¶√• √±√§√•√´√†√´√® √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √é√≠ √§√Æ√´√¶√•√≠ {00cc00}√Ø√∞√®√≠√ø√≤√º "CLIGHTGREY"√®√´√® "CERROR"√Æ√≤√¨√•√≠√®√≤√º "CLIGHTGREY"√•√£√Æ");
	SCMF(to_player,COLOR_BLUE,"%s √Ø√∞√•√§√´√†√£√†√•√≤ √Ç√†√¨ √™√≥√Ø√®√≤√º √•√£√Æ √§√Æ√¨ "CYELLOW"¬π%d "CBLUE"√ß√† %d$", pData[playerid][pName], home, price);
	SCMF(playerid,COLOR_BLUE,"√Ç√ª √Ø√∞√•√§√´√Æ√¶√®√´√® %s √™√≥√Ø√®√≤√º √Ç√†√∏ √§√Æ√¨ "CYELLOW"¬π%d "CBLUE"√ß√† %d$", GetName(to_player), home, price);
    SCM(to_player, -1, "√ç√†√¶√¨√®√≤√• "CMAIN"Y "CWHITE"√∑√≤√Æ√°√ª √±√Æ√£√´√†√±√®√≤√º√±√ø √®√´√® "CERROR"N "CWHITE"√§√´√ø √Æ√≤√™√†√ß√†");
    SetPVarInt(playerid, "cancel_act", 1); SetPVarInt(playerid, "cancel_act_id", to_player);
	SetPVarInt(to_player, "hProdaet", playerid);
    SetPVarInt(to_player, "offer", 1);
	return SetPVarInt(to_player, "hCena", price);
}
CMD:sellmyhome(playerid, params[]) {
	new home = pData[playerid][pHouse];
	if(home == -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √§√Æ√¨√†");
	if(pData[playerid][pCar][0] != 0 || pData[playerid][pCar][1] != 0 || pData[playerid][pCar][2] != 0)
		return SCM(playerid, COLOR_GREY, "√è√∞√•√¶√§√• √∑√•√¨ √Ø√∞√ÆS√≠√≤√º √§√Æ√¨, √Ç√ª √§√Æ√´√¶√≠√ª √Ø√∞√ÆS√≠√≤√º √§√Æ√¨√†√∏√≠√®√© √≤√∞√†√≠√±√Ø√Æ√∞√≤ "CLITEBLUE"(/sellcar)");
	if(sscanf(params,"dd",params[0],params[1])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /sellmyhome [id √®√£√∞√Æ√™√†] [√∂√•√≠√†]");
	
	string[0] = EOS;
	if(params[1] < HouseInfo[home][hValue])
	{
	    format(string, 55, "√ñ√•√≠√† √§√Æ√´√¶√≠√† √°√ª√≤√º √≠√• √¨√•√≠√º√∏√• %d$ (√£√Æ√±. √∂√•√≠√†)", HouseInfo[home][hValue]);
	 	return SCM(playerid, COLOR_LIGHTGREY, string);
	}
	if(params[1] > HouseInfo[home][hValue]*3)
	{
	    SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Ø√∞√ÆS√≠√≤√º √§√Æ√¨ √§√Æ√∞√Æ√¶√• √≤√∞√Æ√©√≠√Æ√© √£√Æ√±. √∂√•√≠√ª");
	    format(string, 144, "√å√†√™√±√®√¨√†√´√º√≠√†√ø √∂√•√≠√†: {ffcc66}%d$", HouseInfo[home][hValue]*3);
	 	return SCM(playerid, COLOR_LIGHTGREY, string);
	}

	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
    if(playerid == params[0]) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Ø√∞√ÆS√≠√≤√º √§√Æ√¨ √±√•√°√•");
	if(!ProxDetectorS(5.0, playerid, params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
	if(pData[params[0]][pFlat] != -1 || pData[params[0]][p_rent_flat] != -1) 
		return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √Ø√∞√Æ√¶√®√¢√†√•√≤ √¢ √™√¢√†√∞√≤√®√∞√•. √è√∞√ÆS√≠√≤√º √•√¨√≥ √§√Æ√¨ √≠√•√´√º√ß√ø");
	if(pData[params[0]][pHouse] != -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √®√£√∞√Æ√™√† √≥√¶√• √•√±√≤√º √§√Æ√¨");
	if(pData[params[0]][pHotel] != -1) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √Ø√∞√Æ√¶√®√¢√†√•√≤ √¢ √Æ√≤√•√´√•");
    if(pData[params[0]][pCash] < params[1]) return SCM(playerid, COLOR_LIGHTGREY, "√ì √®√£√∞√Æ√™√† √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Æ√Ø√´√†√≤√ª");
	if(params[0] == playerid) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Ø√∞√ÆS√≠√≤√º √§√Æ√¨ √±√†√¨√Æ√¨√≥ √±√•√°√•");
    if(GetPVarInt(playerid, "cancel_act")) return SCM(playerid, COLOR_GREY, "√Ç√ª √≥√¶√• √±√§√•√´√†√´√® √™√†√™√Æ√•-√≤√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √Ç√¢√•√§√®√≤√• "CBLUE"/revoke"CGREY", √∑√≤√Æ√°√ª √Æ√≤√Æ√ß√¢√†√≤√º √•√£√Æ");
    if(GetPVarInt(params[0], "offer") != 9999) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™√≥ √≥√¶√• √±√§√•√´√†√´√® √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √é√≠ √§√Æ√´√¶√•√≠ {00cc00}√Ø√∞√®√≠√ø√≤√º "CLIGHTGREY"√®√´√® "CERROR"√Æ√≤√¨√•√≠√®√≤√º "CLIGHTGREY"√•√£√Æ");
	SCMF(params[0],COLOR_BLUE,"%s √Ø√∞√•√§√´√†√£√†√•√≤ √Ç√†√¨ √™√≥√Ø√®√≤√º √•√£√Æ √§√Æ√¨ "CYELLOW"¬π%d "CBLUE"√ß√† %d$", pData[playerid][pName], home, params[1]);
	SCMF(playerid,COLOR_BLUE,"√Ç√ª √Ø√∞√•√§√´√Æ√¶√®√´√® %s √™√≥√Ø√®√≤√º √Ç√†√∏ √§√Æ√¨ "CYELLOW"¬π%d "CBLUE"√ß√† %d$", GetName(params[0]), home, params[1]);
    SCM(params[0], -1, "√ç√†√¶√¨√®√≤√• "CMAIN"Y "CWHITE"√∑√≤√Æ√°√ª √±√Æ√£√´√†√±√®√≤√º√±√ø √®√´√® "CERROR"N "CWHITE"√§√´√ø √Æ√≤√™√†√ß√†");
    SetPVarInt(playerid, "cancel_act", 1); SetPVarInt(playerid, "cancel_act_id", params[0]);
	SetPVarInt(params[0], "hProdaet", playerid);
    SetPVarInt(params[0], "offer", 1);
	return SetPVarInt(params[0], "hCena", params[1]);
}
stock sellmycar_function(playerid, to_player, price) {
	if(pData[playerid][pHouse] == -1 && pData[playerid][pHotel] == -1 && pData[playerid][pFlat] == -1) 
		return SCM(playerid, COLOR_LIGHTGREY, "√Ç√†√¨ √≠√•√§√Æ√±√≤√≥√Ø√≠√† √Ω√≤√† √¥√≥√≠√™√∂√®√ø");
	if(price < 5000 || price > 5000000) return SCM(playerid, COLOR_LIGHTGREY, "√ñ√•√≠√† √Æ√≤ 5000$ √§√Æ 5000000$");
	if(!IsPlayerConnected(to_player)) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(!ProxDetectorS(8.0, playerid, to_player)) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
	if(to_player == playerid) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Ø√∞√ÆS√≠√≤√º √±√†√¨√Æ√¨√≥ √±√•√°√• √¨√†√∏√®√≠√≥");
	if(pData[to_player][pHouse] == -1 && pData[to_player][pHotel] == -1 && pData[to_player][pFlat] == -1) 
		return SCM(playerid, COLOR_LIGHTGREY, "√ì √®√£√∞√Æ√™√† √§√Æ√´√¶√•√≠ √°√ª√≤√º √§√Æ√¨, √™√¢√†√∞√≤√®√∞√† √®√´√® √≠√Æ√¨√•√∞ √¢ √Æ√≤√•√´√•. √è√∞√ÆS√≠√≤√º √≤√∞√†√≠√±√Ø√Æ√∞√≤ √•√¨√≥ √≠√•√´√º√ß√ø");

	if(pData[playerid][pHotel] != -1 || pData[playerid][pFlat] != -1 || pData[playerid][have_garage] != -1) {
		if(pData[playerid][pCar][0] == 0) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√∞√†√≠√±√Ø√Æ√∞√≤√†");
        if(pData[to_player][pCash] < price) return SCM(playerid, COLOR_LIGHTGREY, "√ì √®√£√∞√Æ√™√† No √±√≤√Æ√´√º√™√Æ √§√•√≠√•√£");
        if(GetPVarInt(playerid, "cancel_act")) return SCM(playerid, COLOR_GREY, "√Ç√ª √≥√¶√• √±√§√•√´√†√´√® √™√†√™√Æ√•-√≤√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √Ç√¢√•√§√®√≤√• "CBLUE"/revoke"CGREY", √∑√≤√Æ√°√ª √Æ√≤√Æ√ß√¢√†√≤√º √•√£√Æ");
        if(GetPVarInt(to_player, "offer") != 9999) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™√≥ √≥√¶√• √±√§√•√´√†√´√® √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √é√≠ √§√Æ√´√¶√•√≠ {00cc00}√Ø√∞√®√≠√ø√≤√º "CLIGHTGREY"√®√´√® "CERROR"√Æ√≤√¨√•√≠√®√≤√º "CLIGHTGREY"√•√£√Æ");
		format(string,128, "√Ç√ª √Ø√∞√•√§√´√Æ√¶√®√´√® %s √™√≥√Ø√®√≤√º %s √ß√† %d$", GetName(to_player),VehicleNames[pData[playerid][pCar][0] - 400],price);
		SCM(playerid, COLOR_BLUE, string);
		format(string,128, "%s √Ø√∞√•√§√´√†√£√†√•√≤ √Ç√†√¨ √™√≥√Ø√®√≤√º %s √ß√† %d$",pData[playerid][pName],VehicleNames[pData[playerid][pCar][0] - 400],price);
		SCM(to_player, COLOR_BLUE, string);
        SCM(to_player, -1, "√ç√†√¶√¨√®√≤√• "CMAIN"Y "CWHITE"√∑√≤√Æ√°√ª √±√Æ√£√´√†√±√®√≤√º√±√ø √®√´√® "CERROR"N "CWHITE"√§√´√ø √Æ√≤√™√†√ß√†");
        SCM(to_player, COLOR_ERROR, "√Ç√≠√®√¨√†√≠√®√•! √Ö√±√´√® √≠√† √≤√∞√†√≠√±√Ø√Æ√∞√≤√• √≥√±√≤√†√≠√Æ√¢√´√•√≠ √™√†√™√Æ√©-√´√®√°√Æ √≤√æ√≠√®√≠√£, √Æ√≠ √°√≥√§√•√≤ √≥S√≠√´¬∏√≠");
		SetPVarInt(to_player, "CarOffer", playerid);
        SetPVarInt(playerid, "cancel_act", 1); SetPVarInt(playerid, "cancel_act_id", to_player);
		SetPVarInt(to_player, "CarNum", 0);
        SetPVarInt(to_player, "offer", 1);
		SetPVarInt(to_player, "CarPrice", price);

		return 1;
	}

	SetPVarInt(playerid, "prm_id", to_player); SetPVarInt(playerid, "prm_price", price);
	new text_car_1[140], text_car_2[140], text_car_3[140];
	if(pData[playerid][pCar][0] != 0) format(text_car_1, 140, "(√¨√†√∞√™√†: %s)", VehicleNames[pData[playerid][pCar][0] - 400]);
	else strcat(text_car_1, "{ff4d4d}(√Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤)");
	if(pData[playerid][pCar][1] != 0) format(text_car_2, 140, "(√¨√†√∞√™√†: %s)", VehicleNames[pData[playerid][pCar][1] - 400]);
	else strcat(text_car_2, "{ff4d4d}(√Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤)");
	if(pData[playerid][pCar][2] != 0) format(text_car_3, 140, "(√¨√†√∞√™√†: %s)", VehicleNames[pData[playerid][pCar][2] - 400]);
	else strcat(text_car_3, "{ff4d4d}(√Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤)");
	format(string, 296, "{FFCD00}√ä√†√™√Æ√© √†√¢√≤√Æ√¨√Æ√°√®√´√º Quieres √Ø√∞√ÆS√≠√≤√º?\n"CWHITE"√è√•√∞√¢√ª√© "CCYAN"%s\n"CWHITE"√Ç√≤√Æ√∞√Æ√© "CCYAN"%s\n"CWHITE"√í√∞√•√≤√®√© "CCYAN"%s",text_car_1,text_car_2,text_car_3);
	return SPD(playerid, 424, DIALOG_STYLE_TABLIST_HEADERS, ""CLITEBLUE"√è√∞√ÆS√≠√¶√† √†√¢√≤√Æ√¨√Æ√°√®√´√ø", string, "Seleccione", "Cerrar");
}
CMD:sellmycar(playerid, params[]) {
	if(pData[playerid][pHouse] == -1 && pData[playerid][pHotel] == -1 && pData[playerid][pFlat] == -1) 
		return SCM(playerid, COLOR_LIGHTGREY, "√Ç√†√¨ √≠√•√§√Æ√±√≤√≥√Ø√≠√† √Ω√≤√† √™√Æ√¨√†√≠S√≠");
	if(sscanf(params, "dd", params[0], params[1])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /sellmycar [id √®√£√∞√Æ√™√†] [√∂√•√≠√†]");
	if(params[1] > 50000000) return SCM(playerid, COLOR_LIGHTGREY, "√ì√™√†√ß√†√≠√† √±√´√®√∏√™√Æ√¨ √°√Æ√´√º√∏√†√ø √±√≥√¨√¨√†");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
	if(params[0] == playerid) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Ø√∞√ÆS√≠√≤√º √±√†√¨√Æ√¨√≥ √±√•√°√• √¨√†√∏√®√≠√≥");
	if(pData[params[0]][pHouse] == -1 && pData[params[0]][pHotel] == -1 && pData[params[0]][pFlat] == -1) 
		return SCM(playerid, COLOR_LIGHTGREY, "√ì √®√£√∞√Æ√™√† √§√Æ√´√¶√•√≠ √°√ª√≤√º √§√Æ√¨, √™√¢√†√∞√≤√®√∞√† √®√´√® √≠√Æ√¨√•√∞ √¢ √Æ√≤√•√´√•. √è√∞√ÆS√≠√≤√º √≤√∞√†√≠√±√Ø√Æ√∞√≤ √•√¨√≥ √≠√•√´√º√ß√ø");

	if(pData[playerid][pHotel] != -1 || pData[playerid][pFlat] != -1 || pData[playerid][have_garage] != -1) {
		if(pData[playerid][pCar][0] == 0) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√∞√†√≠√±√Ø√Æ√∞√≤√†");
        if(pData[params[0]][pCash] < params[1]) return SCM(playerid, COLOR_LIGHTGREY, "√ì √®√£√∞√Æ√™√† No √±√≤√Æ√´√º√™√Æ √§√•√≠√•√£");
        if(GetPVarInt(playerid, "cancel_act")) return SCM(playerid, COLOR_GREY, "√Ç√ª √≥√¶√• √±√§√•√´√†√´√® √™√†√™√Æ√•-√≤√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √Ç√¢√•√§√®√≤√• "CBLUE"/revoke"CGREY", √∑√≤√Æ√°√ª √Æ√≤√Æ√ß√¢√†√≤√º √•√£√Æ");
        if(GetPVarInt(params[0], "offer") != 9999) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™√≥ √≥√¶√• √±√§√•√´√†√´√® √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √é√≠ √§√Æ√´√¶√•√≠ {00cc00}√Ø√∞√®√≠√ø√≤√º "CLIGHTGREY"√®√´√® "CERROR"√Æ√≤√¨√•√≠√®√≤√º "CLIGHTGREY"√•√£√Æ");
		format(string,128, "√Ç√ª √Ø√∞√•√§√´√Æ√¶√®√´√® %s √™√≥√Ø√®√≤√º %s √ß√† %d$", GetName(params[0]),VehicleNames[pData[playerid][pCar][0] - 400],params[1]);
		SCM(playerid, COLOR_BLUE, string);
		format(string,128, "%s √Ø√∞√•√§√´√†√£√†√•√≤ √Ç√†√¨ √™√≥√Ø√®√≤√º %s √ß√† %d$",pData[playerid][pName],VehicleNames[pData[playerid][pCar][0] - 400],params[1]);
		SCM(params[0], COLOR_BLUE, string);
        SCM(params[0], -1, "√ç√†√¶√¨√®√≤√• "CMAIN"Y "CWHITE"√∑√≤√Æ√°√ª √±√Æ√£√´√†√±√®√≤√º√±√ø √®√´√® "CERROR"N "CWHITE"√§√´√ø √Æ√≤√™√†√ß√†");
        SCM(params[0], COLOR_ERROR, "√Ç√≠√®√¨√†√≠√®√•! √Ö√±√´√® √≠√† √≤√∞√†√≠√±√Ø√Æ√∞√≤√• √≥√±√≤√†√≠√Æ√¢√´√•√≠ √™√†√™√Æ√©-√´√®√°√Æ √≤√æ√≠√®√≠√£, √Æ√≠ √°√≥√§√•√≤ √≥S√≠√´¬∏√≠");
		SetPVarInt(params[0], "CarOffer", playerid);
        SetPVarInt(playerid, "cancel_act", 1); SetPVarInt(playerid, "cancel_act_id", params[0]);
		SetPVarInt(params[0], "CarNum", 0);
        SetPVarInt(params[0], "offer", 1);
		SetPVarInt(params[0], "CarPrice", params[1]);

		return 1;
	}

	SetPVarInt(playerid, "prm_id", params[0]); SetPVarInt(playerid, "prm_price", params[1]);
	new text_car_1[140], text_car_2[140], text_car_3[140];
	if(pData[playerid][pCar][0] != 0) format(text_car_1, 140, "(√¨√†√∞√™√†: %s)", VehicleNames[pData[playerid][pCar][0] - 400]);
	else strcat(text_car_1, "{ff4d4d}(√Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤)");
	if(pData[playerid][pCar][1] != 0) format(text_car_2, 140, "(√¨√†√∞√™√†: %s)", VehicleNames[pData[playerid][pCar][1] - 400]);
	else strcat(text_car_2, "{ff4d4d}(√Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤)");
	if(pData[playerid][pCar][2] != 0) format(text_car_3, 140, "(√¨√†√∞√™√†: %s)", VehicleNames[pData[playerid][pCar][2] - 400]);
	else strcat(text_car_3, "{ff4d4d}(√Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤)");
	format(string, 296, "{FFCD00}√ä√†√™√Æ√© √†√¢√≤√Æ√¨√Æ√°√®√´√º Quieres √Ø√∞√ÆS√≠√≤√º?\n"CWHITE"√è√•√∞√¢√ª√© "CCYAN"%s\n"CWHITE"√Ç√≤√Æ√∞√Æ√© "CCYAN"%s\n"CWHITE"√í√∞√•√≤√®√© "CCYAN"%s",text_car_1,text_car_2,text_car_3);
	return SPD(playerid, 424, DIALOG_STYLE_TABLIST_HEADERS, ""CLITEBLUE"√è√∞√ÆS√≠√¶√† √†√¢√≤√Æ√¨√Æ√°√®√´√ø", string, "Seleccione", "Cerrar");
}
CMD:repair(playerid, params[]) {
	if(pData[playerid][pJob] != 1) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√•√µ√†√≠√®√™");
	if(sscanf(params,"dd",params[0],params[1])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /repair [id √®√£√∞√Æ√™√†] [√∂√•√≠√†]");
	if(params[1] < 1 || params[1] > 1000) return SCM(playerid, COLOR_LIGHTGREY, "√ñ√•√≠√† √Æ√≤ 1$ √§√Æ 1000$");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 525) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √∞√†√°√Æ√∑√•√¨ √†√¢√≤√Æ");
	if(!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
	if(!IsPlayerInAnyVehicle(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √≠√• √¢ √¨√†√∏√®√≠√•");
    if(pData[params[0]][pCash] < params[1]) return SCM(playerid, COLOR_LIGHTGREY, "√ì √®√£√∞√Æ√™√† √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Æ√Ø√´√†√≤√ª");
	if(IsABike(GetPlayerVehicleID(params[0]))) return SCM(playerid, COLOR_LIGHTGREY, "√è√Æ√∑√®√≠√®√≤√º √≤√∞√†√≠√±√Ø√Æ√∞√≤ √®√£√∞√Æ√™√† √≠√•√´√º√ß√ø");
	if(params[0] == playerid) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √∑√®√≠√®√≤√º √¨√†√∏√®√≠√≥ √±√†√¨√Æ√¨√≥ √±√•√°√•");
    if(GetPVarInt(playerid, "cancel_act")) return SCM(playerid, COLOR_GREY, "√Ç√ª √≥√¶√• √±√§√•√´√†√´√® √™√†√™√Æ√•-√≤√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √Ç√¢√•√§√®√≤√• "CBLUE"/revoke"CGREY", √∑√≤√Æ√°√ª √Æ√≤√Æ√ß√¢√†√≤√º √•√£√Æ");
    if(GetPVarInt(params[0], "offer") != 9999) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™√≥ √≥√¶√• √±√§√•√´√†√´√® √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √é√≠ √§√Æ√´√¶√•√≠ {00cc00}√Ø√∞√®√≠√ø√≤√º "CLIGHTGREY"√®√´√® "CERROR"√Æ√≤√¨√•√≠√®√≤√º "CLIGHTGREY"√•√£√Æ");
	string[0] = EOS;
	format(string,95, "√Ç√ª √Ø√∞√•√§√´√Æ√¶√®√´√® %s √Æ√≤√∞√•√¨√Æ√≠√≤√®√∞√Æ√¢√†√≤√º √•√£√Æ √¨√†√∏√®√≠√≥ √ß√† %d$", GetName(params[0]),params[1]);
	SCM(playerid, COLOR_BLUE, string);
	format(string,105, "√å√•√µ√†√≠√®√™ %s √Ø√∞√•√§√´√†√£√†√•√≤ √Æ√≤√∞√•√¨√Æ√≠√≤√®√∞√Æ√¢√†√≤√º √Ç√†√∏ √†√¢√≤√Æ√¨√Æ√°√®√´√º √ß√† %d$",pData[playerid][pName],params[1]);
	SCM(params[0], COLOR_BLUE, string);
    SCM(params[0], -1, "√ç√†√¶√¨√®√≤√• "CMAIN"Y "CWHITE"√∑√≤√Æ√°√ª √±√Æ√£√´√†√±√®√≤√º√±√ø √®√´√® "CERROR"N "CWHITE"√§√´√ø √Æ√≤√™√†√ß√†");
	SetPVarInt(params[0], "RepairOffer", playerid);
    SetPVarInt(params[0], "offer", 1);
	return SetPVarInt(params[0], "RepairPrice", params[1]);
}
CMD:eject(playerid, params[]) {
	if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √°√ª√≤√º √¢ √†√¢√≤√Æ√¨√Æ√°√®√´√•");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_GREY, "√Ç√ª √§√Æ√´√¶√≠√ª √°√ª√≤√º √ß√† √∞√≥√´¬∏√¨ √†√¢√≤√Æ√¨√Æ√°√®√´√ø");
	if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /eject [id √®√£√∞√Æ√™√†]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(params[0] == playerid) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √¢√ª√™√®√≠√≥√≤√º √®√ß √¨√†√∏√®√≠√ª √±√•√°√ø");
	if(!IsPlayerInVehicle(params[0], GetPlayerVehicleID(playerid))) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √≠√• √≠√†√µ√Æ√§√®√≤√±√ø √¢ √Ç√†√∏√•√¨ √≤√∞√†√≠√±√Ø√Æ√∞√≤√•");
	string[0] = EOS;
	format(string,50, "√Ç√ª √¢√ª√™√®√≠√≥√´√® √®√ß √¨√†√∏√®√≠√ª %s", GetName(params[0]));
	SCM(playerid, 0x6AB1FFFF, string);
	format(string,50, "%s √¢√ª√™√®√≠√≥√´ √Ç√†√± √®√ß √¨√†√∏√®√≠√ª", pData[playerid][pName]);
	SCM(params[0], 0x6AB1FFFF, string);
	RemovePlayerFromVehicle(params[0]);
	PlayerTied{params[0]} = false;
	return TogglePlayerControllable(params[0], 1);
}
CMD:id(playerid, params[])
{
	new enter_name[24], ids = 0;
	if(sscanf(params, "s[24]", enter_name))
	{
		SCM(playerid, COLOR_LIGHTGREY, "1. √ç√†√©√≤√® ID √®√£√∞√Æ√™√†: {cccc66}/id [√®√¨√ø √®√´√® √∑√†√±√≤√º √®√¨√•√≠√® √®√£√∞√Æ√™√†]");
		return SCM(playerid, COLOR_LIGHTGREY, "2. √ç√†√©√≤√® √≠√®√™ √®√£√∞√Æ√™√†: {cccc66}/id [id √®√£√∞√Æ√™√†]");
	}
	new id=strval(enter_name);
	if(IsNumeric(enter_name) && IsPlayerConnected(id) && !IsPlayerNPC(id))
	{
		if(!pData[id][pLogin]) return SCMF(playerid,-1, "%s {cc0033}| %i ID | %i LVL", pData[id][pName], id, GetPlayerScore(id));
		return SCMF(playerid,-1, "%s {cc0033}| %i ID | %i LVL", pData[id][pName], id, pData[id][pLevel]);
	}
	if(strlen(enter_name) < 3 && !IsNumeric(enter_name)) 
		return SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§√®√≤√• √¨√®√≠√®√¨√≥√¨ 3 √±√®√¨√¢√Æ√´√† √§√´√ø √Ø√Æ√®√±√™√† √®√¨√•√≠√®");
	
	new posfind, namestr[40];
	new lvlplayer;
	foreach(new i:Player)
	{
		posfind = strfind(pData[i][pName], enter_name, true);
		if(posfind == -1) continue;
		if(!pData[i][pLogin]) 
			lvlplayer=GetPlayerScore(i);
		else lvlplayer=pData[i][pLevel];
		if(ids >= 5) break;
		ids ++;

		format(namestr,24,pData[i][pName]);
		strins(namestr, "{99bbff}", posfind);
		strins(namestr, ""CWHITE"", posfind+8+strlen(enter_name));

		SCMF(playerid, -1, "%i. %s {cc0033}| %i ID | %i LVL", ids, namestr, i,lvlplayer);
	}
	if(ids >= 5) SCM(playerid, COLOR_GREY, "√è√Æ√™√†√ß√†√≠√ª √Ø√•√∞√¢√ª√• 5 √±√Æ√¢√Ø√†√§√•√≠√®√©");
	if(!ids) return SCM(playerid, COLOR_GREY, "√ë√Æ√¢√Ø√†√§√•√≠√®√© √≠√• √≠√†√©√§√•√≠√Æ");
	return 1;
}
CMD:delaccount(playerid, params[]) {
	if(IsAFull(playerid)) {
		new type,Name[24];   
		if(sscanf(params,"ds[24]", type, Name)) return SCM(playerid, COLOR_GREY, "Usar: /delaccount [√≤√®√Ø 0 - √± √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√•√¨, 1 - √°√•√ß] [√≠√®√™ √®√£√∞√Æ√™√†]");
		string[0] = EOS;
		mysql_format(mysql_Handle, string, 120, "SELECT `Name` FROM `accounts` WHERE `Name` = '%s'", Name);
		return mysql_tquery(mysql_Handle, string, "Delete", "dds",type,playerid,Name);
	}
	return 1;
}
CMD:skin(playerid, params[]) {
	if(pData[playerid][pAdmin] < 3) return 1;
	if(sscanf(params, "dd", params[0], params[1])) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /skin [id √®√£√∞√Æ√™√†] [id √¢√≠√•√∏√≠√Æ√±√≤√®]");
	if(!pData[params[0]][pLogin]) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √≠√• √†√¢√≤√Æ√∞√®√ß√Æ√¢√†√≠");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(params[1] > 311 || params[1] < 1) return SCM(playerid, COLOR_LIGHTGREY, "√Ñ√Æ√±√≤√≥√Ø√≠√ª id √¢√≠√•√∏√≠√Æ√±√≤√® √Æ√≤ 1 √§√Æ 311");
	if(IsPlayerInAnyVehicle(params[0])) return SCM(playerid, COLOR_GREY, "√à√£√∞√Æ√™ √≠√• √§√Æ√´√¶√•√≠ √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √≤√∞√†√≠√±√Ø√Æ√∞√≤√•");
	if(params[1] == 74) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ªS√≠√∑√† S√≠√≠√≠√Æ√© √¢√≠√•√∏√≠√Æ√±√≤√® √ß√†√Ø√∞√•√π√•√≠√†");
	string[0] = EOS;
	if(pData[playerid][pSex] == 1) format(string, 128, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s[%d] √¢√ªS√≠√´ √¢√†√¨ √¢√∞√•√¨√•√≠√≠√≥√æ √¢√≠√•√∏√≠√Æ√±√≤√º", pData[playerid][pName], playerid);
	else format(string, 128, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s[%d] √¢√ªS√≠√´√† √¢√†√¨ √¢√∞√•√¨√•√≠√≠√≥√æ √¢√≠√•√∏√≠√Æ√±√≤√º", pData[playerid][pName], playerid);
	SCM(params[0], -1, string);
	format(string, 128, "√Ç√ª √¢√ªS√≠√´√® √¢√∞√•√¨√•√≠√≠√≥√æ √¢√≠√•√∏√≠√Æ√±√≤√º [%d] √®√£√∞√Æ√™√≥ %s[%d]", params[1], GetName(params[0]),params[0]);
	SCM(playerid, -1, string);
	return SetPlayerSkin(params[0], params[1]);
}
CMD:offjail(playerid, params[]) {
	if(pData[playerid][pAdmin] < 3) return 1;
	new param_name[24],param_reason[32],param_day;
	if(sscanf(params, "s[24]ds[32]", param_name,param_day,param_reason)) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /offjail [√≠√®√™ √®√£√∞√Æ√™√†] [√±√∞√Æ√™ √¢ √¨√®√≠√≥√≤√†√µ] [√Ø√∞√®√∑√®√≠√†]");
	if(param_day > 300 || param_day < 5) return SCM(playerid, COLOR_LIGHTGREY, "√Ñ√Æ√±√≤√≥√Ø√≠√Æ√• √¢√∞√•√¨√ø √Æ√≤ 5 √§√Æ 300 √¨√®√≠√≥√≤");
	if(IsPlayerConnected(GetPlayerID(param_name))) return SCMF(playerid, 0xBFBB41FF, "√à√£√∞√Æ√™ √Ø√Æ√§√™√´√æ√∑¬∏√≠ √™ √±√•√∞√¢√•√∞√≥. Usar "CBLUE"/jail %d [√±√∞√Æ√™] [√Ø√∞√®√∑√®√≠√†] {bfbb41}√∑√≤√Æ√°√ª √Ø√Æ√±√†√§√®√≤√º √•√£√Æ √¢ √≤√æ√∞√º√¨√≥", GetPlayerID(param_name));
	SetPVarString(playerid,"OffJailReason",param_reason);
	SetPVarInt(playerid,"OffJailDay",param_day);
	string[0] = EOS;
	mysql_format(mysql_Handle, string, 100, "SELECT * FROM `accounts` WHERE `Name` = '%s'", param_name);
	return mysql_tquery(mysql_Handle, string, "OffJail", "is",playerid,param_name);
}

CB: OffJail(playerid, name[]) {
	new rows, idchecck;
	cache_get_row_count(rows);
	if(!rows) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √± √≤√†√™√®√¨ √≠√®√™√Æ√¨ √≠√• √≠√†√©√§√•√≠");
	new reason[32], tJail, tPrison;
	cache_get_value_name_int(0, "pJailTime", tJail); cache_get_value_name_int(0, "pPrisonTime", tPrison);
	if(tJail > 0 || tPrison > 0) return SCM(playerid, COLOR_LIGHTGREY, "√ì √®√£√∞√Æ√™√† √≥√¶√• √®√¨√•√•√≤√±√ø √±√∞√Æ√™ √¢ √≤√æ√∞√º√¨√•");
	GetPVarString(playerid,"OffJailReason",reason,sizeof(reason));
	string[0] = EOS;
	mysql_format(mysql_Handle, string, 140, "UPDATE `accounts` SET `pWanted` = '0', `pPrisonTime` = %d, `punishment` = '1' WHERE `Name` = '%s'", GetPVarInt(playerid,"OffJailDay")*60,name);
	mysql_tquery(mysql_Handle, string);

	new day, month, year, hour, minuite, second;
	getdate(year, month, day);
	gettime(hour, minuite, second);
	FixHour(hour);
	hour = shifthour;
	new data2[22];
	format(data2, 22, "%02d.%02d.%d √¢ %02d:%02d",day, month, year, hour, minuite);
	cache_get_value_name_int(0, "id", idchecck);

	new jailstr[164];
	if(pData[playerid][pSex] == 1) format(jailstr, 128, "[A] %s[%d] √Ø√Æ√±√†√§√®√´ √¢ √≤√æ√∞√º√¨√≥ √Æ√¥√¥√´√†√©√≠ %s √≠√† %d √¨√®√≠√≥√≤ (%s)",pData[playerid][pName],playerid,name,GetPVarInt(playerid,"OffJailDay"),reason);
	else format(jailstr, 128, "[A] %s[%d] √Ø√Æ√±√†√§√®√´√† √¢ √≤√æ√∞√º√¨√≥ √Æ√¥√¥√´√†√©√≠ %s √≠√† %d √¨√®√≠√≥√≤ (%s)",pData[playerid][pName],playerid,name,GetPVarInt(playerid,"OffJailDay"),reason);
	AdminMessage(COLOR_GREY, jailstr);
	if(GetPVarInt(playerid, "AdminMessages")) SCM(playerid, COLOR_GREY, jailstr);
	if(pData[playerid][pSex] == 1) format(jailstr, 128, "%s[%d] √Ø√Æ√±√†√§√®√´ √¢ √≤√æ√∞√º√¨√≥ √Æ√¥√¥√´√†√©√≠ %s √≠√† %d √¨√®√≠√≥√≤ (%s)",pData[playerid][pName],playerid,name,GetPVarInt(playerid,"OffJailDay"),reason);
	else format(jailstr, 128, "%s[%d] √Ø√Æ√±√†√§√®√´√† √¢ √≤√æ√∞√º√¨√≥ √Æ√¥√¥√´√†√©√≠ %s √≠√† %d √¨√®√≠√≥√≤ (%s)",pData[playerid][pName],playerid,name,GetPVarInt(playerid,"OffJailDay"),reason);
	mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('%s',%d,'%s')",jailstr, idchecck, data2);
	mysql_tquery(mysql_Handle, string);
	DeletePVar(playerid,"OffJailReason");
	DeletePVar(playerid,"OffJailDay");

	return gAdmin[playerid][ADMIN_JAIL] ++;
}
CMD:offrmute(playerid, params[]) {
	if(pData[playerid][pAdmin] < 3) return 1;
	new param_name[24],param_reason[32],param_day;
	if(sscanf(params, "s[24]ds[32]", param_name,param_day,param_reason)) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /offrmute [√≠√®√™ √®√£√∞√Æ√™√†] [√™√Æ√´-√¢√Æ √¨√®√≠√≥√≤] [√Ø√∞√®√∑√®√≠√†]");
	if(param_day > 600 || param_day < 5) return SCM(playerid, COLOR_LIGHTGREY, "√Ñ√Æ√±√≤√≥√Ø√≠√Æ√• √¢√∞√•√¨√ø √Æ√≤ 5 √§√Æ 600 √¨√®√≠√≥√≤");
	if(IsPlayerConnected(GetPlayerID(param_name))) return SCMF(playerid, 0xBFBB41FF, "√à√£√∞√Æ√™ √Ø√Æ√§√™√´√æ√∑¬∏√≠ √™ √±√•√∞√¢√•√∞√≥. Usar "CBLUE"/rmute %d [√±√∞√Æ√™] [√Ø√∞√®√∑√®√≠√†] {bfbb41}√∑√≤√Æ√°√ª √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√≤√º √•√¨√≥ √§√Æ√±√≤√≥√Ø √¢ √∞√•√Ø√Æ√∞√≤", GetPlayerID(param_name));
	SetPVarString(playerid,"OffMuteReason",param_reason);
	SetPVarInt(playerid,"OffMuteDay",param_day);
	string[0] = EOS;
	mysql_format(mysql_Handle, string, 100, "SELECT * FROM `accounts` WHERE `Name` = '%s'", param_name);
	return mysql_tquery(mysql_Handle, string, "OffRMutes", "is",playerid,param_name);
}
CMD:offmute(playerid, params[]) {
	if(pData[playerid][pAdmin] < 3) return 1;
	new param_name[24],param_reason[32],param_day;
	if(sscanf(params, "s[24]ds[32]", param_name,param_day,param_reason)) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /offmute [√≠√®√™ √®√£√∞√Æ√™√†] [√™√Æ√´-√¢√Æ √¨√®√≠√≥√≤] [√Ø√∞√®√∑√®√≠√†]");
	if(param_day > 300 || param_day < 5) return SCM(playerid, COLOR_LIGHTGREY, "√Ñ√Æ√±√≤√≥√Ø√≠√Æ√• √¢√∞√•√¨√ø √Æ√≤ 5 √§√Æ 300 √¨√®√≠√≥√≤");
	if(IsPlayerConnected(GetPlayerID(param_name))) return SCMF(playerid, 0xBFBB41FF, "√à√£√∞√Æ√™ √Ø√Æ√§√™√´√æ√∑¬∏√≠ √™ √±√•√∞√¢√•√∞√≥. Usar "CBLUE"/mute %d [√±√∞√Æ√™] [√Ø√∞√®√∑√®√≠√†] {bfbb41}√∑√≤√Æ√°√ª √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√≤√º √•√¨√≥ √∑√†√≤", GetPlayerID(param_name));
	SetPVarString(playerid,"OffMuteReason",param_reason);
	SetPVarInt(playerid,"OffMuteDay",param_day);
	string[0] = EOS;
	mysql_format(mysql_Handle, string, 100, "SELECT * FROM `accounts` WHERE `Name` = '%s'", param_name);
	return mysql_tquery(mysql_Handle, string, "OffMutes", "is",playerid,param_name);
}

CB: OffRMutes(playerid, name[]) {
	new rows, idchecck;
	cache_get_row_count(rows);
	if(!rows) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √± √≤√†√™√®√¨ √≠√®√™√Æ√¨ √≠√• √≠√†√©√§√•√≠");
	new reason[32], TimeMute; cache_get_value_name_int(0, "pMuteTime_R", TimeMute);
	GetPVarString(playerid,"OffMuteReason",reason,sizeof(reason));
	if(TimeMute > 0) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™√≥ √≥√¶√• √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√≠ √§√Æ√±√≤√≥√Ø √¢ √∞√•√Ø√Æ√∞√≤");
	string[0] = EOS;

	new day, month, year, hour, minuite, second;
	getdate(year, month, day);
	gettime(hour, minuite, second);
	FixHour(hour);
	hour = shifthour;
	new data2[22];
	format(data2, 22, "%02d.%02d.%d √¢ %02d:%02d",day, month, year, hour, minuite);
	cache_get_value_name_int(0, "id", idchecck);

	mysql_format(mysql_Handle, string, 128, "UPDATE `accounts` SET `pMuteTime_R` = %d, `punishment` = '1' WHERE `Name` = '%s'", GetPVarInt(playerid,"OffMuteDay")*60,name);
	mysql_tquery(mysql_Handle, string);
	if(pData[playerid][pSex] == 1) format(string, 128, "[A] %s[%d] √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√´ √§√Æ√±√≤√≥√Ø √¢ √∞√•√Ø√Æ√∞√≤ √Æ√¥√¥√´√†√©√≠ %s √≠√† %d √¨√®√≠ (%s)", GetName(playerid), playerid, name, GetPVarInt(playerid,"OffMuteDay"), reason);
	else format(string, 128, "[A] %s[%d] √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√´√† √§√Æ√±√≤√≥√Ø √¢ √∞√•√Ø√Æ√∞√≤ √Æ√¥√¥√´√†√©√≠ %s √≠√† %d √¨√®√≠ (%s)", GetName(playerid), playerid, name, GetPVarInt(playerid,"OffMuteDay"), reason);
	AdminMessage(COLOR_GREY, string);
	if(pData[playerid][pSex] == 1) format(string, 128, "%s[%d] √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√´ √§√Æ√±√≤√≥√Ø √¢ √∞√•√Ø√Æ√∞√≤ √Æ√¥√¥√´√†√©√≠ %s √≠√† %d √¨√®√≠ (%s)", GetName(playerid), playerid, name, GetPVarInt(playerid,"OffMuteDay"), reason);
	else format(string, 128, "%s[%d] √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√´√† √§√Æ√±√≤√≥√Ø √¢ √∞√•√Ø√Æ√∞√≤ √Æ√¥√¥√´√†√©√≠ %s √≠√† %d √¨√®√≠ (%s)", GetName(playerid), playerid, name, GetPVarInt(playerid,"OffMuteDay"), reason);
	mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('%s',%d,'%s')", string, idchecck, data2);
	mysql_tquery(mysql_Handle, string);
	DeletePVar(playerid,"OffMuteReason");
	DeletePVar(playerid,"OffMuteDay");
	return gAdmin[playerid][ADMIN_MUTE] ++;
}
CB: OffMutes(playerid, name[]) {
	new rows, idchecck;
	cache_get_row_count(rows);
	if(!rows) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √± √≤√†√™√®√¨ √≠√®√™√Æ√¨ √≠√• √≠√†√©√§√•√≠");
	new reason[32], TimeMute; cache_get_value_name_int(0, "pMuteTime", TimeMute);
	GetPVarString(playerid,"OffMuteReason",reason,sizeof(reason));
	if(TimeMute > 0) return SCM(playerid, COLOR_LIGHTGREY, "√ì √®√£√∞√Æ√™√† √≥√¶√• √•√±√≤√º √°√´√Æ√™√®√∞√Æ√¢√™√† √∑√†√≤√†");
	string[0] = EOS;

	new day, month, year, hour, minuite, second;
	getdate(year, month, day);
	gettime(hour, minuite, second);
	FixHour(hour);
	hour = shifthour;
	new data2[22];
	format(data2, 22, "%02d.%02d.%d √¢ %02d:%02d",day, month, year, hour, minuite);
	cache_get_value_name_int(0, "id", idchecck);

	mysql_format(mysql_Handle, string, 130, "UPDATE `accounts` SET `pMuteTime` = %d, `punishment` = '1' WHERE `Name` = '%s'", GetPVarInt(playerid,"OffMuteDay")*60,name);
	mysql_tquery(mysql_Handle, string);
	if(pData[playerid][pSex] == 1) format(string, 164,"√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√´ √∑√†√≤ √Æ√¥√¥√´√†√©√≠ √®√£√∞√Æ√™√≥ %s √≠√† %d √¨√®√≠. √è√∞√®√∑√®√≠√†: %s",pData[playerid][pName],name,GetPVarInt(playerid,"OffMuteDay"),reason);
	else format(string, 164,"√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√´√† √∑√†√≤ √Æ√¥√¥√´√†√©√≠ √®√£√∞√Æ√™√≥ %s √≠√† %d √¨√®√≠. √è√∞√®√∑√®√≠√†: %s",pData[playerid][pName],name,GetPVarInt(playerid,"OffMuteDay"),reason);
	SCMTA_setting(COLOR_LIGHTRED, string);
	mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('%s',%d,'%s')", string, idchecck, data2);
	mysql_tquery(mysql_Handle, string);
	DeletePVar(playerid,"OffMuteReason");
	DeletePVar(playerid,"OffMuteDay");
	return gAdmin[playerid][ADMIN_MUTE] ++;
}
CMD:offban(playerid, params[]) {
	if(pData[playerid][pAdmin] < 4) return 1;
	new NAME[24],REASON[64];
	if(sscanf(params,"s[24]is[64]",NAME,params[0],REASON)) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /offban [√≠√®√™ √®√£√∞√Æ√™√†] [√±√∞√Æ√™ √¢ √§√≠√ø√µ] [√Ø√∞√®√∑√®√≠√†]");
	if(IsPlayerConnected(GetPlayerID(NAME))) return SCMF(playerid, 0xBFBB41FF, "√à√£√∞√Æ√™ √Ø√Æ√§√™√´√æ√∑¬∏√≠ √™ √±√•√∞√¢√•√∞√≥. Usar "CBLUE"/ban %d [√±√∞√Æ√™ √¢ √§√≠√ø√µ] [√Ø√∞√®√∑√®√≠√†] {bfbb41}√∑√≤√Æ√°√ª √ß√†√°√†√≠√®√≤√º √•√£√Æ", GetPlayerID(NAME));
	
	if(IsAFull_nick(NAME)) return SCM(playerid, COLOR_ERROR, "√á√†√°√†√≠√®√≤√º √®√£√∞√Æ√™√† √± √Ω√≤√®√¨ √≠√®√™√Æ√¨ √≠√•√´√º√ß√ø");

	string[0] = EOS;
	mysql_format(mysql_Handle, string, 128, "SELECT * FROM `accounts` WHERE `Name` = '%s'", NAME);
	return mysql_tquery(mysql_Handle, string, "OffBanCheck", "isis",playerid,NAME,params[0],REASON);
}
CB: OffBanCheck(playerid,NAME[],DAYS,REASON[]) {
	new rows, idoff;
	cache_get_row_count(rows);
	if(!rows) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √± √≤√†√™√®√¨ √≠√®√™√Æ√¨ √≠√• √≠√†√©√§√•√≠");
	cache_get_value_name_int(0, "id", idoff);
	SetPVarInt(playerid, "tmpNumberAcc", idoff);
	string[0] = EOS;
	mysql_format(mysql_Handle, string, 128, "SELECT `Nick` FROM `banlist` WHERE `Nick` = '%s'", NAME);
	return mysql_tquery(mysql_Handle, string, "OffBan", "isis",playerid,NAME,DAYS,REASON);
}
CB: OffBan(playerid,NAME[],DAYS,REASON[]) {
	new rows;
	cache_get_row_count(rows);
	if(rows) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √≥√¶√• √ß√†√°√†√≠√•√≠");
	new tmpid = GetPVarInt(playerid, "tmpNumberAcc");
	DeletePVar(playerid, "tmpNumberAcc");
	new day, month, year, hour, minuite, second;
	getdate(year, month, day);
	gettime(hour, minuite, second);
	FixHour(hour);
	hour = shifthour;
	new data2[22];
	format(data2, 22, "%02d.%02d.%d √¢ %02d:%02d",day, month, year, hour, minuite);
	if(DAYS < 2 || DAYS > 30) return SCM(playerid, COLOR_LIGHTGREY, "√ë√∞√Æ√™ √¨√Æ√¶√•√≤ √°√ª√≤√º √Æ√≤ 2 √§√Æ 30 √§√≠√•√©");
	new query_mysql[320], data[16], un_ban_date = gettime() + DAYS*86400;
	format(data,sizeof(data), "%s",date("%dd.%mm.%yyyy",gettime()));

	format(query_mysql,sizeof(query_mysql), "INSERT INTO `banlist` (`id_acc`,`Nick`,`Admin`, `Date` ,`Reason`,`Days`,`UnbanDate`) VALUES (%d,'%s','%s','%s','%s',%i,%d)", tmpid,NAME, pData[playerid][pName], data, REASON, DAYS, un_ban_date);
	mysql_tquery(mysql_Handle, query_mysql);

	format(query_mysql,sizeof(query_mysql), "DELETE FROM `warninfo` WHERE `id_acc` = %d", tmpid);
	mysql_tquery(mysql_Handle, query_mysql);
	mysql_format(mysql_Handle, string, 120, "SELECT `pBansAll` FROM `accounts` WHERE `Name` = '%s'", NAME);
	mysql_tquery(mysql_Handle, string, "querybans", "ds", playerid, NAME);
	if(pData[playerid][pSex] == 1) format(query_mysql,sizeof(query_mysql), "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √ß√†√°√†√≠√®√´ √Æ√¥√¥√´√†√©√≠ √®√£√∞√Æ√™√† %s √≠√† %i √§√≠√•√©. √è√∞√®√∑√®√≠√†: %s',%d,'%s')", pData[playerid][pName],NAME,DAYS,REASON, tmpid, data2);
	else format(query_mysql,sizeof(query_mysql), "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √ß√†√°√†√≠√®√´√† √Æ√¥√¥√´√†√©√≠ √®√£√∞√Æ√™√† %s √≠√† %i √§√≠√•√©. √è√∞√®√∑√®√≠√†: %s',%d,'%s')", pData[playerid][pName],NAME,DAYS,REASON, tmpid, data2);
	mysql_tquery(mysql_Handle, query_mysql);
	if(pData[playerid][pSex] == 1) format(string,164,"√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √ß√†√°√†√≠√®√´ √Æ√¥√¥√´√†√©√≠ √®√£√∞√Æ√™√† %s √≠√† %i √§√≠√•√©. √è√∞√®√∑√®√≠√†: %s",pData[playerid][pName],NAME,DAYS,REASON);
	else format(string,164,"√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √ß√†√°√†√≠√®√´√† √Æ√¥√¥√´√†√©√≠ √®√£√∞√Æ√™√† %s √≠√† %i √§√≠√•√©. √è√∞√®√∑√®√≠√†: %s",pData[playerid][pName],NAME,DAYS,REASON);
	SCMTA_setting(COLOR_LIGHTRED, string);
	return gAdmin[playerid][ADMIN_BAN] ++;
}
CMD:offwarn(playerid, params[]) {
	if(pData[playerid][pAdmin] < 4) return 1;
	new reason[32], Name[24];
	if(sscanf(params,"ss",Name,reason)) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /offwarn [√≠√®√™ √®√£√∞√Æ√™√†] [√Ø√∞√®√∑√®√≠√†]");
	if(IsPlayerConnected(GetPlayerID(Name))) return SCMF(playerid, 0xBFBB41FF, "√à√£√∞√Æ√™ √Ø√Æ√§√™√´√æ√∑¬∏√≠ √™ √±√•√∞√¢√•√∞√≥. Usar "CBLUE"/warn %d [√Ø√∞√®√∑√®√≠√†] {bfbb41}√∑√≤√Æ√°√ª √¢√ªS√≠√≤√º √•√¨√≥ √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√•", GetPlayerID(Name));
	if(strlen(reason) > sizeof(reason) - 1) return SCM(playerid, COLOR_LIGHTGREY, "√ë√´√®√∏√™√Æ√¨ √§√´√®√≠√≠√†√ø √Ø√∞√®√∑√®√≠√†");
	string[0] = EOS;
	mysql_format(mysql_Handle, string, 128, "SELECT * FROM `admin` WHERE `Name` = '%s'", Name);
	return mysql_tquery(mysql_Handle, string, "OffWarnChAdm", "iss",playerid,Name,reason);
}
CB: OffWarnChAdm(playerid,tmp[],reason[]) {
	new rows;
	cache_get_row_count(rows);
	if(rows) {
		if(!GetPVarInt(playerid, "OffWarnAdmSo")) {
			SetPVarInt(playerid, "OffWarnAdmSo", true);
			return SCM(playerid, COLOR_ERROR, "√Ç√ª √±√Æ√°√®√∞√†√•√≤√•√±√º √¢√ªS√≠√≤√º √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√• √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√≥ √±√•√∞√¢√•√∞√†. √ó√≤√Æ√°√ª √Ø√∞√Æ√§√Æ√´√¶√®√≤√º, √¢√¢√•√§√®√≤√• √™√Æ√¨√†√≠√§√≥ √•√π¬∏ √∞√†√ß");
		}
	}
	string[0] = EOS;
	mysql_format(mysql_Handle, string, 128, "SELECT `Name`,`pWarns`, `id` FROM `accounts` WHERE `Name` = '%s'", tmp);
	return mysql_tquery(mysql_Handle, string, "OffWarn", "iss",playerid,tmp,reason);
}
CMD:ar(playerid) {
	if(pData[playerid][pAdmin] < 2) return 1;
	if(IsPlayerInAnyVehicle(playerid))
	{
		RepairVehicle(GetPlayerVehicleID(playerid));
		return GameTextForPlayer(playerid, "CAR REPAIRED", 1000, 3);
	}
	else return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¢ √≤√∞√†√≠√±√Ø√Æ√∞√≤√•");
}
CMD:alock(playerid)
{
	if(pData[playerid][pAdmin] < 2) return 1;
	new bool:success, str[35];
	for(new i = 0, ps = GetVehiclePoolSize(); i <= ps; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 4.0, VehInfo[i][vehicleX],VehInfo[i][vehicleY],VehInfo[i][vehicleZ]))
		{
			ToggleLock(i, (VehInfo[i-1][vLock]) ? (false) : (true));

			if(VehInfo[i-1][vLock]) str = "~r~~h~close";
			else str = "~g~~h~open";
			format(str, sizeof(str), "%s~n~~w~near vehicle", str);
			GameTextForPlayer(playerid, str, 1100, 3);
			PlayerPlaySound(playerid, 25800, VehInfo[i][vehicleX],VehInfo[i][vehicleY],VehInfo[i][vehicleZ]);

			success = true;
			break;
		}
	}
	if(!success) SCM(playerid, COLOR_GREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √Æ√™√Æ√´√Æ √≤√∞√†√≠√±√Ø√Æ√∞√≤√†");
	return 1;
}
alias:animlist("anim");
CMD:animlist(playerid) {
	if(GetPVarInt(playerid, "takingselfie")) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √†√≠√®√¨√†√∂√®√® √¢ S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤");
	if(IsPlayerApplyAnimation(playerid, "Bat_4")) return SCM(playerid, COLOR_GREY, "√Ç√†√¨ √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √ß√†√¢√•√∞√∏√®√≤√º √¢√±√• √≠√†√∑√†√≤√ª√• √∞√†√°√Æ√≤√ª √® √§√•√©√±√≤√¢√®√ø");
	if(PlayerTied{playerid} > false) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √†√≠√®√¨√†√∂√®√® √¢ S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤");
    if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ä√≠√®√¨√†√∂√®√® √≠√•√´√º√ß√ø √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √¢ √≤√∞√†√≠√±√Ø√Æ√∞√≤√•");
	if(GetPVarInt(playerid, "PlayerCuffed")) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √†√≠√®√¨√†√∂√®√® √¢ √≠√†√∞√≥√∑√≠√®√™√†√µ");
	return SPD(playerid, 510, DIALOG_STYLE_LIST, "{ffd770}√ë√Ø√®√±√Æ√™ √†√≠√®√¨√†√∂√®√©", 
        ""CMAIN"[1] "CWHITE"√ë√≤√Æ√©√™√®\n\
        "CMAIN"[2] "CWHITE"√Ü√•√±√≤√ª\n\
        "CMAIN"[3] "CWHITE"√ë√®√§√•√≤√º/√´√•√¶√†√≤√º\n\
        "CMAIN"[4] "CWHITE"√é√∞√≥√¶√®√•\n\
        "CMAIN"[5] "CWHITE"√ê√•√£√≥√´√®√∞√Æ√¢√™√® √§√¢√®√¶√•√≠√®√ø\n\
        "CMAIN"[6] "CWHITE"√É√†√≠√£√±√≤√•√∞√±√™√®√• √¶√•√±√≤√ª\n\
        "CMAIN"[7] "CWHITE"√è√∞√®√¢√•√≤√±√≤√¢√®√•\n\
        "CMAIN"[8] "CWHITE"√è√Æ√∂√•√´√≥√®\n\
        "CMAIN"[9] "CWHITE"√ä√≥√∞√•√≠√®√•\n\
        "CMAIN"[10] "CWHITE"√í√†√≠√∂√ª\n\
        "CMAIN"[11] "CWHITE"√Ä√´√™√Æ√£√Æ√´√º/√≠√†√∞√™√Æ√≤√®√™√®\n\
        "CMAIN"[12] "CWHITE"√ù√¨√Æ√∂√®√®\n\
        "CMAIN"[13] "CWHITE"√ó√®√≤√†√≤√º √∞√Ω√Ø\n\
        "CMAIN"[14] "CWHITE"√Å√†√∞\n\
        "CMAIN"[15] "CWHITE"√É√†√≠√£√±√≤√•√∞√ª\n\
        "CMAIN"[16] "CWHITE"√Ñ√•√©√±√≤√¢√®√ø √± √Ø√∞√•√§√¨√•√≤√†√¨√®\n\
        "CMAIN"[17] "CWHITE"√è√∞√Æ√∑√•√•", 
    "Seleccione", "Cerrar");
}
CMD:alogin(playerid, params[]) {
	if(GetPVarInt(playerid, "alogin43")) return SCM(playerid, COLOR_ERROR, "√ç√† √Ç√†√∏√•√¨ √†√™√™√†√≥√≠√≤√• √Æ√≤√™√´√æ√∑√•√≠√† √†√§√¨√®√≠-√†√¢√≤√Æ√∞√®√ß√†√∂√®√ø");
	if(GetPVarInt(playerid, "alogin33")) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≥√¶√• √†√¢√≤√Æ√∞√®√ß√Æ√¢√†√≠√ª √™√†√™ √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞");
	if(GetPVarInt(playerid, "check_alogin") > gettime()) return 1;
	string[0] = EOS;
	format(string, 128, "SELECT * FROM `admin` WHERE `Name` = '%s'", pData[playerid][pName]);
	mysql_tquery(mysql_Handle, string, "alogin1", "ds",playerid,pData[playerid][pName]);
	return SetPVarInt(playerid, "check_alogin", gettime() + 5);
}
CMD:changekey(playerid, params[]) {
	if(!pData[playerid][pAdmin]) return 1;
	if(GetPVarInt(playerid, "alogin43")) return SCM(playerid, COLOR_ERROR, "√ù√≤√† √¢√Æ√ß√¨√Æ√¶√≠√Æ√±√≤√º √Æ√≤√™√´√æ√∑√•√≠√† √§√´√ø √Ç√†√±");
	string[0] = EOS;
	format(string, 128, "SELECT * FROM `admin` WHERE `name` = '%s'", pData[playerid][pName]);
	return mysql_tquery(mysql_Handle, string, "changekey", "ds",playerid,pData[playerid][pName]);
}
CMD:setadmin(playerid, params[]) {
	if(pData[playerid][pAdmin] < 6 && !IsAFull(playerid)) return 1;
	new Level;
	if(sscanf(params, "dd", params[0], Level)) return SCM(playerid, COLOR_GREY, "Usar: /setadmin [id √®√£√∞√Æ√™√†] [√≥√∞√Æ√¢√•√≠√º] (√±√≠√ø√≤√º: 0)");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √± √≤√†√™√®√¨ √†√©√§√® √≠√• √≠√†√©√§√•√≠");
	if(pData[playerid][pAdmin] < 7 && !IsAFull(playerid)) {
		if(Level > 4 || Level < 0) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √¢√ªS√≠√¢√†√≤√º √°√Æ√´√º√∏√• 4-√£√Æ √≥√∞√Æ√¢√≠√ø √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√†");
		if(pData[playerid][pAdmin] <= pData[params[0]][pAdmin]) 
			return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• Cambio √≥√∞√Æ√¢√•√≠√º √Ø√∞√†√¢ √Ω√≤√Æ√¨√≥ √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√≥");
	}
	else if(Level > 7 || Level < 0) return SCM(playerid, COLOR_LIGHTGREY, "√ì√∞√Æ√¢√•√≠√º √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√† √Æ√≤ 1 √§√Æ 7");
	string[0] = EOS;
	format(string, 128, "SELECT * FROM `admin` WHERE `name` = '%s'", GetName(params[0]));
	return mysql_tquery(mysql_Handle, string, "SetLvlAdm", "dsd",playerid,GetName(params[0]),Level);
}
CMD:setadminoff(playerid, params[]) {
	if(pData[playerid][pAdmin] < 7) return 1;
	new Name[24],Level;
	if(sscanf(params, "s[24]d",Name,Level)) return SCM(playerid, COLOR_GREY, "Usar: /setadminoff [√≠√®√™ √®√£√∞√Æ√™√†] [√≥√∞√Æ√¢√•√≠√º] (√±√≠√ø√≤√º: 0)");
	if(Level > 7 || Level < 0) return SCM(playerid, COLOR_LIGHTGREY, "√ì√∞√Æ√¢√•√≠√º √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√† √Æ√≤ 1 √§√Æ 7");
	if(IsPlayerConnected(GetPlayerID(Name))) return SCM(playerid, 0xE5B090FF, "√à√£√∞√Æ√™ √≠√• √§√Æ√´√¶√•√≠ √°√ª√≤√º √Ø√Æ√§√™√´√æ√∑¬∏√≠ √™ √±√•√∞√¢√•√∞√≥");
	string[0] = EOS;
	format(string, 128, "SELECT * FROM `admin` WHERE `name` = '%s'", Name);
	return mysql_tquery(mysql_Handle, string, "SetLvlAdm", "dsd",playerid,Name,Level);
}
CMD:home(playerid) {
	if(pData[playerid][pHouse] == -1) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¢√´√†√§√•√•√≤√• √§√Æ√¨√Æ√¨");
	new str_h[400] = "[1] √à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ √§√Æ√¨√•\n[2] "CMAIN"√é√≤√™√∞√ª√≤√º "CWHITE"√®√´√® "CERROR"Cerrar "CWHITE"√§√Æ√¨\n[3] √è√∞√ÆS√≠√≤√º √§√Æ√¨ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥\n[4] √è√∞√ÆS√≠√≤√º √§√Æ√¨ √§√∞√≥√£√Æ√¨√≥ √®√£√∞√Æ√™√≥\n[5] √Ñ√Æ√±√≤√†√¢√®√≤√º √≤√∞√†√≠√±√Ø√Æ√∞√≤ √™ √§√Æ√¨√≥\n[6] √ê√†√±√±√≤√†√≠√Æ√¢√™√† √¨√•√°√•√´√®\n[7] √ì√´√≥√∑√∏√®√≤√º √§√Æ√¨\n[8] {ff6640}√è√∞√ÆS√≠√≤√º "CWHITE"√≤√∞√†√≠√±√Ø√Æ√∞√≤ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥\n[9] {fa1010}√è√∞√ÆS√≠√≤√º "CWHITE"√≤√∞√†√≠√±√Ø√Æ√∞√≤ √§√∞√≥√£√Æ√¨√≥ √®√£√∞√Æ√™√≥";
	if(HouseInfo[pData[playerid][pHouse]][hSafe]) strcat(str_h, "\n{cccc66}[10] √Ñ√Æ√¨√†√∏√≠√®√© √±√•√©√¥");
	return SPD(playerid, 5300, DIALOG_STYLE_LIST, "{cc9900}√ì√Ø√∞√†√¢√´√•√≠√®√• √§√Æ√¨√Æ√¨", str_h, "Seleccione", "Cerrar");
}
CMD:family(playerid) {
	if(pData[playerid][familyID] == -1) 
		return SCM(playerid,COLOR_LIGHTGREY,"√Ç√ª √≠√• √±√Æ√±√≤√Æ√®√≤√• √¢ √±√•√¨√º√•");
	return SPD(playerid,7805,DIALOG_STYLE_LIST,"{00cc99}√å√•√≠√æ √±√•√¨√º√®","[1] √é√°√π√†√ø √®√≠√¥√Æ√∞√¨√†√∂√®√ø\n[2] √ó√´√•√≠√ª √±√•√¨√º√®\n[3] √è√Æ√™√®√≠√≥√≤√º √±√•√¨√º√æ\n[4] √ñ√¢√•√≤ √∑√†√≤√†\n[5] Cambio √≠√†√ß√¢√†√≠√®√• √±√•√¨√º√® {ff9933}(2900$)\n[6] √ìS√≠√´√®√≤√º √±√•√¨√º√æ","Seleccione","Cerrar");
}
CMD:fc(playerid,params[]) {
	new family = pData[playerid][familyID];
	if(family == -1) 
		return SCM(playerid,COLOR_LIGHTGREY,"√Ç√ª √≠√• √±√Æ√±√≤√Æ√®√≤√• √¢ √±√•√¨√º√•");
	new text[100];
	if(sscanf(params,"s[100]",text)) 
		return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /fc [√≤√•√™√±√≤]");
	SetPlayerChatBubble(playerid, "√é√≤√Ø√∞√†√¢√´√ø√•√≤ √±√Æ√Æ√°√π√•√≠√®√• √±√•√¨√º√•", get_family_color(family), 60.0, 10000);
	new fr[144];
	format(fr,sizeof(fr),"[√ë√•√¨√º√ø] %s: %s",GetName(playerid),text);
	return send_fam_mes(family,fr);
}
CB: check_name_fam(playerid,name_fam[]) {
	new rows,
		family = pData[playerid][familyID];
	cache_get_row_count(rows);
	if(rows) {
		SPD(playerid,7093,DIALOG_STYLE_INPUT,"{FFCD00}√ë√¨√•√≠√† √≠√†√ß√¢√†√≠√®√ø √±√•√¨√º√®",""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¢√Æ√• √≠√†√ß√¢√†√≠√®√• √§√´√ø √±√•√¨√º√® √¢ √Ø√Æ√´√• √≠√®√¶√•.\n√Ñ√´√®√≠√† √¨√Æ√¶√•√≤ √°√ª√≤√º {99ccff}√Æ√≤ 3 √§√Æ 15 √±√®√¨√¢√Æ√´√Æ√¢:","Cambio","Cerrar");
		return SCM(playerid,COLOR_ERROR,"√ë√•√¨√º√ø √± √≤√†√™√®√¨ √≠√†√ß√¢√†√≠√®√•√¨ √≥√¶√• √±√≥√π√•√±√≤√¢√≥√•√≤");
	}
	if(pData[playerid][pCash] < 2900) {
		SCM(playerid,COLOR_LIGHTGREY,"√ç√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √®√ß√¨√•√≠√•√≠√®√ø √≠√†√ß√¢√†√≠√®√ø");
		return callcmd::family(playerid);
	}
	Hook_GivePlayerMoney(playerid,-2900);
	GameTextForPlayer(playerid, "~r~-2900$", 3000, 1);
	strmid(family_info[family][_fam_name], name_fam, 0, strlen(name_fam), 255);
	save_family(family);
	return SCMF(playerid,get_family_color(family),"√Ç√ª √®√ß√¨√•√≠√®√´√® √≠√†√ß√¢√†√≠√®√• √±√•√¨√º√® √≠√† {FFCD00}%s",name_fam);
}
CB: check_relevant_name_family(playerid,name_fam[]) {
	new rows;
	cache_get_row_count(rows);
	if(rows) {
		SPD(playerid,993,DIALOG_STYLE_INPUT,"{FFCD00}√ë√Æ√ßS√≠√≠√®√• √±√•√¨√º√®",
			""CWHITE"√ó√≤√Æ√°√ª √Ø√∞√Æ√§√Æ√´√¶√®√≤√º, √¢√¢√•√§√®√≤√• √≠√†√ß√¢√†√≠√®√• √¢√†√∏√•√©\n\
			√°√≥√§√≥√π√•√© √±√•√¨√º√®. √é√≠√Æ √≠√• √§√Æ√´√¶√≠√Æ √≠√†√∞√≥√∏√†√≤√º √Ø√∞√†√¢√®√´√†\n\
			√±√•√∞√¢√•√∞√†.\n\
			√å√†√™√±√®√¨√†√´√º√≠√†√ø √§√´√®√≠√†: {00cc33}30 √ß√≠√†√™√Æ√¢.",
		"√É√Æ√≤√Æ√¢√Æ","Cerrar");
		return SCM(playerid,COLOR_ERROR,"√ë√•√¨√º√ø √± √≤√†√™√®√¨ √≠√†√ß√¢√†√≠√®√•√¨ √≥√¶√• √±√≥√π√•√±√≤√¢√≥√•√≤");
	}

	pData[playerid][familyID]=TOTAL_FAMILYS;
	UpdatePlayerData(playerid,"familyID",TOTAL_FAMILYS);
	strmid(family_info[TOTAL_FAMILYS][_fam_name], name_fam, 0, strlen(name_fam), 255);
	new day, month, year;
	getdate(year, month, day);
	new famdate[15];
	format(famdate, sizeof(famdate), "%02d.%02d.%d",day, month, year);
	strmid(family_info[TOTAL_FAMILYS][_fam_date], famdate, 0, strlen(famdate), 255);
	strmid(family_info[TOTAL_FAMILYS][_fam_owner], pData[playerid][pName], 0, strlen(pData[playerid][pName]), 255);
	family_info[TOTAL_FAMILYS][_fam_members]=1;
	new fQuery[200];
	mysql_format(mysql_Handle, fQuery, sizeof(fQuery), "INSERT INTO `family_system` (`id`,`name`,`famdate`,`owner`,`colorid`,`members`) VALUES (%d,'%s','%s','%s',0,1)",
	TOTAL_FAMILYS,name_fam,famdate,pData[playerid][pName]);
	mysql_tquery(mysql_Handle, fQuery);
	TOTAL_FAMILYS++;
	withdraw_donate(playerid, 359, "√ë√Æ√ßS√≠√≠√®√• √±√•√¨√º√®");
	SCMF(playerid, COLOR_YELLOW, "√è√Æ√ß√§√∞√†√¢√´√ø√•√¨! √ë√•√¨√º√ø {6699ff}%s "CYELLOW"√≥√±√Ø√•√∏√≠√Æ √±√Æ√ßS√≠√≠√†", name_fam);
	return SCM(playerid, COLOR_MAIN, "√Ç√ª √¨√Æ√¶√•√≤√• √Æ√ß√≠√†√™√Æ√¨√®√≤√º√±√ø √± √™√Æ√¨√†√≠S√≠√¨√® √≥√Ø√∞√†√¢√´√•√≠√®√ø √®√±√Ø√Æ√´√º√ß√≥√ø "CORANGE"/mn > √ë√Ø√®√±√Æ√™ √™√Æ√¨√†√≠√§");
}
CMD:finvite(playerid,params[]) {
	new family = pData[playerid][familyID];
	if(family == -1) 
		return SCM(playerid,COLOR_LIGHTGREY,"√Ç√ª √≠√• √±√Æ√±√≤√Æ√®√≤√• √¢ √±√•√¨√º√•");
	if(pData[playerid][fam_moder] == 0 && strcmp(family_info[family][_fam_owner],pData[playerid][pName]))
		return SCM(playerid,COLOR_LIGHTGREY,"√î√≥√≠√™√∂√®√ø √§√Æ√±√≤√≥√Ø√≠√† √≤√Æ√´√º√™√Æ √Æ√±√≠√Æ√¢√†√≤√•√´√æ √® √∞√≥√™√Æ√¢√Æ√§√±√≤√¢√≥ √±√•√¨√º√®");

	new to_player;
	if(sscanf(params, "d", to_player)) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /finvite [id √®√£√∞√Æ√™√†]");
	if(playerid == to_player) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Ø√∞√®√£√´√†√±√®√≤√º √±√•√°√ø");
	if(!IsPlayerConnected(to_player)) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(!ProxDetectorS(7, playerid, to_player)) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
	if(pData[to_player][familyID] != -1) 
		return SCM(playerid,COLOR_LIGHTGREY,"√à√£√∞√Æ√™ √≥√¶√• √±√Æ√±√≤√Æ√®√≤ √¢ √±√•√¨√º√•");
	SCMF(playerid, COLOR_BLUE, "√Ç√ª √Ø√∞√•√§√´√Æ√¶√®√´√® %s √¢√±√≤√≥√Ø√®√≤√º √¢ √Ç√†√∏√≥ √±√•√¨√º√æ {ffbb00}%s", GetName(to_player), family_info[family][_fam_name]);
	SetPVarInt(playerid, "cancel_act", 1);
	SetPVarInt(playerid, "cancel_act_id", to_player);
	SCMF(to_player, COLOR_BLUE, "%s √Ø√∞√•√§√´√†√£√†√•√≤ √Ç√†√¨ √¢√±√≤√≥√Ø√®√≤√º √¢ √•√£√Æ √±√•√¨√º√æ {ffbb00}%s", GetName(playerid), family_info[family][_fam_name]);
	SetPVarInt(to_player, "offer", 1);
	SetPVarInt(to_player, "offer_FAMILY", 1);
	SetPVarInt(to_player, "FAMILY_targetid", playerid);
	return SCM(to_player, -1, "√ç√†√¶√¨√®√≤√• "CMAIN"Y "CWHITE"√∑√≤√Æ√°√ª √±√Æ√£√´√†√±√®√≤√º√±√ø √®√´√® "CERROR"N "CWHITE"√§√´√ø √Æ√≤√™√†√ß√†");
}
stock save_family(family) {
	new fQuery[170];
	mysql_format(mysql_Handle, fQuery, sizeof(fQuery), "UPDATE `family_system` SET `name` = '%s', `owner`='%s',`colorid`=%d,`members`=%d WHERE `id`=%d",
	family_info[family][_fam_name],family_info[family][_fam_owner],family_info[family][_fam_colorid],family_info[family][_fam_members],family);
	mysql_tquery(mysql_Handle, fQuery);
}
stock send_fam_mes(family,frmt[]) {
	new col = get_family_color(family);
	foreach(new i:Player) {
		if(pData[i][familyID] != family) continue;
		SCM(i,col,frmt);
	}
	return 1;
}
CB: show_fam_members(playerid) {
	new rows,
		frm[400],
		member_name[MAX_PLAYER_NAME];
	cache_get_row_count(rows);
	new family = pData[playerid][familyID];
	for(new i=0; i<rows; i++) {
		if(i>=15) break;
		cache_get_value_name(i, "Name", member_name);
		if(!strcmp(family_info[family][_fam_owner],member_name)) 
			format(frm,sizeof(frm),"%s{3399ff}%s"CWHITE"\n",frm,member_name);
		else format(frm,sizeof(frm),"%s%s\n",frm,member_name);
	}
	return SPD(playerid,7051,DIALOG_STYLE_LIST,"{FFCD00}√ó√´√•√≠√ª √±√•√¨√º√®",frm,"Seleccione","Siguiente");
}
CB: action_fam_members(playerid,litem) {
	new rows,
		frm[220],
		p_listitem = -1,
		mname[MAX_PLAYER_NAME],
		mlvl,
		mphone,
		phonestr[20] = "{ff6633}No";
	cache_get_row_count(rows);
	for(new i = 0; i < rows; i ++) {
		p_listitem ++;
		if(p_listitem != litem) continue;
		cache_get_value_name(i, "Name", mname);
		SetPVarString(playerid, "family_info_nick", mname);
		cache_get_value_name_int(i, "pLevel", mlvl);
		cache_get_value_name_int(i, "pPnumber", mphone);
		if(mphone != -1) format(phonestr,sizeof(phonestr),"{cc99ff}%d",mphone);
		format(frm,sizeof(frm),""CWHITE"√à√¨√ø:\t\t\t{00cc99}%s\n"CWHITE"√ì√∞√Æ√¢√•√≠√º:\t\t{ff9900}%d\n"CWHITE"√í√•√´√•√¥√Æ√≠:\t\t%s\n"CWHITE"√ë√≤√†√≤√≥√±:\t\t\t{66ccff}%s",
		mname,mlvl,phonestr,(!strcmp(family_info[pData[playerid][familyID]][_fam_owner],mname)) ? ("√é√±√≠√Æ√¢√†√≤√•√´√º") : (pData[playerid][fam_moder] == 1) ? ("√ê√≥√™√Æ√¢√Æ√§√®√≤√•√´√º") : ("√é√°√ª√∑√≠√ª√©"));
		break;
	}
	return SPD(playerid,7052,DIALOG_STYLE_MSGBOX,"{FFCD00}√ó√´√•√≠ √±√•√¨√º√®",frm,"√Ñ√•√©√±√≤√¢√®√ø","Siguiente");
}
CMD:liveout(playerid) {
	if(pData[playerid][p_rent_flat] == -1) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √†√∞√•√≠√§√≥√•√≤√• √™√¢√†√∞√≤√®√∞√≥");

	new flat_id = pData[playerid][p_rent_flat];
	strmid(flat_info[flat_id][fl_renter], ("None"), 0, strlen("None"), 255);
	mysql_format(mysql_Handle, string, 70, "UPDATE `flats` SET `_fl_renter` = 'None' WHERE `_fl_id` = %d", flat_id);
	mysql_tquery(mysql_Handle, string);
	
	pData[playerid][p_rent_flat] = -1;
	UpdatePlayerData(playerid, "p_rent_flat", -1);
	return SCM(playerid, COLOR_BLUE, "√Ç√ª √¢√ª√±√•√´√®√´√®√±√º √®√ß √™√¢√†√∞√≤√®√∞√ª");
}
CMD:sellhome(playerid) {
	new hh = pData[playerid][pHouse];
	if(hh != -1 && !strcmp(pData[playerid][pName], HouseInfo[hh][hOwner], true)) {
		if(IsPlayerInRangeOfPoint(playerid, 4.0,HouseInfo[hh][hEnter][0], HouseInfo[hh][hEnter][1], HouseInfo[hh][hEnter][2])) {
			new str_sellb[160], nalog = HouseInfo[hh][hValue] * Business_Nalog / 100;
			format(str_sellb, sizeof(str_sellb), ""CWHITE"√Ç√ª √§√•√©√±√≤√¢√®√≤√•√´√º√≠√Æ √µ√Æ√≤√®√≤√• √Ø√∞√ÆS√≠√≤√º √§√Æ√¨ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥?\n√ë √≥√∑√•√≤√Æ√¨ √≠√†√´√Æ√£√† √±√≤√Æ√®√¨√Æ√±√≤√º √Ø√∞√ÆS√≠√¶√® √±√Æ√±√≤√†√¢√®√≤ "CCYAN"%d$", HouseInfo[hh][hValue] - nalog);
			SPD(playerid, 5033, DIALOG_STYLE_MSGBOX, ""CMAIN"√è√∞√ÆS√≠√¶√† √§√Æ√¨√†", str_sellb, "S√≠", "No");
		}
		else SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √Æ√™√Æ√´√Æ √¢√µ√ÆS√≠ √¢ √±√¢√Æ√© √§√Æ√¨");
	}
	else SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √§√Æ√¨√†");
	return 1;
}
CMD:makegun(playerid, params[]) {
	if(!IsAGang(playerid) && !IsAMafia(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √±√Æ√±√≤√Æ√®√≤√• √¢ √°√†√≠√§√• √®√´√® √¨√†√¥√®√®");
	if(IsAGang(playerid)) {
		new bool: terr_status;
		new org=pData[playerid][pMember];
		for(new i = 0; i < sizeof(GZInfo); i ++) {
			if(!PlayerToKvadrat(playerid, GZInfo[i][gCoords][0], GZInfo[i][gCoords][1], GZInfo[i][gCoords][2], GZInfo[i][gCoords][3])) continue;
			if(org != GZInfo[i][gFrakVlad]) continue;
			terr_status = true;
		}
		
		if(!terr_status) {
			if(!IsPlayerInRangeOfPoint(playerid, 100, FractionInfo[org][fPosX],FractionInfo[org][fPosY],FractionInfo[org][fPosZ]) || 
			GetPlayerVirtualWorld(playerid) != FractionInfo[org][fractionVirt] || 
			GetPlayerInterior(playerid) != FractionInfo[org][fractionInt]) 
			return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√Æ√°√µ√Æ√§√®√¨√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √≠√† √≤√•√∞√∞√®√≤√Æ√∞√®√® √±√¢√Æ√•√© √°√†√≠√§√ª");
		}
	}
	new str_meaction[128], id_gun, count_ammo;
	if(sscanf(params, "dd", id_gun, count_ammo))
	{
		format(string, 200, 
		"ID √ç√†√ß√¢√†√≠√®√•\t\t√ä-√¢√Æ √¨√•√≤√†√´√´√†\n\
		"CWHITE"\n\
		1  SD Pistol\t\t\t3\n\
		2  Desert Eagle\t\t\t6\n\
		3  Shotgun\t\t\t8\n\
		4  MP5\t\t\t\t9\n\
		5  AK47\t\t\t\t10\n\
		6  M4\t\t\t\t10\n\
		7  Country Rifle\t\t11\n");
		if(IsAMafia(playerid))
		{
			strcat(string, "8  Sniper Rifle\t\t\t12\n");
		}
		strcat(string, "\n√ó√≤√Æ√°√ª √§√Æ√°√†√¢√®√≤√º √Ø√†√≤√∞√Æ√≠√ª √™ √±√Æ√ßS√≠√≠√≠√Æ√¨√≥\n√Æ√∞√≥√¶√®√æ, √¢√Æ√ß√º√¨√®√≤√• √•√£√Æ √¢ √∞√≥√™√® √Ø√•√∞√•√§\n√®√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√•√¨ √™√Æ√¨√†√≠√§√ª");
		
		SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CMAIN"√à√ß√£√Æ√≤√Æ√¢√´√•√≠√®√• √Æ√∞√≥√¶√®√ø", string, "Cerrar", "");
		string[0] = EOS;
	
		return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /makegun [id √Æ√∞√≥√¶√®√ø √®√ß √±√Ø√®√±√™√†] [√™√Æ√´-√¢√Æ √Ø√†√≤√∞√Æ√≠√Æ√¢]");
	}

	new gunid, metal;
	switch(id_gun)
	{
		case 1: gunid = 22, metal = 3;
		case 2: gunid = 24, metal = 6;
		case 3: gunid = 25, metal = 8;
		case 4: gunid = 29, metal = 8;
		case 5: gunid = 30, metal = 9;
		case 6: gunid = 31, metal = 10;
		case 7: gunid = 33, metal = 10;
		case 8: if(IsAMafia(playerid)) gunid = 34, metal = 11;
	}
	if(gunid == 0) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√¢√•√∞√≠√ª√© ID √Æ√∞√≥√¶√®√ø. √Ç√¢√•√§√®√≤√• {00CC99}/makegun "CLIGHTGREY"√§√´√ø √Æ√ß√≠√†√™√Æ√¨√´√•√≠√®√ø √±√Æ √±√Ø√®√±√™√Æ√¨");

	if(count_ammo < 1) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§√•√≠√Æ √≠√•√¢√•√∞√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √Ø√†√≤√∞√Æ√≠√Æ√¢ √§√´√ø √Æ√∞√≥√¶√®√ø");
	if(count_ammo > 300) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √°√Æ√´√•√• 300 √Ø√†√≤√∞√Æ√≠√Æ√¢ √ß√† √∞√†√ß");
	if(pData[playerid][pPatr] < count_ammo) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√†√™√Æ√£√Æ √™√Æ√´√®√∑√•√±√≤√¢√† √Ø√†√≤√∞√Æ√≠√Æ√¢");

	if(pData[playerid][pMetal] < metal) return SCMF(playerid, COLOR_LIGHTGREY, "√Ñ√´√ø √®√ß√£√Æ√≤√Æ√¢√´√•√≠√®√ø √Ω√≤√Æ√£√Æ √Æ√∞√≥√¶√®√ø √≤√∞√•√°√≥√•√≤√±√ø "CPALEGREEN"%d √™√£ "CLIGHTGREY"√¨√•√≤√†√´√´√†", metal);

	new weaponname[18];
	GetWeaponName(gunid, weaponname, sizeof(weaponname));

	pData[playerid][pPatr] -= count_ammo;
	UpdatePlayerData(playerid, "pPatr", pData[playerid][pPatr]);
	GivePlayerWeapon(playerid, gunid, count_ammo);

	if(GetPlayerWeapon(playerid) == gunid)
	{
		format(str_meaction, 128, "%s √§√Æ√°√†√¢√®√´%s √™ %s %d √Ø√†√≤√∞.",
			GetName(playerid), (pData[playerid][pSex] == 2) ? ("√†") : (""), weaponname, count_ammo);

		ProxDetector(30.0, playerid, str_meaction, COLOR_PURPLE);
	}
	else
	{
		format(str_meaction, 128, "%s √±√§√•√´√†√´%s %s √®√ß √¨√•√≤√†√´√´√† √® %d √Ø√†√≤√∞.", 
			GetName(playerid), (pData[playerid][pSex] == 2) ? ("√†") : (""), weaponname, count_ammo);

		ProxDetector(30.0, playerid, str_meaction, COLOR_PURPLE);
		
		pData[playerid][pMetal] -= metal;
		UpdatePlayerData(playerid, "pMats", pData[playerid][pMetal]);
		SCMF(playerid, COLOR_MAIN, "√ç√† √®√ß√£√Æ√≤√Æ√¢√´√•√≠√®√• √Æ√∞√≥√¶√®√ø √°√ª√´√Æ √ß√†√≤√∞√†√∑√•√≠√Æ %d √™√£ √¨√•√≤√†√´√´√†", metal);
	}
	
	return 1;
}
CMD:sellbiz(playerid) {
	if(pData[playerid][unikauto_Have] != 0) {
		if(!IsPlayerInRangeOfPoint(playerid, 8.0, 354.5406,-1790.6511,5.1084)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √°√®√ß√≠√•√±√†");
		return SPD(playerid, 3759, DIALOG_STYLE_MSGBOX, ""CMAIN"√è√∞√ÆS√≠√¶√† √°√®√ß√≠√•√±√†", ""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √Ø√∞√ÆS√≠√≤√º √°√®√ß√≠√•√± √£√Æ√±√≥S√≠√∞√±√≤√¢√≥?\n√ë√≤√Æ√®√¨√Æ√±√≤√º √Ø√∞√ÆS√≠√¶√® √±√Æ√±√≤√†√¢√®√≤ 60% √£√Æ√±. √∂√•√≠√ª "CCYAN"(21600000$)", "S√≠", "No");
	}
	if(pData[playerid][autoHave] != 0) {
		if(!IsPlayerInRangeOfPoint(playerid, 8.0, 2146.1821,-2291.7102,14.7500)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √°√®√ß√≠√•√±√†");
		return SPD(playerid, 2559, DIALOG_STYLE_MSGBOX, ""CMAIN"√è√∞√ÆS√≠√¶√† √°√®√ß√≠√•√±√†", ""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √Ø√∞√ÆS√≠√≤√º √°√®√ß√≠√•√± √£√Æ√±√≥S√≠√∞√±√≤√¢√≥?\n√ë√≤√Æ√®√¨√Æ√±√≤√º √Ø√∞√ÆS√≠√¶√® √±√Æ√±√≤√†√¢√®√≤ 60% √£√Æ√±. √∂√•√≠√ª "CCYAN"(7800000$)", "S√≠", "No");
	}
	if(pData[playerid][kiosk_have] != 0) {
		switch(pData[playerid][kiosk_have]) {
			case 1: {
				if(!IsPlayerInRangeOfPoint(playerid, 10.0, 1797.4570,-1864.3280,13.5740)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √±√¢√Æ√•√£√Æ √°√®√ß√≠√•√±√†");
				return SPD(playerid, 2756, DIALOG_STYLE_MSGBOX, ""CMAIN"√è√∞√ÆS√≠√¶√† √°√®√ß√≠√•√±√†", ""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √Ø√∞√ÆS√≠√≤√º √°√®√ß√≠√•√± √£√Æ√±√≥S√≠√∞√±√≤√¢√≥?\n√ë√≤√Æ√®√¨√Æ√±√≤√º √Ø√∞√ÆS√≠√¶√® √±√Æ√±√≤√†√¢√®√≤ 60% √£√Æ√±. √∂√•√≠√ª "CCYAN"(300000$)", "S√≠", "No");
			}
			case 2: {
				if(!IsPlayerInRangeOfPoint(playerid, 10.0, 1300.4177,-1386.6145,13.5140)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √±√¢√Æ√•√£√Æ √°√®√ß√≠√•√±√†");
				return SPD(playerid, 2757, DIALOG_STYLE_MSGBOX, ""CMAIN"√è√∞√ÆS√≠√¶√† √°√®√ß√≠√•√±√†", ""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √Ø√∞√ÆS√≠√≤√º √°√®√ß√≠√•√± √£√Æ√±√≥S√≠√∞√±√≤√¢√≥?\n√ë√≤√Æ√®√¨√Æ√±√≤√º √Ø√∞√ÆS√≠√¶√® √±√Æ√±√≤√†√¢√®√≤ 60% √£√Æ√±. √∂√•√≠√ª "CCYAN"(300000$)", "S√≠", "No");
			}
			case 3: {
				if(!IsPlayerInRangeOfPoint(playerid, 10.0, 2825.3022,1253.2449,10.7654)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √±√¢√Æ√•√£√Æ √°√®√ß√≠√•√±√†");
				return SPD(playerid, 2758, DIALOG_STYLE_MSGBOX, ""CMAIN"√è√∞√ÆS√≠√¶√† √°√®√ß√≠√•√±√†", ""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √Ø√∞√ÆS√≠√≤√º √°√®√ß√≠√•√± √£√Æ√±√≥S√≠√∞√±√≤√¢√≥?\n√ë√≤√Æ√®√¨√Æ√±√≤√º √Ø√∞√ÆS√≠√¶√® √±√Æ√±√≤√†√¢√®√≤ 60% √£√Æ√±. √∂√•√≠√ª "CCYAN"(300000$)", "S√≠", "No");
			}
			case 4: {
				if(!IsPlayerInRangeOfPoint(playerid, 10.0, -1985.9747,203.2735,27.6875)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √±√¢√Æ√•√£√Æ √°√®√ß√≠√•√±√†");
				return SPD(playerid, 2759, DIALOG_STYLE_MSGBOX, ""CMAIN"√è√∞√ÆS√≠√¶√† √°√®√ß√≠√•√±√†", ""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √Ø√∞√ÆS√≠√≤√º √°√®√ß√≠√•√± √£√Æ√±√≥S√≠√∞√±√≤√¢√≥?\n√ë√≤√Æ√®√¨√Æ√±√≤√º √Ø√∞√ÆS√≠√¶√® √±√Æ√±√≤√†√¢√®√≤ 60% √£√Æ√±. √∂√•√≠√ª "CCYAN"(300000$)", "S√≠", "No");
			}
		}
	}
	if(pData[playerid][prok_have] != 0) {
		switch(pData[playerid][prok_have]) {
			case 1: {
				if(!IsPlayerInRangeOfPoint(playerid, 10.0, 1794.0339,-1939.8192,13.5521)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √±√¢√Æ√•√£√Æ √Ø√∞√Æ√™√†√≤√≠√Æ√£√Æ √Ø√≥√≠√™√≤√†");
				return SPD(playerid, 9437, DIALOG_STYLE_MSGBOX, ""CMAIN"√è√∞√ÆS√≠√¶√† √Ø√∞√Æ√™√†√≤√≠√Æ√£√Æ √Ø√≥√≠√™√≤√†", ""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √Ø√∞√ÆS√≠√≤√º √Ø√≥√≠√™√≤ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥?\n√ë√≤√Æ√®√¨√Æ√±√≤√º √Ø√∞√ÆS√≠√¶√® √±√Æ√±√≤√†√¢√®√≤ 60% √£√Æ√±. √∂√•√≠√ª "CCYAN"(1200000$)", "S√≠", "No");
			}
			case 2: {
				if(!IsPlayerInRangeOfPoint(playerid, 10.0, 1182.3124,-1356.9469,14.2071)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √±√¢√Æ√•√£√Æ √Ø√∞√Æ√™√†√≤√≠√Æ√£√Æ √Ø√≥√≠√™√≤√†");
				return SPD(playerid, 9443, DIALOG_STYLE_MSGBOX, ""CMAIN"√è√∞√ÆS√≠√¶√† √Ø√∞√Æ√™√†√≤√≠√Æ√£√Æ √Ø√≥√≠√™√≤√†", ""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √Ø√∞√ÆS√≠√≤√º √Ø√≥√≠√™√≤ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥?\n√ë√≤√Æ√®√¨√Æ√±√≤√º √Ø√∞√ÆS√≠√¶√® √±√Æ√±√≤√†√¢√®√≤ 60% √£√Æ√±. √∂√•√≠√ª "CCYAN"(1200000$)", "S√≠", "No");
			}
			case 3: {
				if(!IsPlayerInRangeOfPoint(playerid, 10.0, -1996.8857,94.9524,27.6875)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √±√¢√Æ√•√£√Æ √Ø√∞√Æ√™√†√≤√≠√Æ√£√Æ √Ø√≥√≠√™√≤√†");
				return SPD(playerid, 9449, DIALOG_STYLE_MSGBOX, ""CMAIN"√è√∞√ÆS√≠√¶√† √Ø√∞√Æ√™√†√≤√≠√Æ√£√Æ √Ø√≥√≠√™√≤√†", ""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √Ø√∞√ÆS√≠√≤√º √Ø√≥√≠√™√≤ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥?\n√ë√≤√Æ√®√¨√Æ√±√≤√º √Ø√∞√ÆS√≠√¶√® √±√Æ√±√≤√†√¢√®√≤ 60% √£√Æ√±. √∂√•√≠√ª "CCYAN"(1200000$)", "S√≠", "No");
			}
			case 4: {
				if(!IsPlayerInRangeOfPoint(playerid, 10.0, 1631.7618,1843.6959,10.8203)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √±√¢√Æ√•√£√Æ √Ø√∞√Æ√™√†√≤√≠√Æ√£√Æ √Ø√≥√≠√™√≤√†");
				return SPD(playerid, 9455, DIALOG_STYLE_MSGBOX, ""CMAIN"√è√∞√ÆS√≠√¶√† √Ø√∞√Æ√™√†√≤√≠√Æ√£√Æ √Ø√≥√≠√™√≤√†", ""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √Ø√∞√ÆS√≠√≤√º √Ø√≥√≠√™√≤ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥?\n√ë√≤√Æ√®√¨√Æ√±√≤√º √Ø√∞√ÆS√≠√¶√® √±√Æ√±√≤√†√¢√®√≤ 60% √£√Æ√±. √∂√•√≠√ª "CCYAN"(1200000$)", "S√≠", "No");
			}
			case 5: {
				if(!IsPlayerInRangeOfPoint(playerid, 10.0, 2819.8347,1293.8167,10.9609)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √±√¢√Æ√•√£√Æ √Ø√∞√Æ√™√†√≤√≠√Æ√£√Æ √Ø√≥√≠√™√≤√†");
				return SPD(playerid, 9461, DIALOG_STYLE_MSGBOX, ""CMAIN"√è√∞√ÆS√≠√¶√† √Ø√∞√Æ√™√†√≤√≠√Æ√£√Æ √Ø√≥√≠√™√≤√†", ""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √Ø√∞√ÆS√≠√≤√º √Ø√≥√≠√™√≤ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥?\n√ë√≤√Æ√®√¨√Æ√±√≤√º √Ø√∞√ÆS√≠√¶√® √±√Æ√±√≤√†√¢√®√≤ 60% √£√Æ√±. √∂√•√≠√ª "CCYAN"(1200000$)", "S√≠", "No");
			}
			case 6: {
				if(!IsPlayerInRangeOfPoint(playerid, 10.0, 1631.7504,1844.1727,10.8203)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √±√¢√Æ√•√£√Æ √Ø√∞√Æ√™√†√≤√≠√Æ√£√Æ √Ø√≥√≠√™√≤√†");
				return SPD(playerid, 9467, DIALOG_STYLE_MSGBOX, ""CMAIN"√è√∞√ÆS√≠√¶√† √Ø√∞√Æ√™√†√≤√≠√Æ√£√Æ √Ø√≥√≠√™√≤√†", ""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √Ø√∞√ÆS√≠√≤√º √Ø√≥√≠√™√≤ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥?\n√ë√≤√Æ√®√¨√Æ√±√≤√º √Ø√∞√ÆS√≠√¶√® √±√Æ√±√≤√†√¢√®√≤ 60% √£√Æ√±. √∂√•√≠√ª "CCYAN"(1200000$)", "S√≠", "No");
			}
			case 7: {
				if(!IsPlayerInRangeOfPoint(playerid, 10.0, 1157.5634,-1727.3196,13.8628)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √±√¢√Æ√•√£√Æ √Ø√∞√Æ√™√†√≤√≠√Æ√£√Æ √Ø√≥√≠√™√≤√†");
				return SPD(playerid, 9473, DIALOG_STYLE_MSGBOX, ""CMAIN"√è√∞√ÆS√≠√¶√† √Ø√∞√Æ√™√†√≤√≠√Æ√£√Æ √Ø√≥√≠√™√≤√†", ""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √Ø√∞√ÆS√≠√≤√º √Ø√≥√≠√™√≤ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥?\n√ë√≤√Æ√®√¨√Æ√±√≤√º √Ø√∞√ÆS√≠√¶√® √±√Æ√±√≤√†√¢√®√≤ 60% √£√Æ√±. √∂√•√≠√ª "CCYAN"(1200000$)", "S√≠", "No");
			}
		}
	}
	if(pData[playerid][food_have] != 0) {
		if(pData[playerid][food_have] == 1) {
			if(!IsPlayerInRangeOfPoint(playerid, 8.0, 1146.06201, -1755.98499, 15.11)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √´√†√∞√º√™√†");
			return SPD(playerid, 5559, DIALOG_STYLE_MSGBOX, ""CMAIN"√è√∞√ÆS√≠√¶√† √´√†√∞√º√™√†", ""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √Ø√∞√ÆS√≠√≤√º √´√†√∞√•√™ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥?\n√ë√≤√Æ√®√¨√Æ√±√≤√º √Ø√∞√ÆS√≠√¶√® √±√Æ√±√≤√†√¢√®√≤ 60% √£√Æ√±. √∂√•√≠√ª "CCYAN"(210000$)", "S√≠", "No");
		}
		if(pData[playerid][food_have] == 2) {
			if(!IsPlayerInRangeOfPoint(playerid, 8.0, 1771.739990, -1903.270020, 14.21)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √´√†√∞√º√™√†");
			return SPD(playerid, 5560, DIALOG_STYLE_MSGBOX, ""CMAIN"√è√∞√ÆS√≠√¶√† √´√†√∞√º√™√†", ""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √Ø√∞√ÆS√≠√≤√º √´√†√∞√•√™ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥?\n√ë√≤√Æ√®√¨√Æ√±√≤√º √Ø√∞√ÆS√≠√¶√® √±√Æ√±√≤√†√¢√®√≤ 60% √£√Æ√±. √∂√•√≠√ª "CCYAN"(210000$)", "S√≠", "No");
		}
	}
	if(pData[playerid][pBusiness] == -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √°√®√ß√≠√•√±√†");
	if(!IsPlayerInRangeOfPoint( playerid, 10.0, BizInfo[pData[playerid][pBusiness]][EnterBiz][0], BizInfo[pData[playerid][pBusiness]][EnterBiz][1], BizInfo[pData[playerid][pBusiness]][EnterBiz][2] ) ) return SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √Æ√™√Æ√´√Æ √¢√µ√ÆS√≠ √¢ √°√®√ß√≠√•√±");
	new str_sellb[160], nalog = BizInfo[pData[playerid][pBusiness]][bPrice] * Business_Nalog / 100;
	format(str_sellb, sizeof(str_sellb), ""CWHITE"√Ç√ª √§√•√©√±√≤√¢√®√≤√•√´√º√≠√Æ √µ√Æ√≤√®√≤√• √Ø√∞√ÆS√≠√≤√º √°√®√ß√≠√•√± √£√Æ√±√≥S√≠√∞√±√≤√¢√≥?\n√ë √≥√∑√•√≤√Æ√¨ √≠√†√´√Æ√£√† √±√≤√Æ√®√¨√Æ√±√≤√º √Ø√∞√ÆS√≠√¶√® √±√Æ√±√≤√†√¢√®√≤ "CCYAN"%d$", BizInfo[pData[playerid][pBusiness]][bPrice] - nalog);
	return SPD(playerid, 514, DIALOG_STYLE_MSGBOX, ""CMAIN"√è√∞√ÆS√≠√¶√† √°√®√ß√≠√•√±√†", str_sellb, "S√≠", "No");
}
CMD:mask(playerid) {
	if(!pData[playerid][pMasks]) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √¨√†√±√™√®. √ä√≥√Ø√®√≤√º √•√• √¨√Æ√¶√≠√Æ √¢ 24-7");
	if(!IsACop(playerid)) {
		foreach(new i:Player) {
			if(!ProxDetectorS(15.0, playerid, i)) continue;
			if(!IsACop(i)) continue;
			return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √≠√†√§√•√≤√º √¨√†√±√™√≥, √≤. √™. √Æ√™√Æ√´√Æ √Ç√†√± √≠√†√µ√Æ√§√®√≤√±√ø √±√Æ√≤√∞√≥√§√≠√®√™ √å√Ç√Ñ");
		}
	}
	if(GetPVarInt(playerid, "MaskPlayer")) return SCM(playerid, COLOR_LIGHTGREY, "√ç√† √Ç√†√± √≥√¶√• √≠√†√§√•√≤√† √¨√†√±√™√†. √ó√≤√Æ√°√ª √±√≠√ø√≤√º √•¬∏, Usar√≤√• {FFCD00}/end");
	SetPlayerColor(playerid, 0x22222200);
	ApplyAnimation(playerid, "shop","ROB_Shifty",4.0,0,0,0,0,0,1);
	SetPlayerChatBubble(playerid,"√ç√†√§√•√¢√†√•√≤ √¨√†√±√™√≥",0xFF9900FF,30.0,10000);
	SCM(playerid, COLOR_BLUE, "√å√†√±√™√† √≠√†√§√•√≤√†. √Ñ√´√ø √±√≠√ø√≤√®√ø Usar√≤√• "CORANGE"/end");
	SCM(playerid, COLOR_BLUE, "√Ç√†√∏√• √¨√•√±√≤√Æ√Ø√Æ√´√Æ√¶√•√≠√®√• √≠√† √™√†√∞√≤√• √±√™√∞√ª√≤√Æ");
	PlayerTextDrawSetString(playerid, td_mask_time[playerid], "masking");
	PlayerTextDrawShow(playerid, td_mask_time[playerid]);
	SetPVarInt(playerid, "MaskPlayer", true);
	SetPlayerAttachedObject(playerid, 2, 19801, 2, 0.067, 0.026, 0.001000, 0.30, 85.600000, 175.400000, 1.321000, 1.32700, 1.257000);
	pData[playerid][pMasks] -= 1;
	RemoveItemFromInventory(playerid, 5, 1);
	return UpdatePlayerData(playerid, "pMasks", pData[playerid][pMasks]);
}
CMD:pullmask(playerid, params[]) {
	if(!IsACop(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√î√≥√≠√™√∂√®√ø √§√Æ√±√≤√≥√Ø√≠√† √≤√Æ√´√º√™√Æ √±√Æ√≤√∞√≥√§√≠√®√™√†√¨ √å√Ç√Ñ √® √î√Å√ê");
	if(pData[playerid][pRank] < 4 && pData[playerid][pMember] != 2) return SCM(playerid, COLOR_LIGHTGREY, "√à√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√• √Ω√≤√Æ√© √¥√≥√≠√™√∂√®√® √§√´√ø √å√Ç√Ñ √∞√†√ß√∞√•√∏√•√≠√Æ √± 4-√£√Æ √∞√†√≠√£√†");
	if(pData[playerid][pRank] < 2 && pData[playerid][pMember] == 2) return SCM(playerid, COLOR_LIGHTGREY, "√à√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√• √Ω√≤√Æ√© √¥√≥√≠√™√∂√®√® √§√´√ø √î√Å√ê √∞√†√ß√∞√•√∏√•√≠√Æ √± 2-√£√Æ √∞√†√≠√£√†");
	if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √≤√∞√†√≠√±√Ø√Æ√∞√≤√•");
	if(PlayerTied{playerid}) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Ω√≤√≥ √¥√≥√≠√™√∂√®√æ √¢ S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤");
	new p_id, Float: p_pos[3];
	if(sscanf(params, "d", p_id)) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /pullmask [id √®√£√∞√Æ√™√†]");
	if(p_id == playerid) return SCM(playerid, COLOR_LIGHTGREY, "√Ñ√´√ø √±√≠√ø√≤√®√ø √¨√†√±√™√® √± √±√•√°√ø Usar√≤√• "CORANGE"/end");
	if(!IsPlayerConnected(p_id)) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(!ProxDetectorS(8.0, playerid, p_id)) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
	if(!GetPVarInt(p_id, "MaskPlayer")) return SCM(playerid, COLOR_LIGHTGREY, "√ç√† √®√£√∞√Æ√™√• √≠√• √≠√†√§√•√≤√† √¨√†√±√™√†");
	if(!GetPVarInt(p_id, #tazer_dest) && !Megaphone(GetPlayerVehicleID(p_id))) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √§√Æ√´√¶√•√≠ √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √Ø√†√≤√∞√≥√´√º√≠√Æ√¨ √†√¢√≤√Æ√¨√Æ√°√®√´√• √®√´√® √°√ª√≤√º √Æ√£√´√≥√∏√•√≠");
	PlayerTextDrawSetString(p_id, td_mask_time[p_id], "~r~INVISIBLE OFF");
	SetTimerEx("mask_td", 3000, 0, "d", p_id);
	RemovePlayerAttachedObject(p_id, 2);
	SetPlayerColor(p_id, FractionInfo[pData[p_id][pMember]][fColor]);
	GetPlayerPos(playerid, p_pos[0], p_pos[1], p_pos[2]);
	PlayerPlaySound(playerid, 1039, p_pos[0], p_pos[1], p_pos[2]);
	ApplyAnimation(playerid, "PED", "BIKE_ELBOWR", 4.1, 0, 1, 1, 0, 0, 1);
	DeletePVar(p_id, "MaskPlayer");
	if(pData[playerid][pSex] == 1) SCMF(p_id, COLOR_BLUE, "%s %s √±√≤√ø√≠√≥√´ √± √Ç√†√± √¨√†√±√™√≥", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], GetName(playerid));
	else SCMF(p_id, COLOR_BLUE, "%s %s √±√≤√ø√≠√≥√´√† √± √Ç√†√± √¨√†√±√™√≥", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], GetName(playerid));
	SCMF(playerid, COLOR_BLUE, "√Ç√ª √±√≤√ø√≠√≥√´√® √¨√†√±√™√≥ √± %s", GetName(p_id));
	if(pData[playerid][pSex] == 1) format(string, 100, "%s %s √±√≤√ø√≠√≥√´ √¨√†√±√™√≥ √± %s", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], GetName(playerid), GetName(p_id));
	else format(string, 100, "%s %s √±√≤√ø√≠√≥√´√† √¨√†√±√™√≥ √± %s", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], GetName(playerid), GetName(p_id));
	return ProxDetector(30.0, playerid, string, COLOR_PURPLE);
}
CMD:healme(playerid) {
	if(!pData[playerid][pAptech]) return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± No √†√Ø√≤√•√∑√™√®");
	new Float: health;
	GetPlayerHealth(playerid, health);
	GameTextForPlayer(playerid, "~b~+ 40 hp", 1000, 1);
	SetPlayerHealth(playerid, (health+40 > 100.0 ? (100.0) : (health+40)));
	ClearAnimations(playerid);
	TogglePlayerControllable(playerid, 0);
	SCM(playerid, COLOR_MAIN, "√Ä√Ø√≤√•√∑√™√† √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√†. √Ç√†√∏√• √ß√§√Æ√∞√Æ√¢√º√• √Ø√Æ√Ø√Æ√´√≠√•√≠√Æ √≠√† "CBLUE"40 √•√§√®√≠√®√∂");
	SetPlayerChatBubble(playerid,"+ 40 HP",0x00FF00FF,20.0,4000);
	ApplyAnimation(playerid, "ped","gum_eat",4.0,0,0,0,0,0,1);
	SetPlayerAttachedObject(playerid, 1, 11736, 5, 0.169000, 0.026000, -0.018999, -106.299888, -8.699967, -83.300033, 0.750999, 0.915000, 0.764002, 0, 0);
	pData[playerid][pAptech] -= 1;
	RemoveItemFromInventory(playerid, 4, 1);
	KillTimer(time_fixhealme[playerid]);
	time_fixhealme[playerid] = SetTimerEx("toggle_healme", 4100, false, "i", playerid);
	UpdatePlayerData(playerid, "pAptech", pData[playerid][pAptech]);
	return 1;
}
CB: toggle_healme(playerid) return TogglePlayerControllable(playerid, 1), RemovePlayerAttachedObject(playerid, 1);
CMD:sellcar(playerid) {
	if(pData[playerid][pHotel] != -1 || pData[playerid][pFlat] != -1 || pData[playerid][have_garage] != -1) {
		if(pData[playerid][pCar][0] == 0) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√∞√†√≠√±√Ø√Æ√∞√≤√†");
		new fmt[180];
		format(fmt, sizeof(fmt), ""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √Ø√∞√ÆS√≠√≤√º √±√¢√Æ√© √†√¢√≤√Æ√¨√Æ√°√®√´√º √£√Æ√±√≥S√≠√∞√±√≤√¢√≥?\n√ë√≤√Æ√®√¨√Æ√±√≤√º √Ø√∞√ÆS√≠√¶√® √±√Æ√±√≤√†√¢√®√≤ 60%% √£√Æ√±. √±√≤√Æ√®√¨√Æ√±√≤√® (%d$)\n√é√≤√¨√•√≠√®√≤√º √Ø√∞√ÆS√≠√¶√≥ √°√≥√§√•√≤ √≠√•√¢√Æ√ß√¨√Æ√¶√≠√Æ", pData[playerid][p_car_cash][0]/100*60);
		return SPD(playerid, 1869, DIALOG_STYLE_MSGBOX, "{FFCD00}√è√∞√ÆS√≠√¶√† √≤√∞√†√≠√±√Ø√Æ√∞√≤√†", fmt, "S√≠", "No");
	}
	if(pData[playerid][pHouse] == -1) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√†√¨ √≠√•√§√Æ√±√≤√≥√Ø√≠√† √Ω√≤√† √¥√≥√≠√™√∂√®√ø");
	new mes[300], text_car_1[140], text_car_2[140], text_car_3[140];
	if(pData[playerid][pCar][0] != 0) format(text_car_1, 140, "(√¨√†√∞√™√†: %s)", VehicleNames[pData[playerid][pCar][0] - 400]);
	else strcat(text_car_1, "{ff4d4d}(√Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤)");
	if(pData[playerid][pCar][1] != 0) format(text_car_2, 140, "(√¨√†√∞√™√†: %s)", VehicleNames[pData[playerid][pCar][1] - 400]);
	else strcat(text_car_2, "{ff4d4d}(√Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤)");
	if(pData[playerid][pCar][2] != 0) format(text_car_3, 140, "(√¨√†√∞√™√†: %s)", VehicleNames[pData[playerid][pCar][2] - 400]);
	else strcat(text_car_3, "{ff4d4d}(√Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤)");
	format(mes, sizeof(mes), ""CLITEBLUE"√Ç√ª√°√•√∞√®√≤√• √≤√∞√†√≠√±√Ø√Æ√∞√≤ √®√ß √±√Ø√®√±√™√† √≠√®√¶√•:\n"CWHITE"√è√•√∞√¢√ª√© "CMAIN"%s\n"CWHITE"√Ç√≤√Æ√∞√Æ√© "CMAIN"%s\n"CWHITE"√í√∞√•√≤√®√© "CMAIN"%s", text_car_1, text_car_2, text_car_3);
	return SPD(playerid, 4938, DIALOG_STYLE_LIST, ""CPALEGREEN"√è√∞√ÆS√≠√¶√† √≤√∞√†√≠√±√Ø√Æ√∞√≤√†", mes, "√è√∞√ÆS√≠√≤√º", "Cerrar");
}
stock sellmyflat_function(playerid, to_player, price) {
	new flat = pData[playerid][pFlat];
	if(flat == -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √™√¢√†√∞√≤√®√∞√ª");
	if(pData[playerid][pCar][0] != 0) return SCM(playerid, COLOR_LIGHTGREY, "√è√∞√ÆS√≠√©√≤√• √≤√∞√†√≠√±√Ø√Æ√∞√≤ "CPALEGREEN"(/sellcar)");
	if(!IsPlayerConnected(to_player)) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(!ProxDetectorS(8.0, playerid, to_player)) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
	if(GetPVarInt(playerid, "cancel_act")) return SCM(playerid, COLOR_GREY, "√Ç√ª √≥√¶√• √±√§√•√´√†√´√® √™√†√™√Æ√•-√≤√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √Ç√¢√•√§√®√≤√• "CBLUE"/revoke"CGREY", √∑√≤√Æ√°√ª √Æ√≤√Æ√ß√¢√†√≤√º √•√£√Æ");
	if(to_player == playerid) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Ø√∞√ÆS√≠√≤√º √™√¢√†√∞√≤√®√∞√≥ √±√•√°√•");
	if(price < 70000 || price > 2000000) return SCM(playerid, COLOR_LIGHTGREY, "√ñ√•√≠√† √¨√Æ√¶√•√≤ √°√ª√≤√º √Æ√≤ 70000$ √§√Æ 2000000$");
	if(pData[to_player][pCash] < price) return SCM(playerid, COLOR_LIGHTGREY, "√ì √®√£√∞√Æ√™√† No √≤√†√™√Æ√© √±√≥√¨√¨√ª");
	if(pData[to_player][pFlat] != -1 || pData[to_player][p_rent_flat] != -1) 
		return SCM(playerid, COLOR_LIGHTGREY, "√ì √®√£√∞√Æ√™√† √•√±√≤√º √™√¢√†√∞√≤√®√∞√†. √è√∞√ÆS√≠√¶√† √≠√•√¢√Æ√ß√¨√Æ√¶√≠√†");
	if(pData[to_player][pHouse] != -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √®√£√∞√Æ√™√† √•√±√≤√º √§√Æ√¨. √è√∞√ÆS√≠√¶√† √≠√•√¢√Æ√ß√¨√Æ√¶√≠√†");
	if(pData[to_player][pHotel] != -1) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √Ø√∞√Æ√¶√®√¢√†√•√≤ √¢ √Æ√≤√•√´√•");
	if(GetPVarInt(to_player, "offer") != 9999) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™√≥ √≥√¶√• √±√§√•√´√†√´√® √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √é√≠ √§√Æ√´√¶√•√≠ {00cc00}√Ø√∞√®√≠√ø√≤√º "CLIGHTGREY"√®√´√® "CERROR"√Æ√≤√¨√•√≠√®√≤√º "CLIGHTGREY"√•√£√Æ");
	
	SCMF(playerid, COLOR_BLUE, "√Ç√ª √Ø√∞√•√§√´√Æ√¶√®√´√® %s √™√≥√Ø√®√≤√º √Ç√†√∏√≥ √™√¢√†√∞√≤√®√∞√≥ "CYELLOW"¬π%d "CBLUE"√ß√† %d$", GetName(to_player), flat, price);
	SCMF(to_player, COLOR_BLUE, "%s √Ø√∞√•√§√´√†√£√†√•√≤ √Ç√†√¨ √™√≥√Ø√®√≤√º √•√£√Æ √™√¢√†√∞√≤√®√∞√≥ "CYELLOW"¬π%d "CBLUE"√ß√† %d$", GetName(playerid), flat, price);
	SCM(to_player, -1, "√ç√†√¶√¨√®√≤√• "CMAIN"Y "CWHITE"√∑√≤√Æ√°√ª √±√Æ√£√´√†√±√®√≤√º√±√ø √®√´√® "CERROR"N "CWHITE"√§√´√ø √Æ√≤√™√†√ß√†");

	SetPVarInt(playerid, "cancel_act", 1);
	SetPVarInt(playerid, "cancel_act_id", to_player);

	SetPVarInt(to_player, "offer", 1);
	SetPVarInt(to_player, "offer_SELLMYFLAT", 1);
	SetPVarInt(to_player, "SELLMYFLAT_targetid", playerid);
	SetPVarInt(to_player, "SELLMYFLAT_price", price);

	return 1;
}
CMD:sellmyflat(playerid, params[]) {
	new flat = pData[playerid][pFlat];
	if(flat == -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √™√¢√†√∞√≤√®√∞√ª");
	if(pData[playerid][pCar][0] != 0) return SCM(playerid, COLOR_LIGHTGREY, "√è√∞√ÆS√≠√©√≤√• √≤√∞√†√≠√±√Ø√Æ√∞√≤ "CPALEGREEN"(/sellcar)");
	new to_player, sell_price;
	if(sscanf(params, "ddd", to_player, sell_price)) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /sellmyflat [id √®√£√∞√Æ√™√†] [√∂√•√≠√†]");
	if(!IsPlayerConnected(to_player)) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(!ProxDetectorS(8.0, playerid, to_player)) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
	if(GetPVarInt(playerid, "cancel_act")) return SCM(playerid, COLOR_GREY, "√Ç√ª √≥√¶√• √±√§√•√´√†√´√® √™√†√™√Æ√•-√≤√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √Ç√¢√•√§√®√≤√• "CBLUE"/revoke"CGREY", √∑√≤√Æ√°√ª √Æ√≤√Æ√ß√¢√†√≤√º √•√£√Æ");
	if(to_player == playerid) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Ø√∞√ÆS√≠√≤√º √™√¢√†√∞√≤√®√∞√≥ √±√•√°√•");
	if(sell_price < 70000 || sell_price > 2000000) return SCM(playerid, COLOR_LIGHTGREY, "√ñ√•√≠√† √¨√Æ√¶√•√≤ √°√ª√≤√º √Æ√≤ 70000$ √§√Æ 2000000$");
	if(pData[to_player][pCash] < sell_price) return SCM(playerid, COLOR_LIGHTGREY, "√ì √®√£√∞√Æ√™√† No √≤√†√™√Æ√© √±√≥√¨√¨√ª");
	if(pData[to_player][pFlat] != -1 || pData[to_player][p_rent_flat] != -1) 
		return SCM(playerid, COLOR_LIGHTGREY, "√ì √®√£√∞√Æ√™√† √•√±√≤√º √™√¢√†√∞√≤√®√∞√†. √è√∞√ÆS√≠√¶√† √≠√•√¢√Æ√ß√¨√Æ√¶√≠√†");
	if(pData[to_player][pHouse] != -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √®√£√∞√Æ√™√† √•√±√≤√º √§√Æ√¨. √è√∞√ÆS√≠√¶√† √≠√•√¢√Æ√ß√¨√Æ√¶√≠√†");
	if(pData[to_player][pHotel] != -1) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √Ø√∞√Æ√¶√®√¢√†√•√≤ √¢ √Æ√≤√•√´√•");
	if(GetPVarInt(to_player, "offer") != 9999) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™√≥ √≥√¶√• √±√§√•√´√†√´√® √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √é√≠ √§√Æ√´√¶√•√≠ {00cc00}√Ø√∞√®√≠√ø√≤√º "CLIGHTGREY"√®√´√® "CERROR"√Æ√≤√¨√•√≠√®√≤√º "CLIGHTGREY"√•√£√Æ");
	
	SCMF(playerid, COLOR_BLUE, "√Ç√ª √Ø√∞√•√§√´√Æ√¶√®√´√® %s √™√≥√Ø√®√≤√º √Ç√†√∏√≥ √™√¢√†√∞√≤√®√∞√≥ "CYELLOW"¬π%d "CBLUE"√ß√† %d$", GetName(to_player), flat, sell_price);
	SCMF(to_player, COLOR_BLUE, "%s √Ø√∞√•√§√´√†√£√†√•√≤ √Ç√†√¨ √™√≥√Ø√®√≤√º √•√£√Æ √™√¢√†√∞√≤√®√∞√≥ "CYELLOW"¬π%d "CBLUE"√ß√† %d$", GetName(playerid), flat, sell_price);
	SCM(to_player, -1, "√ç√†√¶√¨√®√≤√• "CMAIN"Y "CWHITE"√∑√≤√Æ√°√ª √±√Æ√£√´√†√±√®√≤√º√±√ø √®√´√® "CERROR"N "CWHITE"√§√´√ø √Æ√≤√™√†√ß√†");

	SetPVarInt(playerid, "cancel_act", 1);
	SetPVarInt(playerid, "cancel_act_id", to_player);

	SetPVarInt(to_player, "offer", 1);
	SetPVarInt(to_player, "offer_SELLMYFLAT", 1);
	SetPVarInt(to_player, "SELLMYFLAT_targetid", playerid);
	SetPVarInt(to_player, "SELLMYFLAT_price", sell_price);

	return 1;
}
CMD:sellgun(playerid, params[]) {
	if(!IsAGang(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √±√Æ√±√≤√Æ√®√≤√• √¢ √°√†√≠√§√•");
	new bool: weap_status, weaponid, ammo;
	for(new i = 0; i <= 12; i ++) {
		GetPlayerWeaponData(playerid, i, weaponid, ammo);
		if(weaponid == 0 || ammo == 0) continue;
		weap_status = true;
	}
	if(!weap_status) return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± No √Æ√∞√≥√¶√®√ø");
	if(GetPlayerWeapon(playerid) == 0) return SCM(playerid, COLOR_GREY, "√ç√•√Æ√°√µ√Æ√§√®√¨√Æ √§√•√∞√¶√†√≤√º √¢ √∞√≥√™√†√µ √Æ√∞√≥√¶√®√•, √™√Æ√≤√Æ√∞√Æ√• Quieres √Ø√∞√ÆS√≠√≤√º");
	new bool: terr_status, sg_id, sg_ammos, sg_price, gunname[64];
	for(new i = 0; i < sizeof(GZInfo); i ++) {
		if(!PlayerToKvadrat(playerid, GZInfo[i][gCoords][0], GZInfo[i][gCoords][1], GZInfo[i][gCoords][2], GZInfo[i][gCoords][3])) continue;
		if(pData[playerid][pMember] != GZInfo[i][gFrakVlad]) continue;
		if(sscanf(params, "ddd", sg_id, sg_ammos, sg_price)) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /sellgun [id √®√£√∞√Æ√™√†] [√™√Æ√´-√¢√Æ √Ø√†√≤√∞√Æ√≠√Æ√¢] [√∂√•√≠√†]");
		if(sg_ammos < 1) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§√•√≠√Æ √≠√•√¢√•√∞√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √Ø√†√≤√∞√Æ√≠√Æ√¢");
		if(sg_price < 1 || sg_price > 50000) return SCM(playerid, COLOR_LIGHTGREY, "√ñ√•√≠√† √¨√Æ√¶√•√≤ √°√ª√≤√º √Æ√≤ 1$ √§√Æ 50000$");
		if(!IsPlayerConnected(sg_id)) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
		if(!ProxDetectorS(8.0, playerid, sg_id)) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
		if(GetPVarInt(playerid, "cancel_act")) return SCM(playerid, COLOR_GREY, "√Ç√ª √≥√¶√• √±√§√•√´√†√´√® √™√†√™√Æ√•-√≤√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √Ç√¢√•√§√®√≤√• "CBLUE"/revoke"CGREY", √∑√≤√Æ√°√ª √Æ√≤√Æ√ß√¢√†√≤√º √•√£√Æ");
		if(sg_id == playerid) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√´√º√ß√ø √Ø√∞√ÆS√≠√≤√º √Æ√∞√≥√¶√®√• √±√•√°√•");
		if(!pData[sg_id][pLicenses][3]) return SCM(playerid, COLOR_LIGHTGREY, "√ì √®√£√∞√Æ√™√† √Æ√≤√±√≥√≤√±√≤√¢√≥√•√≤ √´√®√∂√•√≠√ß√®√ø √≠√† √Æ√∞√≥√¶√®√•");
		if(pData[sg_id][pCash] < sg_price) return SCM(playerid, COLOR_LIGHTGREY, "√ì √®√£√∞√Æ√™√† No √±√≥√¨√¨√ª √§√´√ø √Æ√Ø√´√†√≤√ª √Ç√†√∏√•√© √±√§√•√´√™√®");
		if(GetPVarInt(sg_id, "offer") != 9999) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™√≥ √≥√¶√• √±√§√•√´√†√´√® √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √é√≠ √§√Æ√´√¶√•√≠ {00cc00}√Ø√∞√®√≠√ø√≤√º "CLIGHTGREY"√®√´√® "CERROR"√Æ√≤√¨√•√≠√®√≤√º "CLIGHTGREY"√•√£√Æ");
		if(GetPlayerAmmo(playerid) < sg_ammos) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√†√™√Æ√£√Æ √™√Æ√´√®√∑√•√±√≤√¢√† √Ø√†√≤√∞√Æ√≠√Æ√¢");
		GetWeaponName(GetPlayerWeapon(playerid), gunname, 64);
		SCMF(playerid, COLOR_BLUE, "√Ç√ª √Ø√∞√•√§√´√Æ√¶√®√´√® %s √™√≥√Ø√®√≤√º %s √® %d √Ø√†√≤√∞√Æ√≠√Æ√¢ √Ø√Æ √∂√•√≠√• %d$", GetName(sg_id), gunname, sg_ammos, sg_price);
		SCMF(sg_id, COLOR_BLUE, "%s √Ø√∞√•√§√´√†√£√†√•√≤ √Ç√†√¨ √™√≥√Ø√®√≤√º √Æ√∞√≥√¶√®√• %s √® %d √Ø√†√≤√∞√Æ√≠√Æ√¢ √ß√† {00cc00}%d$", GetName(playerid), gunname, sg_ammos, sg_price);
		SCM(sg_id, -1, "√ç√†√¶√¨√®√≤√• "CMAIN"Y "CWHITE"√∑√≤√Æ√°√ª √±√Æ√£√´√†√±√®√≤√º√±√ø √®√´√® "CERROR"N "CWHITE"√§√´√ø √Æ√≤√™√†√ß√†");
		terr_status = true; SetPVarInt(playerid, "cancel_act", 1); SetPVarInt(playerid, "cancel_act_id", sg_id);
		SetPVarInt(sg_id, "offer", 1); SetPVarInt(sg_id, "offer_SELLGUN", 1); SetPVarInt(sg_id, "SELLGUN_targetid", playerid);
		SetPVarInt(sg_id, "SELLGUN_gunid", GetPlayerWeapon(playerid)); SetPVarInt(sg_id, "SELLGUN_ammos", sg_ammos);
		SetPVarInt(sg_id, "SELLGUN_price", sg_price);
	}
	if(!terr_status) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√Æ√°√µ√Æ√§√®√¨√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √≠√† √≤√•√∞√∞√®√≤√Æ√∞√®√® √±√¢√Æ√•√© √°√†√≠√§√ª");
	return 1;
}
CMD:selldrugs(playerid, params[]) {
	if(!IsAGang(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√è√∞√ÆS√≠√¢√†√≤√º √≠√†√∞√™√Æ√≤√®√™√® √¨√Æ√£√≥√≤ √≤√Æ√´√º√™√Æ √°√†√≠√§√ª");
	new bool: terr_status, sd_id, sd_count, sd_price;
	for(new i = 0; i < sizeof(GZInfo); i ++) {
		if(!PlayerToKvadrat(playerid, GZInfo[i][gCoords][0], GZInfo[i][gCoords][1], GZInfo[i][gCoords][2], GZInfo[i][gCoords][3])) continue;
		if(pData[playerid][pMember] != GZInfo[i][gFrakVlad]) continue;
		if(sscanf(params, "ddd", sd_id, sd_count, sd_price)) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /selldrugs [id √®√£√∞√Æ√™√†] [√™√Æ√´-√¢√Æ √£√∞√†√¨√¨] [√∂√•√≠√†]");
		if(sd_count < 1) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§√•√≠√Æ √≠√•√¢√•√∞√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √£√∞√†√¨√¨");
		if(sd_price < 1 || sd_price > 10000) return SCM(playerid, COLOR_LIGHTGREY, "√ñ√•√≠√† √¨√Æ√¶√•√≤ √°√ª√≤√º √Æ√≤ 1$ √§√Æ 10000$");
		if(!IsPlayerConnected(sd_id)) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
		if(!ProxDetectorS(8.0, playerid, sd_id)) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
		if(GetPVarInt(playerid, "cancel_act")) return SCM(playerid, COLOR_GREY, "√Ç√ª √≥√¶√• √±√§√•√´√†√´√® √™√†√™√Æ√•-√≤√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √Ç√¢√•√§√®√≤√• "CBLUE"/revoke"CGREY", √∑√≤√Æ√°√ª √Æ√≤√Æ√ß√¢√†√≤√º √•√£√Æ");
		if(sd_id == playerid) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√´√º√ß√ø √Ø√∞√ÆS√≠√≤√º √≠√†√∞√™√Æ√≤√®√™√® √±√•√°√•");
		if(!pData[sd_id][p_premium] && pData[sd_id][pDrugs] >= 1000) return SCM(playerid, COLOR_GREY, "√ì √®√£√∞√Æ√™√† √¨√†√™√±√®√¨√†√´√º√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √≠√†√∞√™√Æ√≤√®√™√Æ√¢");
		if(pData[sd_id][p_premium] && pData[sd_id][pDrugs] >= 2000) return SCM(playerid, COLOR_GREY, "√ì √®√£√∞√Æ√™√† √¨√†√™√±√®√¨√†√´√º√≠√Æ√• √™√Æ√´√®√∑√•√±√≤√¢√Æ √≠√†√∞√™√Æ√≤√®√™√Æ√¢");
		if(!pData[sd_id][p_premium] && pData[sd_id][pDrugs] + sd_count >= 1000) return SCM(playerid, COLOR_GREY, "√à√£√∞√Æ√™ √≠√• √±√¨√Æ√¶√•√≤ √≥√≠√•√±√≤√® √± √±√Æ√°√Æ√© √±√≤√Æ√´√º√™√Æ √≠√†√∞√™√Æ√≤√®√™√Æ√¢");
		if(pData[sd_id][p_premium] && pData[sd_id][pDrugs] + sd_count >= 2000) return SCM(playerid, COLOR_GREY, "√à√£√∞√Æ√™ √≠√• √±√¨√Æ√¶√•√≤ √≥√≠√•√±√≤√® √± √±√Æ√°√Æ√© √±√≤√Æ√´√º√™√Æ √≠√†√∞√™√Æ√≤√®√™√Æ√¢");
		if(pData[sd_id][pCash] < sd_price) return SCM(playerid, COLOR_LIGHTGREY, "√ì √®√£√∞√Æ√™√† No √±√≥√¨√¨√ª √§√´√ø √Æ√Ø√´√†√≤√ª √Ç√†√∏√•√© √±√§√•√´√™√®");
		if(GetPVarInt(sd_id, "offer") != 9999) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™√≥ √≥√¶√• √±√§√•√´√†√´√® √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √é√≠ √§√Æ√´√¶√•√≠ {00cc00}√Ø√∞√®√≠√ø√≤√º "CLIGHTGREY"√®√´√® "CERROR"√Æ√≤√¨√•√≠√®√≤√º "CLIGHTGREY"√•√£√Æ");
		if(pData[playerid][pDrugs] < sd_count) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √±√≤√Æ√´√º√™√Æ √£√∞√†√¨√¨ √≠√†√∞√™√Æ√≤√®√™√Æ√¢");
		SCMF(playerid, COLOR_BLUE, "√Ç√ª √Ø√∞√•√§√´√Æ√¶√®√´√® %s √™√≥√Ø√®√≤√º %d √£ √≠√†√∞√™√Æ√≤√®√™√Æ√¢ √Ø√Æ √∂√•√≠√• %d$", GetName(sd_id), sd_count, sd_price);
		SCMF(sd_id, COLOR_BLUE, "%s √Ø√∞√•√§√´√†√£√†√•√≤ √Ç√†√¨ √™√≥√Ø√®√≤√º %d √£ √≠√†√∞√™√Æ√≤√®√™√Æ√¢ √ß√† {00cc00}%d$", GetName(playerid), sd_count, sd_price);
		SCM(sd_id, -1, "√ç√†√¶√¨√®√≤√• "CMAIN"Y "CWHITE"√∑√≤√Æ√°√ª √±√Æ√£√´√†√±√®√≤√º√±√ø √®√´√® "CERROR"N "CWHITE"√§√´√ø √Æ√≤√™√†√ß√†");
		terr_status = true; SetPVarInt(playerid, "cancel_act", 1); SetPVarInt(playerid, "cancel_act_id", sd_id);
		SetPVarInt(sd_id, "offer", 1); SetPVarInt(sd_id, "offer_SELLDRUGS", 1); SetPVarInt(sd_id, "SELLDRUGS_targetid", playerid);
		SetPVarInt(sd_id, "SELLDRUGS_count", sd_count); SetPVarInt(sd_id, "SELLDRUGS_price", sd_price);
	}
	if(!terr_status) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√Æ√°√µ√Æ√§√®√¨√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √≠√† √≤√•√∞√∞√®√≤√Æ√∞√®√® √±√¢√Æ√•√© √°√†√≠√§√ª");
	return 1;
}
CMD:sellzone(playerid, params[]) {
	new bool: total_terr;
	if(pData[playerid][pLeader]==12 || pData[playerid][pLeader]==13 || pData[playerid][pLeader]==15 || pData[playerid][pLeader]==17 || pData[playerid][pLeader]==18) {
		for(new i = 0; i < sizeof(GZInfo); i ++) {
			if(!PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3])) continue;
			if(pData[playerid][pMember] != GZInfo[i][gFrakVlad]) return SCM(playerid, COLOR_LIGHTGREY, "√í√•√∞√∞√®√≤√Æ√∞√®√ø √≠√† √™√Æ√≤√Æ√∞√Æ√© √Ç√ª √≠√†√µ√Æ√§√®√≤√•√±√º √Ø√∞√®√≠√†√§√´√•√¶√®√≤ √§√∞√≥√£√Æ√© √°√†√≠√§√•");
			if(i == 34 || i == 67 || i == 89 || i == 74 || i == 70) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√Æ √Æ√±√≠√Æ√¢√≠√†√ø √≤√•√∞√∞√®√≤√Æ√∞√®√ø √°√†√≠√§√ª, √•¬∏ √≠√•√´√º√ß√ø √Ø√∞√ÆS√≠√≤√º");
			if(pData[playerid][pRank] < 7) return SCM(playerid,COLOR_LIGHTGREY,"√î√≥√≠√™√∂√®√ø √§√Æ√±√≤√≥√Ø√≠√† √± 7-√£√Æ √∞√†√≠√£√†");
			if(sscanf(params,"dd",params[0], params[1])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /sellzone [id √®√£√∞√Æ√™√†] [√∂√•√≠√†]");
			if(params[1] < 5000 || params[1] > 100000) return SCM(playerid, COLOR_LIGHTGREY, "√ñ√•√≠√† √Æ√≤ 5000$ √§√Æ 100000$");
			if(!pData[params[0]][pLeader] || !IsAGang(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √≠√• √ø√¢√´√ø√•√≤√±√ø √´√®√§√•√∞√Æ√¨ √°√†√≠√§√ª");
			if(pData[params[0]][pMember] == pData[playerid][pMember]) return SCM(playerid, COLOR_GREY, "√ù√≤√Æ√≤ √®√£√∞√Æ√™ √®√ß √Ç√†√∏√•√© √°√†√≠√§√ª. √è√∞√ÆS√≠√¶√† √≤√•√∞√∞√®√≤√Æ√∞√®√® √≠√•√¢√Æ√ß√¨√Æ√¶√≠√†");
			if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
            if(pData[params[0]][pCash] < params[1]) return SCM(playerid, COLOR_LIGHTGREY, "√ì √®√£√∞√Æ√™√† √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢");
			if(!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
			if(params[0] == playerid) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√´√º√ß√ø √Ø√∞√ÆS√≠√≤√º √≤√•√∞√∞√®√≤√Æ√∞√®√æ √±√•√°√•");
            if(GetPVarInt(playerid, "cancel_act")) return SCM(playerid, COLOR_GREY, "√Ç√ª √≥√¶√• √±√§√•√´√†√´√® √™√†√™√Æ√•-√≤√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √Ç√¢√•√§√®√≤√• "CBLUE"/revoke"CGREY", √∑√≤√Æ√°√ª √Æ√≤√Æ√ß√¢√†√≤√º √•√£√Æ");
            if(GetPVarInt(params[0], "offer") != 9999) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™√≥ √≥√¶√• √±√§√•√´√†√´√® √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √é√≠ √§√Æ√´√¶√•√≠ {00cc00}√Ø√∞√®√≠√ø√≤√º "CLIGHTGREY"√®√´√® "CERROR"√Æ√≤√¨√•√≠√®√≤√º "CLIGHTGREY"√•√£√Æ");
			string[0] = EOS;
			format(string,126, "√Ç√ª √Ø√∞√•√§√´√Æ√¶√®√´√® %s √™√≥√Ø√®√≤√º √≤√•√∞√∞√®√≤√Æ√∞√®√æ √ß√† %d$", GetName(params[0]),params[1]);
			SCM(playerid, COLOR_BLUE, string);
			format(string,126, "%s √Ø√∞√•√§√´√†√£√†√•√≤ √Ç√†√¨ √™√≥√Ø√®√≤√º √≤√•√∞√∞√®√≤√Æ√∞√®√æ √ß√† %d$",pData[playerid][pName],params[1]);
			SCM(params[0], COLOR_BLUE, string);
            SCM(params[0], -1, "√ç√†√¶√¨√®√≤√• "CMAIN"Y "CWHITE"√∑√≤√Æ√°√ª √±√Æ√£√´√†√±√®√≤√º√±√ø √®√´√® "CERROR"N "CWHITE"√§√´√ø √Æ√≤√™√†√ß√†");
			SetPVarInt(params[0], "ZoneOffer", playerid);
            SetPVarInt(playerid, "cancel_act", 1); SetPVarInt(playerid, "cancel_act_id", params[0]);
			SetPVarInt(params[0], "sellzone", pData[playerid][pMember]);
			SetPVarInt(params[0], "ZonePrice", params[1]);
            SetPVarInt(params[0], "offer", 1);
			total_terr = true;
		}
		if(!total_terr) return SCM(playerid, COLOR_GREY, "√ç√•√Æ√°√µ√Æ√§√®√¨√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √≠√† √≤√•√∞√∞√®√≤√Æ√∞√®√®, √™√Æ√≤√Æ√∞√≥√æ Quieres √Ø√∞√ÆS√≠√≤√º");
	}
	else SCM(playerid, COLOR_LIGHTGREY, "√î√≥√≠√™√∂√®√ø √§√Æ√±√≤√≥√Ø√≠√† √≤√Æ√´√º√™√Æ √´√®√§√•√∞√†√¨ √°√†√≠√§");
	return 1;
}
CMD:savelego(playerid, params[]) {
	if(IsAFull(playerid)) {
		new adm_id, l_query[200], Float: obj_pos[3], Float: obj_rot[3];
		if(sscanf(params, "d", adm_id)) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /savelego [id √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√†]");
		if(!IsPlayerConnected(adm_id)) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
		if(pData[adm_id][pAdmin] < 1) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√Æ√≤ √®√£√∞√Æ√™ √≠√• √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞");
		if(lego_countobj[adm_id] == 0) return SCM(playerid, COLOR_LIGHTGREY, "√ì √®√£√∞√Æ√™√† No √±√Æ√ßS√≠√≠√≠√ª√µ √Æ√°√∫√•√™√≤√Æ√¢");
		for(new i = 0, n = lego_countobj[playerid]; i < n; i ++) {
			if(!IsValidObject(lego_objid[playerid][i])) continue;
			GetObjectPos(lego_objid[playerid][i], obj_pos[0], obj_pos[1], obj_pos[2]);
			GetObjectRot(lego_objid[playerid][i], obj_rot[0], obj_rot[1], obj_rot[2]);
			mysql_format(mysql_Handle, l_query, sizeof(l_query), "INSERT INTO `saved_lego` (`modelid`, `pos_x`, `pos_y`, `pos_z`, `rot_x`, `rot_y`, `rot_z`) VALUES (%d, %f, %f, %f, %f, %f, %f)", GetObjectModel(lego_objid[playerid][i]), obj_pos[0], obj_pos[1], obj_pos[2], obj_rot[0], obj_rot[1], obj_rot[2]);
			mysql_tquery(mysql_Handle, l_query);
		}
		for(new i = 0, n = lego_countobj[adm_id]; i < n; i ++) 
			lego_objid[adm_id][i] = 0;
		lego_countobj[adm_id] = 0;
		SCM(playerid, 0xCCCC00FF, "[LEGO] √ë√Æ√ßS√≠√≠√≠√ª√• √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√Æ√¨ √Æ√°√∫√•√™√≤√ª √±√Æ√µ√∞√†√≠√•√≠√ª √® √°√≥√§√≥√≤ √Ø√Æ√ø√¢√´√ø√≤√º√±√ø √Ø√∞√® √ß√†√Ø√≥√±√™√• √±√•√∞√¢√•√∞√†");
	}
	return 1;
}
CMD:lego(playerid) {
	if(pData[playerid][pAdmin] < 7) return 1;
	if(lego_en[playerid]) {
		lego_en[playerid] = false;
		for(new i = 0, n = lego_countobj[playerid]; i < n; i ++) {
			if(!IsValidObject(lego_objid[playerid][i])) continue;
			DestroyObject(lego_objid[playerid][i]);
		}
		SCM(playerid, -1, "√ê√•√¶√®√¨ "CPALEGREEN"LEGO "CWHITE"√Æ√≤√™√´√æ√∑√•√≠");
		if(lego_countobj[playerid] > 0) 
			SCM(playerid,-1,"√ë√Æ√ßS√≠√≠√≠√ª√• √Ç√†√¨√® √Æ√°√∫√•√™√≤√ª √°√ª√´√® √≥S√≠√´√•√≠√ª");
		lego_countobj[playerid] = 0;
	}
	else {
		lego_en[playerid] = true;
		SCM(playerid, -1, "√ê√•√¶√®√¨ "CPALEGREEN"LEGO "CWHITE"√¢√™√´√æ√∑√•√≠");
		SCM(playerid, -1, "√Ñ√Æ√±√≤√≥√Ø√≠√ª√• √™√Æ√¨√†√≠√§√ª:  /listobj  /newobj  /editobj  /dellast  /delall");
		SCM(playerid, 0xFF2200FF, "√Å√≥√§√º√≤√• √Æ√±√≤√Æ√∞√Æ√¶√≠√ª √Ø√∞√® √¢√¢√Æ√§√• ID √Æ√°√∫√•√™√≤√†. √ç√•√¢√•√∞√≠√ª√© √¨√Æ√¶√•√≤ √¢√ª√ß√¢√†√≤√º √´√†√£√® √®√´√® √Ø√†√§√•√≠√®√• √±√•√∞√¢√•√∞√†");
	}
	return 1;
}
CMD:listobj(playerid) {
	if(pData[playerid][pAdmin] < 7) return 1;
	if(!lego_en[playerid]) return SCM(playerid, -1, "√Ç√™√´√æ√∑√® √∞√•√¶√®√¨ LEGO: "CPALEGREEN"/lego");
	new bool: yes_obj, Float: obj_pos[3], Float: obj_rot[3];
	for(new i = 0, n = lego_countobj[playerid]; i < n; i ++) {
		if(!IsValidObject(lego_objid[playerid][i])) continue;
		if(!yes_obj) SCM(playerid, -1, "√ë√Æ√ßS√≠√≠√≠√ª√• √Æ√°√∫√•√™√≤√ª:");
		yes_obj = true;
		GetObjectPos(lego_objid[playerid][i], obj_pos[0], obj_pos[1], obj_pos[2]);
		GetObjectRot(lego_objid[playerid][i], obj_rot[0], obj_rot[1], obj_rot[2]);
		SCMF(playerid, -1, "%d. Model %d, X %f, Y %f, Z %f, RX %f, RY %f, RZ %f", i + 1, GetObjectModel(lego_objid[playerid][i]), obj_pos[0], obj_pos[1], obj_pos[2], obj_rot[0], obj_rot[1], obj_rot[2]);
	}
	if(!yes_obj) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √±√Æ√ßS√≠√≠√≠√ª√µ √Æ√°√∫√•√™√≤√Æ√¢");
	return 1;
}
CMD:newobj(playerid, params[]) {
	if(pData[playerid][pAdmin] < 7) return 1;
	if(!lego_en[playerid]) return SCM(playerid, -1, "√Ç√™√´√æ√∑√® √∞√•√¶√®√¨ LEGO: "CPALEGREEN"/lego");
	new model_id, Float: pos[3],Float:rot[3];
	if(sscanf(params, "d", model_id)) {
		SCM(playerid, COLOR_LIGHTGREY, "Usar: /newobj [id √Æ√°√∫√•√™√≤√†]");
		return SCM(playerid, 0xFF2200FF, "√Å√≥√§√º√≤√• √Æ√±√≤√Æ√∞√Æ√¶√≠√ª √Ø√∞√® √¢√¢√Æ√§√• ID √Æ√°√∫√•√™√≤√†. √ç√•√¢√•√∞√≠√ª√© √¨√Æ√¶√•√≤ √¢√ª√ß√¢√†√≤√º √´√†√£√® √®√´√® √Ø√†√§√•√≠√®√• √±√•√∞√¢√•√∞√†");
	}
	if(lego_countobj[playerid] >= 50) 
		return SCM(playerid, COLOR_LIGHTGREY, "√å√†√™√±√®√¨√†√´√º√≠√Æ √¨√Æ√¶√≠√Æ √±√Æ√ßS√≠√≤√º √≠√• √°√Æ√´√•√• 50 √Æ√°√∫√•√™√≤√Æ√¢");

	lego_countobj[playerid] ++;

	SetPVarInt(playerid, "legoobj_edit", 1);

	if(lego_countobj[playerid] != 1 && model_id == GetObjectModel(lego_objid[playerid][lego_countobj[playerid]-2]))
	{
		GetObjectPos(lego_objid[playerid][lego_countobj[playerid]-2], pos[0], pos[1], pos[2]);
		GetObjectRot(lego_objid[playerid][lego_countobj[playerid]-2], rot[0], rot[1], rot[2]);
	}
	else
	{
		GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
		pos[0] += 1.0, pos[1] += 1.0, pos[2] += 1.0;
	}

	lego_editobjX[playerid] = pos[0];
	lego_editobjY[playerid] = pos[1];
	lego_editobjZ[playerid] = pos[2];
	lego_editRX[playerid] = rot[0];
	lego_editRY[playerid] = rot[1];
	lego_editRZ[playerid] = rot[2];

	lego_objid[playerid][lego_countobj[playerid] - 1] = CreateObject(model_id, pos[0], pos[1], pos[2], rot[0], rot[1], rot[2]);
	EditObject(playerid, lego_objid[playerid][lego_countobj[playerid] - 1]);
	return SCMF(playerid, COLOR_YELLOW, "[LEGO] √ë√Æ√ßS√≠√≠ √Æ√°√∫√•√™√≤ "CPALEGREEN"%d/50", lego_countobj[playerid]);
}

CMD:editobj(playerid) {
	if(pData[playerid][pAdmin] < 7) return 1;
	if(!lego_en[playerid]) return SCM(playerid, -1, "√Ç√™√´√æ√∑√® √∞√•√¶√®√¨ LEGO: "CPALEGREEN"/lego");
	if(lego_countobj[playerid] == 0) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √±√Æ√ßS√≠√≠√≠√ª√µ √Æ√°√∫√•√™√≤√Æ√¢");
	SelectObject(playerid);
	return SCM(playerid, COLOR_YELLOW, "[LEGO] √ç√†√¶√¨√®√≤√• √≠√† √Æ√°√∫√•√™√≤, √™√Æ√≤√Æ√∞√ª√© √µ√Æ√≤√®√≤√• √Æ√≤√∞√•S√≠√™√≤√®√∞√Æ√¢√†√≤√º");
}
CMD:dellast(playerid) {
	if(pData[playerid][pAdmin] < 7) return 1;
	if(!lego_en[playerid]) return SCM(playerid, -1, "√Ç√™√´√æ√∑√® √∞√•√¶√®√¨ LEGO: "CPALEGREEN"/lego");
	if(lego_countobj[playerid] == 0) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √±√Æ√ßS√≠√≠√≠√ª√µ √Æ√°√∫√•√™√≤√Æ√¢");
	DestroyObject(lego_objid[playerid][lego_countobj[playerid] - 1]);
	lego_countobj[playerid] --;
	return SCMF(playerid, COLOR_YELLOW, "[LEGO] √ìS√≠√´√•√≠ √Æ√°√∫√•√™√≤ "CERROR"%d/50", lego_countobj[playerid]);
}
CMD:delall(playerid) {
	if(pData[playerid][pAdmin] < 7) return 1;
	if(!lego_en[playerid]) return SCM(playerid, -1, "√Ç√™√´√æ√∑√® √∞√•√¶√®√¨ LEGO: "CPALEGREEN"/lego");
	if(lego_countobj[playerid] == 0) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √±√Æ√ßS√≠√≠√≠√ª√µ √Æ√°√∫√•√™√≤√Æ√¢");
	for(new i = 0, n = lego_countobj[playerid]; i < n; i ++) {
		if(!IsValidObject(lego_objid[playerid][i])) continue;
		DestroyObject(lego_objid[playerid][i]);
	}
	lego_countobj[playerid] = 0;
	return SCM(playerid, COLOR_YELLOW, "[LEGO] √Ç√±√• √Æ√°√∫√•√™√≤√ª √≥S√≠√´√•√≠√ª");
}
CMD:sban(playerid, params[]) {
	if(pData[playerid][pAdmin] < 7) return 1;
	new NAME[24],REASON[64];
	if(sscanf(params,"s[24]s[64]",NAME,REASON)) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /sban [√≠√®√™ √®√£√∞√Æ√™√†] [√Ø√∞√®√∑√®√≠√†]");
	string[0] = EOS;
	mysql_format(mysql_Handle, string, 128, "SELECT * FROM `accounts` WHERE `Name` = '%s'", NAME);
	return mysql_tquery(mysql_Handle, string, "SBanCheck", "iss",playerid,NAME,REASON);
}
CB: SBanCheck(playerid,NAME[],REASON[]) {
	new rows, idoff;
	cache_get_row_count(rows);
	if(!rows) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √± √≤√†√™√®√¨ √≠√®√™√Æ√¨ √≠√• √≠√†√©√§√•√≠");
	cache_get_value_name_int(0, "id", idoff);
	SetPVarInt(playerid, "tmpNumberAcc", idoff);
	string[0] = EOS;
	mysql_format(mysql_Handle, string, 128, "SELECT `Nick` FROM `banlist` WHERE `Nick` = '%s'", NAME);
	return mysql_tquery(mysql_Handle, string, "SBan", "iss",playerid,NAME,REASON);
}
CB: SBan(playerid,NAME[],REASON[]) {
	new rows;
	cache_get_row_count(rows);
	if(rows) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √≥√¶√• √ß√†√°√†√≠√•√≠");
	new tmpid = GetPVarInt(playerid, "tmpNumberAcc");
	DeletePVar(playerid, "tmpNumberAcc");
	new day, month, year, hour, minuite, second;
	getdate(year, month, day);
	gettime(hour, minuite, second);
	FixHour(hour);
	hour = shifthour;
	new data2[22];
	format(data2, 22, "%02d.%02d.%d √¢ %02d:%02d",day, month, year, hour, minuite);
	new query_mysql[380], data[16], un_ban_date = gettime() + 1000*86400;
	new query_mysql1[380], query_mysql2[380];
	format(data,sizeof(data), "%s",date("%dd.%mm.%yyyy",gettime()));
	format(query_mysql1,sizeof(query_mysql1), "INSERT INTO `banlist` (`id_acc`,`Nick`,`Admin`, `Date` ,`Reason`,`Days`,`UnbanDate`) VALUES (%d,'%s','%s','%s','%s',1000,%d)", tmpid,NAME, pData[playerid][pName], data, REASON, un_ban_date);
	mysql_tquery(mysql_Handle, query_mysql1);

	mysql_format(mysql_Handle, query_mysql2,sizeof(query_mysql2), "DELETE FROM `warninfo` WHERE `id_acc` = %d", tmpid);
	mysql_tquery(mysql_Handle, query_mysql2);
	mysql_format(mysql_Handle, string, 120, "SELECT `pBansAll` FROM `accounts` WHERE `Name` = '%s'", NAME);
	mysql_tquery(mysql_Handle, string, "querybans", "ds", playerid, NAME);
	if(pData[playerid][pSex] == 1) {
		format(string,127,"[A] %s[%d] √°√•√ß √´√®√∏√≠√•√£√Æ √∏√≥√¨√† √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√´ %s √≠√†√¢√±√•√£S√≠. √è√∞√®√∑√®√≠√†: %s",pData[playerid][pName],playerid,NAME,REASON);
		mysql_format(mysql_Handle, query_mysql,sizeof(query_mysql), "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('%s[%d] √°√•√ß √´√®√∏√≠√•√£√Æ √∏√≥√¨√† √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√´ %s √≠√†√¢√±√•√£S√≠. √è√∞√®√∑√®√≠√†: %s',%d,'%s')", pData[playerid][pName],playerid,NAME,REASON, tmpid, data2);
		mysql_tquery(mysql_Handle, query_mysql);
	}
	else {
		format(string,127,"[A] %s[%d] √°√•√ß √´√®√∏√≠√•√£√Æ √∏√≥√¨√† √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√´√† %s √≠√†√¢√±√•√£S√≠. √è√∞√®√∑√®√≠√†: %s",pData[playerid][pName],playerid,NAME,REASON);
		mysql_format(mysql_Handle, query_mysql,sizeof(query_mysql), "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('%s[%d] √°√•√ß √´√®√∏√≠√•√£√Æ √∏√≥√¨√† √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√´√† %s √≠√†√¢√±√•√£S√≠. √è√∞√®√∑√®√≠√†: %s',%d,'%s')", pData[playerid][pName],playerid,NAME,REASON, tmpid, data2);
		mysql_tquery(mysql_Handle, query_mysql);
	}
	AdminMessage(COLOR_RED, string);
	new id_punish = GetPlayerID(NAME);
	if(IsPlayerConnected(id_punish)) {
		SCM(id_punish, COLOR_RED, "√Ç√†√∏ √†√™√™√†√≥√≠√≤ √°√ª√´ √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√≠ √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√Æ√¨");
		Kick(id_punish);
	}
	return gAdmin[playerid][ADMIN_BAN] ++;
}
CMD:ban(playerid, params[]) {
	if(pData[playerid][pAdmin] < 4) return 1;
	if(pData[playerid][pAdmin] < 7 && GetPVarInt(playerid, "counting_punish") > gettime()) 
		return SCM(playerid, COLOR_ERROR, "√è√Æ√§√Æ√¶√§√®√≤√• √≠√•√±√™√Æ√´√º√™√Æ √±√•√™√≥√≠√§...");
	if(sscanf(params, "ddS()[32]", params[0], params[1], params[2])) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /ban [id √®√£√∞√Æ√™√†] [√±√∞√Æ√™ √¢ √§√≠√ø√µ] [√Ø√∞√®√∑√®√≠√† (√≠√•√Æ√°√ø√ß√†√≤√•√´√º√≠√Æ)]");
	if(IsPlayerNPC(params[0])) return SCM(playerid, COLOR_ERROR, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √ß√†√°√†√≠√®√≤√º √Ω√≤√Æ√£√Æ √∑√•√´√Æ√¢√•√™√†");
	new day, month, year, hour, minuite, second;
	getdate(year, month, day);
	gettime(hour, minuite, second);
	FixHour(hour);
	hour = shifthour;
	new data2[22];
	format(data2, 22, "%02d.%02d.%d √¢ %02d:%02d",day, month, year, hour, minuite);

	new Year, Month, Day, dial_str[500];
	getdate(Year, Month, Day);
	new monthname[9];
	switch(Month) {
		case 1: monthname = "√ø√≠√¢√†√∞√ø";
		case 2: monthname = "√¥√•√¢√∞√†√´√ø";
		case 3: monthname = "√¨√†√∞√≤√†";
		case 4: monthname = "√†√Ø√∞√•√´√ø";
		case 5: monthname = "√¨√†√ø";
		case 6: monthname = "√®√æ√≠√ø";
		case 7: monthname = "√®√æ√´√ø";
		case 8: monthname = "√†√¢√£√≥√±√≤√†";
		case 9: monthname = "√±√•√≠√≤√ø√°√∞√ø";
		case 10: monthname = "√Æ√™√≤√ø√°√∞√ø";
		case 11: monthname = "√≠√Æ√ø√°√∞√ø";
		case 12: monthname = "√§√•√™√†√°√∞√ø";
	}
	if(pData[params[0]][pAdmin] > 0 || pData[params[0]][pLeader]) {
		if(GetPVarInt(playerid, "nobanadm")) {
			SetPVarInt(playerid, "nobanadm", false);
			return SCM(playerid, COLOR_ERROR, "√Ç√ª √±√Æ√°√®√∞√†√•√≤√•√±√º √ß√†√°√†√≠√®√≤√º √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√† √®√´√® √´√®√§√•√∞√†. √ó√≤√Æ√°√ª √Ø√∞√Æ√§√Æ√´√¶√®√≤√º, √¢√¢√•√§√®√≤√• √™√Æ√¨√†√≠√§√≥ √•√π¬∏ √∞√†√ß");
		}

		else if(IsAFull(params[0]))
		{
			SecurityRemoveAdm(playerid);
			return 1;
		}

	}
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™√† √± √≤√†√™√®√¨ √†√©√§√® No");
	if(params[1] < 2 || params[1] > 30) return SCM(playerid, COLOR_LIGHTGREY, "√ë√∞√Æ√™ √¨√Æ√¶√•√≤ √°√ª√≤√º √Æ√≤ 2 √§√Æ 30 √§√≠√•√©");
	new ip[16];
	GetPlayerIp(params[0],ip,sizeof(ip));
	string[0] = EOS;
	if(!strlen(params[2])) {
		if(pData[playerid][pSex] == 1) format(string, 128, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √ß√†√°√†√≠√®√´ √®√£√∞√Æ√™√† %s √≠√† %d √§√≠√•√©",pData[playerid][pName],GetName(params[0]), params[1]);
		else format(string, 128, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √ß√†√°√†√≠√®√´√† √®√£√∞√Æ√™√† %s √≠√† %d √§√≠√•√©",pData[playerid][pName],GetName(params[0]), params[1]);
		SCMTA_setting(COLOR_LIGHTRED, string); if(!pData[params[0]][p_setting][2]) SCM(params[0], COLOR_LIGHTRED, string);
		mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √ß√†√°√†√≠√®√´ √®√£√∞√Æ√™√† %s √≠√† %d √§√≠√•√©',%d,'%s')", pData[playerid][pName], GetName(params[0]), params[1], pData[params[0]][pID], data2);
		mysql_tquery(mysql_Handle, string);
	}
	else {
		if(pData[playerid][pSex] == 1) format(string, 128, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √ß√†√°√†√≠√®√´ √®√£√∞√Æ√™√† %s √≠√† %d √§√≠√•√©. √è√∞√®√∑√®√≠√†: %s",pData[playerid][pName],GetName(params[0]), params[1],params[2]);
		else format(string, 128, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √ß√†√°√†√≠√®√´√† √®√£√∞√Æ√™√† %s √≠√† %d √§√≠√•√©. √è√∞√®√∑√®√≠√†: %s",pData[playerid][pName],GetName(params[0]), params[1],params[2]);
		SCMTA_setting(COLOR_LIGHTRED, string); if(!pData[params[0]][p_setting][2]) SCM(params[0], COLOR_LIGHTRED, string);
		if(pData[playerid][pSex] == 1) mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √ß√†√°√†√≠√®√´ √®√£√∞√Æ√™√† %s √≠√† %d √§√≠√•√©. √è√∞√®√∑√®√≠√†: %s',%d,'%s')", pData[playerid][pName], GetName(params[0]), params[1], params[2], pData[params[0]][pID], data2);
		else mysql_format(mysql_Handle, string, 245, "INSERT INTO `logs` (`Text`, `id_acc`, `Date`) VALUES ('√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √ß√†√°√†√≠√®√´√† √®√£√∞√Æ√™√† %s √≠√† %d √§√≠√•√©. √è√∞√®√∑√®√≠√†: %s',%d,'%s')", pData[playerid][pName], GetName(params[0]), params[1], params[2], pData[params[0]][pID], data2);
		mysql_tquery(mysql_Handle, string);
	}
	format(dial_str, sizeof dial_str, ""CWHITE"S√≠√≤√†: %02d %s %d √£.\n√Ç√†√∏ √≠√®√™: %s\n√ç√®√™ √†√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞√†: %s\n√ä√Æ√´√®√∑√•√±√≤√¢√Æ √§√≠√•√©: %d\n√è√∞√®√∑√®√≠√†: %s\n\n{94b695}√Ö√±√´√® √Ç√ª √≠√• √±√Æ√£√´√†√±√≠√ª √± √≠√†√™√†√ß√†√≠√®√•√¨, √±√§√•√´√†√©√≤√• √±√™√∞√®√≠√∏√Æ√≤ (√™√´√†√¢√®√∏√† F8)\n√® √Æ√±√≤√†√¢√º√≤√• √¶√†√´√Æ√°√≥ √≠√† √¥√Æ√∞√≥√¨√• (√±√±√ª√´√™√†: forum-normative.ru)", Day, monthname, Year, GetName(params[0]), pData[playerid][pName], params[1], params[2]);
	SPD(params[0], 89, DIALOG_STYLE_MSGBOX, "{ff7336}√Å√´√Æ√™√®√∞√Æ√¢√™√†", dial_str, "Cerrar", "");
	new query_mysql[264], data[16];
	SetPVarInt(playerid, "UnBanDate", gettime() + params[1]*86400), format(data,sizeof(data), "%s",date("%dd.%mm.%yyyy",gettime()));
	
	mysql_format(mysql_Handle,query_mysql,sizeof(query_mysql), "INSERT INTO `banlist` (`id_acc`,`Nick`,`Admin`, `IP`, `Date` ,`Reason`,`Days`,`UnbanDate`) VALUES (%d,'%s','%s','%s','%s','%s',%d,%d)",pData[params[0]][pID], GetName(params[0]), pData[playerid][pName], ip, data, params[2], params[1], GetPVarInt(playerid, "UnBanDate"));
	mysql_tquery(mysql_Handle, query_mysql);

	mysql_format(mysql_Handle, string, 245, "DELETE FROM `warninfo` WHERE `id_acc` = %d", pData[params[0]][pID]);
	mysql_tquery(mysql_Handle, string);
	add_c_bans(params[0]);
	Kick(params[0]);
	SetPVarInt(playerid,"counting_punish",gettime() + 5);
	if(pData[playerid][pAdmin] <= pData[params[0]][pAdmin])
	{
		SecurityRemoveAdm(playerid);
	}
	mysql_format(mysql_Handle,string, 128, "DELETE FROM `admin` WHERE `name`='%s'", GetName(params[0]));
	mysql_tquery(mysql_Handle, string);
	gAdmin[playerid][ADMIN_BAN] ++;
	SetPVarInt(playerid, "nobanadm", true);
	return 1;
}
CMD:unban(playerid, params[]) {
	if(pData[playerid][pAdmin] < 4) return 1;
	new text[MAX_PLAYER_NAME];
	if(sscanf(params, "s[24]", text)) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /unban [√≠√®√™ √®√´√® √≠√Æ√¨√•√∞ √†√™√™√†√≥√≠√≤√†]");
	new query_mysql[70], bool:findnick = false;
    for(new i = 0; i < strlen(text); i ++) {
        if(text[i] >= '0' && text[i] <= '9') continue;
        findnick = true;
        break;
    }
    if(findnick == true) 
    	mysql_format(mysql_Handle, query_mysql, sizeof(query_mysql), "SELECT * FROM `banlist` WHERE `Nick` = '%s'", text);
    else 
    	mysql_format(mysql_Handle, query_mysql, sizeof(query_mysql), "SELECT * FROM `banlist` WHERE `id_acc` = %d", strval(text));

	return mysql_tquery(mysql_Handle, query_mysql, "UnBan", "d", playerid);
}
CMD:setleader(playerid, params[]) {
	if(pData[playerid][pAdmin] < 4) return 1;
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /setleader [id √®√£√∞√Æ√™√†]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √± √≤√†√™√®√¨ √†√©√§√® √≠√• √≠√†√©√§√•√≠");
	if(pData[params[0]][pLevel] < 5) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √§√Æ√´√¶√•√≠ √°√ª√≤√º √¨√®√≠√®√¨√≥√¨ 5-√£√Æ √≥√∞√Æ√¢√≠√ø");
	if(pData[params[0]][pWarns] >= 1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √®√£√∞√Æ√™√† √®√¨√•√æ√≤√±√ø √†√™√≤√®√¢√≠√ª√• √Ø√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√ø");
	if(pData[params[0]][pAdmMember] != 0) return SCM(playerid, COLOR_ERROR, "√à√£√∞√Æ√™ √ø√¢√´√ø√•√≤√±√ø √¢√∞√•√¨√•√≠√≠√ª√¨ √´√®√§√•√∞√Æ√¨ √Æ√∞√£√†√≠√®√ß√†√∂√®√®");
	SetPVarInt(playerid, "id_setleader", params[0]);
	return SPD(playerid, 452, DIALOG_STYLE_LIST, "√ç√†√ß√≠√†√∑√•√≠√®√• √´√®√§√•√∞√†", 
		"{ccff00}Tyr Kos-Anthosa\n\
		{ccff00}Kyryo Pan-Hiero\n\
		{ccff00}Tyr Vas-Venturasa\n\
		{ccff00}Administraci√≥n residente\n \n\
		\
		{0000ff}√ì√Ø√∞. Por el favor de Ros-Anthos\n\
		{0000ff}√ì√Ø√∞. por orden de Pan-Riero\n\
		{0000ff}√ì√Ø√∞. Por el favor de Vas-Venturas\n\
		{0000ff}√î√Å√ê\n \n\
		\
		{ff6666}Columna de Ros-Anthos\n\
		{ff6666}Colinitza Pan-Riero\n\
		{ff6666}Columbia Vas-Venturasa\n \n\
		\
		{996633}Noticias de oficina\n\
		{996633}Fuerza a√©rea militar\n\
		{996633}Armada\n \n\
		\
		{FFCC66}El instalador\n\
		{ff6600}Instalaciones de informaci√≥n masiva\n\
		{009900}Grove Street\n\
		{cc00ff}The Ballas\n\
		{00CCFF}Varrios Los Aztecas\n\
		{FFCD00}Los Santos Vagos\n\
		{6666ff}The Rifa\n\
		{993366}La Cosa Nostra\n\
		{007575}ruso\n\
		{bb0000}Yakuza", 
	"Seleccione", "Cerrar");
}
CMD:armoff(playerid) {
	new Float: arm_player;
	GetPlayerArmour(playerid, arm_player);
	if(arm_player > 0.0) {
		SetPlayerArmour(playerid, 0.0);
		if(pData[playerid][pSex] == 1) SetPlayerChatBubble(playerid, "√ë√≠√ø√´ √°√∞√Æ√≠√•√¶√®√´√•√≤", COLOR_YELLOW, 4.0, 5000);
		else SetPlayerChatBubble(playerid, "√ë√≠√ø√´√† √°√∞√Æ√≠√•√¶√®√´√•√≤", COLOR_YELLOW, 4.0, 5000);
		ApplyAnimation(playerid, "CARRY", "PUTDWN", 4.0, 0, 0, 0, 0, 0, 1);
		return SCM(playerid, COLOR_YELLOW, "√Ç√ª √±√≠√ø√´√® √°√∞√Æ√≠√•√¶√®√´√•√≤");
	}
	else return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± No √°√∞√Æ√≠√•√¶√®√´√•√≤√†");
}
alias:goto("gt");
CMD:goto(playerid, params[]) {
	if(pData[playerid][pAdmin] < 2) return 1;
	if(bloody_en[playerid]) return SCM(playerid, COLOR_LIGHTGREY, "√á√†√¢√•√∞√∏√® √¢√±√• √≠√†√∑√†√≤√ª√• √∞√†√°√Æ√≤√ª √® √§√•√©√±√≤√¢√®√ø");
	if(pData[playerid][pLowSkill] == 1 || pData[playerid][pHighSkill] == 1) return SCM(playerid, COLOR_LIGHTGREY, "√á√†√¢√•√∞√∏√® √¢√±√• √≠√†√∑√†√≤√ª√• √∞√†√°√Æ√≤√ª √® √§√•√©√±√≤√¢√®√ø");
	if(GetPVarInt(playerid, "loader_job") == 1) return SCM(playerid, COLOR_LIGHTGREY, "√á√†√¢√•√∞√∏√® √¢√±√• √≠√†√∑√†√≤√ª√• √∞√†√°√Æ√≤√ª √® √§√•√©√±√≤√¢√®√ø");
	if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /goto √®√´√® /gt [id √®√£√∞√Æ√™√†]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No √®√´√® √Æ√≠ √≠√• √†√¢√≤√Æ√∞√®√ß√Æ√¢√†√≠");
	if(params[0] == playerid) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No √®√´√® √Æ√≠ √≠√• √†√¢√≤√Æ√∞√®√ß√Æ√¢√†√≠");
	if(GetPlayerState(params[0]) != 1 && GetPlayerState(params[0]) != 2 && GetPlayerState(params[0]) != 3) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No √®√´√® √Æ√≠ √≠√• √†√¢√≤√Æ√∞√®√ß√Æ√¢√†√≠");
	if(GetPlayerState(params[0]) == PLAYER_STATE_SPECTATING) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √≠√• √†√¢√≤√Æ√∞√®√ß√Æ√¢√†√≠ √®√´√® √≠√†√µ√Æ√§√®√≤√±√ø √¢ SP √∞√•√¶√®√¨√•");
	new Float:ploc[3]; GetPlayerPos(params[0], ploc[0], ploc[1], ploc[2]);
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
		SetVehiclePos(GetPlayerVehicleID(playerid), ploc[0], ploc[1]+4, ploc[2]);
		LinkVehicleToInterior(GetPlayerVehicleID(playerid), GetPlayerInterior(playerid));
		SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), GetPlayerVirtualWorld(playerid));
	}
	else SetPlayerPos(playerid,ploc[0],ploc[1]+2, ploc[2]);
	SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(params[0]));
	SetPlayerInterior(playerid, GetPlayerInterior(params[0]));
	return GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~TELEPORT", 1000, 3);
}
alias:gethere("gh");
CMD:gethere(playerid, params[]) {
	if(pData[playerid][pAdmin] < 2) return 1;
	if(bloody_en[playerid]) return SCM(playerid, COLOR_LIGHTGREY, "√á√†√¢√•√∞√∏√® √¢√±√• √≠√†√∑√†√≤√ª√• √∞√†√°√Æ√≤√ª √® √§√•√©√±√≤√¢√®√ø");
    if(pData[playerid][pLowSkill] == 1 || pData[playerid][pHighSkill] == 1) return SCM(playerid, COLOR_LIGHTGREY, "√á√†√¢√•√∞√∏√® √¢√±√• √≠√†√∑√†√≤√ª√• √∞√†√°√Æ√≤√ª √® √§√•√©√±√≤√¢√®√ø");
    if(GetPVarInt(playerid, "loader_job") == 1) return SCM(playerid, COLOR_LIGHTGREY, "√á√†√¢√•√∞√∏√® √¢√±√• √≠√†√∑√†√≤√ª√• √∞√†√°√Æ√≤√ª √® √§√•√©√±√≤√¢√®√ø");
	if(sscanf(params,"dD()",params[0],params[1])) return SCM(playerid, COLOR_LIGHTGREY, "Usar /gethere √®√´√® /gh "CPALEGREEN"[id √®√£√∞√Æ√™√†]"CLIGHTGREY". √í√è √¢√¨√•√±√≤√• √± √≤√∞√†√≠√±√Ø√Æ√∞√≤√Æ√¨: "CPALEGREEN"/gethere [id √®√£√∞√Æ√™√†] 1");
	new Float:ploc[3];
	string[0] = EOS;
	new inter = GetPlayerInterior(playerid), world = GetPlayerVirtualWorld(playerid);
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No √®√´√® √Æ√≠ √≠√• √†√¢√≤√Æ√∞√®√ß√Æ√¢√†√≠");
	if(GetPlayerState(params[0]) != 1 && GetPlayerState(params[0]) != 2 && GetPlayerState(params[0]) != 3) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No √®√´√® √Æ√≠ √≠√• √†√¢√≤√Æ√∞√®√ß√Æ√¢√†√≠");
	GetPlayerPos(playerid, ploc[0], ploc[1], ploc[2]);
	if(GetPlayerInterior(playerid) || !GetPlayerInterior(playerid)) {
		SetPlayerInterior(params[0], inter);
		SetPlayerVirtualWorld(params[0], world);
	}
	if(ploc[2] > 930.0 && !GetPlayerInterior(playerid)) SetPlayerInterior(params[0], inter);
	if(params[1] == 1) {
		if(GetPlayerState(params[0]) == PLAYER_STATE_DRIVER) {
			SetVehiclePos(GetPlayerVehicleID(params[0]), ploc[0], ploc[1]+4, ploc[2]);
			LinkVehicleToInterior(GetPlayerVehicleID(params[0]), GetPlayerInterior(params[0]));
			SetVehicleVirtualWorld(GetPlayerVehicleID(params[0]), GetPlayerVirtualWorld(params[0]));
		}
		else SetPlayerPos(params[0], ploc[0], ploc[1]+PLAYER_STATE_DRIVER, ploc[2]);
	}
	else if(!strlen(params[1])) {
		SetPlayerPos(params[0], ploc[0], ploc[1]+PLAYER_STATE_DRIVER, ploc[2]);
		SetPlayerInterior(params[0],inter);
		SetPlayerVirtualWorld(params[0],world);
		if(pData[playerid][pSex] == 1) {
			SCMF(params[0], -1, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s[%d] √≤√•√´√•√Ø√Æ√∞√≤√®√∞√Æ√¢√†√´ √Ç√†√± √™ √±√•√°√•", pData[playerid][pName], playerid);
			format(string, 128, "[A] %s[%d] √≤√•√´√•√Ø√Æ√∞√≤√®√∞√Æ√¢√†√´ √™ √±√•√°√• √®√£√∞√Æ√™√† %s[%d]", pData[playerid][pName],playerid, GetName(params[0]),params[0]);
			AdminMessage(COLOR_GREY, string);
		}
		else {
			SCMF(params[0], -1, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s[%d] √≤√•√´√•√Ø√Æ√∞√≤√®√∞√Æ√¢√†√´√† √Ç√†√± √™ √±√•√°√•", pData[playerid][pName], playerid);
			format(string, 128, "[A] %s[%d] √≤√•√´√•√Ø√Æ√∞√≤√®√∞√Æ√¢√†√´√† √™ √±√•√°√• √®√£√∞√Æ√™√† %s[%d]", pData[playerid][pName],playerid, GetName(params[0]),params[0]);
			AdminMessage(COLOR_GREY, string);
		} if(GetPVarInt(playerid, "AdminMessages")) SCM(playerid, COLOR_GREY, string);
		return 1;
	}
	else if(params[1] != 1) return SCM(playerid, COLOR_LIGHTGREY, "Usar /gethere √®√´√® /gh "CPALEGREEN"[id √®√£√∞√Æ√™√†]"CLIGHTGREY". √í√è √¢√¨√•√±√≤√• √± √≤√∞√†√≠√±√Ø√Æ√∞√≤√Æ√¨: "CPALEGREEN"/gethere [id √®√£√∞√Æ√™√†] 1");
	SetPlayerInterior(params[0],inter);
	SetPlayerVirtualWorld(params[0],world);
	if(pData[playerid][pSex] == 1) {
		SCMF(params[0], -1, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s[%d] √≤√•√´√•√Ø√Æ√∞√≤√®√∞√Æ√¢√†√´ √Ç√†√± √™ √±√•√°√•", pData[playerid][pName], playerid);
		format(string, 128, "[A] %s[%d] √≤√•√´√•√Ø√Æ√∞√≤√®√∞√Æ√¢√†√´ √™ √±√•√°√• √®√£√∞√Æ√™√† %s[%d]", pData[playerid][pName],playerid, GetName(params[0]),params[0]);
		AdminMessage(COLOR_GREY, string);
	}
	else {
		SCMF(params[0], -1, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s[%d] √≤√•√´√•√Ø√Æ√∞√≤√®√∞√Æ√¢√†√´√† √Ç√†√± √™ √±√•√°√•", pData[playerid][pName], playerid);
		format(string, 128, "[A] %s[%d] √≤√•√´√•√Ø√Æ√∞√≤√®√∞√Æ√¢√†√´√† √™ √±√•√°√• √®√£√∞√Æ√™√† %s[%d]", pData[playerid][pName],playerid, GetName(params[0]),params[0]);
		AdminMessage(COLOR_GREY, string);
	} if(GetPVarInt(playerid, "AdminMessages")) SCM(playerid, COLOR_GREY, string);
	return 1;
}
CMD:givegun(playerid, params[]) {
	if(pData[playerid][pAdmin] < 3) return 1;
	if(!IsAFull(playerid)) {
		if(sscanf(params, "dd", params[0], params[1])) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /givegun [id √®√£√∞√Æ√™√†] [id √Æ√∞√≥√¶√®√ø]");
		if(params[1] < 22 || params[1] > 34) return SCM(playerid, COLOR_LIGHTGREY, "√Ñ√Æ√±√≤√≥√Ø√≠√ª id √Æ√∞√≥√¶√®√ø √± 22 √Ø√Æ 34");
		params[2] = 50;
	}
	else {
		if(sscanf(params, "ddd", params[0], params[1], params[2])) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /givegun [id √®√£√∞√Æ√™√†] [id √Æ√∞√≥√¶√®√ø] [√Ø√†√≤√∞√Æ√≠√ª]");
		if(params[2] < 1 || params[2] > 300) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√´√º√ß√ø √¨√•√≠√º√∏√• 1 √®√´√® √°√Æ√´√º√∏√• 300 √Ø√†√≤√∞√Æ√≠√Æ√¢");
		if(params[1] < 1 || params[1] > 46) return SCM(playerid, 0xBFBB41FF, "√Ñ√Æ√±√≤√≥√Ø√≠√ª id √Æ√∞√≥√¶√®√ø √± 1 √Ø√Æ 46");
	}
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	new weaponname[18];
	GetWeaponName(params[1], weaponname, 18);
	GivePlayerWeapon(params[0], params[1], params[2]);
	SCMF(playerid, 0xCC9900FF, "√Ç√ª √¢√ªS√≠√´√® √Æ√∞√≥√¶√®√• %s √® %d √Ø√†√≤√∞√Æ√≠√Æ√¢ √§√´√ø %s[%d]", weaponname, params[2], GetName(params[0]), params[0]);
	return SCMF(params[0], 0xCC9900FF, "%s[%d] √¢√ªS√≠√´ √¢√†√¨ %s √® %d √Ø√†√≤√∞√Æ√≠√Æ√¢", pData[playerid][pName], playerid, weaponname, params[2]);
}
CMD:hold(playerid, params[]) {
	new hplayer = GetPVarInt(playerid, "hold_player");
	if(hplayer != -1) {
		hold[hplayer] = -1;
		ClearAnimations(hplayer);
		SetPVarInt(playerid, "hold_player", -1);

		if(GetPVarInt(playerid, "From_PolicePanel"))
			DeletePVar(playerid, "From_PolicePanel");

		SCM(playerid, COLOR_ORANGE, "√Ç√ª √Æ√≤√™√´√æ√∑√®√´√® √µ√Æ√§√º√°√≥ √®√£√∞√Æ√™√† √ß√† √Ç√†√¨√®");
		return 1;
	}
	if(!IsACop(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√†√¨ √≠√•√§√Æ√±√≤√≥√Ø√≠√† S√≠√≠√≠√†√ø √¥√≥√≠√™√∂√®√ø");
	if(pData[playerid][pRank] < 3) return SCM(playerid, COLOR_LIGHTGREY, "√î√≥√≠√™√∂√®√ø √§√Æ√±√≤√≥√Ø√≠√† √± 3-√£√Æ √∞√†√≠√£√†");
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /hold [id √®√£√∞√Æ√™√†]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(IsPlayerInAnyVehicle(playerid) || IsPlayerInAnyVehicle(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √® √Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √≠√† √≥√´√®√∂√•");
	if(!ProxDetectorS(10.0, playerid, params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
	if(IsACop(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√Æ√±√≤√Æ√®√≤ √¢ √å√Ç√Ñ");

	SetPVarInt(playerid, "hold_player", params[0]);
	hold[params[0]] = playerid;

	if(GetPVarInt(params[0], #tazer_dest)) {
		TogglePlayerControllable(params[0], true);
		ClearAnimations(params[0]);
		DeletePVar(params[0], #tazer_dest);
	}

	if(pData[playerid][pSex] == 1) {
		if(pData[params[0]][pSex] == 1) {
			MeAction(playerid, "√¢√ß√ø√´ √Ø√∞√•√±√≤√≥√Ø√≠√®√™√† √ß√† √∞√≥√™√≥");
			MeAction(playerid, "√Ø√Æ√¢¬∏√´ √Ø√∞√•√±√≤√≥√Ø√≠√®√™√† √ß√† √±√Æ√°√Æ√©");
		}
		else {
			MeAction(playerid, "√¢√ß√ø√´ √Ø√∞√•√±√≤√≥√Ø√≠√®√∂√≥ √ß√† √∞√≥√™√≥");
			MeAction(playerid, "√Ø√Æ√¢¬∏√´ √Ø√∞√•√±√≤√≥√Ø√≠√®√∂√≥ √ß√† √±√Æ√°√Æ√©");
		}
	}
	else {
		if(pData[params[0]][pSex] == 1) {
			MeAction(playerid, "√¢√ß√ø√´√† √Ø√∞√•√±√≤√≥√Ø√≠√®√™√† √ß√† √∞√≥√™√≥");
			MeAction(playerid, "√Ø√Æ√¢√•√´√† √Ø√∞√•√±√≤√≥√Ø√≠√®√™√† √ß√† √±√Æ√°√Æ√©");
		}
		else {
			MeAction(playerid, "√¢√ß√ø√´√† √Ø√∞√•√±√≤√≥√Ø√≠√®√∂√≥ √ß√† √∞√≥√™√≥");
			MeAction(playerid, "√Ø√Æ√¢√•√´√† √Ø√∞√•√±√≤√≥√Ø√≠√®√∂√≥ √ß√† √±√Æ√°√Æ√©");
		}
	}

	SCM(playerid, COLOR_MAIN, "√Ç√ª √Ø√Æ√¢√•√´√® √®√£√∞√Æ√™√† √ß√† √±√Æ√°√Æ√©");

	if(GetPVarInt(playerid, "From_PolicePanel"))
	{
		DeletePVar(playerid, "From_PolicePanel");
		SCM(playerid, COLOR_MAIN, "√Ñ√´√ø √Æ√≤√™√´√æ√∑√•√≠√®√ø √µ√Æ√§√º√°√ª √¢√ª√°√•√∞√®√≤√• √Ø√≥√≠√™√≤ √•√π¬∏ √∞√†√ß");
	}
	else
		SCM(playerid, COLOR_MAIN, "√Ñ√´√ø √Æ√≤√™√´√æ√∑√•√≠√®√ø √µ√Æ√§√º√°√ª √¢√¢√•√§√®√≤√• "CLITEBLUE"/hold "CMAIN"√•√π¬∏ √∞√†√ß");

    if(pData[params[0]][pSex] == 1) SCMF(params[0], COLOR_BLUE, "√ë√Æ√≤√∞√≥√§√≠√®√™ √å√Ç√Ñ %s √Ø√Æ√¢¬∏√´ √Ç√†√± √ß√† √±√Æ√°√Æ√©", GetName(playerid));
    else SCMF(params[0], COLOR_BLUE, "√ë√Æ√≤√∞√≥√§√≠√®√∂√† √å√Ç√Ñ %s √Ø√Æ√¢√•√´√† √Ç√†√± √ß√† √±√Æ√°√Æ√©", GetName(playerid));

	return 1;
}
CMD:putmyammo(playerid, params[]) {
	new str_query[80], str_patr[50], count_ammo, vw_pl = GetPlayerVirtualWorld(playerid);
	if(!IsAArm(playerid)) return SCM(playerid, COLOR_GREY, "√î√≥√≠√™√∂√®√ø √§√Æ√±√≤√≥√Ø√≠√† √≤√Æ√´√º√™√Æ √¢√Æ√•√≠√≠√ª√¨");
	if(!IsPlayerInRangeOfPoint(playerid, 2.0, 312.1, -166.1, 999.6)) return SCM(playerid, COLOR_GREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √±√™√´√†S√≠ √Ø√†√≤√∞√Æ√≠√Æ√¢");
	if(vw_pl != 229 && vw_pl != 229 && vw_pl != 23) return SCM(playerid, COLOR_GREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √±√™√´√†S√≠ √Ø√†√≤√∞√Æ√≠√Æ√¢");
	if(sscanf(params, "d", count_ammo)) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /putmyammo [√™√Æ√´-√¢√Æ √Ø√†√≤√∞√Æ√≠√Æ√¢]");
	if(pData[playerid][pPatr] < count_ammo) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √Ø√†√≤√∞√Æ√≠√Æ√¢ √± √±√Æ√°√Æ√©");
	ApplyAnimation(playerid, "CARRY", "PUTDWN", 4.0, 0, 0, 0, 0, 0, 1);
	pData[playerid][pPatr] -= count_ammo;
	UpdatePlayerData(playerid, "pPatr", pData[playerid][pPatr]);
	if(vw_pl == 229) {
		if(svstore_patr >= 100000) return SCM(playerid, COLOR_GREY, "√ù√≤√Æ√≤ √±√™√´√†√§ √Ø√Æ√´√Æ√≠");
		svstore_patr += count_ammo;
		format(str_patr, 50, "√è√†√≤√∞√Æ√≠√ª √≠√† √±√™√´√†√§√•:\n%i / 100000 √∏√≤.", svstore_patr);
		UpdateDynamic3DTextLabelText(text_sv_storpt, 0xFFCC00FF, str_patr);
		mysql_format(mysql_Handle, str_query, 80, "UPDATE `otherfuncs` SET `svstore_patr` = `svstore_patr` + %d", count_ammo);
		mysql_tquery(mysql_Handle, str_query);
	}
	else if(vw_pl == 74) {
		if(vvcstore_patr >= 100000) return SCM(playerid, COLOR_GREY, "√ù√≤√Æ√≤ √±√™√´√†√§ √Ø√Æ√´√Æ√≠");
		vvcstore_patr += count_ammo;
		format(str_patr, 50, "√è√†√≤√∞√Æ√≠√ª √≠√† √±√™√´√†√§√•:\n%i / 100000 √∏√≤.", vvcstore_patr);
		UpdateDynamic3DTextLabelText(text_vvc_storpt, 0xFFCC00FF, str_patr);
		mysql_format(mysql_Handle, str_query, 80, "UPDATE `otherfuncs` SET `vvcstore_patr` = `vvcstore_patr` + %d", count_ammo);
		mysql_tquery(mysql_Handle, str_query);
	}
	else if(vw_pl == 23) {
		if(vmfstore_patr >= 100000) return SCM(playerid, COLOR_GREY, "√ù√≤√Æ√≤ √±√™√´√†√§ √Ø√Æ√´√Æ√≠");
		vmfstore_patr += count_ammo;
		format(str_patr, 50, "√è√†√≤√∞√Æ√≠√ª √≠√† √±√™√´√†√§√•:\n%i / 100000 √∏√≤.", vmfstore_patr);
		UpdateDynamic3DTextLabelText(text_vmf_storpt, 0xFFCC00FF, str_patr);
		mysql_format(mysql_Handle, str_query, 80, "UPDATE `otherfuncs` SET `vmfstore_patr` = `vmfstore_patr` + %d", count_ammo);
		mysql_tquery(mysql_Handle, str_query);
	} return SCMF(playerid, COLOR_BLUE, "√Ç√ª √Ø√Æ√´√Æ√¶√®√´√® √±√¢√Æ√® √Ø√†√≤√∞√Æ√≠√ª √≠√† √±√™√´√†√§ "CMAIN"(%d √∏√≤.)", count_ammo);
}
CMD:putammo(playerid) {
	if(!IsAArm(playerid) && !IsAMafia(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√î√≥√≠√™√∂√®√ø √§√Æ√±√≤√≥√Ø√≠√† √≤√Æ√´√º√™√Æ √†√∞√¨√®√ø√¨ √® √¨√†√¥√®√ø√¨");
	if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª√©√§√®√≤√• √®√ß √≤√∞√†√≠√±√Ø√Æ√∞√≤√†");
	if(!box_object[playerid]) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √ø√π√®√™√† √± √Ø√†√≤√∞√Æ√≠√†√¨√® √¢ √∞√≥√™√†√µ");
	new bool: status, Float: ammo_carpos[3], str_pa[45];
	for(new i = 0, ps = GetVehiclePoolSize(); i <= ps; i++)
	{
		GetVehiclePos(i, ammo_carpos[0], ammo_carpos[1], ammo_carpos[2]);
		if(IsPlayerInRangeOfPoint(playerid, 3.0, ammo_carpos[0], ammo_carpos[1], ammo_carpos[2]))
		{
			new m = GetVehicleModel(i);
			if(m != 455 && m != 487 && m != 431)
			{
				if((i >= armcar[0] && i <= armcar[1]) || 
				(i >= vvcveh[0] && i <= vvcveh[1]) || 
				(i >= vmfcar[0] && i <= vmfcar[1]) || 
				(i >= lcncar[0] && i <= lcncar[1]) || 
				(i >= ruscar[0] && i <= ruscar[1]) || 
				(i >= yakcar[0] && i <= yakcar[1]))
				{
					if(ammobox_ic[i] >= 5) 
						return SCM(playerid, COLOR_LIGHTGREY, "√Ç 1 √≤√∞√†√≠√±√Ø√Æ√∞√≤ √¨√Æ√¶√≠√Æ √ß√†√£√∞√≥√ß√®√≤√º √≠√• √°√Æ√´√•√• 5-√≤√® √ø√π√®√™√Æ√¢ √± √Ø√†√≤√∞√Æ√≠√†√¨√®");
					
					ApplyAnimation(playerid, "CARRY", "PUTDWN", 4.0, 0, 0, 0, 0, 0, 1);
					SetPlayerSpecialAction(playerid, 0);
					if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
					ammobox_ic[i] ++; box_object[playerid] = false; status = true;
					if(pData[playerid][pSex] == 1) SetPlayerChatBubble(playerid, "√Ø√Æ√´√Æ√¶√®√´ √ø√π√®√™ √± √Ø√†√≤√∞√Æ√≠√†√¨√®", 0x996633FF, 4.0, 5000);
					else SetPlayerChatBubble(playerid, "√Ø√Æ√´√Æ√¶√®√´√† √ø√π√®√™ √± √Ø√†√≤√∞√Æ√≠√†√¨√®", 0x996633FF, 4.0, 5000);
					format(str_pa, 45, "\n√ü√π√®√™√Æ√¢ √± √Ø√†√≤√∞√Æ√≠√†√¨√®:\n"CERROR"%d √∏√≤.", ammobox_ic[i]);
					if(ammobox_ic[i] > 1) 
						UpdateDynamic3DTextLabelText(text_ammoload[i], 0xFFCC00FF, str_pa);
					else 
						text_ammoload[i] = CreateDynamic3DTextLabel(str_pa, 0xFFCC00FF, 0.0, 0.0, 2.75, 8.0, INVALID_PLAYER_ID, i);
				}
			}
			
			break;
		}
	}
	if(!status) 
		SCM(playerid, COLOR_GREY, "√è√Æ√°√´√®√ß√Æ√±√≤√® No √≤√∞√†√≠√±√Ø√Æ√∞√≤√†, √¢ √™√Æ√≤√Æ√∞√ª√© √¨√Æ√¶√≠√Æ √ß√†√£√∞√≥√ß√®√≤√º √Ø√†√≤√∞√Æ√≠√ª");

	return 1;
}
CMD:dropammo(playerid)
{
	if(!IsAArm(playerid) && !IsAMafia(playerid)) 
		return SCM(playerid, COLOR_LIGHTGREY, "√î√≥√≠√™√∂√®√ø √§√Æ√±√≤√≥√Ø√≠√† √≤√Æ√´√º√™√Æ √†√∞√¨√®√ø√¨ √® √¨√†√¥√®√ø√¨");

	if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª√©√§√®√≤√• √®√ß √≤√∞√†√≠√±√Ø√Æ√∞√≤√†");
	if(!box_object[playerid]) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √ø√π√®√™√† √± √Ø√†√≤√∞√Æ√≠√†√¨√® √¢ √∞√≥√™√†√µ");
	ApplyAnimation(playerid, "CARRY", "PUTDWN", 4.0, 0, 0, 0, 0, 0, 1);
	SetPlayerSpecialAction(playerid, 0); box_object[playerid] = false;
	if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
	if(pData[playerid][pSex] == 1) SetPlayerChatBubble(playerid, "√¢√ª√°√∞√Æ√±√®√´ √ø√π√®√™ √± √Ø√†√≤√∞√Æ√≠√†√¨√®", 0x996633FF, 4.0, 5000);
	else SetPlayerChatBubble(playerid, "√¢√ª√°√∞√Æ√±√®√´√† √ø√π√®√™ √± √Ø√†√≤√∞√Æ√≠√†√¨√®", 0x996633FF, 4.0, 5000);

	return SCM(playerid, 0xFF9945FF, "√Ç√ª √¢√ª√°√∞√Æ√±√®√´√® √ø√π√®√™ √± √Ø√†√≤√∞√Æ√≠√†√¨√®");
}
CMD:takeammo(playerid)
{
	if(!IsAArm(playerid) && !IsAMafia(playerid)) 
		return SCM(playerid, COLOR_LIGHTGREY, "√î√≥√≠√™√∂√®√ø √§√Æ√±√≤√≥√Ø√≠√† √≤√Æ√´√º√™√Æ √†√∞√¨√®√ø√¨ √® √¨√†√¥√®√ø√¨");
	if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª√©√§√®√≤√• √®√ß √≤√∞√†√≠√±√Ø√Æ√∞√≤√†");
	if(box_object[playerid]) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≥√¶√• √•√±√≤√º √ø√π√®√™ √¢ √∞√≥√™√†√µ");

	new bool: status, Float: ammo_carpos[3], str_pa[45];
	for(new i = 0, ps = GetVehiclePoolSize(); i <= ps; i++) {
		GetVehiclePos(i, ammo_carpos[0], ammo_carpos[1], ammo_carpos[2]);
		if(IsPlayerInRangeOfPoint(playerid, 3.0, ammo_carpos[0], ammo_carpos[1], ammo_carpos[2]))
		{
			if(ammobox_ic[i] < 1) 
				return SCM(playerid, COLOR_LIGHTGREY, "√Ç √Ω√≤√Æ√¨ √≤√∞√†√≠√±√Ø√Æ√∞√≤√• No √ø√π√®√™√Æ√¢ √± √Ø√†√≤√∞√Æ√≠√†√¨√®");
			ApplyAnimation(playerid, "CARRY", "LIFTUP", 4.0, 0, 0, 0, 0, 0, 1);
			SetPlayerSpecialAction(playerid, 25);
			SetPlayerAttachedObject(playerid, 2, 2358, 6, -0.031999, 0.068999, -0.239000, -109.999885, -17.999992, -95.200019, 0.861999, 0.916999, 0.984000);
			box_object[playerid] = true;
			status = true;
			if(pData[playerid][pSex] == 1) SetPlayerChatBubble(playerid, "√¢√ß√ø√´ √ø√π√®√™ √± √Ø√†√≤√∞√Æ√≠√†√¨√®", 0x996633FF, 4.0, 5000);
			else SetPlayerChatBubble(playerid, "√¢√ß√ø√´√† √ø√π√®√™ √± √Ø√†√≤√∞√Æ√≠√†√¨√®", 0x996633FF, 4.0, 5000);
			ammobox_ic[i]--;
			format(str_pa, 45, "\n√ü√π√®√™√Æ√¢ √± √Ø√†√≤√∞√Æ√≠√†√¨√®:\n"CERROR"%d √∏√≤.", ammobox_ic[i]);
			if(ammobox_ic[i] < 1) 
				DestroyDynamic3DTextLabel(text_ammoload[i]);
			else if(IsValidDynamic3DTextLabel(text_ammoload[i])) 
				UpdateDynamic3DTextLabelText(text_ammoload[i], 0xFFCC00FF, str_pa);
			break;
		}
	}

	if(!status) SCM(playerid, COLOR_LIGHTGREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √≤√∞√†√≠√±√Ø√Æ√∞√≤√† √± √ø√π√®√™√†√¨√®");

	return 1;
}
CMD:putpl(playerid, params[]) {
	if(!IsACop(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√†√¨ √≠√•√§√Æ√±√≤√≥√Ø√≠√† S√≠√≠√≠√†√ø √¥√≥√≠√™√∂√®√ø");
	new res, bool: next = false, carr = GetVehicleModel(GetPlayerVehicleID(playerid)), target;
	if(!Megaphone(GetPlayerVehicleID(playerid))) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √±√´√≥√¶√•√°√≠√Æ√¨ √≤√∞√†√≠√±√Ø√Æ√∞√≤√•");
	if(sscanf(params, "i", target)) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /putpl [id √®√£√∞√Æ√™√†]");
	if(!IsPlayerConnected(target)) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if((carr != 441) || (carr != 446) || (carr != 448) || (carr != 449) || (carr != 452) || (carr != 450) || (carr != 453) || (carr != 454) || (carr != 460) || (carr != 461) || (carr != 462) || (carr != 463) || (carr != 464) || (carr != 465) || (carr != 468) ||
	(carr != 472) || (carr != 473) || (carr != 481) || (carr != 484) || (carr != 493) || (carr != 501) || (carr != 509) || (carr != 510) || (carr != 521) || (carr != 522) || (carr != 523) || (carr != 539) || (carr != 564) || (carr != 568) || (carr != 569) ||
	(carr != 570) || (carr != 571) || (carr != 584) || (carr != 586) || (carr != 595))
	{
		if(IsPlayerInAnyVehicle(target)) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √≠√†√µ√Æ√§√®√≤√±√ø √¢ √¨√†√∏√®√≠√•");
		if((!GetPVarInt(target, "PlayerCuffed")) && IsACop(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √§√Æ√´√¶√•√≠ √°√ª√≤√º √¢ √≠√†√∞√≥√∑√≠√®√™√†√µ");
		if(!ProxDetectorS(3.0, playerid, target)) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
		for(new i = 0, ps = GetVehiclePoolSize(); i <= ps; i++)
		{
			new disto = CheckPlayerDistanceToVehicle(3.0, playerid, i);
			if(disto)
			{
				res = i;
				break;
			}
		}
		for(new i = 1; i < 3; i ++)
		{
			if(!next)
			{
				if(!IsAnyPlayerInCar(res, i))
				{
					next = true;
					PutPlayerInVehicle(target, res, i);
					TogglePlayerControllable(target, false);
					if(pData[playerid][pSex] == 1) format(string, 128, "%s %s √Ø√Æ√±√†√§√®√´ %s √¢ √¨√†√∏√®√≠√≥", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], pData[playerid][pName], GetName(target));
					else format(string, 128, "%s %s √Ø√Æ√±√†√§√®√´√† %s √¢ √¨√†√∏√®√≠√≥", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], pData[playerid][pName], GetName(target));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE);
					break;
				}
			}
		}
		if(!next) return SCM(playerid, COLOR_LIGHTGREY, "√Ç √¨√†√∏√®√≠√• No √±√¢√Æ√°√Æ√§√≠√ª√µ √¨√•√±√≤");
	}
	else return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [068]");
	return 1;
}
CMD:blind(playerid,params[])
{
	if(!IsAMafia(playerid)) 
		return SCM(playerid, COLOR_LIGHTGREY, "√î√≥√≠√™√∂√®√ø √§√Æ√±√≤√≥√Ø√≠√† √≤√Æ√´√º√™√Æ √¨√†√¥√®√ø√¨");

	new player_to;

	if(sscanf(params, "d", player_to)) 
		return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /blind [id √®√£√∞√Æ√™√†]");
	if(player_to == playerid)
		return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √≠√†√§√•√≤√º √¨√•√∏√Æ√™ √≠√† √±√•√°√ø");
	if(!IsPlayerConnected(player_to))
		return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √≠√• √≠√†√©√§√•√≠");
	if(!PlayerTied{player_to})
		return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √§√Æ√´√¶√•√≠ √°√ª√≤√º √±√¢√ø√ß√†√≠ (/tie)");
	if(GetPlayerState(playerid) != 2 || !IsPlayerInVehicle(player_to, GetPlayerVehicleID(playerid)))
		return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √® √Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √Æ√§√≠√Æ√¨ √≤√∞√†√≠√±√Ø√Æ√∞√≤√•");
	if(blinded[player_to])
		return SCM(playerid, COLOR_LIGHTGREY, "√ç√† √®√£√∞√Æ√™√† √≥√¶√• √≠√†√§√•√≤ √¨√•√∏√Æ√™. √Ç√¢√•√§√®√≤√• /unblind √§√´√ø √±√≠√ø√≤√®√ø");

	GameTextForPlayer(player_to, "~r~blinded", 2500, 3);
	TextDrawShowForPlayer(player_to, blind_TD);
	blinded[player_to] = true;

	string[0] = EOS;
	format(string,120, "%s %s √≠√†√§√•√´ √¨√•√∏√Æ√™ √≠√† %s", pData[playerid][pName],GetName(player_to));
	return ProxDetector(30.0, playerid, string, COLOR_PURPLE);
}
CMD:unblind(playerid,params[])
{
	if(!IsAMafia(playerid)) 
		return SCM(playerid, COLOR_LIGHTGREY, "√î√≥√≠√™√∂√®√ø √§√Æ√±√≤√≥√Ø√≠√† √≤√Æ√´√º√™√Æ √¨√†√¥√®√ø√¨");

	new player_to;

	if(sscanf(params, "d", player_to)) 
		return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /unblind [id √®√£√∞√Æ√™√†]");
	if(player_to == playerid)
		return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √±√≠√ø√≤√º √¨√•√∏√Æ√™ √± √±√•√°√ø");
	if(!IsPlayerConnected(player_to))
		return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √≠√• √≠√†√©√§√•√≠");
	if(!blinded[player_to])
		return SCM(playerid, COLOR_LIGHTGREY, "√ç√† √®√£√∞√Æ√™√† √≠√• √≠√†√§√•√≤ √¨√•√∏√Æ√™");

	GameTextForPlayer(player_to, "~g~unblinded", 2500, 3);
	TextDrawHideForPlayer(player_to, blind_TD);
	blinded[player_to] = false;
	
	string[0] = EOS;
	format(string,120, "%s %s √±√≠√ø√´ √¨√•√∏√Æ√™ √± %s", pData[playerid][pName],GetName(player_to));
	return ProxDetector(30.0, playerid, string, COLOR_PURPLE);
}
CMD:tie(playerid, params[]) {
	if(!IsAMafia(playerid)) 
		return SCM(playerid, COLOR_LIGHTGREY, "√Ç√†√¨ √≠√•√§√Æ√±√≤√≥√Ø√≠√† S√≠√≠√≠√†√ø √¥√≥√≠√™√∂√®√ø");

	if(pData[playerid][pRank] < 3) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√† √¥√≥√≠√™√∂√®√ø √§√Æ√±√≤√≥√Ø√≠√† √± 3-√£√Æ √∞√†√≠√£√†");
	if(GetPVarInt(playerid, "PlayerCuffed") == 2) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Ω√≤√≥ √™√Æ√¨√†√≠√§√≥ √¢ √≠√†√∞√≥√∑√≠√®√™√†√µ");
	if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /tie [id √®√£√∞√Æ√™√†]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(PlayerTied{playerid} > false) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Ω√≤√≥ √™√Æ√¨√†√≠√§√≥ √¢ S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤");
	if(PlayerTied{params[0]} > false) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √≥√¶√• √±√¢√ø√ß√†√≠");
	if(params[0] == playerid) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√´√º√ß√ø √±√¢√ø√ß√†√≤√º √±√†√¨√Æ√£√Æ √±√•√°√ø");
	if(!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
	
	TogglePlayerControllable(params[0], false);
	PlayerTied{params[0]} = true;
	GameTextForPlayer(params[0], "~r~you were bound", 3000, 3);

	string[0] = EOS;
	if(pData[playerid][pSex] == 1) format(string, 126, "%s %s √§√Æ√±√≤√†√´ √¢√•√∞√•√¢√™√≥ √® √±√¢√ø√ß√†√´ %s", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], pData[playerid][pName], GetName(params[0]));
	else format(string, 126, "%s %s √§√Æ√±√≤√†√´√† √¢√•√∞√•√¢√™√≥ √® √±√¢√ø√ß√†√´√† %s", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], pData[playerid][pName], GetName(params[0]));
	return ProxDetector(30.0, playerid, string, COLOR_PURPLE);
}
CMD:gag(playerid, params[]) {
	if(!IsAMafia(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√î√≥√≠√™√∂√®√ø √§√Æ√±√≤√≥√Ø√≠√† √≤√Æ√´√º√™√Æ √¨√†√¥√®√ø√¨");
	if(pData[playerid][pRank] < 2) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√† √¥√≥√≠√™√∂√®√ø √§√Æ√±√≤√≥√Ø√≠√† √±√Æ 2-√£√Æ √∞√†√≠√£√†");
	if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /gag [id √®√£√∞√Æ√™√†]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(params[0] == playerid) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√´√º√ß√ø √≥ √±√†√¨√Æ√£√Æ √±√•√°√ø √¢√ª√≤√†√π√®√≤√º √™√´√ø√Ø");
	if(PlayerTied{playerid} > false) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Ω√≤√≥ √™√Æ√¨√†√≠√§√≥ √¢ S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤");
	if(!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
	string[0] = EOS;
	if(GetPVarInt(params[0], "gag") > 0) {
		DeletePVar(params[0],"gag");
		gagtie_time[params[0]] = 0;
		if(pData[playerid][pSex] == 1) format(string,90, "%s %s √¢√ª√≤√†√π√®√´ √™√´√ø√Ø √≥ %s", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], pData[playerid][pName] ,GetName(params[0]));
		else format(string,90, "%s %s √¢√ª√≤√†√π√®√´√† √™√´√ø√Ø √≥ %s", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], pData[playerid][pName] ,GetName(params[0]));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE);
		SCM(params[0], COLOR_MAIN, "√Ç√†√¨ √¢√ª√≤√†√π√®√´√® √™√´√ø√Ø √®√ß√Æ √∞√≤√†. √Ñ√Æ√±√≤√≥√Ø √¢ √∑√†√≤ √¢√Æ√±√±√≤√†√≠√Æ√¢√´√•√≠");
	}
	else {
		SetPVarInt(params[0], "gag",1);
		gagtie_time[params[0]] = 600;
		if(pData[playerid][pSex] == 1) format(string,90, "%s %s √¢√±√≤√†√¢√®√´ √™√´√ø√Ø √¢ √∞√Æ√≤ %s", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], pData[playerid][pName] ,GetName(params[0]));
		else format(string,90, "%s %s √¢√±√≤√†√¢√®√´√† √™√´√ø√Ø √¢ √∞√Æ√≤ %s", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], pData[playerid][pName] ,GetName(params[0]));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE);
		SCM(params[0], COLOR_BLUE, "√Ç√†√¨ √¢√±√≤√†√¢√®√´√® √™√´√ø√Ø √¢ √∞√Æ√≤. √ó√≤√Æ√°√ª √Ø√Æ√Ø√ª√≤√†√≤√º√±√ø √¢√ª√Ø√´√æ√≠√≥√≤√º √•√£√Æ, √¢√¢√•√§√®√≤√• /gagoff "CORANGE"(√¢√ª √≠√• √§√Æ√´√¶√≠√ª √°√ª√≤√º √±√¢√ø√ß√†√≠√ª)");
	} return 1;
}
CMD:gagoff(playerid) {
	if(!GetPVarInt(playerid, "gag")) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √™√´√ø√Ø√†");
	if(PlayerTied{playerid} > false) {
		SetPlayerChatBubble(playerid, "√è√ª√≤√†√•√≤√±√ø √¢√ª√Ø√´√æ√≠√≥√≤√º √™√´√ø√Ø...", 0xFF2200FF, 30.0, 10000);
		return SCM(playerid, COLOR_ERROR, "√Ç√ª √±√¢√ø√ß√†√≠√ª! √Ç√ª√Ø√´√æ√≠√≥√≤√º √™√´√ø√Ø √≠√•√´√º√ß√ø");
	}
	DeletePVar(playerid, "gag");
	gagtie_time[playerid] = 0;
	string[0] = EOS;
	if(pData[playerid][pSex] == 1) format(string,90, "%s √¢√ª√Ø√´√æ√≠√≥√´ √™√´√ø√Ø √®√ß√Æ √∞√≤√†", pData[playerid][pName]);
	else format(string,90, "%s √¢√ª√Ø√´√æ√≠√≥√´√† √™√´√ø√Ø √®√ß√Æ √∞√≤√†", pData[playerid][pName]);
	ProxDetector(30.0, playerid, string, COLOR_PURPLE);
	return SCM(playerid, COLOR_MAIN, "√Ç√ª √¢√ª√Ø√´√æ√≠√≥√´√® √™√´√ø√Ø. √Ñ√Æ√±√≤√≥√Ø √¢ √∑√†√≤ √¢√Æ√±√±√≤√†√≠√Æ√¢√´√•√≠");
}
CMD:untie(playerid, params[]) {
	if(!IsAMafia(playerid)) 
		return SCM(playerid, COLOR_LIGHTGREY, "√î√≥√≠√™√∂√®√ø √§√Æ√±√≤√≥√Ø√≠√† √≤√Æ√´√º√™√Æ √¨√†√¥√®√ø√¨");

	if(pData[playerid][pRank] < 2) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√† √¥√≥√≠√™√∂√®√ø √§√Æ√±√≤√≥√Ø√≠√† √±√Æ 2-√£√Æ √∞√†√≠√£√†");
	if(GetPVarInt(playerid, "PlayerCuffed") == 2) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Ω√≤√≥ √™√Æ√¨√†√≠√§√≥ √¢ √≠√†√∞√≥√∑√≠√®√™√†√µ");
	if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /untie [id √®√£√∞√Æ√™√†]");
	if(params[0] == playerid) return SCM(playerid,COLOR_LIGHTGREY,"√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √∞√†√ß√¢√ø√ß√†√≤√º √±√•√°√ø");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
	if(!PlayerTied{params[0]}) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√Æ√≤ √®√£√∞√Æ√™ √≠√• √±√¢√ø√ß√†√≠");

	TogglePlayerControllable(params[0], 1);
	PlayerTied{params[0]} = false;
	GameTextForPlayer(params[0], "~g~you are released", 3000, 3);

	string[0] = EOS;
	if(pData[playerid][pSex] == 1) format(string,120, "%s %s √∞√†√ß√¢√ø√ß√†√´ %s", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], pData[playerid][pName] ,GetName(params[0]));
	else format(string,120, "%s %s √∞√†√ß√¢√ø√ß√†√´√† %s", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], pData[playerid][pName] ,GetName(params[0]));
	return ProxDetector(30.0, playerid, string, COLOR_PURPLE);
}
CMD:askill(playerid, params[]) {
	if(pData[playerid][pAdmin] < 2) return 1;
	new text[MAX_PLAYER_NAME], bool:findnick = false;
	if(sscanf(params, "s[24]", text)) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /askill [id √®√£√∞√Æ√™√† (√®√´√® √≠√®√™ √®√£√∞√Æ√™√† √Æ√¥√¥√´√†√©√≠)]");
	for(new i = 0; i < strlen(text); i ++) {
        if(text[i] >= '0' && text[i] <= '9') continue;
        findnick = true;
        break;
    }
	if(findnick == true) // √≠√®√™
	{
		mysql_format(mysql_Handle, string, 128, "SELECT * FROM `accounts` WHERE `Name` = '%s'", text);
		mysql_tquery(mysql_Handle, string, "AskillGetNick", "is", playerid, text);
	}
	else // id
	{
		new idd = strval(text), str_skill[1650], str_last[144];
		if(!IsPlayerConnected(idd)) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √± √≤√†√™√®√¨ ID √®√´√® √≠√®√™√Æ√¨ √≠√• √≠√†√©√§√•√≠");
		format(str_last, sizeof(str_last), "{99FF66}√ë√®√´√†\t\t\t%d%%\t"CWHITE"%s\n", pData[idd][p_strengh], AtSkillBar(pData[idd][p_strengh]));
		strcat(str_skill, str_last);
		format(str_last, sizeof(str_last), "{99FF66}Colt 45\t\t\t%d%%\t"CWHITE"%s\n", pData[idd][pSkill][0], AtSkillBar(pData[idd][pSkill][0]));
		strcat(str_skill, str_last);
		format(str_last, sizeof(str_last), "{99FF66}SD Pistol\t\t%d%%\t"CWHITE"%s\n", pData[idd][pSkill][1], AtSkillBar(pData[idd][pSkill][1]));
		strcat(str_skill, str_last);
		format(str_last, sizeof(str_last), "{99FF66}Desert Eagle\t\t%d%%\t"CWHITE"%s\n", pData[idd][pSkill][2], AtSkillBar(pData[idd][pSkill][2]));
		strcat(str_skill, str_last);
		format(str_last, sizeof(str_last), "{99FF66}Shotgun\t\t%d%%\t"CWHITE"%s\n", pData[idd][pSkill][3], AtSkillBar(pData[idd][pSkill][3]));
		strcat(str_skill, str_last);
		format(str_last, sizeof(str_last), "{99FF66}MP5\t\t\t%d%%\t"CWHITE"%s\n", pData[idd][pSkill][4], AtSkillBar(pData[idd][pSkill][4]));
		strcat(str_skill, str_last);
		format(str_last, sizeof(str_last), "{99FF66}AK47\t\t\t%d%%\t"CWHITE"%s\n", pData[idd][pSkill][5], AtSkillBar(pData[idd][pSkill][5]));
		strcat(str_skill, str_last);
		format(str_last, sizeof(str_last), "{99FF66}M4\t\t\t%d%%\t"CWHITE"%s\n", pData[idd][pSkill][6], AtSkillBar(pData[idd][pSkill][6]));
		strcat(str_skill, str_last);
		format(str_last, sizeof(str_last), "{99FF66}Sniper Rifle\t\t%d%%\t"CWHITE"%s\n", pData[idd][pSkill][7], AtSkillBar(pData[idd][pSkill][7]));
		strcat(str_skill, str_last);
		format(str_last, sizeof(str_last), "{99FF66}Sawnoff\t\t%d%%\t"CWHITE"%s\n", pData[idd][pSkill][8], AtSkillBar(pData[idd][pSkill][8]));
		strcat(str_skill, str_last);
		format(str_last, sizeof(str_last), "{99FF66}Combat SG\t\t%d%%\t"CWHITE"%s\n", pData[idd][pSkill][9], AtSkillBar(pData[idd][pSkill][9]));
		strcat(str_skill, str_last);
		format(str_last, sizeof(str_last), "{99FF66}Micro UZI\t\t%d%%\t"CWHITE"%s\n", pData[idd][pSkill][10], AtSkillBar(pData[idd][pSkill][10]));
		strcat(str_skill, str_last);
		SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CBLUE"√ç√†√¢√ª√™√® √¢√´√†√§√•√≠√®√ø √Æ√∞√≥√¶√®√•√¨", str_skill, "Cerrar", "");
		return SCMF(playerid,COLOR_GREY,"√Ç√ª √Ø√∞√Æ√±√¨√†√≤√∞√®√¢√†√•√≤√• √≠√†√¢√ª√™√® √¢√´√†√§√•√≠√®√ø √Æ√∞√≥√¶√®√•√¨ √®√£√∞√Æ√™√† {cc9900}%s "CGREY"(√≠√Æ√¨√•√∞ √†√™√™√†√≥√≠√≤√† {00cc66}%d"CGREY")", GetName(idd), pData[idd][pID]);
	}
	return 1;
}
CB: AskillGetNick(playerid, nmeAcc[]) {
	new rows, str_skill[1650], str_last[144], id_cc, sstrengh, pskills0, pskills1, pskills2, pskills3, pskills4, pskills5, 
	pskills6, pskills7, pskills8, pskills9, pskills10;
	cache_get_row_count(rows);
	if(!rows) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √± √≤√†√™√®√¨ ID √®√´√® √≠√®√™√Æ√¨ √≠√• √≠√†√©√§√•√≠");
	cache_get_value_name_int(0, "id", id_cc);
	cache_get_value_name_int(0, "strengh", sstrengh);
	cache_get_value_name_int(0, "COLT45", pskills0);
	cache_get_value_name_int(0, "SDPISTOL", pskills1);
	cache_get_value_name_int(0, "DEAGLE", pskills2);
	cache_get_value_name_int(0, "SHOTGUN", pskills3);
	cache_get_value_name_int(0, "MP5", pskills4);
	cache_get_value_name_int(0, "AK47", pskills5);
	cache_get_value_name_int(0, "M4", pskills6);
	cache_get_value_name_int(0, "SNIPER", pskills7);
	cache_get_value_name_int(0, "SAWNOFF", pskills8);
	cache_get_value_name_int(0, "COMBAT_SG", pskills9);
	cache_get_value_name_int(0, "MICRO_UZI", pskills10);
	format(str_last, sizeof(str_last), "{99FF66}√ë√®√´√†\t\t\t%d%%\t"CWHITE"%s\n", sstrengh, AtSkillBar(sstrengh));
	strcat(str_skill, str_last);
	format(str_last, sizeof(str_last), "{99FF66}Colt 45\t\t\t%d%%\t"CWHITE"%s\n", pskills0, AtSkillBar(pskills0));
	strcat(str_skill, str_last);
	format(str_last, sizeof(str_last), "{99FF66}SD Pistol\t\t%d%%\t"CWHITE"%s\n", pskills1, AtSkillBar(pskills1));
	strcat(str_skill, str_last);
	format(str_last, sizeof(str_last), "{99FF66}Desert Eagle\t\t%d%%\t"CWHITE"%s\n", pskills2, AtSkillBar(pskills2));
	strcat(str_skill, str_last);
	format(str_last, sizeof(str_last), "{99FF66}Shotgun\t\t%d%%\t"CWHITE"%s\n", pskills3, AtSkillBar(pskills3));
	strcat(str_skill, str_last);
	format(str_last, sizeof(str_last), "{99FF66}MP5\t\t\t%d%%\t"CWHITE"%s\n", pskills4, AtSkillBar(pskills4));
	strcat(str_skill, str_last);
	format(str_last, sizeof(str_last), "{99FF66}AK47\t\t\t%d%%\t"CWHITE"%s\n", pskills5, AtSkillBar(pskills5));
	strcat(str_skill, str_last);
	format(str_last, sizeof(str_last), "{99FF66}M4\t\t\t%d%%\t"CWHITE"%s\n", pskills6, AtSkillBar(pskills6));
	strcat(str_skill, str_last);
	format(str_last, sizeof(str_last), "{99FF66}Sniper Rifle\t\t%d%%\t"CWHITE"%s\n", pskills7, AtSkillBar(pskills7));
	strcat(str_skill, str_last);
	format(str_last, sizeof(str_last), "{99FF66}Sawnoff\t\t%d%%\t"CWHITE"%s\n", pskills8, AtSkillBar(pskills8));
	strcat(str_skill, str_last);
	format(str_last, sizeof(str_last), "{99FF66}Combat SG\t\t%d%%\t"CWHITE"%s\n", pskills9, AtSkillBar(pskills9));
	strcat(str_skill, str_last);
	format(str_last, sizeof(str_last), "{99FF66}Micro UZI\t\t%d%%\t"CWHITE"%s\n", pskills10, AtSkillBar(pskills10));
	strcat(str_skill, str_last);
	SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CBLUE"√ç√†√¢√ª√™√® √¢√´√†√§√•√≠√®√ø √Æ√∞√≥√¶√®√•√¨", str_skill, "Cerrar", "");
	return SCMF(playerid,COLOR_GREY,"√Ç√ª √Ø√∞√Æ√±√¨√†√≤√∞√®√¢√†√•√≤√• √≠√†√¢√ª√™√® √¢√´√†√§√•√≠√®√ø √Æ√∞√≥√¶√®√•√¨ √®√£√∞√Æ√™√† {cc9900}%s "CGREY"(√≠√Æ√¨√•√∞ √†√™√™√†√≥√≠√≤√† {00cc66}%d"CGREY")", nmeAcc, id_cc);
}
CMD:skill(playerid, params[]) {
	if(sscanf(params, "d", params[0])) 
		return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /skill [id √®√£√∞√Æ√™√†]");
	if(!IsPlayerConnected(params[0])) 
		return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(!ProxDetectorS(1.5, playerid, params[0])) 
		return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
	if(params[0] == playerid) {
		new str_skill[1650], str_last[144];
		format(str_last, sizeof(str_last), "{99FF66}√ë√®√´√†\t\t\t%d%%\t"CWHITE"%s\n", pData[playerid][p_strengh], AtSkillBar(pData[playerid][p_strengh]));
		strcat(str_skill, str_last);
		format(str_last, sizeof(str_last), "{99FF66}Colt 45\t\t\t%d%%\t"CWHITE"%s\n", pData[playerid][pSkill][0], AtSkillBar(pData[playerid][pSkill][0]));
		strcat(str_skill, str_last);
		format(str_last, sizeof(str_last), "{99FF66}SD Pistol\t\t%d%%\t"CWHITE"%s\n", pData[playerid][pSkill][1], AtSkillBar(pData[playerid][pSkill][1]));
		strcat(str_skill, str_last);
		format(str_last, sizeof(str_last), "{99FF66}Desert Eagle\t\t%d%%\t"CWHITE"%s\n", pData[playerid][pSkill][2], AtSkillBar(pData[playerid][pSkill][2]));
		strcat(str_skill, str_last);
		format(str_last, sizeof(str_last), "{99FF66}Shotgun\t\t%d%%\t"CWHITE"%s\n", pData[playerid][pSkill][3], AtSkillBar(pData[playerid][pSkill][3]));
		strcat(str_skill, str_last);
		format(str_last, sizeof(str_last), "{99FF66}MP5\t\t\t%d%%\t"CWHITE"%s\n", pData[playerid][pSkill][4], AtSkillBar(pData[playerid][pSkill][4]));
		strcat(str_skill, str_last);
		format(str_last, sizeof(str_last), "{99FF66}AK47\t\t\t%d%%\t"CWHITE"%s\n", pData[playerid][pSkill][5], AtSkillBar(pData[playerid][pSkill][5]));
		strcat(str_skill, str_last);
		format(str_last, sizeof(str_last), "{99FF66}M4\t\t\t%d%%\t"CWHITE"%s\n", pData[playerid][pSkill][6], AtSkillBar(pData[playerid][pSkill][6]));
		strcat(str_skill, str_last);
		format(str_last, sizeof(str_last), "{99FF66}Sniper Rifle\t\t%d%%\t"CWHITE"%s\n", pData[playerid][pSkill][7], AtSkillBar(pData[playerid][pSkill][7]));
		strcat(str_skill, str_last);
		format(str_last, sizeof(str_last), "{99FF66}Sawnoff\t\t%d%%\t"CWHITE"%s\n", pData[playerid][pSkill][8], AtSkillBar(pData[playerid][pSkill][8]));
		strcat(str_skill, str_last);
		format(str_last, sizeof(str_last), "{99FF66}Combat SG\t\t%d%%\t"CWHITE"%s\n", pData[playerid][pSkill][9], AtSkillBar(pData[playerid][pSkill][9]));
		strcat(str_skill, str_last);
		format(str_last, sizeof(str_last), "{99FF66}Micro UZI\t\t%d%%\t"CWHITE"%s\n", pData[playerid][pSkill][10], AtSkillBar(pData[playerid][pSkill][10]));
		strcat(str_skill, str_last);
		SPD(params[0], 0, DIALOG_STYLE_MSGBOX, ""CBLUE"√ç√†√¢√ª√™√® √¢√´√†√§√•√≠√®√ø √Æ√∞√≥√¶√®√•√¨", str_skill, "Cerrar", "");
		return MeAction(playerid, "√Ø√∞√Æ√±√¨√†√≤√∞√®√¢√†√•√≤ √±√¢√Æ√® √≠√†√¢√ª√™√® √¢√´√†√§√•√≠√®√ø √Æ√∞√≥√¶√®√•√¨");
	}
	if(GetPVarInt(playerid, "cancel_act")) return SCM(playerid, COLOR_GREY, "√Ç√ª √≥√¶√• √±√§√•√´√†√´√® √™√†√™√Æ√•-√≤√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √Ç√¢√•√§√®√≤√• "CBLUE"/revoke"CGREY", √∑√≤√Æ√°√ª √Æ√≤√Æ√ß√¢√†√≤√º √•√£√Æ");
	if(GetPVarInt(params[0], "offer") != 9999) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™√≥ √≥√¶√• √±√§√•√´√†√´√® √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √é√≠ √§√Æ√´√¶√•√≠ {00cc00}√Ø√∞√®√≠√ø√≤√º "CLIGHTGREY"√®√´√® "CERROR"√Æ√≤√¨√•√≠√®√≤√º "CLIGHTGREY"√•√£√Æ");
	SetPVarInt(playerid, "cancel_act", 1); SetPVarInt(playerid, "cancel_act_id", params[0]);
	SCMF(playerid, COLOR_BLUE, "√Ç√ª √Ø√∞√•√§√´√Æ√¶√®√´√® %s √Ø√Æ√±√¨√Æ√≤√∞√•√≤√º √Ç√†√∏√® √≠√†√¢√ª√™√® √¢√´√†√§√•√≠√®√ø √Æ√∞√≥√¶√®√•√¨", GetName(params[0]));
	SCMF(params[0], COLOR_BLUE, "%s √µ√Æ√∑√•√≤ √Ø√Æ√™√†√ß√†√≤√º √Ç√†√¨ √±√¢√Æ√® √≠√†√¢√ª√™√® √¢√´√†√§√•√≠√®√ø √Æ√∞√≥√¶√®√•√¨", pData[playerid][pName]);
	SetPVarInt(params[0], "offer", 1); SetPVarInt(params[0], "offer_SKILL", 1); SetPVarInt(params[0], "SKILL_targetid", playerid);
	return SCM(params[0], -1, "√ç√†√¶√¨√®√≤√• "CMAIN"Y "CWHITE"√∑√≤√Æ√°√ª √±√Æ√£√´√†√±√®√≤√º√±√ø √®√´√® "CERROR"N "CWHITE"√§√´√ø √Æ√≤√™√†√ß√†");
}
CMD:medhelp(playerid, params[]) {
	new healprice, Float: hpplayer;
	if(!IsAMedic(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√†√¨ √≠√•√§√Æ√±√≤√≥√Ø√≠√† S√≠√≠√≠√†√ø √¥√≥√≠√™√∂√®√ø");
	if(!IsPlayerInRangeOfPoint(playerid, 75.0, 1192.2051, -1313.2767, 1584.9719) && 
		!IsPlayerInRangeOfPoint(playerid, 75.0, 1508.6653,-1802.1176,2982.6953)) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√Æ√°√µ√Æ√§√®√¨√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √Ø√Æ√¨√•√π√•√≠√®√® √°√Æ√´√º√≠√®√∂√ª");
	if(GetPlayerVirtualWorld(playerid) != 1 && GetPlayerVirtualWorld(playerid) != 2 && GetPlayerVirtualWorld(playerid) != 3) 
		return SCM(playerid, COLOR_GREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √Ø√Æ√¨√•√π√•√≠√®√® √°√Æ√´√º√≠√®√∂√ª");
	if(sscanf(params, "dD()", params[0], params[1])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /medhelp [id √®√£√∞√Æ√™√†] [√∂√•√≠√† (√≠√•√Æ√°√ø√ß√†√≤√•√´√º√≠√Æ)] (√±√≤√†√≠S√≠√∞√≤√≠√†√ø √∂√•√≠√†-150$)");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(!IsPlayerInRangeOfPoint(params[0], 75.0, 1192.2051, -1313.2767, 1584.9719) && 
		!IsPlayerInRangeOfPoint(params[0], 75.0, 1508.6653,-1802.1176,2982.6953)) return SCM(playerid, COLOR_GREY, "√ù√≤√Æ√≤ √®√£√∞√Æ√™ √≠√• √≠√†√µ√Æ√§√®√≤√±√ø √¢ √Ω√≤√Æ√© √°√Æ√´√º√≠√®√∂√•");
	if(GetPlayerVirtualWorld(params[0]) != GetPlayerVirtualWorld(playerid)) return SCM(playerid, COLOR_GREY, "√ù√≤√Æ√≤ √®√£√∞√Æ√™ √≠√• √≠√†√µ√Æ√§√®√≤√±√ø √¢ √Ω√≤√Æ√© √°√Æ√´√º√≠√®√∂√•");
	if(!ProxDetectorS(2.5, playerid, params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
	GetPlayerHealth(params[0], hpplayer);
	if(hpplayer >= 95.0) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√Æ√≤ √®√£√∞√Æ√™ √≠√• √≠√≥√¶SNo√±√ø √¢ √´√•√∑√•√≠√®√®");
	if(!pTemp[params[0]][pInHospital]) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√Æ√≤ √®√£√∞√Æ√™ √≠√• √ß√†√≠√ø√´ √°√Æ√´√º√≠√®√∑√≠√≥√æ √™√Æ√©√™√≥");
	if(!strlen(params[1])) healprice = 150;
	else if(pData[playerid][pRank] < 3) return SCM(playerid, COLOR_GREY, "√à√ß√¨√•√≠√•√≠√®√• √∂√•√≠√ª √´√•√∑√•√≠√®√ø √∞√†√ß√∞√•√∏√•√≠√Æ √± 3 √∞√†√≠√£√†"), SCM(playerid, COLOR_GREY, "√Ñ√´√ø √´√•√∑√•√≠√®√ø √≥√™√†√¶√®√≤√• √≤√Æ√´√º√™√Æ ID √®√£√∞√Æ√™√†");
	else if(params[1] < 150 || params[1] > 500) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§√•√≠√† √≠√•√¢√•√∞√≠√†√ø √∂√•√≠√† √´√•√∑√•√≠√®√ø. √Ñ√Æ√±√≤√≥√Ø√≠√† √∂√•√≠√† √Æ√≤ 150$ √§√Æ 500$");
	else healprice = params[1];
	if(pData[params[0]][pCash] < healprice) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ø√†√∂√®√•√≠√≤√† √≠√• √µ√¢√†√≤√†√•√≤ √±√∞√•√§√±√≤√¢ √§√´√ø √Æ√Ø√´√†√≤√ª √´√•√∑√•√≠√®√ø");
	SCMF(playerid, COLOR_BLUE, "√Ç√ª √Ø√∞√•√§√´√Æ√¶√®√´√® %s √Ø√∞√Æ√©√≤√® √Ω√™√±√Ø√∞√•√±√±-√´√•√∑√•√≠√®√• √ß√† %d$", GetName(params[0]), healprice);
	SetPVarInt(params[0], "heal_price", healprice); SetPVarInt(params[0], "heal_vrach_id", playerid);
	format(string, 120, ""CWHITE"√ã√•√∑√†√π√®√© √¢√∞√†√∑ "CBLUE"%s "CWHITE"√Ø√∞√•√§√´√Æ√¶√®√´ √¢√†√¨ √Ø√∞√Æ√©√≤√® √´√•√∑√•√≠√®√• √ß√† "CBLUE"%d$\n"CWHITE"√Ç√ª √±√Æ√£√´√†√±√≠√ª?", pData[playerid][pName], healprice);
	return SPD(params[0], 1244, DIALOG_STYLE_MSGBOX, ""CPALEGREEN"√ù√™√±√Ø√∞√•√±√±-√´√•√∑√•√≠√®√•", string, "S√≠", "No");
}
CMD:heal(playerid, params[]) {
	new healprice, Float: hpplayer;
	if(!IsAMedic(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√†√¨ √≠√•√§√Æ√±√≤√≥√Ø√≠√† S√≠√≠√≠√†√ø √¥√≥√≠√™√∂√®√ø");
	if(pData[playerid][pRank] < 2) return SCM(playerid, COLOR_LIGHTGREY, "√ä√Æ√¨√†√≠S√≠ √§√Æ√±√≤√≥√Ø√≠√† √§√´√ø √±√Æ√≤√∞√≥√§√≠√®√™√Æ√¢ 2 √∞√†√≠√£√† √® √¢√ª√∏√•");
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 416) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √¨√†√∏√®√≠√• √±√™√Æ√∞√Æ√© √Ø√Æ√¨√Æ√π√®");
	if(sscanf(params, "dD()", params[0], params[1])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /heal [id √®√£√∞√Æ√™√†] [√∂√•√≠√† (√≠√•√Æ√°√ø√ß√†√≤√•√´√º√≠√Æ)] (√±√≤√†√≠S√≠√∞√≤√≠√†√ø √∂√•√≠√†-150$)");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(!ProxDetectorS(5.5, playerid, params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
	GetPlayerHealth(params[0], hpplayer);
	if(hpplayer >= 95.0) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√Æ√≤ √®√£√∞√Æ√™ √≠√• √≠√≥√¶SNo√±√ø √¢ √´√•√∑√•√≠√®√®");
	if(GetVehicleModel(GetPlayerVehicleID(params[0])) != 416) return SCM(playerid, COLOR_GREY, "√è√†√∂√®√•√≠√≤ √§√Æ√´√¶√•√≠ √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √¨√†√∏√®√≠√• √±√™√Æ√∞√Æ√© √Ø√Æ√¨√Æ√π√®");
	if(!strlen(params[1])) healprice = 150;
	else if(pData[playerid][pRank] < 3) return SCM(playerid, COLOR_GREY, "√à√ß√¨√•√≠√•√≠√®√• √∂√•√≠√ª √´√•√∑√•√≠√®√ø √∞√†√ß√∞√•√∏√•√≠√Æ √± 3 √∞√†√≠√£√†"), SCM(playerid, COLOR_GREY, "√Ñ√´√ø √´√•√∑√•√≠√®√ø √≥√™√†√¶√®√≤√• √≤√Æ√´√º√™√Æ ID √®√£√∞√Æ√™√†");
	else if(params[1] < 150 || params[1] > 500) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§√•√≠√† √≠√•√¢√•√∞√≠√†√ø √∂√•√≠√† √´√•√∑√•√≠√®√ø. √Ñ√Æ√±√≤√≥√Ø√≠√† √∂√•√≠√† √Æ√≤ 150$ √§√Æ 500$");
	else healprice = params[1];
	if(pData[params[0]][pCash] < healprice) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ø√†√∂√®√•√≠√≤√† √≠√• √µ√¢√†√≤√†√•√≤ √±√∞√•√§√±√≤√¢ √§√´√ø √Æ√Ø√´√†√≤√ª √´√•√∑√•√≠√®√ø");
	SCMF(playerid, COLOR_BLUE, "√Ç√ª √Ø√∞√•√§√´√Æ√¶√®√´√® %s √Ø√∞√Æ√©√≤√® √´√•√∑√•√≠√®√• √ß√† %d$", GetName(params[0]), healprice);
	SetPVarInt(params[0], "heal_price", healprice); SetPVarInt(params[0], "heal_vrach_id", playerid);
	format(string, 120, ""CWHITE"√ã√•√∑√†√π√®√© √¢√∞√†√∑ "CBLUE"%s "CWHITE"√Ø√∞√•√§√´√Æ√¶√®√´ √¢√†√¨ √Ø√∞√Æ√©√≤√® √´√•√∑√•√≠√®√• √ß√† "CBLUE"%d$\n"CWHITE"√Ç√ª √±√Æ√£√´√†√±√≠√ª?", pData[playerid][pName], healprice);
	return SPD(params[0], 1244, DIALOG_STYLE_MSGBOX, ""CPALEGREEN"√å√•√§. √´√•√∑√•√≠√®√•", string, "S√≠", "No");
}
CMD:hp(playerid, params[]) {
	if(pData[playerid][pAdmin] < 3) return 1;
	if(sscanf(params, "dd", params[0], params[1])) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /hp [id √®√£√∞√Æ√™√†] [√≥√∞√Æ√¢√•√≠√º √ß√§√Æ√∞√Æ√¢√º√ø]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(params[1] < 0 || params[1] > 160) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§¬∏√≠ √≠√•√§√Æ√Ø√≥√±√≤√®√¨√ª√© √≥√∞√Æ√¢√•√≠√º √ß√§√Æ√∞√Æ√¢√º√ø (0-160)");
	SetPlayerHealth(params[0], params[1]);
	if(pData[playerid][pSex] == 1) SCMF(params[0], -1, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √®√ß√¨√•√≠√®√´ √Ç√†√¨ √ß√§√Æ√∞√Æ√¢√º√•", pData[playerid][pName]);
	else SCMF(params[0], -1, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √®√ß√¨√•√≠√®√´√† √Ç√†√¨ √ß√§√Æ√∞√Æ√¢√º√•", pData[playerid][pName]);
	return SCMF(playerid, -1, "√Ç√ª √®√ß√¨√•√≠√®√´√® √ß√§√Æ√∞√Æ√¢√º√• √®√£√∞√Æ√™√≥ %s", GetName(params[0]));
}
CMD:arm(playerid, params[]) {
	if(pData[playerid][pAdmin] < 4) return 1;
	if(sscanf(params, "dd", params[0], params[1])) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /arm [id √®√£√∞√Æ√™√†] [√≥√∞√Æ√¢√•√≠√º √°√∞√Æ√≠√®]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(params[1] < 0 || params[1] > 100) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√¢√•√§¬∏√≠ √≠√•√§√Æ√Ø√≥√±√≤√®√¨√ª√© √≥√∞√Æ√¢√•√≠√º √°√∞√Æ√≠√® (0-100)");
	SetPlayerArmour(params[0], params[1]);
	if(pData[playerid][pSex] == 1) SCMF(params[0], COLOR_MAIN, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √®√ß√¨√•√≠√®√´ √Ç√†√∏ √≥√∞√Æ√¢√•√≠√º √°√∞√Æ√≠√®", pData[playerid][pName]);
	else SCMF(params[0], COLOR_MAIN, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s √®√ß√¨√•√≠√®√´√† √Ç√†√∏ √≥√∞√Æ√¢√•√≠√º √°√∞√Æ√≠√®", pData[playerid][pName]);
	return SCMF(playerid, COLOR_MAIN, "√Ç√ª √®√ß√¨√•√≠√®√´√® √≥√∞√Æ√¢√•√≠√º √°√∞√Æ√≠√® √®√£√∞√Æ√™√≥ %s", GetName(params[0]));
}
CMD:setgrav(playerid, params[]) {
	if(pData[playerid][pAdmin] < 7) return 1;
	new Float: grav_level;
	if(sscanf(params, "f", grav_level)) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /setgrav [√≥√∞√Æ√¢√•√≠√º √£√∞√†√¢√®√≤√†√∂√®√®] (√±√≤√†√≠S√≠√∞√≤ - 0.008)");
	if(grav_level < -50.0 || grav_level > 50.0) return SCM(playerid, COLOR_GREY, "√Ç√¢√•√§¬∏√≠ √≠√•√§√Æ√Ø√≥√±√≤√®√¨√ª√© √≥√∞√Æ√¢√•√≠√º √£√∞√†√¢√®√≤√†√∂√®√® "CYELLOW"(-50.0 ‚Äî 50.0)");
	if(grav_level == 0.008) SCM(playerid, COLOR_MAIN, "√ì√∞√Æ√¢√•√≠√º {aa80ff}√£√∞√†√¢√®√≤√†√∂√®√® "CMAIN"√®√ß√¨√•√≠¬∏√≠ √≠√† √±√≤√†√≠S√≠√∞√≤√≠√ª√©");
	else SCM(playerid, COLOR_MAIN, "√ì√∞√Æ√¢√•√≠√º {aa80ff}√£√∞√†√¢√®√≤√†√∂√®√® "CMAIN"√®√ß√¨√•√≠¬∏√≠. √ç√• √ß√†√°√≥√§√º√≤√• √¢√•√∞√≠√≥√≤√º √±√≤√†√≠S√≠√∞√≤√≠√≥√æ √£√∞√†√¢√®√≤√†√∂√®√æ "CORANGE"(0.008)");
	return SetGravity(grav_level);
}
CMD:setfuel(playerid, params[]) {
	if(pData[playerid][pAdmin] < 3) return 1;
	if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¢ √≤√∞√†√≠√±√Ø√Æ√∞√≤√•");
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /setfuel [√´√®√≤√∞√Æ√¢ √≤√Æ√Ø√´√®√¢√†] (√Æ√≤ 1 √§√Æ 50)");
	if(params[0] < 1 || params[0] > 50) return SCM(playerid, COLOR_LIGHTGREY, "√í√Æ√Ø√´√®√¢√Æ √Æ√≤ 1 √§√Æ 50 √´");
	VehInfo[GetPlayerVehicleID(playerid)][vFuel] = params[0];
	savefuel_cars(playerid, GetPlayerVehicleID(playerid));
	return SCM(playerid, COLOR_MAIN, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √ß√†√Ø√∞√†√¢√´√•√≠");
}
CMD:plveh(playerid, params[]) {
	if(pData[playerid][pAdmin] < 3) return 1;
	new to_player, id_veh, color_1, color_2;
	if(sscanf(params, "iiii", to_player, id_veh, color_1, color_2)) return SCM(playerid, COLOR_GREY, "Usar: /plveh [id √®√£√∞√Æ√™√†] [id √¨√Æ√§√•√´√®] [√∂√¢√•√≤ 1] [√∂√¢√•√≤ 2]");
	if(!IsPlayerConnected(to_player)) return SCM(playerid, COLOR_LIGHTGREY, "ID √®√£√∞√Æ√™√† √¢√¢√•√§¬∏√≠ √≠√•√¢√•√∞√≠√Æ");
	if(IsPlayerInAnyVehicle(to_player)) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √± √≤√†√™√®√¨ ID √≥√¶√• √≠√†√µ√Æ√§√®√≤√±√ø √¢ √™√†√™√Æ√¨-√´√®√°√Æ √≤√∞√†√≠√±√Ø√Æ√∞√≤√•");
	if(!(400 <= id_veh <= 611)) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√¢√•√∞√≠√ª√© id √≤√∞√†√≠√±√Ø√Æ√∞√≤√†. √Ñ√Æ√±√≤√≥√Ø√≠√ª√• √ß√≠√†√∑√•√≠√®√ø √Æ√≤ 400 √§√Æ 611");
    if(!(0 <= color_1 <= 255)) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√¢√•√∞√≠√ª√© √≠√Æ√¨√•√∞ √∂√¢√•√≤√†. √Ñ√Æ√±√≤√≥√Ø√≠√ª√• √ß√≠√†√∑√•√≠√®√ø √Æ√≤ 0 √§√Æ 255");
    if(!(0 <= color_2 <= 255)) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√¢√•√∞√≠√ª√© √≠√Æ√¨√•√∞ √∂√¢√•√≤√†. √Ñ√Æ√±√≤√≥√Ø√≠√ª√• √ß√≠√†√∑√•√≠√®√ø √Æ√≤ 0 √§√Æ 255");
	new Float: pos[3];
	GetPlayerPos(to_player, pos[0], pos[1], pos[2]);
	inadmcar[to_player] = Forveh_AddStaticVehicleEx(id_veh, pos[0], pos[1], pos[2], 0.0, color_1, color_2, CAR_SPAWN);
	AdminCar[inadmcar[to_player]] = true;
	if(GetPlayerInterior(to_player) != 0) LinkVehicleToInterior(inadmcar[to_player], GetPlayerInterior(to_player));
	if(GetPlayerVirtualWorld(to_player) != 0) SetVehicleVirtualWorld(inadmcar[to_player], GetPlayerVirtualWorld(to_player));
	PutPlayerInVehicle(to_player, inadmcar[to_player], 0);
	if(pData[playerid][pSex] == 1) format(string, 128, "[A] %s[%d] √¢√ªS√≠√´ √¢√∞√•√¨√•√≠√≠√ª√© √≤√∞√†√≠√±√Ø√Æ√∞√≤ √®√£√∞√Æ√™√≥ %s[%d] (ID: %d)", pData[playerid][pName], playerid, GetName(to_player), to_player, id_veh);
	else format(string, 128, "[A] %s[%d] √¢√ªS√≠√´√† √¢√∞√•√¨√•√≠√≠√ª√© √≤√∞√†√≠√±√Ø√Æ√∞√≤ √®√£√∞√Æ√™√≥ %s[%d] (ID: %d)", pData[playerid][pName], playerid, GetName(to_player), to_player, id_veh);
	if(GetPVarInt(playerid, "AdminMessages")) SCM(playerid, COLOR_GREY, string);
	return AdminMessage(COLOR_GREY, string);
}
CMD:veh(playerid, params[]) {
	if(pData[playerid][pAdmin] < 4) return 1;
	new id_veh, color_1, color_2;
	if(sscanf(params, "iii", id_veh, color_1, color_2)) return SCM(playerid, COLOR_GREY, "Usar: /veh [id √¨√Æ√§√•√´√®] [√∂√¢√•√≤ 1] [√∂√¢√•√≤ 2]");
	if(!(400 <= id_veh <= 611)) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√¢√•√∞√≠√ª√© id √≤√∞√†√≠√±√Ø√Æ√∞√≤√†. √Ñ√Æ√±√≤√≥√Ø√≠√ª√• √ß√≠√†√∑√•√≠√®√ø √Æ√≤ 400 √§√Æ 611");
    if(!(0 <= color_1 <= 255)) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√¢√•√∞√≠√ª√© √≠√Æ√¨√•√∞ √∂√¢√•√≤√†. √Ñ√Æ√±√≤√≥√Ø√≠√ª√• √ß√≠√†√∑√•√≠√®√ø √Æ√≤ 0 √§√Æ 255");
    if(!(0 <= color_2 <= 255)) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√¢√•√∞√≠√ª√© √≠√Æ√¨√•√∞ √∂√¢√•√≤√†. √Ñ√Æ√±√≤√≥√Ø√≠√ª√• √ß√≠√†√∑√•√≠√®√ø √Æ√≤ 0 √§√Æ 255");
    new Float: pos[3], veh_number;
	GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
	veh_number = Forveh_AddStaticVehicleEx(id_veh, pos[0] + 2, pos[1], pos[2], 0.0, color_1, color_2, CAR_SPAWN);
	AdminCar[veh_number] = true;
	if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(veh_number, GetPlayerInterior(playerid));
	if(GetPlayerVirtualWorld(playerid) != 0) SetVehicleVirtualWorld(veh_number, GetPlayerVirtualWorld(playerid));
	if(pData[playerid][pSex] == 1) format(string, 128, "[A] %s[%d] √±√Æ√ßS√≠√´ √†√§√¨√®√≠-√≤√∞√†√≠√±√Ø√Æ√∞√≤ (ID: %d)", pData[playerid][pName], playerid, id_veh);
	else format(string, 128, "[A] %s[%d] √±√Æ√ßS√≠√´√† √†√§√¨√®√≠-√≤√∞√†√≠√±√Ø√Æ√∞√≤ (ID: %d)", pData[playerid][pName], playerid, id_veh);
	if(GetPVarInt(playerid, "AdminMessages")) SCM(playerid, COLOR_GREY, string);
	return AdminMessage(COLOR_GREY, string);
}
CMD:leave(playerid) {
	if(pData[playerid][pMember] == 3 || pData[playerid][pMember] == 25) return SCM(playerid, COLOR_ERROR, "√é√∞√£√†√≠√®√ß√†√∂√®√æ, √¢ √™√Æ√≤√Æ√∞√Æ√© √Ç√ª √±√Æ√±√≤√Æ√®√≤√• √ß√†√Ø√∞√•√π√•√≠√Æ √Ø√Æ√™√®S√≠√≤√º");
	if(!pData[playerid][pMember]) {
		string[0] = EOS;
		if(pData[playerid][pJob] == 0) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√®√£√§√• √≠√• √∞√†√°√Æ√≤√†√•√≤√• √® √≠√• √±√Æ√±√≤√Æ√®√≤√• √¢ √Æ√∞√£√†√≠√®√ß√†√∂√®√ø√µ");
		if(pData[playerid][pAdmJob] != 0) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√• "CYELLOW"/tempwork 0 {cecece}√∑√≤√Æ√°√ª √≥√¢√Æ√´√®√≤√º√±√ø √± √¢√∞√•√¨√•√≠√≠√Æ√© √∞√†√°√Æ√≤√ª");
		format(string, 29, ""CPALEGREEN"%s", GetJobName(pData[playerid][pJob]));
		pData[playerid][pJob] = 0;
		UpdatePlayerData(playerid, "pJob", 0);
		return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, string, ""CWHITE"√Ç√ª √≥√¢√Æ√´√®√´√®√±√º √± √∞√†√°√Æ√≤√ª. Seleccione √§√∞√≥√£√≥√æ √¢√±√•√£S√≠ √¨√Æ√¶√≠√Æ √¢ √¨√Ω√∞√®√® √Ç√†√∏√•√£√Æ √£√Æ√∞√ÆS√≠.", "Cerrar", "");
	}
	if(!pData[playerid][p_premium]) return SCM(playerid, 0xE5B090FF, "√ä√Æ√¨√†√≠S√≠ √§√Æ√±√≤√≥√Ø√≠√Æ √≤√Æ√´√º√™√Æ √®√£√∞√Æ√™√†√¨ √± "CCYAN"√Ø√∞√•√¨√®√≥√¨-√±√≤√†√≤√≥√±√Æ√¨");
	if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, 0xE5B090FF, "√Ç√ª √≠√• √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √≤√∞√†√≠√±√Ø√Æ√∞√≤√•");
	if(pData[playerid][pAdmMember] != 0) return SCM(playerid, COLOR_ERROR, "√Ç√ª √¢√∞√•√¨√•√≠√≠√ª√© √´√®√§√•√∞. √Ç√¢√•√§√®√≤√• "CCYAN"/templeader "CERROR"√∑√≤√Æ√°√ª √±√≠√ø√≤√º √¢√∞√•√¨√•√≠√≠√Æ√• √´√®√§√•√∞√±√≤√¢√Æ");
	if(pData[playerid][pLeader]) return SCM(playerid, COLOR_ERROR, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Ø√Æ√™√®√≠√≥√≤√º √Æ√∞√£√†√≠√®√ß√†√∂√®√æ, √≤√†√™ √™√†√™ √ø√¢√´√ø√•√≤√•√±√º √•¬∏ √´√®√§√•√∞√Æ√¨");
	format(string, 234, ""CWHITE"√Ç√ª √±√Æ√±√≤√Æ√®√≤√• √¢ √Æ√∞√£√†√≠√®√ß√†√∂√®√® \"%s\".\n√Ö√±√´√® √Ç√ª √≥√¢√Æ√´√®√≤√•√±√º, √≤√Æ √Ø√Æ√≤√•√∞√ø√•√≤√• √¢√±√• √±√¢√Æ√® √§√Æ√±√≤√®√¶√•√≠√®√ø √¢ √≠√•√©, √≤√†√™√®√• √™√†√™ √∞√†√≠√£.\n√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √Ø√Æ√™√®√≠√≥√≤√º √Æ√∞√£√†√≠√®√ß√†√∂√®√æ?",
	GetMember[pData[playerid][pMember] - 1]);
	return SPD(playerid, 9191, DIALOG_STYLE_MSGBOX, ""CERROR"√è√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√•", string, "S√≠", "No");
}
CMD:lic(playerid, params[]) {
	if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /lic [id √®√£√∞√Æ√™√†]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
	if(params[0] == playerid) {
		SCMF(params[0], COLOR_YELLOW, "√ã√®√∂√•√≠√ß√®√® %s:",pData[playerid][pName]);
		SCMF(params[0], -1, "√Ç√Æ√§√®√≤√•√´√º√±√™√®√• √Ø√∞√†√¢√†: %s",(pData[playerid][pLicenses][0] ? (""CMAIN"√Ö√±√≤√º") : (""CORANGE"√é√≤√±√≥√≤√±√≤√¢√≥√æ√≤")));
		SCMF(params[0], -1, "√ã√®√∂√•√≠√ß√®√ø √Ø√®√´√Æ√≤√†: %s",(pData[playerid][pLicenses][1] ? (""CMAIN"√Ö√±√≤√º") : (""CORANGE"√é√≤√±√≥√≤√±√≤√¢√≥√•√≤")));
		SCMF(params[0], -1, "√ã√®√∂√•√≠√ß√®√ø √≠√† √¢√Æ√§√≠√ª√© √≤/√±: %s",(pData[playerid][pLicenses][2] ? (""CMAIN"√Ö√±√≤√º") : (""CORANGE"√é√≤√±√≥√≤√±√≤√¢√≥√•√≤")));
		SCMF(params[0], -1, "√ã√®√∂√•√≠√ß√®√ø √≠√† √Æ√∞√≥√¶√®√•: %s",(pData[playerid][pLicenses][3] ? (""CMAIN"√Ö√±√≤√º") : (""CORANGE"√é√≤√±√≥√≤√±√≤√¢√≥√•√≤")));
		format(string,75, "%s √Ø√∞√Æ√±√¨√†√≤√∞√®√¢√†√•√≤ √±√¢√Æ√® √´√®√∂√•√≠√ß√®√®",pData[playerid][pName]);
		return ProxDetector(30.0, playerid, string, COLOR_PURPLE);
	}
	if(GetPVarInt(playerid, "cancel_act")) return SCM(playerid, COLOR_GREY, "√Ç√ª √≥√¶√• √±√§√•√´√†√´√® √™√†√™√Æ√•-√≤√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √Ç√¢√•√§√®√≤√• "CBLUE"/revoke"CGREY", √∑√≤√Æ√°√ª √Æ√≤√Æ√ß√¢√†√≤√º √•√£√Æ");
	if(GetPVarInt(params[0], "offer") != 9999) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™√≥ √≥√¶√• √±√§√•√´√†√´√® √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √é√≠ √§√Æ√´√¶√•√≠ {00cc00}√Ø√∞√®√≠√ø√≤√º "CLIGHTGREY"√®√´√® "CERROR"√Æ√≤√¨√•√≠√®√≤√º "CLIGHTGREY"√•√£√Æ");
	SCMF(playerid, COLOR_BLUE, "√Ç√ª √Ø√∞√•√§√´√Æ√¶√®√´√® %s √Ø√Æ√±√¨√Æ√≤√∞√•√≤√º √Ç√†√∏√® √´√®√∂√•√≠√ß√®√®", GetName(params[0]));
	SetPVarInt(playerid, "cancel_act", 1); SetPVarInt(playerid, "cancel_act_id", params[0]);
	SCMF(params[0], COLOR_BLUE, "%s √µ√Æ√∑√•√≤ √Ø√Æ√™√†√ß√†√≤√º √¢√†√¨ √±√¢√Æ√® √´√®√∂√•√≠√ß√®√®", pData[playerid][pName]);
	SetPVarInt(params[0], "offer", 1); SetPVarInt(params[0], "offer_LIC", 1); SetPVarInt(params[0], "LIC_targetid", playerid);
	return SCM(params[0], -1, "√ç√†√¶√¨√®√≤√• "CMAIN"Y "CWHITE"√∑√≤√Æ√°√ª √±√Æ√£√´√†√±√®√≤√º√±√ø √®√´√® "CERROR"N "CWHITE"√§√´√ø √Æ√≤√™√†√ß√†");
}
CMD:divorce(playerid) {
	if(pData[playerid][pMarried] < 1) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¶√•√≠√†√≤√ª (√≠√• √ß√†√¨√≥√¶√•√¨)");
    new id_family = GetPlayerID(pData[playerid][pFamilyName]);
	if(!IsPlayerConnected(id_family)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√†√∏√•√£√Æ (√¢√†√∏√•√©) √±√≥√Ø√∞√≥√£√† (√±√≥√Ø√∞√≥√£√®) √¢ S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤ No √≠√† √±√•√∞√¢√•√∞√•");
	if(!ProxDetectorS(8.0, playerid, id_family)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√†√∏ (√¢√†√∏√†) √±√≥√Ø√∞√≥√£ (√±√≥√Ø√∞√≥√£√†) √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
	if(id_family == playerid) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	SCM(playerid, COLOR_LITEBLUE, "√Ç√ª √∞√†√±√≤√Æ√∞√£√´√® √±√¢√Æ√© √°√∞√†√™");
	strmid(pData[playerid][pFamilyName], ("None"), 0, strlen("None"), 255);
	strmid(pData[id_family][pFamilyName], ("None"), 0, strlen("None"), 255);
	UpdatePlayerDataEx(playerid, "pFamilyName", "None"); UpdatePlayerDataEx(id_family, "pFamilyName", "None");
	if(pData[playerid][pSex] == 1) SCMF(id_family, COLOR_ORANGE, "%s[%d] √∞√†√±√≤√Æ√∞√£√≠√≥√´ √°√∞√†√∑√≠√ª√© √§√Æ√£√Æ√¢√Æ√∞ √± √Ç√†√¨√®", pData[playerid][pName],playerid);
	else SCMF(id_family, COLOR_ORANGE, "%s[%d] √∞√†√±√≤√Æ√∞√£√≠√≥√´√† √°√∞√†√∑√≠√ª√© √§√Æ√£√Æ√¢√Æ√∞ √± √Ç√†√¨√®", pData[playerid][pName],playerid);
	SCMF(playerid, COLOR_BLUE, "√Ç√ª √∞√†√±√≤√Æ√∞√£√´√® √°√∞√†√™ √± %s[%d]", GetName(id_family), id_family);
	pData[id_family][pMarried] = 0;
	pData[playerid][pMarried] = 0;
	UpdatePlayerData(id_family, "pMarried", 0);
	return UpdatePlayerData(playerid, "pMarried", 0);
}
CMD:wedding(playerid, params[]) {
	if(pData[playerid][pMarried] > 0) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≥√¶√• √¶√•√≠√†√≤√ª/√ß√†√¨√≥√¶√•√¨");
    if(!IsPlayerInRangeOfPoint(playerid, 10.0, 2238.2517,-36.0515,606.8203)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √°√ª√≤√º √¢ √∂√•√∞√™√¢√®");
	if(pData[playerid][pCash] < 20000) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√†√¨ √≠√≥√¶√≠√Æ 20000$ √§√´√ø √Æ√∞√£√†√≠√®√ß√†√∂√®√® √±√¢√†√§√º√°√ª");
    if(params[0] == playerid) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √ß√†√™√´√æ√∑√®√≤√º √°√∞√†√∑√≠√ª√© √§√Æ√£√Æ√¢√Æ√∞ √± √±√Æ√°√Æ√©");
    if(GetPVarInt(playerid, "MarryWitness") == 999) return SCM(playerid, COLOR_LIGHTGREY, "√Ñ√´√ø √Æ√∞√£√†√≠√®√ß√†√∂√®√® √±√¢√†√§√º√°√ª √Ç√†√¨ √≠√≥√¶√•√≠ √±√¢√®√§√•√≤√•√´√º");
	if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /wedding [id √®√£√∞√Æ√™√†]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(pData[params[0]][pMarried] > 0) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √≥√¶√• √±√Æ√±√≤√Æ√®√≤ √¢ √°√∞√†√™√•");
	if(!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
    if(GetPVarInt(playerid, "cancel_act")) return SCM(playerid, COLOR_GREY, "√Ç√ª √≥√¶√• √±√§√•√´√†√´√® √™√†√™√Æ√•-√≤√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √Ç√¢√•√§√®√≤√• "CBLUE"/revoke"CGREY", √∑√≤√Æ√°√ª √Æ√≤√Æ√ß√¢√†√≤√º √•√£√Æ");
    if(GetPVarInt(params[0], "offer") != 9999) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™√≥ √≥√¶√• √±√§√•√´√†√´√® √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √é√≠ √§√Æ√´√¶√•√≠ {00cc00}√Ø√∞√®√≠√ø√≤√º "CLIGHTGREY"√®√´√® "CERROR"√Æ√≤√¨√•√≠√®√≤√º "CLIGHTGREY"√•√£√Æ");
	format(string,64, "√Ç√ª √Ø√∞√•√§√´√Æ√¶√®√´√® %s √ß√†√™√´√æ√∑√®√≤√º √°√∞√†√∑√≠√ª√© √§√Æ√£√Æ√¢√Æ√∞", GetName(params[0]));
	SCM(playerid, COLOR_BLUE, string);
	format(string,126, "%s √Ø√∞√•√§√´√†√£√†√•√≤ √¢√†√¨ √ß√†√™√´√æ√∑√®√≤√º √°√∞√†√∑√≠√ª√© √§√Æ√£√Æ√¢√Æ√∞", pData[playerid][pName]);
	SetPVarInt(params[0], "ProposeOffer", playerid);
	SCM(params[0], COLOR_BLUE, string);
    SetPVarInt(params[0], "offer", 1);
    return SCM(params[0], -1, "√ç√†√¶√¨√®√≤√• "CMAIN"Y "CWHITE"√∑√≤√Æ√°√ª √±√Æ√£√´√†√±√®√≤√º√±√ø √®√´√® "CERROR"N "CWHITE"√§√´√ø √Æ√≤√™√†√ß√†");
}
CMD:witness(playerid, params[]) {
	if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /witness [id √®√£√∞√Æ√™√†]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
	if(params[0] == playerid) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √±√•√°√• √Ø√∞√•√§√´√Æ√¶√®√≤√º √±√≤√†√≤√º √±√¢√®√§√•√≤√•√´√•√¨ √±√¢√†√§√º√°√ª");
    if(GetPVarInt(playerid, "cancel_act")) return SCM(playerid, COLOR_GREY, "√Ç√ª √≥√¶√• √±√§√•√´√†√´√® √™√†√™√Æ√•-√≤√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √Ç√¢√•√§√®√≤√• "CBLUE"/revoke"CGREY", √∑√≤√Æ√°√ª √Æ√≤√Æ√ß√¢√†√≤√º √•√£√Æ");
    if(GetPVarInt(params[0], "offer") != 9999) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™√≥ √≥√¶√• √±√§√•√´√†√´√® √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √é√≠ √§√Æ√´√¶√•√≠ {00cc00}√Ø√∞√®√≠√ø√≤√º "CLIGHTGREY"√®√´√® "CERROR"√Æ√≤√¨√•√≠√®√≤√º "CLIGHTGREY"√•√£√Æ");
	format(string,126, "√Ç√ª √Ø√∞√•√§√´√Æ√¶√®√´√® %s √°√ª√≤√º √±√¢√®√§√•√≤√•√´√•√¨ √≠√† √¢√†√∏√•√© √±√¢√†√§√º√°√•", GetName(params[0]));
	SCM(playerid, COLOR_BLUE, string);
	format(string,126, "%s √Ø√∞√•√§√´√†√£√†√•√≤ √¢√†√¨ √°√ª√≤√º √±√¢√®√§√•√≤√•√´√•√¨ √≠√† √•√£√Æ (√•¬∏) √±√¢√†√§√º√°√•", pData[playerid][pName]);
	SetPVarInt(params[0], "MarryWitnessOffer", playerid);
    SetPVarInt(playerid, "cancel_act", 1); SetPVarInt(playerid, "cancel_act_id", params[0]);
	SCM(params[0], COLOR_BLUE, string);
    SetPVarInt(params[0], "offer", 1);
    return SCM(params[0], -1, "√ç√†√¶√¨√®√≤√• "CMAIN"Y "CWHITE"√∑√≤√Æ√°√ª √±√Æ√£√´√†√±√®√≤√º√±√ø √®√´√® "CERROR"N "CWHITE"√§√´√ø √Æ√≤√™√†√ß√†");
}
stock take_cmd(playerid, id_taked) {
    SetPVarInt(playerid, "player_takecmd", id_taked);
    if(IsACop(playerid)) SPD(playerid, 7779, DIALOG_STYLE_LIST, ""CLITEBLUE"√à√ß√∫√ø√≤√º √∑√≤√Æ-√´√®√°√Æ", ""CWHITE"√Ç√Æ√§√®√≤√•√´√º√±√™√®√• √Ø√∞√†√¢√†\n√ã√®√∂√•√≠√ß√®√ø √Ø√®√´√Æ√≤√†\n√ã√®√∂√•√≠√ß√®√ø √≠√† √¢√Æ√¶√§√•√≠√®√• √¢√Æ√§√≠√Æ√£√Æ √≤√∞√†√≠√±√Ø√Æ√∞√≤√†\n√ã√®√∂√•√≠√ß√®√ø √≠√† √Æ√∞√≥√¶√®√•\n√è√†√≤√∞√Æ√≠√ª\n√ç√†√∞√™√Æ√≤√®√™√®\n√å√•√≤√†√´√´\n√é√∞√≥√¶√®√•", "√à√ß√∫√ø√≤√º", "Cerrar");
    else SPD(playerid, 7779, DIALOG_STYLE_LIST, ""CLITEBLUE"√à√ß√∫√ø√≤√º √´√®√∂√•√≠√ß√®√æ", ""CWHITE"√Ç√Æ√§√®√≤√•√´√º√±√™√®√• √Ø√∞√†√¢√†\n√ã√®√∂√•√≠√ß√®√ø √Ø√®√´√Æ√≤√†\n√ã√®√∂√•√≠√ß√®√ø √≠√† √¢√Æ√¶√§√•√≠√®√• √¢√Æ√§√≠√Æ√£√Æ √≤√∞√†√≠√±√Ø√Æ√∞√≤√†\n√ã√®√∂√•√≠√ß√®√ø √≠√† √Æ√∞√≥√¶√®√•", "√à√ß√∫√ø√≤√º", "Cerrar");
    return 1;
}
CMD:take(playerid, params[]) {
	if(!IsACop(playerid) && pData[playerid][pMember] != 11) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√†√¨ √≠√•√§√Æ√±√≤√≥√Ø√≠√† S√≠√≠√≠√†√ø √¥√≥√≠√™√∂√®√ø");
    if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /take [id √®√£√∞√Æ√™√†]");
    if(params[0] == playerid) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Ω√≤√≥ √™√Æ√¨√†√≠√§√≥ √≠√† √±√•√°√•");
    if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
    if(!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
    SetPVarInt(playerid, "player_takecmd", params[0]);
    if(IsACop(playerid)) SPD(playerid, 7779, DIALOG_STYLE_LIST, ""CLITEBLUE"√à√ß√∫√ø√≤√º √∑√≤√Æ-√´√®√°√Æ", ""CWHITE"√Ç√Æ√§√®√≤√•√´√º√±√™√®√• √Ø√∞√†√¢√†\n√ã√®√∂√•√≠√ß√®√ø √Ø√®√´√Æ√≤√†\n√ã√®√∂√•√≠√ß√®√ø √≠√† √¢√Æ√¶√§√•√≠√®√• √¢√Æ√§√≠√Æ√£√Æ √≤√∞√†√≠√±√Ø√Æ√∞√≤√†\n√ã√®√∂√•√≠√ß√®√ø √≠√† √Æ√∞√≥√¶√®√•\n√è√†√≤√∞√Æ√≠√ª\n√ç√†√∞√™√Æ√≤√®√™√®\n√å√•√≤√†√´√´\n√é√∞√≥√¶√®√•", "√à√ß√∫√ø√≤√º", "Cerrar");
    else SPD(playerid, 7779, DIALOG_STYLE_LIST, ""CLITEBLUE"√à√ß√∫√ø√≤√º √´√®√∂√•√≠√ß√®√æ", ""CWHITE"√Ç√Æ√§√®√≤√•√´√º√±√™√®√• √Ø√∞√†√¢√†\n√ã√®√∂√•√≠√ß√®√ø √Ø√®√´√Æ√≤√†\n√ã√®√∂√•√≠√ß√®√ø √≠√† √¢√Æ√¶√§√•√≠√®√• √¢√Æ√§√≠√Æ√£√Æ √≤√∞√†√≠√±√Ø√Æ√∞√≤√†\n√ã√®√∂√•√≠√ß√®√ø √≠√† √Æ√∞√≥√¶√®√•", "√à√ß√∫√ø√≤√º", "Cerrar");
    return 1;
}
CMD:setspawn(playerid) {
	new str_color_1[9] = ""CWHITE"", str_color_2[9] = ""CWHITE"", str_color_3[9] = ""CWHITE"", str_color_4[9] = ""CWHITE"", str_color_5[9] = ""CWHITE"", str_dl[210];
	switch(pData[playerid][pSpawn]) {
		case 0: str_color_1 = ""CPALEGREEN"";
		case 1: str_color_2 = ""CPALEGREEN"";
		case 2: str_color_3 = ""CPALEGREEN"";
		case 3: str_color_4 = ""CPALEGREEN"";
		case 4: str_color_5 = ""CPALEGREEN"";
	}
	format(str_dl, sizeof(str_dl), "%s[1] √ç√† √Ü√Ñ √¢√Æ√™√ß√†√´√• √®√´√® √†√¢√≤√Æ√±√≤√†√≠√∂√®√®\n%s[2] √Ç √±√Æ√°√±√≤√¢√•√≠√≠√Æ√¨ √§√Æ√¨√•\n%s[3] √ç√† √°√†√ß√• √Æ√∞√£√†√≠√®√ß√†√∂√®√®\n%s[4] √Ç √£√Æ√±√≤√®√≠√®√∑√≠√Æ√¨ √≠√Æ√¨√•√∞√•\n%s[5] √Ç √±√¢√Æ√•√© √®√´√® √†√∞√•√≠√§√Æ√¢√†√≠√≠√Æ√© √™√¢√†√∞√≤√®√∞√•", str_color_1, str_color_2, str_color_3, str_color_4, str_color_5);
	return SPD(playerid, 816, DIALOG_STYLE_LIST, "{FFCD00}√à√ß√¨√•√≠√•√≠√®√• √¨√•√±√≤√† √¢√Æ√ß√∞√Æ√¶√§√•√≠√®√ø", str_dl, "Seleccione", "Cerrar");
}
CMD:clear(playerid, params[]) {
	if(!IsACop(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √±√Æ√±√≤√Æ√®√≤√• √¢ √å√Ç√Ñ");
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /clear [id √®√£√∞√Æ√™√†]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(pData[params[0]][pWanted] == 0) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√Æ√≤ √®√£√∞√Æ√™ √≠√• √¢ √∞√Æ√ß√ª√±√™√•");
	SCMF(playerid, COLOR_BLUE, "√Ç√ª √±√≠√ø√´√® √∞√Æ√ß√ª√±√™ c %s", GetName(params[0]));
	SetPlayerWantedLevel(params[0], 0);
	pData[params[0]][pWanted] = 0; UpdatePlayerData(params[0], "pWanted", 0);
	SCMF(params[0], COLOR_BLUE, "%s √±√≠√ø√´ √± √Ç√†√± √∞√Æ√ß√ª√±√™", pData[playerid][pName]);
	new strsu[144];
	format(strsu, sizeof(strsu), "%s %s[%d] √±√≠√ø√´ √∞√Æ√ß√ª√±√™ √≥ %s[%d]", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], pData[playerid][pName], playerid, pData[params[0]][pName], params[0]);
	SFFM(1, 0xffcd00FF, strsu); SFFM(2, 0xffcd00FF, strsu); SFFM(21, 0xffcd00FF, strsu); SFFM(22, 0xffcd00FF, strsu);
	return SFFM(10, 0xffcd00FF, strsu);
}
CMD:set(playerid) {
	if(!GetPVarInt(playerid, "abonement")) return SCM(playerid, COLOR_GREY, "√ì √Ç√†√± No √†√°√Æ√≠√•√¨√•√≠√≤√† √≠√† √Ø√Æ√±√•√π√•√≠√®√• √±√Ø√Æ√∞√≤√ß√†√´√†");
	if(!GetPVarInt(playerid, "sport-inventory")) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√Æ√ß√º√¨√®√≤√• √±√Ø√Æ√∞√≤√®√¢√≠√ª√© √®√≠√¢√•√≠√≤√†√∞√º");
	if(GetPVarInt(playerid, "set_enabled")) {
		DeletePVar(playerid, "set_enabled");
		ClearAnimations(playerid);
		SCM(playerid, COLOR_ERROR, "√Ç√ª √Ø√∞√®√Æ√±√≤√†√≠√Æ√¢√®√´√® √≤√∞√•√≠√®√∞√Æ√¢√™√≥. Usar√≤√• "CCYAN"/reset "CERROR"√∑√≤√Æ√°√ª √Ø√Æ√´√Æ√¶√®√≤√º √®√≠√¢√•√≠√≤√†√∞√º");
	}
	else {
		SetPVarInt(playerid, "set_enabled", 1);
		ApplyAnimation(playerid, "FREEWEIGHTS", "GYM_FREE_DOWN", 4.1, 0, 1, 1, 1, 0, 1);
		SCM(playerid, COLOR_MAIN, "√Ç√ª √≠√†√∑√†√´√® √≤√∞√•√≠√®√∞√Æ√¢√™√≥. √ç√†√¶√¨√®√≤√• √® √≥√§√•√∞√¶√®√¢√†√©√≤√• √™√≠√Æ√Ø√™√≥ "CERROR"√Ç√¢√•√∞√µ "CMAIN"√§√´√ø √¢√ª√Ø√Æ√´√≠√•√≠√®√ø √≥√Ø√∞√†√¶√≠√•√≠√®√©");
	}
	return 1;
}
CMD:reset(playerid) {
	if(GetPVarInt(playerid, "sport-inventory")) {
		ClearAnimations(playerid);
		RemovePlayerAttachedObject(playerid, 2);
		RemovePlayerAttachedObject(playerid, 3);
		DeletePVar(playerid, "sport-inventory");
		if(GetPVarInt(playerid, "set_enabled")) 
			DeletePVar(playerid, "set_enabled");
		return SCM(playerid, COLOR_ERROR, "√Ç√ª √Ø√Æ√´√Æ√¶√®√´√® √±√Ø√Æ√∞√≤√®√¢√≠√ª√© √®√≠√¢√•√≠√≤√†√∞√º");
	}
	else if(GetPVarInt(playerid, "shield")) {
		if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
		DeletePVar(playerid, "shield");
		return SCM(playerid, COLOR_ERROR, "√ô√®√≤ √≥√°√∞√†√≠");
	}
	else return SCM(playerid, COLOR_LIGHTGREY,"√ù√≤√† √¥√≥√≠√™√∂√®√ø √≠√•√§√Æ√±√≤√≥√Ø√≠√† √¢ S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤");
}
CMD:search(playerid, params[]) {
    if(!IsACop(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √±√Æ√±√≤√Æ√®√≤√• √¢ √å√Ç√Ñ");
    new to_player;
    if(sscanf(params, "d", to_player)) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /search [id √®√£√∞√Æ√™√†]");
    if(playerid == to_player) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Ø√∞√Æ√®√ß√¢√•√±√≤√® √Æ√°√ª√±√™ √≥ √±√•√°√ø");
    if(!IsPlayerConnected(to_player)) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
    if(!ProxDetectorS(4.0, playerid, to_player)) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
    if(pData[to_player][pWanted] < 1) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√Æ√≤ √®√£√∞√Æ√™ √≠√• √¢ √∞√Æ√ß√ª√±√™√•");
	new str_s[85], str_d[400], str_t[45], bool: status, bool: weap_status, weap_id, weap_ammo, weap_name[18];
	if(pData[playerid][pSex] == 1) format(str_s, sizeof(str_s), "%s %s √Ø√∞√Æ√®√ß√¢¬∏√´ √Æ√°√ª√±√™ √≥ %s", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], GetName(playerid), GetName(to_player));
	else format(str_s, sizeof(str_s), "%s %s √Ø√∞√Æ√®√ß√¢√•√´√† √Æ√°√ª√±√™ √≥ %s", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], GetName(playerid), GetName(to_player));
	ProxDetector(20.0, playerid, str_s, COLOR_PURPLE);
	if(pData[to_player][pPatr] > 0) {
		format(str_d, sizeof(str_d), "%s"CWHITE"√ç√†√©√§√•√≠√≠√ª√• √¢√•√π√®:\n- %d √Ø√†√≤√∞.\n", str_d, pData[to_player][pPatr]);
		status = true;
	}
	if(pData[to_player][pDrugs] > 0) {
		if(!status) strcat(str_d, ""CWHITE"√ç√†√©√§√•√≠√≠√ª√• √¢√•√π√®:\n");
		format(str_d, sizeof(str_d), "%s"CWHITE"- %d √£ √≠√†√∞√™√Æ√≤√®√™√Æ√¢\n", str_d, pData[to_player][pDrugs]);
		status = true;
	}
	if(pData[to_player][pMetal] > 0) {
		if(!status) strcat(str_d, ""CWHITE"√ç√†√©√§√•√≠√≠√ª√• √¢√•√π√®:\n");
		format(str_d, sizeof(str_d), "%s"CWHITE"- %d √™√£ √¨√•√≤√†√´√´√†\n", str_d, pData[to_player][pMetal]);
		status = true;
	}
    for(new i = 0; i <= 12; i ++) {
        GetPlayerWeaponData(to_player, i, weap_id, weap_ammo);
        if(weap_id == 0 && weap_ammo == 0) continue;
        if(!status) strcat(str_d, ""CWHITE"√ç√†√©√§√•√≠√≠√Æ√• √Æ√∞√≥√¶√®√•:\n");
        else if(!weap_status) strcat(str_d, ""CWHITE"\n√ç√†√©√§√•√≠√≠√Æ√• √Æ√∞√≥√¶√®√•:\n");
        GetWeaponName(weap_id, weap_name, sizeof(weap_name));
        format(str_d, sizeof(str_d), "%s"CWHITE"- %s\n", str_d, weap_name);
        weap_status = true;
        status = true;
    }
	if(!status) str_d = ""CWHITE"√ì √®√£√∞√Æ√™√† No √ß√†√Ø√∞√•√π¬∏√≠√≠√ª√µ √Ø√∞√•√§√¨√•√≤√Æ√¢ √± √±√Æ√°√Æ√©";
	else SCMF(playerid, 0x888888FF, "Usar√≤√• {40bf40}/take %d {888888}√∑√≤√Æ√°√ª √ß√†√°√∞√†√≤√º √ß√†√Ø√∞√•√π¬∏√≠√≠√ª√• √Ø√∞√•√§√¨√•√≤√ª √≥ √®√£√∞√Æ√™√†", to_player);
	format(str_t, sizeof(str_t), "{FFCD00}√é√°√ª√±√™ %s", GetName(to_player));
	return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, str_t, str_d, "Cerrar", "");
}
CMD:arrest(playerid, params[]) {
	if(!IsACop(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √±√Æ√±√≤√Æ√®√≤√• √¢ √å√Ç√Ñ");
	if(!IsPlayerInRangeOfPoint(playerid,10.0,2339.5420,2440.9316,6.8161) && 
        !IsPlayerInRangeOfPoint(playerid, 10.0, -1588.3943,716.4130,-5.2422) && 
        !IsPlayerInRangeOfPoint(playerid, 10.0, 1565.7711,-1694.8505,5.8906)) 
        return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √Æ√™√Æ√´√Æ √¨√•√±√≤√† √Ø√•√∞√•S√≠√∑√® √Ø√∞√•√±√≤√≥√Ø√≠√®√™√Æ√¢");
	if(sscanf(params, "d",params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /arrest [√™√Æ√´-√¢√Æ √¨√®√≠√≥√≤]");
	if(params[0] < 10 || params[0] > 120) return SCM(playerid, COLOR_LIGHTGREY, "√ë√∞√Æ√™ √Æ√≤ 10 √§√Æ 120 √¨√®√≠√≥√≤");
	new suspect = GetClosestPlayer(playerid);
	if(!IsPlayerConnected(suspect)) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(!ProxDetectorS(4.0, playerid, suspect)) return SCM(playerid, COLOR_LIGHTGREY, "√ê√ø√§√Æ√¨ √± √Ç√†√¨√® √≠√®√™√Æ√£√Æ No");
	if(pData[suspect][pWanted] < 1) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √≠√• √¢ √∞√Æ√ß√ª√±√™√•");
	if(GetPVarInt(playerid, "hold_player") != -1) {
		hold[GetPVarInt(playerid, "hold_player")] = -1;
		SetPVarInt(playerid, "hold_player", -1);
	} new str_arr[35], susp_price = pData[suspect][pWanted] * 200;
	SCMF(playerid, COLOR_BLUE, "√Ç√ª √Ø√•√∞√•S√≠√´√® √Ø√∞√•√±√≤√≥√Ø√≠√®√™√† %s √¢ √≥√∑√†√±√≤√Æ√™ √≠√† {aa80ff}%d √¨√®√≠", pData[suspect][pName], params[0]);
	GivePayDayMoney(playerid, susp_price);
    SCM(suspect, COLOR_BLUE, "√Ç√ª √°√ª√´√® √Æ√≤√Ø√∞√†√¢√´√•√≠√ª √¢ √≤√æ√∞√º√¨√≥");
    SCM(suspect, COLOR_BLUE, "Usar√≤√• "CORANGE"/time "CBLUE"√∑√≤√Æ√°√ª √≥√ß√≠√†√≤√º √±√∞√Æ√™ √ß√†√™√´√æ√∑√•√≠√®√ø");
	format(str_arr, 35, "~g~+%d~n~~b~TO SALARY", susp_price);
	GameTextForPlayer(playerid, str_arr, 3000, 3);
	ResetPlayerWeapons(suspect);
	SetPlayerSpecialAction(suspect,SPECIAL_ACTION_NONE);
	TogglePlayerControllable(suspect, 1);
	DeletePVar(suspect, "PlayerCuffed");
	SetPlayerWantedLevel(suspect, 0);
	pData[suspect][pJailTime] = params[0] * 60;
	pData[suspect][pWanted] = 0;
	SpawnPlayer(suspect);
	start_animjail(suspect);
	mysql_format(mysql_Handle, string, 164, "UPDATE `accounts` SET `pJailTime` = %d, `pWanted` = '0' WHERE `id` = %d", pData[suspect][pJailTime], pData[suspect][pID]);
	return mysql_tquery(mysql_Handle, string);
}

CMD:wanted(playerid) {
	if(!IsACop(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √±√Æ√≤√∞√≥√§√≠√®√™ √å√Ç√Ñ √®√´√® √î√Å√ê");
	if(GetPVarInt(playerid, "Patrul")) {
		DeletePVar(playerid, "Patrul");
		patrul_id[playerid] = -1;
		KillTimer(GetPVarInt(playerid, "StartWanted"));
		DeletePVar(playerid, "StartWanted");
		DisablePlayerCheckpoint(playerid);
		return SCM(playerid, COLOR_ORANGE, "√ë√®√±√≤√•√¨√† √Ø√Æ√®√±√™√† √Ø√∞√•√±√≤√≥√Ø√≠√®√™√† √Æ√≤√™√´√æ√∑√•√≠√†");
	}
	tick_wanted{Items_Cops} = 0;
	Items_Cops = 0;
	new bool: NoPlayers = false, strwante[830];
	new Float: dist_pos[3];
	GetPlayerPos(playerid, dist_pos[0], dist_pos[1], dist_pos[2]);
	strcat(strwante, "√à√¨√ø\t√ì√∞. √∞√Æ√ß√ª√±√™√†\t√ê√†√±√±√≤√Æ√ø√≠√®√• √Æ√≤ √Ç√†√±\n");
	if(!IsPlayerConnected(playerid)) return 1;
	foreach(new i:Player) {
		if(Items_Cops >= 20) break;
		if(!pData[i][pLogin] || !pData[i][pWanted]) continue;
		if(pData[i][pAdmin] > 0) continue;
		wanted_f = true;
		if(GetPlayerVirtualWorld(i) != 0 || GetPlayerInterior(i) != 0) format(strwante, sizeof strwante, "%s%s (id %d)\t%d\t\t√ç√•√§√Æ√±√≤√≥√Ø√≠√Æ\n", strwante, GetName(i), i, pData[i][pWanted]);
		else format(strwante, sizeof strwante, "%s%s (id %d)\t%d\t%d √¨\n", strwante, GetName(i), i, pData[i][pWanted], floatround(GetPlayerDistanceFromPoint(i, dist_pos[0], dist_pos[1], dist_pos[2])));
		tick_wanted{Items_Cops} = i, Items_Cops ++;
		NoPlayers = true;
	}
	if(!NoPlayers) SCM(playerid, COLOR_LIGHTGREY, "√ë√Ø√®√±√Æ√™ √∞√†√ß√ª√±√™√®√¢√†√•√¨√ª√µ √Ø√≥√±√≤");
	else SPD(playerid, 4425, DIALOG_STYLE_TABLIST_HEADERS, ""CPALEGREEN"√ë√Ø√®√±√Æ√™ √∞√†√ß√ª√±√™√®√¢√†√•√¨√ª√µ", strwante, "√ç√†√©√≤√®", "Cerrar");
	return 1;
}
CMD:p(playerid) {
	new yes_vizov = 0;
	if(GetPVarInt(playerid, "takephone")) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√•√´√•√¥√Æ√≠√†");
	if(PhoneOnline{playerid}) return SCM(playerid, COLOR_GREY, "√Ç√†√∏ √≤√•√´√•√¥√Æ√≠ √Æ√≤√™√´√æ√∑¬∏√≠");
	if(pData[playerid][pPnumber] == -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√•√´√•√¥√Æ√≠√†. √ä√≥√Ø√®√≤√º √•√£√Æ √¨√Æ√¶√≠√Æ √¢ 24-7");
	if(GetPVarInt(playerid, "Tel") == 1 || PhoneCall[playerid]) 
		return SCM(playerid, COLOR_GREY, "√é√≤√¢√•√≤√®√≤√º √≠√† √ß√¢√Æ√≠√Æ√™ √¢ S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤ √≠√•√¢√Æ√ß√¨√Æ√¶√≠√Æ");
	if(GetPVarInt(playerid, "Mobile") != 999) 
		return SCM(playerid, COLOR_GREY, "√é√≤√¢√•√≤√®√≤√º √≠√† √ß√¢√Æ√≠√Æ√™ √¢ S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤ √≠√•√¢√Æ√ß√¨√Æ√¶√≠√Æ");
	foreach(new i:Player) {
		if(GetPVarInt(i, "Mobile") != playerid) continue;
		SetPVarInt(playerid, "Mobile", i);
		SCMF(i, COLOR_PURPLE, "%s √Æ√≤√¢√•√≤√®√´ √≠√† √Ç√†√∏ √ß√¢√Æ√≠√Æ√™", pData[playerid][pName]);
		if(!GetPVarInt(playerid, "PlayerCuffed")) SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
		SCMF(playerid, COLOR_PURPLE, "√Ç√ª √Æ√≤√¢√•√≤√®√´√® √≠√† √ß√¢√Æ√≠√Æ√™ √Æ√≤ %s", pData[i][pName]);
		yes_vizov = 1;
		format(string, 30, "-%d$~n~~w~CALL", smspricels);
		GameTextForPlayer(i, string, 2000, 1);
		Cell_Timer[i] = SetTimerEx("time_syn", 40000, 1, "d", i);
		pData[i][pCashNumber] -= smspricels;
		UpdatePlayerData(i, "pCashNumber", pData[i][pCashNumber]);
		break;
	}
	if(yes_vizov == 0) return SCM(playerid, COLOR_GREY, "No √¢√µ√Æ√§√ø√π√®√µ √¢√ª√ß√Æ√¢√Æ√¢");
	return 1;
}
CMD:h(playerid) {
	if(GetPVarInt(playerid, "takephone")) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√•√´√•√¥√Æ√≠√†");
	if(pData[playerid][pPnumber] == -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√•√´√•√¥√Æ√≠√†. √ä√≥√Ø√®√≤√º √•√£√Æ √¨√Æ√¶√≠√Æ √¢ 24-7");
	
	foreach(new i:Player) { // √•√±√´√® √¢√ª√ß√Æ√¢ √•√π¬∏ √Ø√∞√Æ√µ√Æ√§√®√≤ (√™√Æ√¨√†√≠S√≠ /p √≠√• √¢√¢√Æ√§√®√´√†√±√º)
		if(GetPVarInt(i, "Mobile") != playerid) continue;
		SetPVarInt(i, "Mobile", 999);
		SCM(i, 0xFF9945FF, "√á√¢√Æ√≠√Æ√™ √Æ√≤√™√´√Æ√≠¬∏√≠");
		return SCM(playerid, 0xFF9945FF, "√á√¢√Æ√≠√Æ√™ √Æ√≤√™√´√Æ√≠¬∏√≠");
	}

	new caller = GetPVarInt(playerid, "Mobile");
	if(GetPVarInt(playerid, "Tel") == 1 || PhoneCall[playerid]) { // √•√±√´√® √ß√¢√Æ√≠√Æ√™ √± √†√°√Æ√≠√•√≠√≤√Æ√¨ √Ø√∞√Æ√µ√Æ√§√®√≤
		RemovePlayerAttachedObject(playerid, 0);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
		PhoneCall[playerid] = false;
		KillTimer(Cell_Timer[playerid]);
		SetPVarInt(playerid, "Tel", 999);
		SetPVarInt(playerid, "TalkingLivels", 999);
		SCM(playerid, 0xFF9945FF, "√á√¢√Æ√≠√Æ√™ √Æ√™√Æ√≠√∑√•√≠");
	}
	else if(caller != 999) { // √•√±√´√® √ß√¢√Æ√≠√Æ√™ √±√Æ √±√≤√≥√§√®√•√© √Ø√∞√Æ√µ√Æ√§√®√≤
		if(IsPlayerConnected(caller)) {
			RemovePlayerAttachedObject(caller, 0);
			SetPlayerSpecialAction(caller, SPECIAL_ACTION_STOPUSECELLPHONE);
			CellTime{caller} = false;
			KillTimer(Cell_Timer[caller]);
			SetPVarInt(caller, "Mobile", 999);
			SCM(caller, 0xFF9945FF, "√á√¢√Æ√≠√Æ√™ √Æ√™√Æ√≠√∑√•√≠");
		}
		RemovePlayerAttachedObject(playerid, 0);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
		CellTime{playerid} = false;
		KillTimer(Cell_Timer[playerid]);
		SetPVarInt(playerid, "Mobile", 999);
		SCM(playerid, 0xFF9945FF, "√á√¢√Æ√≠√Æ√™ √Æ√™√Æ√≠√∑√•√≠");
	}
	else SCM(playerid, COLOR_GREY, "No √†√™√≤√®√¢√≠√ª√µ √¢√ª√ß√Æ√¢√Æ√¢");
	return 1;
}

CMD:sp(playerid, params[]) {
	if(pData[playerid][pAdmin] < 1) return 1;
	if(bloody_en[playerid]) return SCM(playerid, COLOR_LIGHTGREY, "√á√†√¢√•√∞√∏√® √¢√±√• √≠√†√∑√†√≤√ª√• √∞√†√°√Æ√≤√ª √® √§√•√©√±√≤√¢√®√ø");
	if(pData[playerid][pLowSkill] == 1 || pData[playerid][pHighSkill] == 1) return SCM(playerid, COLOR_LIGHTGREY, "√á√†√¢√•√∞√∏√® √¢√±√• √≠√†√∑√†√≤√ª√• √∞√†√°√Æ√≤√ª √® √§√•√©√±√≤√¢√®√ø");
	if(GetPVarInt(playerid, "loader_job") == 1) return SCM(playerid, COLOR_LIGHTGREY, "√á√†√¢√•√∞√∏√® √¢√±√• √≠√†√∑√†√≤√ª√• √∞√†√°√Æ√≤√ª √® √§√•√©√±√≤√¢√®√ø");
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /sp [id √®√£√∞√Æ√™√†]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No √®√´√® √Æ√≠ √≠√• √†√¢√≤√Æ√∞√®√ß√Æ√¢√†√≠");
	if(params[0] == playerid) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Ω√≤√≥ √¥√≥√≠√™√∂√®√æ √≠√† √±√•√°√•");
	if(!pData[params[0]][pLogin]) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No √®√´√® √Æ√≠ √≠√• √†√¢√≤√Æ√∞√®√ß√Æ√¢√†√≠");

	if(!pTemp[playerid][pSpectate]) {
		GetPlayerPos(playerid, gPlayerPosition[playerid][0],gPlayerPosition[playerid][1],gPlayerPosition[playerid][2]);
		GetPlayerFacingAngle(playerid, gPlayerPosition[playerid][3]);
		gplayer_info[playerid][0] = GetPlayerInterior(playerid);
		gplayer_info[playerid][1] = GetPlayerVirtualWorld(playerid);
	}
	TogglePlayerSpectating(playerid, true);
	SetPlayerInterior(playerid,GetPlayerInterior(params[0]));
	SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(params[0]));
	if(IsPlayerInAnyVehicle(params[0])) PlayerSpectateVehicle(playerid, GetPlayerVehicleID(params[0]));
	else PlayerSpectatePlayer(playerid, params[0]);
	pTemp[playerid][pSpectate] = true;
	pTemp[playerid][pSpectateID] = params[0];
	if(pData[playerid][pAdmin] >= 4 && GetPVarInt(playerid, "see_status")) SCMF(playerid, 0xFF5C33FF, "[SP] %s[%i]  |  PING %d  |  IP %s", GetName(params[0]),params[0],GetPlayerPing(params[0]),pData[params[0]][pIP]);
	else if(GetPVarInt(playerid, "see_status")) SCMF(playerid, 0xFF5C33FF, "[SP] %s[%i]  |  PING %d", GetName(params[0]),params[0],GetPlayerPing(params[0]));
	return ShowMenuForPlayer(sp_menu, playerid);
}
CMD:business(playerid) {
	new biz = pData[playerid][pBusiness];
	if(pData[playerid][autoHave] != 0) {
		if(!IsPlayerInRangeOfPoint(playerid, 8.0, 2146.1821,-2291.7102,14.7500)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √°√®√ß√≠√•√±√†");
		return SPD(playerid, 654, DIALOG_STYLE_LIST, ""CMAIN"√ì√Ø√∞√†√¢√´√•√≠√®√• √°√®√ß√≠√•√±√Æ√¨", "[1] √ë√Æ√±√≤√Æ√ø√≠√®√• √Æ√Ø√´√†√≤√ª\n[2] √è√∞√ÆS√≠√≤√º √°√®√ß√≠√•√± √£√Æ√±√≥S√≠√∞√±√≤√¢√≥\n[3] √è√∞√ÆS√≠√≤√º √°√®√ß√≠√•√± √®√£√∞√Æ√™√≥\n[4] √ä√†√±√±√† √°√®√ß√≠√•√±√†", "Seleccione", "Cerrar");
	}
	if(pData[playerid][unikauto_Have] != 0 || pData[playerid][prok_have] != 0 || pData[playerid][kiosk_have] != 0) {
		SCM(playerid, COLOR_LIGHTGREY, "√Ç√†√¨ √≠√•√§√Æ√±√≤√≥√Ø√≠√† √Ω√≤√† √™√Æ√¨√†√≠S√≠");
		return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√• √¨√•√≠√æ √¢√Æ√ß√´√• √±√¢√Æ√•√£√Æ √°√®√ß√≠√•√±√† √§√´√ø √≥√Ø√∞√†√¢√´√•√≠√®√ø");
	}
	if(pData[playerid][food_have] != 0) {
		if(pData[playerid][food_have] == 1) {
			if(!IsPlayerInRangeOfPoint(playerid, 8.0, 1146.06201, -1755.98499, 15.11)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √´√†√∞√º√™√†");
			return SPD(playerid, 4110, DIALOG_STYLE_LIST, ""CMAIN"√ì√Ø√∞√†√¢√´√•√≠√®√• √´√†√∞√º√™√Æ√¨", "[1] √ë√Æ√±√≤√Æ√ø√≠√®√• √Æ√Ø√´√†√≤√ª\n[2] √ä√†√±√±√† √°√®√ß√≠√•√±√†\n[3] √è√∞√ÆS√≠√≤√º √´√†√∞√•√™ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥\n[4] √è√∞√ÆS√≠√≤√º √´√†√∞√•√™ √§√∞√≥√£√Æ√¨√≥ √®√£√∞√Æ√™√≥", "Seleccione", "Cerrar");
		}
		if(pData[playerid][food_have] == 2) {
			if(!IsPlayerInRangeOfPoint(playerid, 8.0, 1771.739990, -1903.270020, 14.21)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢√Æ√ß√´√• √´√†√∞√º√™√†");
			return SPD(playerid, 4116, DIALOG_STYLE_LIST, ""CMAIN"√ì√Ø√∞√†√¢√´√•√≠√®√• √´√†√∞√º√™√Æ√¨", "[1] √ë√Æ√±√≤√Æ√ø√≠√®√• √Æ√Ø√´√†√≤√ª\n[2] √ä√†√±√±√† √°√®√ß√≠√•√±√†\n[3] √è√∞√ÆS√≠√≤√º √´√†√∞√•√™ √£√Æ√±√≥S√≠√∞√±√≤√¢√≥\n[4] √è√∞√ÆS√≠√≤√º √´√†√∞√•√™ √§√∞√≥√£√Æ√¨√≥ √®√£√∞√Æ√™√≥", "Seleccione", "Cerrar");
		}
	}
	if(biz == -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √°√®√ß√≠√•√±√†");
	new type_biz = BizInfo[biz][bTypeBiz];
	if(type_biz == 12 || 
		type_biz == 28 || 
		type_biz == 30 || 
		type_biz == 23 || 
		type_biz == 39 || 
		type_biz == 40 || 
		type_biz == 33 ||
		type_biz == 44 || 
		type_biz == 49 ||
		type_biz == 59) return SPD(playerid, 4847, DIALOG_STYLE_LIST, "{FFCD00}√è√†√∞√†√¨√•√≤√∞√ª √°√®√ß√≠√•√±√†", "[1] "CBLUE"√à√≠√¥√Æ√∞√¨√†√∂√®√ø "CWHITE"√Æ √°√®√ß√≠√•√±√•\n[2] {669900}√é√≤√™√∞√ª√≤√º "CWHITE"√®√´√® "CERROR"Cerrar "CWHITE"√°√®√ß√≠√•√±\n[3] √è√∞√ÆS√≠√≤√º √°√®√ß√≠√•√± √£√Æ√±√≥S√≠√∞√±√≤√¢√≥\n[4] √è√∞√ÆS√≠√≤√º √°√®√ß√≠√•√± √§√∞√≥√£√Æ√¨√≥ √®√£√∞√Æ√™√≥\n[5] √à√ß√¨√•√≠√•√≠√®√• √∂√•√≠\n[6] √é√≤√¨√•√≤√®√≤√º √≠√† GPS √¢√µ√Æ√§ √¢ √°√®√ß√≠√•√±\n[7] √è√Æ√´√Æ√¶√®√≤√º √§√•√≠√º√£√® √≠√† √±√∑¬∏√≤ √°√®√ß√≠√•√±√†\n[8] √ë√≠√ø√≤√º √§√•√≠√º√£√® √±√Æ √±√∑¬∏√≤√† √°√®√ß√≠√•√±√†", "Seleccione", "Cerrar");
	if(type_biz == 31) return SPD(playerid, 4953, DIALOG_STYLE_LIST, "{FFCD00}√è√†√∞√†√¨√•√≤√∞√ª √°√®√ß√≠√•√±√†", "[1] "CBLUE"√à√≠√¥√Æ√∞√¨√†√∂√®√ø "CWHITE"√Æ √°√®√ß√≠√•√±√•\n[2] √è√∞√ÆS√≠√≤√º √°√®√ß√≠√•√± √£√Æ√±√≥S√≠√∞√±√≤√¢√≥\n[3] √è√∞√ÆS√≠√≤√º √°√®√ß√≠√•√± √§√∞√≥√£√Æ√¨√≥ √®√£√∞√Æ√™√≥\n[4] √à√ß√¨√•√≠√•√≠√®√• √∂√•√≠\n[5] √é√≤√¨√•√≤√®√≤√º √≠√† GPS √¢√µ√Æ√§ √¢ √°√®√ß√≠√•√±\n[6] √è√Æ√´√Æ√¶√®√≤√º √§√•√≠√º√£√® √≠√† √±√∑¬∏√≤ √°√®√ß√≠√•√±√†\n[7] √ë√≠√ø√≤√º √§√•√≠√º√£√® √±√Æ √±√∑¬∏√≤√† √°√®√ß√≠√•√±√†", "Seleccione", "Cerrar");
	return SPD(playerid, 9924, DIALOG_STYLE_LIST, "{FFCD00}√è√†√∞√†√¨√•√≤√∞√ª √°√®√ß√≠√•√±√†", "[1] "CBLUE"√à√≠√¥√Æ√∞√¨√†√∂√®√ø "CWHITE"√Æ √°√®√ß√≠√•√±√•\n[2] {669900}√é√≤√™√∞√ª√≤√º "CWHITE"√®√´√® "CERROR"Cerrar "CWHITE"√°√®√ß√≠√•√±\n[3] √è√∞√ÆS√≠√≤√º √°√®√ß√≠√•√± √£√Æ√±√≥S√≠√∞√±√≤√¢√≥\n[4] √è√∞√ÆS√≠√≤√º √°√®√ß√≠√•√± √§√∞√≥√£√Æ√¨√≥ √®√£√∞√Æ√™√≥\n[5] √à√ß√¨√•√≠√•√≠√®√• √∂√•√≠\n[6] √á√†√™√†√ß√†√≤√º √Ø√∞√Æ√§√≥√™√≤√ª\n[7] √é√≤√¨√•√≠√®√≤√º √ß√†√™√†√ß\n[8] √é√≤√¨√•√≤√®√≤√º √≠√† GPS √¢√µ√Æ√§ √¢ √°√®√ß√≠√•√±\n[9] √è√Æ√´√Æ√¶√®√≤√º √§√•√≠√º√£√® √≠√† √±√∑¬∏√≤ √°√®√ß√≠√•√±√†\n[10] √ë√≠√ø√≤√º √§√•√≠√º√£√® √±√Æ √±√∑¬∏√≤√† √°√®√ß√≠√•√±√†", "Seleccione", "Cerrar");
}
CMD:tempwork(playerid, params[]) {
	if(pData[playerid][pAdmin] < 3) return 1;
	if(pData[playerid][pAdmJob] == 0 && pData[playerid][pJob] != 0) return SCM(playerid, COLOR_LIGHTGREY, "√ó√≤√Æ√°√ª √≥√±√≤√∞√Æ√®√≤√º√±√ø √≠√† √¢√∞√•√¨√•√≠√≠√≥√æ √∞√†√°√Æ√≤√≥ √≥√¢√Æ√´√º√≤√•√±√º √± √Æ√°√ª√∑√≠√Æ√©");
	if(pData[playerid][pAdmMember] == 0 && pData[playerid][pMember] != 0) return SCM(playerid, COLOR_LIGHTGREY, "√ó√≤√Æ√°√ª √≥√±√≤√∞√Æ√®√≤√º√±√ø √≠√† √¢√∞√•√¨√•√≠√≠√≥√æ √∞√†√°√Æ√≤√≥ √≥√¢√Æ√´√º√≤√•√±√º √®√ß √Æ√∞√£√†√≠√®√ß√†√∂√®√®");
	if(pData[playerid][pAdmMember] != 0) return SCM(playerid, COLOR_LIGHTGREY, "√ë√≠√®√¨√®√≤√• √¢√∞√•√¨√•√≠√≠√Æ√• √´√®√§√•√∞√±√≤√¢√Æ "CPALEGREEN"(/templeader)");
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /tempwork [id √∞√†√°√Æ√≤√ª √®√´√® 0]");
	if(params[0] > 4 || params[0] < 0) return SCM(playerid, COLOR_LIGHTGREY, "√Ñ√Æ√±√≤√≥√Ø√≠√ª id √∞√†√°√Æ√≤ √Æ√≤ 1 √§√Æ 4");
	if(params[0] < 1) {
		if(!pData[playerid][pAdmJob]) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √≥√±√≤√∞√†√®√¢√†√´√®√±√º √≠√† √¢√∞√•√¨√•√≠√≠√≥√æ √∞√†√°√Æ√≤√≥");
		SCM(playerid, COLOR_MAIN, "√Ç√ª √≥√¢√Æ√´√®√´√®√±√º √± √¢√∞√•√¨√•√≠√≠√Æ√© √∞√†√°√Æ√≤√ª");
		pData[playerid][pAdmJob] = 0;
		UpdatePlayerData(playerid, "pAdmJob", 0);
		pData[playerid][pJob] = 0;
	}
	else {
		switch(params[0]) {
			case 1: {
				pData[playerid][pJob] = 5;
				format(string, 90, "[A] %s[%d] √Ø√Æ√∏¬∏√´ √≠√† √¢√∞√•√¨√•√≠√≠√≥√æ √∞√†√°√Æ√≤√≥ \"√Ç√Æ√§√®√≤√•√´√º √†√¢√≤√Æ√°√≥√±√†\"", GetName(playerid), playerid);
			}
			case 2: {
				pData[playerid][pJob] = 6;
				format(string, 90, "[A] %s[%d] √Ø√Æ√∏¬∏√´ √≠√† √¢√∞√•√¨√•√≠√≠√≥√æ √∞√†√°√Æ√≤√≥ \"√í√†√™√±√®√±√≤\"", GetName(playerid), playerid);
			}
			case 3: {
				pData[playerid][pJob] = 1;
				format(string, 90, "[A] %s[%d] √Ø√Æ√∏¬∏√´ √≠√† √¢√∞√•√¨√•√≠√≠√≥√æ √∞√†√°√Æ√≤√≥ \"√å√•√µ√†√≠√®√™\"", GetName(playerid), playerid);
			}
			case 4: {
				pData[playerid][pJob] = 2;
				format(string, 90, "[A] %s[%d] √Ø√Æ√∏¬∏√´ √≠√† √¢√∞√•√¨√•√≠√≠√≥√æ √∞√†√°√Æ√≤√≥ \"√ê√†√ß√¢√Æ√ß√∑√®√™ √Ø√∞√Æ√§√≥√™√≤√Æ√¢\"", GetName(playerid), playerid);
			}
		}
		AdminMessage(COLOR_GREY, string);
		pData[playerid][pAdmJob] = pData[playerid][pJob];
		UpdatePlayerData(playerid, "pAdmJob", pData[playerid][pAdmJob]);
		if(GetPVarInt(playerid, "AdminMessages")) SCM(playerid, COLOR_GREY, string);
	}
	return 1;
}
CMD:setprod(playerid, params[]) {
	if(IsAFull(playerid)) {
		new biz_id, count;
		if(sscanf(params, "ii", biz_id, count)) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /setprod [La cantidad de dinero] [√™√Æ√´-√¢√Æ √Ø√∞√Æ√§√≥√™√≤√Æ√¢]");
		if(biz_id == 0 || biz_id > BIZES) return SCM(playerid, COLOR_LIGHTGREY, "Introducido inadmisible La cantidad de dinero");
		BizInfo[biz_id][bProd] = count;
		UpdateBusinessData(biz_id, "bProd", count);
		SCMF(playerid, -1,"N√∫mero de productos para id %d cambiado a %d", biz_id, count);
	}
	return 1;
}
CMD:templeader(playerid) {
	if(pData[playerid][pAdmin] < 5) return 1;
	if(pData[playerid][pAdmJob] == 0 && pData[playerid][pJob] != 0) return SCM(playerid, COLOR_LIGHTGREY, "√ó√≤√Æ√°√ª √≠√†√ß√≠√†√∑√®√≤√º √±√•√°√ø √¢√∞√•√¨. √´√®√§√•√∞√Æ√¨ √≥√¢√Æ√´√º√≤√•√±√º √± √∞√†√°√Æ√≤√ª");
	if(pData[playerid][pAdmMember] == 0 && pData[playerid][pMember] != 0) return SCM(playerid, COLOR_LIGHTGREY, "√ó√≤√Æ√°√ª √≠√†√ß√≠√†√∑√®√≤√º √±√•√°√ø √¢√∞√•√¨. √´√®√§√•√∞√Æ√¨ √≥√¢√Æ√´√º√≤√•√±√º √®√ß √Æ√∞√£√†√≠√®√ß√†√∂√®√®");
	if(pData[playerid][pAdmJob] != 0) return SCM(playerid, COLOR_LIGHTGREY, "√ì√¢√Æ√´√º√≤√•√±√º √± √¢√∞√•√¨√•√≠√≠√Æ√© √∞√†√°√Æ√≤√ª "CPALEGREEN"(/tempwork 0)");
	if(pData[playerid][pAdmMember] != 0) {
		pData[playerid][pMember] = 0;
		pData[playerid][pLeader] = 0;
		pData[playerid][pRank] = 0;
		pData[playerid][pJob] = 0;
		pData[playerid][pModel] = pData[playerid][pChar];
		UpdatePlayerData(playerid, "pModel", pData[playerid][pModel]);
		pData[playerid][pAdmMember] = 0;
		UpdatePlayerData(playerid, "pAdmMember", 0);
		SetPlayerColor(playerid, FractionInfo[pData[playerid][pMember]][fColor]);
		return SCM(playerid, COLOR_MAIN, "Agua limpia temporalmente");
	}
	return SPD(playerid, 451, DIALOG_STYLE_LIST, "Agua temporal",
		"{ccff00}Tyr Kos-Anthosa\n\
		{ccff00}Kyryo Pan-Hiero\n\
		{ccff00}Tyr Vas-Venturasa\n\
		{ccff00}Administraci√≥n residente\n \n\
		\
		{0000ff}√ì√Ø√∞. Por el favor de Ros-Anthos\n\
		{0000ff}√ì√Ø√∞. por orden de Pan-Riero\n\
		{0000ff}√ì√Ø√∞. Por el favor de Vas-Venturas\n\
		{0000ff}√î√Å√ê\n \n\
		\
		{ff6666}Columna de Ros-Anthos\n\
		{ff6666}Colinitza Pan-Riero\n\
		{ff6666}Columbia Vas-Venturasa\n \n\
		\
		{996633}Noticias de oficina\n\
		{996633}Fuerza a√©rea militar\n\
		{996633}Armada\n \n\
		\
		{FFCC66}El instalador\n\
		{ff6600}Instalaciones de informaci√≥n masiva\n\
		{009900}Grove Street\n\
		{cc00ff}The Ballas\n\
		{00CCFF}Varrios Los Aztecas\n\
		{FFCD00}Los Santos Vagos\n\
		{6666ff}The Rifa\n\
		{993366}La Cosa Nostra\n\
		{007575}ruso\n\
		{bb0000}Yakuza", 
	"Seleccione", "Cerrar");
}
CMD:rhelp(playerid)
{
	if(pData[playerid][pAdmin] < 7) return 1;
	
	SCM(playerid, COLOR_YELLOW, "7 √≥√∞√Æ√¢√•√≠√º:");
	SCM(playerid, 0x00CC99FF, "/loadfs  /unloadfs  /reloadfs  /perskin  /tempzone  /restart  /orgbankadd  /tpcor  /sban  /admstat");
	SCM(playerid, 0x00CC99FF, "/alladmins  /setpi  /setpvw  /setadminoff  /setgrav  /multiply  /lego  /setstat  /pturn  /dad");
	SCM(playerid, 0x00CC99FF, "/cordinfo  /trains");
	if(IsAFull(playerid))
	{
		SCM(playerid, COLOR_YELLOW, "8 √≥√∞√Æ√¢√•√≠√º:");
		SCM(playerid, 0x00CC99FF, "/faccept  /fdecline  /audiotl  /ccl  /delaccount  /changeservername  /savelego  /setprod  /hcreate"), 
		SCM(playerid, 0x00CC99FF, "/gskill  /proppanel  /selobj  /aeditobj  /gocar  /tickrate");
	}
	return 1;
}
CMD:dad(playerid) {
	if(pData[playerid][pAdmin] < 7) return 1;
	return SPD(playerid,601,DIALOG_STYLE_MSGBOX,"{ff3500}√é√∑√®√±√≤√™√†",""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √Æ√∑√®√±√≤√®√≤√º √Æ√∑√•√∞√•√§√º √≠√† √Æ√°√∫√ø√¢√´√•√≠√®√ø?","S√≠","No");
}
CMD:ahelp(playerid) {
	if(pData[playerid][pAdmin] < 1) return 1;
	SCM(playerid, COLOR_YELLOW, "√Ñ√Æ√±√≤√≥√Ø√≠√ª√• √™√Æ√¨√†√≠√§√ª:");
	SCM(playerid, 0x00CC99FF, "1 √≥√∞√Æ√¢√•√≠√º:  /freeze  /unfreeze  /tp  /sp  /spinfo  /ans  /pm  /warninfo  /helpers  /hc  /admins  /slap");
	SCM(playerid, 0x00CC99FF, "1 √≥√∞√Æ√¢√•√≠√º:  /st  /apanel  /a  /changekey");
	if(pData[playerid][pAdmin] >= 2) SCM(playerid, 0x00CC99FF, "2 √≥√∞√Æ√¢√•√≠√º:  /sppl  /weap  /ar  /askill  /aget  /goto (/gt)  /gethere (/gh)  /offst  /rmute  /unrmute"),
									 SCM(playerid, 0x00CC99FF, "2 √≥√∞√Æ√¢√•√≠√º:  /log  /ears  /alock  /money");
	if(pData[playerid][pAdmin] >= 3) SCM(playerid, 0x00CC99FF, "3 √≥√∞√Æ√¢√•√≠√º:  /kick  /offjail  /jail  /unjail  /offmute  /mute  /unmute  /tempwork  /gohouse  /gobiz  /skin"),
									 SCM(playerid, 0x00CC99FF, "3 √≥√∞√Æ√¢√•√≠√º:  /plveh  /inter  /get  /iget  /ip  /lip  /hp  /msg  /warn  /unwarn  /setvw  /setint  /setfuel"),
									 SCM(playerid, 0x00CC99FF, "3 √≥√∞√Æ√¢√•√≠√º:  /settp  /hpall  /givegun  /uninvite  /atune");
	if(pData[playerid][pAdmin] >= 4) SCM(playerid, 0x00CC99FF, "4 √≥√∞√Æ√¢√•√≠√º:  /ban  /offban  /unban  /cl  /offwarn  /arm  /gwp  /gwpall  /stopcapture  /veh  /respv"),
									 SCM(playerid, 0x00CC99FF, "4 √≥√∞√Æ√¢√•√≠√º:  /setleader  /raterep  /baninfo  /promost");
	if(pData[playerid][pAdmin] >= 5) SCM(playerid, 0x00CC99FF, "5 √≥√∞√Æ√¢√•√≠√º:  /gunall  /sethelper  /setweather  /settime  /templeader");
	if(pData[playerid][pAdmin] >= 6) SCM(playerid, 0x00CC99FF, "6 √≥√∞√Æ√¢√•√≠√º:  /setadmin  /elections  /salut  /billboard");
	return 1;
}
CMD:freeze(playerid, params[]) {
	if(pData[playerid][pAdmin] < 1) return 1;
	if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /freeze [id √®√£√∞√Æ√™√†]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	TogglePlayerControllable(params[0], 0);
	format(string, 144, "[A] %s[%d] √ß√†√¨√Æ√∞√Æ√ß√®√´ %s[%d]", pData[playerid][pName], playerid, pData[params[0]][pName], params[0]);
	if(GetPVarInt(playerid, "AdminMessages")) SCM(playerid, COLOR_YELLOW, string);
	return AdminMessage(COLOR_YELLOW, string);
}
CMD:unfreeze(playerid, params[]) {
	if(pData[playerid][pAdmin] < 1) return 1;
	if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /unfreeze [id √®√£√∞√Æ√™√†]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	TogglePlayerControllable(params[0], 1);
	format(string, 144, "[A] %s[%d] √∞√†√ß√¨√Æ√∞√Æ√ß√®√´ %s[%d]", pData[playerid][pName], playerid, pData[params[0]][pName], params[0]);
	if(GetPVarInt(playerid, "AdminMessages")) SCM(playerid, COLOR_YELLOW, string);
	return AdminMessage(COLOR_YELLOW, string);
}
CMD:dice(playerid, params[]) {
	if(!IsPlayerInRangeOfPoint(playerid,200.0,1989.5132,1018.3199,994.8906)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √™√†√ß√®√≠√Æ");
	new bettype;
	if(sscanf(params, "ddd", params[0],bettype,params[1])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /dice [id √®√£√∞√Æ√™√†] [√≤√®√Ø (1-√§√•√≠√º√£√®, 2-√¥√®√∏√™√®)] [√±√≥√¨√¨√† √±√≤√†√¢√™√®]");
	if(GetPVarInt(playerid, "cancel_act")) return SCM(playerid, COLOR_GREY, "√Ç√ª √≥√¶√• √±√§√•√´√†√´√® √™√†√™√Æ√•-√≤√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √Ç√¢√•√§√®√≤√• "CBLUE"/revoke"CGREY", √∑√≤√Æ√°√ª √Æ√≤√Æ√ß√¢√†√≤√º √•√£√Æ");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(bettype != 1 && bettype != 2) 
		return SCM(playerid, COLOR_LIGHTGREY, "√ì√™√†√ß√†√≠ √≠√•√¢√•√∞√≠√ª√© √≤√®√Ø √±√≤√†√¢√™√®");
	if(bettype == 1) {
		if(params[1] < 1000 || params[1] > 1000000) return SCM(playerid, COLOR_LIGHTGREY, "C√≤√†√¢√™√† √Æ√≤ 1000$ √§√Æ 1000000$");
		if(pData[playerid][pCash] < params[1]) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √±√≤√Æ√´√º√™√Æ √§√•√≠√•√£");
		if(pData[params[0]][pCash] < params[1]) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ω√≤√Æ√£√Æ √®√£√∞√Æ√™√† No √±√≤√Æ√´√º√™√Æ √§√•√≠√•√£");
	}
	else {
		if(params[1] < 5 || params[1] > 1000) return SCM(playerid, COLOR_LIGHTGREY, "C√≤√†√¢√™√† √Æ√≤ 5 √§√Æ 1000 √¥√®√∏√•√™");
		if(pData[playerid][casino_amount] < params[1]) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √±√≤√Æ√´√º√™√Æ √¥√®√∏√•√™");
		if(pData[params[0]][casino_amount] < params[1]) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ω√≤√Æ√£√Æ √®√£√∞√Æ√™√† No √±√≤√Æ√´√º√™√Æ √¥√®√∏√•√™");
	}
	if(GetPVarInt(params[0], "ZapretDice")) return SCM(playerid, COLOR_LIGHTGREY, "√Ç S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤ √®√£√∞√Æ√™ √≠√• √¨√Æ√¶√•√≤ √®√£√∞√†√≤√º");
	if(dicetime > gettime()) return SCM(playerid, COLOR_LIGHTGREY, "√Ç S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤ √Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√£√∞√†√≤√º");
	if(!ProxDetectorS(6.0, playerid, params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
	if(params[0] == playerid) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Ø√∞√•√§√´√Æ√¶√®√≤√º √°√∞√Æ√±√®√≤√º √™√Æ√±√≤√® √±√•√°√•");
	if(bettype == 1) {
		SCMF(playerid,COLOR_BLUE, "√Ç√ª √Ø√∞√•√§√´√Æ√¶√®√´√® %s √°√∞√Æ√±√®√≤√º √™√Æ√±√≤√®. √ë√≤√†√¢√™√†: %i$", GetName(params[0]),params[1]);
		SCMF(params[0], COLOR_BLUE, "%s √Ø√∞√•√§√´√†√£√†√•√≤ √°√∞√Æ√±√®√≤√º √™√Æ√±√≤√®. √ë√≤√†√¢√™√†: %i$",pData[playerid][pName],params[1]);
	}
	else {
		SCMF(playerid,COLOR_BLUE, "√Ç√ª √Ø√∞√•√§√´√Æ√¶√®√´√® %s √°√∞√Æ√±√®√≤√º √™√Æ√±√≤√®. √ë√≤√†√¢√™√†: %i √¥√®√∏√•√™", GetName(params[0]),params[1]);
		SCMF(params[0], COLOR_BLUE, "%s √Ø√∞√•√§√´√†√£√†√•√≤ √°√∞√Æ√±√®√≤√º √™√Æ√±√≤√®. √ë√≤√†√¢√™√†: %i √¥√®√∏√•√™",pData[playerid][pName],params[1]);
	}
	SetPVarInt(playerid, "ZapretDice",1);
	SetPVarInt(params[0], "BetType", bettype);
	SetPVarInt(params[0], "KostiName",playerid);
	SetPVarInt(params[0], "KostiMoney",params[1]);
	SetPVarInt(playerid, "cancel_act", 1); SetPVarInt(playerid, "cancel_act_id", params[0]);
	SetPVarInt(params[0], "ProverkaDice",1);
	return SCM(params[0], -1, "√ç√†√¶√¨√®√≤√• "CMAIN"Y "CWHITE"√∑√≤√Æ√°√ª √±√Æ√£√´√†√±√®√≤√º√±√ø √®√´√® "CERROR"N "CWHITE"√§√´√ø √Æ√≤√™√†√ß√†");
}
stock set_selfie_mode(playerid)
{
	new Float: fPX, Float: fPY, Float: fPZ,
        Float: fVX, Float: fVY, Float: fVZ;

    GetPlayerCameraPos(playerid, fPX, fPY, fPZ);
    GetPlayerCameraLookAt(playerid, fVX, fVY, fVZ);

    new Float: p_pos[4];

    GetPlayerPos(playerid, p_pos[0], p_pos[1], p_pos[2]);
    GetPlayerFacingAngle(playerid, p_pos[3]);

    new Float: px = p_pos[0], 
    	Float: py = p_pos[1];

    px += (0.75 * floatsin(-p_pos[3], degrees));
    py += (0.75 * floatcos(-p_pos[3], degrees));

    InterpolateCameraPos(playerid, fPX, fPY, fPZ, px, py, p_pos[2] + 0.9, 1700, CAMERA_MOVE);
    InterpolateCameraLookAt(playerid, fVX, fVY, fVZ, p_pos[0], p_pos[1], p_pos[2] + 0.85, 1700, CAMERA_MOVE);
}
CMD:selfie(playerid)
{
	if(pData[playerid][pLevel] < 2) return SCM(playerid, COLOR_LIGHTGREY, "√à√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√• S√≠√≠√≠√Æ√© √™√Æ√¨√†√≠√§√ª √∞√†√ß√∞√•√∏√•√≠√Æ √±√Æ 2 √≥√∞√Æ√¢√≠√ø");
	if(!GetPVarInt(playerid, "takingselfie") && AntiCheatIsFrozen(playerid)) 
		return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Ω√≤√≥ √™√Æ√¨√†√≠√§√≥ √¢ S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤");
	if(is_salonsee[playerid]) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Ω√≤√≥ √™√Æ√¨√†√≠√§√≥ √¢ S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤");
	if(PlayerTied{playerid} > false) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Ω√≤√≥ √™√Æ√¨√†√≠√§√≥ √¢ S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤");
	if(GetPVarInt(playerid, "PlayerCuffed") == 2) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Ω√≤√≥ √™√Æ√¨√†√≠√§√≥ √¢ √≠√†√∞√≥√∑√≠√®√™√†√µ");
	if(PhoneOnline{playerid}) return SCM(playerid, COLOR_GREY, "√Ç√†√∏ √≤√•√´√•√¥√Æ√≠ √Æ√≤√™√´√æ√∑¬∏√≠");
	if(pData[playerid][pPnumber] == -1) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√† √™√Æ√¨√†√≠S√≠ √§√Æ√±√≤√≥√Ø√≠√† √≤√Æ√´√º√™√Æ √Ø√∞√® √≠√†√´√®√∑√®√® √≤√•√´√•√¥√Æ√≠√†");
	if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √≤√∞√†√≠√±√Ø√Æ√∞√≤√•");
	if(!GetPVarInt(playerid, "takingselfie"))
	{
		SetPlayerAttachedObject(playerid, 9, 19513, 5, 0.147999, 0.010999, 0.000000, 176.199935, -67.200019, -89.999992, 1.000000, 1.000000, 1.000000, phone_color[pData[playerid][pColorPhone]], 0);
		TogglePlayerControllable(playerid, 0);
		SetPVarInt(playerid, "takingselfie", 1);
		set_selfie_mode(playerid);
		SetPlayerArmedWeapon(playerid, 0);
		MeAction(playerid, "√§√•√´√†√•√≤ √±√•√´√¥√®");
		SetPlayerChatBubble(playerid, "√§√•√´√†√•√≤ √±√•√´√¥√®", COLOR_PURPLE, 4.0, 5000);
		ApplyAnimation(playerid, "ON_LOOKERS", "POINTUP_LOOP", 4.1, 1, 1, 1, 1, 1, 1);
		if(!selfie_sended[playerid])
		{
			SCM(playerid, -1, "√è√Æ√§√±√™√†√ß√™√†: Usar√≤√• {ff9933}/headmove "CWHITE"√§√´√ø √Æ√≤√™√´√æ√∑√•√≠√®√ø √Ø√Æ√¢√Æ√∞√Æ√≤√† √£√Æ√´√Æ√¢√ª √® {ff9933}F8 "CWHITE"√§√´√ø √±√™√∞√®√≠√∏√Æ√≤√†");
			SCM(playerid, -1, "√Ñ√´√ø √¢√ª√µ√ÆS√≠ √®√ß √∞√•√¶√®√¨√† √±√•√´√¥√® √¢√¢√•√§√®√≤√• {0099ff}/selfie "CWHITE"√•√π¬∏ √∞√†√ß");
			selfie_sended[playerid] = true;
		}
	}
	else
	{
		SetCameraBehindPlayer(playerid);
		TogglePlayerControllable(playerid, 1);
		DeletePVar(playerid, "takingselfie");
		if(IsPlayerAttachedObjectSlotUsed(playerid, 9))
			RemovePlayerAttachedObject(playerid, 9);
		ApplyAnimation(playerid, "PED", "ATM", 4.1, 0, 1, 1, 0, 1, 1);
	}
	return 1;
}
CMD:gwp(playerid, params[]) {
	if(pData[playerid][pAdmin] < 4) return 1;
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /gwp [id √®√£√∞√Æ√™√†]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	ResetPlayerWeapons(params[0]);
	if(pData[params[0]][pSex] == 1) SCMF(params[0], 0xCC9900FF, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s[%d] √ß√†√°√∞√†√´ √≥ √Ç√†√± √¢√±¬∏ √Æ√∞√≥√¶√®√•", GetName(playerid), playerid);
	else SCMF(params[0], 0xCC9900FF, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s[%d] √ß√†√°√∞√†√´√† √≥ √Ç√†√± √¢√±¬∏ √Æ√∞√≥√¶√®√•", GetName(playerid), playerid);
	return SCMF(playerid, 0xCC9900FF, "√Ç√ª √ß√†√°√∞√†√´√® √¢√±¬∏ √Æ√∞√≥√¶√®√• √≥ √®√£√∞√Æ√™√† %s[%d]", GetName(params[0]), params[0]);
}
CMD:present(playerid, params[]) {
	new bool: status, weaponid, ammo;
	for(new i = 0; i <= 12; i ++) {
		GetPlayerWeaponData(playerid, i, weaponid, ammo);
		if(weaponid != 14) continue;
		status = true;
		break;
	}
	if(!status) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √∂√¢√•√≤√Æ√¢");
	if(GetPlayerWeapon(playerid) != 14) return SCM(playerid, COLOR_LIGHTGREY, "√ó√≤√Æ√°√ª √Ø√•√∞√•S√≠√≤√º √∂√¢√•√≤√ª √≠√≥√¶√≠√Æ √¢√ß√ø√≤√º √®√µ √¢ √∞√≥√™√®");
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /present [id √®√£√∞√Æ√™√†]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(params[0] == playerid) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Ø√•√∞√•S√≠√≤√º √∂√¢√•√≤√ª √±√•√°√•");
	if(!ProxDetectorS(2.0, playerid, params[0])) return SCM(playerid, COLOR_GREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
	if(GetPlayerWeapon(params[0]) == 14) return SCM(playerid, COLOR_LIGHTGREY, "√ì √®√£√∞√Æ√™√† √≥√¶√• √•√±√≤√º √∂√¢√•√≤√ª");
	RemovePlayerWeapon(playerid, 14); ApplyAnimation(playerid, "DEALER", "Dealer_Deal", 4.0, 0, 0, 0, 0, 0, 1);
	GivePlayerWeapon(params[0], 14, 1);
	if(pData[playerid][pSex] == 1) SCMF(params[0], COLOR_BLUE, "%s[%d] √Ø√•√∞√•S√≠√´ √¢√†√¨ √∂√¢√•√≤√ª", pData[playerid][pName], playerid);
	else SCMF(params[0], COLOR_BLUE, "%s[%d] √Ø√•√∞√•S√≠√´√† √¢√†√¨ √∂√¢√•√≤√ª", pData[playerid][pName], playerid);
	return SCMF(playerid,COLOR_BLUE, "√Ç√ª √Ø√•√∞√•S√≠√´√® √®√£√∞√Æ√™√≥ %s[%d] √∂√¢√•√≤√ª", GetName(params[0]),params[0]);
}
CMD:recorder(playerid) {
	if(GetPVarInt(playerid, "PlacedBB")) return SCM(playerid, COLOR_GREY, "√å√†√£√≠√®√≤√Æ√¥√Æ√≠ √≥√¶√• √≥√±√≤√†√≠√Æ√¢√´√•√≠. √ó√≤√Æ√°√ª √ß√†√°√∞√†√≤√º √•√£√Æ √¢√¢√•√§√®√≤√• "CLITEBLUE"/takerec");
	if(!pData[playerid][pRec]) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √¨√†√£√≠√®√≤√Æ√¥√Æ√≠√†. √ä√≥√Ø√®√≤√º √•√£√Æ √¨√Æ√¶√≠√Æ √¢ 24-7");
	if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √≤√∞√†√≠√±√Ø√Æ√∞√≤√•");
	new Float:BBCoord[4];
	pData[playerid][pRec]=false;
	UpdatePlayerData(playerid,"pRec",0);
	RemoveItemFromInventory(playerid, 6);
	GetPlayerPos(playerid, BBCoord[0], BBCoord[1], BBCoord[2]);
	GetPlayerFacingAngle(playerid, BBCoord[3]);
	SetPVarFloat(playerid, "BBX", BBCoord[0]);
	SetPVarFloat(playerid, "BBY", BBCoord[1]);
	SetPVarFloat(playerid, "BBZ", BBCoord[2]);
	BBCoord[0] += (2 * floatsin(-BBCoord[3], degrees));
	BBCoord[1] += (2 * floatcos(-BBCoord[3], degrees));
	BBCoord[2] -= 1.0;
	foreach(new i:Player) {
		if(!GetPVarType(i, "PlacedBB") || !IsPlayerInRangeOfPoint(playerid, 30.0, GetPVarFloat(i, "BBX"), GetPVarFloat(i, "BBY"), GetPVarFloat(i, "BBZ"))) continue;
		return SCM(playerid, COLOR_LIGHTGREY, "√å√†√£√≠√®√≤√Æ√¥√Æ√≠ √≥√±√≤√†√≠√Æ√¢√´√•√≠");
	}
	if(pData[playerid][pSex] == 1) MeAction(playerid, "√≥√±√≤√†√≠√Æ√¢√®√´ √¨√†√£√≠√®√≤√Æ√¥√Æ√≠");
	else MeAction(playerid, "√≥√±√≤√†√≠√Æ√¢√®√´√† √¨√†√£√≠√®√≤√Æ√¥√Æ√≠");
	SetPlayerChatBubble(playerid, "√≥√±√≤√†√≠√†√¢√´√®√¢√†√•√≤ √¨√†√£√≠√®√≤√Æ√¥√Æ√≠", COLOR_PURPLE, 4.0, 5000);
	SCM(playerid, 0x339900FF, "√å√†√£√≠√®√≤√Æ√¥√Æ√≠ √≥√±√≤√†√≠√Æ√¢√´√•√≠. √Ñ√Æ√±√≤√≥√Ø√≠√ª√• √™√Æ√¨√†√≠√§√ª:");
	SCM(playerid, 0x336699FF, "/setmusic "CWHITE"- √≥√Ø√∞√†√¢√´√•√≠√®√• √¨√†√£√≠√®√≤√Æ√¥√Æ√≠√Æ√¨");
	SCM(playerid, 0x336699FF, "/takerec "CWHITE"- √¢√ß√ø√≤√º √¨√†√£√≠√®√≤√Æ√¥√Æ√≠");
	SetPVarInt(playerid, "PlacedBB", CreateDynamicObject(2226, BBCoord[0], BBCoord[1], BBCoord[2], 0.0, 0.0, 0.0, .worldid = GetPlayerVirtualWorld(playerid), .interiorid = GetPlayerInterior(playerid)));
	Streamer_Update(playerid);
	string[0] = EOS;
	format(string, 70, "√å√†√£√≠√®√≤√Æ√¥√Æ√≠\n"CWHITE"√ì√±√≤√†√≠√Æ√¢√®√´: %s[%d]", pData[playerid][pName], playerid);
	SetPVarInt(playerid, "BBLabel", _:CreateDynamic3DTextLabel(string, 0x66CC00FF, BBCoord[0], BBCoord[1], BBCoord[2]+0.6, 8, .worldid = GetPlayerVirtualWorld(playerid), .interiorid = GetPlayerInterior(playerid)));
	SetPVarInt(playerid, "BBArea", CreateDynamicSphere(BBCoord[0], BBCoord[1], BBCoord[2], 30.0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid)));
	SetPVarInt(playerid, "BBInt", GetPlayerInterior(playerid));
	SetPVarInt(playerid, "BBVW", GetPlayerVirtualWorld(playerid));
	Iter_Add(boxPlayer,playerid);
	return ApplyAnimation(playerid, "BOMBER","BOM_Plant",4.0,0,0,0,0,0);
}
CMD:setmusic(playerid, params[]) {
	if(!GetPVarInt(playerid, "PlacedBB")) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √±√≤√†√¢√®√´√® √¨√†√£√≠√®√≤√Æ√¥√Æ√≠");
	if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √≤√∞√†√≠√±√Ø√Æ√∞√≤√•");
	if(!IsPlayerInRangeOfPoint(playerid, 3.0, GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"))) 
		return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¢√Æ√ß√´√• √¨√†√£√≠√®√≤√Æ√¥√Æ√≠√†");
	SetPVarInt(playerid, "is_placed_BB", 1);
	if(!GetPVarInt(playerid, "bbox_mtype")) for(new i = 0; i < 17; i ++) TextDrawShowForPlayer(playerid, rec_td[i]);
	else if(GetPVarInt(playerid, "bbox_mtype") == 2) {
		for(new i = 0; i < 29; i ++) {
			if((i > 6 && i < 17) || (i > 26)) TextDrawHideForPlayer(playerid, rec_td[i]);
			else TextDrawShowForPlayer(playerid, rec_td[i]);
		}
	}
	else {
		for(new i = 0; i < 29; i ++) {
			if(i < 7) TextDrawShowForPlayer(playerid, rec_td[i]);
			if(i > 26) TextDrawShowForPlayer(playerid, rec_td[i]);
		}
	}
	SCM(playerid, COLOR_LIGHTBLUE, "√ó√≤√Æ√°√ª Cerrar √¨√•√≠√æ √¨√†√£√≠√®√≤√Æ√¥√Æ√≠√† √≠√†√¶√¨√®√≤√• "CYELLOW"ESC");
	return SelectTextDraw(playerid, 0x999999AA);
}
CMD:takerec(playerid, params[]) {
	if(!GetPVarInt(playerid, "PlacedBB")) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √±√≤√†√¢√®√´√® √¨√†√£√≠√®√≤√Æ√¥√Æ√≠");
	if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √≤√∞√†√≠√±√Ø√Æ√∞√≤√•");
	if(!IsPlayerInRangeOfPoint(playerid, 3.0, GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"))) 
		return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√†√µ√Æ√§√®√≤√•√±√º √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √¨√†√£√≠√®√≤√Æ√¥√Æ√≠√†");
	foreach(new i:Player) {
		if(!IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea"))) continue;
		StopStream(i);
	}
	pData[playerid][pRec]=true;
	UpdatePlayerData(playerid,"pRec",1);
	RemoveItemFromInventory(playerid, 6);
	AddItemToInventory(playerid, 1, 6);
	Iter_Add(boxPlayer,playerid);
	DeletePVar(playerid, "BBArea");
	DestroyDynamicObject(GetPVarInt(playerid, "PlacedBB"));
	DestroyDynamic3DTextLabel(Text3D:GetPVarInt(playerid, "BBLabel"));
	DeletePVar(playerid, "PlacedBB"); DeletePVar(playerid, "BBLabel");
	DeletePVar(playerid, "BBX"); DeletePVar(playerid, "BBY"); DeletePVar(playerid, "BBZ");
	DeletePVar(playerid, "BBInt");
	DeletePVar(playerid, "BBVW");
	DeletePVar(playerid, "BBStation");
	DeletePVar(playerid, "bbox_mtype");
	if(GetPVarInt(playerid, "is_placed_BB")) {
		for(new i = 0; i < 29; i ++) TextDrawHideForPlayer(playerid, rec_td[i]);
		DeletePVar(playerid, "is_placed_BB");
		CancelSelectTextDraw(playerid);
	}
	return SCM(playerid, COLOR_ERROR, "√Ç√ª √≥√°√∞√†√´√® √¨√†√£√≠√®√≤√Æ√¥√Æ√≠");
}
CMD:givemed(playerid, params[]) {
	if(!IsAMedic(playerid) && pData[playerid][pRank] < 3) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√•√§. √∞√†√°√Æ√≤√≠√®√™ √®√´√® √≠√• √§√Æ√±√≤√®√£√´√® 3-√£√Æ √∞√†√≠√£√†");
	if(sscanf(params, "dd", params[0], params[1])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /givemed [id √®√£√∞√Æ√™√†] [√∂√•√≠√†]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(pData[params[0]][pMedCard] == 1) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √≥√¶√• √®√¨√•√•√≤ √¨√•√§√®√∂√®√≠√±√™√≥√æ √™√†√∞√≤√≥");
	if(params[0] == playerid) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √¢√ªS√≠√≤√º √¨√•√§√®√∂√®√≠√±√™√≥√æ √™√†√∞√≤√≥ √±√†√¨√Æ√¨√≥ √±√•√°√•");
	if(params[1] > 10000 || params[1] < 100) return SCM(playerid, COLOR_LIGHTGREY, "√ñ√•√≠√† √Æ√≤ 100$ √§√Æ 10000$");
	if(!ProxDetectorS(2.0, playerid, params[0])) return SCM(playerid, COLOR_GREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
	if(!pData[params[0]][pPassport]) return SCM(playerid, COLOR_LIGHTGREY, "√ì √®√£√∞√Æ√™√† √§√Æ√´√¶√•√≠ √°√ª√≤√º √Ø√†√±√Ø√Æ√∞√≤");
	if(pData[params[0]][pCash] < params[1]) return SCM(playerid, COLOR_LIGHTGREY, "√ì √®√£√∞√Æ√™√† √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢");
	new mes[230];
	format(mes , sizeof mes , ""CWHITE"√å√•√§√®√∂√®√≠√±√™√®√© √∞√†√°√Æ√≤√≠√®√™ "CMAIN"%s"CWHITE" √Ø√∞√•√§√´√†√£√†√•√≤ √¢√†√¨ √Ø√∞√Æ√©√≤√®\n√¨√•√§. √Æ√±√¨√Æ√≤√∞ √® √Ø√Æ√´√≥√∑√®√≤√º √¨√•√§√®√∂√®√≠√±√™√≥√æ √™√†√∞√≤√≥.\n\n√Ñ√´√ø √Ω√≤√Æ√£√Æ √Ç√†√¨ √Ø√Æ√≠√†√§√Æ√°√®√≤√±√ø "CMAIN"%d$"CWHITE". √Ç√ª √±√Æ√£√´√†√±√≠√ª?", pData[playerid][pName], params[1]);
	SPD(params[0], 9588, DIALOG_STYLE_MSGBOX, ""CMAIN"√è√Æ√´√≥√∑√•√≠√®√• √¨√•√§√®√∂√®√≠√±√™√Æ√© √™√†√∞√≤√ª", mes, "√è√∞√®√Æ√°√∞√•√±√≤√®", "Cerrar");
	SCMF(playerid, COLOR_LIGHTGREY, "√Ç√ª √Ø√∞√•√§√´√Æ√¶√®√´√® %s √Ø√Æ√´√≥√∑√®√≤√º √¨√•√§√®√∂√®√≠√±√™√≥√æ √™√†√∞√≤√≥ √ß√† %d$", GetName(params[0]), params[1]);
	SetPVarInt(params[0], "myID", playerid);
	return SetPVarInt(params[0], "myCenaCard", params[1]);
}
CMD:med(playerid) {
	new Float: hppl;
	if(!IsPlayerInRangeOfPoint(playerid, 75.0, 1192.2051, -1313.2767, 1584.9719) && 
		!IsPlayerInRangeOfPoint(playerid, 75.0, 1508.6653,-1802.1176,2982.6953)) return SCM(playerid, COLOR_LIGHTGREY, "Necesario ir en la zona de pacientes");
	if(GetPlayerVirtualWorld(playerid) != 1 && GetPlayerVirtualWorld(playerid) != 2 && GetPlayerVirtualWorld(playerid) != 3) 
		return SCM(playerid, COLOR_ERROR, "Error de geometr√≠a [069]");
	if(GetPlayerInterior(playerid) != 1) 
		return SCM(playerid, COLOR_LIGHTGREY, "Necesario ir en la zona de pacientes");
	GetPlayerHealth(playerid, hppl);
	if(hppl >= 95.0) return SCM(playerid, COLOR_LIGHTGREY, "Sin necesidad de tratamiento");
	if(pTemp[playerid][pInHospital]) return SCM(playerid, COLOR_LIGHTGREY, "Agregar nuevos archivos");
	if(IsPlayerInRangeOfPoint(playerid, 1.0, 1187.5934, -1343.2560, 1584.9778)) {
		if(GetPlayerVirtualWorld(playerid) == 1 && koyka_used_ls[1] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		else if(GetPlayerVirtualWorld(playerid) == 2 && koyka_used_sf[1] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		else if(GetPlayerVirtualWorld(playerid) == 3 && koyka_used_lv[1] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		SCM(playerid, COLOR_MAIN, "Insertar un n√∫mero grande ¬π1. Dependiendo de su salud, el tratamiento estar√° fuera de tiempo.");
		pTemp[playerid][pInHospital] = true;
		SCM(playerid, -1, "Para encender r√°pidamente, si no lo hace, recurra a la cura.");
		UpdateKoykaZanyat(playerid, 1);
		SetPVarInt(playerid, "KoykoUsed", 1);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1183.6644, -1343.4652, 1584.9778)) {
		if(GetPlayerVirtualWorld(playerid) == 1 && koyka_used_ls[2] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		else if(GetPlayerVirtualWorld(playerid) == 2 && koyka_used_sf[2] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		else if(GetPlayerVirtualWorld(playerid) == 3 && koyka_used_lv[2] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		SCM(playerid, COLOR_MAIN, "Insertar un n√∫mero grande ¬π2. Dependiendo de su salud, el tratamiento estar√° fuera de tiempo.");
		pTemp[playerid][pInHospital] = true;
		SCM(playerid, -1, "Para encender r√°pidamente, si no lo hace, recurra a la cura.");
		UpdateKoykaZanyat(playerid, 2);
		SetPVarInt(playerid, "KoykoUsed", 2);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1179.9739, -1343.5272, 1584.9778)) {
		if(GetPlayerVirtualWorld(playerid) == 1 && koyka_used_ls[3] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		else if(GetPlayerVirtualWorld(playerid) == 2 && koyka_used_sf[3] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		else if(GetPlayerVirtualWorld(playerid) == 3 && koyka_used_lv[3] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		SCM(playerid, COLOR_MAIN, "Insertar un n√∫mero grande ¬π3. Dependiendo de su salud, el tratamiento estar√° fuera de tiempo.");
		pTemp[playerid][pInHospital] = true;
		SCM(playerid, -1, "Para encender r√°pidamente, si no lo hace, recurra a la cura.");
		UpdateKoykaZanyat(playerid, 3);
		SetPVarInt(playerid, "KoykoUsed", 3);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1186.5242, -1349.0415, 1584.9778)) {
		if(GetPlayerVirtualWorld(playerid) == 1 && koyka_used_ls[4] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		else if(GetPlayerVirtualWorld(playerid) == 2 && koyka_used_sf[4] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		else if(GetPlayerVirtualWorld(playerid) == 3 && koyka_used_lv[4] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		SCM(playerid, COLOR_MAIN, "Insertando una caja grande # 4. Dependiendo de su salud, el tratamiento estar√° fuera de tiempo.");
		pTemp[playerid][pInHospital] = true;
		SetPVarInt(playerid, "KoykoUsed", 4);
		SCM(playerid, -1, "Para encender r√°pidamente, si no lo hace, recurra a la cura.");
		UpdateKoykaZanyat(playerid, 4);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1183.5566,-1349.0381,1584.9778)) {
		if(GetPlayerVirtualWorld(playerid) == 1 && koyka_used_ls[5] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		else if(GetPlayerVirtualWorld(playerid) == 2 && koyka_used_sf[5] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		else if(GetPlayerVirtualWorld(playerid) == 3 && koyka_used_lv[5] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		SCM(playerid, COLOR_MAIN, "Insertar un n√∫mero grande 5. Dependiendo de su salud, el tratamiento estar√° fuera de tiempo.");
		pTemp[playerid][pInHospital] = true;
		SetPVarInt(playerid, "KoykoUsed", 5);
		SCM(playerid, -1, "Para encender r√°pidamente, si no lo hace, recurra a la cura.");
		UpdateKoykaZanyat(playerid, 5);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1180.2970,-1349.0225,1584.9778)) {
		if(GetPlayerVirtualWorld(playerid) == 1 && koyka_used_ls[6] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		else if(GetPlayerVirtualWorld(playerid) == 2 && koyka_used_sf[6] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		else if(GetPlayerVirtualWorld(playerid) == 3 && koyka_used_lv[6] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		SCM(playerid, COLOR_MAIN, "Insertar un n√∫mero grande 6. Dependiendo de su salud, el tratamiento estar√° fuera de tiempo.");
		pTemp[playerid][pInHospital] = true;
		SetPVarInt(playerid, "KoykoUsed", 6);
		SCM(playerid, -1, "Para encender r√°pidamente, si no lo hace, recurra a la cura.");
		UpdateKoykaZanyat(playerid, 6);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1196.6556,-1343.1582,1584.9778)) {
		if(GetPlayerVirtualWorld(playerid) == 1 && koyka_used_ls[7] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		else if(GetPlayerVirtualWorld(playerid) == 2 && koyka_used_sf[7] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		else if(GetPlayerVirtualWorld(playerid) == 3 && koyka_used_lv[7] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		SCM(playerid, COLOR_MAIN, "Insertar un n√∫mero grande ¬π7. Dependiendo de su salud, el tratamiento estar√° fuera de tiempo.");
		pTemp[playerid][pInHospital] = true;
		SetPVarInt(playerid, "KoykoUsed", 7);
		SCM(playerid, -1, "Para encender r√°pidamente, si no lo hace, recurra a la cura.");
		UpdateKoykaZanyat(playerid, 7);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1200.5370,-1343.1581,1584.9778)) {
		if(GetPlayerVirtualWorld(playerid) == 1 && koyka_used_ls[8] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		else if(GetPlayerVirtualWorld(playerid) == 2 && koyka_used_sf[8] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		else if(GetPlayerVirtualWorld(playerid) == 3 && koyka_used_lv[8] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		SCM(playerid, COLOR_MAIN, "Insertar un n√∫mero grande ¬π8. Dependiendo de su salud, el tratamiento estar√° fuera de tiempo.");
		pTemp[playerid][pInHospital] = true;
		SetPVarInt(playerid, "KoykoUsed", 8);
		SCM(playerid, -1, "Para encender r√°pidamente, si no lo hace, recurra a la cura.");
		UpdateKoykaZanyat(playerid, 8);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1203.6813,-1343.1567,1584.9778)) {
		if(GetPlayerVirtualWorld(playerid) == 1 && koyka_used_ls[9] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		else if(GetPlayerVirtualWorld(playerid) == 2 && koyka_used_sf[9] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		else if(GetPlayerVirtualWorld(playerid) == 3 && koyka_used_lv[9] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		SCM(playerid, COLOR_MAIN, "Insertar un n√∫mero grande ¬π9. Dependiendo de su salud, el tratamiento estar√° fuera de tiempo.");
		pTemp[playerid][pInHospital] = true;
		SetPVarInt(playerid, "KoykoUsed", 9);
		SCM(playerid, -1, "Para encender r√°pidamente, si no lo hace, recurra a la cura.");
		UpdateKoykaZanyat(playerid, 9);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1203.5554,-1348.8989,1584.9778)) {
		if(GetPlayerVirtualWorld(playerid) == 1 && koyka_used_ls[10] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		else if(GetPlayerVirtualWorld(playerid) == 2 && koyka_used_sf[10] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		else if(GetPlayerVirtualWorld(playerid) == 3 && koyka_used_lv[10] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		SCM(playerid, COLOR_MAIN, "Insertar un n√∫mero grande ¬π10. Dependiendo de su salud, el tratamiento estar√° fuera de tiempo.");
		pTemp[playerid][pInHospital] = true;
		SetPVarInt(playerid, "KoykoUsed", 10);
		SCM(playerid, -1, "Para encender r√°pidamente, si no lo hace, recurra a la cura.");
		UpdateKoykaZanyat(playerid, 10);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1200.3661,-1349.0435,1584.9778)) {
		if(GetPlayerVirtualWorld(playerid) == 1 && koyka_used_ls[11] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		else if(GetPlayerVirtualWorld(playerid) == 2 && koyka_used_sf[11] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		else if(GetPlayerVirtualWorld(playerid) == 3 && koyka_used_lv[11] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		SCM(playerid, COLOR_MAIN, "Insertar un n√∫mero grande ¬π11. Dependiendo de su salud, el tratamiento estar√° fuera de tiempo.");
		pTemp[playerid][pInHospital] = true;
		SetPVarInt(playerid, "KoykoUsed", 11);
		SCM(playerid, -1, "Para encender r√°pidamente, si no lo hace, recurra a la cura.");
		UpdateKoykaZanyat(playerid, 11);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1197.4391,-1349.0435,1584.9851)) {
		if(GetPlayerVirtualWorld(playerid) == 1 && koyka_used_ls[12] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		else if(GetPlayerVirtualWorld(playerid) == 2 && koyka_used_sf[12] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		else if(GetPlayerVirtualWorld(playerid) == 3 && koyka_used_lv[12] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		SCM(playerid, COLOR_MAIN, "Insertar un n√∫mero grande ¬π12. Dependiendo de su salud, el tratamiento estar√° fuera de tiempo.");
		pTemp[playerid][pInHospital] = true;
		SetPVarInt(playerid, "KoykoUsed", 12);
		SCM(playerid, -1, "Para encender r√°pidamente, si no lo hace, recurra a la cura.");
		UpdateKoykaZanyat(playerid, 12);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1186.1919,-1351.1564,1584.9778)) {
		if(GetPlayerVirtualWorld(playerid) == 7 && koyka_used_ls[13] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		else if(GetPlayerVirtualWorld(playerid) == 3 && koyka_used_sf[13] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		else if(GetPlayerVirtualWorld(playerid) == 4 && koyka_used_lv[13] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		SCM(playerid, COLOR_MAIN, "Insertar un n√∫mero grande ¬π13. Dependiendo de su salud, el tratamiento estar√° fuera de tiempo.");
		pTemp[playerid][pInHospital] = true;
		SetPVarInt(playerid, "KoykoUsed", 13);
		SCM(playerid, -1, "Para encender r√°pidamente, si no lo hace, recurra a la cura.");
		UpdateKoykaZanyat(playerid, 13);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1182.9615,-1351.1572,1584.9778)) {
		if(GetPlayerVirtualWorld(playerid) == 7 && koyka_used_ls[14] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		else if(GetPlayerVirtualWorld(playerid) == 3 && koyka_used_sf[14] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		else if(GetPlayerVirtualWorld(playerid) == 4 && koyka_used_lv[14] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		SCM(playerid, COLOR_MAIN, "Insertar un n√∫mero grande ¬π14. Dependiendo de su salud, el tratamiento estar√° fuera de tiempo.");
		pTemp[playerid][pInHospital] = true;
		SetPVarInt(playerid, "KoykoUsed", 14);
		SCM(playerid, -1, "Para encender r√°pidamente, si no lo hace, recurra a la cura.");
		UpdateKoykaZanyat(playerid, 14);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1180.2208,-1351.1567,1584.9778)) {
		if(GetPlayerVirtualWorld(playerid) == 7 && koyka_used_ls[15] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		else if(GetPlayerVirtualWorld(playerid) == 3 && koyka_used_sf[15] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		else if(GetPlayerVirtualWorld(playerid) == 4 && koyka_used_lv[15] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		SCM(playerid, COLOR_MAIN, "Insertar un n√∫mero grande ¬π15. Dependiendo de su salud, el tratamiento estar√° fuera de tiempo.");
		pTemp[playerid][pInHospital] = true;
		SetPVarInt(playerid, "KoykoUsed", 15);
		SCM(playerid, -1, "Para encender r√°pidamente, si no lo hace, recurra a la cura.");
		UpdateKoykaZanyat(playerid, 15);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1187.0570,-1356.4570,1584.9778)) {
		if(GetPlayerVirtualWorld(playerid) == 7 && koyka_used_ls[16] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		else if(GetPlayerVirtualWorld(playerid) == 3 && koyka_used_sf[16] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		else if(GetPlayerVirtualWorld(playerid) == 4 && koyka_used_lv[16] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		SCM(playerid, COLOR_MAIN, "Insertar un n√∫mero grande ¬π16. Dependiendo de su salud, el tratamiento estar√° fuera de tiempo.");
		pTemp[playerid][pInHospital] = true;
		SetPVarInt(playerid, "KoykoUsed", 16);
		SCM(playerid, -1, "Para encender r√°pidamente, si no lo hace, recurra a la cura.");
		UpdateKoykaZanyat(playerid, 16);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1183.3147,-1356.7440,1584.9778)) {
		if(GetPlayerVirtualWorld(playerid) == 7 && koyka_used_ls[17] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		else if(GetPlayerVirtualWorld(playerid) == 3 && koyka_used_sf[17] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		else if(GetPlayerVirtualWorld(playerid) == 4 && koyka_used_lv[17] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		SCM(playerid, COLOR_MAIN, "Insertar un n√∫mero grande ¬π17. Dependiendo de su salud, el tratamiento estar√° fuera de tiempo.");
		pTemp[playerid][pInHospital] = true;
		SetPVarInt(playerid, "KoykoUsed", 17);
		SCM(playerid, -1, "Para encender r√°pidamente, si no lo hace, recurra a la cura.");
		UpdateKoykaZanyat(playerid, 17);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1180.1080,-1356.7440,1584.9778)) {
		if(GetPlayerVirtualWorld(playerid) == 7 && koyka_used_ls[18] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		else if(GetPlayerVirtualWorld(playerid) == 3 && koyka_used_sf[18] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		else if(GetPlayerVirtualWorld(playerid) == 4 && koyka_used_lv[18] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		SCM(playerid, COLOR_MAIN, "Insertar un n√∫mero grande ¬π18. Dependiendo de su salud, el tratamiento estar√° fuera de tiempo.");
		pTemp[playerid][pInHospital] = true;
		SetPVarInt(playerid, "KoykoUsed", 18);
		SCM(playerid, -1, "Para encender r√°pidamente, si no lo hace, recurra a la cura.");
		UpdateKoykaZanyat(playerid, 18);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1197.2648,-1351.1563,1584.9778)) {
		if(GetPlayerVirtualWorld(playerid) == 7 && koyka_used_ls[19] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		else if(GetPlayerVirtualWorld(playerid) == 3 && koyka_used_sf[19] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		else if(GetPlayerVirtualWorld(playerid) == 4 && koyka_used_lv[19] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		SCM(playerid, COLOR_MAIN, "Insertar un n√∫mero grande ¬π19. Dependiendo de su salud, el tratamiento estar√° fuera de tiempo.");
		pTemp[playerid][pInHospital] = true;
		SetPVarInt(playerid, "KoykoUsed", 19);
		SCM(playerid, -1, "Para encender r√°pidamente, si no lo hace, recurra a la cura.");
		UpdateKoykaZanyat(playerid, 19);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1200.4386,-1351.1558,1584.9778)) {
		if(GetPlayerVirtualWorld(playerid) == 7 && koyka_used_ls[20] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		else if(GetPlayerVirtualWorld(playerid) == 3 && koyka_used_sf[20] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		else if(GetPlayerVirtualWorld(playerid) == 4 && koyka_used_lv[20] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		SCM(playerid, COLOR_MAIN, "Insertar un n√∫mero grande ¬π20. Dependiendo de su salud, el tratamiento estar√° fuera de tiempo.");
		pTemp[playerid][pInHospital] = true;
		SetPVarInt(playerid, "KoykoUsed", 20);
		SCM(playerid, -1, "Para encender r√°pidamente, si no lo hace, recurra a la cura.");
		UpdateKoykaZanyat(playerid, 20);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1203.3900,-1351.1576,1584.9778)) {
		if(GetPlayerVirtualWorld(playerid) == 7 && koyka_used_ls[21] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		else if(GetPlayerVirtualWorld(playerid) == 3 && koyka_used_sf[21] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		else if(GetPlayerVirtualWorld(playerid) == 4 && koyka_used_lv[21] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		SCM(playerid, COLOR_MAIN, "Insertar un n√∫mero grande ¬π21. Dependiendo de su salud, el tratamiento estar√° fuera de tiempo.");
		pTemp[playerid][pInHospital] = true;
		SetPVarInt(playerid, "KoykoUsed", 21);
		SCM(playerid, -1, "Para encender r√°pidamente, si no lo hace, recurra a la cura.");
		UpdateKoykaZanyat(playerid, 21);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1203.6168,-1356.8420,1584.9778)) {
		if(GetPlayerVirtualWorld(playerid) == 7 && koyka_used_ls[22] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		else if(GetPlayerVirtualWorld(playerid) == 3 && koyka_used_sf[22] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		else if(GetPlayerVirtualWorld(playerid) == 4 && koyka_used_lv[22] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		SCM(playerid, COLOR_MAIN, "Insertar un n√∫mero grande ¬π22. Dependiendo de su salud, el tratamiento estar√° fuera de tiempo.");
		pTemp[playerid][pInHospital] = true;
		SetPVarInt(playerid, "KoykoUsed", 22);
		SCM(playerid, -1, "Para encender r√°pidamente, si no lo hace, recurra a la cura.");
		UpdateKoykaZanyat(playerid, 22);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1200.0044,-1356.8435,1584.9778)) {
		if(GetPlayerVirtualWorld(playerid) == 7 && koyka_used_ls[23] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		else if(GetPlayerVirtualWorld(playerid) == 3 && koyka_used_sf[23] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		else if(GetPlayerVirtualWorld(playerid) == 4 && koyka_used_lv[23] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		SCM(playerid, COLOR_MAIN, "Env√≠e un gran n√∫mero de cajas 23. Dependiendo de su salud, el tratamiento estar√° fuera de tiempo.");
		pTemp[playerid][pInHospital] = true;
		SetPVarInt(playerid, "KoykoUsed", 23);
		SCM(playerid, -1, "Para encender r√°pidamente, si no lo hace, recurra a la cura.");
		UpdateKoykaZanyat(playerid, 23);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1196.1641,-1356.8436,1584.9778)) {
		if(GetPlayerVirtualWorld(playerid) == 7 && koyka_used_ls[24] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		else if(GetPlayerVirtualWorld(playerid) == 3 && koyka_used_sf[24] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		else if(GetPlayerVirtualWorld(playerid) == 4 && koyka_used_lv[24] == 1) return SCM(playerid, COLOR_GREY, "Este caso ya est√° cerrado");
		SCM(playerid, COLOR_MAIN, "Insertar un n√∫mero grande ¬π24. Dependiendo de su salud, el tratamiento estar√° fuera de tiempo.");
		pTemp[playerid][pInHospital] = true;
		SetPVarInt(playerid, "KoykoUsed", 24);
		SCM(playerid, -1, "Para encender r√°pidamente, si no lo hace, recurra a la cura.");
		UpdateKoykaZanyat(playerid, 24);
	}
	else return SCM(playerid, COLOR_LIGHTGREY, "√è√Æ√§√Æ√©√§√®√≤√• √™ √°√Æ√´√º√≠√®√∑√≠√Æ√© √™√Æ√©√™√•");
	return SetPVarInt(playerid, "vw_med", GetPlayerVirtualWorld(playerid));
}
CMD:showmed(playerid, params[]) {
	if(sscanf(params,"d", params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /showmed [id √®√£√∞√Æ√™√†]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(!ProxDetectorS(2.0, playerid, params[0])) return SCM(playerid, COLOR_GREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
	new messages[200];
	if(params[0] == playerid) {
		if(pData[playerid][pMember]) format(messages , sizeof messages , ""CWHITE"√à√¨√ø: "CMAIN"%s"CWHITE"\n√ã√•√≤ √¢ √∏√≤√†√≤√•: "CMAIN"%d"CWHITE"\n√å√•√§√®√∂√®√≠√±√™√®√© √Æ√±√¨√Æ√≤√∞: %s"CWHITE"\n√å√•√±√≤√Æ √∞√†√°√Æ√≤√ª: {%s}%s\n", pData[playerid][pName], pData[playerid][pLevel], (pData[playerid][pMedCard] ? (""CMAIN"√è√∞√Æ√©√§√•√≠"):(""CERROR"√ç√• √Ø√∞√Æ√©√§√•√≠")), GetFractionColor[pData[playerid][pMember]], GetMember[pData[playerid][pMember] - 1]);
		else format(messages , sizeof messages , ""CWHITE"√à√¨√ø: "CMAIN"%s"CWHITE"\n√ã√•√≤ √¢ √∏√≤√†√≤√•: "CMAIN"%d"CWHITE"\n√å√•√§√®√∂√®√≠√±√™√®√© √Æ√±√¨√Æ√≤√∞: %s"CWHITE"\n√å√•√±√≤√Æ √∞√†√°√Æ√≤√ª: √Å√•√ß√∞√†√°√Æ√≤√≠√ª√©\n", pData[playerid][pName], pData[playerid][pLevel], (pData[playerid][pMedCard] ? (""CMAIN"√è√∞√Æ√©√§√•√≠"):(""CERROR"√ç√• √Ø√∞√Æ√©√§√•√≠")));
		MeAction(playerid, "√Ø√∞√Æ√±√¨√†√≤√∞√®√¢√†√•√≤ √±√¢√Æ√æ √¨√•√§√®√∂√®√≠√±√™√≥√æ √™√†√∞√≤√≥");
		return SPD(params[0], 0, DIALOG_STYLE_MSGBOX, "{ffd770}√å√•√§√®√∂√®√≠√±√™√†√ø √™√†√∞√≤√†", messages, "Cerrar", "");
	}
	if(GetPVarInt(playerid, "cancel_act")) return SCM(playerid, COLOR_GREY, "√Ç√ª √≥√¶√• √±√§√•√´√†√´√® √™√†√™√Æ√•-√≤√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √Ç√¢√•√§√®√≤√• "CBLUE"/revoke"CGREY", √∑√≤√Æ√°√ª √Æ√≤√Æ√ß√¢√†√≤√º √•√£√Æ");
	if(GetPVarInt(params[0], "offer") != 9999) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™√≥ √≥√¶√• √±√§√•√´√†√´√® √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √é√≠ √§√Æ√´√¶√•√≠ {00cc00}√Ø√∞√®√≠√ø√≤√º "CLIGHTGREY"√®√´√® "CERROR"√Æ√≤√¨√•√≠√®√≤√º "CLIGHTGREY"√•√£√Æ");
	SCMF(playerid, COLOR_BLUE, "√Ç√ª √Ø√∞√•√§√´√Æ√¶√®√´√® %s √Ø√Æ√±√¨√Æ√≤√∞√•√≤√º √Ç√†√∏√≥ √¨√•√§√®√∂√®√≠√±√™√≥√æ √™√†√∞√≤√≥", GetName(params[0]));
	SetPVarInt(playerid, "cancel_act", 1); SetPVarInt(playerid, "cancel_act_id", params[0]);
	SCMF(params[0], COLOR_BLUE, "%s √µ√Æ√∑√•√≤ √Ø√Æ√™√†√ß√†√≤√º √¢√†√¨ √±√¢√Æ√æ √¨√•√§√®√∂√®√≠√±√™√≥√æ √™√†√∞√≤√≥", pData[playerid][pName]);
	SetPVarInt(params[0], "offer", 1); SetPVarInt(params[0], "offer_MED", 1); SetPVarInt(params[0], "MED_targetid", playerid);
	return SCM(params[0], -1, "√ç√†√¶√¨√®√≤√• "CMAIN"Y "CWHITE"√∑√≤√Æ√°√ª √±√Æ√£√´√†√±√®√≤√º√±√ø √®√´√® "CERROR"N "CWHITE"√§√´√ø √Æ√≤√™√†√ß√†");
}
CMD:army(playerid, params[]) {
	if(sscanf(params,"d", params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /army [id √®√£√∞√Æ√™√†]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(!ProxDetectorS(2.0, playerid, params[0])) return SCM(playerid, COLOR_GREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
	new messages[200];
	if(params[0] == playerid) {
		if(pData[playerid][ArmyPlay]) format(messages, sizeof(messages), ""CWHITE"√à√¨√ø: "CMAIN"%s"CWHITE"\n√Ç√Æ√®√≠√±√™√®√© √≥√∑√•√≤: "CMAIN"√ë√´√≥√¶√®√´"CWHITE"\n√Ñ√Æ√±√´√≥√¶√®√´ √§√Æ: "CMAIN"%s\n", pData[playerid][pName], pData[playerid][ArmyRank]);
		else format(messages, sizeof(messages), ""CWHITE"√à√¨√ø: "CMAIN"%s"CWHITE"\n√Ç√Æ√®√≠√±√™√®√© √≥√∑√•√≤: "CMAIN"---"CWHITE"\n√ç√• √±√´√≥√¶√®√´\n", pData[playerid][pName]);
		MeAction(playerid, "√Ø√∞√Æ√±√¨√†√≤√∞√®√¢√†√•√≤ √±√¢√Æ√© √¢√Æ√•√≠√≠√ª√© √°√®√´√•√≤");
		return SPD(params[0], 0, DIALOG_STYLE_MSGBOX, "{ffd770}√Ç√Æ√•√≠√≠√ª√© √°√®√´√•√≤", messages, "Cerrar", "");
	}
	if(GetPVarInt(playerid, "cancel_act")) return SCM(playerid, COLOR_GREY, "√Ç√ª √≥√¶√• √±√§√•√´√†√´√® √™√†√™√Æ√•-√≤√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √Ç√¢√•√§√®√≤√• "CBLUE"/revoke"CGREY", √∑√≤√Æ√°√ª √Æ√≤√Æ√ß√¢√†√≤√º √•√£√Æ");
	if(GetPVarInt(params[0], "offer") != 9999) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™√≥ √≥√¶√• √±√§√•√´√†√´√® √Ø√∞√•√§√´√Æ√¶√•√≠√®√•. √é√≠ √§√Æ√´√¶√•√≠ {00cc00}√Ø√∞√®√≠√ø√≤√º "CLIGHTGREY"√®√´√® "CERROR"√Æ√≤√¨√•√≠√®√≤√º "CLIGHTGREY"√•√£√Æ");
	SCMF(playerid, COLOR_BLUE, "√Ç√ª √Ø√∞√•√§√´√Æ√¶√®√´√® %s √Ø√Æ√±√¨√Æ√≤√∞√•√≤√º √Ç√†√∏ √¢√Æ√•√≠√≠√ª√© √°√®√´√•√≤", GetName(params[0]));
	SCMF(params[0], COLOR_BLUE, "%s √µ√Æ√∑√•√≤ √Ø√Æ√™√†√ß√†√≤√º √¢√†√¨ √±√¢√Æ√© √¢√Æ√•√≠√≠√ª√© √°√®√´√•√≤", pData[playerid][pName]);
	SetPVarInt(playerid, "cancel_act", 1); SetPVarInt(playerid, "cancel_act_id", params[0]);
	SetPVarInt(params[0], "offer", 1); SetPVarInt(params[0], "offer_ARMY", 1); SetPVarInt(params[0], "ARMY_targetid", playerid);
	return SCM(params[0], -1, "√ç√†√¶√¨√®√≤√• "CMAIN"Y "CWHITE"√∑√≤√Æ√°√ª √±√Æ√£√´√†√±√®√≤√º√±√ø √®√´√® "CERROR"N "CWHITE"√§√´√ø √Æ√≤√™√†√ß√†");
}
CMD:exam(playerid, params[]) {
	if(pData[playerid][pMember] != 11) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√†√¨ √≠√•√§√Æ√±√≤√≥√Ø√≠√† S√≠√≠√≠√†√ø √¥√≥√≠√™√∂√®√ø");
	if(pTemp[playerid][pOnExam]) {
		new actplayerid = pTemp[playerid][pExamCandidate];
		if(!IsPlayerConnected(actplayerid) || !pTemp[actplayerid][pOnExam]) {
			pTemp[playerid][pOnExam] = false;
			pTemp[playerid][pExamCandidate] = INVALID_PLAYER_ID;
			return SCM(playerid, 0xFFFFFFFF,"√ù√™√ß√†√¨√•√≠√≥√•√¨√ª√© √¢√ª√∏√•√´. √ù√™√ß√†√¨√•√≠ √ß√†√¢√•√∞√∏√•√≠");
		}
		new mes[128];
		format(mes,sizeof(mes),"√ì√∑√•√≠√®√™ %s\n"CMAIN"√ëS√≠√´\n"CERROR"√è√∞√Æ√¢√†√´√®√´", GetName(actplayerid));
		return SPD(playerid,9921, 2, ""CMAIN"√ù√™√ß√†√¨√•√≠", mes, "√è√∞√®√≠√ø√≤√º", "Cerrar");
	}
	if(gDSTurn[0] == INVALID_PLAYER_ID) return SCM(playerid, COLOR_GREY, "√Ç √Æ√∑√•√∞√•√§√® √≠√† √Ω√™√ß√†√¨√•√≠ √≠√®√™√Æ√£√Æ No");
	new actplayerid = gDSTurn[0];
	if(!IsPlayerConnected(actplayerid) || !pTemp[actplayerid][pWaitingExam]) return SCM(playerid, COLOR_GREY, "√à√£√∞√Æ√™ √¢√ª√∏√•√´ √®√ß √Æ√∑√•√∞√•√§√®");
	if(!ProxDetectorS(8, playerid,actplayerid)) return SCM(playerid, COLOR_GREY, "√Ç√ª S√≠√´√•√™√Æ √§√∞√≥√£ √Æ√≤ √§√∞√≥√£√†");
	new mes[128],type[24];
	switch(pTemp[actplayerid][pExamType]) {
		case false: type = "√ç√†√ß√•√¨√≠√ª√©";
		case true: type = "√Ç√Æ√ß√§√≥√∏√≠√ª√©";
	}
	format(mes,sizeof(mes),"√à√≠√±√≤√∞√≥√™√≤√Æ√∞ %s √¢√ª√ß√¢√†√´ √Ç√†√± √≠√† √Ø√∞√Æ√µ√Æ√¶√§√•√≠√®√• √Ω√™√ß√†√¨√•√≠√†, √±√´√•√§√≥√©√≤√• √ß√† √≠√®√¨",pData[playerid][pName]);
	SCM(actplayerid,COLOR_BLUE,mes);
	format(mes,sizeof(mes),"√Ç√ª √¢√ª√ß√¢√†√´√® %s √≠√† √Ø√∞√Æ√µ√Æ√¶√§√•√≠√®√• √Ω√™√ß√†√¨√•√≠√† (%s)", GetName(actplayerid),type);
	SCM(playerid, COLOR_BLUE,mes);
	SCM(playerid, -1, "√ó√≤√Æ√°√ª √Ø√Æ√±√≤√†√¢√®√≤√º √Ø√•√∑√†√≤√º "CMAIN"√ëS√≠√ã "CWHITE"√®√´√® √¶√• "CERROR"√è√ê√é√Ç√Ä√ã√à√ã"CWHITE", √±√≠√Æ√¢√† √¢√¢√•√§√®√≤√• √™√Æ√¨√†√≠√§√≥ /exam");
	pTemp[actplayerid][pWaitingExam] = false;
	pTemp[actplayerid][pOnExam] = true;
	pTemp[playerid][pOnExam] = true;
	pTemp[playerid][pExamCandidate] = actplayerid;
	return gDSTurn[0] = INVALID_PLAYER_ID;
}
CMD:ad(playerid, params[]) {
	if(pData[playerid][pLevel] < 2) return SCM(playerid, COLOR_LIGHTGREY, "√è√ÆS√≠√∑√† √Æ√°√∫√ø√¢√´√•√≠√®√© √∞√†√ß√∞√•√∏√•√≠√† √±√Æ 2-√£√Æ √≥√∞√Æ√¢√≠√ø");
	if(pData[playerid][pMuteTime]) return SCM(playerid, COLOR_ERROR, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Ω√≤√≥ √¥√≥√≠√™√∂√®√æ √¢ S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤");

	new bool:yesstatus;
	for(new i = 0; i<MAX_ADVERT_COUNT;i ++) {
		if(!gAdvert[i][adBusy]) continue;
		if(strcmp(pData[playerid][pName],gAdvert[i][adSender])) continue;
		yesstatus=true;
		break;
	}
	if(yesstatus) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≥√¶√• √Ø√ÆS√≠√´√® √Æ√°√∫√ø√¢√´√•√≠√®√•. √é√¶√®S√≠√©√≤√• √Ø√∞√Æ√¢√•√∞√™√®");

	if(pData[playerid][pPnumber] == -1) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √≤√•√´√•√¥√Æ√≠√†. √ä√≥√Ø√®√≤√º √•√£√Æ √¨√Æ√¶√≠√Æ √¢ 24-7");
	if(pData[playerid][pCashNumber] < 60) return SCM(playerid, COLOR_GREY, "√ó√≤√Æ√°√ª √Ø√ÆS√≠√≤√º √Æ√°√∫√ø√¢√´√•√≠√®√• √≤√∞√•√°√≥√•√≤√±√ø 60$ √≠√† √°√†√´√†√≠√±√• √¨√Æ√°√®√´√º√≠√Æ√£√Æ √≤√•√´√•√¥√Æ√≠√†");
	if(PhoneOnline{playerid}) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√†√∏ √≤√•√´√•√¥√Æ√≠ √Æ√≤√™√´√æ√∑¬∏√≠. √Ñ√´√ø √Ø√ÆS√≠√∑√® √Æ√°√∫√ø√¢√´√•√≠√®√ø √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √•√£√Æ √¢√™√´√æ√∑√®√≤√º");
	if(sscanf(params, "s[100]", params[0])) return SCM(playerid, COLOR_GREY, "Usar√≤√•: /ad [√≤√•√™√±√≤ √Æ√°√∫√ø√¢√´√•√≠√®√ø]");
	if(gAdvertCount >= MAX_ADVERT_COUNT) return SCM(playerid, COLOR_GREY, "√é√∑√•√∞√•√§√º √≠√† √Æ√°√∫√ø√¢√´√•√≠√®√ø √ß√†√≠√ø√≤√†, √Ø√Æ√Ø√∞√Æ√°√≥√©√≤√• √Ø√Æ√ß√¶√•");
	if(strlen(params[0]) > 96) return SCM(playerid, COLOR_LIGHTGREY, "√ë√´√®√∏√™√Æ√¨ √§√´√®√≠√≠√Æ√• √Æ√°√∫√ø√¢√´√•√≠√®√•");
	new slot = -1;
	for(new i = 0; i<MAX_ADVERT_COUNT;i ++) if(!gAdvert[i][adBusy]) { slot = i; break; }
	if(slot == -1) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [070]");
	pData[playerid][pCashNumber] -= gAdvertPrice;
	UpdatePlayerData(playerid, "pCashNumber", pData[playerid][pCashNumber]);
	gAdvert[slot][adMoney] = gAdvertPrice;
	format(gAdvert[slot][adSender],24,"%s",pData[playerid][pName]);
	gAdvert[slot][adPhone] = pData[playerid][pPnumber];
	format(gAdvert[slot][adText],100,"%s",params[0]);
	gAdvert[slot][adBusy] = true;
	gAdvertCount ++;
	new mes[144];
	format(mes, sizeof mes, "√í√•√™√±√≤: %s | √é√≤√Ø√∞√†√¢√®√≤√•√´√º: %s "CGREY"| /edit", gAdvert[slot][adText], gAdvert[slot][adSender]);
	SFFM(16, 0xCC9900FF, mes);
	PlayerPlaySound(playerid, 5205, 0.0, 0.0, 0.0);
	SCMF(playerid, 0x00CC66FF, "√í√•√™√±√≤: %s", gAdvert[slot][adText]);
	SCM(playerid,-1, "√Ç√†√∏√• √Æ√°√∫√ø√¢√´√•√≠√®√• √°√ª√´√Æ √§√Æ√°√†√¢√´√•√≠√Æ √¢ √Æ√∑√•√∞√•√§√º √§√´√ø √Ø√≥√°√´√®√™√†√∂√®√®");
	return SCM(playerid,-1, "√é√±√≤√†√¢√†√©√≤√•√±√º √¢ √±√•√≤√®, √¢ √Ø√∞√Æ√≤√®√¢√≠√Æ√¨ √±√´√≥√∑√†√• √Æ√°√∫√ø√¢√´√•√≠√®√• √°√≥√§√•√≤ √≥S√≠√´√•√≠√Æ √®√ß √Æ√∑√•√∞√•√§√®");
}
CMD:edit(playerid) {
	if(pData[playerid][pMember] != 16) return SCM(playerid, COLOR_GREY, "√ù√≤√† √¥√≥√≠√™√∂√®√ø √§√Æ√±√≤√≥√Ø√≠√† √≤√Æ√´√º√™√Æ √±√Æ√≤√∞√≥√§√≠√®√™√†√¨ √ë√å√à");
	if(GetPVarInt(playerid,"adchecking_fix")) {
		gAdvert[GetPVarInt(playerid,"adchecking_fix") - 1][adCheking]=false;
		DeletePVar(playerid,"adchecking_fix");
	}
	ShowAdvertList(playerid);
	return 1;
}
CMD:spy(playerid) {
	if(pData[playerid][pMember] != 2) return SCM(playerid, COLOR_LIGHTGREY, "√î√≥√≠√™√∂√®√ø √§√Æ√±√≤√≥√Ø√≠√† √≤√Æ√´√º√™√Æ √î√Å√ê");
	if(pData[playerid][pRank] < 2) 
		return SCM(playerid,COLOR_LIGHTGREY,"√î√≥√≠√™√∂√®√ø √§√Æ√±√≤√≥√Ø√≠√† √±√Æ 2-√£√Æ √∞√†√≠√£√†");
	return SPD(playerid, 5515, DIALOG_STYLE_LIST, ""CMAIN"√å√†√±√™√®√∞√Æ√¢√™√†", 
				"{ff2200}apagar √¨√†√±√™√®√∞√Æ√¢√™√≥\n \n\
				\
				{ccff00}Tyr Kos-Anthosa\n\
				{ccff00}Kyryo Pan-Hiero\n\
				{ccff00}Tyr Vas-Venturasa\n\
				{ccff00}Administraci√≥n residente\n \n\
				\
				{0000ff}√ì√Ø√∞. Por el favor de Ros-Anthos\n\
				{0000ff}√ì√Ø√∞. por orden de Pan-Riero\n\
				{0000ff}√ì√Ø√∞. Por el favor de Vas-Venturas\n \n\
				\
				{ff6666}Columna de Ros-Anthos\n\
				{ff6666}Colinitza Pan-Riero\n\
				{ff6666}Columbia Vas-Venturasa\n \n\
				\
				{996633}Noticias de oficina\n\
				{996633}Fuerza a√©rea militar\n\
				{996633}Armada\n \n\
				\
				{FFCC66}El instalador\n\
				{ff6600}Instalaciones de informaci√≥n masiva\n\
				{009900}Grove Street\n\
				{cc00ff}The Ballas\n\
				{00CCFF}Varrios Los Aztecas\n\
				{FFCD00}Los Santos Vagos\n\
				{6666ff}The Rifa\n\
				{993366}La Cosa Nostra\n\
				{007575}ruso\n\
				{bb0000}Yakuza", 
			"Seleccione", "Cerrar");
}
CMD:listening(playerid) {
	if(pData[playerid][pMember] != 2) return SCM(playerid, COLOR_LIGHTGREY, "Funci√≥n disponible solo √î√Å√ê");
	return SPD(playerid, 474, DIALOG_STYLE_LIST, ""CMAIN"Escuchar a las organizaciones",
				"{ff2200}apagar escuchando\n \n\
				\
				{ccff00}Tyr Kos-Anthosa\n\
				{ccff00}Kyryo Pan-Hiero\n\
				{ccff00}Tyr Vas-Venturasa\n\
				{ccff00}Administraci√≥n residente\n \n\
				\
				{0000ff}√ì√Ø√∞. Por el favor de Ros-Anthos\n\
				{0000ff}√ì√Ø√∞. por orden de Pan-Riero\n\
				{0000ff}√ì√Ø√∞. Por el favor de Vas-Venturas\n \n\
				\
				{ff6666}Columna de Ros-Anthos\n\
				{ff6666}Colinitza Pan-Riero\n\
				{ff6666}Columbia Vas-Venturasa\n \n\
				\
				{996633}Noticias de oficina\n\
				{996633}Fuerza a√©rea militar\n\
				{996633}Armada\n \n\
				\
				{FFCC66}El instalador\n\
				{ff6600}Instalaciones de informaci√≥n masiva",
			"Seleccione", "Cerrar");
}
CMD:close(playerid) {
	string[0] = EOS;
	if(IsAGang(playerid)) {
		if(pData[playerid][pRank] < 9) return SCM(playerid, COLOR_LIGHTGREY, "Comunidad disponible en 9 idiomas y videos");
		switch(pData[playerid][pMember]) {
			case 12: { 
				if(b_Sklad{0} == false) {
					format(string, 144, "Klad banda fue cerrado por el juego %s", pData[playerid][pName]);
					SFFM(pData[playerid][pMember], COLOR_ERROR, string);
					b_Sklad{0} = true;
				}
				else {
					format(string, 144, "Klad banda fue abierto por el juego %s", pData[playerid][pName]);
					SFFM(pData[playerid][pMember], COLOR_MAIN, string);
					b_Sklad{0} = false;
				}
			} 
			case 13: { 
				if(b_Sklad{1} == false) {
					format(string, 144, "Klad banda fue cerrado por el juego %s", pData[playerid][pName]);
					SFFM(pData[playerid][pMember], COLOR_ERROR, string);
					b_Sklad{1} = true;
				}
				else {
					format(string, 144, "Klad banda fue abierto por el juego %s", pData[playerid][pName]);
					SFFM(pData[playerid][pMember], COLOR_MAIN, string);
					b_Sklad{1} = false;
				}
			} 
			case 15: { 
				if(b_Sklad{2} == false) {
					format(string, 144, "Klad banda fue cerrado por el juego %s", pData[playerid][pName]);
					SFFM(pData[playerid][pMember], COLOR_ERROR, string);
					b_Sklad{2} = true;
				}
				else {
					format(string, 144, "Klad banda fue abierto por el juego %s", pData[playerid][pName]);
					SFFM(pData[playerid][pMember], COLOR_MAIN, string);
					b_Sklad{2} = false;
				}
			} 
			case 17: { 
				if(b_Sklad{3} == false) {
					format(string, 144, "Klad banda fue cerrado por el juego %s", pData[playerid][pName]);
					SFFM(pData[playerid][pMember], COLOR_ERROR, string);
					b_Sklad{3} = true;
				}
				else {
					format(string, 144, "Klad banda fue abierto por el juego %s", pData[playerid][pName]);
					SFFM(pData[playerid][pMember], COLOR_MAIN, string);
					b_Sklad{3} = false;
				}
			} 
			case 18: { 
				if(b_Sklad{4} == false) {
					format(string, 144, "Klad banda fue cerrado por el juego %s", pData[playerid][pName]);
					SFFM(pData[playerid][pMember], COLOR_ERROR, string);
					b_Sklad{4} = true;
				}
				else {
					format(string, 144, "Klad banda fue abierto por el juego %s", pData[playerid][pName]);
					SFFM(pData[playerid][pMember], COLOR_MAIN, string);
					b_Sklad{4} = false;
				}
			}
		}
		foreach(new i:Player) {
			if(!pData[i][pMember]) continue;
			if(!pData[i][p_setting][3]) continue;
			if(pData[i][pMember] == pData[playerid][pMember]) PlayerPlaySound(i, 36401, 0.0, 0.0, 0.0);
		} UpdateStoreGang(pData[playerid][pMember]);
	}
	else SCM(playerid, COLOR_LIGHTGREY, "No est√°s en las prohibiciones");
	return 1;
}
CMD:pull(playerid, params[]) {
	new Float:cord_to[3]; if(!IsACop(playerid)) return SCM(playerid, COLOR_GREY, "√î√≥√≠√™√∂√®√ø √§√Æ√±√≤√≥√Ø√≠√† √≤√Æ√´√º√™√Æ √±√Æ√≤√∞√≥√§√≠√®√™√†√¨ √å√Ç√Ñ √® √î√Å√ê");
	if(pData[playerid][pRank] < 4 && pData[playerid][pMember] != 2) return SCM(playerid, COLOR_LIGHTGREY, "√à√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√• √Ω√≤√Æ√© √¥√≥√≠√™√∂√®√® √§√´√ø √å√Ç√Ñ √∞√†√ß√∞√•√∏√•√≠√Æ √± 4-√£√Æ √∞√†√≠√£√†");
	if(pData[playerid][pRank] < 2 && pData[playerid][pMember] == 2) return SCM(playerid, COLOR_LIGHTGREY, "√à√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√• √Ω√≤√Æ√© √¥√≥√≠√™√∂√®√® √§√´√ø √î√Å√ê √∞√†√ß√∞√•√∏√•√≠√Æ √± 2-√£√Æ √∞√†√≠√£√†");
	if(PlayerTied{playerid}) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Ω√≤√≥ √¥√≥√≠√™√∂√®√æ √¢ S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤");
	if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √≤√∞√†√≠√±√Ø√Æ√∞√≤√•");
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /pull [id √Ø√∞√•√±√≤√≥√Ø√≠√®√™√†]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(!ProxDetectorS(4.5, playerid, params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √±√´√®√∏√™√Æ√¨ S√≠√´√•√™√Æ √Æ√≤ √Ç√†√±");
	if(!IsPlayerInAnyVehicle(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√Æ√≤ √®√£√∞√Æ√™ √≠√• √¢ √¨√†√∏√®√≠√•");
	if(pData[params[0]][pWanted] == 0) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√Æ√≤ √®√£√∞√Æ√™ √≠√• √¢ √∞√Æ√ß√ª√±√™√•");
	GetPlayerPos(playerid, cord_to[0], cord_to[1], cord_to[2]);
	PlayerPlaySound(playerid, 1130, cord_to[0], cord_to[1], cord_to[2]);
	RemovePlayerFromVehicle(params[0]);
	ApplyAnimation(playerid, "FIGHT_E", "FIGHTKICK", 4.1, 0, 1, 1, 0, 0, 1);
	SetTimerEx("anim_pull", 800, 0, "i", playerid);
	SCMF(playerid, COLOR_BLUE, "√Ç√ª √¢√ª√°√∞√Æ√±√®√´√® √Ø√∞√•√±√≤√≥√Ø√≠√®√™√† %s √®√ß √¨√†√∏√®√≠√ª", GetName(params[0]));
	return SCMF(params[0], COLOR_BLUE, "%s %s √¢√ª√°√∞√Æ√±√®√´ √Ç√†√± √®√ß √¨√†√∏√®√≠√ª", new_rank_name[pData[playerid][pMember] - 1][pData[playerid][pRank] - 1], GetName(playerid));
}
CB: anim_pull(playerid) return ApplyAnimation(playerid, "FIGHT_E", "FIGHTKICK_B", 4.1, 0, 1, 1, 0, 0, 1);
CMD:money(playerid, params[]) {
	if(pData[playerid][pAdmin] < 2) return 1;
	string[0] = EOS;
	new text[MAX_PLAYER_NAME], bool:findnick = false;
	if(sscanf(params, "s[24]", text)) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /money [id √®√£√∞√Æ√™√† (√®√´√® √≠√®√™ √®√£√∞√Æ√™√† √Æ√¥√¥√´√†√©√≠)]");
	for(new i = 0; i < strlen(text); i ++) {
        if(text[i] >= '0' && text[i] <= '9') continue;
        findnick = true;
        break;
    }
    if(findnick == true) // √≠√®√™
    {
		mysql_format(mysql_Handle, string, 128, "SELECT `pCash`, `pBank`, `pPayCheck` FROM `accounts` WHERE `Name` = '%s'", text);
		mysql_tquery(mysql_Handle, string, "GetMoneyGetBank", "is", playerid, text);
    }
    else // id
    {
    	new idd = strval(text), total_ch;
		if(!IsPlayerConnected(idd)) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √± √≤√†√™√®√¨ ID √®√´√® √≠√®√™√Æ√¨ √≠√• √≠√†√©√§√•√≠");
		format(string, 120, "√ç√†√´√®√∑√≠√ª√• √§√•√≠√º√£√®:\t\t%d$\n√Å√†√≠√™. √±√∑¬∏√≤:\t\t\t%d$\n√Ç√∞√•√¨√•√≠√≠√ª√© √á/√è √±√∑¬∏√≤:\t\t%d$\n\n", pData[idd][pCash], pData[idd][pBank], pData[idd][pPayCheck]);
		for(new i = 0; i < _PLAYERBANK[idd]; i ++) format(string, 650, "%s√Ñ√Æ√Ø. √±√∑¬∏√≤ ¬π%i:\t\t\t%d$\n", string, i + 1, _INFO[idd][BALANCE][i]), total_ch ++; 
		if(!total_ch) format(string, 120, "√ç√†√´√®√∑√≠√ª√• √§√•√≠√º√£√®:\t\t%d$\n√Å√†√≠√™. √±√∑¬∏√≤:\t\t\t%d$\n√Ç√∞√•√¨√•√≠√≠√ª√© √á/√è √±√∑¬∏√≤:\t\t%d$\n\n√Ñ√Æ√Ø. √±√∑√•√≤√† √Æ√≤√±√≥√≤√±√≤√¢√≥√æ√≤", pData[idd][pCash], pData[idd][pBank], pData[idd][pPayCheck]);
		SPD(playerid, 0, DIALOG_STYLE_MSGBOX, GetName(idd), string, "Cerrar", "");
	}
	return 1;
}

CB: GetMoneyGetBank(playerid, j_name[]) {
	new rows, jerrer_cash, jerrer_paycheck, jerrer_bank;
	cache_get_row_count(rows);
	if(!rows) return SCM(playerid, COLOR_LIGHTGREY, "Un lote con el mismo ID o sin nombre");
	cache_get_value_name_int(0, "pCash", jerrer_cash);
	cache_get_value_name_int(0, "pBank", jerrer_bank);
	cache_get_value_name_int(0, "pPayCheck", jerrer_paycheck);

	mysql_format(mysql_Handle, string, 96, "SELECT `BALANCE` FROM `bank_acc` WHERE `OWNER` = '%s'", j_name); 
    return mysql_tquery(mysql_Handle, string, "GetMoneyShow", "dsddd", playerid, j_name, jerrer_cash, jerrer_bank, jerrer_paycheck);
}
CB: GetMoneyShow(playerid, jerr_name[], jerr_cash, jerr_bank, jerr_paycheck) {
	new rows, balance_banks;
	cache_get_row_count(rows);
	string[0] = EOS;
	format(string, 120, "Buen dinero:\t\t%d$\n√Å√†√≠√™. √±√∑¬∏√≤:\t\t\t%d$\n√Ç√∞√•√¨√•√≠√≠√ª√© √á/√è √±√∑¬∏√≤:\t\t%d$\n\n", jerr_cash, jerr_bank, jerr_paycheck);
	if(!rows) return strcat(string, "√Ñ√Æ√Ø. √±√∑√•√≤√† √Æ√≤√±√≥√≤√±√≤√¢√≥√æ√≤"), SPD(playerid, 0, DIALOG_STYLE_MSGBOX, jerr_name, string, "Cerrar", "");
	for(new i = 0; i < rows; i ++) {
		cache_get_value_name_int(i, "BALANCE", balance_banks);
        format(string, 650, "%s√Ñ√Æ√Ø. √±√∑¬∏√≤ ¬π%i:\t\t\t%d$\n", string, i + 1, balance_banks);
	}	
	return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, jerr_name, string, "Cerrar", "");
}

CMD:eat(playerid) {
	if(!GetPVarInt(playerid, "TrayInfo_Use")) return SCM(playerid, COLOR_LIGHTGREY, "no te alimentas con comida");
	DeletePVar(playerid, "TrayInfo_Use");
	if(IsPlayerAttachedObjectSlotUsed(playerid, 0)) RemovePlayerAttachedObject(playerid, 0);
	SetPlayerSpecialAction(playerid, 0);
	ClearAnimations(playerid);
	if(pData[playerid][pHungry] == 1) {
		pData[playerid][pHungry] = 0;
		UpdatePlayerData(playerid,"pHungry",0);
	}
	ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0,1);
	PlayerPlaySound(playerid, 32200, 0.0, 0.0, 0.0);
	new hour;
	gettime(hour);
	switch(hour) {
		case 0..3: MeAction(playerid, "colocar");
		case 4..11: MeAction(playerid, "empezar√°");
		case 12..17: MeAction(playerid, "aboutSNo");
		case 18..23: MeAction(playerid, "√≥√¶√®√≠√†√•√≤"); //No se traduce
	}
	new Float: hppl; GetPlayerHealth(playerid, hppl);
	new Float: u_hppl = hppl + 20.0;
	SetPlayerHealth(playerid, hppl + 20.0);
	if(u_hppl >= 99.9) SetPlayerHealth(playerid, 100.0);
	SetPlayerChatBubble(playerid, "+ 20 HP", COLOR_MAIN, 4.0, 5000);
	return 1;
}
CMD:put(playerid) {
	if(!GetPVarInt(playerid, "TrayInfo_Use")) return SCM(playerid, COLOR_LIGHTGREY, "no te alimentas con comida");
	new Float: b_pos[4];
	GetPlayerPos(playerid, b_pos[0], b_pos[1], b_pos[2]);
	GetPlayerFacingAngle(playerid, b_pos[3]);
	if(CreateTray(b_pos[0], b_pos[1], b_pos[2], b_pos[3], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid))) {
		ApplyAnimation(playerid, "CARRY", "putdwn", 4.1, 0, 1, 0, 0, 1000, 1);
		DeletePVar(playerid, "TrayInfo_Use");
		if(IsPlayerAttachedObjectSlotUsed(playerid,0)) RemovePlayerAttachedObject(playerid,0);
		SetPlayerSpecialAction(playerid, 0);
		SCM(playerid, COLOR_MAIN, "Cuando est√°s en el suelo con comida en el suelo");
	}
	else SCM(playerid, COLOR_ERROR, "Error de geometr√≠a [071]");
	return 1;
}
CMD:gwpall(playerid, params[]) {
	if(pData[playerid][pAdmin] < 4) return 1;
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /gwpall [Radio]");
	if(params[0] > 100 || params[0] < 5) return SCM(playerid, COLOR_LIGHTGREY, "Radio de 5 a 100 metros");
	new Float: position[3];
	GetPlayerPos(playerid, position[0], position[1], position[2]);
	foreach(new i:Player) {
		if(!IsPlayerInRangeOfPoint(i, params[0], position[0], position[1], position[2])) continue;
		if(playerid == i) continue;
		ResetPlayerWeapons(i);
		SCM(i, 0xCC9900FF, "El administrador te ha comprado todo el poder");
	}
	return SCMF(playerid, 0xCC9900FF, "HAS JUGADO TUS JUEGOS EN EL RADIO %d.0 √¨", params[0]);
}
CMD:gunall(playerid, params[]) {
	new Float: position[3];
	if(pData[playerid][pAdmin] < 5) return 1;
	new gunnid, ammos;
	if(!IsAFull(playerid)) {
		if(sscanf(params, "dd", params[0], params[2])) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /gunall [id √Æ√∞√≥√¶√®√ø] [√∞√†√§√®√≥√±]");
		if(params[0] < 22 || params[0] > 34) return SCM(playerid, COLOR_LIGHTGREY, "√Ñ√Æ√±√≤√≥√Ø√≠√ª id √Æ√∞√≥√¶√®√ø √± 22 √Ø√Æ 34");
		params[1] = 50;
	}
	else {
		if(sscanf(params, "ddd", params[0], params[1], params[2])) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /gunall [id √Æ√∞√≥√¶√®√ø] [√Ø√†√≤√∞√Æ√≠√ª] [√∞√†√§√®√≥√±]");
		if(params[1] < 1 || params[1] > 300) return SCM(playerid, COLOR_LIGHTGREY, "√ç√•√´√º√ß√ø √¨√•√≠√º√∏√• 1 √®√´√® √°√Æ√´√º√∏√• 300 √Ø√†√≤√∞√Æ√≠√Æ√¢");
		if(params[0] < 1 || params[0] > 46) return SCM(playerid, 0xBFBB41FF, "√Ñ√Æ√±√≤√≥√Ø√≠√ª id √Æ√∞√≥√¶√®√ø √± 1 √Ø√Æ 46");
	}
	if(params[2] > 100 || params[2] < 5) return SCM(playerid, COLOR_LIGHTGREY, "√ê√†√§√®√≥√± √Æ√≤ 5 √§√Æ 100 √¨√•√≤√∞√Æ√¢");
	ammos = params[1];
	gunnid = params[0];
	new weaponname[18];
	GetWeaponName(params[0], weaponname, 18);
	GetPlayerPos(playerid, position[0], position[1], position[2]);
	foreach(new i:Player) {
		if(!IsPlayerInRangeOfPoint(i, params[0], position[0], position[1], position[2])) continue;
		if(playerid == i) continue;
		GivePlayerWeapon(i, gunnid, ammos);
		SCMF(i, 0xCC9900FF, "%s[%d] √¢√ªS√≠√´ √¢√†√¨ %s √® %d √Ø√†√≤√∞√Æ√≠√Æ√¢", pData[playerid][pName], playerid, weaponname, ammos);
	}
	return SCMF(playerid, 0xCC9900FF, "√Ç√ª √¢√ªS√≠√´√® %s √® %d √Ø√†√≤√∞√Æ√≠√Æ√¢ √¢√±√•√¨ √¢ √∞√†√§√®√≥√±√• %d.0 √¨", weaponname, ammos, params[2]);
}
CMD:hpall(playerid, params[]) {
	if(pData[playerid][pAdmin] < 3) return 1;
	new Float: position[3], 
		str_hp[] = "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ √¢√Æ√±√±√≤√†√≠√Æ√¢√®√´ √¢√†√¨ √ß√§√Æ√∞√Æ√¢√º√•";
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /hpall [√∞√†√§√®√≥√±]");
	if(params[0] > 100 || params[0] < 5) return SCM(playerid, COLOR_LIGHTGREY, "√ê√†√§√®√≥√± √Æ√≤ 5 √§√Æ 100");
	GetPlayerPos(playerid, position[0], position[1], position[2]);
	foreach(new i:Player) {
		if(!IsPlayerInRangeOfPoint(i, params[0], position[0], position[1], position[2])) continue;
		SetPlayerHealth(i, 100.0);
		SCM(i, -1, str_hp);
	}
	return SCM(playerid, 0x66CC00FF, "√Ç√±√•√¨ √®√£√∞√Æ√™√†√¨ √¢ √≥√™√†√ß√†√≠√≠√Æ√¨ √∞√†√§√®√≥√±√• √°√ª√´√Æ √¢√Æ√±√±√≤√†√≠√Æ√¢√´√•√≠√Æ √ß√§√Æ√∞√Æ√¢√º√•");
}
CMD:helpers(playerid) {
	if(pData[playerid][pAdmin] < 1 && !pData[playerid][pHelper]) return 1;
	SCM(playerid, 0xCC3D3DFF, "√ï√•√´√Ø√•√∞√ª √¢ √±√•√≤√®:");
	foreach(new i:Player) {
		if(!pData[i][pHelper]) continue;
		SCMF(playerid, COLOR_PALEGREEN, "%s[%d]", GetName(i), i);
	}
	return 1;
}
CMD:admins(playerid)
{
	if(pData[playerid][pAdmin] < 1) return 1;
	SCM(playerid, COLOR_MAIN, "Administraci√≥n de red:");
	
	new specstr[20];
	foreach(new i:Player)
	{
		if(pData[i][pAdmin] < 1) continue;

		if(pTemp[playerid][pSpectate]) format(specstr, sizeof(specstr), "{33cc00}> /sp %i", pTemp[i][pSpectateID]);
		SCMF(playerid, COLOR_YELLOW, "%s[%d] (%i lvl)%s%s", GetName(i), i, IsAFull(i) ? 8 : pData[i][pAdmin], pTemp[i][pAFK] > AFK_SECOND ? ""CRED"AFK" : "", specstr);
	}
	return 1;
}
CMD:audiotl(playerid, params[]) {
	if(IsAFull(playerid)) {
		if(sscanf(params, "ds[200]", params[0], params[1])) return SCM(playerid, COLOR_GREY, "Usar: /audiotl [id juego] [Referencia en formato de audio (\".ogg\", \".mp3\" √® √Ø√∞.) o 0]");
		if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Qu√© juego No");
		if(!strcmp(params[1], "0")) {
			StopAudioStreamForPlayer(params[0]);
			return SCMF(playerid, COLOR_BLUE, "Traducci√≥n de audio para %s[%d] OFF", GetName(params[0]), params[0]);
		}
		PlayStream(params[0], params[1]);
		SCMF(playerid, 0x00FF00FF, "Traducci√≥n de audio para %s[%d] por referencia "CBLUE"%s {00FF00}en", GetName(params[0]), params[0], params[1]);
	}
	return 1;
}
CMD:play(playerid, params[]) {
	if(sscanf(params,"d",params[0])) {
		if(GetPVarInt(playerid, "InternetRadioEnabled")) {
			SetPVarInt(playerid, "InternetRadioEnabled", false);
			StopAudioStreamForPlayer(playerid);
			if(IsPlayerAttachedObjectSlotUsed(playerid, 0)) RemovePlayerAttachedObject(playerid, 0);
			SCM(playerid, COLOR_ERROR, "√ê√†√§√®√Æ √Æ√≤√™√´√æ√∑√•√≠√Æ");
		}
		return SPD(playerid,27593, DIALOG_STYLE_LIST,"{FFCD00}Radio Nlain", "[1] Evropa PLS\n[2] Shanson FM\n[3] Melod√≠a FM\n[4] Radio Record\n[5] Retro FM\n[6] Otra radio\n[7] Tu radio\n[8] Black Star Radio\n[9] Radio Kulutura\n{99ccff}Informaci√≥n","Seleccione", "Cerrar");
	}
	switch(params[0]) {
		case 1: PlayStream(playerid, "http://ep256.hostingradio.ru:8052/europaplus256.mp3");
		case 2: PlayStream(playerid, "http://chanson.hostingradio.ru:8041/chanson256.mp3");
		case 3: PlayStream(playerid, "http://online-radiomelodia.tavrmedia.ua/RadioMelodia.m3u");
		case 4: PlayStream(playerid, "http://air2.radiorecord.ru:805/rr_320");
		case 5: PlayStream(playerid, "http://retroserver.streamr.ru:8043/retro256.mp3");
		case 6: PlayStream(playerid, "http://dorognoe.hostingradio.ru:8000/dorognoe");
		case 7: PlayStream(playerid, "http://nashe1.hostingradio.ru/nashe-256");
		case 8: PlayStream(playerid, "https://blackstarradio.hostingradio.ru:8024/blackstarradio128.mp3?radiostatistica=radiopotok");
		case 9: PlayStream(playerid, "http://icecast.vgtrk.cdnvideo.ru/kulturafm_mp3_192kbps");
		default: return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√• /play {00cc66}[√≠√Æ√¨√•√∞ √∞√†√§√®√Æ √Æ√≤ 1 √§√Æ 9]");
	}
	SetPVarInt(playerid, "InternetRadioEnabled", true);
	SCM(playerid, COLOR_MAIN, "RADIO EN L√çNEA ENCENDIDA");
	if(GetPVarInt(playerid, "headphones_radio") != 2) {
		SetPVarInt(playerid, "headphones_radio", 1);
		new color_data;
		switch(random(5)) {
			case 0: color_data = -16777216;
			case 1: color_data = -16776961;
			case 2: color_data = -16711936;
			case 3: color_data = -65536;
			case 4: color_data = -256;
		}
		SetPlayerAttachedObject(playerid, 0, 19423, 2, 0.049999, 0.015000, 0.000000, 87.099998, -4.700028, -87.799995, 1.106000, 1.041000, 1.000000, color_data, color_data);
		SCM(playerid, COLOR_MAIN, "Para quitar las orejas, ingrese "CORANGE"/head");
	}
	return 1;
}
CMD:head(playerid) {
	if(GetPVarInt(playerid, "headphones_radio") < 2) {
		if(GetPVarInt(playerid, "InternetRadioEnabled") && IsPlayerAttachedObjectSlotUsed(playerid, 0)) 
			RemovePlayerAttachedObject(playerid, 0);
		SetPVarInt(playerid, "headphones_radio", 2);
		SCM(playerid, COLOR_ERROR, "Ahora escucha m√∫sica sin tus o√≠dos");
	}
	else {
		if(GetPVarInt(playerid, "InternetRadioEnabled")) {
			new color_data;
			switch(random(5)) {
				case 0: color_data = -16777216;
				case 1: color_data = -16776961;
				case 2: color_data = -16711936;
				case 3: color_data = -65536;
				case 4: color_data = -256;
			}
			SetPlayerAttachedObject(playerid, 0, 19423, 2, 0.049999, 0.015000, 0.000000, 87.099998, -4.700028, -87.799995, 1.106000, 1.041000, 1.000000, color_data, color_data);
		}
		SetPVarInt(playerid, "headphones_radio", 1);
		SCM(playerid, COLOR_MAIN, "Es hora de escuchar m√∫sica de tus o√≠dos");
	}
	return 1;
}
CMD:leaders(playerid) return mysql_tquery(mysql_Handle, "SELECT `Name`, `pLeader`, `pRank`, `pMember` FROM `accounts` WHERE `pMember` <> 0", "leaders_show", "i", playerid);
CMD:no(playerid) {
	if(GetPVarInt(playerid, "offer_SELLMYFLAT")) {
        new id_offer = GetPVarInt(playerid, "SELLMYFLAT_targetid");
        
        if(pData[playerid][pSex] == 1) SCMF(id_offer, COLOR_ERROR, "%s Recuperado de su software", GetName(playerid));
		else SCMF(id_offer, COLOR_ERROR, "%s Mostrado a partir de su producto", GetName(playerid));

		DeletePVar(id_offer, "cancel_act");
		DeletePVar(id_offer, "cancel_act_id");

        SetPVarInt(playerid, "offer", 9999);
        DeletePVar(playerid, "offer_SELLMYFLAT");
        DeletePVar(playerid, "SELLMYFLAT_targetid");
        DeletePVar(playerid, "SELLMYFLAT_price");

        return SCM(playerid, COLOR_ERROR, "SE LE MUESTRA DESDE EL SOPORTE");
	}
	else if(GetPVarInt(playerid, "offer_FAMILY")) {
        new id_offer = GetPVarInt(playerid, "FAMILY_targetid");
        SetPVarInt(playerid, "offer", 9999);
        DeletePVar(playerid, "offer_FAMILY");
        DeletePVar(playerid, "FAMILY_targetid");
		DeletePVar(id_offer, "cancel_act");
		DeletePVar(id_offer, "cancel_act_id");
        if(pData[playerid][pSex] == 1) SCMF(id_offer, COLOR_ERROR, "%s Recuperado de su software", GetName(playerid));
		 	else SCMF(id_offer, COLOR_ERROR, "%s Mostrado a partir de su producto", GetName(playerid));
        return SCM(playerid, COLOR_ERROR, "SE LE MUESTRA DESDE EL SOPORTE");
	}
    else if(GetPVarInt(playerid, "offer_CSEX")) {
        new id_offer = GetPVarInt(playerid, "CSEX_targetid");
        SetPVarInt(playerid, "offer", 9999);
        DeletePVar(playerid, "offer_CSEX");
        DeletePVar(playerid, "CSEX_targetid");
		DeletePVar(playerid, "CSEX_price");
		DeletePVar(id_offer, "cancel_act");
		DeletePVar(id_offer, "cancel_act_id");
        if(pData[playerid][pSex] == 1) SCMF(id_offer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
		 	else SCMF(id_offer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√†√±√º √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
        return SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√†√ß√†√´√®√±√º √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø");
	}
    else if(GetPVarInt(playerid, "sellerbiz") != 999) {
    	new seller = GetPVarInt(playerid, "sellerbiz");
        if(pData[playerid][pSex] == 1) SCMF(seller, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
        else SCMF(seller, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√†√±√º √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
        DeletePVar(seller, "cancel_act"); DeletePVar(seller, "cancel_act_id");
        SetPVarInt(playerid, "sellerbiz", 999);
        DeletePVar(playerid, "bizcost"); SetPVarInt(playerid, "offer", 9999);
        return SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√†√ß√†√´√®√±√º √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø");
    }
    else if(GetPVarInt(playerid, "Player")) {
    	new target = GetPVarInt(playerid, "Player");
    	if(pData[playerid][pSex] == 1) SCMF(target, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
        else SCMF(target, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√†√±√º √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
        DeletePVar(target, "cancel_act"); DeletePVar(target, "cancel_act_id");
        DeletePVar(playerid, "Player"); SetPVarInt(playerid, "offer", 9999);
        return SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√†√ß√†√´√®√±√º √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø");
    }
    else if(GetPVarInt(playerid, "CarOffer") != 999) {
    	new coffer = GetPVarInt(playerid, "CarOffer");
    	if(pData[playerid][pSex] == 1) SCMF(coffer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
        else SCMF(coffer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√†√±√º √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
        DeletePVar(coffer, "cancel_act"); DeletePVar(coffer, "cancel_act_id");
        SetPVarInt(playerid, "CarOffer", 999);
        DeletePVar(playerid, "CarPrice");
        DeletePVar(playerid, "CarNum"); SetPVarInt(playerid, "offer", 9999);
        return SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√†√ß√†√´√®√±√º √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø");
    }
    else if(GetPVarInt(playerid, "ProposeOffer") != 999) {
    	new proffer = GetPVarInt(playerid, "ProposeOffer");
        if(pData[playerid][pSex] == 1) SCMF(proffer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
        else SCMF(proffer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√†√±√º √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
        DeletePVar(proffer, "cancel_act"); DeletePVar(proffer, "cancel_act_id");
        SetPVarInt(playerid, "ProposeOffer", 999);
        SetPVarInt(playerid, "MarryWitness", 999); SetPVarInt(playerid, "offer", 9999);
        return SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√†√ß√†√´√®√±√º √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø");
    }
    else if(GetPVarInt(playerid, "RepairOffer") != 999) {
    	new repoffer = GetPVarInt(playerid, "RepairOffer");
        if(pData[playerid][pSex] == 1) SCMF(repoffer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
        else SCMF(repoffer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√†√±√º √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
        DeletePVar(repoffer, "cancel_act"); DeletePVar(repoffer, "cancel_act_id");
        DeletePVar(playerid,"RepairPrice");
        SetPVarInt(playerid, "RepairOffer", 999); SetPVarInt(playerid, "offer", 9999);
        return SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√†√ß√†√´√®√±√º √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø");
    }
    else if(GetPVarInt(playerid, "MarryWitnessOffer") != 999) {
    	new mwoffer = GetPVarInt(playerid, "MarryWitnessOffer");
        if(pData[playerid][pSex] == 1) SCMF(mwoffer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
        else SCMF(mwoffer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√†√±√º √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
        SetPVarInt(playerid,"MarryWitnessOffer",999); SetPVarInt(playerid, "offer", 9999);
        DeletePVar(mwoffer, "cancel_act"); DeletePVar(mwoffer, "cancel_act_id");
        return SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√†√ß√†√´√®√±√º √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø");
    }
    else if(GetPVarInt(playerid, "hProdaet") != 999) {
    	new prod = GetPVarInt(playerid, "hProdaet");
        if(pData[playerid][pSex] == 1) SCMF(prod, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
        else SCMF(prod, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√†√±√º √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
        DeletePVar(prod, "cancel_act"); DeletePVar(prod, "cancel_act_id");
        SetPVarInt(playerid,"hProdaet",999);
        DeletePVar(playerid,"hCena"); SetPVarInt(playerid, "offer", 9999);
        return SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√†√ß√†√´√®√±√º √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø");
    }
    else if(GetPVarInt(playerid, "RefillOffer") != 999) {
    	new refoffer = GetPVarInt(playerid, "RefillOffer");
        if(pData[playerid][pSex] == 1) SCMF(refoffer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
        else SCMF(refoffer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√†√±√º √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
        DeletePVar(refoffer, "cancel_act"); DeletePVar(refoffer, "cancel_act_id");
        SetPVarInt(playerid,"RefillOffer",999);
        DeletePVar(playerid,"RefillPrice"); SetPVarInt(playerid, "offer", 9999);
        return SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√†√ß√†√´√®√±√º √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø");
    }
    else if(GetPVarInt(playerid, "TicketOffer") != 999) {
    	new ticoffer = GetPVarInt(playerid, "TicketOffer");
        if(pData[playerid][pSex] == 1) SCMF(ticoffer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
        else SCMF(ticoffer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√†√±√º √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
        DeletePVar(ticoffer, "cancel_act"); DeletePVar(ticoffer, "cancel_act_id");
        SetPVarInt(playerid,"TicketOffer",999);
        DeletePVar(playerid,"TicketMoney"); SetPVarInt(playerid, "offer", 9999);
        return SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√†√ß√†√´√®√±√º √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø");
    }
    else if(GetPVarInt(playerid, "ZoneOffer") != 999) {
    	new zoffer = GetPVarInt(playerid, "ZoneOffer");
        if(pData[playerid][pSex] == 1) SCMF(zoffer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
        else SCMF(zoffer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√†√±√º √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
        DeletePVar(zoffer, "cancel_act"); DeletePVar(zoffer, "cancel_act_id");
        SetPVarInt(playerid, "ZoneOffer", 999); SetPVarInt(playerid, "offer", 9999);
        DeletePVar(playerid, "ZonePrice");
        DeletePVar(playerid, "sellzone");
        return SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√†√ß√†√´√®√±√º √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø");
    }
    else if(GetPVarInt(playerid, "LiveOfferls") != 999) {
    	new livoffer = GetPVarInt(playerid, "LiveOfferls");
        if(pData[playerid][pSex] == 1) SCMF(livoffer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
        else SCMF(livoffer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√†√±√º √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
        DeletePVar(livoffer, "cancel_act"); DeletePVar(livoffer, "cancel_act_id");
        SetPVarInt(playerid, "LiveOfferls", 999); SetPVarInt(playerid, "offer", 9999);
        return SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√†√ß√†√´√®√±√º √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø");
    }
	else if(GetPVarInt(playerid, "offer_SELLGUN")) {
		new id_offer = GetPVarInt(playerid, "SELLGUN_targetid");
		if(pData[playerid][pSex] == 1) SCMF(id_offer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
		else SCMF(id_offer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√†√±√º √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
        SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√†√ß√†√´√®√±√º √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø");
        DeletePVar(playerid, "offer_SELLGUN");
		SetPVarInt(playerid, "offer", 9999); DeletePVar(playerid, "SELLGUN_targetid"); DeletePVar(id_offer, "cancel_act"); DeletePVar(id_offer, "cancel_act_id");
		return DeletePVar(playerid, "SELLGUN_gunid"), DeletePVar(playerid, "SELLGUN_ammos"), DeletePVar(playerid, "SELLGUN_price");
	}
	else if(GetPVarInt(playerid, "offer_SELLDRUGS")) {
        new id_offer = GetPVarInt(playerid, "SELLDRUGS_targetid"); DeletePVar(playerid, "SELLDRUGS_targetid");
        if(pData[playerid][pSex] == 1) SCMF(id_offer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
		else SCMF(id_offer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√†√±√º √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid)); DeletePVar(id_offer, "cancel_act"); DeletePVar(id_offer, "cancel_act_id");
        SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√†√ß√†√´√®√±√º √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø");
        DeletePVar(playerid, "offer_SELLDRUGS");
        DeletePVar(playerid, "SELLDRUGS_price"), DeletePVar(playerid, "SELLDRUGS_count");
        return DeletePVar(playerid, "offer_SELLDRUGS"), SetPVarInt(playerid, "offer", 9999);
	}
	else if(GetPVarInt(playerid, "offer_PASS")) {
        new id_offer = GetPVarInt(playerid, "PASS_targetid"); DeletePVar(playerid, "PASS_targetid");
        if(pData[playerid][pSex] == 1) SCMF(id_offer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
		else SCMF(id_offer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√†√±√º √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid)); DeletePVar(id_offer, "cancel_act"); DeletePVar(id_offer, "cancel_act_id");
        SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√†√ß√†√´√®√±√º √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø");
        return DeletePVar(playerid, "offer_PASS"), SetPVarInt(playerid, "offer", 9999);
	}
	else if(GetPVarInt(playerid, "offer_ARMY")) {
        new id_offer = GetPVarInt(playerid, "ARMY_targetid"); DeletePVar(playerid, "ARMY_targetid");
        if(pData[playerid][pSex] == 1) SCMF(id_offer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
		else SCMF(id_offer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√†√±√º √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid)); DeletePVar(id_offer, "cancel_act"); DeletePVar(id_offer, "cancel_act_id");
        SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√†√ß√†√´√®√±√º √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø");
        return DeletePVar(playerid, "offer_ARMY"), SetPVarInt(playerid, "offer", 9999);
	}
	else if(GetPVarInt(playerid, "offer_MED")) {
        new id_offer = GetPVarInt(playerid, "MED_targetid"); DeletePVar(playerid, "MED_targetid");
        if(pData[playerid][pSex] == 1) SCMF(id_offer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
		else SCMF(id_offer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√†√±√º √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid)); DeletePVar(id_offer, "cancel_act"); DeletePVar(id_offer, "cancel_act_id");
        SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√†√ß√†√´√®√±√º √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø");
        return DeletePVar(playerid, "offer_MED"), SetPVarInt(playerid, "offer", 9999);
	}
	else if(GetPVarInt(playerid, "offer_LIC")) {
        new id_offer = GetPVarInt(playerid, "LIC_targetid"); DeletePVar(playerid, "LIC_targetid");
        if(pData[playerid][pSex] == 1) SCMF(id_offer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
		else SCMF(id_offer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√†√±√º √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid)); DeletePVar(id_offer, "cancel_act"); DeletePVar(id_offer, "cancel_act_id");
        SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√†√ß√†√´√®√±√º √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø");
        return DeletePVar(playerid, "offer_LIC"), SetPVarInt(playerid, "offer", 9999);
	}
	else if(GetPVarInt(playerid, "offer_SKILL")) {
        new id_offer = GetPVarInt(playerid, "SKILL_targetid"); DeletePVar(playerid, "SKILL_targetid");
        if(pData[playerid][pSex] == 1) SCMF(id_offer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
		else SCMF(id_offer, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√†√±√º √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid)); DeletePVar(id_offer, "cancel_act"); DeletePVar(id_offer, "cancel_act_id");
        SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√†√ß√†√´√®√±√º √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø");
        return DeletePVar(playerid, "offer_SKILL"), SetPVarInt(playerid, "offer", 9999);
	}
	else if(GetPVarInt(playerid, "newlead_offer") == 1) {
		new oid = GetPVarInt(playerid, "offer");
		if(pData[playerid][pSex] == 1) SCMF(oid, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", pData[playerid][pName]);
		else SCMF(oid, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√†√±√º √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", pData[playerid][pName]); DeletePVar(GetPVarInt(playerid, "offer"), "cancel_act"); DeletePVar(GetPVarInt(playerid, "offer"), "cancel_act_id");
		SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√†√ß√†√´√®√±√º √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø");
		return DeletePVar(playerid, "newlead_offer"), SetPVarInt(playerid, "offer", 9999);
	}
	else if(GetPVarInt(playerid, "sim_offer")) {
		new sellerid = GetPVarInt(playerid, "SIM_seller");
		DeletePVar(playerid, "sim_offer"), DeletePVar(playerid, "SIM_seller"), DeletePVar(playerid, "SIM_price"), SetPVarInt(playerid, "offer", 9999);
		if(pData[playerid][pSex] == 1) SCMF(sellerid, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", pData[playerid][pName]);
		else SCMF(sellerid, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√†√±√º √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", pData[playerid][pName]); DeletePVar(sellerid, "cancel_act"); DeletePVar(sellerid, "cancel_act_id");
		return SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√†√ß√†√´√®√±√º √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø");
	}
	else if(GetPVarInt(playerid, "csim_offer")) {
		new changerid = GetPVarInt(playerid, "√ëSIM_seller");
		DeletePVar(playerid, "csim_offer"), DeletePVar(playerid, "√ëSIM_seller"), DeletePVar(playerid, "CSIM_surcharge"), SetPVarInt(playerid, "offer", 9999), DeletePVar(playerid, "number_celler");
		if(pData[playerid][pSex] == 1) SCMF(changerid, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", pData[playerid][pName]);
		else SCMF(changerid, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√†√±√º √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", pData[playerid][pName]); DeletePVar(changerid, "cancel_act"); DeletePVar(changerid, "cancel_act_id");
		return SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√†√ß√†√´√®√±√º √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø");
	}
	else if(GetPVarInt(playerid, "ProverkaDice")) {
		if(GetPVarInt(playerid, "KostiName") < 999) {
			new kstname = GetPVarInt(playerid, "KostiName");
			DeletePVar(playerid, "ZapretDice");
			DeletePVar(kstname, "ZapretDice");
			DeletePVar(playerid, "BetType");
			SetPVarInt(playerid, "KostiName",999);
			DeletePVar(playerid, "KostiMoney");
			DeletePVar(playerid, "ProverkaDice"); DeletePVar(kstname, "cancel_act"); DeletePVar(kstname, "cancel_act_id");
			if(pData[kstname][pSex] == 1) SCMF(kstname, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√±√ø √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
			else SCMF(kstname, COLOR_ERROR, "%s √Æ√≤√™√†√ß√†√´√†√±√º √Æ√≤ √Ç√†√∏√•√£√Æ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø", GetName(playerid));
			SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√≤√™√†√ß√†√´√®√±√º √Æ√≤ √Ø√∞√•√§√´√Æ√¶√•√≠√®√ø");
		}
		return 1;
	}
	else return SCM(playerid, COLOR_GREY, "√Ç S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤ √Ç√†√¨ √≠√®√∑√•√£√Æ √≠√• √Ø√∞√•√§√´√†√£√†√æ√≤");
}
CMD:yes(playerid) {
	if(GetPVarInt(playerid, "offer_SELLMYFLAT")) {
		new 
			sflat_id = GetPVarInt(playerid, "SELLMYFLAT_targetid"), 
			sflat_price = GetPVarInt(playerid, "SELLMYFLAT_price"), 
			str_gametext[20]
		;

		DeletePVar(sflat_id, "cancel_act");
		DeletePVar(sflat_id, "cancel_act_id");

		SetPVarInt(playerid, "offer", 9999);
	    DeletePVar(playerid, "offer_SELLMYFLAT");
	    DeletePVar(playerid, "SELLMYFLAT_targetid");
	    DeletePVar(playerid, "SELLMYFLAT_price");

		if(!IsPlayerConnected(sflat_id)) return SCM(playerid, COLOR_ERROR, "√è√∞√ÆS√≠√¢√•√∂ √¢√ª√∏√•√´ √®√ß √®√£√∞√ª. √ë√§√•√´√™√† √±√Æ√∞√¢√†√≠√†");
		if(pData[playerid][pCash] < sflat_price) {
			SCM(playerid, COLOR_ERROR, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Æ√Ø√´√†√≤√ª. √ë√§√•√´√™√† √±√Æ√∞√¢√†√≠√†");
			return SCM(sflat_id, COLOR_ERROR, "√ì √Ø√Æ√™√≥√Ø√†√≤√•√´√ø √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Æ√Ø√´√†√≤√ª. √ë√§√•√´√™√† √±√Æ√∞√¢√†√≠√†");
		}
		if(pData[sflat_id][pFlat] == -1 || pData[playerid][pFlat] != -1 || pData[playerid][p_rent_flat] != -1 || pData[playerid][pHouse] != -1 || pData[playerid][pHotel] != -1) {
			SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [089]");
			return SCM(sflat_id, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [089]");
	    }

		PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
		PlayerPlaySound(sflat_id, 17000, 0.0, 0.0, 0.0);

		new flat_id = pData[sflat_id][pFlat];
		strmid(flat_info[flat_id][fl_owner], pData[playerid][pName], 0, strlen(pData[playerid][pName]), 255);
		mysql_format(mysql_Handle, string, 85, "UPDATE `flats` SET `_fl_owner` = '%s' WHERE `_fl_id` = %d", pData[playerid][pName], flat_id);
	    mysql_tquery(mysql_Handle, string);
	    pData[sflat_id][pFlat] = -1;
	    pData[playerid][pFlat] = flat_id;
	    UpdatePlayerData(sflat_id, "pFlat", -1);
	    UpdatePlayerData(playerid, "pFlat", flat_id);

		Hook_GivePlayerMoney(playerid, -sflat_price);
		Hook_GivePlayerMoney(sflat_id, sflat_price);
		format(str_gametext, 20, "~r~-%d$", sflat_price);
		GameTextForPlayer(playerid, str_gametext, 3000, 1);
		format(str_gametext, 20, "~g~+%d$", sflat_price);
		GameTextForPlayer(sflat_id, str_gametext, 3000, 1);

		if(pData[playerid][pSex] == 1) SCMF(sflat_id, COLOR_MAIN, "%s √™√≥√Ø√®√´ √Ç√†√∏√≥ √™√¢√†√∞√≤√®√∞√≥ √ß√† %d$", GetName(playerid), sflat_price);
		else SCMF(sflat_id, COLOR_MAIN, "%s √™√≥√Ø√®√´√† √Ç√†√∏√≥ √™√¢√†√∞√≤√®√∞√≥ √ß√† %d$", GetName(playerid), sflat_price);
		return SCMF(playerid, COLOR_MAIN, "√Ç√ª √™√≥√Ø√®√´√® √™√¢√†√∞√≤√®√∞√≥ ¬π%d √≥ %s √ß√† %d$", flat_id, GetName(sflat_id), sflat_price);
	}
	else if(GetPVarInt(playerid, "offer_FAMILY")) {
        new invID = GetPVarInt(playerid, "FAMILY_targetid");

        SetPVarInt(playerid, "offer", 9999);
        DeletePVar(playerid, "offer_FAMILY");
        DeletePVar(playerid, "FAMILY_targetid");
		DeletePVar(invID, "cancel_act");
		DeletePVar(invID, "cancel_act_id");

		if(!IsPlayerConnected(invID)) 
			return SCM(playerid, COLOR_ERROR, "√é√∏√®√°√™√†: √Ø√∞√•√§√´√Æ√¶√®√¢√∏√®√© √®√£√∞√Æ√™ √¢√ª√∏√•√´ √®√ß √®√£√∞√ª");
		if(pData[playerid][familyID] != -1) 
		return SCM(playerid, COLOR_ERROR, "√é√∏√®√°√™√†: √¢√ª √≥√¶√• √±√Æ√±√≤√Æ√®√≤√• √¢ √±√•√¨√º√•");

		PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
		PlayerPlaySound(invID, 17000, 0.0, 0.0, 0.0);

		new family = pData[invID][familyID];

		pData[playerid][familyID] = family;
		UpdatePlayerData(playerid,"familyID",family);
		family_info[family][_fam_members]++;
		save_family(family);

		new fr[55];
		format(fr,sizeof(fr),"[√ë√•√¨√º√ø] %s √°√ª√´ √Ø√∞√®√≠√ø√≤ √¢ √±√•√¨√º√æ",GetName(playerid));
		send_fam_mes(family,fr);

        SCMF(playerid, COLOR_BLUE, "√Ç√ª √°√ª√´√® √Ø√∞√®√≠√ø√≤√ª √¢ √±√•√¨√º√æ \"%s\"", family_info[family][_fam_name]);
        return SCM(playerid,COLOR_MAIN, "√Ç√ª √¨√Æ√¶√•√≤√• √Æ√ß√≠√†√™√Æ√¨√®√≤√º√±√ø √± √™√Æ√¨√†√≠S√≠√¨√® √®√±√Ø√Æ√´√º√ß√≥√ø "CORANGE"/mn > √ë√Ø√®√±√Æ√™ √™√Æ√¨√†√≠√§");
	}
	else if(GetPVarInt(playerid, "offer_CSEX")) {
		new cs_id = GetPVarInt(playerid, "CSEX_targetid"), cs_price = GetPVarInt(playerid, "CSEX_price"), gmt_str[30];
		SetPVarInt(playerid, "offer", 9999);
		DeletePVar(playerid, "CSEX_targetid");
		DeletePVar(playerid, "CSEX_price");
		DeletePVar(playerid, "offer_CSEX");
	    DeletePVar(cs_id, "cancel_act");
	    DeletePVar(cs_id, "cancel_act_id");
		if(!IsPlayerConnected(cs_id)) return SCM(playerid, COLOR_ERROR, "√Ç√∞√†√∑ √¢√ª√∏√•√´ √®√ß √®√£√∞√ª. √è√∞√Æ√¢√•√§√•√≠√®√• √Æ√Ø√•√∞√†√∂√®√® √Æ√≤√¨√•√≠√•√≠√Æ");
		if(pData[playerid][pCash] < cs_price) {
			SCM(playerid, COLOR_ERROR, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Æ√Ø√´√†√≤√ª √Æ√Ø√•√∞√†√∂√®√®. √è√∞√Æ√¢√•√§√•√≠√®√• √Æ√≤√¨√•√≠√•√≠√Æ");
			return SCM(cs_id, COLOR_ERROR, "√ì √Ø√†√∂√®√•√≠√≤√† √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Æ√Ø√´√†√≤√ª √Æ√Ø√•√∞√†√∂√®√®. √è√∞√Æ√¢√•√§√•√≠√®√• √Æ√≤√¨√•√≠√•√≠√Æ");
		}
		PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
		PlayerPlaySound(cs_id, 17000, 0.0, 0.0, 0.0);
		Hook_GivePlayerMoney(playerid, -cs_price);
		Hook_GivePlayerMoney(cs_id, cs_price);
		if(pData[playerid][pSex] == 1) pData[playerid][pSex] = 2;
		else pData[playerid][pSex] = 1;
		UpdatePlayerData(playerid, "pSex", pData[playerid][pSex]);
		format(gmt_str, 30, "~r~-%d$", cs_price);
		GameTextForPlayer(playerid, gmt_str, 3000, 1);
		format(gmt_str, 32, "~y~+%d$", cs_price);
		GameTextForPlayer(cs_id, gmt_str, 3000, 3);
		SCMF(cs_id, COLOR_MAIN, "√Ç√ª √Ø√∞√Æ√¢√•√´√® √Æ√Ø√•√∞√†√∂√®√æ √Ø√Æ √±√¨√•√≠√• √Ø√Æ√´√† c "CORANGE"%s "CMAIN"√ß√† %d$", GetName(playerid), cs_price);
		return SCMF(playerid, COLOR_MAIN, "√Ç√ª √Ø√∞√Æ√∏√´√® √Æ√Ø√•√∞√†√∂√®√æ √Ø√Æ √±√¨√•√≠√• √Ø√Æ√´√† √≥ √¢√∞√†√∑√† %s √ß√† "CLITEBLUE"%d$", GetName(cs_id), cs_price);
	}
	else if(GetPVarInt(playerid, "sellerbiz") != 999) {
		new seller = GetPVarInt(playerid, "sellerbiz"), price = GetPVarInt(playerid, "bizcost");
		DeletePVar(playerid, "bizcost");
	    SetPVarInt(playerid, "offer", 9999);
		DeletePVar(seller, "cancel_act"); DeletePVar(seller, "cancel_act_id");
		SetPVarInt(playerid, "sellerbiz", 999);
		if(!IsPlayerConnected(seller)) 
			return SCM(playerid, COLOR_ERROR, "√ë√§√•√´√™√† √Æ√≤√¨√•√≠√•√≠√†. √è√∞√ÆS√≠√¢√•√∂ √¢√ª√∏√•√´ √®√ß √®√£√∞√ª");
		if(pData[playerid][pCash] < price) {
			SCM(playerid, COLOR_ERROR, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Æ√Ø√´√†√≤√ª √±√≤√Æ√®√¨√Æ√±√≤√® √°√®√ß√≠√•√±√†. √ë√§√•√´√™√† √Æ√≤√¨√•√≠√•√≠√†");
			return SCM(seller, COLOR_ERROR, "√ì √Ø√Æ√™√≥√Ø√†√≤√•√´√ø √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Æ√Ø√´√†√≤√ª √±√≤√Æ√®√¨√Æ√±√≤√® √°√®√ß√≠√•√±√†. √ë√§√•√´√™√† √Æ√≤√¨√•√≠√•√≠√†");
		}
		if(pData[playerid][unikauto_Have] != 0) {
			PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
			PlayerPlaySound(seller, 17000, 0.0, 0.0, 0.0);
			Hook_GivePlayerMoney(playerid, -price);
	    	Hook_GivePlayerMoney(seller, price);
	    	SCMF(seller,COLOR_MAIN,"√Ç√ª √Ø√∞√ÆS√≠√´√® √±√¢√Æ√© √°√®√ß√≠√•√± "CYELLOW"√Ä√¢√≤√Æ√±√†√´√Æ√≠ √Ω√™√±√™√´√æ√ß√®√¢√≠√ª√µ √†√¢√≤√Æ "CMAIN"√ß√† %d$",price);
	   		SCMF(playerid,COLOR_MAIN,"√Ç√ª √™√≥√Ø√®√´√® √°√®√ß√≠√•√± "CYELLOW"√Ä√¢√≤√Æ√±√†√´√Æ√≠ √Ω√™√±√™√´√æ√ß√®√¢√≠√ª√µ √†√¢√≤√Æ "CMAIN"√ß√† %d$",price);
	        pData[playerid][unikauto_Have] = pData[seller][unikauto_Have];
	        pData[seller][unikauto_Have] = 0;
	        UpdatePlayerData(seller, "unikauto_Have", 0);
	        UpdatePlayerData(playerid, "unikauto_Have", pData[playerid][unikauto_Have]);
	        new str[110];
			format(str, sizeof(str), "√Ä√¢√≤√Æ√±√†√´√Æ√≠ √Ω√™√±√™√´√æ√ß√®√¢√≠√ª√µ √†√¢√≤√Æ\n\n{4682b4}√Ç√´√†√§√•√´√•√∂: "CWHITE"%s", pData[playerid][pName]);
			UpdateDynamic3DTextLabelText(unik3dtext, 0x33AA33FF, str);
	    	unikautoOwner = pData[playerid][pID];
	    	mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `unikautoOwner` = %d", unikautoOwner);
			return mysql_tquery(mysql_Handle, string);
		}
		if(pData[playerid][autoHave] != 0) {
			PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
			PlayerPlaySound(seller, 17000, 0.0, 0.0, 0.0);
			Hook_GivePlayerMoney(playerid, -price);
	    	Hook_GivePlayerMoney(seller, price);
	    	SCMF(seller,COLOR_MAIN,"√Ç√ª √Ø√∞√ÆS√≠√´√® √±√¢√Æ√© √°√®√ß√≠√•√± "CYELLOW"√Ä√¢√≤√Æ√¨√Æ√°√®√´√º√≠√†√ø √¥√†√°√∞√®√™√† "CMAIN"√ß√† %d$",price);
	   		SCMF(playerid,COLOR_MAIN,"√Ç√ª √™√≥√Ø√®√´√® √°√®√ß√≠√•√± "CYELLOW"√Ä√¢√≤√Æ√¨√Æ√°√®√´√º√≠√†√ø √¥√†√°√∞√®√™√† "CMAIN"√ß√† %d$",price);
	        pData[playerid][autoHave] = pData[seller][autoHave];
	        pData[seller][autoHave] = 0;
	        UpdatePlayerData(seller, "autoHave", 0);
	        UpdatePlayerData(playerid, "autoHave", pData[playerid][autoHave]);
	        new astr[90];
	    	format(astr, sizeof(astr), "√Ä√¢√≤√Æ√¨√Æ√°√®√´√º√≠√†√ø √¥√†√°√∞√®√™√†\n\n{4682b4}√Ç√´√†√§√•√´√•√∂: "CWHITE"%s", pData[playerid][pName]);
			UpdateDynamic3DTextLabelText(food_bomj3d, 0x33AA33FF, astr);
	    	autoworkOwner = pData[playerid][pID];
	    	mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `autowork_ownerid` = %d", autoworkOwner);
			return mysql_tquery(mysql_Handle, string);
		}
		if(pData[playerid][prok_have] != 0) {
			PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
			PlayerPlaySound(seller, 17000, 0.0, 0.0, 0.0);
			Hook_GivePlayerMoney(playerid, -price);
	    	Hook_GivePlayerMoney(seller, price);
	    	SCMF(seller,COLOR_MAIN,"√Ç√ª √Ø√∞√ÆS√≠√´√® √±√¢√Æ√© √°√®√ß√≠√•√± "CYELLOW"√è√≥√≠√™√≤ √Ø√∞√Æ√™√†√≤√† "CMAIN"√ß√† %d$",price);
	   		SCMF(playerid,COLOR_MAIN,"√Ç√ª √™√≥√Ø√®√´√® √°√®√ß√≠√•√± "CYELLOW"√è√≥√≠√™√≤ √Ø√∞√Æ√™√†√≤√† "CMAIN"√ß√† %d$",price);
	        pData[playerid][prok_have] = pData[seller][prok_have];
	        pData[seller][prok_have] = 0;
	        UpdatePlayerData(seller, "prok_have", 0);
	        UpdatePlayerData(playerid, "prok_have", pData[playerid][prok_have]);
	        new fmt_3d[55];
			format(fmt_3d, sizeof(fmt_3d), "√Ç√´√†√§√•√´√•√∂: "CWHITE"%s", pData[playerid][pName]);
	        if(pData[playerid][prok_have] != 0) {
				switch(pData[playerid][prok_have]) {
					case 1: {
						UpdateDynamic3DTextLabelText(prok_info_1, 0x4682B4FF, fmt_3d);
						prok1_owner = pData[playerid][pID];
						mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `prok1_owner` = %d", prok1_owner);
					}
					case 2: {
						UpdateDynamic3DTextLabelText(prok_info_2, 0x4682B4FF, fmt_3d);
						prok2_owner = pData[playerid][pID];
						mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `prok2_owner` = %d", prok2_owner);
					}
					case 3: {
						UpdateDynamic3DTextLabelText(prok_info_3, 0x4682B4FF, fmt_3d);
						prok3_owner = pData[playerid][pID];
						mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `prok3_owner` = %d", prok3_owner);
					}
					case 4: {
						UpdateDynamic3DTextLabelText(prok_info_4, 0x4682B4FF, fmt_3d);
						prok4_owner = pData[playerid][pID];
						mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `prok4_owner` = %d", prok4_owner);
					}
					case 5: {
						UpdateDynamic3DTextLabelText(prok_info_5, 0x4682B4FF, fmt_3d);
						prok5_owner = pData[playerid][pID];
						mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `prok5_owner` = %d", prok5_owner);
					}
					case 6: {
						UpdateDynamic3DTextLabelText(prok_info_6, 0x4682B4FF, fmt_3d);
						prok6_owner = pData[playerid][pID];
						mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `prok6_owner` = %d", prok6_owner);
					}
					case 7: {
						UpdateDynamic3DTextLabelText(prok_info_7, 0x4682B4FF, fmt_3d);
						prok7_owner = pData[playerid][pID];
						mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `prok7_owner` = %d", prok7_owner);
					}
				}
			}
			return mysql_tquery(mysql_Handle, string);
		}
		if(pData[playerid][kiosk_have] != 0) {
			PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
			PlayerPlaySound(seller, 17000, 0.0, 0.0, 0.0);
			Hook_GivePlayerMoney(playerid, -price);
	    	Hook_GivePlayerMoney(seller, price);
	    	SCMF(seller,COLOR_MAIN,"√Ç√ª √Ø√∞√ÆS√≠√´√® √±√¢√Æ√© √°√®√ß√≠√•√± "CYELLOW"√ä√®√Æ√±√™ "CMAIN"√ß√† %d$",price);
	   		SCMF(playerid,COLOR_MAIN,"√Ç√ª √™√≥√Ø√®√´√® √°√®√ß√≠√•√± "CYELLOW"√ä√®√Æ√±√™ "CMAIN"√ß√† %d$",price);
	        pData[playerid][kiosk_have] = pData[seller][kiosk_have];
	        pData[seller][kiosk_have] = 0;
	        UpdatePlayerData(seller, "kiosk_have", 0);
	        UpdatePlayerData(playerid, "kiosk_have", pData[playerid][kiosk_have]);
	        new fmt_3d[55];
			format(fmt_3d, sizeof(fmt_3d), "√Ç√´√†√§√•√´√•√∂: "CWHITE"%s", pData[playerid][pName]);
	        if(pData[playerid][kiosk_have] != 0) {
				switch(pData[playerid][kiosk_have]) {
					case 1: {
						UpdateDynamic3DTextLabelText(kiosk_info_1, 0x4682B4FF, fmt_3d);
						kiosk1_owner = pData[playerid][pID];
						mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `kiosk1_owner` = %d", kiosk1_owner);
					}
					case 2: {
						UpdateDynamic3DTextLabelText(kiosk_info_2, 0x4682B4FF, fmt_3d);
						kiosk2_owner = pData[playerid][pID];
						mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `kiosk2_owner` = %d", kiosk2_owner);
					}
					case 3: {
						UpdateDynamic3DTextLabelText(kiosk_info_3, 0x4682B4FF, fmt_3d);
						kiosk3_owner = pData[playerid][pID];
						mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `kiosk3_owner` = %d", kiosk3_owner);
					}
					case 4: {
						UpdateDynamic3DTextLabelText(kiosk_info_4, 0x4682B4FF, fmt_3d);
						kiosk4_owner = pData[playerid][pID];
						mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `kiosk4_owner` = %d", kiosk4_owner);
					}
				}
			}
			return mysql_tquery(mysql_Handle, string);
		}
		if(pData[playerid][food_have] != 0) {
			PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
			PlayerPlaySound(seller, 17000, 0.0, 0.0, 0.0);
			Hook_GivePlayerMoney(playerid, -price);
	    	Hook_GivePlayerMoney(seller, price);
	    	SCMF(seller,COLOR_MAIN,"√Ç√ª √Ø√∞√ÆS√≠√´√® √±√¢√Æ√© √°√®√ß√≠√•√± "CYELLOW"√ã√†√∞√•√™ √± √•√§√Æ√© "CMAIN"√ß√† %d$",price);
	   		SCMF(playerid,COLOR_MAIN,"√Ç√ª √™√≥√Ø√®√´√® √°√®√ß√≠√•√± "CYELLOW"√ã√†√∞√•√™ √± √•√§√Æ√© "CMAIN"√ß√† %d$",price);
	        pData[playerid][food_have] = pData[seller][food_have];
	        pData[seller][food_have] = 0;
	        UpdatePlayerData(seller, "food_have", 0);
	        UpdatePlayerData(playerid, "food_have", pData[playerid][food_have]);
	        new fdstr[144];
	        if(pData[playerid][food_have] == 1) {
	        	format(fdstr, sizeof(fdstr), "√ã√†√∞√•√™ √± √•√§√Æ√©\n\n{4682b4}√Ç√´√†√§√•√´√•√∂: "CWHITE"%s\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"350000$", pData[playerid][pName]);
				UpdateDynamic3DTextLabelText(food_bomj3d, 0x33AA33FF, fdstr);
	        	food1OwnerID = pData[playerid][pID];
	        	mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `food_owneracc` = %d", food1OwnerID);
	        }
	        else {
	        	format(fdstr, sizeof(fdstr), "√ã√†√∞√•√™ √± √•√§√Æ√©\n\n{4682b4}√Ç√´√†√§√•√´√•√∂: "CWHITE"%s\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"350000$", pData[playerid][pName]);
				UpdateDynamic3DTextLabelText(food_bomj3d_2, 0x33AA33FF, fdstr);
	        	food2OwnerID = pData[playerid][pID];
	        	mysql_format(mysql_Handle, string, 70, "UPDATE `otherfuncs` SET `food_owneracc_2` = %d", food2OwnerID);
	        }
			return mysql_tquery(mysql_Handle, string);
		}
	    SCMF(seller,COLOR_MAIN,"√Ç√ª √Ø√∞√ÆS√≠√´√® √±√¢√Æ√© √°√®√ß√≠√•√± "CYELLOW"%s "CMAIN"√ß√† %d$",BizInfo[pData[seller][pBusiness]][bName],price);
	    SCMF(playerid,COLOR_MAIN,"√Ç√ª √™√≥√Ø√®√´√® √°√®√ß√≠√•√± "CYELLOW"%s "CMAIN"√ß√† %d$",BizInfo[pData[seller][pBusiness]][bName],price);
	    SCM(playerid, COLOR_ORANGE, "√ç√• √ß√†√°√≥√§√º√≤√• √Ø√∞√Æ√¢√•√∞√®√≤√º, √≠√†√±√™√Æ√´√º√™√Æ √Æ√Ø√´√†√∑√•√≠ √°√®√ß√≠√•√± √® √Ø√∞√® √≠√•√Æ√°√µ√Æ√§√®√¨√Æ√±√≤√® √Æ√Ø√´√†√≤√®√≤√º √•√£√Æ");
	    strmid(BizInfo[pData[seller][pBusiness]][bOwner], pData[playerid][pName], 0, strlen(pData[playerid][pName]), 255);
	    BizInfo[pData[seller][pBusiness]][bProdOrder] = 0;
		BizInfo[pData[seller][pBusiness]][bProdOrderPrice] = 0;
	    string[0] = EOS;
	    PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
	    PlayerPlaySound(seller, 17000, 0.0, 0.0, 0.0);
	    mysql_format(mysql_Handle,string,190,"UPDATE `business` SET `bOwner` = '%s', `bProdOrder` = 0, `bProdOrderPrice` = 0 WHERE `bID` = %d",pData[playerid][pName],pData[seller][pBusiness]);
	    mysql_tquery(mysql_Handle,string);
	    Hook_GivePlayerMoney(playerid, -price);
	    Hook_GivePlayerMoney(seller, price);
	    pData[playerid][pBusiness] = pData[seller][pBusiness];
	    pData[seller][pBusiness] = -1;
	    UpdatePlayerData(seller, "pPbiskey", -1);
	    UpdatePlayerData(playerid, "pPbiskey", pData[playerid][pBusiness]);
	    return UpdateBizInfo(pData[playerid][pBusiness]);
	}
	else if(GetPVarInt(playerid, "Player")) {
		new offer = GetPVarInt(playerid, "Player");
		DeletePVar(offer, "cancel_act"); DeletePVar(offer, "cancel_act_id");
	    DeletePVar(playerid, "Player");
	   	SetPVarInt(offer, "changed_skin_mode", 2);
	    SetPVarInt(playerid, "offer", 9999);
		if(!IsPlayerConnected(offer)) 
			return SCM(playerid, COLOR_ERROR, "√ê√≥√™√Æ√¢√Æ√§√®√≤√•√´√º √¢√ª√∏√•√´ √®√ß √®√£√∞√ª. √è√∞√•√§√´√Æ√¶√•√≠√®√• √≠√•√§√•√©√±√≤√¢√®√≤√•√´√º√≠√Æ");
	    new fractionid = GetPVarInt(playerid, "pOfferFractionid") - 1;
		new name_pvar[16];
		TextDrawShowForPlayer(offer, chskin_box);
		SelectTextDraw(offer, 0x3399FFAA);
		for(new i = 0, skinid = 0; i < 16; i ++) {
			skinid = ChangeSkin[fractionid][i];
			if(!skinid) break;
			format(name_pvar, sizeof(name_pvar), "chskin_%d", i);
			SetPVarInt(offer, name_pvar, skinid);
			PlayerTextDrawSetPreviewModel(offer, chskin_td[offer][i], skinid);
			PlayerTextDrawShow(offer, chskin_td[offer][i]);
		}
	    
	    SCM(playerid, COLOR_BLUE, "√Ç√ª √Ø√∞√®√≠√ø√´√® √Ø√∞√•√§√´√Æ√¶√•√≠√®√•");
	    SCM(playerid, COLOR_BLUE, "√è√Æ√§√Æ√¶√§√®√≤√•, √Ø√Æ√™√† √∞√≥√™√Æ√¢√Æ√§√®√≤√•√´√º √¢√ª√°√•√∞√•√≤ √§√´√ø √Ç√†√± √¢√≠√•√∏√≠√Æ√±√≤√º");
	    SCMF(offer,COLOR_BLUE, "%s √Ø√∞√®√≠√®√¨√†√•√≤ √Ç√†√∏√• √Ø√∞√•√§√´√Æ√¶√•√≠√®√•", GetName(playerid));
	    
	    return SCM(offer, COLOR_BLUE, "√Ç√ª√°√•√∞√®√≤√• √¢√≠√•√∏√≠√Æ√±√≤√º √¢ √Æ√∞√£√†√≠√®√ß√†√∂√®√® √§√´√ø √®√£√∞√Æ√™√†");
	}
	else if(GetPVarInt(playerid, "CarOffer") != 999) {
		if(pData[playerid][pHotel] != -1 || pData[playerid][pFlat] != -1 || pData[playerid][have_garage] != -1) {
			new numoffer_car = GetPVarInt(playerid, "CarNum"), Float: fuel_incar;
			new Float: vpos_x, Float: vpos_y, Float: vpos_z, to_pl = GetPVarInt(playerid, "CarOffer");
			new cprice = GetPVarInt(playerid, "CarPrice");
			fuel_incar = VehInfo[house_carid[to_pl][numoffer_car]][vFuel];
			
			DeletePVar(to_pl, "cancel_act"); DeletePVar(to_pl, "cancel_act_id");
			SetPVarInt(playerid, "CarOffer", 999);
			DeletePVar(playerid, "CarPrice");
	        SetPVarInt(playerid, "offer", 9999);
			DeletePVar(playerid, "CarNum");
			if(!IsPlayerConnected(to_pl)) 
				return SCM(playerid, COLOR_ERROR, "√è√∞√ÆS√≠√¢√•√∂ √¢√ª√∏√•√´ √®√ß √®√£√∞√ª. √ë√§√•√´√™√† √Æ√≤√¨√•√≠√•√≠√†");
			pData[playerid][pCar][0] = pData[to_pl][pCar][numoffer_car];
			pData[to_pl][pCar][numoffer_car] = 0;
			Hook_GivePlayerMoney(playerid, -cprice);
			Hook_GivePlayerMoney(to_pl, cprice);
			format(string,128, "√Ç√ª √Ø√∞√ÆS√≠√´√® %s √®√£√∞√Æ√™√≥ %s √ß√† %d$",VehicleNames[pData[playerid][pCar][0] - 400], pData[playerid][pName], cprice);
			SCM(to_pl, COLOR_BLUE, string);
			format(string,128, "√Ç√ª √™√≥√Ø√®√´√® %s √≥ %s √ß√† %d$",VehicleNames[pData[playerid][pCar][0] - 400], pData[to_pl][pName], cprice);
			SCM(playerid, COLOR_BLUE, string);
			PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
			PlayerPlaySound(to_pl, 17000, 0.0, 0.0, 0.0);
			pData[to_pl][t_wheel][numoffer_car] = 0;
			pData[to_pl][t_neon_num][numoffer_car] = -1;
			pData[playerid][Un_CarType][0] = pData[to_pl][Un_CarType][numoffer_car];
			pData[to_pl][Un_CarType][numoffer_car] = 0;
			pData[to_pl][t_hydraulics][numoffer_car] = 0;
			pData[to_pl][t_stereo][numoffer_car] = 0;
			pData[to_pl][t_paintjob][numoffer_car] = -1;
			pData[playerid][t_color_1][0] = pData[to_pl][t_color_1][numoffer_car];
			pData[playerid][t_color_2][0] = pData[to_pl][t_color_2][numoffer_car];
			format(num_plate[playerid][0], 16, num_plate[to_pl][numoffer_car]);
			strmid(num_plate[to_pl][numoffer_car], "None", 0, strlen("None"), 255);
			pData[to_pl][t_color_1][numoffer_car] = -1;
			pData[to_pl][t_color_2][numoffer_car] = -1;

			switch(numoffer_car) {
				case 0: {
					strmid(p_car_charact_1[to_pl], "0, 0, 0, 0, 0, 0, 0", 0, 20, 255);
					UpdatePlayerDataEx(to_pl, "p_car_charact_1", "0, 0, 0, 0, 0, 0, 0");
					UpdatePlayerData(to_pl, "Un_CarType_1", 0);
					UpdatePlayerData(to_pl, "t_wheel_car_1", 0);
					UpdatePlayerData(to_pl, "t_hydraulics_car_1", 0);
					UpdatePlayerData(to_pl, "t_neon_num_1", -1);
					UpdatePlayerData(to_pl, "t_stereo_car_1", 0);
					UpdatePlayerData(to_pl, "t_paintjob_car_1", -1);
					UpdatePlayerData(to_pl, "t_color_1_1", -1);
					UpdatePlayerData(to_pl, "t_color_2_1", -1);
					UpdatePlayerData(to_pl, "p_car_cash_1", 0);
					UpdatePlayerData(to_pl, "pCar", 0);
					UpdatePlayerDataEx(to_pl, "num_plate_1", "None");
				}
				case 1: {
					strmid(p_car_charact_3[to_pl], "0, 0, 0, 0, 0, 0, 0", 0, 20, 255);
					UpdatePlayerDataEx(to_pl, "p_car_charact_2", "0, 0, 0, 0, 0, 0, 0");
					UpdatePlayerData(to_pl, "Un_CarType_2", 0);
					UpdatePlayerData(to_pl, "t_wheel_car_2", 0);
					UpdatePlayerData(to_pl, "t_hydraulics_car_2", 0);
					UpdatePlayerData(to_pl, "t_stereo_car_2", 0);
					UpdatePlayerData(to_pl, "t_neon_num_2", -1);
					UpdatePlayerData(to_pl, "t_paintjob_car_2", -1);
					UpdatePlayerData(to_pl, "t_color_1_2", -1);
					UpdatePlayerData(to_pl, "t_color_2_2", -1);
					UpdatePlayerData(to_pl, "p_car_cash_2", 0);
					UpdatePlayerData(to_pl, "pCar2", 0);
					UpdatePlayerDataEx(to_pl, "num_plate_2", "None");
				}
				case 2: {
					strmid(p_car_charact_3[to_pl], "0, 0, 0, 0, 0, 0, 0", 0, 20, 255);
					UpdatePlayerDataEx(to_pl, "p_car_charact_3", "0, 0, 0, 0, 0, 0, 0");
					UpdatePlayerData(to_pl, "Un_CarType_3", 0);
					UpdatePlayerData(to_pl, "t_neon_num_3", -1);
					UpdatePlayerData(to_pl, "t_wheel_car_3", 0);
					UpdatePlayerData(to_pl, "t_hydraulics_car_3", 0);
					UpdatePlayerData(to_pl, "t_stereo_car_3", 0);
					UpdatePlayerData(to_pl, "t_paintjob_car_3", -1);
					UpdatePlayerData(to_pl, "t_color_1_3", -1);
					UpdatePlayerData(to_pl, "t_color_2_3", -1);
					UpdatePlayerData(to_pl, "p_car_cash_3", 0);
					UpdatePlayerData(to_pl, "pCar3", 0);
					UpdatePlayerDataEx(to_pl, "num_plate_3", "None");
				}
			}
			UpdatePlayerData(playerid, "pCar", pData[playerid][pCar][0]);
			if(house_carid[playerid][0] != 0) {
				DestroyVehicle(house_carid[playerid][0]);
				house_carid[playerid][0] = 0;
			}
			pData[playerid][p_car_cash][0] = pData[to_pl][p_car_cash][numoffer_car];
			UpdatePlayerData(playerid, "Un_CarType_1", pData[playerid][Un_CarType][0]);
			UpdatePlayerDataEx(playerid, "num_plate_1", num_plate[playerid][0]);
			UpdatePlayerData(playerid, "t_color_1_1", pData[playerid][t_color_1][0]);
			UpdatePlayerData(playerid, "t_color_2_1", pData[playerid][t_color_2][0]);
			UpdatePlayerData(playerid, "p_car_cash_1", pData[playerid][p_car_cash][0]);
			pData[to_pl][p_car_cash][numoffer_car] = 0;
			pData[playerid][FuelCar][0] = floatround(fuel_incar, floatround_ceil);
			LoadCarPlayer(playerid, 1);
			new Float: zangle;
			new car_id = house_carid[to_pl][numoffer_car];
			GetVehicleZAngle(car_id, zangle);
			GetVehiclePos(car_id, vpos_x, vpos_y, vpos_z);
			if(car_id != 0) {
				DestroyVehicle(car_id);
				house_carid[to_pl][numoffer_car] = 0;
			}
			SetVehiclePos(house_carid[playerid][0], vpos_x, vpos_y, vpos_z);
			SetVehicleZAngle(house_carid[playerid][0], zangle);
			SetVehicleVirtualWorld(house_carid[playerid][0], GetPlayerVirtualWorld(playerid));
			LinkVehicleToInterior(house_carid[playerid][0], GetPlayerInterior(playerid));
		}
	    else SPD(playerid, 711, DIALOG_STYLE_TABLIST_HEADERS, ""CLITEBLUE"√Ç√ª√°√•√∞√®√≤√• √±√´√Æ√≤ √§√´√ø √†√¢√≤√Æ√¨√Æ√°√®√´√ø", ""CGREY"√è√∞√®√¨√•√∑√†√≠√®√•: √Ø√∞√•√§√ª√§√≥√π√®√© √†√¢√≤√Æ√¨√Æ√°√®√´√º √°√≥√§√•√≤ √ß√†√¨√•√≠¬∏√≠\n"CWHITE"√è√•√∞√¢√ª√©\n√Ç√≤√Æ√∞√Æ√©\n√í√∞√•√≤√®√©", "Seleccione", "Cerrar");
		
		return 1;
	}
	else if(GetPVarInt(playerid, "ProposeOffer") != 999) {
		new propoffer = GetPVarInt(playerid, "ProposeOffer");
		SetPVarInt(playerid, "ProposeOffer", 999);
	    SetPVarInt(playerid, "MarryWitness", 999);
	    SetPVarInt(playerid, "offer", 9999);
	    DeletePVar(propoffer, "cancel_act"); DeletePVar(propoffer, "cancel_act_id");
		if(!IsPlayerConnected(propoffer)) 
			return SCM(playerid, COLOR_ERROR, "√à√£√∞√Æ√™ √¢√ª√∏√•√´ √®√ß √®√£√∞√ª. √è√∞√•√§√´√Æ√¶√•√≠√®√• √≠√•√§√•√©√±√≤√¢√®√≤√•√´√º√≠√Æ");

	    format(string,70, "%s √® %s √¢√±√≤√≥√Ø√®√´√® √¢ √°√∞√†√™", pData[propoffer][pName], pData[playerid][pName]);
	    SCMTA(0xCC33FFFF,string);
	    Hook_GivePlayerMoney(propoffer, -20000);
	    GameTextForPlayer(propoffer, "~r~-20000$", 3000, 1);
	    pData[playerid][pMarried] = 1;
	    pData[propoffer][pMarried] = 1;
	    strmid(pData[playerid][pFamilyName], pData[propoffer][pName], 0, strlen(pData[propoffer][pName]), 255), UpdatePlayerDataEx(playerid, "pFamilyName", pData[playerid][pFamilyName]);
	    strmid(pData[propoffer][pFamilyName], pData[playerid][pName], 0, strlen(pData[playerid][pName]), 255), UpdatePlayerDataEx(propoffer, "pFamilyName", pData[propoffer][pFamilyName]);
	    UpdatePlayerData(playerid, "pMarried", 1);
	    PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
	    return UpdatePlayerData(propoffer, "pMarried", 1);
	}
	else if(GetPVarInt(playerid, "RepairOffer") != 999) {
		new reproffer = GetPVarInt(playerid, "RepairOffer"), rprice = GetPVarInt(playerid, "RepairPrice");
		SetPVarInt(playerid, "RepairOffer", 999);
	    DeletePVar(playerid, "RepairPrice");
	    SetPVarInt(playerid, "offer", 9999);
	    DeletePVar(reproffer, "cancel_act"); DeletePVar(reproffer, "cancel_act_id");
	    if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [057]");
	    if(!IsPlayerConnected(reproffer)) 
			return SCM(playerid, COLOR_ERROR, "√å√•√µ√†√≠√®√™ √¢√ª√∏√•√´ √®√ß √®√£√∞√ª. √è√∞√•√§√´√Æ√¶√•√≠√®√• √≠√•√§√•√©√±√≤√¢√®√≤√•√´√º√≠√Æ");
		if(pData[playerid][pCash] < rprice) {
			SCM(playerid, COLOR_ERROR, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Æ√Ø√´√†√≤√ª √±√≤√Æ√®√¨√Æ√±√≤√® √∞√•√¨√Æ√≠√≤√†. √ë√§√•√´√™√† √Æ√≤√¨√•√≠√•√≠√†");
			return SCM(reproffer, COLOR_ERROR, "√ì √¢√Æ√§√®√≤√•√´√ø √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Æ√Ø√´√†√≤√ª √±√≤√Æ√®√¨√Æ√±√≤√® √∞√•√¨√Æ√≠√≤√†. √ë√§√•√´√™√† √Æ√≤√¨√•√≠√•√≠√†");
		}
	    new veh = GetPlayerVehicleID(playerid);
	    RepairVehicle(veh);
	    format(string,90, "√å√•√µ√†√≠√®√™ %s √Ø√Æ√∑√®√≠√®√´ √¢√†√∏√≥ √¨√†√∏√®√≠√≥ √ß√† %d$",pData[reproffer][pName], rprice);
	    SCM(playerid, COLOR_BLUE, string);
	    format(string,80, "√Ç√ª √Ø√Æ√∑√®√≠√®√´√® √†√¢√≤√Æ√¨√Æ√°√®√´√º %s √ß√† %d$",pData[playerid][pName], rprice);
	    SCM(reproffer, COLOR_BLUE, string);
	    PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
	    Hook_GivePlayerMoney(playerid, -rprice);
	    return Hook_GivePlayerMoney(reproffer, rprice);
	}
	else if(GetPVarInt(playerid, "MarryWitnessOffer") != 999) {
		new marroffer = GetPVarInt(playerid, "MarryWitnessOffer");
		if(!IsPlayerConnected(marroffer)) 
			return SCM(playerid, COLOR_ERROR, "√à√£√∞√Æ√™ √¢√ª√∏√•√´ √®√ß √®√£√∞√ª. √è√∞√•√§√´√Æ√¶√•√≠√®√• √≠√•√§√•√©√±√≤√¢√®√≤√•√´√º√≠√Æ");
	    format(string,85, "√Ç√ª √Ø√∞√®√≠√ø√´√® √Ø√∞√•√§√´√Æ√¶√•√≠√®√• %s √°√ª√≤√º √±√¢√®√§√•√≤√•√´√•√¨ √≠√† √±√¢√†√§√º√°√•", pData[marroffer][pName]);
	    SCM(playerid, COLOR_BLUE, string);
	    format(string,80, "%s √±√Æ√£√´√†√±√®√´√±√ø √°√ª√≤√º √¢√†√∏√®√¨ √±√¢√®√§√•√≤√•√´√•√¨ √≠√† √±√¢√†√§√º√°√•", pData[playerid][pName]);
	    SetPVarInt(marroffer, "MarryWitness", playerid);
	    SetPVarInt(playerid, "MarryWitnessOffer", 999);
	    SetPVarInt(playerid, "offer", 9999);
	    PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
	    SCM(marroffer, COLOR_BLUE, string);
	    DeletePVar(marroffer, "cancel_act");
	    return DeletePVar(marroffer, "cancel_act_id");
	}
	else if(GetPVarInt(playerid, "hProdaet") != 999) {
		new sellerhome = GetPVarInt(playerid, "hProdaet");
	    new house = pData[sellerhome][pHouse];
	    new nprice = GetPVarInt(playerid, "hCena");
	    Hook_GivePlayerMoney(playerid, -nprice);
	    DeletePVar(sellerhome, "cancel_act"); DeletePVar(sellerhome, "cancel_act_id");
	    SetPVarInt(playerid, "hProdaet", 999);
	    SetPVarInt(playerid, "offer", 9999);
	    DeletePVar(playerid, "hCena");
	    if(!IsPlayerConnected(sellerhome)) 
			return SCM(playerid, COLOR_ERROR, "√è√∞√ÆS√≠√¢√•√∂ √¢√ª√∏√•√´ √®√ß √®√£√∞√ª. √ë√§√•√´√™√† √Æ√≤√¨√•√≠√•√≠√†");
		if(pData[playerid][pCash] < nprice) {
			SCM(playerid, COLOR_ERROR, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Æ√Ø√´√†√≤√ª. √ë√§√•√´√™√† √Æ√≤√¨√•√≠√•√≠√†");
			return SCM(sellerhome, COLOR_ERROR, "√ì √Ø√Æ√™√≥√Ø√†√≤√•√´√ø √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Æ√Ø√´√†√≤√ª. √ë√§√•√´√™√† √Æ√≤√¨√•√≠√•√≠√†");
		}

		if(pData[sellerhome][pHouse] == -1 || pData[playerid][pFlat] != -1 || pData[playerid][p_rent_flat] != -1 || pData[playerid][pHouse] != -1 || pData[playerid][pHotel] != -1) {
			SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [088]");
			return SCM(sellerhome, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [088]");
	    }

	    pData[playerid][pHouse] = pData[sellerhome][pHouse];
	    pData[sellerhome][pHouse] = -1;
	    new gmt_sellh[60]; format(gmt_sellh, 60, "~r~-%d$", nprice);
	    GameTextForPlayer(playerid, gmt_sellh, 3000, 1);
	    UpdatePlayerData(playerid, "pPhousekey", pData[playerid][pHouse]);
	    UpdatePlayerData(sellerhome, "pPhousekey", -1);
	    strmid(HouseInfo[house][hOwner], pData[playerid][pName], 0, strlen(pData[playerid][pName]), 255);
	    SCMF(playerid,COLOR_MAIN,"√Ç√ª √™√≥√Ø√®√´√® √§√Æ√¨ √≥ %s √ß√† %d$",pData[sellerhome][pName],nprice);
	    PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
	    updatetex_home(pData[playerid][pHouse]);
	    SCM(playerid, COLOR_ORANGE, "√ç√• √ß√†√°√≥√§√º√≤√• √Ø√∞√Æ√¢√•√∞√®√≤√º, √≠√†√±√™√Æ√´√º√™√Æ √Æ√Ø√´√†√∑√•√≠ √§√Æ√¨ √® √Ø√∞√® √≠√•√Æ√°√µ√Æ√§√®√¨√Æ√±√≤√® √Æ√Ø√´√†√≤√®√≤√º √•√£√Æ");
	    SCMF(sellerhome,COLOR_MAIN,"√Ç√ª √Ø√∞√ÆS√≠√´√® √§√Æ√¨ %s √ß√† %d$",pData[playerid][pName],nprice);

	    new string_query[160];
		for(new i = 0; i < 4; i++) 
			HouseInfo[house][hCar][i] = HouseInfo[house][hOrigCar][i];
		mysql_format(mysql_Handle, string_query, sizeof(string_query), "UPDATE `house` SET `hCarx` = `hOrigCarx`, `hCary` = `hOrigCary`, `hCarz` = `hOrigCarz`, `hCarc` = `hOrigCarc` WHERE `hID` = %d", house);
		mysql_tquery(mysql_Handle, string_query);

	    new h = pData[playerid][pHouse];
	    for(new i =0;i<total_count_mebel;i++) {
	    	if(mebel_info[i][mHouseID] != h) continue;
	    	DestroyDynamicObject(mebel_info[i][mObjectID]);
	    }
	    new query[60];
		mysql_format(mysql_Handle, query, sizeof(query), "DELETE FROM `ownmebel` WHERE `homeOwn`=%i", h);
		mysql_tquery(mysql_Handle, query);

	    new return_moneyul;
	    if(HouseInfo[house][hSafe]) return_moneyul += 30000;
	    if(HouseInfo[house][hADoor]) return_moneyul += 20000;
	    if(HouseInfo[house][hPool]) return_moneyul += 110000;
	    if(HouseInfo[house][hSub]) return_moneyul += 40000;
	    new ppr, grg = return_moneyul / 100 * 60;
	    if(return_moneyul > 0) ppr = nprice + grg, SCMF(sellerhome, COLOR_LITEBLUE, "√Ç√†√¨ √°√ª√´√Æ √¢√Æ√ß√¢√∞√†√π√•√≠√Æ "CMAIN"60 √Ø√∞√Æ√∂√•√≠√≤√Æ√¢ "CLITEBLUE"√±√Æ √±√≤√Æ√®√¨√Æ√±√≤√® √™√≥√Ø√´√•√≠√≠√ª√µ √¢ √§√Æ√¨√• √≥√´√≥√∑√∏√•√≠√®√© (%d$)", grg);
	    else ppr = nprice;
	    format(gmt_sellh, 60, "~g~+%d$", ppr);
	    GameTextForPlayer(sellerhome, gmt_sellh, 3000, 1);
	    Hook_GivePlayerMoney(sellerhome, ppr);
	    if(house_carid[sellerhome][0] != 0 || house_carid[sellerhome][1] != 0 || house_carid[sellerhome][2] != 0) {
	        DestroyVehicle(house_carid[sellerhome][0]), house_carid[sellerhome][0] = 0;
	        DestroyVehicle(house_carid[sellerhome][1]), house_carid[sellerhome][1] = 0;
	        DestroyVehicle(house_carid[sellerhome][2]), house_carid[sellerhome][2] = 0;
	    }
	    HouseInfo[house][hSafe] = 0;
	    HouseInfo[house][hADoor] = 0;
	    
	    HouseInfo[house][hSub] = 0;
	    HouseInfo[house][hPool] = 0;
	    new mysql_tquery_t[256];
	    mysql_format(mysql_Handle,mysql_tquery_t, sizeof(mysql_tquery_t), "UPDATE `house` SET `hSafe` = '0', `hADoor` = '0', `hSub` = '0', `hPool` = '0', `hOwner` = '%s' WHERE hID = %i",pData[playerid][pName],pData[playerid][pHouse]);
	    return mysql_tquery(mysql_Handle, mysql_tquery_t);
	}
	else if(GetPVarInt(playerid, "RefillOffer") != 999) {
		new roffer = GetPVarInt(playerid, "RefillOffer");
		new rfprice = GetPVarInt(playerid, "RefillPrice");
	    new car = GetPlayerVehicleID(playerid);
	    SetPVarInt(playerid, "offer", 9999);
	    DeletePVar(roffer, "cancel_act"); DeletePVar(roffer, "cancel_act_id");
	    SetPVarInt(playerid,"RefillOffer",999);
	    DeletePVar(playerid,"RefillPrice");
	    if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [058]");
	    if(!IsPlayerConnected(roffer)) 
			return SCM(playerid, COLOR_ERROR, "√å√•√µ√†√≠√®√™ √¢√ª√∏√•√´ √®√ß √®√£√∞√ª. √è√∞√•√§√´√Æ√¶√•√≠√®√• √≠√•√§√•√©√±√≤√¢√®√≤√•√´√º√≠√Æ");
		if(pData[playerid][pCash] < rfprice) {
			SCM(playerid, COLOR_ERROR, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Æ√Ø√´√†√≤√ª √±√≤√Æ√®√¨√Æ√±√≤√® √ß√†√Ø√∞√†√¢√™√®. √ë√§√•√´√™√† √Æ√≤√¨√•√≠√•√≠√†");
			return SCM(roffer, COLOR_ERROR, "√ì √¢√Æ√§√®√≤√•√´√ø √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Æ√Ø√´√†√≤√ª √±√≤√Æ√®√¨√Æ√±√≤√® √ß√†√Ø√∞√†√¢√™√®. √ë√§√•√´√™√† √Æ√≤√¨√•√≠√•√≠√†");
		}
		new f = GetPVarInt(playerid, "ContractMechanic");
		if(Filling[f][fBenz] < 100)
		{
			SCM(playerid, COLOR_ERROR, "√ç√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √≤√Æ√Ø√´√®√¢√†. √ë√§√•√´√™√† √Æ√≤√¨√•√≠√•√≠√†");
			return SCM(roffer, COLOR_ERROR, "√ç√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √≤√Æ√Ø√´√®√¢√†. √ë√§√•√´√™√† √Æ√≤√¨√•√≠√•√≠√†");
		}
	    format(string,85, "√å√•√µ√†√≠√®√™ %s √ß√†√Ø√∞√†√¢√®√´ √¢√†√∏√≥ √¨√†√∏√®√≠√≥ √ß√† %d$",pData[roffer][pName],rfprice);
	    SCM(playerid, COLOR_BLUE, string);
	    format(string,85, "√Ç√ª √ß√†√Ø√∞√†√¢√®√´√® √¨√†√∏√®√≠√≥ √®√£√∞√Æ√™√† %s √ß√† %d$",pData[playerid][pName],rfprice);
	    SCM(roffer, COLOR_BLUE, string);
	    Hook_GivePlayerMoney(playerid, -rfprice);
	    PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
	    if(GetPVarInt(playerid, "ContractMechanic") > 0) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± √≥√¶√• √Ø√Æ√§√Ø√®√±√†√≠ √™√Æ√≠√≤√∞√†√™√≤ √± √ß√†√Ø√∞√†√¢√™√Æ√©");
		
		Filling[f][fBankMoney] += rfprice;
		UpdateFuelInfo(playerid, "fBankMoney", Filling[f][fBankMoney]);
		Hook_GivePlayerMoney(roffer, Filling[f][fPriceBenz] * 100 / 5);
		Filling[f][fBenz] -= 100;
		UpdateFuelInfo(playerid, "fBenz", Filling[f][fBenz]);
	    VehInfo[car][vFuel] = 100.0;
	    savefuel_cars(playerid, car);
	    return 1;
	}
	else if(GetPVarInt(playerid, "TicketOffer") != 999) {
		new tickoffer = GetPVarInt(playerid, "TicketOffer");
		new tick_price = GetPVarInt(playerid, "TicketMoney");
		SetPVarInt(playerid, "offer", 9999);
	    DeletePVar(tickoffer, "cancel_act"); DeletePVar(tickoffer, "cancel_act_id");
	    SetPVarInt(playerid,"TicketOffer",999);
	    DeletePVar(playerid,"TicketMoney");
		if(!IsPlayerConnected(tickoffer)) 
			return SCM(playerid, COLOR_ERROR, "√ë√Æ√≤√∞√≥√§√≠√®√™ √¢√ª√∏√•√´ √®√ß √®√£√∞√ª. √è√∞√•√§√´√Æ√¶√•√≠√®√• √≠√•√§√•√©√±√≤√¢√®√≤√•√´√º√≠√Æ");
		if(pData[playerid][pCash] < tick_price) {
			SCM(playerid, COLOR_ERROR, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Æ√Ø√´√†√≤√ª √±√≤√Æ√®√¨√Æ√±√≤√® √∏√≤√∞√†√¥√†. √ë√§√•√´√™√† √Æ√≤√¨√•√≠√•√≠√†");
			return SCM(tickoffer, COLOR_ERROR, "√ì √®√£√∞√Æ√™√† √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Æ√Ø√´√†√≤√ª √∏√≤√∞√†√¥√†. √ë√§√•√´√™√† √Æ√≤√¨√•√≠√•√≠√†");
		}
	    format(string,128, "√Ç√ª √Æ√Ø√´√†√≤√®√´√® √∏√≤√∞√†√¥ √¢ √∞√†√ß√¨√•√∞√• %d$ √±√Æ√≤√∞√≥√§√≠√®√™√≥ %s", tick_price, pData[tickoffer][pName]);
	    SCM(playerid, COLOR_BLUE, string);
	    format(string,128, "%s √Æ√Ø√´√†√≤√®√´ √∏√≤√∞√†√¥ √¢ √∞√†√ß√¨√•√∞√• %d$", pData[playerid][pName], tick_price);
	    Hook_GivePlayerMoney(playerid, -tick_price);
	    PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
	    return SCM(tickoffer, COLOR_BLUE, string);
	}
	else if(GetPVarInt(playerid, "ZoneOffer") != 999) {
		new zo_offer = GetPVarInt(playerid, "ZoneOffer"), 
		zoprice = GetPVarInt(playerid, "ZonePrice");
		SetPVarInt(playerid, "ZoneOffer", 999);
	    DeletePVar(playerid, "ZonePrice");
	    SetPVarInt(playerid, "offer", 9999);
	    DeletePVar(zo_offer, "cancel_act"); DeletePVar(zo_offer, "cancel_act_id");
	    DeletePVar(playerid, "sellzone");
	    if(!IsPlayerConnected(zo_offer)) 
			return SCM(playerid, COLOR_ERROR, "√à√£√∞√Æ√™ √¢√ª√∏√•√´ √®√ß √®√£√∞√ª. √è√∞√•√§√´√Æ√¶√•√≠√®√• √≠√•√§√•√©√±√≤√¢√®√≤√•√´√º√≠√Æ");
		if(pData[playerid][pCash] < zoprice) {
			SCM(playerid, COLOR_ERROR, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Æ√Ø√´√†√≤√ª. √ë√§√•√´√™√† √Æ√≤√¨√•√≠√•√≠√†");
			return SCM(zo_offer, COLOR_ERROR, "√ì √®√£√∞√Æ√™√† √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Æ√Ø√´√†√≤√ª. √ë√§√•√´√™√† √Æ√≤√¨√•√≠√•√≠√†");
		}
	    for(new i = 0; i < sizeof(GZInfo); i ++) {
	        if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3])) {
	            frac_gangzone[GZInfo[i][gFrakVlad]]--;
	            frac_gangzone[pData[playerid][pMember]]++;
	            GZInfo[i][gFrakVlad] = pData[playerid][pMember];
	            GangZoneStopFlashForAll(GZInfo[i][gID]);
	            GangZoneHideForAll(GZInfo[i][gID]);
	            GangZoneShowForAll(GZInfo[i][gID],GetGangZoneColor(i));
	            SaveGZ(i);
	        }
	    }
	    format(string,70, "√Ç√ª √™√≥√Ø√®√´√® √≤√•√∞√∞√®√≤√Æ√∞√®√æ √ß√† %d$", zoprice);
	    SCM(playerid, COLOR_BLUE, string);
	    format(string,70, "√Ç√ª √Ø√∞√ÆS√≠√´√® √≤√•√∞√∞√®√≤√Æ√∞√®√æ √ß√† %d$",zoprice);
	    SCM(zo_offer, COLOR_BLUE, string);
	    Hook_GivePlayerMoney(playerid, -zoprice);
	    format(string, 24, "~r~-%d$", zoprice);
	    GameTextForPlayer(playerid, string, 3000, 1);
	    format(string, 24, "~g~+%d$", zoprice);
	    GameTextForPlayer(zo_offer, string, 3000, 1);
	    PlayerPlaySound(zo_offer, 17000, 0.0, 0.0, 0.0);
	    PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
	    return Hook_GivePlayerMoney(zo_offer, zoprice);
	}
	else if(GetPVarInt(playerid, "offer_SELLGUN")) {
		new s_id = GetPVarInt(playerid, "SELLGUN_targetid"), s_gunid = GetPVarInt(playerid, "SELLGUN_gunid"), gun_str[64],
		s_price = GetPVarInt(playerid, "SELLGUN_price"), s_ammos = GetPVarInt(playerid, "SELLGUN_ammos"), str_sgun[20];
		new ssammos = GetPlayerAmmo(s_id) - s_ammos;
		SetPVarInt(playerid, "offer", 9999); DeletePVar(playerid, "SELLGUN_targetid");
		DeletePVar(s_id, "cancel_act"); DeletePVar(s_id, "cancel_act_id");
		DeletePVar(playerid, "offer_SELLGUN");
		DeletePVar(playerid, "SELLGUN_gunid"); DeletePVar(playerid, "SELLGUN_ammos"); DeletePVar(playerid, "SELLGUN_price");
		if(!IsPlayerConnected(s_id)) return SCM(playerid, COLOR_ERROR, "√è√∞√ÆS√≠√¢√•√∂ √¢√ª√∏√•√´ √®√ß √®√£√∞√ª. √ë√§√•√´√™√† √±√Æ√∞√¢√†√≠√†");
		if(s_gunid != GetPlayerWeapon(s_id)) return SCM(playerid, COLOR_ERROR, "√è√∞√ÆS√≠√¢√•√∂ √≥√°√∞√†√´ √Æ√∞√≥√¶√®√•. √ë√§√•√´√™√† √±√Æ√∞√¢√†√≠√†"), SCM(s_id, COLOR_ERROR, "√Ç√ª √≥√°√∞√†√´√® √Æ√∞√≥√¶√®√• √®√ß √∞√≥√™. √ë√§√•√´√™√† √±√Æ√∞√¢√†√≠√†");
		if(pData[playerid][pCash] < s_price) return SCM(playerid, COLOR_ERROR, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Æ√Ø√´√†√≤√ª. √ë√§√•√´√™√† √±√Æ√∞√¢√†√≠√†"), SCM(s_id, COLOR_ERROR, "√ì √Ø√Æ√™√≥√Ø√†√≤√•√´√ø √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Æ√Ø√´√†√≤√ª. √ë√§√•√´√™√† √±√Æ√∞√¢√†√≠√†");
		PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0); PlayerPlaySound(s_id, 17000, 0.0, 0.0, 0.0);
		Hook_GivePlayerMoney(playerid, -s_price); Hook_GivePlayerMoney(s_id, s_price);
		RemovePlayerWeapon(s_id, GetPlayerWeapon(s_id)); GivePlayerWeapon(playerid, s_gunid, s_ammos);
		GivePlayerWeapon(s_id, s_gunid, ssammos);
		format(str_sgun, 20, "~r~-%d$", s_price);
		GameTextForPlayer(playerid, str_sgun, 3000, 1);
		format(str_sgun, 20, "~g~+%d$", s_price);
		GameTextForPlayer(s_id, str_sgun, 3000, 1);
		GetWeaponName(s_gunid, gun_str, 64);
		if(pData[playerid][pSex] == 1) SCMF(s_id, COLOR_MAIN, "%s √™√≥√Ø√®√´ √≥ √Ç√†√± √Æ√∞√≥√¶√®√•", GetName(playerid));
		else SCMF(s_id, COLOR_MAIN, "%s √™√≥√Ø√®√´√† √≥ √Ç√†√± √Æ√∞√≥√¶√®√•", GetName(playerid));
		return SCMF(playerid, COLOR_MAIN, "√Ç√ª √™√≥√Ø√®√´√® √Æ√∞√≥√¶√®√• %s √≥ %s √ß√† %d$", gun_str, GetName(s_id), s_price);
	}
	else if(GetPVarInt(playerid, "offer_SELLDRUGS")) {
		new sd_did = GetPVarInt(playerid, "SELLDRUGS_targetid"), str_sdrgs[30], sd_count = GetPVarInt(playerid, "SELLDRUGS_count"), 
		sd_price = GetPVarInt(playerid, "SELLDRUGS_price"); DeletePVar(playerid, "SELLDRUGS_price");
		DeletePVar(playerid, "SELLDRUGS_targetid"); DeletePVar(playerid, "SELLDRUGS_count");
	    DeletePVar(sd_did, "cancel_act"); DeletePVar(sd_did, "cancel_act_id");
		SetPVarInt(playerid, "offer", 9999);
		DeletePVar(playerid, "offer_SELLDRUGS");
		if(!IsPlayerConnected(sd_did)) return SCM(playerid, COLOR_ERROR, "√è√∞√ÆS√≠√¢√•√∂ √¢√ª√∏√•√´ √®√ß √®√£√∞√ª. √ë√§√•√´√™√† √±√Æ√∞√¢√†√≠√†");
		if(pData[playerid][pCash] < sd_price) return SCM(playerid, COLOR_ERROR, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Æ√Ø√´√†√≤√ª. √ë√§√•√´√™√† √±√Æ√∞√¢√†√≠√†"), SCM(sd_did, COLOR_ERROR, "√ì √Ø√Æ√™√≥√Ø√†√≤√•√´√ø √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √±√∞√•√§√±√≤√¢ √§√´√ø √Æ√Ø√´√†√≤√ª. √ë√§√•√´√™√† √±√Æ√∞√¢√†√≠√†");
		PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0); PlayerPlaySound(sd_did, 17000, 0.0, 0.0, 0.0);
		Hook_GivePlayerMoney(playerid, -sd_price); Hook_GivePlayerMoney(sd_did, sd_price);
		pData[sd_did][pDrugs] -= sd_count; pData[playerid][pDrugs] += sd_count;
		UpdatePlayerData(sd_did, "pDrugs", pData[sd_did][pDrugs]);
		UpdatePlayerData(playerid, "pDrugs", pData[playerid][pDrugs]);
		format(str_sdrgs, 30, "~r~-%d$", sd_price);
		GameTextForPlayer(playerid, str_sdrgs, 3000, 1);
		format(str_sdrgs, 30, "~g~+%d$", sd_price);
		GameTextForPlayer(sd_did, str_sdrgs, 3000, 1);
		if(pData[playerid][pSex] == 1) SCMF(sd_did, COLOR_MAIN, "%s √™√≥√Ø√®√´ √≥ √Ç√†√± %d √£ √≠√†√∞√™√Æ√≤√®√™√Æ√¢", GetName(playerid), sd_count);
		else SCMF(sd_did, COLOR_MAIN, "%s √™√≥√Ø√®√´√† √≥ √Ç√†√± %d √£ √≠√†√∞√™√Æ√≤√®√™√Æ√¢", GetName(playerid), sd_count);
		return SCMF(playerid, COLOR_MAIN, "√Ç√ª √™√≥√Ø√®√´√® %d √£ √≠√†√∞√™√Æ√≤√®√™√Æ√¢ √≥ %s √ß√† %d$", sd_count, GetName(sd_did), sd_price);
	}
	else if(GetPVarInt(playerid, "offer_PASS")) {
		new id_offer = GetPVarInt(playerid, "PASS_targetid"), text[300],
		Member[250], phone[20], sexp[46], stringnick[96]; DeletePVar(playerid, "PASS_targetid");
		new text_car_1[70], text_car_2[70], text_car_3[70];
		DeletePVar(playerid, "offer_PASS"); SetPVarInt(playerid, "offer", 9999);
		DeletePVar(id_offer, "cancel_act"); DeletePVar(id_offer, "cancel_act_id");
		if(!IsPlayerConnected(id_offer)) return SCM(playerid, COLOR_ERROR, "√à√£√∞√Æ√™ √¢√ª√∏√•√´ √®√ß √®√£√∞√ª. √è√∞√•√§√´√Æ√¶√•√≠√®√• √≠√•√§√•√©√±√≤√¢√®√≤√•√´√º√≠√Æ");
		if(pData[id_offer][pSex] == 1) MeAction(id_offer, "√Ø√Æ√™√†√ß√†√´ √±√¢√Æ√© √Ø√†√±√Ø√Æ√∞√≤");
		else MeAction(id_offer, "√Ø√Æ√™√†√ß√†√´√† √±√¢√Æ√© √Ø√†√±√Ø√Æ√∞√≤");
		if(pData[id_offer][pHotel] != -1) {
			new h = pData[id_offer][pHotel];
			if(pData[id_offer][pCar][0] != 0) format(text_car_1, 70, VehicleNames[pData[id_offer][pCar][0] - 400]);
			else strcat(text_car_1, "{ff4d4d}√é√≤√±√≥√≤√±√≤√¢√≥√•√≤");
			format(text, 300, ""CWHITE"√è√∞√Æ√¶√®√¢√†√≠√®√•: "CLIGHTBLUE"√ç√Æ√¨√•√∞ %d √≠√† %d √Ω√≤√†√¶√•"CWHITE"\n√Ñ√Æ√¨. √†√¢√≤√Æ√¨√Æ√°√®√´√º: {99cc33}%s"CWHITE"", get_orig_num_hotel(h), hotel_info[h][hotel_floor], text_car_1);
		}
		else if(pData[id_offer][pFlat] != -1 || pData[id_offer][p_rent_flat] != -1) {
			if(pData[id_offer][pFlat] != -1) {
				if(pData[id_offer][pCar][0] != 0) format(text_car_1, 70, VehicleNames[pData[id_offer][pCar][0] - 400]);
				else strcat(text_car_1, "{ff4d4d}√é√≤√±√≥√≤√±√≤√¢√≥√•√≤");
				format(text, 300, ""CWHITE"√è√∞√Æ√¶√®√¢√†√≠√®√•: "CLIGHTBLUE"√ä√¢√†√∞√≤√®√∞√† ¬π%d"CWHITE"\n√Ñ√Æ√¨. √†√¢√≤√Æ√¨√Æ√°√®√´√º: {99cc33}%s"CWHITE"", pData[id_offer][pFlat], text_car_1);
			}
			else format(text, 300, ""CWHITE"√è√∞√Æ√¶√®√¢√†√≠√®√•: "CLIGHTBLUE"√ä√¢√†√∞√≤√®√∞√† ¬π%d"CWHITE"", pData[id_offer][p_rent_flat]);
		}
		else if(pData[id_offer][pHouse] != -1) {
			new Float: x, Float: y;
			new h = pData[id_offer][pHouse];
			x = HouseInfo[h][hEnter][0];
			y = HouseInfo[h][hEnter][1];
			new ids = GetCityName ( x, y );
			new id = GetZonaName ( x, y );
			if(pData[id_offer][pCar][0] != 0) format(text_car_1, 70, VehicleNames[pData[id_offer][pCar][0] - 400]);
			else strcat(text_car_1, "{ff4d4d}√é√≤√±√≥√≤√±√≤√¢√≥√•√≤");
			if(pData[id_offer][pCar][1] != 0) format(text_car_2, 70, VehicleNames[pData[id_offer][pCar][1] - 400]);
			else strcat(text_car_2, "{ff4d4d}√é√≤√±√≥√≤√±√≤√¢√≥√•√≤");
			if(pData[id_offer][pCar][2] != 0) format(text_car_3, 70, VehicleNames[pData[id_offer][pCar][2] - 400]);
			else strcat(text_car_3, "{ff4d4d}√é√≤√±√≥√≤√±√≤√¢√≥√•√≤");
			format(text, 300, ""CWHITE"√É√Æ√∞√Æ√§ / √§√•√∞√•√¢√≠√ø: {cccc00}%s"CWHITE"\n√ê√†√©√Æ√≠: {cccc00}%s"CWHITE"\n√è√∞√Æ√¶√®√¢√†√≠√®√•: "CLIGHTBLUE"√Ñ√Æ√¨ ¬π%d"CWHITE"\n√Ñ√Æ√¨. √†√¢√≤√Æ√¨√Æ√°√®√´√º ¬π1: {99cc33}%s\n"CWHITE"√Ñ√Æ√¨. √†√¢√≤√Æ√¨√Æ√°√®√´√º ¬π2: {99cc33}%s\n"CWHITE"√Ñ√Æ√¨. √†√¢√≤√Æ√¨√Æ√°√®√´√º ¬π3: {99cc33}%s"CWHITE"", gSAZonesCity[ids][SAZONE_NAME], gSAZones[id][SAZONE_NAME], pData[id_offer][pHouse], text_car_1, text_car_2, text_car_3);
		}
		else format(text, 300, ""CWHITE"√É√Æ√∞√Æ√§ / √§√•√∞√•√¢√≠√ø: {cccc00}No √®√≠√¥√Æ√∞√¨√†√∂√®√®"CWHITE"\n√ê√†√©√Æ√≠: {cccc00}No √®√≠√¥√Æ√∞√¨√†√∂√®√®"CWHITE"\n√è√∞√Æ√¶√®√¢√†√≠√®√•: "CLIGHTBLUE"No √®√≠√¥√Æ√∞√¨√†√∂√®√®"CWHITE"");
		if(GetPVarInt(id_offer, "disguise_enabled")) format(Member, sizeof(Member), ""CWHITE"√é√∞√£√†√≠√®√ß√†√∂√®√ø: "CBLUE"%s"CWHITE"\n√Ñ√Æ√´√¶√≠√Æ√±√≤√º: "CBLUE"%s"CWHITE"", FractionInfo[GetPVarInt(id_offer, #fraction_id)][fName], new_rank_name[GetPVarInt(id_offer, #fraction_id) - 1][GetPVarInt(id_offer, "SPY_rank_id")]);
		else if(pData[id_offer][pMember] != 0) format(Member,sizeof(Member),""CWHITE"√é√∞√£√†√≠√®√ß√†√∂√®√ø: "CBLUE"%s"CWHITE"\n√Ñ√Æ√´√¶√≠√Æ√±√≤√º: "CBLUE"%s"CWHITE"",GetMember[pData[id_offer][pMember] - 1], new_rank_name[pData[id_offer][pMember] - 1][pData[id_offer][pRank] - 1]);
		else if(pData[id_offer][pJob] != 0) format(Member,sizeof(Member),""CWHITE"√ê√†√°√Æ√≤√†: {40bf80}%s",GetJobName(pData[id_offer][pJob]));
		else format(Member,250,""CWHITE"√é√∞√£√†√≠√®√ß√†√∂√®√ø: "CBLUE"No √®√≠√¥√Æ√∞√¨√†√∂√®√®"CWHITE"\n√Ñ√Æ√´√¶√≠√Æ√±√≤√º: "CBLUE"No √®√≠√¥√Æ√∞√¨√†√∂√®√®"CWHITE"\n√ê√†√°√Æ√≤√†: {40bf80}No √®√≠√¥√Æ√∞√¨√†√∂√®√®");

		if(pData[id_offer][pSex] == 1) {
			if(!strcmp(pData[id_offer][pFamilyName],"None", true)) format(sexp, sizeof(sexp), "√ç√• √¶√•√≠√†√≤");
			else if(!strcmp(pData[id_offer][pFamilyName],"No", true)) format(sexp, sizeof(sexp), "√ç√• √¶√•√≠√†√≤");
			else format(sexp, sizeof(sexp), "√Ü√•√≠√†√≤ √≠√† %s", pData[id_offer][pFamilyName]);
		}
		else {
			if(!strcmp(pData[id_offer][pFamilyName],"None", true)) format(sexp, sizeof(sexp), "√ç√• √ß√†√¨√≥√¶√•√¨");
			else if(!strcmp(pData[id_offer][pFamilyName],"No", true)) format(sexp, sizeof(sexp), "√ç√• √ß√†√¨√≥√¶√•√¨");
			else format(sexp, sizeof(sexp), "√á√†√¨√≥√¶√•√¨ √ß√† %s", pData[id_offer][pFamilyName]);
		}
		if(pData[id_offer][pPnumber] == -1) format(phone,sizeof(phone), "No √®√≠√¥√Æ√∞√¨√†√∂√®√®");
		else format(phone,sizeof(phone), "%d", pData[id_offer][pPnumber]);
		format(stringnick,56,"{FFCD00}√è√†√±√Ø√Æ√∞√≤ %s",pData[id_offer][pName]);
		format(string, 1000, ""CWHITE"√à√¨√ø: "CBLUE"%s"CWHITE"\n√è√∞√Æ√¶√®√¢√†√≠√®√• √¢ √±√≤√∞√†√≠√• (√´√•√≤): {00cc66}%d"CWHITE"\n√í√•√´√•√¥√Æ√≠: "CPALEGREEN"%s"CWHITE"\n√ë√•√¨√•√©√≠√Æ√• √Ø√Æ√´√Æ√¶√•√≠√®√•: %s\n√è√Æ√´: %s\n√á√†√™√Æ√≠√Æ√Ø√Æ√±√´√≥√∏√≠√Æ√±√≤√º: "CBLUE"%d"CWHITE"\n\
		√ì√∞√Æ√¢√•√≠√º √∞√Æ√ß√ª√±√™√†: "CBLUE"%d"CWHITE"\n%s\n%s",
		pData[id_offer][pName],pData[id_offer][pLevel],phone,sexp,(pData[id_offer][pSex] == 1) ? ("√å√≥√¶√±√™√Æ√©") : ("√Ü√•√≠√±√™√®√©"),pData[id_offer][pZakonp],pData[id_offer][pWanted],text,Member);
		return SPD(playerid, 000, DIALOG_STYLE_MSGBOX, stringnick, string, "Cerrar", "");
	}
	else if(GetPVarInt(playerid, "offer_UPASS")) {
		new id_offer = GetPVarInt(playerid, "UPASS_targetid"); DeletePVar(playerid, "UPASS_targetid");
		DeletePVar(playerid, "offer_UPASS"); SetPVarInt(playerid, "offer", 9999);
		DeletePVar(id_offer, "cancel_act"); DeletePVar(id_offer, "cancel_act_id");
		if(!IsPlayerConnected(id_offer)) return SCM(playerid, COLOR_ERROR, "√à√£√∞√Æ√™ √¢√ª√∏√•√´ √®√ß √®√£√∞√ª. √è√∞√•√§√´√Æ√¶√•√≠√®√• √≠√•√§√•√©√±√≤√¢√®√≤√•√´√º√≠√Æ");
		string[0] = EOS;
		if(pData[id_offer][pSex] == 1) MeAction(id_offer, "√Ø√Æ√™√†√ß√†√´ √±√¢√Æ¬∏ √≥√§√Æ√±√≤√Æ√¢√•√∞√•√≠√®√•");
		else MeAction(id_offer, "√Ø√Æ√™√†√ß√†√´√† √±√¢√Æ¬∏ √≥√§√Æ√±√≤√Æ√¢√•√∞√•√≠√®√•");
		new str_num[20];
		valstr(str_num, pData[id_offer][pPnumber]);
		if(!GetPVarInt(playerid, "disguise_enabled")) format(string,250, ""CWHITE"√à√¨√ø: %s\n√í√•√´√•√¥√Æ√≠: %s\n√è√∞√Æ√¶√®√¢√†√•√≤ √¢ √∏√≤√†√≤√•: %d √´√•√≤\n√è√Æ√§√∞√†√ß√§√•√´√•√≠√®√•: %s\n√Ñ√Æ√´√¶√≠√Æ√±√≤√º: %s", pData[id_offer][pName], (pData[playerid][pPnumber] == -1) ? ("No") : (str_num), pData[id_offer][pLevel],FractionInfo[pData[id_offer][pMember]][fName],new_rank_name[pData[id_offer][pMember] - 1][pData[id_offer][pRank] - 1]);
		else format(string,250, ""CWHITE"√à√¨√ø: %s\n√í√•√´√•√¥√Æ√≠: %s\n√è√∞√Æ√¶√®√¢√†√•√≤ √¢ √∏√≤√†√≤√•: %d √´√•√≤\n√è√Æ√§√∞√†√ß√§√•√´√•√≠√®√•: %s\n√Ñ√Æ√´√¶√≠√Æ√±√≤√º: %s", pData[id_offer][pName], (pData[id_offer][pPnumber] == -1) ? ("No") : (str_num), pData[id_offer][pLevel],FractionInfo[pData[id_offer][pMember]][fName],new_rank_name[pData[id_offer][pMember] - 1][pData[id_offer][pRank] - 1]);
		return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CMAIN"√ì√§√Æ√±√≤√Æ√¢√•√∞√•√≠√®√•",string, "Cerrar", "");
	}
	else if(GetPVarInt(playerid, "offer_ARMY")) {
		new messages[200], id_offer = GetPVarInt(playerid, "ARMY_targetid"); DeletePVar(playerid, "ARMY_targetid");
		DeletePVar(playerid, "offer_ARMY"); SetPVarInt(playerid, "offer", 9999);
		DeletePVar(id_offer, "cancel_act"); DeletePVar(id_offer, "cancel_act_id");
		if(!IsPlayerConnected(id_offer)) return SCM(playerid, COLOR_ERROR, "√à√£√∞√Æ√™ √¢√ª√∏√•√´ √®√ß √®√£√∞√ª. √è√∞√•√§√´√Æ√¶√•√≠√®√• √≠√•√§√•√©√±√≤√¢√®√≤√•√´√º√≠√Æ");
		if(pData[id_offer][ArmyPlay]) format(messages, sizeof(messages), ""CWHITE"√à√¨√ø: "CMAIN"%s"CWHITE"\n√Ç√Æ√®√≠√±√™√®√© √≥√∑√•√≤: "CMAIN"√ë√´√≥√¶√®√´"CWHITE"\n√Ñ√Æ√±√´√≥√¶√®√´ √§√Æ: "CMAIN"%s\n", pData[id_offer][pName], pData[id_offer][ArmyRank]);
		else format(messages, sizeof(messages), ""CWHITE"√à√¨√ø: "CMAIN"%s"CWHITE"\n√Ç√Æ√®√≠√±√™√®√© √≥√∑√•√≤: "CMAIN"---"CWHITE"\n√ç√• √±√´√≥√¶√®√´\n", pData[id_offer][pName]);
		if(pData[id_offer][pSex] == 1) MeAction(id_offer, "√Ø√Æ√™√†√ß√†√´ √±√¢√Æ√© √¢√Æ√•√≠√≠√ª√© √°√®√´√•√≤");
		else MeAction(id_offer, "√Ø√Æ√™√†√ß√†√´√† √±√¢√Æ√© √¢√Æ√•√≠√≠√ª√© √°√®√´√•√≤");
		return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{ffd770}√Ç√Æ√•√≠√≠√ª√© √°√®√´√•√≤", messages, "Cerrar", "");
	}
	else if(GetPVarInt(playerid, "offer_MED")) {
		new messages[200], id_offer = GetPVarInt(playerid, "MED_targetid"); DeletePVar(playerid, "MED_targetid");
		DeletePVar(playerid, "offer_MED"); SetPVarInt(playerid, "offer", 9999);
		DeletePVar(id_offer, "cancel_act"); DeletePVar(id_offer, "cancel_act_id");
		if(!IsPlayerConnected(id_offer)) return SCM(playerid, COLOR_ERROR, "√à√£√∞√Æ√™ √¢√ª√∏√•√´ √®√ß √®√£√∞√ª. √è√∞√•√§√´√Æ√¶√•√≠√®√• √≠√•√§√•√©√±√≤√¢√®√≤√•√´√º√≠√Æ");
		if(pData[id_offer][pMember]) format(messages , sizeof messages , ""CWHITE"√à√¨√ø: "CMAIN"%s"CWHITE"\n√ã√•√≤ √¢ √∏√≤√†√≤√•: "CMAIN"%d"CWHITE"\n√å√•√§√®√∂√®√≠√±√™√®√© √Æ√±√¨√Æ√≤√∞: %s"CWHITE"\n√å√•√±√≤√Æ √∞√†√°√Æ√≤√ª: {%s}%s\n", pData[id_offer][pName], pData[id_offer][pLevel], (pData[id_offer][pMedCard] ? (""CMAIN"√è√∞√Æ√©√§√•√≠"):(""CERROR"√ç√• √Ø√∞√Æ√©√§√•√≠")), GetFractionColor[pData[id_offer][pMember]], GetMember[pData[id_offer][pMember] - 1]);
		else format(messages , sizeof messages , ""CWHITE"√à√¨√ø: "CMAIN"%s"CWHITE"\n√ã√•√≤ √¢ √∏√≤√†√≤√•: "CMAIN"%d"CWHITE"\n√å√•√§√®√∂√®√≠√±√™√®√© √Æ√±√¨√Æ√≤√∞: %s"CWHITE"\n√å√•√±√≤√Æ √∞√†√°√Æ√≤√ª: √Å√•√ß√∞√†√°√Æ√≤√≠√ª√©\n", pData[id_offer][pName], pData[id_offer][pLevel], (pData[id_offer][pMedCard] ? (""CMAIN"√è√∞√Æ√©√§√•√≠"):(""CERROR"√ç√• √Ø√∞√Æ√©√§√•√≠")));
		if(pData[id_offer][pSex] == 1) MeAction(id_offer, "√Ø√Æ√™√†√ß√†√´ √±√¢√Æ√æ √¨√•√§√®√∂√®√≠√±√™√≥√æ √™√†√∞√≤√≥");
		else MeAction(id_offer, "√Ø√Æ√™√†√ß√†√´√† √±√¢√Æ√æ √¨√•√§√®√∂√®√≠√±√™√≥√æ √™√†√∞√≤√≥");
		return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{ffd770}√å√•√§√®√∂√®√≠√±√™√†√ø √™√†√∞√≤√†", messages, "Cerrar", "");
	}
	else if(GetPVarInt(playerid, "offer_LIC")) {
		new id_offer = GetPVarInt(playerid, "LIC_targetid"); DeletePVar(playerid, "LIC_targetid");
		DeletePVar(playerid, "offer_LIC"); SetPVarInt(playerid, "offer", 9999);
		DeletePVar(id_offer, "cancel_act"); DeletePVar(id_offer, "cancel_act_id");
		if(!IsPlayerConnected(id_offer)) return SCM(playerid, COLOR_ERROR, "√à√£√∞√Æ√™ √¢√ª√∏√•√´ √®√ß √®√£√∞√ª. √è√∞√•√§√´√Æ√¶√•√≠√®√• √≠√•√§√•√©√±√≤√¢√®√≤√•√´√º√≠√Æ");
		SCMF(playerid, COLOR_YELLOW, "√ã√®√∂√•√≠√ß√®√® %s:",pData[id_offer][pName]);
		SCMF(playerid, -1, "√Ç√Æ√§√®√≤√•√´√º√±√™√®√• √Ø√∞√†√¢√†: %s",(pData[id_offer][pLicenses][0] ? (""CMAIN"√Ö√±√≤√º") : (""CORANGE"√é√≤√±√≥√≤√±√≤√¢√≥√•√≤")));
		SCMF(playerid, -1, "√ã√®√∂√•√≠√ß√®√ø √Ø√®√´√Æ√≤√†: %s",(pData[id_offer][pLicenses][1] ? (""CMAIN"√Ö√±√≤√º") : (""CORANGE"√é√≤√±√≥√≤√±√≤√¢√≥√•√≤")));
		SCMF(playerid, -1, "√ã√®√∂√•√≠√ß√®√ø √≠√† √¢√Æ√§√≠√ª√© √≤/√±: %s",(pData[id_offer][pLicenses][2] ? (""CMAIN"√Ö√±√≤√º") : (""CORANGE"√é√≤√±√≥√≤√±√≤√¢√≥√•√≤")));
		SCMF(playerid, -1, "√ã√®√∂√•√≠√ß√®√ø √≠√† √Æ√∞√≥√¶√®√•: %s",(pData[id_offer][pLicenses][3] ? (""CMAIN"√Ö√±√≤√º") : (""CORANGE"√é√≤√±√≥√≤√±√≤√¢√≥√•√≤")));
		if(pData[id_offer][pSex] == 1) format(string,64, "%s √Ø√Æ√™√†√ß√†√´ √±√¢√Æ√® √´√®√∂√•√≠√ß√®√®",pData[id_offer][pName]);
		else format(string,64, "%s √Ø√Æ√™√†√ß√†√´√† √±√¢√Æ√® √´√®√∂√•√≠√ß√®√®",pData[id_offer][pName]);
		return ProxDetector(30.0, id_offer, string, COLOR_PURPLE);
	}
	else if(GetPVarInt(playerid, "offer_SKILL")) {
		new id_offer = GetPVarInt(playerid, "SKILL_targetid"), str_skill[1650], str_last[144];
		DeletePVar(playerid, "offer_SKILL"); SetPVarInt(playerid, "offer", 9999);
		DeletePVar(id_offer, "cancel_act"); DeletePVar(id_offer, "cancel_act_id");
		DeletePVar(playerid, "SKILL_targetid");
		if(!IsPlayerConnected(id_offer)) return SCM(playerid, COLOR_ERROR, "√à√£√∞√Æ√™ √¢√ª√∏√•√´ √®√ß √®√£√∞√ª. √è√∞√•√§√´√Æ√¶√•√≠√®√• √≠√•√§√•√©√±√≤√¢√®√≤√•√´√º√≠√Æ");
		format(str_last, sizeof(str_last), "{99FF66}√ë√®√´√†\t\t\t%d%%\t"CWHITE"%s\n", pData[id_offer][p_strengh], AtSkillBar(pData[id_offer][p_strengh]));
		strcat(str_skill, str_last);
		format(str_last, sizeof(str_last), "{99FF66}Colt 45\t\t\t%d%%\t"CWHITE"%s\n", pData[id_offer][pSkill][0], AtSkillBar(pData[id_offer][pSkill][0]));
		strcat(str_skill, str_last);
		format(str_last, sizeof(str_last), "{99FF66}SD Pistol\t\t%d%%\t"CWHITE"%s\n", pData[id_offer][pSkill][1], AtSkillBar(pData[id_offer][pSkill][1]));
		strcat(str_skill, str_last);
		format(str_last, sizeof(str_last), "{99FF66}Desert Eagle\t\t%d%%\t"CWHITE"%s\n", pData[id_offer][pSkill][2], AtSkillBar(pData[id_offer][pSkill][2]));
		strcat(str_skill, str_last);
		format(str_last, sizeof(str_last), "{99FF66}Shotgun\t\t%d%%\t"CWHITE"%s\n", pData[id_offer][pSkill][3], AtSkillBar(pData[id_offer][pSkill][3]));
		strcat(str_skill, str_last);
		format(str_last, sizeof(str_last), "{99FF66}MP5\t\t\t%d%%\t"CWHITE"%s\n", pData[id_offer][pSkill][4], AtSkillBar(pData[id_offer][pSkill][4]));
		strcat(str_skill, str_last);
		format(str_last, sizeof(str_last), "{99FF66}AK47\t\t\t%d%%\t"CWHITE"%s\n", pData[id_offer][pSkill][5], AtSkillBar(pData[id_offer][pSkill][5]));
		strcat(str_skill, str_last);
		format(str_last, sizeof(str_last), "{99FF66}M4\t\t\t%d%%\t"CWHITE"%s\n", pData[id_offer][pSkill][6], AtSkillBar(pData[id_offer][pSkill][6]));
		strcat(str_skill, str_last);
		format(str_last, sizeof(str_last), "{99FF66}Sniper Rifle\t\t%d%%\t"CWHITE"%s\n", pData[id_offer][pSkill][7], AtSkillBar(pData[id_offer][pSkill][7]));
		strcat(str_skill, str_last);
		format(str_last, sizeof(str_last), "{99FF66}Sawnoff\t\t%d%%\t"CWHITE"%s\n", pData[id_offer][pSkill][8], AtSkillBar(pData[id_offer][pSkill][8]));
		strcat(str_skill, str_last);
		format(str_last, sizeof(str_last), "{99FF66}Combat SG\t\t%d%%\t"CWHITE"%s\n", pData[id_offer][pSkill][9], AtSkillBar(pData[id_offer][pSkill][9]));
		strcat(str_skill, str_last);
		format(str_last, sizeof(str_last), "{99FF66}Micro UZI\t\t%d%%\t"CWHITE"%s\n", pData[id_offer][pSkill][10], AtSkillBar(pData[id_offer][pSkill][10]));
		strcat(str_skill, str_last);
		if(pData[id_offer][pSex] == 1) MeAction(id_offer, "√Ø√Æ√™√†√ß√†√´ √±√¢√Æ√® √≠√†√¢√ª√™√® √¢√´√†√§√•√≠√®√ø √Æ√∞√≥√¶√®√•√¨");
		else MeAction(id_offer, "√Ø√Æ√™√†√ß√†√´√† √±√¢√Æ√® √≠√†√¢√ª√™√® √¢√´√†√§√•√≠√®√ø √Æ√∞√≥√¶√®√•√¨");
		return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CBLUE"√ç√†√¢√ª√™√® √¢√´√†√§√•√≠√®√ø √Æ√∞√≥√¶√®√•√¨", str_skill, "Cerrar", "");
	}
	else if(GetPVarInt(playerid, "newlead_offer") == 1) {
		new targetid = GetPVarInt(playerid, "offer"), newlead_unitid = GetPVarInt(playerid, "unit_newlead_id");
		DeletePVar(targetid, "cancel_act"); DeletePVar(targetid, "cancel_act_id");
		DeletePVar(playerid, "newlead_offer"), SetPVarInt(playerid, "offer", 9999);
		if(!IsPlayerConnected(targetid)) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [059]");

		TextDrawShowForPlayer(targetid, chskin_box);
		SelectTextDraw(targetid, 0x3399FFAA);

		SCMF(playerid, COLOR_MAIN, "√è√Æ√ß√§√∞√†√¢√´√ø√•√¨! √Ç√ª √±√≤√†√´√® √´√®√§√•√∞√Æ√¨ √Ø√Æ√§√∞√†√ß√§√•√´√•√≠√®√ø %s", FractionInfo[newlead_unitid][fName], FractionInfo[pData[targetid][pMember]][fName]);
		SCM(playerid, COLOR_BLUE, "√ë√•√©√∑√†√± √´√®√§√•√∞ √Æ√∞√£√†√≠√®√ß√†√∂√®√® √¢√ª√°√•√∞√•√≤ √Ç√†√∏√≥ √¢√≠√•√∏√≠√Æ√±√≤√º √® S√≠√±√≤ √Ø√•√∞√¢√ª√• √®√≠√±√≤√∞√≥√™√∂√®√®");
		PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
		SCMF(targetid,COLOR_BLUE, "%s √Ø√∞√®√≠√®√¨√†√•√≤ √Ç√†√∏√• √Ø√∞√•√§√´√Æ√¶√•√≠√®√•", GetName(playerid));

		pData[playerid][pMember] = newlead_unitid; pData[playerid][pLeader] = newlead_unitid; pData[playerid][pRank] = 10;
		pData[playerid][pJob] = 0;
		pData[playerid][pAdmJob] = 0;
		SetPlayerColor(playerid, FractionInfo[pData[playerid][pMember]][fColor]);
		UpdatePlayerData(playerid, "pMember", newlead_unitid);
		UpdatePlayerData(playerid, "pLeader", newlead_unitid);
		UpdatePlayerData(playerid, "pRank", 10);
		UpdatePlayerData(playerid, "pJob", 0);
		UpdatePlayerData(playerid, "pAdmJob", 0);

		new fractionid;

		if(pData[targetid][pMember] == 26) {
			if(pData[targetid][pRank] == 7) fractionid = 22;
			if(pData[targetid][pRank] == 8) fractionid = 24;
			if(pData[targetid][pRank] == 6) fractionid = 23;
		}

		new name_pvar[16];
		for(new i = 0, skinid = 0; i < 16; i ++) {
			skinid = ChangeSkin[fractionid-1][i];
			if(!skinid) break;
			format(name_pvar, sizeof(name_pvar), "chskin_%d", i);
			SetPVarInt(targetid, name_pvar, skinid);
			PlayerTextDrawSetPreviewModel(targetid, chskin_td[targetid][i], skinid);
			PlayerTextDrawShow(targetid, chskin_td[targetid][i]);
		}
		SetPVarInt(targetid, "changed_skin_mode", 3);
		SetPVarInt(targetid,"actinplayerid",playerid);
		return SetPVarInt(playerid, "pOfferFractionid", pData[targetid][pMember]);
	}
	else if(GetPVarInt(playerid, "sim_offer")) {
		new sellerid = GetPVarInt(playerid, "SIM_seller"), sim_price = GetPVarInt(playerid, "SIM_price");
		DeletePVar(playerid, "sim_offer"), DeletePVar(playerid, "SIM_seller"), DeletePVar(playerid, "SIM_price"), SetPVarInt(playerid, "offer", 9999);
		DeletePVar(sellerid, "cancel_act"); DeletePVar(sellerid, "cancel_act_id");

		if(!IsPlayerConnected(sellerid)) return SCM(playerid, COLOR_ERROR, "√è√∞√ÆS√≠√¢√•√∂ √¢√ª√∏√•√´ √®√ß √®√£√∞√ª. √ë√§√•√´√™√† √±√Æ√∞√¢√†√≠√†");

		SCMF(sellerid, COLOR_MAIN, "%s √™√≥√Ø√®√´ √≥ √Ç√†√± SIM-√™√†√∞√≤√≥ √ß√† %d$", pData[playerid][pName], sim_price);
		SCMF(playerid, COLOR_MAIN, "√Ç√ª √Ø√∞√®√Æ√°√∞√•√´√® SIM-√™√†√∞√≤√≥ √Ø√Æ√§ √≠√Æ√¨√•√∞√Æ√¨ %d √≥ %s √ß√† %d$", pData[sellerid][pPnumber], pData[sellerid][pName], sim_price);
		SCM(playerid, -1, "√Ç√†√∏√† √Ø√∞√•√§√ª√§√≥√π√†√ø SIM-√™√†√∞√≤√† √°√ª√´√† √ß√†√°√´√Æ√™√®√∞√Æ√¢√†√≠√†");
		Hook_GivePlayerMoney(playerid, -sim_price); Hook_GivePlayerMoney(sellerid, sim_price);
		PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0), PlayerPlaySound(sellerid, 17000, 0.0, 0.0, 0.0);
		pData[playerid][pPnumber] = pData[sellerid][pPnumber];
		pData[sellerid][pPnumber] = -1;
		RemoveItemFromInventory(playerid, 3);
		RemoveItemFromInventory(sellerid, 3);
		AddItemToInventory(sellerid, 1, 3);
		
		UpdatePlayerData(playerid, "pPnumber", pData[playerid][pPnumber]);
		return UpdatePlayerData(sellerid, "pPnumber", -1);
	}
	else if(GetPVarInt(playerid, "csim_offer")) {
		new changerid = GetPVarInt(playerid, "√ëSIM_seller"), sim_surchange = GetPVarInt(playerid, "CSIM_surcharge");
		DeletePVar(playerid, "sim_offer"), DeletePVar(playerid, "√ëSIM_seller"), DeletePVar(playerid, "CSIM_surcharge"), SetPVarInt(playerid, "offer", 9999);
		DeletePVar(changerid, "cancel_act"); DeletePVar(changerid, "cancel_act_id");
		DeletePVar(playerid, "number_buyer"); DeletePVar(playerid, "number_celler");

		if(!IsPlayerConnected(changerid)) return SCM(playerid, COLOR_ERROR, "√à√£√∞√Æ√™ √¢√ª√∏√•√´ √®√ß √®√£√∞√ª. √ë√§√•√´√™√† √±√Æ√∞√¢√†√≠√†");

		if(sim_surchange == 0) {
			SetPVarInt(playerid, "number_buyer", pData[playerid][pPnumber]);
			PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0), PlayerPlaySound(changerid, 17000, 0.0, 0.0, 0.0);
			pData[playerid][pPnumber] = GetPVarInt(playerid, "number_celler");
			pData[changerid][pPnumber] = GetPVarInt(playerid, "number_buyer");
			DeletePVar(playerid, "number_buyer"); DeletePVar(playerid, "number_celler");
			SCMF(changerid, COLOR_MAIN, "√é√°√¨√•√≠ SIM-√™√†√∞√≤√†√¨√® √± %s √Ø√∞√Æ√∏¬∏√´ √≥√±√Ø√•√∏√≠√Æ. √Ç√†√∏ √≠√Æ√¢√ª√© √≠√Æ√¨√•√∞ {FFCD00}%d", pData[playerid][pName], pData[changerid][pPnumber]);
			return SCMF(playerid, COLOR_MAIN, "√é√°√¨√•√≠ SIM-√™√†√∞√≤√†√¨√® √± %s √Ø√∞√Æ√∏¬∏√´ √≥√±√Ø√•√∏√≠√Æ. √Ç√†√∏ √≠√Æ√¢√ª√© √≠√Æ√¨√•√∞ {FFCD00}%d", pData[changerid][pName], pData[playerid][pPnumber]);
		}
		SetPVarInt(playerid, "number_buyer", pData[playerid][pPnumber]);
		PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0), PlayerPlaySound(changerid, 17000, 0.0, 0.0, 0.0);
		pData[playerid][pPnumber] = GetPVarInt(playerid, "number_celler");
		pData[changerid][pPnumber] = GetPVarInt(playerid, "number_buyer");
		Hook_GivePlayerMoney(changerid, sim_surchange); Hook_GivePlayerMoney(playerid, -sim_surchange);
		
		SCMF(changerid, COLOR_MAIN, "√é√°√¨√•√≠ SIM-√™√†√∞√≤√†√¨√® √± %s √± √§√Æ√Ø√´√†√≤√Æ√© %d$ √Ø√∞√Æ√∏¬∏√´ √≥√±√Ø√•√∏√≠√Æ. √Ç√†√∏ √≠√Æ√¢√ª√© √≠√Æ√¨√•√∞ {FFCD00}%d", pData[playerid][pName], sim_surchange, pData[changerid][pPnumber]);
		SCMF(playerid, COLOR_MAIN, "√é√°√¨√•√≠ SIM-√™√†√∞√≤√†√¨√® √± %s √± √§√Æ√Ø√´√†√≤√Æ√© %d$ √Ø√∞√Æ√∏¬∏√´ √≥√±√Ø√•√∏√≠√Æ. √Ç√†√∏ √≠√Æ√¢√ª√© √≠√Æ√¨√•√∞ {FFCD00}%d", pData[changerid][pName], sim_surchange, pData[playerid][pPnumber]);
		UpdatePlayerData(playerid, "pPnumber", pData[playerid][pPnumber]);
	    return UpdatePlayerData(changerid, "pPnumber", pData[changerid][pPnumber]);
	}
	else if(GetPVarInt(playerid, "ProverkaDice")) {
		if(GetPVarInt(playerid, "KostiName") < 999) {
			
			new dicerid = GetPVarInt(playerid, "KostiName");
			new kstmoney = GetPVarInt(playerid, "KostiMoney");
			new bet_type = GetPVarInt(playerid, "BetType");
			DeletePVar(playerid, "ZapretDice");
			DeletePVar(dicerid, "ZapretDice");
			DeletePVar(playerid, "KostiMoney");
			DeletePVar(playerid, "BetType");
			DeletePVar(playerid, "ProverkaDice");
			SetPVarInt(playerid, "KostiName",999);
			DeletePVar(dicerid, "cancel_act"); DeletePVar(dicerid, "cancel_act_id");
			if(!IsPlayerInRangeOfPoint(playerid,200.0,1989.5132,1018.3199,994.8906) || 
				!IsPlayerInRangeOfPoint(dicerid,200.0,1989.5132,1018.3199,994.8906)) 
				return SCM(playerid, COLOR_ERROR, "√Ç√ª √Æ√°√† √§√Æ√´√¶√≠√ª √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √™√†√ß√®√≠√Æ. √è√∞√•√§√´√Æ√¶√•√≠√®√• √Æ√≤√¨√•√≠√•√≠√Æ");
			
			if(!IsPlayerConnected(dicerid)) return SCM(playerid, COLOR_ERROR, "√à√£√∞√Æ√™ √¢√ª√∏√•√´ √®√ß √®√£√∞√ª. √è√∞√•√§√´√Æ√¶√•√≠√®√• √Æ√≤√¨√•√≠√•√≠√Æ");
			if(bet_type == 1) {
				if(pData[playerid][pCash] < kstmoney) {
					SCM(playerid, COLOR_ERROR, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √§√•√≠√•√£ √§√´√ø √®√£√∞√ª √≠√† √≤√†√™√≥√æ √±√≥√¨√¨√≥. √è√∞√•√§√´√Æ√¶√•√≠√®√• √Æ√≤√¨√•√≠√•√≠√Æ");
					return SCM(dicerid, COLOR_ERROR, "√ì √®√£√∞√Æ√™√† √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √§√•√≠√•√£ √§√´√ø √®√£√∞√ª √≠√† √≤√†√™√≥√æ √±√≥√¨√¨√≥. √è√∞√•√§√´√Æ√¶√•√≠√®√• √Æ√≤√¨√•√≠√•√≠√Æ");
				}
				if(pData[dicerid][pCash] < kstmoney) {
					SCM(playerid, COLOR_ERROR, "√ì √®√£√∞√Æ√™√† √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √§√•√≠√•√£ √§√´√ø √®√£√∞√ª √≠√† √≤√†√™√≥√æ √±√≥√¨√¨√≥. √è√∞√•√§√´√Æ√¶√•√≠√®√• √Æ√≤√¨√•√≠√•√≠√Æ");
					return SCM(dicerid, COLOR_ERROR, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √§√•√≠√•√£ √§√´√ø √®√£√∞√ª √≠√† √≤√†√™√≥√æ √±√≥√¨√¨√≥. √è√∞√•√§√´√Æ√¶√•√≠√®√• √Æ√≤√¨√•√≠√•√≠√Æ");
				}
			}
			else {
				if(pData[playerid][casino_amount] < kstmoney) {
					SCM(playerid, COLOR_ERROR, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √¥√®√∏√•√™ √§√´√ø √®√£√∞√ª √≠√† √≤√†√™√≥√æ √±√≥√¨√¨√≥. √è√∞√•√§√´√Æ√¶√•√≠√®√• √Æ√≤√¨√•√≠√•√≠√Æ");
					return SCM(dicerid, COLOR_ERROR, "√ì √®√£√∞√Æ√™√† √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √¥√®√∏√•√™ √§√´√ø √®√£√∞√ª √≠√† √≤√†√™√≥√æ √±√≥√¨√¨√≥. √è√∞√•√§√´√Æ√¶√•√≠√®√• √Æ√≤√¨√•√≠√•√≠√Æ");
				}
				if(pData[dicerid][casino_amount] < kstmoney) {
					SCM(playerid, COLOR_ERROR, "√ì √®√£√∞√Æ√™√† √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √§√•√≠√•√£ √§√´√ø √®√£√∞√ª √≠√† √≤√†√™√≥√æ √±√≥√¨√¨√≥. √è√∞√•√§√´√Æ√¶√•√≠√®√• √Æ√≤√¨√•√≠√•√≠√Æ");
					return SCM(dicerid, COLOR_ERROR, "√ì √Ç√†√± √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √§√•√≠√•√£ √§√´√ø √®√£√∞√ª √≠√† √≤√†√™√≥√æ √±√≥√¨√¨√≥. √è√∞√•√§√´√Æ√¶√•√≠√®√• √Æ√≤√¨√•√≠√•√≠√Æ");
				}
			}
			new dice = random(6) + 1;
			new dice1 = random(6) + 1;
			string[0] = EOS;
			format(string, 128, "%s √® %s √°√∞√Æ√±√®√´√® √™√Æ√±√≤√®. √ê√•√ß√≥√´√º√≤√†√≤: {FFCC00}%i:%i",pData[dicerid][pName],pData[playerid][pName],dice,dice1);
			ProxDetector(5.0, playerid, string, COLOR_PURPLE);

			new commission, win_amount;

			if(dice > dice1) {

				if(bet_type == 1) {
					commission = kstmoney/100*4;
					win_amount = kstmoney-commission;
					Hook_GivePlayerMoney(playerid, -kstmoney);
					Hook_GivePlayerMoney(dicerid, win_amount);
					format(string, 40, "~g~+%d$", win_amount);
					GameTextForPlayer(dicerid, string, 3000, 1);
					format(string, 40, "~r~-%d$", kstmoney);
					GameTextForPlayer(playerid, string, 3000, 1);
				}
				else {
					pData[playerid][casino_amount]-=kstmoney;
					pData[dicerid][casino_amount]+=kstmoney;
					UpdatePlayerData(playerid,"casino_amount",pData[playerid][casino_amount]);
					UpdatePlayerData(dicerid,"casino_amount",pData[dicerid][casino_amount]);
					AddItemToInventory(dicerid, kstmoney, 8);
		    		RemoveItemFromInventory(playerid, 8, kstmoney);
				}
				
				SCM(dicerid, COLOR_MAIN, "√è√Æ√ß√§√∞√†√¢√´√ø√•√¨, √Ç√ª √¢√ª√®√£√∞√†√´√®");
				SCM(playerid, COLOR_ERROR, "√ä √±√Æ√¶√†√´√•√≠√®√æ, √Ç√ª √Ø√∞√Æ√®√£√∞√†√´√®");
				format(string,40, "√Ç√ª√Ø√†√´√Æ: %i",dice1);
				SetPlayerChatBubble(playerid,string,COLOR_ERROR,30.0,10000);
				format(string,40, "√Ç√ª√Ø√†√´√Æ: %i",dice);
				SetPlayerChatBubble(dicerid,string,COLOR_MAIN,30.0,10000);
				ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,1,0,0,1,1);
				SetPlayerAttachedObject(playerid, 1, 1851, 1, 0.062400, 0.453750, 0.000000, 0.000000, 94.689310, 0.000000);
				ApplyAnimation(dicerid,"CARRY","crry_prtial",4.1,1,0,0,1,1);
				SetPlayerAttachedObject(dicerid, 1, 1851, 1, 0.062400, 0.453750, 0.000000, 0.000000, 94.689310, 0.000000);
				SetTimerEx("DiceOff",5000,0,"i",playerid), SetPVarInt(playerid, "OpustitRuki", 1);
				SetTimerEx("DiceOff",5000,0,"i",dicerid), SetPVarInt(dicerid, "OpustitRuki", 1);
				SetPVarInt(dicerid, "OpustitRuki",1);
				dicetime = gettime() + 5;
			}
			else if(dice < dice1) {

				if(bet_type == 1) {
					commission = kstmoney/100*4;
					win_amount = kstmoney-commission;
					Hook_GivePlayerMoney(dicerid, -kstmoney);
					Hook_GivePlayerMoney(playerid, win_amount);
					format(string, 40, "~g~+%d$", win_amount);
					GameTextForPlayer(playerid, string, 3000, 1);
					format(string, 40, "~r~-%d$", kstmoney);
					GameTextForPlayer(dicerid, string, 3000, 1);
				}
				else {
					pData[playerid][casino_amount]+=kstmoney;
					pData[dicerid][casino_amount]-=kstmoney;
					UpdatePlayerData(playerid,"casino_amount",pData[playerid][casino_amount]);
					UpdatePlayerData(dicerid,"casino_amount",pData[dicerid][casino_amount]);
					AddItemToInventory(playerid, kstmoney, 8);
		    		RemoveItemFromInventory(dicerid, 8, kstmoney);
				}
				
				SCM(playerid, COLOR_MAIN, "√è√Æ√ß√§√∞√†√¢√´√ø√•√¨, √Ç√ª √¢√ª√®√£√∞√†√´√®");
				SCM(dicerid, COLOR_ERROR, "√ä √±√Æ√¶√†√´√•√≠√®√æ, √Ç√ª √Ø√∞√Æ√®√£√∞√†√´√®");
				format(string,40, "√Ç√ª√Ø√†√´√Æ: %i",dice1);
				SetPlayerChatBubble(playerid,string,COLOR_MAIN,30.0,10000);
				format(string,40, "√Ç√ª√Ø√†√´√Æ: %i",dice);
				SetPlayerChatBubble(dicerid,string,COLOR_ERROR,30.0,10000);
				ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,1,0,0,1,1);
				SetPlayerAttachedObject(playerid, 1, 1851, 1, 0.062400, 0.453750, 0.000000, 0.000000, 94.689310, 0.000000);
				ApplyAnimation(dicerid,"CARRY","crry_prtial",4.1,1,0,0,1,1);
				SetPlayerAttachedObject(dicerid, 1, 1851, 1, 0.062400, 0.453750, 0.000000, 0.000000, 94.689310, 0.000000);
				SetTimerEx("DiceOff",5000,0,"i",playerid), SetPVarInt(playerid, "OpustitRuki", 1);
				SetTimerEx("DiceOff",5000,0,"i",dicerid), SetPVarInt(dicerid, "OpustitRuki", 1);
				SetPVarInt(dicerid, "OpustitRuki",1);
				dicetime = gettime() + 5;
			}
			else if(dice == dice1) {
				SCM(playerid, 0xFF9933FF, "√à√£√∞√† √ß√†√™√Æ√≠√∑√®√´√†√±√º √¢ √≠√®√∑√º√æ");
				SCM(dicerid, 0xFF9933FF, "√à√£√∞√† √ß√†√™√Æ√≠√∑√®√´√†√±√º √¢ √≠√®√∑√º√æ");
				format(string,40, "√Ç√ª√Ø√†√´√Æ: %i",dice1);
				SetPlayerChatBubble(playerid,string,0xcc9900FF,30.0,10000);
				format(string,40, "√Ç√ª√Ø√†√´√Æ: %i",dice);
				SetPlayerChatBubble(dicerid,string,0xcc9900FF,30.0,10000);
				ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,1,0,0,1,1);
				SetPlayerAttachedObject(playerid, 1, 1851, 1, 0.062400, 0.453750, 0.000000, 0.000000, 94.689310, 0.000000);
				ApplyAnimation(dicerid,"CARRY","crry_prtial",4.1,1,0,0,1,1);
				SetPlayerAttachedObject(dicerid, 1, 1851, 1, 0.062400, 0.453750, 0.000000, 0.000000, 94.689310, 0.000000);
				SetTimerEx("DiceOff",5000,0,"i",playerid), SetPVarInt(playerid, "OpustitRuki", 1);
				SetTimerEx("DiceOff",5000,0,"i",dicerid), SetPVarInt(dicerid, "OpustitRuki", 1);
				SetPVarInt(dicerid, "OpustitRuki",1);
				dicetime = gettime() + 5;
			}
			if(bet_type == 1)
			{
				BizInfo[BizEnter{playerid}][bPribil] += commission;
				BizInfo[BizEnter{playerid}][bBank] += commission;
				if(BizInfo[BizEnter{playerid}][bBank] > 10000000) BizInfo[BizEnter{playerid}][bBank] = 10000000;
				UpdateBusinessData(BizEnter{playerid}, "bPribil", BizInfo[BizEnter{playerid}][bPribil]);
				UpdateBusinessData(BizEnter{playerid}, "bBank", BizInfo[BizEnter{playerid}][bBank]);
			}
			return 1;
		}
	}
	else {
		if(GetPVarInt(playerid, "yes_is_key")) {
			show_inventory(playerid);
			DeletePVar(playerid, "yes_is_key");
		}
		else SCM(playerid, COLOR_GREY, "√Ç S√≠√≠√≠√ª√© √¨√Æ√¨√•√≠√≤ √Ç√†√¨ √≠√®√∑√•√£√Æ √≠√• √Ø√∞√•√§√´√†√£√†√æ√≤");
		return 1;
	}
	return 1;
}
CMD:yesring(playerid, params[]) {
	if(pData[playerid][pMember] != 16) return SCM(playerid, COLOR_GREY, "√ù√≤√† √¥√≥√≠√™√∂√®√ø √§√Æ√±√≤√≥√Ø√≠√† √≤√Æ√´√º√™√Æ √±√Æ√≤√∞√≥√§√≠√®√™√†√¨ √ë√å√à");
	if(GetPVarInt(playerid, "PEfir") != 999 && GetPVarInt(playerid, #type_efir) == 2) { } else return SCM(playerid, COLOR_GREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √∞√†√§√®√Æ√Ω√¥√®√∞√•");
	if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /yesring [id √®√£√∞√Æ√™√†]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(!PhoneCall[params[0]]) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√Æ√≤ √®√£√∞√Æ√™ √≠√• √ß√¢√Æ√≠√®√´ √¢ √±√≤√≥√§√®√æ");
	if(params[0] == playerid) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Ω√≤√≥ √¥√≥√≠√™√∂√®√æ √≠√† √±√•√°√•");
	SCMF(playerid, COLOR_MAIN, "√Ç√ª √Ø√∞√®√≠√ø√´√® √ß√¢√Æ√≠√Æ√™ √Æ√≤ %s", GetName(params[0]));
	format(string, 30, "-%d$~n~~w~CALL", smspricels);
	GameTextForPlayer(params[0], string, 2000, 1);
	Cell_Timer[params[0]] = SetTimerEx("time_syn", 40000, 1, "d", params[0]);
	pData[params[0]][pCashNumber] -= smspricels;
	UpdatePlayerData(params[0], "pCashNumber", pData[params[0]][pCashNumber]);
	SetPVarInt(params[0], "Tel", 1);
	SetPVarInt(params[0], "TalkingLivels", 2);
	return SCM(params[0], COLOR_YELLOW, "√Ç√ª √Ø√Æ√Ø√†√´√® √¢ √Ø√∞√ø√¨√Æ√© √Ω√¥√®√∞, √¨√Æ√¶√•√≤√• √£√Æ√¢√Æ√∞√®√≤√º");
}
CMD:toff(playerid, params[]) {
	if(pData[playerid][pMember] != 16) return SCM(playerid, COLOR_GREY, "√ù√≤√† √¥√≥√≠√™√∂√®√ø √§√Æ√±√≤√≥√Ø√≠√† √≤√Æ√´√º√™√Æ √±√Æ√≤√∞√≥√§√≠√®√™√†√¨ √ë√å√à");
	if(GetPVarInt(playerid, "PEfir") != 999 && GetPVarInt(playerid, #type_efir) == 2) { } else return SCM(playerid, COLOR_GREY, "√ç√≥√¶√≠√Æ √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √∞√†√§√®√Æ√Ω√¥√®√∞√•");
	if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /toff [id √®√£√∞√Æ√™√†]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(!PhoneCall[params[0]]) return SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√Æ√≤ √®√£√∞√Æ√™ √≠√• √ß√¢√Æ√≠√®√´ √¢ √±√≤√≥√§√®√æ");
	SCMF(playerid, COLOR_BLUE, "√Ç√ª √ß√†√¢√•√∞√∏√®√´√® √ß√¢√Æ√≠√Æ√™ √Æ√≤ %s", GetName(params[0]));
	RemovePlayerAttachedObject(params[0], 0);
	SetPlayerSpecialAction(params[0], SPECIAL_ACTION_STOPUSECELLPHONE);
	PhoneCall[params[0]] = false;
	KillTimer(Cell_Timer[params[0]]);
	SetPVarInt(params[0], "Tel", 999);
	if(pData[params[0]][pMember] == 16) SetPVarInt(params[0], "TalkingLivels", 999);
	return SCM(params[0], 0xFF9945FF, "√Ç√ª √°√ª√´√® √Æ√≤√™√´√æ√∑√•√≠√ª √Æ√≤ √∞√†√§√®√Æ√Ω√¥√®√∞√†");
}
CMD:cl(playerid) {
	if(pData[playerid][pAdmin] < 4) return 1;
	return SPD(playerid, 221, DIALOG_STYLE_MSGBOX, "{cc9900}√è√∞√•√§√≥√Ø√∞√•√¶√§√•√≠√®√•", ""CWHITE"√Ç√ª √≥√¢√•√∞√•√≠√ª, √∑√≤√Æ √µ√Æ√≤√®√≤√• √Æ√∑√®√±√≤√®√≤√º √∑√†√≤?\n"CLIGHTGREY"√è√∞√®√¨√•√∑√†√≠√®√•: √∑√†√≤ √°√≥√§√•√≤ √Æ√∑√®√π√•√≠ √≥ √¢√±√•√µ √®√£√∞√Æ√™√Æ√¢", "S√≠", "No");
}
CMD:ccl(playerid) {
	if(!IsAFull(playerid)) return 1;
	for(new i = 0; i < 99; i ++) SCM(playerid, COLOR_LIGHTGREY, "");
	return SCM(playerid, COLOR_LIGHTGREY, "");
}
stock check_badgevalid(playerid) {
	if(!IsAAudit(playerid) && !IsAMayor(playerid) && pData[playerid][pMember] != 11) {
        badge_enable[playerid] = false;
        for(new i = 0; i < sizeof(badgeTD); i++)
			TextDrawHideForPlayer(playerid, badgeTD[i]);
        Delete3DTextLabel(badge_3d[playerid]);
    }
	return 1;
}

CMD:adlist(playerid)
{
	string = "√à√¨√ø\t\t\t√í√•√´√•√¥√Æ√≠\t√é√∞√£√†√≠√®√ß√†√∂√®√ø\n\n"CWHITE"\0";
	new strlast[100], phonestr[10], bool:ads = false;
	foreach(new i:Player)
	{
		if(!IsAMayor(i)) continue;
		if(pData[i][pPnumber] != -1) format(phonestr, sizeof(phonestr), "%i", pData[i][pPnumber]);
		else format(phonestr, sizeof(phonestr), "No");

		format(strlast, sizeof(strlast), "%s[%d]\t\t%s\t\t%s %s\n", GetName(i), i, phonestr, GetMember[pData[i][pMember] - 1], (pTemp[i][pAFK] > AFK_SECOND) ? ("{ffa64d}AFK"CWHITE"") : (""));
		strcat(string, strlast);

		if(!ads) ads = true;
	}
	if(!ads) return SCM(playerid, COLOR_LIGHTGREY, "√Ä√§√¢√Æ√™√†√≤√Æ√¢ √Æ√≠√´√†√©√≠ √≠√• √≠√†√©√§√•√≠√Æ");
	else return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CPALEGREEN"√Ä√§√¢√Æ√™√†√≤√ª √Æ√≠√´√†√©√≠", string, "Cerrar","");
}
CMD:free(playerid, params[]) {
	if(pData[playerid][pMember] == 28) return 1;
	if(IsAMayor(playerid)) {
		if(pData[playerid][pJailTime] > 0 || pData[playerid][pPrisonTime] > 0) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √ß√†√™√´√æ√∑√•√≠√ª √Ø√Æ√§ √±√≤√∞√†√¶√≥. √ä√Æ√¨√†√≠S√≠ √≠√•√§√Æ√±√≤√≥√Ø√≠√†");
		if(sscanf(params,"dd",params[0],params[1])) return SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√•: /free [id √®√£√∞√Æ√™√†] [√∂√•√≠√†]");
		if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
		if(pData[params[0]][pPrisonTime] > 0) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™√† √Æ√µ√∞√†√≠√ø√æ√≤ √™√†√™ √Æ√Ø√†√±√≠√Æ√£√Æ √Ø√∞√•√±√≤√≥√Ø√≠√®√™√†. √Ñ√Æ√±√∞√Æ√∑√≠√Æ√• √Æ√±√¢√Æ√°√Æ√¶√§√•√≠√®√• √≠√•√¢√Æ√ß√¨√Æ√¶√≠√Æ");
		if(pData[params[0]][pJailTime]<=0) return SCM(playerid, COLOR_LIGHTGREY, "√à√£√∞√Æ√™ √≠√• √ß√†√™√´√æ√∑√•√≠ √Ø√Æ√§ √±√≤√∞√†√¶√≥");
		if(params[1] < 100 || params[1] > 50000) return SCM(playerid, COLOR_LIGHTGREY, "√ñ√•√≠√† √Æ√≤ 100$ √§√Æ 50000$");
		if(params[0] == playerid) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Ω√≤√≥ √¥√≥√≠√™√∂√®√æ √≠√† √±√•√°√•");
		string[0] = EOS;
		format(string,126, "√Ç√ª √Ø√∞√•√§√´√Æ√¶√®√´√® %s √¢√ª√Ø√≥√±√≤√®√≤√º √•√£√Æ √®√ß √≤√æ√∞√º√¨√ª √ß√† %d$", GetName(params[0]),params[1]);
		SCM(playerid, COLOR_BLUE, string);
		format(string,126, "%s √Ø√∞√•√§√´√†√£√†√•√≤ √¢√†√¨ √Æ√±√¢√Æ√°√Æ√§√®√≤√º√±√ø √®√ß √≤√æ√∞√º√¨√ª √ß√† %d$",pData[playerid][pName],params[1]);
		SCM(params[0], COLOR_BLUE, string);
		SetPVarInt(params[0], "FreeOffer", playerid);
		SetPVarInt(params[0], "FreePrice", params[1]);
		DeletePVar(params[0], "SposobOffer");
		return SPD(params[0],6622, DIALOG_STYLE_MSGBOX, ""CMAIN"√ì√±√´√≥√£√® √†√§√¢√Æ√™√†√≤√†", ""CWHITE"√Ç√ª√°√•√∞√®√≤√• √±√Ø√Æ√±√Æ√° √Æ√Ø√´√†√≤√ª", "√ç√†√´√®√∑√≠√ª√•", "√Å√†√≠√™");
	}
	else return SCM(playerid, COLOR_LIGHTGREY, "√î√≥√≠√™√∂√®√ø √§√Æ√±√≤√≥√Ø√≠√† √≤√Æ√´√º√™√Æ √†√§√¢√Æ√™√†√≤√†√¨ (5 √∞√†√≠√£ √¢ √¨√Ω√∞√®√®)");
}
CMD:perskin(playerid, params[]) {
	if(pData[playerid][pAdmin] < 7) return 1;
	if(sscanf(params,"dd",params[0],params[1])) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /perskin [id √®√£√∞√Æ√™√†] [id √¢√≠√•√∏√≠√Æ√±√≤√®]");
	if(params[1] > 311 || params[1] < 1) return SCM(playerid, COLOR_LIGHTGREY, "√Ñ√Æ√±√≤√≥√Ø√≠√ª id √¢√≠√•√∏√≠√Æ√±√≤√® √Æ√≤ 1 √§√Æ 311");
	if(params[1] == 74 ) return SCM(playerid, COLOR_LIGHTGREY, "S√≠√≠√≠√≥√æ √¢√≠√•√∏√≠√Æ√±√≤√º √ß√†√Ø√∞√•√π√•√≠√Æ √¢√ªS√≠√¢√†√≤√º √®√£√∞√Æ√™√†√¨");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√£√Æ √®√£√∞√Æ√™√† No");
	if(IsPlayerInAnyVehicle(params[0])) return SCM(playerid, COLOR_GREY, "√à√£√∞√Æ√™ √≠√• √§√Æ√´√¶√•√≠ √≠√†√µ√Æ√§√®√≤√º√±√ø √¢ √≤√∞√†√≠√±√Ø√Æ√∞√≤√•");
	if(pData[params[0]][pMember] > 0) return SCM(playerid, COLOR_GREY, "√à√£√∞√Æ√™ √≠√• √§√Æ√´√¶√•√≠ √±√Æ√±√≤√Æ√ø√≤√º √¢ √Æ√∞√£√†√≠√®√ß√†√∂√®√®");
	pData[params[0]][pChar] = params[1];
	UpdatePlayerData(params[0], "pChar", params[1]);
	pData[params[0]][pModel] = params[1];
	UpdatePlayerData(params[0], "pModel", params[1]);
	if(pData[playerid][pSex] == 1) format(string,128, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s[%d] √¢√ªS√≠√´ √¢√†√¨ √Ø√Æ√±√≤√Æ√ø√≠√≠√≥√æ √¢√≠√•√∏√≠√Æ√±√≤√º", pData[playerid][pName], playerid);
	else format(string,128, "√Ä√§√¨√®√≠√®√±√≤√∞√†√≤√Æ√∞ %s[%d] √¢√ªS√≠√´√† √¢√†√¨ √Ø√Æ√±√≤√Æ√ø√≠√≠√≥√æ √¢√≠√•√∏√≠√Æ√±√≤√º", pData[playerid][pName], playerid);
	SCM(params[0], 0x09E34EFF, string);
	format(string,64, "√Ç√ª √¢√ªS√≠√´√® √Ø√Æ√±√≤√Æ√ø√≠√≠√≥√æ √¢√≠√•√∏√≠√Æ√±√≤√º [%d] √®√£√∞√Æ√™√≥ %s[%d]",params[1], GetName(params[0]), params[0]);
	SetPlayerSkin(params[0], pData[params[0]][pChar]);
	return SCM(playerid, 0x09E34EFF, string);
}
CB: CookTawersName(playerid) {
	new rows;
	cache_get_row_count(rows);
	if(rows) return SCM(playerid, COLOR_ERROR, "√Ç√¢√•√§¬∏√≠√≠√Æ√• √®√¨√ø √≥√¶√• √®√±√Ø√Æ√´√º√ß√≥√•√≤√±√ø");

	new checkname[24];
	foreach(new i:Player) {
		GetPlayerName(i, checkname, 24);
		if(!strcmp(checkname,WantNickChange[playerid],true)) 
			return SCM(playerid,COLOR_ERROR,"√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† √Ø√∞√® √®√ß√¨√•√≠√•√≠√®√® √®√¨√•√≠√®");
	}

	return ChangichName(playerid);
}
weekday(d, m, y)
{
	if (m <= 2)
	    m += 12, --y;

	new j = y % 100,
		e = y / 100;
	return (d + (m+1)*26/10 + j + j/4 + e/4 - 2*e) % 7;
}
stock check_property_names(playerid, new_name[]) {
	new fam=pData[playerid][familyID];
	if(fam != -1) {
		if(!strcmp(family_info[fam][_fam_name],pData[playerid][pName])) {
			strmid(family_info[fam][_fam_owner], new_name, 0, strlen(new_name), 255);
			save_family(fam);
		}
	}
	for(new i = 0; i < _PLAYERBANK[playerid]; i ++) {
		strmid(_INFO[playerid][OWNER][i], new_name, 0, strlen(new_name), 20); 
		mysql_format(mysql_Handle,string,100, "UPDATE `bank_acc` SET `OWNER` = '%s' WHERE `NUMBER` = %i", new_name, _INFO[playerid][NUMBER][i]); 
        mysql_tquery(mysql_Handle, string);
	}
	if(pData[playerid][unikauto_Have] != 0) {
    	new str[110];
		format(str, sizeof(str), "√Ä√¢√≤√Æ√±√†√´√Æ√≠ √Ω√™√±√™√´√æ√ß√®√¢√≠√ª√µ √†√¢√≤√Æ\n\n{4682b4}√Ç√´√†√§√•√´√•√∂: "CWHITE"%s", new_name);
		UpdateDynamic3DTextLabelText(unik3dtext, 0x33AA33FF, str);
    }
	if(pData[playerid][kiosk_have] != 0) {
        new fmt_3d[55];
        format(fmt_3d, sizeof(fmt_3d), "√Ç√´√†√§√•√´√•√∂: "CWHITE"%s", new_name);
        switch(pData[playerid][kiosk_have]) {
            case 1: UpdateDynamic3DTextLabelText(kiosk_info_1, 0x4682B4FF, fmt_3d);
            case 2: UpdateDynamic3DTextLabelText(kiosk_info_2, 0x4682B4FF, fmt_3d);
            case 3: UpdateDynamic3DTextLabelText(kiosk_info_3, 0x4682B4FF, fmt_3d);
            case 4: UpdateDynamic3DTextLabelText(kiosk_info_4, 0x4682B4FF, fmt_3d);
        }
    }
	if(pData[playerid][have_garage] != -1) {
		new garageID = pData[playerid][have_garage];
		format(garage[garageID][ownerNAME],24,new_name);
		new gquery[100];
		mysql_format(mysql_Handle,gquery,sizeof(gquery),"UPDATE `garage` SET `ownerNAME`='%s' WHERE `id`=%d",new_name,garageID);
		mysql_tquery(mysql_Handle,gquery);
	}
	if(pData[playerid][pFlat] != -1) {
		new flat_id = pData[playerid][pFlat];
		strmid(flat_info[flat_id][fl_owner], new_name, 0, strlen(new_name), 255);
		mysql_format(mysql_Handle, string, 85, "UPDATE `flats` SET `_fl_owner` = '%s' WHERE `_fl_id` = %d", new_name, flat_id);
        mysql_tquery(mysql_Handle, string);
	}
	else if(pData[playerid][p_rent_flat] != -1) {
		new flat_id = pData[playerid][p_rent_flat];
		strmid(flat_info[flat_id][fl_renter], new_name, 0, strlen(new_name), 255);
		mysql_format(mysql_Handle, string, 85, "UPDATE `flats` SET `_fl_renter` = '%s' WHERE `_fl_id` = %d", new_name, flat_id);
        mysql_tquery(mysql_Handle, string);
	}
    if(pData[playerid][pHotel] != -1) {
    	new hotelid = pData[playerid][pHotel];
        format(hotel_info[hotelid][hotel_owner], 24, new_name);
        mysql_format(mysql_Handle, string, 85, "UPDATE `hotel` SET `owner` = '%s' WHERE `id` = %d", new_name, hotelid);
        mysql_tquery(mysql_Handle, string);
    }
    new home = pData[playerid][pHouse];
    if(home != -1) {
        strmid(HouseInfo[home][hOwner], new_name, 0, strlen(new_name), 255);
        SaveHouse(pData[playerid][pHouse]);
    }
    new biz = pData[playerid][pBusiness];
    if(biz != -1) {
        strmid(BizInfo[biz][bOwner], new_name, 0, strlen(new_name), 255);
        UpdateBizInfo(biz);
        SaveBusiness(biz);
    }
    if(pData[playerid][autoHave] != 0) {
    	new str[90];
		format(str, sizeof(str), "√Ä√¢√≤√Æ√¨√Æ√°√®√´√º√≠√†√ø √¥√†√°√∞√®√™√†\n\n{4682b4}√Ç√´√†√§√•√´√•√∂: "CWHITE"%s",new_name);
		UpdateDynamic3DTextLabelText(autoworkbiz3D, 0x33AA33FF, str);
    }
    if(pData[playerid][food_have] != 0) {
        new foodID=pData[playerid][food_have],foodstr[140];
        if(foodID == 1) {
            format(foodstr, sizeof(foodstr), "√ã√†√∞√•√™ √± √•√§√Æ√©\n\n{4682b4}√Ç√´√†√§√•√´√•√∂: "CWHITE"%s\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"350000$", new_name);
            UpdateDynamic3DTextLabelText(food_bomj3d, 0x33AA33FF, foodstr);
        }
        else if(foodID == 2) {
            format(foodstr, sizeof(foodstr), "√ã√†√∞√•√™ √± √•√§√Æ√©\n\n{4682b4}√Ç√´√†√§√•√´√•√∂: "CWHITE"%s\n{4682b4}√ë√≤√Æ√®√¨√Æ√±√≤√º: "CWHITE"350000$", new_name);
            UpdateDynamic3DTextLabelText(food_bomj3d_2, 0x33AA33FF, foodstr);
        }
    }
    if(pData[playerid][prok_have] != 0) {
        new fmt_3d[55];
        format(fmt_3d, sizeof(fmt_3d), "√Ç√´√†√§√•√´√•√∂: "CWHITE"%s", new_name);
        switch(pData[playerid][prok_have]) {
            case 1: UpdateDynamic3DTextLabelText(prok_info_1, 0x4682B4FF, fmt_3d);
            case 2: UpdateDynamic3DTextLabelText(prok_info_2, 0x4682B4FF, fmt_3d);
            case 3: UpdateDynamic3DTextLabelText(prok_info_3, 0x4682B4FF, fmt_3d);
            case 4: UpdateDynamic3DTextLabelText(prok_info_4, 0x4682B4FF, fmt_3d);
            case 5: UpdateDynamic3DTextLabelText(prok_info_5, 0x4682B4FF, fmt_3d);
            case 6: UpdateDynamic3DTextLabelText(prok_info_6, 0x4682B4FF, fmt_3d);
            case 7: UpdateDynamic3DTextLabelText(prok_info_7, 0x4682B4FF, fmt_3d);
        }
    }
    new filln = pData[playerid][pFilling];
    if(filln != -1) {
        strmid(Filling[filln][fOwner], new_name, 0, strlen(new_name), 255);
        update_3dtext_fill(filln);
        update_text_fill(filln);
        UpdateFuelInfoEx(playerid, "fOwner", Filling[pData[playerid][pFilling]][fOwner]);
    }
    new billb_id = pData[playerid][p_bill_id];
    if(billb_id > 0) {
        strmid(billboard_info[billb_id][bs_renter], new_name, 0, strlen(new_name), 255);
        new str[100];
        mysql_format(mysql_Handle, str, 100, "UPDATE `billboards` SET `bs_renter` = '%s' WHERE `bs_id` = %d", new_name, billb_id);
        mysql_tquery(mysql_Handle, str);
    }
    if(strcmp(pData[playerid][pFamilyName], "None", true)) {
        new id = GetPlayerID(pData[playerid][pFamilyName]);
        if(IsPlayerConnected(id)) 
            strmid(pData[id][pFamilyName], new_name, 0, strlen(new_name), 255);
        new query_w[105];
        mysql_format(mysql_Handle, query_w, sizeof(query_w), "UPDATE `accounts` SET `pFamilyName` = '%s' WHERE `Name` = '%s'", new_name, pData[playerid][pFamilyName]);
        mysql_tquery(mysql_Handle, query_w);
    }
}
stock ChangichName(playerid) {
    check_property_names(playerid, WantNickChange[playerid]);
    string[0] = EOS;
    if(pData[playerid][pSex] == 1) format(string,128, "%s √±√¨√•√≠√®√´ √®√¨√ø √≠√† %s",pData[playerid][pName],WantNickChange[playerid]);
	else format(string,128, "%s √±√¨√•√≠√®√´√† √®√¨√ø √≠√† %s",pData[playerid][pName],WantNickChange[playerid]);
	SCMTA(0xCCFF00FF, string);
	SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CMAIN"√à√¨√ø √®√ß√¨√•√≠√•√≠√Æ", ""CWHITE"√ç√• √ß√†√°√≥√§√º√≤√• Cambio √®√¨√ø √¢ √Æ√™√≠√• √™√´√®√•√≠√≤√† SA-MP\n√ê√•√™√Æ√¨√•√≠√§√≥√•√¨ √Ø√∞√ø√¨√Æ √±√•√©√∑√†√± √±√¢√•√∞√≠√≥√≤√º √®√£√∞√≥ √® √±√§√•√´√†√≤√º √Ω√≤√Æ.\n\n√ë √Ç√†√∏√•√£√Æ √±√∑¬∏√≤√† √°√ª√´√Æ √±√≠√ø√≤√Æ "CMAIN"25 √∞√≥√°.", "Cerrar", "");
	SCM(playerid, -1, "√Ç√†√¨ √≠√•√Æ√°√µ√Æ√§√®√¨√Æ √≥√™√†√ß√†√≤√º √≠√Æ√¢√Æ√• √®√¨√ø √¢ {0099ff}√Æ√™√≠√• √™√´√®√•√≠√≤√† SAMP");
	SCM(playerid, -1, "√ê√•√™√Æ√¨√•√≠√§√≥√•√¨ √Ø√∞√ø√¨√Æ √±√•√©√∑√†√± √±√¢√•√∞√≠√≥√≤√º √®√£√∞√≥ {00FF00}(Alt+Tab) "CWHITE"√® √±√§√•√´√†√≤√º √Ω√≤√Æ");
	SetPlayerName(playerid, WantNickChange[playerid]);
	withdraw_donate(playerid, 25, "√ë√¨√•√≠√† √®√£√∞√Æ√¢√Æ√£√Æ √≠√®√™√†");
	PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
	new years, months, days,data[32];
	DeletePVar(playerid, "setname");
	getdate(years, months, days);
	format(data, 32, "%02d.%02d.%04d", days, months, years);
	mysql_format(mysql_Handle,string, 200, "INSERT INTO `log_name` (`Name`, `IdAcc`, `NewName`, `Date`) VALUES ('%s',%d,'%s','%s')", pData[playerid][pName], pData[playerid][pID], WantNickChange[playerid], data);
	mysql_tquery(mysql_Handle,string);
	pData[playerid][pName] = WantNickChange[playerid];
	return UpdatePlayerDataEx(playerid, "Name", WantNickChange[playerid]);
}
stock IsTextInvalid(text[])
{
	return (strfind(text, "none") != -1 || strfind(text, "'") != -1 || strfind(text, "/") != -1 ||
	strfind(text, "%") != -1 || strfind(text, ".") != -1 || strfind(text, "&") != -1 || strfind(text, "*", true) != -1 || strfind(text, "@", true) != -1 || strfind(text, "(", true) != -1 ||
	strfind(text, ")", true) != -1 || strfind(text, "`") != -1 || strfind(text, "[") != -1 || strfind(text, "]", true) != -1 || strfind(text, ",", true) != -1) ? true : false;
}
stock LoadPhonesServer() {
	new fmt_time[16], fmt_date[62], yy, mm, dd, hh, mi;
	gettime(hh, mi);
	getdate(yy, mm, dd);
	format(fmt_time, sizeof(fmt_time), "%02d:%02d", hh, mi);
	TextDrawSetString(PHONETD[14], fmt_time);
	format(fmt_date, sizeof(fmt_date), "%02d.%02d.%d~n~%s", dd, mm, yy, wd_name_eng[weekday(dd, mm, yy)]);
	TextDrawSetString(PHONETD[15], fmt_date); 
}
stock LoadDrawsInit() {
	#include <loaddrawsinit>
	#include <inventory_TD>
	#include <logoserver>
}
stock TimeConverter(seconds) {
	new strings[12];
	format(strings, 12, "%02i:%02i", seconds/60, seconds%60);
	return strings;
}
stock TimeConverterGang(seconds) {
	new strings[12];
	format(strings, 12, "%i:%02i", seconds/60, seconds%60);
	return strings;
}
stock SendBandMafia(one,two,color,str1[]) {
	foreach(new x:Player) {
		if(pData[x][pMember] == one || pData[x][pMember] == two) SCM(x,color,str1),PlayerPlaySound(x,30802,0.0,0.0,0.0);
	}
	return 1;
}
stock GetNameUnits(fractid, unitid) {
	new u;

	if(fractid == 22 && unitid == 1) u = 1;
	if(fractid == 22 && unitid == 2) u = 10;
	if(fractid == 22 && unitid == 3) u = 21;
	if(fractid == 22 && unitid == 4) u = 2;

	if(fractid == 23 && unitid == 1) u = 4;
	if(fractid == 23 && unitid == 2) u = 28;
	if(fractid == 23 && unitid == 3) u = 29;

	if(fractid == 24 && unitid == 1) u = 19;
	if(fractid == 24 && unitid == 2) u = 20;
	if(fractid == 24 && unitid == 3) u = 27;

	if(fractid == 26 && unitid == 1) u = 7;
	if(fractid == 26 && unitid == 2) u = 8;
	if(fractid == 26 && unitid == 3) u = 9;

	return u;
}
stock GFrac(frac) {
	new namegang[20];
	switch(frac) {
		case 15: namegang = "Grove Street";
		case 17: namegang = "Varrios Los Aztecas";
		case 12: namegang = "The Ballas";
		case 18: namegang = "The Rifa";
		case 13: namegang = "Los Santos Vagos";
	}
	return namegang;
}
stock MafFrac(frac) {
	new namegang[20];
	switch(frac) {
		case 5: namegang = "La Cosa Nostra";
		case 6: namegang = "Yakuza";
		case 14: namegang = "Russian Mafia";
	}
	return namegang;
}
stock GetPlayer2DZone(playerid, zone[], len) {
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	for(new i = 0; i != sizeof(gSAZones); i ++ ) {
		if(x >= gSAZones[i][SAZONE_AREA][0] && x <= gSAZones[i][SAZONE_AREA][3] && y >= gSAZones[i][SAZONE_AREA][1] && y <= gSAZones[i][SAZONE_AREA][4]) return format(zone, len, gSAZones[i][SAZONE_NAME], 0);
	}
	return 0;
}
stock GetZonaName  ( Float: x,  Float: y ) {
	for ( new i = 0; i != sizeof ( gSAZones ); i ++ ) {
		if ( x >= gSAZones[i][SAZONE_AREA][0] && x <= gSAZones[i][SAZONE_AREA][3] && y >= gSAZones[i][SAZONE_AREA][1] && y <= gSAZones[i][SAZONE_AREA][4]) return i;
	}
	return 1;
}
stock GetCityName ( Float: x,  Float: y) {
	for ( new i = 0; i != sizeof ( gSAZonesCity ); i ++ ) {
		if ( x >= gSAZonesCity[i][SAZONE_AREA][0] && x <= gSAZonesCity[i][SAZONE_AREA][3] && y >= gSAZonesCity[i][SAZONE_AREA][1] && y <= gSAZonesCity[i][SAZONE_AREA][4] ) return i;
	}
	return 1;
}
stock SendDead(ids,whoids,killerid,playerid,reason) {
	foreach(new m:Player) {
		if(pData[m][pMember] == ids || pData[m][pMember] == whoids) SendDeathMessageToPlayer(m, killerid, playerid, reason);
	}
	return 1;
}

CB: GzCheck(i, napad, vlad) {
	if(stopped_capture) {
		foreach(new z:Player) {
			if(pData[z][pAdmin] == 0 && pData[z][pMember] != napad && pData[z][pMember] != vlad) continue;
			EndCapt(z);
		}
		CountOnZone[napad] = 0;
		CountOnZone[vlad] = 0;
		GangZoneStopFlashForAll(GZInfo[i][gID]);
		GangZoneHideForAll(GZInfo[i][gID]);
		GangZoneShowForAll(GZInfo[i][gID], GetGangZoneColor(i));
		CaptureTime = 20;
		CaptureInfo = false;
		stopped_capture = false;
		SaveGZ(i);
		KillTimer(GZInfo[i][gzTimer]);
		SendBandMafia(napad, vlad, 0xFFCD00FF, stopping_mes);
		return AdminMessageCapt(0xFFCD00FF, stopping_mes);
	}
	foreach(new m:Player) {
		if(pData[m][pAdmin] < 1 && pData[m][in_capture] && !IsAGang(m)) EndCapt(m);
		if(pData[m][pAdmin] > 0 || pData[m][pMember] == napad || pData[m][pMember] == vlad) {
			if(!pData[m][in_capture]) {
				PlayerTextDrawShow(m, captureTD[m]);
				pData[m][in_capture] = true;
			}
			format(GZInfo[i][strcpt],150,"Time: %s~n~~w~%s__~r~%d~n~~w~%s__~r~%d", 
			TimeConverterGang(GZInfo[i][gTime]), GFrac(vlad), CountOnZone[vlad], GFrac(napad), CountOnZone[napad]);
			PlayerTextDrawSetString(m,captureTD[m],GZInfo[i][strcpt]);
		}
	}
	if(GZInfo[i][gTime]) GZInfo[i][gTime] --;
	else if(GZInfo[i][gTime] <= 0) {
		if(CountOnZone[napad] >= CountOnZone[vlad])
		{
			frac_gangzone[GZInfo[i][gFrakVlad]]--;
			frac_gangzone[GZInfo[i][gNapad]]++;
			GZInfo[i][gFrakVlad] = GZInfo[i][gNapad];
			format(string,164,"%s √ß√†√µ√¢√†√≤√®√´√® √≤√•√∞√∞√®√≤√Æ√∞√®√æ √≥ √°√†√≠√§√ª %s √¢ √∞√†√©√Æ√≠√• %s",GFrac(napad),GFrac(vlad),GZInfo[i][GZName]);
		}
		else 
			format(string,164,"%s √≠√• √≥S√≠√´√Æ√±√º √ß√†√µ√¢√†√≤√®√≤√º √≤√•√∞√∞√®√≤√Æ√∞√®√æ √≥ √°√†√≠√§√ª %s √¢ √∞√†√©√Æ√≠√• %s",GFrac(napad),GFrac(vlad),GZInfo[i][GZName]);
		SendBandMafia(napad,vlad,COLOR_ERROR,string);
		AdminMessageCapt(COLOR_ERROR, string);
		foreach(new m:Player) {
			if(pData[m][pAdmin] == 0 && pData[m][pMember] != napad && pData[m][pMember] != vlad) continue;
			EndCapt(m);
		}
		CountOnZone[napad] = 0;
		CountOnZone[vlad] = 0;
		GangZoneStopFlashForAll(GZInfo[i][gID]);
		GangZoneHideForAll(GZInfo[i][gID]);
		GangZoneShowForAll(GZInfo[i][gID],GetGangZoneColor(i));
		CaptureTime = 20;
		CaptureInfo=false;
		SaveGZ(i);
		KillTimer(GZInfo[i][gzTimer]);
	}
	return 1;
}
stock EndAffect(m) {
	PlayerTextDrawHide(m, affectTD[m]);
	for(new num = 0; num < 10; num ++) SendDeathMessageToPlayer(m,6000,5005, 255);
	return pData[m][in_capture] = false;
}
stock EndCapt(m) {
	PlayerTextDrawHide(m, captureTD[m]);
	for(new num = 0; num < 10; num ++) SendDeathMessageToPlayer(m,6000,5005, 255);
	return pData[m][in_capture] = false;
}
stock GetGangName(nnid) {
	new namegang[24];
	switch(nnid) {
		case 12: namegang = "The Ballas";
		case 13: namegang = "Los Santos Vagos";
		case 15: namegang = "Grove Street";
		case 17: namegang = "Varrios Los Aztecas";
		case 18: namegang = "The Rifa";
		default: namegang = "None";
	}
	return namegang;
}

public OnDynamicObjectMoved(objectid) {
	SaluteOnObjectMovedEx(objectid);

	if(objectid == mayak) rotate_mayak();
	if(objectid == minefirstlift[0]) {
		new Float: pos_z;
		Streamer_GetFloatData(STREAMER_TYPE_OBJECT, objectid, E_STREAMER_Z, pos_z);
		if(pos_z > 0) {
			MoveDynamicObject(minefirstlift[1], -771.5177, -1786.4376, 14.2662, 0.7);
			SetTimer("MineFirstLiftUpDoorsOpen", 5000, false);
		}
		else {
			MoveDynamicObject(minefirstlift[2], -771.5177, -1786.4376, -37.3100, 0.7);
			SetTimer("MineFirstLiftDownDoorsOpen", 5000, false);
		}
	}
	else if(objectid == minesecondlift[0]) {
		new Float:pos_z;
		Streamer_GetFloatData(STREAMER_TYPE_OBJECT, objectid, E_STREAMER_Z, pos_z);
		if(pos_z > 0) {
			MoveDynamicObject(minesecondlift[1], -749.9438, -1776.8419, 14.2662, 0.7);
			SetTimer("MineSecondLiftUpDoorsOpen", 5000, false);
		}
		else {
			MoveDynamicObject(minesecondlift[2], -749.9438, -1776.8419, -87.3062, 0.7);
			SetTimer("MineSecondLiftDownDoorsOpen", 5000, false);
		}
	}
	return 1;
}
CB: DiceOff() {
	foreach(new i:Player) {
		if(!GetPVarInt(i, "OpustitRuki")) continue;
		DeletePVar(i, "OpustitRuki");
		if(IsPlayerAttachedObjectSlotUsed(i,1)) RemovePlayerAttachedObject(i,1);
		ClearAnimations(i);
	}
}
CB: ClearAnimText(playerid) return ApplyAnimation(playerid, "CARRY","crry_prtial",4.0,0,0,0,0,0);
stock UpdateBusinessData(idx, stolb[], znach) {
	new QUERY[128];
	mysql_format(mysql_Handle,QUERY,128,"UPDATE `business` SET `%s` = %d WHERE `bID` = %d LIMIT 1", stolb, znach, idx);
	mysql_tquery(mysql_Handle, QUERY);
	return 1;
}
stock UpdatePlayerDataEx(playerid, stolb[], znach[]) {
	new Query[512];
	mysql_format(mysql_Handle,Query, sizeof(Query), "UPDATE `accounts` SET  %s = '%s' WHERE `id` = %d", stolb, znach, pData[playerid][pID]);
	mysql_tquery(mysql_Handle, Query);
	return 1;
}
stock UpdateFuelInfo(playerid, fields[], data) {
	new str[128];
	mysql_format(mysql_Handle,str,128,"UPDATE `filling` SET `%s` = %d WHERE `fID` = %i LIMIT 1", fields,data,pData[playerid][pFilling]);
	mysql_tquery (mysql_Handle, str);
	return 1;
}
stock UpdateFuelInfoEx(playerid, fields[], data[]) {
	new str[128];
	mysql_format(mysql_Handle,str,128,"UPDATE `filling` SET `%s` = '%s' WHERE `fID` = %i LIMIT 1", fields,data,pData[playerid][pFilling]);
	mysql_tquery (mysql_Handle, str);
	return 1;
}
stock UpdatePlayerData(playerid, fields[], data) {
	new str[144];
	mysql_format(mysql_Handle,str, 144, "UPDATE `accounts` SET `%s` = %d WHERE `id` = %d LIMIT 1", fields, data, pData[playerid][pID]);
	mysql_tquery (mysql_Handle, str);
	return 1;
}

stock explode(aExplode[][], const sSource[], const sDelimiter[] = " ", iVertices = sizeof aExplode, iLength = sizeof aExplode[]) {
	new
	iNode,
	iPointer,
	iPrevious = -1,
	iDelimiter = strlen(sDelimiter);

	while(iNode < iVertices) {
		iPointer = strfind(sSource, sDelimiter, false, iPointer);
		if(iPointer == -1) {
			strmid(aExplode[iNode], sSource, iPrevious, strlen(sSource), iLength);
			break;
		}
		else strmid(aExplode[iNode], sSource, iPrevious, iPointer, iLength);
		iPrevious = (iPointer += iDelimiter);
		++iNode;
	}

	return iPrevious;
}
CB: OnPlayerSelectPassword(playerid) {
	new rows;
	cache_get_row_count(rows);
	if(rows) return SPD(playerid, 156, DIALOG_STYLE_INPUT, ""CMAIN"√ç√Æ√¢√ª√© √Ø√†√∞√Æ√´√º", ""CWHITE"√Ç√¢√•√§√®√≤√• √≠√Æ√¢√ª√© √Ø√†√∞√Æ√´√º √¢ √Ø√Æ√´√• √≠√®√¶√•:", "Cambio", "Cerrar");
	else {
		SCM(playerid, COLOR_ERROR, "√Ç√ª √¢√¢√•√´√® √≠√•√Ø√∞√†√¢√®√´√º√≠√ª√© √Ø√†√∞√Æ√´√º");
		SPD(playerid, 118, DIALOG_STYLE_LIST, ""CPALEGREEN"√Å√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√º", "[1] Google Authenticator\n[2] √ä√Æ√§ √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√®\n[3] √à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ √ß√†√π√®√≤√•\n{00cc66}[4] Cambio √Ø√†√∞√Æ√´√º\n{0099ff}[5] √ë√≤√†√≤√≥√± √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√®\n"CGREY"[6] √è√Æ√§√≤√¢√•√∞√§√®√≤√º E-Mail", "Seleccione", "Siguiente");
	}
	return 1;
}
stock SaveBusiness(bizid) {
	new save_bb[550];
	mysql_format(mysql_Handle,save_bb, 550, "UPDATE `business` SET `bOwner` = '%s', `bPay` = %d,`bCena1` = %d, `bCena2` = %d, `bCena3` = %d, `bCena4` = %d, `bCena5` = %d, `bCena6` = %d, `bCena7` = %d, `bCena8` = %d, `bCena9` = %d, `bVhod` = %d, `bBank` = %d, `bProd`=%d,`bProdOrder`=%d,`bProdOrderPrice`=%d, `bProdMax`=%d WHERE `bID` = %d",
	BizInfo[bizid][bOwner],BizInfo[bizid][bPay],BizInfo[bizid][bCena][0],BizInfo[bizid][bCena][1],BizInfo[bizid][bCena][2],BizInfo[bizid][bCena][3],BizInfo[bizid][bCena][4],BizInfo[bizid][bCena][5],BizInfo[bizid][bCena][6],BizInfo[bizid][bCena][7],BizInfo[bizid][bCena][8],BizInfo[bizid][bVhod],BizInfo[bizid][bBank],
	BizInfo[bizid][bProd],BizInfo[bizid][bProdOrder],BizInfo[bizid][bProdOrderPrice],BizInfo[bizid][bProdMax],bizid);
	return mysql_tquery(mysql_Handle, save_bb);
}
stock SaveHouse(houseid) {
	new save_strr[850];
	mysql_format(mysql_Handle,save_strr,850,
	"UPDATE `house` SET `hPay`=%d,`hADoor`=%d,`hSub`=%d,`hOwner`='%s',`hValue`=%d,`hLock`=%d,`hOwned`=%d,`hKlass`=%d,`hSafe` = %d, `hGun1` = %d,`hGun2` = %d,`hGun3` = %d,`hGun4` = %d,`hGun5` = %d,`hGunAmmo1` = %d,`hGunAmmo2` = %d,`hGunAmmo3` = %d,`hGunAmmo4` = %d,`hGunAmmo5` = %d,`hPool` = %d WHERE `hID` = %d",
	HouseInfo[houseid][hPay],HouseInfo[houseid][hADoor],HouseInfo[houseid][hSub],HouseInfo[houseid][hOwner],HouseInfo[houseid][hValue],HouseInfo[houseid][hLock],HouseInfo[houseid][hOwned],HouseInfo[houseid][hKlass],HouseInfo[houseid][hSafe],
	HouseInfo[houseid][hGun][0],HouseInfo[houseid][hGun][1],HouseInfo[houseid][hGun][2],HouseInfo[houseid][hGun][3],HouseInfo[houseid][hGun][4],HouseInfo[houseid][hGunAmmo][0],HouseInfo[houseid][hGunAmmo][1],HouseInfo[houseid][hGunAmmo][2],HouseInfo[houseid][hGunAmmo][3],HouseInfo[houseid][hGunAmmo][4],HouseInfo[houseid][hPool],houseid);
	return mysql_tquery(mysql_Handle, save_strr);
}
stock GetNumberOfPlayersOnThisIP(test_ip[]) {
	new against_ip[32];
	new ip_count = 0;
	foreach(new x:Player) {
		if(!IsPlayerConnected(x)) continue;
		GetPlayerIp(x,against_ip,32);
		if(!strcmp(against_ip,test_ip)) ip_count++;
	}
	return ip_count;
}
stock IsNumeric(string_massive[]) {
	for (new i = 0, j = strlen(string_massive); i < j; i ++) if(string_massive[i] > '9' || string_massive[i] < '0') return 0;
	return 1;
}
CB: CopsWanted(playerid,player_id) {
	if(!IsPlayerConnected(player_id)) {
		patrul_id[playerid] = -1;
		KillTimer(GetPVarInt(playerid, "StartWanted")), DeletePVar(playerid, "StartWanted");
		DisablePlayerCheckpoint(playerid);
		SCM(playerid, COLOR_MAIN, "√è√∞√•√±√´√•√§√Æ√¢√†√≠√®√• √ß√†√¢√•√∞√∏√•√≠√Æ! √à√£√∞√Æ√™ √Ø√Æ√™√®√≠√≥√´ √±√•√∞√¢√•√∞");
		return 1;
	}
	if(GetPlayerInterior (player_id)) {
		patrul_id[playerid] = -1;
		KillTimer(GetPVarInt(playerid, "StartWanted")), DeletePVar(playerid, "StartWanted");
		DisablePlayerCheckpoint(playerid);
		return SCM(playerid, COLOR_MAIN, "√è√∞√•√±√´√•√§√Æ√¢√†√≠√®√• √ß√†√¢√•√∞√∏√•√≠√Æ! √ó√•√´√Æ√¢√•√™ √±√™√∞√ª√´√±√ø (√¢√µ√Æ√§ √¢ √Ø√Æ√¨√•√π√•√≠√®√•)");
	}
	new Float:Position[3];
	GetPlayerPos(player_id, Position[0],Position[1],Position[2]);
	SetPlayerCheckpoint(playerid, Position[0],Position[1],Position[2], 3);
	return 0;
}
stock ShowAdvertList(playerid) {
	string[0]=EOS;
	new data[3][30],index;
	format(data[0],30,"["CMAIN"√Ø√∞√Æ√¢√•√∞√•√≠√Æ"CWHITE"]"), format(data[1],30,"["CYELLOW"√Ø√∞√Æ√¢√•√∞√ø√•√≤√±√ø"CWHITE"]");
	for(new i = 0; i<MAX_ADVERT_COUNT;i ++) {
		if(!gAdvert[i][adBusy]) format(string,900,"%s[%d] -\n",string,i + 1);
		else {
			if(gAdvert[i][adCheking]) index = 1;
			else if(gAdvert[i][adCheked]) index = 0;
			else index = 2;
			format(string,900,"%s[%d] %s %s\n",string,i + 1,gAdvert[i][adSender],data[index]);
		}
	}
	return SPD(playerid,8101,2, ""CMAIN"√é√°√∫√ø√¢√´√•√≠√®√ø",string, "Seleccione", "Cerrar");
}
stock GetVehicleKey(playerid, vehicleid) return (rentID[vehicleid] == playerid) ? true : false;

stock RegistrationPlayer(playerid, skin)
{
	if(!pData[playerid][pLogin]) return Kick(playerid);

	new year,month,day,hour,minuite,second;
	getdate(year, month, day);
	gettime(hour,minuite,second);
	format(pData[playerid][pDataReg],32,"%02d.%02d.%02d %02d:%02d",day,month,year,hour,minuite);
	strmid(pData[playerid][pLoadName], pData[playerid][pName], 0, MAX_PLAYER_NAME);

	GetPlayerIp(playerid, pData[playerid][pIpReg], 16);

	pData[playerid][pLevel] = 1;
	pData[playerid][pCash] = 200;
	pData[playerid][pChar] = pData[playerid][pModel] = skin;
	pData[playerid][pHouse] = pData[playerid][pBusiness] = pData[playerid][pFilling] = -1;

	pData[playerid][pSex] = GetPVarInt(playerid, #reg_sex);
	GetPVarString(playerid, #reg_email, pData[playerid][pEmail], 40);

	pData[playerid][pReferID] = GetPVarInt(playerid, #reg_friendid);
	GetPVarString(playerid, #reg_friendname, pData[playerid][pRefer], MAX_PLAYER_NAME);

	pData[playerid][pPnumber] = -1;
	pData[playerid][pPassport] = true;

	new regquery[800];
	mysql_format(mysql_Handle, regquery, sizeof regquery, "INSERT INTO `accounts` (`pPassport`,`Name`,`pKey`,`pLevel`,`pPnumber`,`pBank`,`pCash`,`pChar`,`pModel`,`pDataReg`,`pIpReg`,`pEmail`,`pDrug`,`pDrugID`,`pSex`) \
	VALUES (1, '%s', MD5('%s'), 1, -1, 0, %d, %d, %d, '%s', '%s', '%s', '%s', %d, %d)",
	pData[playerid][pName],	pData[playerid][pKey], pData[playerid][pCash], skin,skin, pData[playerid][pDataReg], pData[playerid][pIpReg], pData[playerid][pEmail], pData[playerid][pRefer], pData[playerid][pReferID], pData[playerid][pSex]);
	mysql_tquery(mysql_Handle, regquery);

	auth_camstate[playerid] = -1;
	HideAuthObjects(playerid);
	SetPVarInt(playerid, "anti_email", true);
    SetPVarInt(playerid, "anti_sales", true);
	string[0] = EOS;
	mysql_format(mysql_Handle, string, 128, "SELECT * FROM `accounts` WHERE `Name` = '%s'", pData[playerid][pName]);
	mysql_tquery(mysql_Handle, string, "LoginCallback", "d", playerid);
	
	DeletePVar(playerid, "RegisterPlayer");
	DeletePVar(playerid, #reg_friendname);
	DeletePVar(playerid, #reg_friendid);
	DeletePVar(playerid, #reg_sex);
	DeletePVar(playerid, #reg_email);

	SCM(playerid, 0x009900FF, "√ê√•√£√®√±√≤√∞√†√∂√®√ø √ß√†√¢√•√∞√∏√•√≠√†!");
	SCM(playerid, -1, "√ê√•√™√Æ√¨√•√≠√§√≥√•√¨ √¢√†√¨ √Ø√∞√Æ√∑√®√≤√†√≤√º √∞√†√ß√§√•√´ √Ø√Æ√¨√Æ√π√® √Ø√Æ √®√£√∞√• "CLITEBLUE"(/help)");
	SCM(playerid, -1, "√ó√≤√Æ√°√ª √Æ√≤√™√∞√ª√≤√º √¨√•√≠√æ √®√£√∞√Æ√™√†, √¢√¢√•√§√®√≤√• "CYELLOW"/menu (/mn)");
	SCM(playerid, -1, "√ó√≤√Æ√°√ª √Æ√≤√™√∞√ª√≤√º √®√≠√¢√•√≠√≤√†√∞√º, √≠√†√¶√¨√®√≤√• {6699cc}Y "CWHITE"√®√´√® √¢√¢√•√§√®√≤√• {6699cc}/inv");
	SCM(playerid, -1, "3 √§√≠√ø √Ç√†√¨ √§√Æ√±√≤√≥√Ø√≠√ª √°√•√±√Ø√´√†√≤√≠√ª√• √±√™√≥√≤√•√∞√ª, √Ø√Æ√±√´√• √Ω√≤√Æ√£√Æ √Ç√†√¨ √Ø√∞√®√§√•√≤√±√ø √Ø√Æ√´√º√ß√Æ√¢√†√≤√º√±√ø √≤√†√™√±√® √®√´√® √™√≥√Ø√®√≤√º √¨√†√∏√®√≠√≥");
	return 1;
}
stock LoadCarPlayer(playerid, carid) {
	new house = pData[playerid][pHouse],
		flat = pData[playerid][pFlat],
		hotel = pData[playerid][pHotel],
		garageid=pData[playerid][have_garage];
	if(carid < 1 || carid > 3) return 1;
	if(garageid == -1 && house == -1 && hotel == -1 && flat == -1) return 1;
	if(pData[playerid][pCar][carid - 1] == 0) return 1;
	if(garageid != -1 && carid==1) {
		if(house_carid[playerid][0] != 0) {
			DestroyVehicle(house_carid[playerid][0]);
			house_carid[playerid][0] = 0;
		}

		if(GetPVarInt(playerid, "pos_in_Unik")) {
			house_carid[playerid][0] = Home_CreateVehicle(pData[playerid][pCar][0], GetPVarFloat(playerid, "Unikpos_X"), GetPVarFloat(playerid, "Unikpos_Y"), GetPVarFloat(playerid, "Unikpos_Z"), GetPVarFloat(playerid, "Unikpos_A"), 0, 0, CAR_SPAWN);
			DeletePVar(playerid, "pos_in_Unik");
			DeletePVar(playerid, "Unikpos_X");
			DeletePVar(playerid, "Unikpos_Y");
			DeletePVar(playerid, "Unikpos_Z");
			DeletePVar(playerid, "Unikpos_A");
		}
		else if(pData[playerid][t_color_1][0] == -1 || pData[playerid][t_color_2][0] == -1) house_carid[playerid][0] = Home_CreateVehicle(pData[playerid][pCar][0], garage[garageid][gcarpos][0],garage[garageid][gcarpos][1],garage[garageid][gcarpos][2],garage[garageid][gcarpos][3], 7, 7, CAR_SPAWN);
		else house_carid[playerid][0] = Home_CreateVehicle(pData[playerid][pCar][0], garage[garageid][gcarpos][0],garage[garageid][gcarpos][1],garage[garageid][gcarpos][2],garage[garageid][gcarpos][3], pData[playerid][t_color_1][0], pData[playerid][t_color_2][0], CAR_SPAWN);

		new veh = house_carid[playerid][0];
		if(pData[playerid][FuelCar][0] < 10) pData[playerid][FuelCar][0] = 10;
		VehInfo[veh][vFuel] = pData[playerid][FuelCar][0];
		LinkVehicleToInterior(veh, 0);
		SetVehicleVirtualWorld(veh, 0);

		LoadTuneObjectsAndAlarm(playerid,veh, 0);

		new engine, lights, alarm, doors, bonnet, boot, objective;
		GetVehicleParamsEx(veh, engine, lights, alarm, doors, bonnet, boot, objective);
		SetVehicleParamsEx(veh, 0, lights, alarm, doors, bonnet, boot, objective);

		if(pData[playerid][Un_CarType][0] > 0) {
			sscanf(p_car_charact_1[playerid], "p<,>a<i>[7]", veh_charact[veh]);
			set_objects_on_car(pData[playerid][Un_CarType][0],veh);
		}

		if(pData[playerid][t_color_1][0] != -1 && pData[playerid][t_color_2][0] != -1)
			ChangeVehicleColor(veh, pData[playerid][t_color_1][0], pData[playerid][t_color_2][0]);
		return 1;
	}
	if(house != -1) {
		if(house_carid[playerid][0] != 0) {
			DestroyVehicle(house_carid[playerid][0]);
			house_carid[playerid][0] = 0;
		}
		if(house_carid[playerid][1] != 0) {
			DestroyVehicle(house_carid[playerid][1]);
			house_carid[playerid][1] = 0;
		}
		if(house_carid[playerid][2] != 0) {
			DestroyVehicle(house_carid[playerid][2]);
			house_carid[playerid][2] = 0;
		}
		if(GetPVarInt(playerid, "pos_in_Unik")) {
			house_carid[playerid][carid - 1] = Home_CreateVehicle(pData[playerid][pCar][carid - 1], GetPVarFloat(playerid, "Unikpos_X"), GetPVarFloat(playerid, "Unikpos_Y"), GetPVarFloat(playerid, "Unikpos_Z"), GetPVarFloat(playerid, "Unikpos_A"), 0, 0, CAR_SPAWN);
			DeletePVar(playerid, "pos_in_Unik");
			DeletePVar(playerid, "Unikpos_X");
			DeletePVar(playerid, "Unikpos_Y");
			DeletePVar(playerid, "Unikpos_Z");
			DeletePVar(playerid, "Unikpos_A");
		}
		else if(pData[playerid][t_color_1][carid - 1] == -1 && pData[playerid][t_color_2][carid - 1] == -1) house_carid[playerid][carid - 1] = Home_CreateVehicle(pData[playerid][pCar][carid - 1], HouseInfo[house][hCar][0],HouseInfo[house][hCar][1],HouseInfo[house][hCar][2],HouseInfo[house][hCar][3], 7, 7, CAR_SPAWN);
		else house_carid[playerid][carid - 1] = Home_CreateVehicle(pData[playerid][pCar][carid - 1], HouseInfo[house][hCar][0],HouseInfo[house][hCar][1],HouseInfo[house][hCar][2],HouseInfo[house][hCar][3], pData[playerid][t_color_1][carid - 1], pData[playerid][t_color_2][carid - 1], CAR_SPAWN);

		switch(carid) {
			case 1: sscanf(p_car_charact_1[playerid], "p<,>a<i>[7]", veh_charact[house_carid[playerid][0]]);
			case 2: sscanf(p_car_charact_2[playerid], "p<,>a<i>[7]", veh_charact[house_carid[playerid][1]]);
			case 3: sscanf(p_car_charact_3[playerid], "p<,>a<i>[7]", veh_charact[house_carid[playerid][2]]);
		}
		new veh = house_carid[playerid][carid - 1];

		new engine, lights, alarm, doors, bonnet, boot, objective;
		GetVehicleParamsEx(veh, engine, lights, alarm, doors, bonnet, boot, objective);
		SetVehicleParamsEx(veh, 0, lights, alarm, doors, bonnet, boot, objective);

		LoadTuneObjectsAndAlarm(playerid,veh, carid - 1);

		LinkVehicleToInterior(veh, 0);
		SetVehicleVirtualWorld(veh, 0);

		if(pData[playerid][Un_CarType][carid - 1] > 0) 
			set_objects_on_car(pData[playerid][Un_CarType][carid - 1],veh);

		if(pData[playerid][t_wheel][carid - 1] != 0) 
			AddVehicleComponent(veh, pData[playerid][t_wheel][carid - 1]);
		if(pData[playerid][t_hydraulics][carid - 1]) 
			AddVehicleComponent(veh, 1087);
		if(pData[playerid][t_stereo][carid - 1]) 
			AddVehicleComponent(veh, 1086);
		if(pData[playerid][t_paintjob][carid - 1] != -1) 
			ChangeVehiclePaintjob(veh, pData[playerid][t_paintjob][carid - 1]);
		if(pData[playerid][t_color_1][carid - 1] != -1 && pData[playerid][t_color_2][carid - 1] != -1)
			ChangeVehicleColor(veh, pData[playerid][t_color_1][carid - 1], pData[playerid][t_color_2][carid - 1]);
		switch(pData[playerid][t_neon_num][carid - 1]) {
			case 1: AddNeonToVehicle(veh, NEON_COLOR_RED);
			case 2: AddNeonToVehicle(veh, NEON_COLOR_BLUE);
			case 3: AddNeonToVehicle(veh, NEON_COLOR_GREEN);
			case 4: AddNeonToVehicle(veh, NEON_COLOR_YELLOW);
		}
		if(strcmp(num_plate[playerid][carid - 1], "None")) 
			SetVehicleNumberPlate(veh, num_plate[playerid][carid - 1]);

		if(pData[playerid][FuelCar][carid - 1] < 10) pData[playerid][FuelCar][carid - 1] = 10;
		VehInfo[veh][vFuel] = pData[playerid][FuelCar][carid - 1];
	}
	else if(flat != -1) {
		if(house_carid[playerid][0] != 0) {
			DestroyVehicle(house_carid[playerid][0]);
			house_carid[playerid][0] = 0;
		}
		if(FLAT_place_coeff[playerid] != -1) 
			FLAT_car_places[FLAT_place_coeff[playerid]] = false;
		for(new i = 0; i < 10; i ++) {
			if(FLAT_car_places[i]) continue;
			FLAT_place_coeff[playerid] = i;
			break;
		}
		if(FLAT_place_coeff[playerid] == -1) return SCM(playerid, COLOR_GREY, "√ë√≤√Æ√ø√≠√™√† √Ø√•√∞√•√Ø√Æ√´√≠√•√≠√† √§√∞√≥√£√®√¨√® √¨√†√∏√®√≠√†√¨√®. √Ç√†√∏ √†√¢√≤√Æ√¨√Æ√°√®√´√º √≠√• √°√ª√´ √±√Æ√ßS√≠√≠");
		new Float: vehx, Float: vehy;
		switch(FLAT_place_coeff[playerid]) {
			case 0: {
				vehx = 306.427;
				vehy = -1594.984;
			}
			case 1: {
				vehx = 305.714;
				vehy = -1598.912;
			}
			case 2: {
				vehx = 305.061;
				vehy = -1602.987;
			}
			case 3: {
				vehx = 304.412;
				vehy = -1606.964;
			}
			case 4: {
				vehx = 303.694;
				vehy = -1610.987;
			}
			case 5: {
				vehx = 302.971;
				vehy = -1614.775;
			}
			case 6: {
				vehx = 302.216;
				vehy = -1618.841;
			}
			case 7: {
				vehx = 301.432;
				vehy = -1622.888;
			}
			case 8: {
				vehx = 300.670;
				vehy = -1626.823;
			}
			case 9: {
				vehx = 299.927;
				vehy = -1630.875;
			}
		}

		if(GetPVarInt(playerid, "pos_in_Unik")) {
			house_carid[playerid][0] = Home_CreateVehicle(pData[playerid][pCar][0], GetPVarFloat(playerid, "Unikpos_X"), GetPVarFloat(playerid, "Unikpos_Y"), GetPVarFloat(playerid, "Unikpos_Z"), GetPVarFloat(playerid, "Unikpos_A"), 0, 0, CAR_SPAWN);
			DeletePVar(playerid, "pos_in_Unik");
			DeletePVar(playerid, "Unikpos_X");
			DeletePVar(playerid, "Unikpos_Y");
			DeletePVar(playerid, "Unikpos_Z");
			DeletePVar(playerid, "Unikpos_A");
		}
		else if(pData[playerid][t_color_1][0] == -1 || pData[playerid][t_color_2][0] == -1) house_carid[playerid][0] = Home_CreateVehicle(pData[playerid][pCar][0], vehx,vehy,17.859,80.211, 7, 7, CAR_SPAWN);
		else house_carid[playerid][0] = Home_CreateVehicle(pData[playerid][pCar][0], vehx,vehy,17.859,80.211, pData[playerid][t_color_1][0], pData[playerid][t_color_2][0], CAR_SPAWN);

		FLAT_car_places[FLAT_place_coeff[playerid]] = true;
		new veh = house_carid[playerid][0];
		if(pData[playerid][FuelCar][0] < 10) pData[playerid][FuelCar][0] = 10;
		VehInfo[veh][vFuel] = pData[playerid][FuelCar][0];
		LinkVehicleToInterior(veh, 0);
		SetVehicleVirtualWorld(veh, 0);

		LoadTuneObjectsAndAlarm(playerid,veh, 0);

		new engine, lights, alarm, doors, bonnet, boot, objective;
		GetVehicleParamsEx(veh, engine, lights, alarm, doors, bonnet, boot, objective);
		SetVehicleParamsEx(veh, 0, lights, alarm, doors, bonnet, boot, objective);

		if(pData[playerid][Un_CarType][0] > 0) 
			sscanf(p_car_charact_1[playerid], "p<,>a<i>[7]", veh_charact[veh]);

		set_objects_on_car(pData[playerid][Un_CarType][0],veh);

		if(pData[playerid][t_color_1][0] != -1 && pData[playerid][t_color_2][0] != -1)
			ChangeVehicleColor(veh, pData[playerid][t_color_1][0], pData[playerid][t_color_2][0]);
	}
	else if(hotel != -1) {
		if(house_carid[playerid][0] != 0) {
			DestroyVehicle(house_carid[playerid][0]);
			house_carid[playerid][0] = 0;
		}
		if(place_coeff[playerid] != -1) 
			car_places[place_coeff[playerid]] = false;
		for(new i = 0; i < 20; i ++) {
			if(car_places[i]) continue;
			place_coeff[playerid] = i;
			break;
		}
		if(place_coeff[playerid] == -1) return SCM(playerid, COLOR_GREY, "√è√†√∞√™√Æ√¢√™√† √Æ√≤√•√´√ø √Ø√•√∞√•√Ø√Æ√´√≠√•√≠√† √§√∞√≥√£√®√¨√® √¨√†√∏√®√≠√†√¨√®. √Ç√†√∏ √†√¢√≤√Æ√¨√Æ√°√®√´√º √≠√• √°√ª√´ √±√Æ√ßS√≠√≠");
		new Float: Y_pos = -4 * place_coeff[playerid] - 1292.58301;
		if(GetPVarInt(playerid, "pos_in_Unik")) {
			house_carid[playerid][0] = Home_CreateVehicle(pData[playerid][pCar][0], GetPVarFloat(playerid, "Unikpos_X"), GetPVarFloat(playerid, "Unikpos_Y"), GetPVarFloat(playerid, "Unikpos_Z"), GetPVarFloat(playerid, "Unikpos_A"), 0, 0, CAR_SPAWN);
			DeletePVar(playerid, "pos_in_Unik");
			DeletePVar(playerid, "Unikpos_X");
			DeletePVar(playerid, "Unikpos_Y");
			DeletePVar(playerid, "Unikpos_Z");
			DeletePVar(playerid, "Unikpos_A");
		}
		else if(pData[playerid][t_color_1][0] == -1 || pData[playerid][t_color_2][0] == -1) house_carid[playerid][0] = Home_CreateVehicle(pData[playerid][pCar][0], 1279.32813,Y_pos,13.2,90.0, 7, 7, CAR_SPAWN);
		else house_carid[playerid][0] = Home_CreateVehicle(pData[playerid][pCar][0], 1279.32813,Y_pos,13.2,90.0, pData[playerid][t_color_1][0], pData[playerid][t_color_2][0], CAR_SPAWN);

		car_places[place_coeff[playerid]] = true;
		new veh = house_carid[playerid][0];
		if(pData[playerid][FuelCar][0] < 10) pData[playerid][FuelCar][0] = 10;
		VehInfo[veh][vFuel] = pData[playerid][FuelCar][0];
		LinkVehicleToInterior(veh, 0);
		SetVehicleVirtualWorld(veh, 0);

		LoadTuneObjectsAndAlarm(playerid,veh, 0);

		new engine, lights, alarm, doors, bonnet, boot, objective;
		GetVehicleParamsEx(veh, engine, lights, alarm, doors, bonnet, boot, objective);
		SetVehicleParamsEx(veh, 0, lights, alarm, doors, bonnet, boot, objective);

		if(pData[playerid][Un_CarType][0] > 0) {
			sscanf(p_car_charact_1[playerid], "p<,>a<i>[7]", veh_charact[veh]);
			set_objects_on_car(pData[playerid][Un_CarType][0],veh);
		}


		if(pData[playerid][t_color_1][0] != -1 && pData[playerid][t_color_2][0] != -1)
			ChangeVehicleColor(veh, pData[playerid][t_color_1][0], pData[playerid][t_color_2][0]);
	}
	return 1;
}
stock LoadTuneObjectsAndAlarm(playerid,vehid,numcar) {

	alarm_vehicle[vehid] = 60605;
	SetPVarInt(playerid, "SIGNAL", 60605);

	DeleteVehicleDetails(vehid);
	for(new z = 0; z < MAX_DETAILS_ON_VEHICLE; ++z)
	{
   		g_iVehicleDetails[vehid][z][eObjectID] = -1;
	}
	new query[100];
	mysql_format(mysql_Handle, query, sizeof(query), "SELECT * FROM `tuneobjects` WHERE `accountid`='%d' AND `numcar` = '%d'",
	pData[playerid][pID],numcar);
	mysql_tquery(mysql_Handle, query, "callback_loadtune", "d",vehid);
}
CB: callback_loadtune(vehid) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) return 1;
	new objid,
	objslot,category,modelid,
	Float:posX, Float:posY, Float:posZ, 
	Float:rotX, Float:rotY, Float:rotZ;
	for(new i = 0; i < rows; i ++) {
		cache_get_value_name_int(i, "objslot", objslot);
		cache_get_value_name_int(i, "category", category);
		cache_get_value_name_int(i, "modelid", modelid);
		cache_get_value_name_float(i, "posX", posX);
		cache_get_value_name_float(i, "posY", posY);
		cache_get_value_name_float(i, "posZ", posZ);
		cache_get_value_name_float(i, "rotX", rotX);
		cache_get_value_name_float(i, "rotY", rotY);
		cache_get_value_name_float(i, "rotZ", rotZ);
		objid = CreateObject(modelid, 0,0,-1000,0,0,0);
		g_iVehicleDetails[vehid][objslot][eObject] = modelid;
        g_iVehicleDetails[vehid][objslot][eObjectID] = objid;
        g_iVehicleDetails[vehid][objslot][eCategory] = category;
		g_iVehicleDetails[vehid][objslot][ePos][0] = posX;
		g_iVehicleDetails[vehid][objslot][ePos][1] = posY;
		g_iVehicleDetails[vehid][objslot][ePos][2] = posZ;
		g_iVehicleDetails[vehid][objslot][eRot][0] = rotX;
		g_iVehicleDetails[vehid][objslot][eRot][1] = rotY;
		g_iVehicleDetails[vehid][objslot][eRot][2] = rotZ;
		AttachObjectToVehicle(objid, vehid, posX, posY, posZ, rotX, rotY, rotZ);
	}
	return 1;
}

stock set_objects_on_car(param,vehicleid) {

	switch(param) {
		case 1: {
			AddVehicleComponent(vehicleid, 1036);
		    AddVehicleComponent(vehicleid, 1037);
		    AddVehicleComponent(vehicleid, 1171);
		    AddVehicleComponent(vehicleid, 1148);
		    ChangeVehiclePaintjob(vehicleid, 2);
		    ChangeVehicleColor(vehicleid, 6, 6);

		    Unik_Obj[vehicleid][0] = CreateDynamicObject(1088,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][0], 0, 18646, "matcolours", "grey-70-percent", -65536);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][0], 1, -1, "none", "none", -65536);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][0], 2, 19480, "signsurf", "sign", 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][0], vehicleid, 0.000, -0.047, 0.751, 5.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][1] = CreateDynamicObject(1053,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][1], 0, 18646, "matcolours", "grey-90-percent", 0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][1], 1, -1, "none", "none", -8388608);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][1], 2, 19480, "signsurf", "sign", 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][1], vehicleid, 0.000, 1.321, 0.330, 0.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][2] = CreateDynamicObject(1146,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][2], 0, 18646, "matcolours", "grey-50-percent", -8388608);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][2], vehicleid, 0.000, -2.111, 0.430, 0.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][3] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterialText(Unik_Obj[vehicleid][3], 0, "34", 130, "Arial", 125, 0, -1, 0, 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][3], vehicleid, 1.060, -1.121, 0.711, 0.000, 274.400, -90.000);
		    Unik_Obj[vehicleid][6] = CreateDynamicObject(19280,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][6], vehicleid, 0.450, 0.070, 0.760, 0.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][7] = CreateDynamicObject(19280,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][7], vehicleid, -0.440, 0.070, 0.760, 0.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][8] = CreateDynamicObject(18647,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][8], 0, 19480, "signsurf", "sign", 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][8], vehicleid, -0.730, 0.060, -1.140, 0.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][9] = CreateDynamicObject(18647,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][9], 0, 19480, "signsurf", "sign", 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][9], vehicleid, 0.750, 0.000, -1.160, 0.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][10] = CreateDynamicObject(19894,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][10], 0, 10973, "mall_sfse", "ws_grilleshade", 0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][10], 1, 19480, "signsurf", "sign", 0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][10], 2, 19480, "signsurf", "sign", 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][10], vehicleid, -0.611, 1.803, 0.213, -2.699, 7.599, 90.000);
		    Unik_Obj[vehicleid][11] = CreateDynamicObject(19894,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][11], 0, 10973, "mall_sfse", "ws_grilleshade", 0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][11], 1, 19480, "signsurf", "sign", 0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][11], 2, 19480, "signsurf", "sign", 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][11], vehicleid, 0.620, 1.838, 0.210, 0.000, -8.599, 270.000);
		    Unik_Obj[vehicleid][12] = CreateDynamicObject(19894,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][12], 0, 10973, "mall_sfse", "ws_grilleshade", 0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][12], 1, 19480, "signsurf", "sign", 0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][12], 2, 19480, "signsurf", "sign", 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][12], vehicleid, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][13] = CreateDynamicObject(335,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][13], 0, 19523, "sampicons", "reeedgrad32", -1);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][13], vehicleid, -0.075, 2.402, 0.129, 0.000, 60.000, 0.000);
		    Unik_Obj[vehicleid][14] = CreateDynamicObject(335,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][14], 0, 19523, "sampicons", "reeedgrad32", -1);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][14], vehicleid, 0.026, 2.402, -0.015, 0.000, -60.000, 0.000);
		}
		case 2: {
			ChangeVehicleColor(vehicleid, 7, 0);

		    Unik_Obj[vehicleid][0] = CreateDynamicObject(1146,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][0], 0, 19523, "sampicons", "oranggrad32", -1);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][0], vehicleid, 0.000, -2.382, 0.270, 0.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][1] = CreateDynamicObject(1115,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][1], 0, 14668, "711c", "bwtilebroth", 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][1], vehicleid, 0.000, 2.742, -0.584, -6.399, 0.000, 0.000);
		    Unik_Obj[vehicleid][2] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterialText(Unik_Obj[vehicleid][2], 0, "5", 130, "Webdings", 100, 0, -29696, 0, 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][2], vehicleid, -1.165, 1.180, 0.233, 181.000, 278.000, 270.000);
		    Unik_Obj[vehicleid][3] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterialText(Unik_Obj[vehicleid][3], 0, "5", 130, "Webdings", 100, 0, -29696, 0, 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][3], vehicleid, -1.165, 1.548, 0.207, 1.000, 96.000, 90.000);
		    Unik_Obj[vehicleid][4] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterialText(Unik_Obj[vehicleid][4], 0, "A", 130, "Arial", 65, 0, -29696, 0, 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][4], vehicleid, -1.531, -1.041, 0.665, 0.000, 90.000, 90.000);
		    Unik_Obj[vehicleid][5] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterialText(Unik_Obj[vehicleid][5], 0, "MG", 130, "Arial", 65, 0, -1, 0, 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][5], vehicleid, 1.261, -1.041, 0.664, 0.000, 270.000, 270.000);
		    Unik_Obj[vehicleid][6] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterialText(Unik_Obj[vehicleid][6], 0, "5", 130, "Webdings", 100, 0, -29696, 0, 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][6], vehicleid, -1.151, 1.916, 0.182, 0.000, 106.000, 90.000);
		    Unik_Obj[vehicleid][7] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterialText(Unik_Obj[vehicleid][7], 0, "//", 130, "Arial", 50, 0, -29696, 0, 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][7], vehicleid, 0.770, -2.501, 0.245, 0.000, 270.000, 270.000);
		    Unik_Obj[vehicleid][8] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterialText(Unik_Obj[vehicleid][8], 0, "STREET ROD", 130, "Arial", 35, 0, -1, 0, 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][8], vehicleid, 0.940, -2.541, 0.237, 0.000, 270.000, 270.000);
		    Unik_Obj[vehicleid][9] = CreateDynamicObject(11736,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][9], 0, 16640, "a51", "ws_castironwalk", -16777216);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][9], vehicleid, -0.830, -2.432, 0.050, 90.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][10] = CreateDynamicObject(11736,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][10], 0, 16640, "a51", "ws_castironwalk", -16777216);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][10], vehicleid, -0.490, -2.432, 0.050, 90.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][11] = CreateDynamicObject(11736,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][11], 0, 16640, "a51", "ws_castironwalk", -16777216);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][11], vehicleid, 0.820, -2.431, 0.050, 90.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][12] = CreateDynamicObject(11736,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][12], 0, 16640, "a51", "ws_castironwalk", -16777216);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][12], vehicleid, 0.470, -2.441, 0.030, 90.000, 0.000, 0.000);
		}
		case 3: {
			ChangeVehicleColor(vehicleid, 1, 3);

		    Unik_Obj[vehicleid][0] = CreateDynamicObject(1115,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][0], 0, 14668, "711c", "bwtilebroth", 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][0], vehicleid, 0.000, 2.372, -0.460, 0.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][1] = CreateDynamicObject(1001,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][1], vehicleid, 0.000, -2.201, 0.280, 0.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][2] = CreateDynamicObject(19797,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][2], vehicleid, 0.480, -2.171, 0.090, 0.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][3] = CreateDynamicObject(19797,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][3], vehicleid, -0.480, -2.172, 0.090, 0.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][4] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterialText(Unik_Obj[vehicleid][4], 0, "n", 130, "Webdings", 80, 0, -5658199, 0, 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][4], vehicleid, -0.480, 1.020, 0.656, 2.731, 89.799, 0.000);
		    Unik_Obj[vehicleid][5] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterialText(Unik_Obj[vehicleid][5], 0, "*", 130, "Monotype Corsiva", 199, 0, -8388608, 0, 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][5], vehicleid, -0.654, 0.825, 0.611, 0.000, 90.000, 17.200);
		    Unik_Obj[vehicleid][6] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterialText(Unik_Obj[vehicleid][6], 0, "AMG", 130, "Arial", 40, 0, -1, 0, 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][6], vehicleid, -0.590, -2.849, 0.107, -13.000, 270.000, 180.000);
		    Unik_Obj[vehicleid][7] = CreateDynamicObject(1061,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][7], 0, 18996, "mattextures", "sampblack", -1);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][7], 2, 19480, "signsurf", "sign", 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][7], vehicleid, 0.000, 1.561, 0.260, 0.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][8] = CreateDynamicObject(18647,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][8], 0, 19480, "signsurf", "sign", 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][8], vehicleid, -0.760, 0.000, -1.010, 0.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][9] = CreateDynamicObject(18647,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][9], 0, 19480, "signsurf", "sign", 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][9], vehicleid, 0.730, 0.000, -1.020, 0.000, 0.000, 0.000);
		}
		case 4: {
			ChangeVehicleColor(vehicleid, 0, 0);

		    Unik_Obj[vehicleid][0] = CreateDynamicObject(1018,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][0], vehicleid, -0.570, -1.521, -0.350, 0.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][1] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterialText(Unik_Obj[vehicleid][1], 0, "-", 130, "Arial", 40, 0, -65536, 0, 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][1], vehicleid, -1.531, -2.335, 0.095, 0.000, 70.000, 90.000);
		    Unik_Obj[vehicleid][2] = CreateDynamicObject(1115,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][2], 0, 14668, "711c", "bwtilebroth", 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][2], vehicleid, 0.000, 2.576, -0.668, 8.899, 0.000, 0.000);
		    Unik_Obj[vehicleid][3] = CreateDynamicObject(1055,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][3], 0, 18996, "mattextures", "sampblack", -1);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][3], 2, 19480, "signsurf", "sign", 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][3], vehicleid, 0.000, 1.631, 0.050, 0.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][4] = CreateDynamicObject(19797,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][4], 0, 19523, "sampicons", "reeedgrad32", 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][4], vehicleid, -0.370, -1.119, 0.443, 290.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][5] = CreateDynamicObject(19797,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][5], 0, 19655, "mattubes", "bluedirt1", 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][5], vehicleid, 0.380, -1.120, 0.444, -105.000, 0.000, -180.000);
		    Unik_Obj[vehicleid][6] = CreateDynamicObject(19797,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][6], vehicleid, -0.812, -2.512, -0.210, 0.000, 0.000, -5.000);
		    Unik_Obj[vehicleid][7] = CreateDynamicObject(19797,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][7], vehicleid, 0.819, -2.514, -0.210, 180.000, 0.000, 185.000);
		    Unik_Obj[vehicleid][8] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterialText(Unik_Obj[vehicleid][8], 0, "5", 130, "Arial", 55, 0, -1, 0, 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][8], vehicleid, 1.014, -1.050, -0.720, 0.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][9] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterialText(Unik_Obj[vehicleid][9], 0, "5", 130, "Arial", 55, 0, -1, 0, 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][9], vehicleid, -1.014, -3.680, -0.727, 0.000, 0.000, 180.000);
		    Unik_Obj[vehicleid][10] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterialText(Unik_Obj[vehicleid][10], 0, "E", 130, "Arial", 35, 0, -65536, 0, 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][10], vehicleid, 1.071, -1.227, 0.502, 0.000, 110.000, 270.000);
		    Unik_Obj[vehicleid][11] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterialText(Unik_Obj[vehicleid][11], 0, "Power", 130, "Arial", 35, 0, -1, 0, 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][11], vehicleid, 1.251, -2.371, 0.083, 0.000, 290.000, 270.000);
		    Unik_Obj[vehicleid][12] = CreateDynamicObject(18673,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][12], vehicleid, -0.640, -2.612, -1.940, 0.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][13] = CreateDynamicObject(18673,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][13], vehicleid, -0.490, -2.622, -1.940, 0.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][14] = CreateDynamicObject(18673,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][14], vehicleid, 0.640, -2.610, -1.940, 0.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][15] = CreateDynamicObject(18673,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][15], vehicleid, 0.490, -2.612, -1.940, 0.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][16] = CreateDynamicObject(19419,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][16], 0, 19480, "signsurf", "sign", 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][16], vehicleid, 0.000, -1.131, 0.450, 0.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][17] = CreateDynamicObject(18648,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][17], 0, 19480, "signsurf", "sign", 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][17], vehicleid, 0.720, 0.000, -1.240, 0.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][18] = CreateDynamicObject(18648,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][18], 0, 19480, "signsurf", "sign", 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][18], vehicleid, -0.780, 0.000, -1.240, 0.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][19] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterialText(Unik_Obj[vehicleid][19], 0, "A", 130, "Arial", 65, 0, -65536, 0, 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][19], vehicleid, -1.511, -1.051, 0.550, 0.000, 90.000, 90.000);
		    Unik_Obj[vehicleid][20] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterialText(Unik_Obj[vehicleid][20], 0, "MG", 130, "Arial", 65, 0, -1, 0, 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][20], vehicleid, 1.281, -1.051, 0.549, 180.000, 450.000, 450.000);
		    Unik_Obj[vehicleid][21] = CreateDynamicObject(1018,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][21], vehicleid, 0.560, -1.511, -0.360, 0.000, 0.000, 0.000);
		}
		case 5: {
			ChangeVehicleColor(vehicleid, 6, 0);

		    Unik_Obj[vehicleid][0] = CreateDynamicObject(1115,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][0], 0, 14668, "711c", "bwtilebroth", 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][0], vehicleid, 0.000, 2.201, -0.250, 0.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][1] = CreateDynamicObject(1181,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][1], 0, -1, "none", "none", -1);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][1], vehicleid, 0.900, -2.762, -0.170, 0.000, 0.000, 180.000);
		    Unik_Obj[vehicleid][2] = CreateDynamicObject(1072,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][2], 0, 18996, "mattextures", "sampblack", -16777216);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][2], vehicleid, 0.870, -1.000, -0.430, 0.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][3] = CreateDynamicObject(1048,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][3], 0, 18996, "mattextures", "sampblack", -16777216);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][3], vehicleid, -0.860, -0.230, -0.430, 0.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][4] = CreateDynamicObject(1650,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][4], 0, 19655, "mattubes", "reddirt1", -1);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][4], 1, -1, "none", "none", -1);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][4], vehicleid, 0.480, -2.654, 0.396, 24.200, 0.000, 180.000);
		    Unik_Obj[vehicleid][5] = CreateDynamicObject(19280,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][5], vehicleid, -0.470, 0.150, 0.940, 0.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][6] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterialText(Unik_Obj[vehicleid][6], 0, "Premium", 130, "Arial", 40, 0, -29696, 0, 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][6], vehicleid, 1.010, -2.626, 0.149, 0.000, -25.000, 270.000);
		    Unik_Obj[vehicleid][7] = CreateDynamicObject(19280,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][7], vehicleid, 0.500, 0.150, 0.950, 0.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][8] = CreateDynamicObject(1139,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][8], vehicleid, 0.000, -2.241, 0.880, 0.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][9] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterialText(Unik_Obj[vehicleid][9], 0, "", 130, "Webdings", 105, 0, -29696, 0, 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][9], vehicleid, -1.091, -0.760, 0.904, 0.000, 90.000, 90.000);
		}
		case 6: {
			ChangeVehicleColor(vehicleid, 15, 128);

		    Unik_Obj[vehicleid][0] = CreateDynamicObject(1115,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][0], 0, 14668, "711c", "bwtilebroth", 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][0], vehicleid, 0.000, 2.372, -0.460, 0.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][1] = CreateDynamicObject(1001,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][1], vehicleid, 0.000, -2.201, 0.280, 0.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][2] = CreateDynamicObject(19797,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][2], vehicleid, 0.480, -2.171, 0.090, 0.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][3] = CreateDynamicObject(19797,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][3], vehicleid, -0.480, -2.172, 0.090, 0.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][4] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterialText(Unik_Obj[vehicleid][4], 0, "n", 130, "Webdings", 80, 0, -9868951, 0, 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][4], vehicleid, -0.480, 1.020, 0.656, 2.731, 89.799, 0.000);
		    Unik_Obj[vehicleid][5] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterialText(Unik_Obj[vehicleid][5], 0, "√ª", 130, "Wingdings", 167, 0, -16751616, 0, 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][5], vehicleid, -1.130, -0.416, 0.598, 0.000, 88.390, 90.200);
		    Unik_Obj[vehicleid][6] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterialText(Unik_Obj[vehicleid][6], 0, "AMG", 130, "Arial", 40, 0, -1, 0, 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][6], vehicleid, -0.590, -2.849, 0.107, -13.000, 270.000, 180.000);
		    Unik_Obj[vehicleid][7] = CreateDynamicObject(1061,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][7], 0, 18996, "mattextures", "sampblack", -1);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][7], 2, 19480, "signsurf", "sign", 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][7], vehicleid, 0.000, 1.561, 0.260, 0.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][8] = CreateDynamicObject(18652,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][8], 0, 19480, "signsurf", "sign", 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][8], vehicleid, -0.660, 0.000, -1.150, 0.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][9] = CreateDynamicObject(18652,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][9], 0, 19480, "signsurf", "sign", 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][9], vehicleid, 0.660, 0.000, -1.160, 0.000, 0.000, 0.000);
		}
		case 7: {
		    ChangeVehicleColor(vehicleid, 93, 0);

		    Unik_Obj[vehicleid][0] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][0], 0, -1, "none", "none", -1);
		    SetDynamicObjectMaterialText(Unik_Obj[vehicleid][0], 0, "O", 130, "Arial", 49, 0, -60269, 0, 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][0], vehicleid, -0.450, -2.473, -0.489, 0.000, 0.000, 90.000);
		    Unik_Obj[vehicleid][1] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][1], 0, -1, "none", "none", -1);
		    SetDynamicObjectMaterialText(Unik_Obj[vehicleid][1], 0, "O", 130, "Arial", 37, 0, -60269, 0, 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][1], vehicleid, -0.630, -2.478, -0.540, 0.000, 0.000, 90.000);
		    Unik_Obj[vehicleid][2] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterialText(Unik_Obj[vehicleid][2], 0, "Vargas Je'aime", 130, "Segoe Script", 38, 1, -65281, 0, 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][2], vehicleid, 0.900, -2.494, -0.540, 0.000, 0.000, 270.000);
		    Unik_Obj[vehicleid][3] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][3], 0, -1, "none", "none", -1);
		    SetDynamicObjectMaterialText(Unik_Obj[vehicleid][3], 0, "O", 130, "Arial", 49, 0, -60269, 0, 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][3], vehicleid, -2.160, -2.474, -0.489, 0.000, 0.000, 90.000);
		    Unik_Obj[vehicleid][4] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][4], 0, -1, "none", "none", -1);
		    SetDynamicObjectMaterialText(Unik_Obj[vehicleid][4], 0, "O", 130, "Arial", 37, 0, -60269, 0, 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][4], vehicleid, -2.021, -2.483, -0.540, 0.000, 0.000, 90.000);
		    Unik_Obj[vehicleid][5] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterialText(Unik_Obj[vehicleid][5], 0, "__", 120, "Arial", 80, 0, -16777216, 0, 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][5], vehicleid, 0.000, -0.794, 0.337, 5.000, 90.000, 0.000);
		    Unik_Obj[vehicleid][6] = CreateDynamicObject(1044,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][6], 0, 14737, "whorewallstuff", "Pict1", -353638);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][6], vehicleid, -0.490, -0.600, 0.412, 15.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][7] = CreateDynamicObject(1044,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][7], 0, 14737, "whorewallstuff", "Pict1", -353638);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][7], vehicleid, 0.460, -0.507, 0.432, 15.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][8] = CreateDynamicObject(1044,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][8], 0, 14737, "whorewallstuff", "Pict1", -353638);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][8], vehicleid, 0.470, 1.281, 0.057, -30.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][9] = CreateDynamicObject(1044,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][9], 0, 14737, "whorewallstuff", "Pict1", -353638);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][9], vehicleid, -0.460, 1.268, 0.063, -30.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][10] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterialText(Unik_Obj[vehicleid][10], 0, "____", 120, "Arial", 80, 1, -16777216, 0, 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][10], vehicleid, 0.220, 2.880, -0.022, -10.000, 90.000, 0.000);
		    Unik_Obj[vehicleid][11] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterialText(Unik_Obj[vehicleid][11], 0, "ooo", 130, "Arial", 35, 0, -256, 0, 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][11], vehicleid, 1.961, 2.528, 0.400, 180.000, 0.000, 78.500);
		    Unik_Obj[vehicleid][12] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterialText(Unik_Obj[vehicleid][12], 0, "ooo", 130, "Arial", 35, 0, -256, 0, 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][12], vehicleid, -1.950, 2.517, -0.780, 0.000, 0.000, 102.000);
		    Unik_Obj[vehicleid][13] = CreateDynamicObject(19560,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][13], 0, 18996, "mattextures", "sampblack", 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][13], vehicleid, -0.708, 2.759, -0.229, 90.000, 0.000, 192.000);
		    Unik_Obj[vehicleid][14] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterialText(Unik_Obj[vehicleid][14], 0, "____", 120, "Arial", 80, 1, -16777216, 0, 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][14], vehicleid, 0.010, 2.880, -0.022, -10.000, 90.000, 0.000);
		    Unik_Obj[vehicleid][15] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterialText(Unik_Obj[vehicleid][15], 0, "__", 120, "Arial", 80, 0, -16777216, 0, 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][15], vehicleid, 0.210, -0.784, 0.336, 5.000, 90.000, 0.000);
		    Unik_Obj[vehicleid][16] = CreateDynamicObject(19939,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][16], 0, 18996, "mattextures", "sampblack", 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][16], vehicleid, 0.000, -2.452, -0.050, 0.000, 90.000, 90.000);
		    Unik_Obj[vehicleid][17] = CreateDynamicObject(19560,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][17], 0, 18996, "mattextures", "sampblack", 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][17], vehicleid, 0.710, 2.761, -0.219, 270.000, 0.000, -12.000); 
		}
		case 8: {
		    ChangeVehicleColor(vehicleid, 0, 0);

		    Unik_Obj[vehicleid][0] = CreateDynamicObject(19147,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][0], 0, 18996, "mattextures", "sampblack", 0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][0], 1, 18996, "mattextures", "sampred", -1);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][0], vehicleid, -0.670, 2.641, -0.206, 19.700, 0.000, 0.000);
		    Unik_Obj[vehicleid][1] = CreateDynamicObject(19147,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][1], 0, 18996, "mattextures", "sampblack", 0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][1], 1, 18996, "mattextures", "sampred", -1);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][1], vehicleid, 0.679, 2.648, -0.203, 18.800, 0.000, 0.000);
		    Unik_Obj[vehicleid][2] = CreateDynamicObject(18749,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][2], vehicleid, 0.000, -2.780, 0.080, -20.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][3] = CreateDynamicObject(1091,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][3], 0, 18996, "mattextures", "sampblack", -1);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][3], 2, 19480, "signsurf", "sign", 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][3], vehicleid, 0.000, 1.121, 0.310, 0.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][4] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterialText(Unik_Obj[vehicleid][4], 0, "N", 130, "Wingdings", 100, 0, -65536, 0, 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][4], vehicleid, -1.211, 2.421, 0.120, 0.000, -79.839, 90.000);
		    Unik_Obj[vehicleid][5] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterialText(Unik_Obj[vehicleid][5], 0, "xXx", 130, "Arial", 85, 0, -65536, 0, 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][5], vehicleid, 1.100, -0.140, 0.685, 0.000, 90.000, 270.000);
		    Unik_Obj[vehicleid][6] = CreateDynamicObject(1049,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][6], 0, 18996, "mattextures", "sampblack", -1);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][6], vehicleid, 0.000, -2.522, 0.350, 0.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][7] = CreateDynamicObject(18647,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][7], 0, 19480, "signsurf", "sign", 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][7], vehicleid, -0.800, 0.000, -1.040, 0.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][8] = CreateDynamicObject(18647,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][8], 0, 19480, "signsurf", "sign", 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][8], vehicleid, 0.750, 0.000, -1.040, 0.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][9] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterialText(Unik_Obj[vehicleid][9], 0, "n", 130, "Webdings", 31, 0, -16777216, 0, 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][9], vehicleid, -0.630, 2.795, -0.990, 0.000, 0.000, 90.000);
		    Unik_Obj[vehicleid][10] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterialText(Unik_Obj[vehicleid][10], 0, "n", 130, "Webdings", 31, 0, -16777216, 0, 0);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][10], vehicleid, -1.981, 2.790, -0.990, 0.000, 0.000, 90.000);
		}
		case 9: ChangeVehicleColor(vehicleid, 3, 3);
		case 10: {
			ChangeVehicleColor(vehicleid, 0, 0);

			Unik_Obj[vehicleid][0] = CreateDynamicObject(1148,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][0], 0, -1, "none", "none", 168430335);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][0], 1, -1, "none", "none", -16119286);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][0], vehicleid, 1.061, -1.651, -0.180, 0.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][1] = CreateDynamicObject(1141,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][1], 0, -1, "none", "none", -10088192);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][1], vehicleid, -1.040, -1.932, -0.078, 42.400, 0.000, 0.000);
		    Unik_Obj[vehicleid][2] = CreateDynamicObject(1157,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterial(Unik_Obj[vehicleid][2], 0, -1, "none", "none", -13487361);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][2], vehicleid, -1.040, 1.639, -0.450, 0.000, 0.000, 0.000);
		    Unik_Obj[vehicleid][3] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0);
		    SetDynamicObjectMaterialText(Unik_Obj[vehicleid][3], 0, "////"CRED"A{888888}MG", 130, "Arial", 40, 0, -7829368, 0, 1);
		    AttachDynamicObjectToVehicle(Unik_Obj[vehicleid][3], vehicleid, -0.470971, -2.250833, -0.049996, 0.000000, 0.000000, -90.000000);
		}
	}
}
stock econ_panel(playerid) {
	SPD(playerid, 8888, DIALOG_STYLE_LIST, ""CMAIN"√ì√Ø√∞√†√¢√´√•√≠√®√• √∏√≤√†√≤√Æ√¨", "\
	{cccc66}√ç√†√´√Æ√£ √≠√† √Ø√∞√ÆS√≠√¶√≥ √®√¨√≥√π√•√±√≤√¢√†\n\
	{cccc66}√É√Æ√±√≥S√≠√∞√±√≤√¢√•√≠√≠√ª√© √≠√†√´√Æ√£\n\
	"CWHITE"√ë√Æ√±√≤√Æ√ø√≠√®√• √£√Æ√±. √™√†√ß√≠√ª\n\
	√è√Æ√´√Æ√¶√®√≤√º √±√∞√•√§√±√≤√¢√† √¢ √£√Æ√±. √™√†√ß√≠√≥\n\
	√ë√≠√ø√≤√º √±√∞√•√§√±√≤√¢√† √± √£√Æ√±. √™√†√ß√≠√ª", "Seleccione", "Cerrar");

	return 1;
	/*
	SPD(playerid, 8888, DIALOG_STYLE_LIST, ""CMAIN"√ì√Ø√∞√†√¢√´√•√≠√®√• √∏√≤√†√≤√Æ√¨", "\
	{cccc66}√ç√†√´√Æ√£ √≠√† √Ø√∞√ÆS√≠√¶√≥ √®√¨√≥√π√•√±√≤√¢√†\n\
	{cccc66}√É√Æ√±√≥S√≠√∞√±√≤√¢√•√≠√≠√ª√© √≠√†√´√Æ√£\n\
	"CWHITE"√ë√Æ√±√≤√Æ√ø√≠√®√• √£√Æ√±. √™√†√ß√≠√ª\n\
	√è√Æ√´√Æ√¶√®√≤√º √±√∞√•√§√±√≤√¢√† √¢ √£√Æ√±. √™√†√ß√≠√≥\n\
	√ë√≠√ø√≤√º √±√∞√•√§√±√≤√¢√† √± √£√Æ√±. √™√†√ß√≠√ª\n\
	{99bbff}√á√†√∞√Ø√´√†√≤√† √≠√† √∏√†√µ√≤√•\n\
	{99bbff}√á√†√∞√Ø√´√†√≤√† √£√∞√≥√ß√∑√®√™√Æ√¢\n\
	{99bbff}√á√†√∞√Ø√´√†√≤√† √≠√† √´√•√±√Æ√Ø√®√´√™√•", "Seleccione", "Cerrar");
    */
}
stock SaveInstrument() {
	new mysql_string [ 144 ];
	mysql_format(mysql_Handle, mysql_string, 144, "UPDATE `instrument` SET `business_nalog` = %i, `gos_nalog` = %i, `gos_kazna` = %i", Business_Nalog,Gos_Nalog[0],Gos_Nalog[1]);
	return mysql_tquery(mysql_Handle, mysql_string);
}
CB: MailCallback(playerid, email[]) {
	new rows;
	cache_get_row_count(rows);
	if(rows && strcmp(email, "None")) return dialog_email(playerid, true);
	else return SetPVarString(playerid, #reg_email, email), dialog_friend(playerid, false);
}
CB: FriendCallback(playerid, friendname[]) {
	new rows, friendid;
	cache_get_row_count(rows);
	if(rows) {
		SetPVarString(playerid, #reg_friendname, friendname);
		cache_get_value_name_int(0, "id", friendid);
		SetPVarInt(playerid, #reg_friendid, friendid);
		dialog_sex(playerid);
	}
	else dialog_friend(playerid, true);
}
stock Hook_GivePlayerMoney(playerid, amount) {
	pData[playerid][pCash] += amount;
	UpdatePlayerData(playerid, "pCash", pData[playerid][pCash]);
	if(GetPlayerMoney(playerid) != pData[playerid][pCash]) {
		ResetPlayerMoney(playerid);
		GivePlayerMoney(playerid, pData[playerid][pCash]);
	}
	else GivePlayerMoney(playerid, amount);

    new log_str[200], l_date[64], l_text[12], day, month, year, hour, minute, second;
    getdate(year, month, day);
    gettime(hour, minute, second);
    FixHour(hour);
    hour = shifthour;
    format(l_date, 64, "%02d.%02d.%d √¢ %02d:%02d", day, month, year, hour, minute);
    if(amount < 0) strcat(l_text, "√Ø√Æ√≤√∞√†√≤√®√´(√†)"), amount = amount * -1;
    else strcat(l_text, "√Ø√Æ√´√≥√∑√®√´(√†)");
    mysql_format(mysql_Handle, log_str, 200, "INSERT INTO `logs_money` (`description`, `id_acc`, `Date`) VALUES ('%s %s %d$ √≠√†√´√®√∑√≠√ª√¨√® (√≠√Æ√¢√ª√© √°√†√´√†√≠√±: %d$)', '%d', '%s')", GetName(playerid), l_text, amount, pData[playerid][pCash], pData[playerid][pID], l_date);
    return mysql_pquery(mysql_Handle, log_str);
}
stock IsABike(vehicleid)
{
	new model = GetVehicleModel(vehicleid);
	switch(model)
	{
		case 509, 481, 510, 462, 448, 581, 522, 461, 521, 523, 463, 586, 468, 471: return 1;
	}
	return 0;
}
stock DynamicObjectToPoint(Float:radi, objectid, Float:x, Float:y, Float:z) {
	new Float:pos[3];
	GetDynamicObjectPos(objectid, pos[0], pos[1], pos[2]);
	pos[0] = (pos[0] -x);
	pos[1] = (pos[1] -y);
	pos[2] = (pos[2] -z);
	if(pos[0] < radi && pos[0] > -radi && pos[1] < radi && pos[1] > -radi && pos[2] < radi && pos[2] > -radi) return 1;
	return 0;
}
CB: promoCreate(playerid, code[]) {
	new rows;
	cache_get_row_count(rows);
	if(rows >= 15) return SCM(playerid, COLOR_LIGHTGREY, "√Å√Æ√´√º√∏√• 15 √Ø√∞√Æ√¨√Æ√™√Æ√§√Æ√¢ √±√Æ√ßS√≠√¢√†√≤√º √≠√•√´√º√ß√ø");
	new load_code[32], free_slot = -1;
	for(new i = 0; i < rows; i ++) {
		cache_get_value_name(0, "code", load_code);
		if(!strcmp(load_code, code, false)) {
			free_slot = i;
			break;
		}
	}
	if(free_slot != -1) {
		SCM(playerid, COLOR_LIGHTGREY, "√í√†√™√Æ√© √Ø√∞√Æ√¨√Æ√™√Æ√§ √≥√¶√• √•√±√≤√º √¢ √±√Ø√®√±√™√• √±√Æ√ßS√≠√≠√≠√ª√µ");
		strmid(pData[playerid][createPromoName], "None", 0, strlen("None"), 255);
		return 0;
	}
	new query_mysql[100];
	format(query_mysql, 100, "INSERT INTO `promo` (`code`,`used_count`) VALUES ('%s','0')", code);
	mysql_tquery(mysql_Handle, query_mysql);
	strmid(pData[playerid][createPromoName], "None", 0, strlen("None"), 255);
	return SCMF(playerid,COLOR_YELLOW,"√è√∞√Æ√¨√Æ√™√Æ√§ {00cc00}%s "CYELLOW"√≥√±√Ø√•√∏√≠√Æ √±√Æ√ßS√≠√≠",code);
}
stock IsMinistrOrg(org,rank) {
	if(org == 26 && (rank == 7 || rank == 8 || rank == 6)) 
		return 1;
	return 0;
}
CB: leaders_show(playerid) {
	new rows;
	cache_get_row_count(rows);
	new var_str[30], T_orgnumber, T_name[24], bool: valid[28], T_numberrank, T_status[32], dlg_STR[255], sh_STR[2840] = "√à√¨√ø\t\t√é√∞√£√†√≠√®√ß√†√∂√®√ø\t√Ñ√Æ√´√¶√≠√Æ√±√≤√º\t\t√ë√≤√†√≤√≥√±\n";
	new bool:status;
	for(new i = 0, num_f = 0; i < rows; i ++) {
		cache_get_value_name(i, "Name", T_name);
		cache_get_value_name_int(i, "pMember", T_orgnumber);
		cache_get_value_name_int(i, "pRank", T_numberrank);
		if(T_numberrank != 10 && !IsMinistrOrg(T_orgnumber,T_numberrank)) continue;
		if(IsPlayerConnected(GetPlayerID(T_name))) T_status = "{00b33c}√é√≠√´√†√©√≠"CWHITE"";
		else T_status = "{ff242b}√é√¥√¥√´√†√©√≠"CWHITE"";

		switch(T_orgnumber) {
			case 26: {
				if(T_numberrank == 7) num_f = 5;
				else if(T_numberrank == 8) num_f = 14;
				else if(T_numberrank == 6) num_f = 10;
				else num_f = 1;
			}
			case 7: num_f = 2;
			case 8: num_f = 3;
			case 9: num_f = 4;
			case 1: num_f = 6;
			case 10: num_f = 7;
			case 21: num_f = 8;
			case 2: num_f = 9;
			case 4: num_f = 11;
			case 28: num_f = 12;
			case 29: num_f = 13;
			case 19: num_f = 15;
			case 20: num_f = 16;
			case 27: num_f = 17;
			case 11: num_f = 18;
			case 16: num_f = 19;
			case 15: num_f = 20;
			case 12: num_f = 21;
			case 17: num_f = 22;
			case 13: num_f = 23;
			case 18: num_f = 24;
			case 5: num_f = 25;
			case 14: num_f = 26;
			case 6: num_f = 27;
		}
		format(var_str, sizeof(var_str), "lead_var_%d", num_f);
		format(dlg_STR, 255, "%s\t%s\t%s\t%s\n", T_name, FractionInfo[T_orgnumber][fName], new_rank_name[T_orgnumber - 1][T_numberrank - 1], T_status);
		SetPVarString(playerid, var_str, dlg_STR);
		valid[num_f] = true;
	}
	for(new i = 0; i < 28; i ++) {
		if(!valid[i]) continue;
		format(var_str, sizeof(var_str), "lead_var_%d", i);
		GetPVarString(playerid, var_str, dlg_STR, sizeof(dlg_STR));
		strcat(sh_STR, dlg_STR);
		valid[i] = false;
		status=true;
	}
	if(!status) 
		return SCM(playerid, COLOR_LIGHTGREY, "√ã√®√§√•√∞√ª √≠√• √≠√†√©√§√•√≠√ª");
	return SPD(playerid, 142, DIALOG_STYLE_TABLIST_HEADERS, "{FFCD00}√ã√®√§√•√∞√ª", sh_STR, "√Ñ√•√≤√†√´√®", "Cerrar");
}
CB: promo_stats(playerid) {
	new rows;
	cache_get_row_count(rows);
	new promolist[1256], llcode[32], pr_status, used_count;
	if(pData[playerid][pAdmin] < 7) {
		if(!rows) 
			return SCM(playerid,COLOR_LIGHTGREY,"√è√∞√Æ√¨√Æ√™√Æ√§√ª √Æ√≤√±√≥√≤√±√≤√¢√≥√æ√≤");
		strcat(promolist, "√è√∞√Æ√¨√Æ√™√Æ√§\t\t√Ä√™√≤√®√¢√®√∞√Æ√¢√†√≠\t√ë√≤√†√≤√≥√±\n");
		for(new i = 0; i < rows; i ++) {
			cache_get_value_name(i, "code", llcode);
			cache_get_value_name_int(i, "status", pr_status);
			cache_get_value_name_int(i, "used_count", used_count);
			format(promolist, sizeof(promolist),"%s%s\t\t%d √∞√†√ß\t\t%s\n", promolist, llcode, used_count, (pr_status) ? ("√¢√™√´.") : ("√¢√ª√™√´."));
		}
		SPD(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, "{FFCD00}√è√∞√Æ√¨√Æ√™√Æ√§√ª", promolist, "Cerrar", "");
	}
	else {
		strcat(promolist, "√è√∞√Æ√¨√Æ√™√Æ√§\t\t√Ä√™√≤√®√¢√®√∞√Æ√¢√†√≠\t√ë√≤√†√≤√≥√±\n{00cc66}+ √ç√Æ√¢√ª√© √Ø√∞√Æ√¨√Æ√™√Æ√§");
		if(rows) strcat(promolist, "\n"CWHITE"");
		for(new i = 0; i < rows; i ++) {
			cache_get_value_name(i, "code", llcode);
			cache_get_value_name_int(i, "status", pr_status);
			cache_get_value_name_int(i, "used_count", used_count);
			format(promolist, sizeof(promolist),"%s%s\t\t%d √∞√†√ß\t\t%s\n", promolist, llcode, used_count, (pr_status) ? ("√¢√™√´.") : ("√¢√ª√™√´."));
		}
		SPD(playerid, 15402, DIALOG_STYLE_TABLIST_HEADERS, "{FFCD00}√è√∞√Æ√¨√Æ√™√Æ√§√ª", promolist, "Cambio", "Cerrar");
	}
	return 1;
}
CB: promoactive(playerid, promo[]) {

	new statuspromo;
	string[0] = EOS;
	cache_get_value_name_int(0, "status", statuspromo);
	if(statuspromo == 1) return SCM(playerid, COLOR_LIGHTGREY, "√è√∞√Æ√¨√Æ√™√Æ√§ √≥√¶√• √†√™√≤√®√¢√®√∞√Æ√¢√†√≠");
	mysql_format(mysql_Handle, string, 300, "UPDATE `promo` SET `status` = '1' WHERE `code` = '%s'", promo);
	mysql_tquery(mysql_Handle, string);
	callcmd::promost(playerid);
	return SCM(playerid, 0x23CD23FF, "√è√∞√Æ√¨√Æ√™√Æ√§ √≥√±√Ø√•√∏√≠√Æ √†√™√≤√®√¢√®√∞√Æ√¢√†√≠");
}
CB: promodeactive(playerid, promo[]) {

	new statuspromo;
	string[0] = EOS;
	cache_get_value_name_int(0, "status", statuspromo);
	if(statuspromo == 0) return SCM(playerid, COLOR_LIGHTGREY, "√è√∞√Æ√¨√Æ√™√Æ√§ √≥√¶√• √§√•√†√™√≤√®√¢√®√∞√Æ√¢√†√≠");
	mysql_format(mysql_Handle, string, 300, "UPDATE `promo` SET `status` = '0' WHERE `code` = '%s'", promo);
	mysql_tquery(mysql_Handle, string);
	callcmd::promost(playerid);
	return SCM(playerid, 0xACCD23FF, "√è√∞√Æ√¨√Æ√™√Æ√§ √≥√±√Ø√•√∏√≠√Æ √§√•√†√™√≤√®√¢√®√∞√Æ√¢√†√≠. √Ñ√Æ√±√≤√≥√Ø √§√´√ø √®√£√∞√Æ√™√Æ√¢ √Æ√≤√™√´√æ√∑√•√≠");
}
CB: RegST_CallBack(playerid) {
	new rows, str_regs[80];
	cache_get_row_count(rows);
	format(str_regs, sizeof(str_regs), ""CWHITE"√Ç√†√∏ √≠√®√™ √Ø√∞√® √∞√•√£√®√±√≤√∞√†√∂√®√® √≥√™√†√ß√†√´√® "CLITEBLUE"%d √®√£√∞√Æ√™√Æ√¢", rows);
	if(!rows) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CMAIN"√è√∞√®√£√´√†√∏¬∏√≠√≠√ª√• √®√£√∞√Æ√™√®", str_regs, "Cerrar", "");
	else return SPD(playerid, 847, DIALOG_STYLE_MSGBOX, ""CMAIN"√è√∞√®√£√´√†√∏¬∏√≠√≠√ª√• √®√£√∞√Æ√™√®", str_regs, "√è√Æ√§√∞√Æ√°√≠√Æ", "Cerrar");
}
CB: RegST_CallBack_2(playerid) {
	string = "√ì√∞√Æ√¢√•√≠√º\t√à√¨√ø\t√Ç√µ√Æ√§√®√´(√†) √¢ √®√£√∞√≥\t√ë√≤√†√≤√≥√±\n";
    new rows, tmpname[24], tmplevel, tmpdate[64];
	cache_get_row_count(rows);
	if(!rows) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [075]");
	for(new i = 0; i < rows; i ++) {
        cache_get_value_name_int(i, "pLevel", tmplevel);
		cache_get_value_name(i, "Name", tmpname);
		cache_get_value_name(i, "pGetonDate", tmpdate);
		format(string, 1000, "%s"CWHITE"%d\t\t%s\t%s\t%s\n", string, tmplevel, tmpname, tmpdate, (IsPlayerConnected(GetPlayerID(tmpname))) ? ("{00b33c}√é√≠√´√†√©√≠") : ("{ff242b}√é√¥√¥√´√†√©√≠"));
    }
	return SPD(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, ""CMAIN"√è√∞√®√£√´√†√∏¬∏√≠√≠√ª√• √®√£√∞√Æ√™√®", string, "Cerrar", "");
}

CB: PromoUse(playerid, code[])
{
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SPD(playerid, 488, DIALOG_STYLE_MSGBOX, ""CPALEGREEN"√è√∞√Æ√¨√Æ√™√Æ√§", ""CWHITE"√í√†√™√Æ√£√Æ √Ø√∞√Æ√¨√Æ√™√ÆS√≠ √≠√• √±√≥√π√•√±√≤√¢√≥√•√≤", "Siguiente", "Cerrar");

	new query_mysql[128];
	mysql_format(mysql_Handle, query_mysql, 128, "INSERT INTO `promoused` (`idacca`,`code`) VALUES (%d,'%s')", pData[playerid][pID],code);
	mysql_tquery(mysql_Handle, query_mysql);

	PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
	pData[playerid][pPromoUsed] = true;

	mysql_format(mysql_Handle, string, 110, "UPDATE `promo` SET `used_count` = `used_count` + '1' WHERE `code` = '%s'", code);
	mysql_tquery(mysql_Handle, string);

	return SPD(playerid, 445, DIALOG_STYLE_MSGBOX, ""CPALEGREEN"√è√∞√Æ√¨√Æ√™√Æ√§", "\
		"CWHITE"√Ç√ª √≥√±√Ø√•√∏√≠√Æ √†√™√≤√®√¢√®√∞√Æ√¢√†√´√® √Ø√∞√Æ√¨√Æ√™√Æ√§!\n\
		\n\
		1. √ç√† 2 √≥√∞√Æ√¢√≠√• √¢√ª √Ø√Æ√´√≥√∑√®√≤√• {BF66FF}100000$\n\
		"CWHITE"√® 100% √≠√†√¢√ª√™ √¢√´√†√§√•√≠√®√ø {CC9955}Deagle.\n\
		\n\
		"CWHITE"2. √ç√† 4 √≥√∞√Æ√¢√≠√• √¢√ª √Ø√Æ√´√≥√∑√®√≤√• √•√π¬∏ {CD4D44}300000$.\n\
		\n\
		"CWHITE"3. √ë 5-√£√Æ √Ø√Æ 9 √≥√∞√Æ√¢√•√≠√º √¢√ª √°√≥√§√•√≤√•\n\
		√Ø√Æ√´√≥√∑√†√≤√º {FFEE00}√≤√∞√Æ√©√≠√Æ√© √Æ√Ø√ª√≤.\n\
		\n\
		"CWHITE"4. √ç√† 12 √≥√∞√Æ√¢√≠√• √¢√ª √Ø√Æ√´√≥√∑√®√≤√•\n\
		{0099FF}150 √∞√≥√°√´√•√© "CWHITE"√≠√† √±√¢√Æ√© √§√Æ√≠√†√≤ √±√∑¬∏√≤.", 
	"√Ç √¨√•√≠√æ", "Cerrar");
}
CB: CheckUsePromo(playerid)
{
	new rows;
	cache_get_row_count(rows);

	if(rows) pData[playerid][pPromoUsed] = true;

	return 1;
}

CB: Fraction_CallBack_pp(playerid, page, memberid) {
    new rows, strnone[90];
    cache_get_row_count(rows);
    if(!rows) {
        format(strnone, 90, ""CWHITE"√Ç √Æ√∞√£√†√≠√®√ß√†√∂√®√® (√Ø√Æ√§√∞√†√ß√§√•√´√•√≠√®√®) %s √≠√®√™√≤√Æ √≠√• √±√Æ√±√≤√Æ√®√≤", FractionInfo[memberid][fName]);
        return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{ff9945}√é√∏√®√°√™√†", strnone, "Cerrar", "");
    }
    if(GetPVarInt(playerid, "cFractionList")) {
        for(new i = 0; i < 15; i ++) StringName[playerid][i] = 0;
        DeletePVar(playerid, "cFractionList");
    }
    new Name[24], nm_level, nm_rank, string_last[70], t;
    string[0] = EOS;
    format(string, 1000, "√à√¨√ø\t\t√ì√∞√Æ√¢√•√≠√º\t√Ñ√Æ√´√¶√≠√Æ√±√≤√º\n");
    for(new i = (page != 1 ? (page*15) : (0)); i < rows; i ++) {
        if((rows>15 && t>=15) || (t>=rows)) break;
        cache_get_value_name(i, "Name", Name);
        cache_get_value_name_int(i, "pLevel", nm_level);
        cache_get_value_name_int(i, "pRank", nm_rank);
        cache_get_value_name_int(i, "id", StringName[playerid][GetPVarInt(playerid, "cFractionList")]), SetPVarInt(playerid, "cFractionList", GetPVarInt(playerid, "cFractionList") + 1);
        format(string, 1000, "%s%i. %s\t%i\t%i √∞√†√≠√£. %s\n", string, (i<15 ? (i + 1) : (i-14)), Name, nm_level, nm_rank,new_rank_name[memberid - 1][nm_rank-1]);
        t ++;
    }
    SetPVarInt(playerid, "mem_idfract", memberid);
    
    if(!t) return 1;
    SetPVarInt(playerid, "cList", (page != 1 ? (page) : (1)));
    
    format(string_last, 70, ""CCYAN"√ë√Ø√®√±√Æ√™ √¢√±√•√µ √∑√´√•√≠√Æ√¢ √Æ√∞√£√†√≠√®√ß√†√∂√®√® {bfbb41}(%d √∑√•√´.)", rows);

    if(t >= 15) {
    	new butt_2[15];
    	format(butt_2, sizeof(butt_2), "√ë√≤√∞. %d >>", (page != 1 ? (page) : (1)) + 1);
    	return SPD(playerid, 9058, DIALOG_STYLE_TABLIST_HEADERS, string_last, string, "√Ñ√•√≤√†√´√®", butt_2);
    }
    else return SPD(playerid, 9057, DIALOG_STYLE_TABLIST_HEADERS, string_last, string, "√Ñ√•√≤√†√´√®", "Cerrar");
}
CB: Fraction_CallBack(playerid, page) {
	new rows, strnone[90];
	cache_get_row_count(rows);
	if(!rows) {
		format(strnone, 90, ""CWHITE"√Ç √Æ√∞√£√†√≠√®√ß√†√∂√®√® (√Ø√Æ√§√∞√†√ß√§√•√´√•√≠√®√®) %s √≠√®√™√≤√Æ √≠√• √±√Æ√±√≤√Æ√®√≤", FractionInfo[pData[playerid][pMember]][fName]);
		return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{ff9945}√é√∏√®√°√™√†", strnone, "Cerrar", "");
	}
	if(GetPVarInt(playerid, "cFractionList")) {
		for(new i = 0; i < 15; i ++) StringName[playerid][i] = 0;
		DeletePVar(playerid, "cFractionList");
	}
	new Name[24], nm_level, nm_rank, string_last[70], t;
	string[0] = EOS;
	format(string, 1000, "√à√¨√ø\t\t√ì√∞√Æ√¢√•√≠√º\t√Ñ√Æ√´√¶√≠√Æ√±√≤√º\n");
	for(new i = (page != 1 ? (page * 15) : (0)); i < rows; i ++) {
		if((rows>15 && t>=15) || (t>=rows)) break;
		cache_get_value_name(i, "Name", Name);
		cache_get_value_name_int(i, "pLevel", nm_level);
		cache_get_value_name_int(i, "pRank", nm_rank);
		cache_get_value_name_int(i, "id", StringName[playerid][GetPVarInt(playerid, "cFractionList")]), SetPVarInt(playerid, "cFractionList", GetPVarInt(playerid, "cFractionList") + 1);
		format(string, 1000, "%s%i. %s\t%i\t%i √∞√†√≠√£. %s\n", string, (i<15 ? (i + 1) : (i-14)), Name, nm_level, nm_rank,new_rank_name[pData[playerid][pMember] - 1][nm_rank-1]);
		t ++;
	}
	if(!t) return 1;
	SetPVarInt(playerid, "cList", (page != 1 ? (page) : (1)));
	
	format(string_last, 70, ""CCYAN"√ë√Ø√®√±√Æ√™ √¢√±√•√µ √∑√´√•√≠√Æ√¢ √Æ√∞√£√†√≠√®√ß√†√∂√®√® {bfbb41}(%d √∑√•√´.)", rows);
	if(t >= 15) {
		new butt_2[15];
    	format(butt_2, sizeof(butt_2), "√ë√≤√∞. %d >>", (page != 1 ? (page) : (1)) + 1);
		return SPD(playerid, 8959, DIALOG_STYLE_TABLIST_HEADERS, string_last, string, "√Ñ√•√≤√†√´√®", butt_2);
	}
	else return SPD(playerid, 8957, DIALOG_STYLE_TABLIST_HEADERS, string_last, string, "√Ñ√•√≤√†√´√®", "Cerrar");
}
CB: Fraction_CallBack_2(playerid, pl_memberid) {
	new rows;
	cache_get_row_count(rows);
	if(!pData[playerid][pLeader] && !IsMinistr(playerid)) 
		return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{ff9945}√Ñ√Æ√±√≤√≥√Ø √Æ√£√∞√†√≠√®√∑√•√≠", ""CWHITE"√à√≠√¥√Æ√∞√¨√†√∂√®√æ √Æ √∑√´√•√≠√†√µ √Æ√∞√£√†√≠√®√ß√†√∂√®√® √¨√Æ√¶√•√≤ √Ø√∞√Æ√±√¨√†√≤√∞√®√¢√†√≤√º √≤√Æ√´√º√™√Æ √•¬∏ √´√®√§√•√∞", "Cerrar", "");
	if(!rows) return 1;
	new Name[24], str_title[50], geton_status[40], nm_rank, nm_pnumber, nm_level, Geton[32], time1[20], time2[20], p_time_1[2], p_time_2[2], 
    str_phonenum[30];
	string[0] = EOS;
	cache_get_value_name(0, "time1", time1);
	sscanf(time1, "p<,>a<i>[2]", p_time_1);
	cache_get_value_name(0, "time2", time2);
	sscanf(time2, "p<,>a<i>[2]", p_time_2);
	cache_get_value_name(0, "Name", Name);
	cache_get_value_name(0, "pGetonDate", Geton);
    if(IsPlayerConnected(GetPlayerID(Name))) strcat(geton_status, ""CMAIN"√é√≠√´√†√©√≠");
    else format(geton_status, 40, "%s", Geton);
	cache_get_value_name_int(0, "pLevel", nm_level);
	cache_get_value_name_int(0, "pPnumber", nm_pnumber);
    format(str_phonenum, 30, "%d", nm_pnumber);
	cache_get_value_name_int(0, "pRank", nm_rank);
	format(string, 560,				""CWHITE"√ì√∞√Æ√¢√•√≠√º: {ff9945}%d\n\
									"CWHITE"√ç√Æ√¨√•√∞ √≤√•√´√•√¥√Æ√≠√†: {aa80ff}%s\n\
									"CWHITE"√ê√†√≠√£: {40bf80}%d\n\
									"CWHITE"√Ñ√Æ√´√¶√≠√Æ√±√≤√º: {40bf40}%s\n\
									"CWHITE"√Ç √®√£√∞√• √ß√† √±√•√£√Æ√§√≠√ø: {00cc99}%s\n\
									"CWHITE"√Ç √®√£√∞√• √ß√† √¢√∑√•√∞√†: {00cc99}%s\n\
									"CWHITE"S√≠√≤√† √Ø√Æ√±√´. √ß√†√µ√ÆS√≠ √≠√† √±√•√∞√¢√•√∞: "CMAIN"%s\n\
									{888888}√è√Æ√¢√ª√±√®√≤√º √∞√†√≠√£ √®√£√∞√Æ√™√† √Æ√¥√¥√´√†√©√≠\n\
									{888888}√è√Æ√≠√®√ß√®√≤√º √∞√†√≠√£ √®√£√∞√Æ√™√† √Æ√¥√¥√´√†√©√≠\n\
									{888888}√ì√¢√Æ√´√®√≤√º √®√£√∞√Æ√™√† √®√ß √Æ√∞√£√†√≠√®√ß√†√∂√®√® √Æ√¥√¥√´√†√©√≠", nm_level, (nm_pnumber == -1) ? ("{ff4d4d}No") : (str_phonenum), nm_rank,
                                    new_rank_name[pl_memberid - 1][nm_rank-1], ConvertTime(p_time_1[0]), ConvertTime(p_time_2[0]), geton_status);
	format(str_title, 50, ""CPALEGREEN"√à√≠√¥√Æ√∞√¨√†√∂√®√ø √Æ %s", Name);
	SetPVarInt(playerid, "member_showal", pl_memberid);
	return SPD(playerid, 8952, DIALOG_STYLE_LIST, str_title, string, "Seleccione", "Siguiente");
}
CB: Fraction_CallBack_3(playerid, type) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SCM(playerid, COLOR_ERROR, "√è√∞√Æ√®√ß√Æ√∏√´√† √Æ√∏√®√°√™√† [078]");
	new Name[24];
	string[0] = EOS;
	cache_get_value_name(0, "Name", Name);
	if(IsPlayerConnected(GetPlayerID(Name))) {
		if(GetPVarInt(playerid, "cFractionList")) {
			for(new i = 0; i < 15; i ++) StringName[playerid][i] = 0;
			DeletePVar(playerid, "cFractionList");
		}
		return SCM(playerid, 0xE5B090FF, "√à√£√∞√Æ√™ √≠√• √§√Æ√´√¶√•√≠ √°√ª√≤√º √Ø√Æ√§√™√´√æ√∑¬∏√≠ √™ √±√•√∞√¢√•√∞√≥");
	}
	new n_m_rnk, n_m_membr; cache_get_value_name_int(0, "pMember", n_m_membr); cache_get_value_name_int(0, "pRank", n_m_rnk);
	switch(type) {
		case 0: {
            if(n_m_rnk == 10) return SCM(playerid, COLOR_GREY, "√à√£√∞√Æ√™ √ø√¢√´√ø√•√≤√±√ø √´√®√§√•√∞√Æ√¨ √Ω√≤√Æ√© √Æ√∞√£√†√≠√®√ß√†√∂√®√®. √è√Æ√¢√ª√∏√•√≠√®√• √®√´√® √Ø√Æ√≠√®√¶√•√≠√®√• √≠√•√¢√Æ√ß√¨√Æ√¶√≠√Æ");
			if(n_m_rnk >= 9) return SCM(playerid, COLOR_GREY, "√ì √®√£√∞√Æ√™√† √¨√†√™√±√®√¨√†√´√º√≠√ª√© √∞√†√≠√£ √¢ √Æ√∞√£√†√≠√®√ß√†√∂√®√®. √è√Æ√¢√ª√∏√•√≠√®√• √≠√•√¢√Æ√ß√¨√Æ√¶√≠√Æ");
			mysql_format(mysql_Handle, string, 90, "UPDATE `accounts` SET `pRank` = `pRank` + '1' WHERE `id` = %i", StringName[playerid][GetPVarInt(playerid, "cFractionList")]);
			mysql_tquery(mysql_Handle, string);
			SCMF(playerid,COLOR_BLUE,"√Ç√ª √Ø√Æ√¢√ª√±√®√´√® √∞√†√≠√£ √Æ√¥√¥√´√†√©√≠ %s √¢ √Æ√∞√£√†√≠√®√ß√†√∂√®√® √§√Æ %d (%s)", Name, n_m_rnk+1, new_rank_name[n_m_membr-1][n_m_rnk]);
		}
		case 1: {
            if(n_m_rnk == 10) return SCM(playerid, COLOR_GREY, "√à√£√∞√Æ√™ √ø√¢√´√ø√•√≤√±√ø √´√®√§√•√∞√Æ√¨ √Ω√≤√Æ√© √Æ√∞√£√†√≠√®√ß√†√∂√®√®. √è√Æ√¢√ª√∏√•√≠√®√• √®√´√® √Ø√Æ√≠√®√¶√•√≠√®√• √≠√•√¢√Æ√ß√¨√Æ√¶√≠√Æ");
			if(n_m_rnk <= 1) return SCM(playerid, COLOR_GREY, "√ì √®√£√∞√Æ√™√† √¨√®√≠√®√¨√†√´√º√≠√ª√© √∞√†√≠√£ √¢ √Æ√∞√£√†√≠√®√ß√†√∂√®√®. √è√Æ√≠√®√¶√•√≠√®√• √≠√•√¢√Æ√ß√¨√Æ√¶√≠√Æ");
			mysql_format(mysql_Handle, string, 90, "UPDATE `accounts` SET `pRank` = `pRank` - '1' WHERE `id` = %i", StringName[playerid][GetPVarInt(playerid, "cFractionList")]);
			mysql_tquery(mysql_Handle, string);
			SCMF(playerid,COLOR_BLUE,"√Ç√ª √Ø√Æ√≠√®√ß√®√´√® √∞√†√≠√£ √Æ√¥√¥√´√†√©√≠ %s √¢ √Æ√∞√£√†√≠√®√ß√†√∂√®√® √§√Æ %d (%s)", Name, n_m_rnk-1, new_rank_name[n_m_membr-1][n_m_rnk-2]);
		}
		case 2: {
			mysql_format(mysql_Handle, string, 130, "UPDATE `accounts` SET `pLeader` = '0', `pMember` = '0', `pModel` = `pChar`, `pRank` = '0' WHERE `id` = %i", StringName[playerid][GetPVarInt(playerid, "cFractionList")]);
			mysql_tquery(mysql_Handle, string);
			SCMF(playerid, COLOR_BLUE, "%s √°√ª√´ √Æ√¥√¥√´√†√©√≠ √≥√¢√Æ√´√•√≠ √®√ß √Ç√†√∏√•√© √Æ√∞√£√†√≠√®√ß√†√∂√®√®", Name);
		}
	}
	if(GetPVarInt(playerid, "cFractionList")) {
		for(new i = 0; i < 15; i ++) StringName[playerid][i] = 0;
		DeletePVar(playerid, "cFractionList");
	}
	return 1;
}
stock GoPlayerAnimation(playerid, Float:X, Float:Y, Float:Z) {
	if(IsPlayerInAnyVehicle(playerid)) return 0;
	if(IsPlayerInRangeOfPoint(playerid, 2.0, X, Y, Z)) return ApplyAnimation(playerid, "PED", "IDLE_STANCE", 4.1, 0, 1, 1, 0, 0, 1),        1;
	else if(IsPlayerInRangeOfPoint(playerid, 4.0, X, Y, Z)) return ApplyAnimation(playerid, "PED", "WALK_PLAYER", 4.1, 0, 1, 1, 0, 0, 1),   2;
	else if(IsPlayerInRangeOfPoint(playerid, 7.0, X, Y, Z)) return ApplyAnimation(playerid, "PED", "RUN_GANG1", 4.1, 0, 1, 1, 0, 0, 1),     3;
	else return ApplyAnimation(playerid, "PED", "SPRINT_PANIC", 4.1, 0, 1, 1, 0, 0, 1),                                                     4;
}

stock SetPlayerFaceToPoint(playerid, Float:X, Float:Y) {
	new Float: angle;
	new Float:misc = 5.0;
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	angle = 180.0-atan2(x-X,y-Y);
	angle += misc;
	misc *= -1;
	SetPlayerFacingAngle(playerid, angle+misc);
	return 1;
}
stock CreateTray(Float:x, Float:y, Float:z, Float: a, interior, vw) {
	new slot = -1;
	for(new i = 0; i < sizeof(TrayData); i ++) {
		if(IsValidDynamicArea(TrayData[i][trayAreaID]) || IsValidDynamicPickup(TrayData[i][trayPickupID])) continue;
		slot = i;
		break;
	}
	if(slot == -1) return 0;
	x += (2.0 * floatsin(-a, degrees));
	y += (2.0 * floatcos(-a, degrees));
	TrayData[slot][trayPickupID] = CreateDynamicPickup(2355, 23, x, y, z-0.6, vw, interior);
	TrayData[slot][trayAreaID] = CreateDynamicSphere(x, y, z, 1.0, vw, interior);
	TrayData[slot][trayTimerID] = SetTimerEx("DestroyTray", 300000, false, "i", slot);
	return 1;
}

stock GetTray(playerid, tray) {
	if(GetPVarInt(playerid, "TrayInfo_Use")) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≥√¶√• √¢√ß√ø√´√® √Ø√Æ√§√≠√Æ√± √± √•√§√Æ√©");
	SetPVarInt(playerid, "TrayInfo_Use", true);
	SetPlayerSpecialAction(playerid, 25);
	SetPlayerAttachedObject(playerid, 0, 2355, 1, 0.096313, 0.334523, -0.267872, 109.200798, 122.924514, 313.923736, 1.025472, 1.000000, 1.000000);
	SCM(playerid, COLOR_LIGHTGREY, "Usar√≤√• {6699ff}/eat {cecece}√∑√≤√Æ√°√ª √Ø√Æ√•√±√≤√º √®√´√® {6699ff}/put {cecece}√∑√≤√Æ√°√ª √Ø√Æ√´√Æ√¶√®√≤√º √Ø√Æ√§√≠√Æ√± √± √•√§√Æ√©");
	DestroyDynamicPickup(TrayData[tray][trayPickupID]);
	DestroyDynamicArea(TrayData[tray][trayAreaID]);
	KillTimer(TrayData[tray][trayTimerID]);
	TrayData[tray][trayAreaID] = 0;
	TrayData[tray][trayPickupID] = 0;
	TrayData[tray][trayTimerID] = 0;
	return 1;
}

CB: DestroyTray(tray) {
	if(IsValidDynamicPickup(TrayData[tray][trayPickupID])) DestroyDynamicPickup(TrayData[tray][trayPickupID]);
	if(IsValidDynamicArea(TrayData[tray][trayAreaID])) DestroyDynamicArea(TrayData[tray][trayAreaID]);
	KillTimer(TrayData[tray][trayTimerID]);
	TrayData[tray][trayAreaID] = 0;
	TrayData[tray][trayPickupID] = 0;
	TrayData[tray][trayTimerID] = 0;
	return 1;
}

CB: billboardsinfo_show(playerid, typecity) {
	if(pData[playerid][pLevel] < 3) return SCM(playerid, COLOR_LIGHTGREY, "√Ä√∞√•√≠S√≠ √°√®√´√°√Æ√∞√§√Æ√¢ √∞√†√ß√∞√•√∏√•√≠√† √± 3-√£√Æ √≥√∞√Æ√¢√≠√ø");
	new rows, status_bs[50];
	string = "√ç√Æ√¨√•√∞\t√å√•√±√≤√Æ√Ø√Æ√´√Æ√¶√•√≠√®√•\t\t√ë√≤√†√≤√≥√±\n\n";
	cache_get_row_count(rows);
	switch(typecity) {
		case 1: {
			for(new i = 1; i < 11; i ++) {
				if(!strcmp(billboard_info[i][bs_renter], "None")) status_bs = ""CMAIN"√ë√¢√Æ√°√Æ√§√•√≠";
				else format(status_bs, sizeof status_bs, "{ff9a30}√Ä√∞√•√≠√§√Æ√¢√†√≠ √≠√† "CERROR"%d {ff9a30}√§√≠.", billboard_info[i][bs_rental_days]);
				format(string, sizeof string, "%s"CWHITE"%d\t\t%s\t\t%s\n", string, i, billboard_info[i][bs_name], status_bs);
			}
			SPD(playerid, 449, DIALOG_STYLE_TABLIST_HEADERS, ""CLITEBLUE"√ê√•√™√´√†√¨√≠√Æ√• √†√£√•√≠√≤√±√≤√¢√Æ √ã√ë", string, "Seleccione", "Cerrar");
		}
		case 2: {
			for(new i = 21; i < 31; i ++) {
				if(!strcmp(billboard_info[i][bs_renter], "None")) status_bs = ""CMAIN"√ë√¢√Æ√°√Æ√§√•√≠";
				else format(status_bs, sizeof status_bs, "{ff9a30}√Ä√∞√•√≠√§√Æ√¢√†√≠ √≠√† "CERROR"%d {ff9a30}√§√≠.", billboard_info[i][bs_rental_days]);
				format(string, sizeof string, "%s"CWHITE"%d\t\t%s\t\t%s\n", string, i - 20, billboard_info[i][bs_name], status_bs);
			}
			SPD(playerid, 649, DIALOG_STYLE_TABLIST_HEADERS, ""CLITEBLUE"√ê√•√™√´√†√¨√≠√Æ√• √†√£√•√≠√≤√±√≤√¢√Æ √ë√î", string, "Seleccione", "Cerrar");
		}
		case 3: {
			for(new i = 11; i < 21; i ++) {
				if(!strcmp(billboard_info[i][bs_renter], "None")) status_bs = ""CMAIN"√ë√¢√Æ√°√Æ√§√•√≠";
				else format(status_bs, sizeof status_bs, "{ff9a30}√Ä√∞√•√≠√§√Æ√¢√†√≠ √≠√† "CERROR"%d {ff9a30}√§√≠.", billboard_info[i][bs_rental_days]);
				format(string, sizeof string, "%s"CWHITE"%d\t\t%s\t\t%s\n", string, i - 10, billboard_info[i][bs_name], status_bs);
			}
			SPD(playerid, 549, DIALOG_STYLE_TABLIST_HEADERS, ""CLITEBLUE"√ê√•√™√´√†√¨√≠√Æ√• √†√£√•√≠√≤√±√≤√¢√Æ √ã√Ç", string, "Seleccione", "Cerrar");
		}
	} return 1;
}
stock show_setting_billboard(playerid, numbb) { 
	new str_settingbill[150];
	format(str_settingbill, sizeof str_settingbill, 
	""CWHITE"Cambio √≤√•√™√±√≤ √°√®√´√°√Æ√∞S√≠\n\
	√è√∞√Æ√§√´√®√≤√º √†√∞√•√≠√§√≥ "CLITEBLUE"(√Æ√±√≤√†√´√Æ√±√º %d √§√≠.)\n\
	{ff4d4d}√ê√†√ß√Æ√∞√¢√†√≤√º √§√Æ√£√Æ√¢√Æ√∞ √†√∞√•√≠√§√ª",
	billboard_info[numbb][bs_rental_days]);
	updatebillboards_info(playerid); TogglePlayerControllable(playerid, 0);
	new virt=GetPlayerVirtualWorld(playerid);
	if(virt != 8 + playerid) 
		SetPVarInt(playerid, "billb_vw", virt);
	SetPlayerPos(playerid, -321.820434, -185.588897, 1506.345947-10);
	SetPlayerCameraPos(playerid, -321.820434, -185.588897, 1506.345947);
	SetPlayerCameraLookAt(playerid, -326.812194, -185.539749, 1506.063232);
	SetPlayerVirtualWorld(playerid, 8 + playerid);
	return SPD(playerid, 484, DIALOG_STYLE_LIST, "{99cc33}√ç√†√±√≤√∞√Æ√©√™√® √°√®√´√°√Æ√∞S√≠", str_settingbill, "Seleccione", "√Ç√ª√©√≤√®");
}
stock updatebillboards_info(playerid) {
	new bill_id = pData[playerid][p_bill_id], br_str[122];
	if(!strcmp(billboard_info[bill_id][bs_text], "None")) br_str = "";
	else {
		format(br_str, 122, "%s", billboard_info[bill_id][bs_text]);
		for(new i = 0; i < 4; i ++) {
			new find = strfind(br_str, "/", true);
			if(find != -1) strdel(br_str, find, find + 1), strins(br_str, "\n", find, find + 2);
		}
		new delother = strfind(br_str, "/", true);
		if(delother != -1) strdel(br_str, delother, 122);
	}
	DestroyObject(billboard_obj[bill_id]); DestroyPlayerObject(playerid, obj_testbillb[playerid]);
	obj_testbillb[playerid] = CreatePlayerObject(playerid, 7606, -334.170013, -185.521286, 1500.637084, 0.000000, 0.000007, 0.000000); 
	billboard_obj[bill_id] = CreateObject(7606, billboard_info[bill_id][bs_cord][0], billboard_info[bill_id][bs_cord][1], billboard_info[bill_id][bs_cord][2], 0.0, 0.0, billboard_info[bill_id][bs_cord][3]);
	SetObjectMaterialText(billboard_obj[bill_id], br_str, 0, 130, "Arial", 48, 0, 0xFFFFFFFF, 0x131114, 1);
	SetPlayerObjectMaterialText(playerid, obj_testbillb[playerid], br_str, 0, 130, "Arial", 48, 0, 0xFFFFFFFF, 0x131114, 1);
}
stock update_billboard_int(number_b, fields[], data) {
	new str_r[144];
	mysql_format(mysql_Handle, str_r, 144, "UPDATE `billboards` SET `%s` = %d WHERE `bs_id` = %d", fields, data, number_b);
	return mysql_tquery(mysql_Handle, str_r);
}
stock update_billboard_str(number_b, fields[], str_data[]) {
	new str_r[144];
	mysql_format(mysql_Handle, str_r, 144, "UPDATE `billboards` SET %s = '%s' WHERE `bs_id` = %d", fields, str_data, number_b);
	return mysql_tquery(mysql_Handle, str_r);
}
CB: billboardsinfo_showshow(playerid) {
	new rows, row_listitem = GetPVarInt(playerid, "list_billb"); DeletePVar(playerid, "list_billb");
	cache_get_row_count(rows);
	if(!strcmp(billboard_info[row_listitem][bs_renter], "None")) {
		SetPVarInt(playerid, "billboard_selected", row_listitem);
		return SPD(playerid, 487, DIALOG_STYLE_MSGBOX, "{40bf80}√Ä√∞√•√≠S√≠ √°√®√´√°√Æ√∞S√≠", ""CWHITE"S√≠√≠√≠√ª√© √°√®√´√°√Æ√∞√§ √±√¢√Æ√°√Æ√§√•√≠. Quieres\n√•√£√Æ √†√∞√•√≠√§√Æ√¢√†√≤√º?", "S√≠", "Siguiente");
	}
	else {
		format(string, 90, ""CWHITE"S√≠√≠√≠√ª√© √°√®√´√°√Æ√∞√§ √ß√†√≠√ø√≤.\n√Ä√∞√•√≠S√≠√≤√Æ√∞: "CPALEGREEN"%s", billboard_info[row_listitem][bs_renter]);
		return SPD(playerid, 429, DIALOG_STYLE_MSGBOX, ""CORANGE"√Ä√∞√•√≠S√≠ √°√®√´√°√Æ√∞S√≠", string, "Siguiente", "");
	}
}
stock update_prods_info() {
	new af[120];
	format(af,sizeof(af),"√ë√™√´√†√§ √Ø√∞√Æ√®√ß√¢√Æ√§√±√≤√¢√•√≠√≠√Æ√£√Æ\n√∂√•√µ√†\n\n{cc9900}/prodbuy\n\n\n{33cc00}√è√∞√Æ√§√≥√™√≤√Æ√¢ √≠√† √±√™√´√†√§√•:\n%d √∏√≤.",prods_factory);
	UpdateDynamic3DTextLabelText(factoryprods[0], -1, af);
	format(af,sizeof(af),"√è√∞√Æ√§√≥√™√≤√Æ√¢ √≠√† √±√™√´√†√§√•:\n\n{ffaa00}%d √∏√≤.",prods_factory);
	UpdateDynamic3DTextLabelText(factoryprods[1], 0x33CC00FF, af);
}
public OnPlayerEnterDynamicCP(playerid, checkpointid) {

	if(checkpointid == uprav_stateprez)
	{
        if(pData[playerid][pLeader] != 26) 
        	SCM(playerid, COLOR_LIGHTGREY, "√ù√≤√† √¥√≥√≠√™√∂√®√ø √§√Æ√±√≤√≥√Ø√≠√† √≤√Æ√´√º√™√Æ √Ø√∞√•√ß√®√§√•√≠√≤√≥");
        else econ_panel(playerid);
    }

	if(checkpointid == factorystorage)
 	{
		if(!workzavod[playerid]) return 1;
		if(GetPVarInt(playerid, "product") == 0) return 1;
		DeletePVar(playerid, "product");
	    SetPlayerSpecialAction(playerid, 0);
	    ApplyAnimation(playerid, "CARRY", "PUTDWN", 4.0, 0, 0, 0, 0, 0);
	    new am = GetPVarInt(playerid, "amountprod");
	    SetPVarInt(playerid, "amountprod", am+1);
	    prods_factory++;
	    mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `prods_factory` = `prods_factory` + 1");
	    update_prods_info();
	    SCMF(playerid, COLOR_YELLOW, "%d-√© √Ø√∞√Æ√§√≥√™√≤ √§√Æ√±√≤√†√¢√´√•√≠ √≠√† √±√™√´√†√§",am+1);
	    RemovePlayerAttachedObject(playerid, 4);
	    table1[playerid] = CreateDynamicCP(2558.5430,-1295.8499,1044.1250, 0.6, 10, 2, playerid, 1.5);
		table2[playerid] = CreateDynamicCP(2556.2808,-1295.8499,1044.1250, 0.6, 10, 2, playerid, 1.5);
		table3[playerid] = CreateDynamicCP(2553.8875,-1295.8497,1044.1250, 0.6, 10, 2, playerid, 1.5);
		table4[playerid] = CreateDynamicCP(2544.4441,-1295.8497,1044.1250, 0.6, 10, 2, playerid, 1.5);
		table5[playerid] = CreateDynamicCP(2542.0540,-1295.8502,1044.1250, 0.6, 10, 2, playerid, 1.5);
		table6[playerid] = CreateDynamicCP(2542.0830,-1291.0057,1044.1250, 0.6, 10, 2, playerid, 1.5);
		table7[playerid] = CreateDynamicCP(2544.2891,-1290.8970,1044.1250, 0.6, 10, 2, playerid, 1.5);
		table8[playerid] = CreateDynamicCP(2553.6885,-1291.0057,1044.1250, 0.6, 10, 2, playerid, 1.5);
		table9[playerid] = CreateDynamicCP(2556.1968,-1291.0057,1044.1250, 0.6, 10, 2, playerid, 1.5);
		table10[playerid] = CreateDynamicCP(2558.4468,-1291.0046,1044.1250, 0.6, 10, 2, playerid, 1.5);
		SetPVarInt(playerid, "factorymoney", GetPVarInt(playerid, "factorymoney") + 115 + random(10));
		SetPVarInt(playerid, "factoryquantity", GetPVarInt(playerid, "factoryquantity")+ 1);
	}
	if(checkpointid == table1[playerid] || checkpointid == table2[playerid] || checkpointid == table3[playerid] || checkpointid == table4[playerid] || checkpointid == table5[playerid])
	{
	    if(!workzavod[playerid]) return 1;
	    if(GetPVarInt(playerid, "mymetal") == 0) return SCM(playerid, COLOR_GREY, "√Ç√Æ√ß√º√¨√®√≤√• √¨√•√≤√†√´√´ √≥ √∞√†√ßS√≠√≤√Æ√∑√≠√Æ√£√Æ √±√≤√Æ√´√†");
        SetPVarInt(playerid, "factoryanim", 1);
	    SetPlayerFacingAngle(playerid, 0.0);
        if(IsPlayerInDynamicCP(playerid, table1[playerid]))
        {
			switch(random(3))
	        {
	            case 0: factoryobject[playerid] = CreateDynamicObject(1954, 2558.55, -1294.95, 1044.16,   0.00, 0.00, 0.00);
	            case 1: factoryobject[playerid] = CreateDynamicObject(1718, 2558.55, -1294.95, 1044.16,   0.00, 0.00, 0.00);
	            case 2: factoryobject[playerid] = CreateDynamicObject(2926, 2558.55, -1294.95, 1044.07,   0.00, 0.00, 0.00);
	        }
		}
		if(IsPlayerInDynamicCP(playerid, table2[playerid]))
		{
	     	switch(random(3))
	        {
	            case 0:	factoryobject[playerid] = CreateDynamicObject(1954, 2556.18, -1294.95, 1044.16,   0.00, 0.00, 0.00);
	            case 1: factoryobject[playerid] = CreateDynamicObject(1718, 2556.18, -1294.95, 1044.16,   0.00, 0.00, 0.00);
	            case 2: factoryobject[playerid] = CreateDynamicObject(2926, 2556.18, -1294.95, 1044.07,   0.00, 0.00, 0.00);
	        }
		}
		if(IsPlayerInDynamicCP(playerid, table3[playerid]))
		{
	     	switch(random(3))
	        {
	            case 0: factoryobject[playerid] = CreateDynamicObject(1954, 2553.78, -1294.95, 1044.16,   0.00, 0.00, 0.00);
	            case 1: factoryobject[playerid] = CreateDynamicObject(1718, 2553.78, -1294.95, 1044.16,   0.00, 0.00, 0.00);
	            case 2: factoryobject[playerid] = CreateDynamicObject(2926, 2553.78, -1294.95, 1044.07,   0.00, 0.00, 0.00);
	        }
		}
		if(IsPlayerInDynamicCP(playerid, table4[playerid]))
		{
		    switch(random(3))
	        {
	            case 0: factoryobject[playerid] = CreateDynamicObject(1954, 2544.28, -1294.95, 1044.16,   0.00, 0.00, 0.00);
	            case 1: factoryobject[playerid] = CreateDynamicObject(1718, 2544.28, -1294.95, 1044.16,   0.00, 0.00, 0.00);
	            case 2: factoryobject[playerid] = CreateDynamicObject(2926, 2544.28, -1294.95, 1044.07,   0.00, 0.00, 0.00);
	        }
		}
		if(IsPlayerInDynamicCP(playerid, table5[playerid]))
		{
		    switch(random(3))
	        {
	            case 0: factoryobject[playerid] = CreateDynamicObject(1954, 2541.98, -1294.95, 1044.16,   0.00, 0.00, 0.00);
	            case 1: factoryobject[playerid] = CreateDynamicObject(1718, 2541.98, -1294.95, 1044.16,   0.00, 0.00, 0.00);
	            case 2: factoryobject[playerid] = CreateDynamicObject(2926, 2541.98, -1294.95, 1044.07,   0.00, 0.00, 0.00);
	        }
		}
		DestroyDynamicCP(table1[playerid]);
	    DestroyDynamicCP(table2[playerid]);
	    DestroyDynamicCP(table3[playerid]);
	    DestroyDynamicCP(table4[playerid]);
	    DestroyDynamicCP(table5[playerid]);
	    DestroyDynamicCP(table6[playerid]);
	    DestroyDynamicCP(table7[playerid]);
	    DestroyDynamicCP(table8[playerid]);
	    DestroyDynamicCP(table9[playerid]);
	    DestroyDynamicCP(table10[playerid]);
		SetPVarInt(playerid, "mymetal", GetPVarInt(playerid, "mymetal")-1);
		SetPlayerAttachedObject(playerid, 5, 18644, 6, 0.063998, 0.019998, -0.005000, 31.800243, 11.700078, 23.200094, 1.000000, 1.000000, 1.000000);
		SetPlayerAttachedObject(playerid, 6, 18635, 5, 0.095998, 0.015998, -0.114000, 19.600008, 104.500099, 128.999847, 1.000000, 1.000000, 1.000000);

		static const random_factory [ ] = {6000,8000,10000,12000,14000};
		new factory = random(5);
		SetTimerEx("animfactory", random_factory[factory], 0, "i", playerid);
		switch(random(16))
		{
		    case 0..4: SetPVarInt(playerid, "myfail", 0);
		    case 5:SetPVarInt(playerid, "myfail", 1);
		    case 6..7: SetPVarInt(playerid, "myfail", 0);
		    case 8:SetPVarInt(playerid, "myfail", 1);
		    case 9..13: SetPVarInt(playerid, "myfail", 0);
	     	case 14:SetPVarInt(playerid, "myfail", 1);
     	 	case 15:SetPVarInt(playerid, "myfail", 0);
		}
		ApplyAnimation(playerid, "OTB", "BETSLP_LOOP", 4.1, 1, 0, 0, 0, 0);
	}
	if(checkpointid == table6[playerid] || checkpointid == table7[playerid] || checkpointid == table8[playerid] || checkpointid == table9[playerid] || checkpointid == table10[playerid])
	{
	    if(!workzavod[playerid]) return 1;
	    if(GetPVarInt(playerid, "mymetal") == 0) return SCM(playerid, COLOR_GREY, "√Ç√Æ√ß√º√¨√®√≤√• √¨√•√≤√†√´√´ √≥ √∞√†√ßS√≠√≤√Æ√∑√≠√Æ√£√Æ √±√≤√Æ√´√†");

        SetPVarInt(playerid, "factoryanim", 1);
	    SetPlayerFacingAngle(playerid, 180.0);
	    if(IsPlayerInDynamicCP(playerid, table6[playerid]))
		{
		    switch(random(3))
	        {
	            case 0: factoryobject[playerid] = CreateDynamicObject(1954, 2541.98, -1291.91, 1044.16,   0.00, 0.00, 180.00);
	            case 1: factoryobject[playerid] = CreateDynamicObject(1718, 2541.98, -1291.91, 1044.16,   0.00, 0.00, 180.00);
	            case 2: factoryobject[playerid] = CreateDynamicObject(2926, 2541.98, -1291.91, 1044.07,   0.00, 0.00, 180.00);
	        }
		}
		if(IsPlayerInDynamicCP(playerid, table7[playerid]))
		{
		    switch(random(3))
	        {
	            case 0: factoryobject[playerid] = CreateDynamicObject(1954, 2544.28, -1291.91, 1044.16,   0.00, 0.00, 180.00);
	            case 1: factoryobject[playerid] = CreateDynamicObject(1718, 2544.28, -1291.91, 1044.16,   0.00, 0.00, 180.00);
	            case 2: factoryobject[playerid] = CreateDynamicObject(2926, 2544.28, -1291.91, 1044.07,   0.00, 0.00, 180.00);
	        }
		}
		if(IsPlayerInDynamicCP(playerid, table8[playerid]))
		{
		    switch(random(3))
	        {
	            case 0: factoryobject[playerid] = CreateDynamicObject(1954, 2553.78, -1291.91, 1044.16,   0.00, 0.00, 180.00);
	            case 1: factoryobject[playerid] = CreateDynamicObject(1718, 2553.78, -1291.91, 1044.16,   0.00, 0.00, 180.00);
	            case 2: factoryobject[playerid] = CreateDynamicObject(2926, 2553.78, -1291.91, 1044.07,   0.00, 0.00, 180.00);
	        }
		}
		if(IsPlayerInDynamicCP(playerid, table9[playerid]))
		{
		    switch(random(3))
	        {
	            case 0: factoryobject[playerid] = CreateDynamicObject(1954, 2556.18, -1291.91, 1044.16,   0.00, 0.00, 180.00);
	            case 1: factoryobject[playerid] = CreateDynamicObject(1718, 2556.18, -1291.91, 1044.16,   0.00, 0.00, 180.00);
	            case 2: factoryobject[playerid] = CreateDynamicObject(2926, 2556.18, -1291.91, 1044.07,   0.00, 0.00, 180.00);
	        }
		}
		if(IsPlayerInDynamicCP(playerid, table10[playerid]))
		{
		    switch(random(3))
	        {
	            case 0: factoryobject[playerid] = CreateDynamicObject(1954, 2558.55, -1291.91, 1044.16,   0.00, 0.00, 180.00);
	            case 1: factoryobject[playerid] = CreateDynamicObject(1718, 2558.55, -1291.91, 1044.16,   0.00, 0.00, 180.00);
	            case 2: factoryobject[playerid] = CreateDynamicObject(2926, 2558.55, -1291.91, 1044.07,   0.00, 0.00, 180.00);
	        }
		}
		DestroyDynamicCP(table1[playerid]);
	    DestroyDynamicCP(table2[playerid]);
	    DestroyDynamicCP(table3[playerid]);
	    DestroyDynamicCP(table4[playerid]);
	    DestroyDynamicCP(table5[playerid]);
	    DestroyDynamicCP(table6[playerid]);
	    DestroyDynamicCP(table7[playerid]);
	    DestroyDynamicCP(table8[playerid]);
	    DestroyDynamicCP(table9[playerid]);
	    DestroyDynamicCP(table10[playerid]);
		SetPVarInt(playerid, "mymetal", GetPVarInt(playerid, "mymetal")-1);
		SetPlayerAttachedObject(playerid, 5, 18644, 6, 0.063998, 0.019998, -0.005000, 31.800243, 11.700078, 23.200094, 1.000000, 1.000000, 1.000000);
		SetPlayerAttachedObject(playerid, 6, 18635, 5, 0.095998, 0.015998, -0.114000, 19.600008, 104.500099, 128.999847, 1.000000, 1.000000, 1.000000);

		static const random_factory [ ] = {6000,8000,10000,12000,14000};
		new factory = random(5);
		SetTimerEx("animfactory", random_factory[factory], 0, "i", playerid);
		switch(random(16))
		{
		    case 0..4: SetPVarInt(playerid, "myfail", 0);
		    case 5:SetPVarInt(playerid, "myfail", 1);
		    case 6..7: SetPVarInt(playerid, "myfail", 0);
		    case 8:SetPVarInt(playerid, "myfail", 1);
		    case 9..13: SetPVarInt(playerid, "myfail", 0);
	     	case 14:SetPVarInt(playerid, "myfail", 1);
     	 	case 15:SetPVarInt(playerid, "myfail", 0);
		}
		ApplyAnimation(playerid, "OTB", "BETSLP_LOOP", 4.1, 1, 0, 0, 0, 0);
	}

	if(checkpointid == sport_menu || checkpointid == sport_menu + 1 || checkpointid == sport_menu + 2 || checkpointid == sport_menu + 3) {
		if(GetPVarInt(playerid, "abonement")) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≥√¶√• √™√≥√Ø√®√´√® √†√°√Æ√≠√•√¨√•√≠√≤");
		SPD(playerid, 1897, DIALOG_STYLE_MSGBOX, "{FFCD00}√è√Æ√™√≥√Ø√™√† √†√°√Æ√≠√•√¨√•√≠√≤√†", ""CWHITE"Quieres √™√≥√Ø√®√≤√º √•√§√®√≠√Æ√∞√†√ß√Æ√¢√ª√© √†√°√Æ√≠√•√¨√•√≠√≤ √§√´√ø √ß√†√≠√ø√≤√®√© √¢ √Ω√≤√Æ√¨ √±√Ø√Æ√∞√≤√ß√†√´√•?", "S√≠", "No");
	}
	if(checkpointid == prop_info_cp) 
		SPD(playerid, 1118, DIALOG_STYLE_TABLIST_HEADERS, ""CPALEGREEN"√è√∞√Æ√±√¨√Æ√≤√∞ √®√≠√¥√Æ√∞√¨√†√∂√®√®", "{9966ff}√ë√≤√Æ√®√¨√Æ√±√≤√º √≥√±√´√≥√£√®: 400$. √Ç√ª√°√•√∞√®√≤√• √≤√®√Ø √®√¨√≥√π√•√±√≤√¢√†:\n"CWHITE"√Ñ√Æ√¨\n√Å√®√ß√≠√•√±", "Seleccione", "Cerrar");
	if(checkpointid == army_foodsv) {
		if(!IsAArm(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√å√•√≠√æ √Ω√≤√Æ√© √±√≤√Æ√´√Æ√¢√Æ√© √§√Æ√±√≤√≥√Ø√≠√Æ √≤√Æ√´√º√™√Æ √¢√Æ√•√≠√≠√ª√¨");
		SPD(playerid, 635, DIALOG_STYLE_LIST, "{FFCD00}√Ä√∞√¨√•√©√±√™√†√ø √±√≤√Æ√´√Æ√¢√†√ø", ""CWHITE"√Å√≥√≤√•√∞√°√∞√Æ√§ √± √¨√†√±√´√Æ√¨\t\t"CMAIN"+30 HP\n"CWHITE"√ê√®√±√Æ√¢√†√ø √™√†√∏√†\t\t\t"CMAIN"+50 HP\n"CWHITE"√É√∞√•√∑√≠√•√¢√†√ø √™√†√∏√†\t\t"CMAIN"+50 HP\n"CWHITE"√ä√∞√†√±√≠√ª√© √°√Æ√∞√π\t\t\t"CMAIN"+70 HP\n"CWHITE"√á√•√´¬∏√≠√ª√© √°√Æ√∞√π\t\t\t"CMAIN"+70 HP", "√ë√∫√•√±√≤√º", "Cerrar");
	}
	if(checkpointid == army_foodvvc) {
		if(!IsAArm(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√å√•√≠√æ √Ω√≤√Æ√© √±√≤√Æ√´√Æ√¢√Æ√© √§√Æ√±√≤√≥√Ø√≠√Æ √≤√Æ√´√º√™√Æ √¢√Æ√•√≠√≠√ª√¨");
		SPD(playerid, 635, DIALOG_STYLE_LIST, "{FFCD00}√Ä√∞√¨√•√©√±√™√†√ø √±√≤√Æ√´√Æ√¢√†√ø", ""CWHITE"√Å√≥√≤√•√∞√°√∞√Æ√§ √± √¨√†√±√´√Æ√¨\t\t"CMAIN"+30 HP\n"CWHITE"√ê√®√±√Æ√¢√†√ø √™√†√∏√†\t\t\t"CMAIN"+50 HP\n"CWHITE"√É√∞√•√∑√≠√•√¢√†√ø √™√†√∏√†\t\t"CMAIN"+50 HP\n"CWHITE"√ä√∞√†√±√≠√ª√© √°√Æ√∞√π\t\t\t"CMAIN"+70 HP\n"CWHITE"√á√•√´¬∏√≠√ª√© √°√Æ√∞√π\t\t\t"CMAIN"+70 HP", "√ë√∫√•√±√≤√º", "Cerrar");
	}
	if(checkpointid == army_foodvmf) {
		if(!IsAArm(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√å√•√≠√æ √Ω√≤√Æ√© √±√≤√Æ√´√Æ√¢√Æ√© √§√Æ√±√≤√≥√Ø√≠√Æ √≤√Æ√´√º√™√Æ √¢√Æ√•√≠√≠√ª√¨");
		SPD(playerid, 635, DIALOG_STYLE_LIST, "{FFCD00}√Ä√∞√¨√•√©√±√™√†√ø √±√≤√Æ√´√Æ√¢√†√ø", ""CWHITE"√Å√≥√≤√•√∞√°√∞√Æ√§ √± √¨√†√±√´√Æ√¨\t\t"CMAIN"+30 HP\n"CWHITE"√ê√®√±√Æ√¢√†√ø √™√†√∏√†\t\t\t"CMAIN"+50 HP\n"CWHITE"√É√∞√•√∑√≠√•√¢√†√ø √™√†√∏√†\t\t"CMAIN"+50 HP\n"CWHITE"√ä√∞√†√±√≠√ª√© √°√Æ√∞√π\t\t\t"CMAIN"+70 HP\n"CWHITE"√á√•√´¬∏√≠√ª√© √°√Æ√∞√π\t\t\t"CMAIN"+70 HP", "√ë√∫√•√±√≤√º", "Cerrar");
	}
	if(checkpointid == ammunation) {
		if(!pData[playerid][pLicenses][3]) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √´√®√∂√•√≠√ß√®√® √≠√† √Æ√∞√≥√¶√®√•");

		new shop_str[] = 
		"√ç√†√ß√¢√†√≠√®√•\t√ä√Æ√´√®√∑√•√±√≤√¢√Æ\t√ñ√•√≠√†\n\
		[1] √ä√†√±√≤√•√≤\t1 √Ø√†√∞√†\t750$\n\
		[2] √Å√®√≤√†\t1 √∏√≤.\t800$\n\
		[3] Silence 9mm\t30 √Ø√†√≤√∞.\t6700$\n\
		[4] Deagle\t30 √Ø√†√≤√∞.\t7500$\n\
		[5] Shotgun\t30 √Ø√†√≤√∞.\t8000$\n\
		[6] MP5\t30 √Ø√†√≤√∞.\t12300$\n\
		[7] AK-47\t30 √Ø√†√≤√∞.\t13000$\n\
		[8] M4\t30 √Ø√†√≤√∞.\t17200$\n\
		[9] Country Rifle\t30 √Ø√†√≤√∞.\t21000$\n\
		[10] Sniper Rifle\t10 √Ø√†√≤√∞.\t56000$\n\
		[11] Colt 45\t30 √Ø√†√≤√∞.\t9000$\n\
		[12] Sawnoff\t30 √Ø√†√≤√∞.\t28000$\n\
		[13] Combat SG\t30 √Ø√†√≤√∞.\t16400$\n\
		[14] Micro Uzi\t100 √Ø√†√≤√∞.\t34500$\n\
		[15] TEC-9\t100 √Ø√†√≤√∞.\t42000$\n\
		[16] √ë√´√•√ß√Æ√≤√Æ√∑√®√¢√ª√© √£√†√ß\t40 √∏√≤.\t27200$";

		return SPD(playerid, 766, DIALOG_STYLE_TABLIST_HEADERS, "{cc9900}√é√∞√≥√¶√•√©√≠√ª√© √¨√†√£√†√ß√®√≠", shop_str, "√ä√≥√Ø√®√≤√º", "Cerrar");
	}
	if(checkpointid == news_checkpoint_SF) {
		if(pData[playerid][p_bill_id] > 0) show_setting_billboard(playerid, pData[playerid][p_bill_id]);
		else mysql_tquery(mysql_Handle, "SELECT * FROM `billboards`", "billboardsinfo_show", "ii", playerid, 2);  
	}
	if(checkpointid == news_checkpoint_LV) {
		if(pData[playerid][p_bill_id] > 0) show_setting_billboard(playerid, pData[playerid][p_bill_id]);
		else mysql_tquery(mysql_Handle, "SELECT * FROM `billboards`", "billboardsinfo_show", "ii", playerid, 3);  
	}
	if(checkpointid == news_checkpoint) {
		if(pData[playerid][p_bill_id] > 0) show_setting_billboard(playerid, pData[playerid][p_bill_id]);
		else mysql_tquery(mysql_Handle, "SELECT * FROM `billboards`", "billboardsinfo_show", "ii", playerid, 1);  
	}
	if(checkpointid == armysv_patr_check) {
		new str_patr[50];
		if(box_object[playerid] && !IsAMafia(playerid)) {
			if(svstore_patr >= 100000) return SCM(playerid, COLOR_GREY, "√ë√™√´√†√§ √Ø√Æ√´√Æ√≠");
			ApplyAnimation(playerid, "CARRY", "PUTDWN", 4.0, 0, 0, 0, 0, 0, 1);
			SetPlayerSpecialAction(playerid, 0);
			if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
			svstore_patr += 500; box_object[playerid] = false;
			format(str_patr, 50, "√è√†√≤√∞√Æ√≠√ª √≠√† √±√™√´√†√§√•:\n%i / 100000 √∏√≤.", svstore_patr);
			UpdateDynamic3DTextLabelText(text_sv_storpt, 0xFFCC00FF, str_patr);
			mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `svstore_patr` = `svstore_patr` + '500'");
			return SCM(playerid, COLOR_BLUE, "√Ç√ª √Ø√Æ√´√Æ√¶√®√´√® √ø√π√®√™ √≠√† √±√™√´√†√§ {00√ë√ë00}(+ 500 √Ø√†√≤√∞.)");
		}
		if(IsAArm(playerid) && !box_object[playerid]) return SCM(playerid, COLOR_LIGHTGREY, "√è√∞√®√≠√•√±√®√≤√• √ø√π√®√™ √± √Ø√†√≤√∞√Æ√≠√†√¨√® √®√´√® √¢√¢√•√§√®√≤√• "CORANGE"/putmyammo "CLIGHTGREY"√∑√≤√Æ√°√ª √Ø√Æ√´√Æ√¶√®√≤√º √±√¢√Æ√® √Ø√†√≤√∞√Æ√≠√ª");
		if(!IsAGang(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Ø√Æ√´√º√ß√Æ√¢√†√≤√º√±√ø √Ω√≤√®√¨ √±√™√´√†√§√Æ√¨");
		if(!pData[playerid][p_premium] && pData[playerid][pPatr] >= 300) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √≥√≠√•√±√≤√® √± √±√Æ√°√Æ√© √°√Æ√´√•√• {FFCD00}300 √Ø√†√≤√∞√Æ√≠√Æ√¢");
		if(pData[playerid][p_premium] && pData[playerid][pPatr] >= 600) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √≥√≠√•√±√≤√® √± √±√Æ√°√Æ√© √°√Æ√´√•√• {FFCD00}600 √Ø√†√≤√∞√Æ√≠√Æ√¢");
		if(svstore_patr < 5) return SCM(playerid, COLOR_GREY, "√ç√† √±√™√´√†√§√• √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √Ø√†√≤√∞√Æ√≠√Æ√¢");

		GameTextForPlayer(playerid, "~g~LOADING...", 2000, 6);
		KillTimer(patrtimer[playerid]);
		patrtimer[playerid]=SetTimerEx("patr_arm_sv", 1200, 0, "d", playerid);
	}
	if(checkpointid == armyvvc_patr_check) {
		new str_patr[50];
		if(box_object[playerid] && !IsAMafia(playerid)) {
			if(vvcstore_patr >= 100000) return SCM(playerid, COLOR_GREY, "√ë√™√´√†√§ √Ø√Æ√´√Æ√≠");
			ApplyAnimation(playerid, "CARRY", "PUTDWN", 4.0, 0, 0, 0, 0, 0, 1);
			SetPlayerSpecialAction(playerid, 0);
			if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
			vvcstore_patr += 500; box_object[playerid] = false;
			format(str_patr, 50, "√è√†√≤√∞√Æ√≠√ª √≠√† √±√™√´√†√§√•:\n%i / 100000 √∏√≤.", vvcstore_patr);
			UpdateDynamic3DTextLabelText(text_vvc_storpt, 0xFFCC00FF, str_patr);
			mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `vvcstore_patr` = `vvcstore_patr` + '500'");
			return SCM(playerid, COLOR_BLUE, "√Ç√ª √Ø√Æ√´√Æ√¶√®√´√® √ø√π√®√™ √≠√† √±√™√´√†√§ {00√ë√ë00}(+ 500 √Ø√†√≤√∞.)");
		}
		if(IsAArm(playerid) && !box_object[playerid]) return SCM(playerid, COLOR_LIGHTGREY, "√è√∞√®√≠√•√±√®√≤√• √ø√π√®√™ √± √Ø√†√≤√∞√Æ√≠√†√¨√® √®√´√® √¢√¢√•√§√®√≤√• "CORANGE"/putmyammo "CLIGHTGREY"√∑√≤√Æ√°√ª √Ø√Æ√´√Æ√¶√®√≤√º √±√¢√Æ√® √Ø√†√≤√∞√Æ√≠√ª");
		if(!IsAGang(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Ø√Æ√´√º√ß√Æ√¢√†√≤√º√±√ø √Ω√≤√®√¨ √±√™√´√†√§√Æ√¨");
		if(!pData[playerid][p_premium] && pData[playerid][pPatr] >= 300) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √≥√≠√•√±√≤√® √± √±√Æ√°√Æ√© √°√Æ√´√•√• {FFCD00}300 √Ø√†√≤√∞√Æ√≠√Æ√¢");
		if(pData[playerid][p_premium] && pData[playerid][pPatr] >= 600) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √≥√≠√•√±√≤√® √± √±√Æ√°√Æ√© √°√Æ√´√•√• {FFCD00}600 √Ø√†√≤√∞√Æ√≠√Æ√¢");
		if(vvcstore_patr < 5) return SCM(playerid, COLOR_GREY, "√ç√† √±√™√´√†√§√• √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √Ø√†√≤√∞√Æ√≠√Æ√¢");

		GameTextForPlayer(playerid, "~g~LOADING...", 2000, 6);
		KillTimer(patrtimer[playerid]);
		patrtimer[playerid]=SetTimerEx("patr_arm_vvc", 1200, 0, "d", playerid);
	}
	if(checkpointid == armyvmf_patr_check) {
		new str_patr[50];
		if(box_object[playerid] && !IsAMafia(playerid)) {
			if(vmfstore_patr >= 100000) return SCM(playerid, COLOR_GREY, "√ë√™√´√†√§ √Ø√Æ√´√Æ√≠");
			ApplyAnimation(playerid, "CARRY", "PUTDWN", 4.0, 0, 0, 0, 0, 0, 1);
			SetPlayerSpecialAction(playerid, 0);
			if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
			vmfstore_patr += 500; box_object[playerid] = false;
			format(str_patr, 50, "√è√†√≤√∞√Æ√≠√ª √≠√† √±√™√´√†√§√•:\n%i / 100000 √∏√≤.", vmfstore_patr);
			UpdateDynamic3DTextLabelText(text_vmf_storpt, 0xFFCC00FF, str_patr);
			mysql_tquery(mysql_Handle, "UPDATE `otherfuncs` SET `vmfstore_patr` = `vmfstore_patr` + '500'");
			return SCM(playerid, COLOR_BLUE, "√Ç√ª √Ø√Æ√´√Æ√¶√®√´√® √ø√π√®√™ √≠√† √±√™√´√†√§ {00√ë√ë00}(+ 500 √Ø√†√≤√∞.)");
		}
		if(IsAArm(playerid) && !box_object[playerid]) return SCM(playerid, COLOR_LIGHTGREY, "√è√∞√®√≠√•√±√®√≤√• √ø√π√®√™ √± √Ø√†√≤√∞√Æ√≠√†√¨√® √®√´√® √¢√¢√•√§√®√≤√• "CORANGE"/putmyammo "CLIGHTGREY"√∑√≤√Æ√°√ª √Ø√Æ√´√Æ√¶√®√≤√º √±√¢√Æ√® √Ø√†√≤√∞√Æ√≠√ª");
		if(!IsAGang(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Ø√Æ√´√º√ß√Æ√¢√†√≤√º√±√ø √Ω√≤√®√¨ √±√™√´√†√§√Æ√¨");
		if(!pData[playerid][p_premium] && pData[playerid][pPatr] >= 300) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √≥√≠√•√±√≤√® √± √±√Æ√°√Æ√© √°√Æ√´√•√• {FFCD00}300 √Ø√†√≤√∞√Æ√≠√Æ√¢");
		if(pData[playerid][p_premium] && pData[playerid][pPatr] >= 600) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √≥√≠√•√±√≤√® √± √±√Æ√°√Æ√© √°√Æ√´√•√• {FFCD00}600 √Ø√†√≤√∞√Æ√≠√Æ√¢");
		if(vmfstore_patr < 5) return SCM(playerid, COLOR_GREY, "√ç√† √±√™√´√†√§√• √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √Ø√†√≤√∞√Æ√≠√Æ√¢");

		GameTextForPlayer(playerid, "~g~LOADING...", 2000, 6);
		KillTimer(patrtimer[playerid]);
		patrtimer[playerid]=SetTimerEx("patr_arm_vmf", 1200, 0, "d", playerid);
	}
	return 1;
}
stock CarEnter(playerid, vehicleid) {
	if(!IsValidVehicle(vehicleid)) return 1;
	if(vehicleid >= af_orig_truck[0] && vehicleid <= af_orig_truck[1]) {
		if(GetPVarInt(playerid, "veh_rent") != vehicleid) {
			if(!af_player_loadready[playerid] || af_carID[playerid] > 0) {
				RemovePlayerFromVehicle(playerid);
				return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √¢√ß√ø√≤√º √¢ √†√∞√•√≠√§√≥ √Ω√≤√Æ√≤ √≤√∞√†√≠√±√Ø√Æ√∞√≤, √Ø√Æ√±√™√Æ√´√º√™√≥ √≠√• √±√Æ√°√∞√†√´√® √†√¢√≤√Æ√¨√Æ√°√®√´√º √≠√† √¥√†√°√∞√®√™√•");
			}
			TogglePlayerControllable(playerid, 0);
			SPD(playerid, 294, DIALOG_STYLE_MSGBOX, ""CLITEBLUE"√Ñ√®√±√Ø√•√≤√∑√•√∞", ""CWHITE"Quieres √¢√ß√ø√≤√º √¢ √†√∞√•√≠√§√≥ √Ω√≤√Æ√≤ √≤√∞√†√≠√±√Ø√Æ√∞√≤?\n√ë√≤√Æ√®√¨√Æ√±√≤√º √†√∞√•√≠√§√ª: {00cc00}100$", "S√≠", "No");
		}
	}
	else if(VodPrava(vehicleid) && !pData[playerid][pLicenses][0] && !pTemp[playerid][pOnExam]) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √¢√Æ√§√®√≤√•√´√º√±√™√®√µ √Ø√∞√†√¢"), RemovePlayerFromVehicle(playerid);
	else if(IsAPlane(vehicleid) && !pData[playerid][pLicenses][1] && !pTemp[playerid][pOnExam]) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √´√®√∂√•√≠√ß√®√® √≠√† √≥√Ø√∞√†√¢√´√•√≠√®√• √†√¢√®√†-√≤√∞√†√≠√±√Ø√Æ√∞√≤√Æ√¨"), RemovePlayerFromVehicle(playerid);
	else if(IsABoat(vehicleid) && !pData[playerid][pLicenses][2]) return SCM(playerid, COLOR_LIGHTGREY, "√ì √Ç√†√± No √´√®√∂√•√≠√ß√®√® √≠√† √≥√Ø√∞√†√¢√´√•√≠√®√• √¢√Æ√§√≠√ª√¨ √≤√∞√†√≠√±√Ø√Æ√∞√≤√Æ√¨"), RemovePlayerFromVehicle(playerid);
	else if(vehicleid >= bolkals[0] && vehicleid <= bolkals[1] && pData[playerid][pMember] != 4 && (pData[playerid][pMember] != 26 || pData[playerid][pRank] != 6)) return SCM(playerid, COLOR_LIGHTGREY, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √Ø√∞√®√≠√†√§√´√•√¶√®√≤ √°√Æ√´√º√≠√®√∂√• √ã√Æ√±-√ë√†√≠√≤√Æ√±√†"), RemovePlayerFromVehicle(playerid);
	else if(vehicleid >= bolkasf_veh[0] && vehicleid <= bolkasf_veh[1] && pData[playerid][pMember] != 28 && (pData[playerid][pMember] != 26 || pData[playerid][pRank] != 6)) return SCM(playerid, COLOR_LIGHTGREY, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √Ø√∞√®√≠√†√§√´√•√¶√®√≤ √°√Æ√´√º√≠√®√∂√• √ë√†√≠-√î√®√•√∞√∞√Æ"), RemovePlayerFromVehicle(playerid);
	else if(vehicleid >= bolkalv_veh[0] && vehicleid <= bolkalv_veh[1] && pData[playerid][pMember] != 29 && (pData[playerid][pMember] != 26 || pData[playerid][pRank] != 6)) return SCM(playerid, COLOR_LIGHTGREY, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √Ø√∞√®√≠√†√§√´√•√¶√®√≤ √°√Æ√´√º√≠√®√∂√• √ã√†√±-√Ç√•√≠√≤√≥√∞√†√±√†"), RemovePlayerFromVehicle(playerid);
	else if(vehicleid >= faggio_bomj[0] && vehicleid <= faggio_bomj[1] && pData[playerid][allhours] >= 3) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √Ø√Æ√´√º√ß√Æ√¢√†√≤√º√±√ø √°√•√±√Ø√´√†√≤√≠√ª√¨√® √±√™√≥√≤√•√∞√†√¨√®"), RemovePlayerFromVehicle(playerid);
	else if(vehicleid >= massmediacar[0] && vehicleid <= massmediacar[1] && pData[playerid][pMember] != 16) return SCM(playerid, COLOR_LIGHTGREY, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √Ø√∞√®√≠√†√§√´√•√¶√®√≤ √ë√å√à"), RemovePlayerFromVehicle(playerid);
	else if(vehicleid >= fbicar[0] && vehicleid <= fbicar[1] && pData[playerid][pMember] != 2 && (pData[playerid][pMember] != 26 || pData[playerid][pRank] != 7)) return SCM(playerid, COLOR_LIGHTGREY, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √Ø√∞√®√≠√†√§√´√•√¶√®√≤ √î√Å√ê"), RemovePlayerFromVehicle(playerid);
	else if(vehicleid >= jailcars[0] && vehicleid <= jailcars[1] && !IsACop(playerid)) return SCM(playerid, COLOR_LIGHTGREY, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √Ø√∞√®√≠√†√§√´√•√¶√®√≤ √å√Ç√Ñ"), RemovePlayerFromVehicle(playerid);
	else if(vehicleid >= lvpdcar[0] && vehicleid <= lvpdcar[1] && pData[playerid][pMember] != 21 && (pData[playerid][pMember] != 26 || pData[playerid][pRank] != 7)) return SCM(playerid, COLOR_LIGHTGREY, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √Ø√∞√®√≠√†√§√´√•√¶√®√≤ √≥√Ø√∞√†√¢√´√•√≠√®√æ √Ø√Æ√´√®√∂√®√® √ã√†√±-√Ç√•√≠√≤√≥√∞√†√±√†"), RemovePlayerFromVehicle(playerid);
	else if(vehicleid >= sfpdcar[0] && vehicleid <= sfpdcar[1] && pData[playerid][pMember] != 10 && (pData[playerid][pMember] != 26 || pData[playerid][pRank] != 7)) return SCM(playerid, COLOR_LIGHTGREY, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √Ø√∞√®√≠√†√§√´√•√¶√®√≤ √≥√Ø√∞√†√¢√´√•√≠√®√æ √Ø√Æ√´√®√∂√®√® √ë√†√≠-√î√®√•√∞√∞√Æ"), RemovePlayerFromVehicle(playerid);
	else if(vehicleid >= ruscar[0] && vehicleid <= ruscar[1] && pData[playerid][pMember] != 14) return SCM(playerid, COLOR_LIGHTGREY, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √Ø√∞√®√≠√†√§√´√•√¶√®√≤ √∞√≥√±√±√™√Æ√© √¨√†√¥√®√®"), RemovePlayerFromVehicle(playerid);
	else if(vehicleid >= lcncar[0] && vehicleid <= lcncar[1] && pData[playerid][pMember] != 5) return SCM(playerid, COLOR_LIGHTGREY, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √Ø√∞√®√≠√†√§√´√•√¶√®√≤ √≠√•√´√•√£√†√´√º√≠√Æ√© √Æ√∞√£√†√≠√®√ß√†√∂√®√® La Cosa Nostra"), RemovePlayerFromVehicle(playerid);
	else if(vehicleid >= yakcar[0] && vehicleid <= yakcar[1] && pData[playerid][pMember] != 6) return SCM(playerid, COLOR_LIGHTGREY, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √Ø√∞√®√≠√†√§√´√•√¶√®√≤ √≠√•√´√•√£√†√´√º√≠√Æ√© √Æ√∞√£√†√≠√®√ß√†√∂√®√® Yakuza"), RemovePlayerFromVehicle(playerid);
	else if(vehicleid >= vvcveh[0] && vehicleid <= vvcveh[1] && pData[playerid][pMember] != 20 && (pData[playerid][pMember] != 26 || pData[playerid][pRank] != 8)) return SCM(playerid, COLOR_LIGHTGREY, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √Ø√∞√®√≠√†√§√´√•√¶√®√≤ √¢√Æ√•√≠√≠√Æ-√¢√Æ√ß√§√≥√∏√≠√ª√¨ √±√®√´√†√¨"), RemovePlayerFromVehicle(playerid);
	else if(vehicleid >= ministrcar[0] && vehicleid <= ministrcar[1] && pData[playerid][pMember] != 26) return SCM(playerid, COLOR_LIGHTGREY, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √Ø√∞√®√≠√†√§√´√•√¶√®√≤ √Ä√§√¨√®√≠√®√±√≤√∞√†√∂√®√® √è√∞√•√ß√®√§√•√≠√≤√†"), RemovePlayerFromVehicle(playerid);
	else if(vehicleid >= meriyalscar[0] && vehicleid <= meriyalscar[1] && pData[playerid][pMember] != 7 && pData[playerid][pMember] != 26) return SCM(playerid, COLOR_LIGHTGREY, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √Ø√∞√®√≠√†√§√´√•√¶√®√≤ √¨√Ω√∞√®√® √ã√Æ√±-√ë√†√≠√≤√Æ√±√†"), RemovePlayerFromVehicle(playerid);
	else if(vehicleid >= meriyasfcar[0] && vehicleid <= meriyasfcar[1] && pData[playerid][pMember] != 8 && pData[playerid][pMember] != 26) return SCM(playerid, COLOR_LIGHTGREY, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √Ø√∞√®√≠√†√§√´√•√¶√®√≤ √¨√Ω√∞√®√® √ë√†√≠-√î√®√•√∞√∞√Æ"), RemovePlayerFromVehicle(playerid);
	else if(vehicleid >= meriyalvcar[0] && vehicleid <= meriyalvcar[1] && pData[playerid][pMember] != 9 && pData[playerid][pMember] != 26) return SCM(playerid, COLOR_LIGHTGREY, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √Ø√∞√®√≠√†√§√´√•√¶√®√≤ √¨√Ω√∞√®√® √ã√†√±-√Ç√•√≠√≤√≥√∞√†√±√†"), RemovePlayerFromVehicle(playerid);
	else if(vehicleid == matsfuraballas && pData[playerid][pMember] != 12) return SCM(playerid, COLOR_LIGHTGREY, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √Ø√∞√®√≠√†√§√´√•√¶√®√≤ √≠√•√´√•√£√†√´√º√≠√Æ√© √Æ√∞√£√†√≠√®√ß√†√∂√®√® The Ballas"), RemovePlayerFromVehicle(playerid);
	else if(((vehicleid >= sapdpatrul[0] && vehicleid <= sapdpatrul[1]) || (vehicleid >= sapdcar[0] && vehicleid <= sapdcar[1])) && pData[playerid][pMember] != 1 && (pData[playerid][pMember] != 26 || pData[playerid][pRank] != 7)) return SCM(playerid, COLOR_LIGHTGREY, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √Ø√∞√®√≠√†√§√´√•√¶√®√≤ √≥√Ø√∞√†√¢√´√•√≠√®√æ √Ø√Æ√´√®√∂√®√•√© √ã√Æ√±-√ë√†√≠√≤√Æ√±√†"), RemovePlayerFromVehicle(playerid);
	else if(vehicleid >= mehanik[0] && vehicleid <= mehanik[1] && pData[playerid][pJob] != 1) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √∞√†√°√Æ√≤√†√•√≤√• √¨√•√µ√†√≠√®√™√Æ√¨"), RemovePlayerFromVehicle(playerid);
	else if(vehicleid == matsfuragrove && pData[playerid][pMember] != 15) return SCM(playerid, COLOR_LIGHTGREY, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √Ø√∞√®√≠√†√§√´√•√¶√®√≤ √≠√•√´√•√£√†√´√º√≠√Æ√© √Æ√∞√£√†√≠√®√ß√†√∂√®√® Grove Street"), RemovePlayerFromVehicle(playerid);
	else if(vehicleid == matsfuraactek && pData[playerid][pMember] != 17) return SCM(playerid, COLOR_LIGHTGREY, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √Ø√∞√®√≠√†√§√´√•√¶√®√≤ √≠√•√´√•√£√†√´√º√≠√Æ√© √Æ√∞√£√†√≠√®√ß√†√∂√®√® Varrios Los Aztecas"), RemovePlayerFromVehicle(playerid);
	else if(vehicleid == matsfuravagos && pData[playerid][pMember] != 13) return SCM(playerid, COLOR_LIGHTGREY, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √Ø√∞√®√≠√†√§√´√•√¶√®√≤ √≠√•√´√•√£√†√´√º√≠√Æ√© √Æ√∞√£√†√≠√®√ß√†√∂√®√® Los Santos Vagos"), RemovePlayerFromVehicle(playerid);
	else if(vehicleid == matsfurarifa && pData[playerid][pMember] != 18) return SCM(playerid, COLOR_LIGHTGREY, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √Ø√∞√®√≠√†√§√´√•√¶√®√≤ √≠√•√´√•√£√†√´√º√≠√Æ√© √Æ√∞√£√†√≠√®√ß√†√∂√®√® The Rifa"), RemovePlayerFromVehicle(playerid);
	else if(vehicleid >= ballascar[0] && vehicleid <= ballascar[1] && pData[playerid][pMember] != 12) return SCM(playerid, COLOR_LIGHTGREY, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √Ø√∞√®√≠√†√§√´√•√¶√®√≤ √≠√•√´√•√£√†√´√º√≠√Æ√© √Æ√∞√£√†√≠√®√ß√†√∂√®√® The Ballas"), RemovePlayerFromVehicle(playerid);
	else if(vehicleid >= grovecar[0] && vehicleid <= grovecar[1] && pData[playerid][pMember] != 15) return SCM(playerid, COLOR_LIGHTGREY, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √Ø√∞√®√≠√†√§√´√•√¶√®√≤ √≠√•√´√•√£√†√´√º√≠√Æ√© √Æ√∞√£√†√≠√®√ß√†√∂√®√® Grove Street"), RemovePlayerFromVehicle(playerid);
	else if(vehicleid >= coronoscar[0] && vehicleid <= coronoscar[1] && pData[playerid][pMember] != 17) return SCM(playerid, COLOR_LIGHTGREY, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √Ø√∞√®√≠√†√§√´√•√¶√®√≤ √≠√•√´√•√£√†√´√º√≠√Æ√© √Æ√∞√£√†√≠√®√ß√†√∂√®√® Varrios Los Aztecas"), RemovePlayerFromVehicle(playerid);
	else if(vehicleid >= vagoscar[0] && vehicleid <= vagoscar[1] && pData[playerid][pMember] != 13) return SCM(playerid, COLOR_LIGHTGREY, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √Ø√∞√®√≠√†√§√´√•√¶√®√≤ √≠√•√´√•√£√†√´√º√≠√Æ√© √Æ√∞√£√†√≠√®√ß√†√∂√®√® Los Santos Vagos"), RemovePlayerFromVehicle(playerid);
	else if(vehicleid >= rifacar[0] && vehicleid <= rifacar[1] && pData[playerid][pMember] != 18) return SCM(playerid, COLOR_LIGHTGREY, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √Ø√∞√®√≠√†√§√´√•√¶√®√≤ √≠√•√´√•√£√†√´√º√≠√Æ√© √Æ√∞√£√†√≠√®√ß√†√∂√®√® The Rifa"), RemovePlayerFromVehicle(playerid);
	else if(vehicleid >= vmfcar[0] && vehicleid <= vmfcar[1] && pData[playerid][pMember] != 27 && (pData[playerid][pMember] != 26 || pData[playerid][pRank] != 8)) return SCM(playerid, COLOR_LIGHTGREY, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √Ø√∞√®√≠√†√§√´√•√¶√®√≤ √¢√Æ√•√≠√≠√Æ-√¨√Æ√∞√±√™√Æ√¨√≥ √¥√´√Æ√≤√≥"), RemovePlayerFromVehicle(playerid);
	else if(vehicleid >= armcar[0] && vehicleid <= armcar[1] && pData[playerid][pMember] != 19 && (pData[playerid][pMember] != 26 || pData[playerid][pRank] != 8)) return SCM(playerid, COLOR_LIGHTGREY, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √Ø√∞√®√≠√†√§√´√•√¶√®√≤ c√≥√µ√Æ√Ø√≥√≤√≠√ª√¨ √¢√Æ√©√±√™√†√¨"), RemovePlayerFromVehicle(playerid);
	else if(vehicleid >= liccar[0] && vehicleid <= liccar[1] && pData[playerid][pMember] != 11 && !pTemp[playerid][pOnExam]) return SCM(playerid, COLOR_LIGHTGREY, "√í√∞√†√≠√±√Ø√Æ√∞√≤ √Ø√∞√®√≠√†√§√´√•√¶√®√≤ √†√¢√≤√Æ√∏√™√Æ√´√•"), RemovePlayerFromVehicle(playerid);
	if(vehicleid == elegy_car || 
		vehicleid == infernus_car || 
		vehicleid == bullet_car || 
		vehicleid == turismo_car || 
		vehicleid == perennial_car || 
		vehicleid == bulletsecond_car || 
		vehicleid == infsecond_car || 
		vehicleid == zr_car ||
		vehicleid == sandcar1 || 
		vehicleid == sandcar2) {
		TogglePlayerControllable(playerid, 0);
		SPD(playerid, 1892, DIALOG_STYLE_MSGBOX, ""CPALEGREEN"√è√Æ√™√≥√Ø√™√† √†√¢√≤√Æ√¨√Æ√°√®√´√ø", ""CWHITE"Quieres √Ø√∞√®√Æ√°√∞√•√±√≤√® √Ω√≤√Æ√≤ √†√¢√≤√Æ√¨√Æ√°√®√´√º?\n√ë √®√≠√¥√Æ√∞√¨√†√∂√®√•√© √Æ √≠¬∏√¨ √Ç√ª √¨√Æ√¶√•√≤√• √Æ√ß√≠√†√™√Æ√¨√®√≤√º√±√ø √± √Ø√Æ√¨√Æ√π√º√æ {40bf80}/vinfo", "S√≠", "No");
	}
	if(vehicleid >= prodworker[0] && vehicleid <= prodworker[1] && pData[playerid][pJob] == 2) {
		if(pData[playerid][pJob] != 2) {
			RemovePlayerFromVehicle(playerid);
			return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √∞√†√°√Æ√≤√†√•√≤√• √∞√†√ß√¢√Æ√ß√∑√®√™√Æ√¨ √Ø√∞√Æ√§√≥√™√≤√Æ√¢");
		}
		DeletePVar(playerid, "time_workerexit");
		SCM(playerid, COLOR_LITEBLUE, "√Ñ√´√ø √≠√†√∑√†√´√† √®√´√® √ß√†√¢√•√∞√∏√•√≠√®√ø √∞√†√°√Æ√∑√•√£√Æ √§√≠√ø Usar√≤√• {996633}√™√´√†√¢√®√∏√≥ 2");
	}
	if(vehicleid >= veh_taxi[0] && vehicleid <= veh_taxi[1]) {
		DeletePVar(playerid, "time_taxiexit");
		if(pData[playerid][pJob] != 6) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √≤√†√™√±√®√±√≤"), RemovePlayerFromVehicle(playerid);
		if(arenda_taxi[playerid] == true && arenda_taxi_id[playerid] == vehicleid) SCM(playerid, COLOR_LITEBLUE, "√Ñ√´√ø √≠√†√∑√†√´√† √®√´√® √ß√†√¢√•√∞√∏√•√≠√®√ø √∞√†√°√Æ√≤√ª √≤√†√™√±√®√±√≤√† Usar√≤√• "CCYAN"√™√´√†√¢√®√∏√≥ 2");
		else if(vehicleid == last_vehiclejob[playerid]) SCM(playerid, COLOR_LITEBLUE, "√Ñ√´√ø √≠√†√∑√†√´√† √®√´√® √ß√†√¢√•√∞√∏√•√≠√®√ø √∞√†√°√Æ√≤√ª √≤√†√™√±√®√±√≤√† Usar√≤√• "CCYAN"√™√´√†√¢√®√∏√≥ 2");
		else TogglePlayerControllable(playerid, 0), SPD(playerid, 778, DIALOG_STYLE_MSGBOX, ""CLITEBLUE"√Ñ√®√±√Ø√•√≤√∑√•√∞", ""CWHITE"Quieres √ß√†√™√´√æ√∑√®√≤√º √§√Æ√£√Æ√¢√Æ√∞ √†√∞√•√≠√§√ª √± √≤√†√™√±√Æ√Ø√†√∞√™√Æ√¨?\n√ë√≤√Æ√®√¨√Æ√±√≤√º √†√∞√•√≠√§√ª: {00cc00}400$", "S√≠", "No");
	}
	if(vehicleid >= veh_bus[0] && vehicleid <= veh_bus[1]) {
		DeletePVar(playerid, "time_busexit");
		if(pData[playerid][pJob] != 5) return SCM(playerid, COLOR_GREY, "√Ç√ª √≠√• √¢√Æ√§√®√≤√•√´√º √†√¢√≤√Æ√°√≥√±√†"), RemovePlayerFromVehicle(playerid);
		if(arenda_bus[playerid] == true && arenda_bus_id[playerid] == vehicleid) SCM(playerid, COLOR_LITEBLUE, "√Ñ√´√ø √≠√†√∑√†√´√† √®√´√® √ß√†√¢√•√∞√∏√•√≠√®√ø √∞√†√°√Æ√≤√ª √¢√Æ√§√®√≤√•√´√ø √†√¢√≤√Æ√°√≥√±√† Usar√≤√• "CCYAN"√™√´√†√¢√®√∏√≥ 2");
		else if(vehicleid == last_vehiclejob[playerid]) SCM(playerid, COLOR_LITEBLUE, "√Ñ√´√ø √≠√†√∑√†√´√† √®√´√® √ß√†√¢√•√∞√∏√•√≠√®√ø √∞√†√°√Æ√≤√ª √¢√Æ√§√®√≤√•√´√ø √†√¢√≤√Æ√°√≥√±√† Usar√≤√• "CCYAN"√™√´√†√¢√®√∏√≥ 2");
		else TogglePlayerControllable(playerid, 0), SPD(playerid, 779, DIALOG_STYLE_MSGBOX, ""CLITEBLUE"√Ñ√®√±√Ø√•√≤√∑√•√∞", ""CWHITE"Quieres √†√∞√•√≠√§√Æ√¢√†√≤√º √Ω√≤√Æ√≤ √†√¢√≤√Æ√°√≥√±?\n√ë√≤√Æ√®√¨√Æ√±√≤√º √†√∞√•√≠√§√ª: {00cc00}150$", "S√≠", "No");
	}
	if(GetPVarInt(playerid, "unik_not_send")) 
		DeletePVar(playerid, "unik_not_send");
	
	new model = GetVehicleModel(vehicleid);
	if(model == 481 || model == 509 || model == 510) {
		new engine, lights, alarm, doors, bonnet, boot, objective;
		GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
		return SetVehicleParamsEx(vehicleid, 1, lights, alarm, doors, bonnet, boot, objective);
	}
	SetPVarInt(playerid, "ShowSpeed", true);
	if(pData[playerid][p_setting][5] == 1) {
		SetTimerEx("UpdateSpeedometr", 200, 0, "i", playerid);
		CreateNewSpeedTextDraws(playerid);
		for(new i = 0; i < 14; i ++) {
			if(i < 7) PlayerTextDrawShow(playerid, new_player_speedTD[playerid][i]);
			TextDrawShowForPlayer(playerid, new_global_speedTD[i]);
		}
		PlayerTextDrawSetString(playerid, new_player_speedTD[playerid][0], VehicleNames[model - 400]);
	}
	else if(pData[playerid][p_setting][5] == 2) {
		SetTimerEx("UpdateSpeedometr", 200, 0, "i", playerid);
		for(new i = 0; i < 7; i ++) {
			if(i < 6) PlayerTextDrawShow(playerid, speed_playertd[playerid][i]);
			TextDrawShowForPlayer(playerid, speed_global[i]);
		}
		if(pData[playerid][pHouse] != -1) {
			if(pData[playerid][pCar][0] == 0 && pData[playerid][pCar][1] == 0 && pData[playerid][pCar][2] == 0) return 1;
			if(alarm_vehicle[vehicleid] == 60605) PlayerTextDrawColor(playerid, al_indichome[playerid], 0xFFFFFFFF);
			else PlayerTextDrawColor(playerid, al_indichome[playerid], 0xAA80FFFF);
			if(house_carid[playerid][0] && vehicleid == house_carid[playerid][0]) PlayerTextDrawShow(playerid, al_indichome[playerid]);
			if(house_carid[playerid][1] && vehicleid == house_carid[playerid][1]) PlayerTextDrawShow(playerid, al_indichome[playerid]);
			if(house_carid[playerid][2] && vehicleid == house_carid[playerid][2]) PlayerTextDrawShow(playerid, al_indichome[playerid]);
		}
	}
	else SetTimerEx("UpdateSpeedometr", 200, 0, "i", playerid);
	return 1;
}
stock CreateNewSpeedTextDraws(playerid) {
	new_player_speedTD[playerid][0] = CreatePlayerTextDraw(playerid, 566.036987, 358.583374, " "); // car model
	PlayerTextDrawLetterSize(playerid, new_player_speedTD[playerid][0], 0.146393, 0.695833);
	PlayerTextDrawAlignment(playerid, new_player_speedTD[playerid][0], 2);
	PlayerTextDrawColor(playerid, new_player_speedTD[playerid][0], -1);
	PlayerTextDrawSetShadow(playerid, new_player_speedTD[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, new_player_speedTD[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid, new_player_speedTD[playerid][0], 51);
	PlayerTextDrawFont(playerid, new_player_speedTD[playerid][0], 2);
	PlayerTextDrawSetProportional(playerid, new_player_speedTD[playerid][0], 1);

	new_player_speedTD[playerid][1] = CreatePlayerTextDraw(playerid, 566.442565, 369.833465, " "); // km h
	PlayerTextDrawLetterSize(playerid, new_player_speedTD[playerid][1], 0.246193, 1.599998);
	PlayerTextDrawAlignment(playerid, new_player_speedTD[playerid][1], 2);
	PlayerTextDrawColor(playerid, new_player_speedTD[playerid][1], -1);
	PlayerTextDrawSetShadow(playerid, new_player_speedTD[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, new_player_speedTD[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid, new_player_speedTD[playerid][1], 51);
	PlayerTextDrawFont(playerid, new_player_speedTD[playerid][1], 2);
	PlayerTextDrawSetProportional(playerid, new_player_speedTD[playerid][1], 1);

	new_player_speedTD[playerid][2] = CreatePlayerTextDraw(playerid, 530.834655, 379.166595, " "); // car hp
	PlayerTextDrawLetterSize(playerid, new_player_speedTD[playerid][2], 0.198872, 0.981666);
	PlayerTextDrawAlignment(playerid, new_player_speedTD[playerid][2], 3);
	PlayerTextDrawColor(playerid, new_player_speedTD[playerid][2], -1);
	PlayerTextDrawSetShadow(playerid, new_player_speedTD[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, new_player_speedTD[playerid][2], 0);
	PlayerTextDrawBackgroundColor(playerid, new_player_speedTD[playerid][2], 51);
	PlayerTextDrawFont(playerid, new_player_speedTD[playerid][2], 2);
	PlayerTextDrawSetProportional(playerid, new_player_speedTD[playerid][2], 1);

	new_player_speedTD[playerid][3] = CreatePlayerTextDraw(playerid, 614.888916, 378.666748, " "); // fuel
	PlayerTextDrawLetterSize(playerid, new_player_speedTD[playerid][3], 0.198871, 0.981666);
	PlayerTextDrawAlignment(playerid, new_player_speedTD[playerid][3], 3);
	PlayerTextDrawColor(playerid, new_player_speedTD[playerid][3], -1);
	PlayerTextDrawSetShadow(playerid, new_player_speedTD[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, new_player_speedTD[playerid][3], 0);
	PlayerTextDrawBackgroundColor(playerid, new_player_speedTD[playerid][3], 51);
	PlayerTextDrawFont(playerid, new_player_speedTD[playerid][3], 2);
	PlayerTextDrawSetProportional(playerid, new_player_speedTD[playerid][3], 1);

	new_player_speedTD[playerid][4] = CreatePlayerTextDraw(playerid, 533.240234, 406.416625, "ENGINE");
	PlayerTextDrawLetterSize(playerid, new_player_speedTD[playerid][4], 0.184816, 0.800833);
	PlayerTextDrawAlignment(playerid, new_player_speedTD[playerid][4], 1);
	PlayerTextDrawColor(playerid, new_player_speedTD[playerid][4], 16711935);
	PlayerTextDrawSetShadow(playerid, new_player_speedTD[playerid][4], 0);
	PlayerTextDrawSetOutline(playerid, new_player_speedTD[playerid][4], 0);
	PlayerTextDrawBackgroundColor(playerid, new_player_speedTD[playerid][4], 51);
	PlayerTextDrawFont(playerid, new_player_speedTD[playerid][4], 1);
	PlayerTextDrawSetProportional(playerid, new_player_speedTD[playerid][4], 1);

	new_player_speedTD[playerid][5] = CreatePlayerTextDraw(playerid, 559.945922, 406.416656, "LOCK");
	PlayerTextDrawLetterSize(playerid, new_player_speedTD[playerid][5], 0.184816, 0.800833);
	PlayerTextDrawAlignment(playerid, new_player_speedTD[playerid][5], 1);
	PlayerTextDrawColor(playerid, new_player_speedTD[playerid][5], -1);
	PlayerTextDrawSetShadow(playerid, new_player_speedTD[playerid][5], 0);
	PlayerTextDrawSetOutline(playerid, new_player_speedTD[playerid][5], 0);
	PlayerTextDrawBackgroundColor(playerid, new_player_speedTD[playerid][5], 51);
	PlayerTextDrawFont(playerid, new_player_speedTD[playerid][5], 1);
	PlayerTextDrawSetProportional(playerid, new_player_speedTD[playerid][5], 1);

	new_player_speedTD[playerid][6] = CreatePlayerTextDraw(playerid, 581.092468, 406.249938, "LIGHT");
	PlayerTextDrawLetterSize(playerid, new_player_speedTD[playerid][6], 0.184816, 0.800833);
	PlayerTextDrawAlignment(playerid, new_player_speedTD[playerid][6], 1);
	PlayerTextDrawColor(playerid, new_player_speedTD[playerid][6], -1);
	PlayerTextDrawSetShadow(playerid, new_player_speedTD[playerid][6], 0);
	PlayerTextDrawSetOutline(playerid, new_player_speedTD[playerid][6], 0);
	PlayerTextDrawBackgroundColor(playerid, new_player_speedTD[playerid][6], 51);
	PlayerTextDrawFont(playerid, new_player_speedTD[playerid][6], 1);
	PlayerTextDrawSetProportional(playerid, new_player_speedTD[playerid][6], 1);
}

CB: animfactory(playerid)
{
 	if(GetPVarInt(playerid, "mychanse") == 0)
	{
		SetPVarInt(playerid, "mychanse", 5);
	}
	if(GetPVarInt(playerid, "myfail") == 0)
	{
		ApplyAnimation(playerid, "CARRY", "crry_prtial", 3.5, 0, 0, 0, 0, 0, 1);
    	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
    	GameTextForPlayer(playerid, "~g~SUCCESS", 1500, 1);
		RemovePlayerAttachedObject(playerid, 5);
		RemovePlayerAttachedObject(playerid, 6);
		DeletePVar(playerid, "factoryanim");
		SetPlayerChatBubble(playerid, "{6CFF40}+ 1 √Ø√∞√Æ√§√≥√™√≤", -1, 15.0, 3000);
    	SetPlayerAttachedObject(playerid, 4, 1279, 1, -0.048687, 0.487521, -0.025872, 109.400756, 84.624725, -121.676124, 1.025472, 1.000000, 1.000000);
    	if(random(6) == 4)
		{
		    SetPVarInt(playerid, "mychanse", GetPVarInt(playerid, "mychanse") + 1);
		    new ms[100];
		    format(ms, sizeof(ms), "√ê√†√°√Æ√∑√®√© √≠√†√¢√ª√™ √≥√¢√•√´√®√∑√•√≠. √í√•√Ø√•√∞√º √∏√†√≠√± √±√Æ√ßS√≠√≤√º √°√∞√†√™√Æ√¢√†√≠√≠√ª√© √Ø√∞√Æ√§√≥√™√≤ {ffaa00}1 √®√ß %d", GetPVarInt(playerid, "mychanse"));
			PlayerPlaySound(playerid, 17000, 0.0, 0.0, 0.0);
		    SCM(playerid, COLOR_MAIN, ms);
		}
    	if(IsValidDynamicObject(factoryobject[playerid]))
	    {
	        DestroyDynamicObject(factoryobject[playerid]);
	    }
	 	SetPVarInt(playerid, "product", 1);
	}
	else if(GetPVarInt(playerid, "myfail") == 1)
	{
	    GameTextForPlayer(playerid, "~r~FAIL", 1500, 1);
		SetPVarInt(playerid, "failtimer", 1);
	    SetTimerEx("fail", 1500, false, "i", playerid);
	    ApplyAnimation(playerid, "OTB", "WTCHRACE_LOSE", 4.1, 0, 0, 0, 0, 0);
	    RemovePlayerAttachedObject(playerid, 5);
		RemovePlayerAttachedObject(playerid, 6);
		DeletePVar(playerid, "factoryanim");
		SetPlayerChatBubble(playerid, "{FF0505}√Å√∞√†√™", -1, 15.0, 3000);
		table1[playerid] = CreateDynamicCP(2558.5430,-1295.8499,1044.1250, 0.6, 10, 2, playerid, 1.5);
		table2[playerid] = CreateDynamicCP(2556.2808,-1295.8499,1044.1250, 0.6, 10, 2, playerid, 1.5);
		table3[playerid] = CreateDynamicCP(2553.8875,-1295.8497,1044.1250, 0.6, 10, 2, playerid, 1.5);
		table4[playerid] = CreateDynamicCP(2544.4441,-1295.8497,1044.1250, 0.6, 10, 2, playerid, 1.5);
		table5[playerid] = CreateDynamicCP(2542.0540,-1295.8502,1044.1250, 0.6, 10, 2, playerid, 1.5);
		table6[playerid] = CreateDynamicCP(2542.0830,-1291.0057,1044.1250, 0.6, 10, 2, playerid, 1.5);
		table7[playerid] = CreateDynamicCP(2544.2891,-1290.8970,1044.1250, 0.6, 10, 2, playerid, 1.5);
		table8[playerid] = CreateDynamicCP(2553.6885,-1291.0057,1044.1250, 0.6, 10, 2, playerid, 1.5);
		table9[playerid] = CreateDynamicCP(2556.1968,-1291.0057,1044.1250, 0.6, 10, 2, playerid, 1.5);
		table10[playerid] = CreateDynamicCP(2558.4468,-1291.0046,1044.1250, 0.6, 10, 2, playerid, 1.5);
		if(IsValidDynamicObject(factoryobject[playerid]))
	    {
	        DestroyDynamicObject(factoryobject[playerid]);
	    }
	    SetPVarInt(playerid, "factoryfail", GetPVarInt(playerid, "factoryfail") + (10 + random(10)));
		SetPVarInt(playerid, "failquantity", GetPVarInt(playerid, "failquantity") + 1);
	}
	return 1;
}

CB: respawn_car(car) return SetVehicleToRespawn(car);
CB: patr_arm_sv(playerid) {
	if(!IsPlayerInDynamicCP(playerid, armysv_patr_check)) return 1;
	if(!pData[playerid][p_premium] && pData[playerid][pPatr] >= 300) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √≥√≠√•√±√≤√® √± √±√Æ√°√Æ√© √°√Æ√´√•√• {FFCD00}300 √Ø√†√≤√∞√Æ√≠√Æ√¢");
	if(pData[playerid][p_premium] && pData[playerid][pPatr] >= 600) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √≥√≠√•√±√≤√® √± √±√Æ√°√Æ√© √°√Æ√´√•√• {FFCD00}600 √Ø√†√≤√∞√Æ√≠√Æ√¢");
	if(svstore_patr < 5) return SCM(playerid, COLOR_GREY, "√ç√† √±√™√´√†√§√• √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √Ø√†√≤√∞√Æ√≠√Æ√¢");
	new patr = random(5)+1, m_s[55], query_s[90], str_patr[50];

	svstore_patr -= patr;
	mysql_format(mysql_Handle, query_s, 90, "UPDATE `otherfuncs` SET `svstore_patr` = `svstore_patr` - %d", patr);
	mysql_tquery(mysql_Handle, query_s);
	format(str_patr, 50, "√è√†√≤√∞√Æ√≠√ª √≠√† √±√™√´√†√§√•:\n%i / 100000 √∏√≤.", svstore_patr);
	UpdateDynamic3DTextLabelText(text_sv_storpt, 0xFFCC00FF, str_patr);
	pData[playerid][pPatr] += patr;
	format(m_s, 55, "~g~+%d PATR.~n~~b~TOTAL: %d PATR.", patr, pData[playerid][pPatr]);
	UpdatePlayerData(playerid, "pPatr", pData[playerid][pPatr]);
	GameTextForPlayer(playerid, m_s, 2000, 6);
	KillTimer(patrtimer[playerid]);
	patrtimer[playerid]=SetTimerEx("patr_arm_sv", 1200, 0, "d", playerid);
	return 1;
}
CB: patr_arm_vvc(playerid) {
	if(!IsPlayerInDynamicCP(playerid, armyvvc_patr_check)) return 1;
	if(!pData[playerid][p_premium] && pData[playerid][pPatr] >= 300) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √≥√≠√•√±√≤√® √± √±√Æ√°√Æ√© √°√Æ√´√•√• {FFCD00}300 √Ø√†√≤√∞√Æ√≠√Æ√¢");
	if(pData[playerid][p_premium] && pData[playerid][pPatr] >= 600) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √≥√≠√•√±√≤√® √± √±√Æ√°√Æ√© √°√Æ√´√•√• {FFCD00}600 √Ø√†√≤√∞√Æ√≠√Æ√¢");
	if(vvcstore_patr < 5) return SCM(playerid, COLOR_GREY, "√ç√† √±√™√´√†√§√• √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √Ø√†√≤√∞√Æ√≠√Æ√¢");
	new patr = random(5)+1, m_s[55], query_s[90], str_patr[50];

	vvcstore_patr -= patr;
	mysql_format(mysql_Handle, query_s, 90, "UPDATE `otherfuncs` SET `vvcstore_patr` = `vvcstore_patr` - %d", patr);
	mysql_tquery(mysql_Handle, query_s);
	format(str_patr, 50, "√è√†√≤√∞√Æ√≠√ª √≠√† √±√™√´√†√§√•:\n%i / 100000 √∏√≤.", vvcstore_patr);
	UpdateDynamic3DTextLabelText(text_vvc_storpt, 0xFFCC00FF, str_patr);
	pData[playerid][pPatr] += patr;
	format(m_s, 55, "~g~+%d PATR.~n~~b~TOTAL: %d PATR.", patr, pData[playerid][pPatr]);
	UpdatePlayerData(playerid, "pPatr", pData[playerid][pPatr]);
	GameTextForPlayer(playerid, m_s, 2000, 6);
	KillTimer(patrtimer[playerid]);
	patrtimer[playerid]=SetTimerEx("patr_arm_vvc", 1200, 0, "d", playerid);
	return 1;
}
CB: patr_arm_vmf(playerid) {
	if(!IsPlayerInDynamicCP(playerid, armyvmf_patr_check)) return 1;
	if(!pData[playerid][p_premium] && pData[playerid][pPatr] >= 300) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √≥√≠√•√±√≤√® √± √±√Æ√°√Æ√© √°√Æ√´√•√• {FFCD00}300 √Ø√†√≤√∞√Æ√≠√Æ√¢");
	if(pData[playerid][p_premium] && pData[playerid][pPatr] >= 600) return SCM(playerid, COLOR_LIGHTGREY, "√Ç√ª √≠√• √¨√Æ√¶√•√≤√• √≥√≠√•√±√≤√® √± √±√Æ√°√Æ√© √°√Æ√´√•√• {FFCD00}600 √Ø√†√≤√∞√Æ√≠√Æ√¢");
	if(vmfstore_patr < 5) return SCM(playerid, COLOR_GREY, "√ç√† √±√™√´√†√§√• √≠√•√§√Æ√±√≤√†√≤√Æ√∑√≠√Æ √Ø√†√≤√∞√Æ√≠√Æ√¢");
	new patr = random(5)+1, m_s[55], query_s[90], str_patr[50];

	vmfstore_patr -= patr;
	mysql_format(mysql_Handle, query_s, 90, "UPDATE `otherfuncs` SET `vmfstore_patr` = `vmfstore_patr` - %d", patr);
	mysql_tquery(mysql_Handle, query_s);
	format(str_patr, 50, "√è√†√≤√∞√Æ√≠√ª √≠√† √±√™√´√†√§√•:\n%i / 100000 √∏√≤.", vmfstore_patr);
	UpdateDynamic3DTextLabelText(text_vmf_storpt, 0xFFCC00FF, str_patr);
	pData[playerid][pPatr] += patr;
	format(m_s, 55, "~g~+%d PATR.~n~~b~TOTAL: %d PATR.", patr, pData[playerid][pPatr]);
	UpdatePlayerData(playerid, "pPatr", pData[playerid][pPatr]);
	GameTextForPlayer(playerid, m_s, 2000, 6);
	KillTimer(patrtimer[playerid]);
	patrtimer[playerid]=SetTimerEx("patr_arm_vmf", 1200, 0, "d", playerid);
	return 1;
}
CB: __@CheckDonate(playerid) {
	new rows, rb_donate;
	cache_get_row_count(rows);
	cache_get_value_name_int(0, "pRubDonate", rb_donate);
	if(rows && rb_donate <= 0) return SCM(playerid, COLOR_LIGHTGREY, "√ç√Æ√¢√ª√µ √Ø√Æ√Ø√Æ√´√≠√•√≠√®√© √≠√• √≠√†√©√§√•√≠√Æ");
	string[0] = EOS;
	format(string, 600, ""CWHITE"√Ç√ª √Ø√Æ√Ø√Æ√´√≠√®√´√® √±√∑¬∏√≤ √≠√† {6666ff}%d √∞√≥√°.\n\
		"CWHITE"C √≥√∑¬∏√≤√Æ√¨ √†√™√∂√®√® X%d √°√≥√§√•√≤ √ß√†√∑√®√±√´√•√≠√Æ {6666ff}%d √∞√≥√°.", 
	rb_donate, multiply_don, rb_donate * multiply_don);
	return SPD(playerid, 7216, DIALOG_STYLE_MSGBOX, "{cc9900}√Ñ√Æ√≠√†√≤", string, "√á√†√∑√®√±√´√®√≤√º", "Cerrar");
}

CB: check_payments(playerid)
{
	new rows;
	cache_get_row_count(rows);
	if(rows)
	{
		new rb_donate;
		cache_get_value_name_int(0, "pRubDonate", rb_donate);
		if(rb_donate <= 0) return SCM(playerid, COLOR_LIGHTGREY, "√ç√Æ√¢√ª√µ √Ø√Æ√Ø√Æ√´√≠√•√≠√®√© √≠√• √≠√†√©√§√•√≠√Æ");

		UpdatePlayerData(playerid, "pRubDonate", 0);
		rb_donate = rb_donate * multiply_don;

		pData[playerid][pRub] += rb_donate;
		UpdatePlayerData(playerid, "pRub", pData[playerid][pRub]);
		pData[playerid][pRubDonateTotal] += rb_donate;
		UpdatePlayerData(playerid, "pRubDonateTotal", pData[playerid][pRubDonateTotal]);

		PlayerPlaySound(playerid, 17001, 0.0, 0.0, 0.0);
		new str[144];
		format(str, 144, ""CWHITE"√ë√≥√¨√¨√† "CMAIN"%d √∞√≥√°. "CWHITE"√°√ª√´√† √≥√±√Ø√•√∏√≠√Æ √ß√†√∑√®√±√´√•√≠√† √≠√† √Ç√†√∏ √†√™√™√†√≥√≠√≤\nUsaste {FFCD00}/menu > Magazin", rb_donate);
		SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{009900}√ë√∑¬∏√≤ √Ø√Æ√Ø√Æ√´√≠√•√≠", str, "Cerrar", "");
	}
	return 1;	
}
stock check_new_level(playerid) {

	new cmax = get_max_exp(pData[playerid][pLevel]);

	if(pData[playerid][pExp] >= cmax)
	{
		pData[playerid][pExp] = pData[playerid][pExp] - cmax;

		new newlevel = pData[playerid][pLevel] + 1;

		pData[playerid][pLevel] = newlevel;
		UpdatePlayerData(playerid, "pLevel", newlevel);
		SetPlayerScore(playerid, newlevel);

		SCMF(playerid, COLOR_LITEBLUE, "√è√Æ√ß√§√∞√†√¢√´√ø√•√¨! √Ç√†√∏ √≥√∞√Æ√¢√•√≠√º √Ø√Æ√¢√ª√∏√•√≠ √§√Æ {0066CC}%d", newlevel);

		switch(newlevel)
		{
			case 2:
			{
				SCM(playerid, COLOR_MAIN, "√í√•√Ø√•√∞√º √Ç√†√¨ √§√Æ√±√≤√≥√Ø√≠√† √Ø√∞√®√°√ª√´√º√≠√†√ø √® √®√≠√≤√•√∞√•√±√≠√†√ø √∞√†√°√Æ√≤√† {FFCD00}√¢√Æ√§√®√≤√•√´√ø √†√¢√≤√Æ√°√≥√±√†");
				SCM(playerid, COLOR_MAIN, "√Ç√ª √±√¨√Æ√¶√•√≤√• √≥√±√≤√∞√Æ√®√≤√º√±√ø √≠√† √≠√•¬∏ √¢ √´√æ√°√Æ√© √¨√Ω√∞√®√® √∏√≤√†√≤√†");

				if(pData[playerid][pPromoUsed])
				{
					Hook_GivePlayerMoney(playerid, 100000);
					pData[playerid][pSkill][2] = 100;
					UpdatePlayerData(playerid, "DEAGLE", 100);
					SetPlayerSkills(playerid);

					SCM(playerid, COLOR_YELLOW, "√Ç√ª √Ø√Æ√´√≥√∑√®√´√® {00DD00}100000$ "CYELLOW"√® √≠√†√¢√ª√™ √¢√´√†√§√•√≠√®√ø {CC9955}Deagle "CYELLOW"√ß√† √¢√¢√Æ√§ √Ø√∞√Æ√¨√Æ√™√ÆS√≠");
				}
			}
			case 3:
			{
				SCM(playerid, COLOR_MAIN, "√í√•√Ø√•√∞√º √Ç√†√¨ √§√Æ√±√≤√≥√Ø√≠√† √®√≠√≤√•√∞√•√±√≠√†√ø √∞√†√°√Æ√≤√† {FFCD00}√≤√†√™√±√®√±√≤√†");
				SCM(playerid, COLOR_MAIN, "√Ç√ª √±√¨√Æ√¶√•√≤√• √≥√±√≤√∞√Æ√®√≤√º√±√ø √≠√† √≠√•¬∏ √¢ √´√æ√°√Æ√© √¨√Ω√∞√®√® √∏√≤√†√≤√†");
			}
			case 4:
			{
				if(strlen(pData[playerid][pRefer]) > 0)
				{
					mysql_format(mysql_Handle, string, 164, "SELECT `Name`, `pCash` FROM `accounts` WHERE `id` = %d", pData[playerid][pReferID]);
					mysql_tquery(mysql_Handle, string, "check_regist", "d", playerid);
				}

				if(pData[playerid][pPromoUsed])
				{
					Hook_GivePlayerMoney(playerid, 300000);

					SCM(playerid, COLOR_YELLOW, "√Ç√ª √Ø√Æ√´√≥√∑√®√´√® √•√π¬∏ {00DD00}300000$ "CYELLOW"√ß√† √¢√¢√Æ√§ √Ø√∞√Æ√¨√Æ√™√ÆS√≠");
				}
			}
			case 12:
			{
				if(pData[playerid][pPromoUsed])
				{
					pData[playerid][pRub] += 150;
					UpdatePlayerData(playerid, "pRub", pData[playerid][pRub]);

					SCM(playerid, COLOR_YELLOW, "√Ç√ª √Ø√Æ√´√≥√∑√®√´√® {77DDFF}150 √∞√≥√°√´√•√© "CYELLOW"√≠√† √±√¢√Æ√© √§√Æ√≠√†√≤ √±√∑¬∏√≤ √ß√† √¢√¢√Æ√§ √Ø√∞√Æ√¨√Æ√™√ÆS√≠");
				}
			}
		}
	}
}
CB: LoginTimeExpired(playerid)
{
	if(!pData[playerid][pLogin])
	{
		SCM(playerid, COLOR_ERROR, "√Ç√∞√•√¨√ø √≠√† √†√¢√≤√Æ√∞√®√ß√†√∂√®√æ √Æ√£√∞√†√≠√®√∑√•√≠√Æ");
		SCM(playerid, COLOR_ERROR, "√Ç√¢√•√§√®√≤√• √™√Æ√¨√†√≠√§√≥ /q (/quit) √§√´√ø √¢√ª√µ√ÆS√≠");
		close_dialog(playerid);
		Kick(playerid);
	}
	return 1;
}

CB: stop_mine(playerid) {
	ClearAnimations(playerid);
	SetPlayerSpecialAction(playerid, 0);
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 0, 1);
	if(pData[playerid][pLowSkill] == 1) {
		SetPlayerCheckpoint(playerid, -758.1867, -1794.3585, -39.0421-1.0, 2.0);
		pData[playerid][pMinePr] = 1;
		SetPlayerAttachedObject(playerid, 8, 3930, 5, 0.155997, -0.026000, -0.012000, -67.699874, -95.900177, -0.200002, 0.390007, 0.521007, 0.296010, 0, 0);
	}
	if(pData[playerid][pHighSkill] == 1) {
		SetPlayerCheckpoint(playerid, -764.2901, -1783.2814, -89.0200-1.0, 2.0);
		pData[playerid][pMinePr] = 2;
		SetPlayerAttachedObject(playerid, 8, 3930, 5, 0.155997, -0.026000, -0.012000, -67.699874, -95.900177, -0.200002, 0.390007, 0.521007, 0.296010, 0, 0);
	}
}
stock UpdateMineProgress(playerid, ruda) {
	new buffmine[8], UU_oneprod_mine = oneprod_mine / 8;

	format(buffmine, sizeof(buffmine), "%d kg", ruda);
	PlayerTextDrawSetString(playerid, MineAmountPTD[playerid], buffmine);

	format(buffmine, sizeof(buffmine), "%d$", ruda * UU_oneprod_mine);
	PlayerTextDrawSetString(playerid, MineMoneyPTD[playerid], buffmine);
}
CB: namechangecheck(playerid) {
	new rows;
	cache_get_row_count(rows);
	if(rows) return SCM(playerid, COLOR_ERROR, "√Ç√¢√•√§¬∏√≠√≠√Æ√• √®√¨√ø √≥√¶√• √®√±√Ø√Æ√´√º√ß√≥√•√≤√±√ø √§√∞√≥√£√®√¨ √®√£√∞√Æ√™√Æ√¨");
	string[0] = EOS;
	mysql_format(mysql_Handle, string, 164, "SELECT * FROM `accounts` WHERE `Name` = '%s'", pData[playerid][pName]);
	mysql_tquery(mysql_Handle, string, "namechange", "d", playerid);
	return 1;
}
CB: namechange(playerid)
{
	string[0] = EOS;
	format(string, 128, "[√ë√¨√•√≠√† non-RP √®√¨√•√≠√®] %s >> %s {99CC66}| /okay %i √§√´√ø √Æ√§√Æ√°√∞√•√≠√®√ø, /nookay %d √§√´√ø √Æ√≤√™√†√ß√†",pData[playerid][pName],changename[playerid],playerid,playerid);
	AdminMessage(0x669966FF, string);
	SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{FFCD00}√á√†√ø√¢√™√† √≠√† √®√ß√¨√•√≠√•√≠√®√• √®√¨√•√≠√®", "\
		"CWHITE"√Ç√†√∏√† √Ø√∞√Æ√±√º√°√† √Æ√° √®√ß√¨√•√≠√•√≠√®√® √≠√®√™√† √Æ√≤√Ø√∞√†√¢√´√•√≠√† √†√§√¨√®√≠√®√±√≤√∞√†√∂√®√®.\n\
		√Ç√ª √Ø√Æ√´√≥√∑√®√≤√• √±√Æ√Æ√°√π√•√≠√®√•, √™√†√™ √≤√Æ√´√º√™√Æ √ß√†√ø√¢√™√† √°√≥√§√•√≤ √Æ√°√∞√†√°√Æ√≤√†√≠√†.",
	"Cerrar", "");
	SetPVarInt(playerid, "setname", 1);
}
stock create_floor_objs_1(playerid, vworld) {
	#include <floor_1>
}
stock create_floor_objs_2(playerid, vworld) {
	#include <floor_2>
}
stock create_floor_objs_3(playerid, vworld) {
	#include <floor_3>
}
stock create_floor_objs_4(playerid, vworld) {
	#include <floor_4>
}
stock create_floor_objs_5(playerid, vworld) {
	#include <floor_5>
}
stock create_floor_objs_6(playerid, vworld) {
	#include <floor_6>
}
stock create_floor_objs_7(playerid, vworld) {
	#include <floor_7>
}
stock create_floor_objs_8(playerid, vworld) {
	#include <floor_8>
}
stock create_floor_objs_9(playerid, vworld) {
	#include <floor_9>
}
stock create_floor_objs_10(playerid, vworld) {
	#include <floor_10>
}
stock create_floor_objs_11(playerid, vworld) {
	#include <floor_11>
}
stock create_floor_objs_12(playerid, vworld) {
	#include <floor_12>
}
stock AddCheater(type, id) // type: 0 - √ß√•√´¬∏√≠√ª√© id, 1 - √°√•√´√ª√© id, 2 - √±√®√≠√®√© id
{
	new n = 0;
	if(type == 1) n = 1;
	new tmp[11][7];
	for(new i = 0; i < 11; i++) format(tmp[i], 7, cheatpanelText[n][i]);
	for(new i = 0; i < 11; i++) format(cheatpanelText[n][i+1], 7, tmp[i]);
	format(cheatpanelText[n][0], 8, "%s%i", type == 0 ? "~g~" : type == 2 ? "~b~" : "", id);
	new str[108-3+1];
	format(str, sizeof(str), "%s   %s   %s   %s   %s   %s   %s   %s   %s   %s   %s   %s",
	cheatpanelText[n][0], cheatpanelText[n][1], cheatpanelText[n][2], cheatpanelText[n][3], cheatpanelText[n][4], cheatpanelText[n][5],
	cheatpanelText[n][6], cheatpanelText[n][7], cheatpanelText[n][8], cheatpanelText[n][9], cheatpanelText[n][10], cheatpanelText[n][11]);
	TextDrawSetString(cheatpanelTD[n], str);
	return 1;
}

stock GetCoordDoorVehicle(vehicleid, &Float:x, &Float:y, &Float:z) {
    new Float: angle,
        Float: distance;
    GetVehicleModelInfo(GetVehicleModel(vehicleid), 1, x, distance, z);  // √§√´√®√≠√≥ √†√¢√≤√Æ √≥√ß√≠√†√•√¨
    distance = distance/2 + 0.1; // √Ø√Æ√´√≥√∑√•√≠√≠√≥√æ √§√´√®√≠√≥ √§√•√´√®√¨ √≠√† √§√¢√†
    GetVehiclePos(vehicleid, x, y, z); // √≥√ß√≠√†¬∏√¨ √™√Æ√Æ√∞√§√®√≠√†√≤√ª √†√¢√≤√Æ
    GetVehicleZAngle(vehicleid, angle); // √≥√ß√≠√†√•√¨ √≥√£√Æ√´ √Ø√Æ√¢√Æ√∞√Æ√≤√† √†√¢√≤√Æ
    x -= (distance * floatsin(-angle+89, degrees)); // √¢√ª√∑√®√≤√†√•√¨ √™√Æ√Æ√∞√§√®√≠√†√≤√≥ x √§√¢√•√∞√®
    y -= (distance * floatcos(-angle+89, degrees)); // √¢√ª√∑√®√≤√†√•√¨ √™√Æ√Æ√∞√§√®√≠√†√≤√≥ y √§√¢√•√∞√®
    return 1;
}
stock CreateTextMebel(name[],price,number,Float:pX,Float:pY,Float:pZ,status=0) {
	new text[150];
	format(text,sizeof(text),"%s\n"CPALEGREEN"%d$\n"CWHITE"√ç√Æ√¨√•√∞ √≤√Æ√¢√†√∞√†\n{8080ff}%d",name,price,number);
	if(status) CreateDynamic3DTextLabel(text,0xFFAA00FF,pX,pY,pZ,12);
	else CreateDynamic3DTextLabel(text,0xFFAA00FF,pX,pY,pZ,4.5);
	format(elmebel_name[TOTAL_ELEMENT_MEBEL],50,name);
	elmebel_price[TOTAL_ELEMENT_MEBEL] = price;
	elmebel_idobj[TOTAL_ELEMENT_MEBEL] = number;
	elmebel_posX[TOTAL_ELEMENT_MEBEL] = pX;
	elmebel_posY[TOTAL_ELEMENT_MEBEL] = pY;
	elmebel_posZ[TOTAL_ELEMENT_MEBEL] = pZ;
	TOTAL_ELEMENT_MEBEL++;
}

CB: OnCheatDetected(playerid, const ip_address[], type, code)
{
	if(playerid == -1 || playerid == INVALID_PLAYER_ID) return 1;
	if(GetPVarInt(playerid, "RegisterPlayer")==1 || pData[playerid][pLogin]==false) return 1;
	if(pData[playerid][pAdmin] > 0) return 1;
	if(GetPVarInt(playerid, "ACKickFix") > gettime()) return 1;

	printf("[Nex-AC] [%s] OnCheatDetected(%i, %s, %i, %i)", GetName(playerid), playerid,ip_address,type,code);
	switch(code) {
		case 5, 11, 12, 13, 14, 18, 26, 28, 32, 38, 39, 40, 53: return 1;
		case 16, 52: {
			ResetPlayerWeapons(playerid);
			return AddCheater(0, playerid);
		}
		case 17: {
			ResetPlayerWeapons(playerid);
			return AddCheater(2, playerid);
		}
		case 3, 4, 6, 7, 8, 19, 20: return AddCheater(1, playerid);
	}

	if(code == 10)
	{
		foreach(new i:Player)
		{
			if(ProxDetectorS(9.5, playerid, i))
				return 1;
		}
	}
	new acHour, acMin, acSec;
	gettime(acHour, acMin, acSec);

	new acstr[850] =
	"{ff6666}√Ç√ª √°√ª√´√® √Æ√≤√±√Æ√•√§√®√≠√•√≠√ª √Æ√≤ √±√•√∞√¢√•√∞√† √†√≠√≤√®√∑√®√≤ √±√®√±√≤√•√¨√Æ√©.\n\n\
	"CWHITE"√ç√• √®√±√™√´√æ√∑√•√≠√Æ, √∑√≤√Æ √Ω√≤√Æ √¨√Æ√£√´√Æ √Ø√∞√Æ√®√ß√Æ√©√≤√® √Ø√Æ √Æ√∏√®√°√™√•, √¢ √≤√†√™√Æ√¨ √±√´√≥√∑√†√•, √Ø√∞√®√≠√Æ√±√®√¨ √±√¢√Æ√® √®√ß√¢√®√≠√•√≠√®√ø.\n\
	√Ç√ª √¨√Æ√¶√•√≤√• √Ø√Æ√¨√Æ√∑√º √≠√†√¨ √¢ √≥√´√≥√∑√∏√•√≠√®√® √†√≠√≤√®√∑√®√≤ √±√®√±√≤√•√¨√ª, √§√´√ø √Ω√≤√Æ√£√Æ √±√§√•√´√†√©√≤√• √±√™√∞√®√≠√∏√Æ√≤ √Ω√™√∞√†√≠√† {99CC33}(F8)\n\
	"CWHITE"√® √Æ√≤√Ø√∞√†√¢√º√≤√• √•√£√Æ √≠√† √≠√†√∏ √¥√Æ√∞√≥√¨ √¢ {99CC33}√í√•√µ√≠√®√∑√•√±√™√®√© √∞√†√ß√§√•√´ > √é√∏√®√°√Æ√∑√≠√ª√• √±√∞√†√°√†√≤√ª√¢√†√≠√®√ø √†√≠√≤√®√∑√®√≤√†.\n\n\
	{cecece}√ç√®√¶√• √Ø√∞√®√¢√•√§√•√≠√ª S√≠√≠√≠√ª√•, √Ø√Æ√´√≥√∑√•√≠√≠√ª√• √Æ√≤ √†√≠√≤√®√∑√®√≤ √±√®√±√≤√•√¨√ª:\n";
	format(acstr, sizeof(acstr), "%s\
	√ç√®√™: {99CC33}%s\n\
	{cecece}√ä√Æ√§: {99CC33}#%03i\n\
	{cecece}√á√†√§√•√∞√¶√™√†: {99CC33}%i √¨√±.\n\
	{cecece}√Ç√∞√•√¨√ø √≠√† √¨√Æ√¨√•√≠√≤ √±√∞√†√°√†√≤√ª√¢√†√≠√®√ø: {99CC33}%02d:%02d:%02d\n\n\
	\t{ff6640}√ç√†√Ø√Æ√¨√®√≠√†√•√¨, √∑√≤√Æ √®√±√Ø√Æ√´√º√ß√Æ√¢√†√≠√®√• √∑√®√≤-√Ø√∞√Æ√£√∞√†√¨√¨ √≠√†√™√†√ß√ª√¢√†√•√≤√±√ø √°√´√Æ√™√®√∞√Æ√¢√™√Æ√© √†√™√™√†√≥√≠√≤√†", acstr, GetName(playerid), code, GetPlayerPing(playerid), acHour, acMin, acSec);
	SPD(playerid, 0, DIALOG_STYLE_MSGBOX, ""CERROR"√ì√¢√•√§√Æ√¨√´√•√≠√®√• √±√®√±√≤√•√¨√ª √°√•√ß√Æ√Ø√†√±√≠√Æ√±√≤√®", acstr, "Cerrar", "");

	Kick(playerid);
	return 1;
}

CB: OnVehicleDestroy(vehicleid)
{
	if(traintext[vehicleid] != Text3D:INVALID_3DTEXT_ID)
	{
		DestroyDynamic3DTextLabel(traintext[vehicleid]);
		traintext[vehicleid] = Text3D:INVALID_3DTEXT_ID;
	}

	Derby_OnVehicleDestroy(vehicleid);

	destroy_objects_and_tune(vehicleid);
	DeleteVehicleDetails(vehicleid);
	for(new z = 0; z < MAX_DETAILS_ON_VEHICLE; ++z)
	{
   		g_iVehicleDetails[vehicleid][z][eObjectID] = -1;
	}
	RemoveNeonFromVehicle(vehicleid);

	return 1;
}
public OnVehicleDeath(vehicleid, killerid)
{
	if(traintext[vehicleid] != Text3D:INVALID_3DTEXT_ID)
	{
		DestroyDynamic3DTextLabel(traintext[vehicleid]);
		traintext[vehicleid] = Text3D:INVALID_3DTEXT_ID;
	}

	Derby_OnVehicleDeath(vehicleid, killerid);

	destroy_objects_and_tune(vehicleid);
	DeleteVehicleDetails(vehicleid);
	for(new z = 0; z < MAX_DETAILS_ON_VEHICLE; ++z)
	{
   		g_iVehicleDetails[vehicleid][z][eObjectID] = -1;
	}
	RemoveNeonFromVehicle(vehicleid);

	if(status_strobocop[vehicleid]) {
		KillTimer(timer_strobocop[vehicleid]);
	    status_strobocop[vehicleid] = false;
	    new panels, doors, lights, tires;
	    GetVehicleDamageStatus(vehicleid, panels, doors, lights, tires);
	    UpdateVehicleDamageStatus(vehicleid, panels, doors, 0, tires);
	}
	return 1;
}
public OnVehicleSpawn(vehicleid)
{
	if(traintext[vehicleid] != Text3D:INVALID_3DTEXT_ID)
	{
		DestroyDynamic3DTextLabel(traintext[vehicleid]);
		traintext[vehicleid] = Text3D:INVALID_3DTEXT_ID;
	}

	Derby_OnVehicleSpawn(vehicleid);

	destroy_objects_and_tune(vehicleid);
	DeleteVehicleDetails(vehicleid);
	for(new z = 0; z < MAX_DETAILS_ON_VEHICLE; ++z)
	{
   		g_iVehicleDetails[vehicleid][z][eObjectID] = -1;
	}
	RemoveNeonFromVehicle(vehicleid);

	if(vehicleid >= veh_bus[0] && vehicleid <= veh_bus[1]) {
		new numobj;
		if(vehicleid==veh_bus[0]) numobj=0;
		if(vehicleid==veh_bus[0]+1) numobj=1;
		if(vehicleid==veh_bus[0]+2) numobj=2;
		if(vehicleid==veh_bus[0]+3) numobj=3;
		if(vehicleid==veh_bus[0]+4) numobj=4;
		if(vehicleid==veh_bus[0]+5) numobj=5;
		if(vehicleid==veh_bus[0]+6) numobj=6;
		if(vehicleid==veh_bus[0]+7) numobj=7;
		if(vehicleid==veh_bus[0]+8) numobj=8;
		if(vehicleid==veh_bus[0]+9) numobj=9;
		if(vehicleid==veh_bus[0]+10) numobj=10;
		if(vehicleid==veh_bus[0]+11) numobj=11;
		if(vehicleid==veh_bus[0]+12) numobj=12;
		if(vehicleid==veh_bus[1]) numobj=13;

		DestroyObject(bus_text1[numobj]);
		DestroyObject(bus_text2[numobj]);

		bus_text1[numobj] = CreateObject(19482, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 300.000000);
   		bus_text2[numobj] = CreateObject(19482, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 300.000000);
	    SetObjectMaterialText(bus_text1[numobj], "√Å√•√ß √¨√†√∞√∏√∞√≥√≤√†", 0, 130, "TUNGA", 50, 1, -1, 0, 0);
	    SetObjectMaterialText(bus_text2[numobj], "√Å√•√ß √¨√†√∞√∏√∞√≥√≤√†", 0, 130, "TUNGA", 50, 1, -1, 0, 2);
	    AttachObjectToVehicle(bus_text1[numobj], vehicleid, -1.310000, 0.440000, -0.600000, 0.000000, 0.000000, -180.000000);
    	AttachObjectToVehicle(bus_text2[numobj], vehicleid, 1.310000, 0.440000, -0.600000, 0.000000, 0.000000, 0.000000);
	}

	if(amg_mode[vehicleid]) amg_mode[vehicleid] = false;

	if(boost_veh_lvl[vehicleid] != 0) boost_veh_lvl[vehicleid] = 0;
	if(braking_veh_lvl[vehicleid] != 0) braking_veh_lvl[vehicleid] = 0;

	if(set_boost_by_adm[vehicleid]) set_boost_by_adm[vehicleid] = false;
	if(set_brake_by_adm[vehicleid]) set_brake_by_adm[vehicleid] = false;

	if(status_strobocop[vehicleid]) {
		KillTimer(timer_strobocop[vehicleid]);
	    status_strobocop[vehicleid] = false;
	    new panels, doors, lights, tires;
	    GetVehicleDamageStatus(vehicleid, panels, doors, lights, tires);
	    UpdateVehicleDamageStatus(vehicleid, panels, doors, 0, tires);
	}
	
	VehInfo[vehicleid][vehicleX] = 0;
	VehInfo[vehicleid][vehicleY] = 0;
	VehInfo[vehicleid][vehicleZ] = 0;
	VehInfo[vehicleid][vehicleA] = 0;

	if(vehicleid == boost_lspdcar || vehicleid == boost_sfpdcar || vehicleid == boost_lvpdcar) {
		boost_veh_lvl[vehicleid] = 10;
		braking_veh_lvl[vehicleid] = 8;
	}
	if(vehicleid == bulletboostls || vehicleid == bulletboostsf || vehicleid == bulletboostlv) {
		boost_veh_lvl[vehicleid] = 10;
		braking_veh_lvl[vehicleid] = 8;
	}
	if(robcar[vehicleid]) {
		robcar[vehicleid] = false;
		Delete3DTextLabel(carom[vehicleid]);
	}
	if(AdminCar[vehicleid]) {
		AdminCar[vehicleid] = false;
		DestroyVehicle(vehicleid);
	}
	if(vehicleid == armcar[0] + 1) {
		metarmy_count[0] = 0;
		UpdateDynamic3DTextLabelText(metarmy_3d[0], COLOR_LITEBLUE, "√Ñ√Æ√±√≤√†√¢√™√† √¨√•√≤√†√´√´√†\n"CORANGE"√á√†√£√∞√≥√¶√•√≠√Æ: "CERROR"0 √®√ß 700");
	}
	if(vehicleid == vvcveh[1] - 1) {
		metarmy_count[1] = 0;
		UpdateDynamic3DTextLabelText(metarmy_3d[1], COLOR_LITEBLUE, "√Ñ√Æ√±√≤√†√¢√™√† √¨√•√≤√†√´√´√†\n"CORANGE"√á√†√£√∞√≥√¶√•√≠√Æ: "CERROR"0 √®√ß 700");
	}
	if(vehicleid == vmfcar[0] + 1) {
		metarmy_count[2] = 0;
		UpdateDynamic3DTextLabelText(metarmy_3d[2], COLOR_LITEBLUE, "√Ñ√Æ√±√≤√†√¢√™√† √¨√•√≤√†√´√´√†\n"CORANGE"√á√†√£√∞√≥√¶√•√≠√Æ: "CERROR"0 √®√ß 700");
	}
	if(vehicleid >= prodworker[0] && vehicleid <= prodworker[1]) {
		foreach(new drivelast:Player) {
			if(!prodworker_status[drivelast]) continue;
			if(prodworker_vehicle[drivelast] != vehicleid) continue;
			prodwork_bizid[drivelast] = 0;
			prodworker_status[drivelast] = false;
			new prk_idveh = prodworker_vehicle[drivelast];
			prodworker_vehicle[drivelast] = -1;
			SetVehicleToRespawn(prk_idveh);
			DestroyDynamic3DTextLabel(prodwork_3d[prk_idveh]);
			SCM(drivelast, COLOR_YELLOW, "√ê√†√°√Æ√∑√®√© √§√•√≠√º √∞√†√ß√¢√Æ√ß√∑√®√™√† √Ø√∞√Æ√§√≥√™√≤√Æ√¢ √ß√†√¢√•√∞√∏√•√≠");
			if(prodwork_prods[drivelast] > 0) {
				new oplate = prodwork_prods[drivelast] * 25;
				Hook_GivePlayerMoney(drivelast, oplate);
				new gametext_hook[30];
				format(gametext_hook, 30, "~g~+%d$", oplate);
				GameTextForPlayer(drivelast, gametext_hook, 3000, 1);
				SCMF(drivelast, COLOR_LITEBLUE, "√Ç√†√¨ √°√ª√´√† √¢√Æ√ß√¢√∞√†√π√•√≠√† √±√≤√Æ√®√¨√Æ√±√≤√º √™√≥√Ø√´√•√≠√≠√ª√µ √Ø√∞√Æ√§√≥√™√≤√Æ√¢: "CMAIN"%d$", oplate);
			}
			prodwork_prods[drivelast] = 0;
			break;
		}
	}
	if(rentID[vehicleid] != -1) {
		rentID[vehicleid] = -1;
		if(vehicleid >= af_orig_truck[0] && vehicleid <= af_orig_truck[1]) {
			foreach(new i:Player) {
				if(GetPVarInt(i, "veh_rent") != vehicleid) continue;
				SetPVarInt(i, "veh_rent", -1);
				af_player_loadready[i] = false;
				af_player_lootstatus[i]=false;
				RemoveCarFromTruckBody(i);
				af_player_status[i] = false;
				af_carID[i] = 0;
				break;
			}
		}
		else {
			foreach(new i:Player) {
				if(GetPVarInt(i, "veh_rent") != vehicleid) continue;
				SetPVarInt(i, "veh_rent", -1);
				break;
			}
			DestroyVehicle(vehicleid);
		}
	}
	if(ammobox_ic[vehicleid] > 0) {
		ammobox_ic[vehicleid] = 0;
		DestroyDynamic3DTextLabel(text_ammoload[vehicleid]);
	}
	if(vehicleid >= veh_taxi[0] && vehicleid <= veh_taxi[1]) {
		foreach(new drivelast:Player) {
			if(last_vehiclejob[drivelast] != vehicleid) continue;
			if(dead_pljob[drivelast]) break;
			Delete3DTextLabel(taxi3d[vehicleid]);
			last_vehiclejob[drivelast] = -1;
			new Float: car_floathp; GetVehicleHealth(GetPlayerVehicleID(drivelast), car_floathp); new car_hp = floatround(car_floathp, floatround_ceil), repair_price = (1000-car_hp)/3;
			if(repair_price == 333) repair_price = 0;
			SCMF(drivelast, COLOR_MAIN, "√ê√†√°√Æ√≤√† √≤√†√™√±√®√±√≤√† √ß√†√¢√•√∞√∏√•√≠√†. √Ç√ª √ß√†√∞√†√°√Æ√≤√†√´√®: {009966}%d$"CMAIN". √á√† √∞√•√¨√Æ√≠√≤ √≤√†√™√±√®: "CERROR"-%d$", taxi_payday[drivelast], repair_price);
			SCMF(drivelast, COLOR_MAIN, "√Ç√±√•√£√Æ √Ø√•√∞√•√¢√•√ß√•√≠√Æ √Ø√†√±√±√†√¶√®√∞√Æ√¢: {FFCD00}%d", taxi_passengers[drivelast]);
			SCM(drivelast, 0x009900FF, "√Ñ√•√≠√º√£√® √°√≥√§√≥√≤ √Ø√•√∞√•√∑√®√±√´√•√≠√ª √¢√†√¨ √¢√Æ √¢√∞√•√¨√ø √¢√ªS√≠√∑√® √ß√†√∞√Ø√´√†√≤√ª");
			DeletePVar(drivelast, "time_taxiexit");
			if(repair_price != 0) {
				format(string, 32, "~r~-%d$ ~n~~r~ repair taxi", repair_price);
				GameTextForPlayer(drivelast, string, 3000, 1);
				Hook_GivePlayerMoney(drivelast, -repair_price);
			}
			foreach(new i:Player) {
				if(!passenger_taxien[i] && GetPVarInt(i, "driver_taxi") != drivelast) continue;
				KillTimer(timer_taxipas[i]); passenger_taxien[i] = false; DeletePVar(i, "driver_taxi");
			}
			GivePayDayMoney(drivelast, taxi_payday[drivelast]);
			arenda_taxi[drivelast] = false;
			arenda_taxi_id[drivelast] = -1;
			player_is_taxi[drivelast] = false, taxi_type[drivelast] = -1, taxi_passengers[drivelast] = 0, taxi_payday[drivelast] = 0, taxi_tarif[drivelast] = -1;
		}
	}
	if(vehicleid >= veh_bus[0] && vehicleid <= veh_bus[1]) {
		foreach(new drivelast:Player) {
			if(last_vehiclejob[drivelast] != vehicleid) continue;
			if(dead_pljob[drivelast]) break;
			DisablePlayerRaceCheckpoint(drivelast);
			last_vehiclejob[drivelast] = -1; KillTimer(timer_bus[drivelast]);
			new Float: car_floathp; GetVehicleHealth(GetPlayerVehicleID(drivelast), car_floathp); new car_hp = floatround(car_floathp, floatround_ceil), repair_price = (1000-car_hp)/3;
			SCM(drivelast, COLOR_LITEBLUE, "√ê√†√°√Æ√≤√† √¢√Æ√§√®√≤√•√´√ø √†√¢√≤√Æ√°√≥√±√† √ß√†√¢√•√∞√∏√•√≠√†");
			SCMF(drivelast, COLOR_LITEBLUE, "√Ç√ª √ß√†√∞√†√°√Æ√≤√†√´√®: {009966}%d$"CLITEBLUE". √á√† √∞√•√¨√Æ√≠√≤ √†√¢√≤√Æ√°√≥√±√†: "CERROR"-%d$", bus_payday[drivelast], repair_price);
			SCMF(drivelast, COLOR_LITEBLUE, "√Ç√±√•√£√Æ √Ø√•√∞√•√¢√•√ß√•√≠√Æ √Ø√†√±√±√†√¶√®√∞√Æ√¢: {FFCD00}%d", bus_passengers[GetPlayerVehicleID(drivelast)]);
			SCM(drivelast, 0x009900FF, "√Ñ√•√≠√º√£√® √°√≥√§√≥√≤ √Ø√•√∞√•√∑√®√±√´√•√≠√ª √¢√†√¨ √¢√Æ √¢√∞√•√¨√ø √¢√ªS√≠√∑√® √ß√†√∞√Ø√´√†√≤√ª");
			if(repair_price != 0) {
				format(string, 32, "~r~-%d$ ~n~~r~ repair bus", repair_price);
				GameTextForPlayer(drivelast, string, 3000, 1);
				Hook_GivePlayerMoney(drivelast, -repair_price);
			}
			GivePayDayMoney(drivelast, bus_payday[drivelast]);
			bus_passengers[GetPlayerVehicleID(drivelast)] = 0, bus_driverid[GetPlayerVehicleID(drivelast)] = INVALID_PLAYER_ID;
			DeletePVar(drivelast, "time_busexit");
			arenda_bus[drivelast] = false;
			player_is_drivebus[drivelast] = false;
			arenda_bus_id[drivelast] = -1;
		}
	}
    VehInfo[vehicleid][vFuel] = 50.0;
	VehInfo[vehicleid - 1][vEngine] = false;
	VehInfo[vehicleid - 1][vLamp] = false;
	ToggleLock(vehicleid);
	foreach(new i:Player) {
		if(vehicleid == house_carid[i][0]) LoadCarPlayer(i, 1);
		else if(vehicleid == house_carid[i][1]) LoadCarPlayer(i, 2);
		else if(vehicleid == house_carid[i][2]) LoadCarPlayer(i, 3);
	}

	return 1;
}

stock GetCountItem(playerid,type) {
	new count;
	for(new i = 0; i < MAX_INV_SLOTS; i ++) {
		if(inv_info[playerid][i_type][i] == type) {
			count = inv_info[playerid][i_count][i];
			return count;
		}
	}
	return 0;
}
stock update_items_inventory(playerid) {
	if(pData[playerid][pSpal] > 0 && GetCountItem(playerid,0) != pData[playerid][pSpal]) {
		RemoveItemFromInventory(playerid, 0);
		AddItemToInventory(playerid, pData[playerid][pSpal], 0);
	}
	if(pData[playerid][pSiga] > 0 && GetCountItem(playerid,1) != pData[playerid][pSiga]) {
		RemoveItemFromInventory(playerid, 1);
		AddItemToInventory(playerid, pData[playerid][pSiga], 1);
	}
	if(pData[playerid][pPnumber] != -1 && GetCountItem(playerid,3) != 1) {
		RemoveItemFromInventory(playerid, 3);
		AddItemToInventory(playerid, 1, 3);
	}
	if(pData[playerid][pPnumber] == -1) 
		RemoveItemFromInventory(playerid, 3);
	if(pData[playerid][pAptech] > 0 && GetCountItem(playerid,4) != pData[playerid][pAptech]) {
		RemoveItemFromInventory(playerid, 4);
		AddItemToInventory(playerid, pData[playerid][pAptech], 4);
	}
	if(pData[playerid][pMasks] > 0 && GetCountItem(playerid,5) != pData[playerid][pMasks]) {
		RemoveItemFromInventory(playerid, 5);
		AddItemToInventory(playerid, pData[playerid][pMasks], 5);
	}
	if(pData[playerid][pRec] && GetCountItem(playerid,6) != 1) {
		RemoveItemFromInventory(playerid, 6);
		AddItemToInventory(playerid, 1, 6);
	}
	if(pData[playerid][casino_amount] > 0 && GetCountItem(playerid,8) != pData[playerid][casino_amount]) {
		RemoveItemFromInventory(playerid, 8);
		AddItemToInventory(playerid, pData[playerid][casino_amount], 8);
	}
}
stock GetPlayerSpeed(player)
{
    new Float:x,Float:y,Float:z;
    GetVehicleVelocity(GetPlayerVehicleID(player),x,y,z);
    return floatround(floatsqroot(x*x+y*y+z*z)*195);
} 
EnableGPS(playerid,Float:gpsposx,Float:gpsposy,Float:gpsposz) {
	SetPVarInt(playerid, "playerisGPS", 1);
	PlayerPlaySound(playerid, 4601, 0.0, 0.0, 0.0);

	for(new i = 0; i < sizeof(gps_TD); i++)
		TextDrawShowForPlayer(playerid, gps_TD[i]);

	DestroyDynamicMapIcon(gpsicon[playerid]);
	DestroyDynamicArea(gpssphere[playerid]);
	gpssphere[playerid] = CreateDynamicSphere(gpsposx,gpsposy,gpsposz, 27.5,-1,-1,playerid);
	gpsicon[playerid] = CreateDynamicMapIcon(gpsposx,gpsposy,gpsposz, 56, 0, -1, -1, playerid, 9999.0, MAPICON_GLOBAL);
	Streamer_Update(playerid, STREAMER_TYPE_MAP_ICON);
}
DisableGPS(playerid) {
	if(!GetPVarInt(playerid, "playerisGPS")) 
		return 1;
	DeletePVar(playerid,"playerisGPS");
	DestroyDynamicArea(gpssphere[playerid]);
	for(new i = 0; i < sizeof(gps_TD); i++)
		TextDrawHideForPlayer(playerid, gps_TD[i]);
	return DestroyDynamicMapIcon(gpsicon[playerid]);
}
stock GetPlayerCameraLookAt(playerid, &Float:X, &Float:Y, &Float:Z)
{
    new Float:CamX, Float:CamY, Float:CamZ,
        Float:FrX, Float:FrY, Float:FrZ;

    GetPlayerCameraPos(playerid, CamX, CamY, CamZ);
    GetPlayerCameraFrontVector(playerid, FrX, FrY, FrZ);
    X = FrX + CamX;
    Y = FrY + CamY;
    Z = FrZ + CamZ;
} 
promo_dialog(playerid)
{
	return SPD(playerid, 15425, DIALOG_STYLE_INPUT, ""CPALEGREEN"√è√∞√Æ√¨√Æ√™√Æ√§",
		""CWHITE"√Ç√¢√•√§√®√≤√• √§√•√©√±√≤√¢√≥√æ√π√®√© √Ø√∞√Æ√¨√Æ√™√Æ√§ √¢ √Ø√Æ√´√• √≠√®√¶√•\n\
		√à√±√Ø√Æ√´√º√ß√Æ√¢√†√≤√º √Ø√∞√Æ√¨√Æ√™√Æ√§ √¨√Æ√¶√≠√Æ √≤√Æ√´√º√™√Æ √Æ√§√®√≠ √∞√†√ß\n\
		\n\
		"CYELLOW"√É√§√• √¨√≠√• √≠√†√©√≤√® √§√•√©√±√≤√¢√≥√æ√π√®√© √Ø√∞√Æ√¨√Æ√™√Æ√§?\n\
		\n\
		"CWHITE"- √Ç √Æ√¥√®√∂√®√†√´√º√≠√Æ√© √£√∞√≥√Ø√Ø√• √Ç√ä√Æ√≠√≤√†√™√≤√• {ff6633}(vk.com/games_norma)\n\
		"CWHITE"- √é√≤ √æ√≤√≥√°√•√∞√†, √™√Æ√≤√Æ√∞√ª√© √±√≠√®√¨√†√•√≤ √≠√† √≠√†√∏√•√¨ √±√•√∞√¢√•√∞√•\n\
		- √ì √†√§√¨√®√≠√®√±√≤√∞√†√∂√®√® √±√•√∞√¢√•√∞√† "CLITEBLUE"(/menu > √ë√¢√ø√ß√º √± √†√§√¨√®√≠√®√±√≤√∞√†√∂√®√•√©)", 
	"√Ç√¢√•√±√≤√®", "Siguiente");
}

stock electionsMembers(playerid)
{
	string[0] = EOS;
	format(string, 200, "[1] %s\n[2] %s\n[3] %s\n[4] %s\n[5] %s", kandidat1, kandidat2, kandidat3, kandidat4, kandidat5);
	SPD(playerid, 179, DIALOG_STYLE_LIST, "{FFCD00}√ê√•S√≠√™√≤√®√∞√Æ√¢√†√≠√®√• √™√†√≠√§√®S√≠√≤√Æ√¢", string, "Cambio", "Cerrar");
}

stock GetVehicleRelativePos(vehicleid, &Float:x, &Float:y, &Float:z, Float:xoff=0.0, Float:yoff=0.0, Float:zoff=0.0)
{
    new Float:rot;
    GetVehicleZAngle(targetid, rot);
    rot = 360 - rot; // Making the vehicle rotation compatible with pawns sin/cos
    GetVehiclePos(vehicleid, x, y, z);
    x = floatsin(rot,degrees) * yoff + floatcos(rot,degrees) * xoff + x;
    y = floatcos(rot,degrees) * yoff - floatsin(rot,degrees) * xoff + y;
    z = zoff + z;

    /*
       where xoff/yoff/zoff are the offsets relative to the vehicle
       x/y/z then are the coordinates of the point with the given offset to the vehicle
       xoff = 1.0 would e.g. point to the right side of the vehicle, -1.0 to the left, etc.
    */
}

stock Get_Next_SpecID(playerid,current)
{
	new ps = GetPlayerPoolSize();
	if(ps == 1) return 1;
	
	new newid = ++current;

	get_next:

	if(newid >= ps)
    {
    	newid = 0;
    }
	if(!IsPlayerConnected(newid) || IsPlayerNPC(playerid) || playerid==newid)
	{
		newid++;
		goto get_next;
	}

	return newid;
}

cmd:sc(playerid)
{
	SCM(playerid, COLOR_LIGHTGREY, "Por el bien de {e1215d}| Normative RP");
	SCM(playerid, 0xeeceaeff, "Por el bien de {e1215d}| Normative RP");
	SCM(playerid, 0xceeeaeff, "Por el bien de {e1215d}| Normative RP");
	SCM(playerid, 0xeeaeceff, "Por el bien de {e1215d}| Normative RP");
	SCM(playerid, 0xaeeeceff, "Por el bien de {e1215d}| Normative RP");
	SCM(playerid, 0xaeeeeeff, "Por el bien de {e1215d}| Normative RP");
	SCM(playerid, 0xaeaeceff, "Por el bien de {e1215d}| Normative RP");
	SCM(playerid, 0xeaceeeff, "Por el bien de {e1215d}| Normative RP");
	SCM(playerid, 0xceaceeff, "Por el bien de {e1215d}| Normative RP");
	SCM(playerid, 0xa7d89cff, "Por el bien de {e1215d}| Normative RP");
	SCM(playerid, 0xce9eaeff, "Por el bien de {e1215d}| Normative RP");
	SCM(playerid, 0x84d492ff, "Por el bien de {e1215d}| Normative RP");
	SCM(playerid, 0xeece8eff, "Por el bien de {e1215d}| Normative RP");
}

CMD:gocar(playerid, params[]) {
	if(IsAFull(playerid))
	{
		new carid;
		if(sscanf(params, "i", carid)) return SCM(playerid, COLOR_LIGHTGREY, "Usar: /gocar [id auto]");
		if(!IsValidVehicle(carid)) return SCM(playerid, COLOR_LIGHTGREY, "La transferencia con el mismo id no existe");
		new Float:posx, Float:posy, Float:posz;
		GetVehiclePos(carid, posx,posy,posz);
		SetPlayerPos(playerid, posx,posy,posz);
		SCMF(playerid,-1, "Si te teletransportan para transferir (id %d)", carid);
	}
	return 1;
}

CMD:aeditobj(playerid) {
	if(IsAFull(playerid))
	{
		SelectObject(playerid);
		SetPVarInt(playerid, "AdmEditObjects", 1);
		SCM(playerid, 0x707070ff, "Presione sobre el objeto que desea desactivar");
	}
	return 1;
}

CMD:selobj(playerid) {
	if(IsAFull(playerid))
	{
		if(GetPVarInt(playerid, "SelectingObjects")) {
			SCM(playerid, 0x707070ff, "Modo de informaci√≥n de objeto deshabilitado");
			DeletePVar(playerid, "SelectingObjects");
		}
		else {
			SelectObject(playerid);
			SetPVarInt(playerid, "SelectingObjects", 1);
			SCM(playerid, 0x707070ff, "El modo de informaci√≥n est√° activado. Haga clic en un nuevo objeto para recibir informaci√≥n");
			SCM(playerid, 0x707070ff, "Ingrese el comando nuevamente para apagar el modo");
		}
	}
	return 1;
}

CMD:cordinfo(playerid)
{
	if(pData[playerid][pAdmin] < 7) return 1;

	SCMF(playerid, 0xFF9945FF, "El mundo virtual local: %d", GetPlayerVirtualWorld(playerid));
	SCMF(playerid, 0xFF9945FF, "Sitio web: %d", GetPlayerInterior(playerid));

	new Float:x, Float:y, Float:z, Float:ang;
	GetPlayerPos(playerid, x,y,z);
	GetPlayerFacingAngle(playerid, ang);
	SCMF(playerid, 0xFF9945FF, "Coordenadas actuales: (x) %f (y) %f (z) %f (a) %f", x,y,z,ang);
	return 1;
}

stock ShowAuthObjects(playerid)
{
	for(new i = auth_objs[0]; i <= auth_objs[1]; i++)
		Streamer_AppendArrayData(STREAMER_TYPE_OBJECT, i, E_STREAMER_PLAYER_ID, playerid);
}
stock HideAuthObjects(playerid)
{
	for(new i = auth_objs[0]; i <= auth_objs[1]; i++)
		Streamer_RemoveArrayData(STREAMER_TYPE_OBJECT, i, E_STREAMER_PLAYER_ID, playerid);
}

CMD:pame(playerid)
{
	if(strlen(pData[playerid][p_desc]) > 0)
	{
		new str[220];
		new text[128];
		ConvertNewLines(text, pData[playerid][p_desc]);

		format(str, sizeof(str), "\
		"CWHITE"S√≠, ha instalado la descripci√≥n.:\n\
		{888888}%s\n\n\
		"CWHITE"Quieres eliminarlo?", text);

		SPD(playerid, 109, DIALOG_STYLE_MSGBOX, "{ffcc00}Descripci√≥n del permiso", str, "Snlite", "Cerrar"); //No se traduce
	}
	else
	{
		SPD(playerid, 108, DIALOG_STYLE_INPUT, "{ffcc00}Descripci√≥n del permiso", "\
		"CWHITE"Por favor escriba una breve descripci√≥n..\n\n\
		S√≠mbolo "CLITEBLUE"/ "CWHITE"salta la l√≠nea.\n\
		La descripci√≥n se mostrar√° en la ventana de su habitaci√≥n.", "Usar", "Cerrar");
	}
	return 1;
}

stock ConvertNewLines(str[], texttoconv[], size = sizeof(str))
{
	format(str, size, texttoconv);
	for(new i = 0; i < strlen(str); i ++)
	{
		new find = strfind(str, "/");
		if(find != -1) strdel(str, find, find+1), strins(str, "\n", find, strlen(str));
	}
}

new bool:tkr_isprint, tkr_timer;
CMD:tickrate(playerid)
{
	if(!IsAFull(playerid)) return 1;

	tkr_isprint = !tkr_isprint;
	if(tkr_isprint)
	{
		tkr_timer = SetTimer("PrintTickRate", 500,1);
		SCM(playerid, COLOR_MAIN, "√á√†√Ø√®√±√º √≤√®√™√∞√•√©√≤√† √¢ √´√Æ√£ √¢√™√´√æ√∑√•√≠√†");
	}
	else
	{
		KillTimer(tkr_timer);
		SCM(playerid, COLOR_ERROR, "Escribiendo la pegatina en la posici√≥n de APAGADO");
	}
	return 1;
}
CB: PrintTickRate() printf("√í√®√™√∞√•√©√≤: %i", GetServerTickRate());

stock SplitValue(value, str[], size = sizeof(str))
{
	format(str, size, "%i", value < 0 ? -value : value);
	
	for(new i = strlen(str); (i -= 3) > 0;)
	{
		if(str[i] != EOS && '0' <= str[i] <= '9') strins(str, ".", i, size);
		else return;
	}
    if(value < 0) strins(str, "-", 0, size);
    return;
}

public OnQueryError(errorid, const error[], const callback[], const query[], MySQL:handle)
{
	new str[144];
	format(str, sizeof(str), "√é√∏√®√°√™√†: %s. ID: %i", error, errorid);
	AdminMessage(COLOR_ERROR, str);
	AdminMessage(COLOR_ERROR, "Correspondencia, informar de la misma por la administraci√≥n principal o empleo.");

	printf("OnQueryError(%i, %s, %s, %s, %i)", errorid, error, callback, query, _:handle);
	return 1;
}

stock RegChooseSkin(playerid)
{
	if(GetPVarInt(playerid, "Register_ChooseSkin")==1)
	{
		switch(GetPVarInt(playerid, #reg_sex))
		{
			case 1:
			{
				PlayerTextDrawSetString(playerid, text_selectskin[playerid], "Homeless");
				SetPlayerSkin(playerid, 78);
	    		number_skin[playerid] = 1;
			}
			case 2:
			{
				PlayerTextDrawSetString(playerid, text_selectskin[playerid], "Bottomless");
				SetPlayerSkin(playerid, 13);
	    		number_skin[playerid] = 12;
			}
		}
		SetPVarInt(playerid, "RegCurrentSkin", GetPlayerSkin(playerid));
		SetSpawnInfo(playerid, 255, GetPlayerSkin(playerid), -220.8868,-1735.5038,1.5434, 137, 0,0,0,0,0,0);

		TogglePlayerSpectating(playerid, 0);
		TogglePlayerControllable(playerid, 0);
		SetTimerEx("unfreeze_fix_Spawn", 3000, 0, "i", playerid);
		SpawnPlayer(playerid);

		InterpolateCameraPos(playerid, -228.502807, -1740.899780, 1.907004, -223.744598, -1738.572631, 2.313195, 1500, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid, -224.586715, -1737.792114, 1.987006, -220.316543, -1735.002075, 1.606196, 1500, CAMERA_MOVE);
		auth_camstate[playerid] = 0;
		SetTimerEx("auth_camstate_delay", 1500, 0, "ii", playerid,3);

	    for(new i = 0; i < 17; i ++) TextDrawShowForPlayer(playerid, td_select_skin[i]);
	    PlayerTextDrawShow(playerid, text_selectskin[playerid]);
		SelectTextDraw(playerid, COLOR_PALEGREEN);

		SCM(playerid, COLOR_MAIN, "Primero, seleccione el exterior de su per√≠metro");

		PlayerPlaySound(playerid, 1076, 0,0,0);
		new vw = playerid + 111;
		if(GetPlayerVirtualWorld(playerid) != vw) SetPlayerVirtualWorld(playerid, vw);
	}
	return 1;
}
CB: auth_camstate_delay(playerid, s) auth_camstate[playerid] = s;

CMD:trains(playerid)
{
	if(pData[playerid][pAdmin] < 7) return 1;

	if(status_trains)
		SPD(playerid, 3000, DIALOG_STYLE_MSGBOX, ""CORANGE"La carretera√†", ""CWHITE"Quieres {ff7f7f}apagar "CWHITE"NPC La carretera√Æ√¢?", "S√≠", "No");
	else
		SPD(playerid, 3001, DIALOG_STYLE_MSGBOX, ""CORANGE"La carretera√†", ""CWHITE"Quieres {7fff7f}conectar "CWHITE"NPC La carretera√Æ√¢?", "S√≠", "No");
	return 1;
}

stock NPCTrains(bool:status)
{
	if(status_trains == status) return 1;
	status_trains = status;

	switch(status)
	{
		case false:
		{
			for(new i = 0, id; i < sizeof(train); i++)
			{
				id = train[i];
				DestroyVehicle(id);
				if(traintext[id] != Text3D:INVALID_3DTEXT_ID)
				{
					DestroyDynamic3DTextLabel(traintext[id]);
					traintext[id] = Text3D:INVALID_3DTEXT_ID;
				}
			}
			foreach(new i:Bot) Kick(i);
			print("NPC La carretera√Æ√¢ √Æ√≤√™√´√æ√∑√•√≠√ª");
		}
		case true:
		{
			for(new i = 0, id; i < sizeof(train); i++)
			{
				id = train[i] = AddStaticVehicle(538, 1722,-1953,13,270, 0, 0);
				if(traintext[id] != Text3D:INVALID_3DTEXT_ID) DestroyDynamic3DTextLabel(traintext[id]);
				traintext[id] = CreateDynamic3DTextLabel("{ff9933}La carretera\n{33a723}√Ü√Ñ √ã√ë > √Ü√Ñ √ë√î > √Ü√Ñ √ã√Ç", -1, 0, 0, 4, 10, INVALID_PLAYER_ID, id); //No se traduce
			}
			ConnectNPC("Andrey_Ringo", "train_lv");
			ConnectNPC("Tony_Barrera", "train_ls");
			ConnectNPC("El_Capone", "train_sf");
			print("NPC tiempos de conexi√≥n");
		}
	}
	return 1;
}
